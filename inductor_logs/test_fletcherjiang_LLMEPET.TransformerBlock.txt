V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_forward']
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oc/coch4ojwz3j2qkgbj74ffsajth35f3ho3hwyoqmik45zmpdkqflj.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_x, rms_x, add, x_normed, mul_1], Original ATen: [aten.linalg_vector_norm, aten.mul, aten.add, aten.div]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_x => pow_1, pow_2, sum_1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rms_x => mul
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_normed => div
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1], True), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, 0.5), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 4), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %add), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %div), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_linalg_vector_norm_mul_0 = async_compile.triton('triton_poi_fused_add_div_linalg_vector_norm_mul_0', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_linalg_vector_norm_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_linalg_vector_norm_mul_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp7
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp10
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 + tmp11
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.sqrt(tmp12)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.5
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 4.0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp1 / tmp17
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 * tmp18
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vh/cvh6cfwwr3preimj7qozxjfj4y4bq4l7jmzcekwrqcjwoc3ggowj.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone => clone_default
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_scalar
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_scalar : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_default, 1.0), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default,), kwargs = {memory_format: torch.contiguous_format})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mul_1 = async_compile.triton('triton_poi_fused_clone_mul_1', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mul_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/aq/caqmiiysszdztukbxpdadqcm4rg3wrb25tz5oxkaqfpcxwrmwqoe.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [amax, sub, exp], Original ATen: [aten._safe_softmax]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   amax => amax_default
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp_default
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_tensor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_default_2, [-1], True), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_default_2, %amax_default), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_default : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_tensor,), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_2 = async_compile.triton('triton_poi_fused__safe_softmax_2', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4p/c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_1, div, eq, logical_not, any_1, logical_not_1, full, where], Original ATen: [aten._safe_softmax]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   any_1 => any_dim
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => div_tensor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq_scalar
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   full => full_default_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not => logical_not_default
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not_1 => logical_not_default_1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_dim_int_list
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   where => where_self
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_dim_int_list : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_default, [-1], True), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_default, %sum_dim_int_list), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_scalar : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%view_default_2, -inf), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq_scalar,), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %any_dim : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not_default, -1, True), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_dim,), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_self : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_default_1, %full_default_2, %div_tensor), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_3 = async_compile.triton('triton_poi_fused__safe_softmax_3', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = float("-inf")
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 == 0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (tmp4 != 0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 == tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 == 0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int64)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = (tmp9 != 0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 | tmp10
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 == tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 == 0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = (tmp15 != 0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 | tmp16
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 == tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 == 0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = (tmp21 != 0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 | tmp22
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 == 0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp25 / tmp32
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp24, tmp34, tmp33)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp35, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/an/cany2jbw2jdajpiihiclpvumcasljofi46nmewpzgmcfjpkuy5qh.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone_2 => clone_default_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default_3,), kwargs = {memory_format: torch.contiguous_format})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lr/clr26fclfpkos4lxl2xj52stzuean7eod2b5mwt6caeq5gakyx2u.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add_1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_x_1 => pow_3, pow_4, sum_3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rms_x_1 => mul_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_1, 2), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [-1], True), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_4, 0.5), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 4), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_linalg_vector_norm_mul_5 = async_compile.triton('triton_poi_fused_add_linalg_vector_norm_mul_5', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_linalg_vector_norm_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_linalg_vector_norm_mul_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = libdevice.sqrt(tmp18)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.5
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 4.0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp23, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dm/cdmp4i2lbdsm3y7z24vs3unwsgp7vou2vdizuowof6rrtirpi4zp.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2, x_normed_1, mul_3], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul, aten.div]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add_1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_x_1 => pow_3, pow_4, sum_3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rms_x_1 => mul_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_normed_1 => div_3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_1, 2), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [-1], True), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_4, 0.5), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 4), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_1, %add_2), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, %div_3), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_linalg_vector_norm_mul_6 = async_compile.triton('triton_poi_fused_add_div_linalg_vector_norm_mul_6', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_linalg_vector_norm_mul_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_linalg_vector_norm_mul_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5b/c5boxqblmqsst63m4qrq75qfizepk2lpfeuplo6yduqkzsfez62o.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [silu, mul_4], Original ATen: [aten.silu, aten.mul]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_5
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu => mul_4, sigmoid
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_19,), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_19, %sigmoid), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %view_21), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_silu_7 = async_compile.triton('triton_poi_fused_mul_silu_7', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_silu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_silu_7(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 192
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5d/c5d3athr4zdixpaojhyweppagomjolkjgi5lvqngnnvwuympqsof.py
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h, out], Original ATen: [aten.add]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add_1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => add_3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %view_23), kwargs = {})
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_8 = async_compile.triton('triton_poi_fused_add_8', '''
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_8(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp4, xmask)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4), (4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (12, 4), (4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (12, 4), (4, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 12), (12, 1))
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_x, rms_x, add, x_normed, mul_1], Original ATen: [aten.linalg_vector_norm, aten.mul, aten.add, aten.div]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_linalg_vector_norm_mul_0.run(primals_2, primals_1, buf0, 64, grid=grid(64), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xq], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 4), (1, 4), 0), out=buf1)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xk], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xv], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), out=buf3)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_1.run(buf1, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf1, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf1  # reuse
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, clone_1], Original ATen: [aten.mul, aten.clone]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_1.run(buf2, buf5, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm], Original ATen: [aten.bmm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf5, (16, 1, 4), (4, 0, 1), 0), out=buf6)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [amax, sub, exp], Original ATen: [aten._safe_softmax]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_2.run(buf6, buf7, 256, grid=grid(256), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, div, eq, logical_not, any_1, logical_not_1, full, where], Original ATen: [aten._safe_softmax]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_3.run(buf6, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf2, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf2  # reuse
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf3, buf9, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 1), 0); del buf3  # reuse
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm_1], Original ATen: [aten.bmm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf8, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf9, (16, 4, 1), (4, 1, 0), 0), out=buf10)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf10, buf11, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf10, (16, 4), (4, 1), 0); del buf10  # reuse
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf11, (16, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf12)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_linalg_vector_norm_mul_5.run(primals_1, buf12, buf13, 16, grid=grid(16), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2, x_normed_1, mul_3], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul, aten.div]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_linalg_vector_norm_mul_6.run(primals_7, primals_1, buf12, buf13, buf14, 64, grid=grid(64), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((16, 12), (12, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_4], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (16, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 12), (1, 4), 0), out=buf15)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((16, 12), (12, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_5], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (16, 4), (4, 1), 0), reinterpret_tensor(primals_9, (4, 12), (1, 4), 0), out=buf16)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 12), (48, 12, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [silu, mul_4], Original ATen: [aten.silu, aten.mul]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_silu_7.run(buf15, buf16, buf17, 192, grid=grid(192), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_6], Original ATen: [aten.mm]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf17, (16, 12), (12, 1), 0), reinterpret_tensor(primals_10, (12, 4), (1, 12), 0), out=buf18)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf18, (4, 4, 4), (16, 4, 1), 0); del buf18  # reuse
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h, out], Original ATen: [aten.add]
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_8.run(buf19, primals_1, buf12, 64, grid=grid(64), stream=stream0)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, primals_1, primals_7, reinterpret_tensor(buf0, (16, 4), (4, 1), 0), buf8, reinterpret_tensor(buf9, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf4, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf5, (16, 4, 1), (4, 1, 4), 0), reinterpret_tensor(buf11, (16, 4), (4, 1), 0), buf12, reinterpret_tensor(buf14, (16, 4), (4, 1), 0), buf15, buf16, reinterpret_tensor(buf17, (16, 12), (12, 1), 0), primals_10, primals_9, primals_8, primals_6, primals_5, primals_4, primals_3, )
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 12), (12, 1), device='cuda:0', dtype=torch.float32)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:18:34.258000 2780644 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:18:34.277000 2780644 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/43/c43zoeiupxqupla4z26wf2r4pgs3ntrbmxfu32n3cf7f32ehz72c.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['12_forward']
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oc/coch4ojwz3j2qkgbj74ffsajth35f3ho3hwyoqmik45zmpdkqflj.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [norm_x, rms_x, add, x_normed, mul_1], Original ATen: [aten.linalg_vector_norm, aten.mul, aten.add, aten.div]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_x => pow_1, pow_2, sum_1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rms_x => mul
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_normed => div
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%primals_1, 2), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [-1], True), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, 0.5), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, 0.5), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 4), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_1, %add), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, %div), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_linalg_vector_norm_mul_0 = async_compile.triton('triton_poi_fused_add_div_linalg_vector_norm_mul_0', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_linalg_vector_norm_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_linalg_vector_norm_mul_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 + tmp5
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp7
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 + tmp8
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp10
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 + tmp11
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = libdevice.sqrt(tmp12)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = 0.5
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 4.0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp1 / tmp17
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 * tmp18
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vh/cvh6cfwwr3preimj7qozxjfj4y4bq4l7jmzcekwrqcjwoc3ggowj.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone => clone_default
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_scalar
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_scalar : [num_users=1] = call_function[target=torch.ops.aten.mul.Scalar](args = (%permute_default, 1.0), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default,), kwargs = {memory_format: torch.contiguous_format})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_mul_1 = async_compile.triton('triton_poi_fused_clone_mul_1', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_mul_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp2, xmask & ymask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/aq/caqmiiysszdztukbxpdadqcm4rg3wrb25tz5oxkaqfpcxwrmwqoe.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [amax, sub, exp], Original ATen: [aten._safe_softmax]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   amax => amax_default
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exp => exp_default
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_tensor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%view_default_2, [-1], True), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_default_2, %amax_default), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_default : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_tensor,), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_2 = async_compile.triton('triton_poi_fused__safe_softmax_2', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp9, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4p/c4ph4efdt2x2rcd5fshygpsghu7ot3bszmxuqgwt43owdxv5aw5d.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_1, div, eq, logical_not, any_1, logical_not_1, full, where], Original ATen: [aten._safe_softmax]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   any_1 => any_dim
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   div => div_tensor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq_scalar
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   full => full_default_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not => logical_not_default
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logical_not_1 => logical_not_default_1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_dim_int_list
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   where => where_self
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_dim_int_list : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_default, [-1], True), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_default, %sum_dim_int_list), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_scalar : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%view_default_2, -inf), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%eq_scalar,), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %any_dim : [num_users=1] = call_function[target=torch.ops.aten.any.dim](args = (%logical_not_default, -1, True), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_not_default_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_not.default](args = (%any_dim,), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_self : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%logical_not_default_1, %full_default_2, %div_tensor), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__safe_softmax_3 = async_compile.triton('triton_poi_fused__safe_softmax_3', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__safe_softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__safe_softmax_3(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (x2), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr1 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr1 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = float("-inf")
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 == 0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3.to(tl.int64)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = (tmp4 != 0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 == tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 == 0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int64)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = (tmp9 != 0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 | tmp10
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 == tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 == 0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14.to(tl.int64)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = (tmp15 != 0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp11 | tmp16
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 == tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 == 0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20.to(tl.int64)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = (tmp21 != 0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp17 | tmp22
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 == 0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 + tmp27
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp25 / tmp32
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = 0.0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp24, tmp34, tmp33)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp35, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/an/cany2jbw2jdajpiihiclpvumcasljofi46nmewpzgmcfjpkuy5qh.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clone_2 => clone_default_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_default_2 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_default_3,), kwargs = {memory_format: torch.contiguous_format})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_4 = async_compile.triton('triton_poi_fused_clone_4', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 4*y3), tmp0, xmask & ymask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lr/clr26fclfpkos4lxl2xj52stzuean7eod2b5mwt6caeq5gakyx2u.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add_1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_x_1 => pow_3, pow_4, sum_3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rms_x_1 => mul_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_1, 2), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [-1], True), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_4, 0.5), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 4), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_linalg_vector_norm_mul_5 = async_compile.triton('triton_poi_fused_add_linalg_vector_norm_mul_5', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_linalg_vector_norm_mul_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_linalg_vector_norm_mul_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp3 + tmp7
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp8 + tmp12
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 + tmp17
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = libdevice.sqrt(tmp18)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 0.5
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 4.0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp23, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dm/cdmp4i2lbdsm3y7z24vs3unwsgp7vou2vdizuowof6rrtirpi4zp.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2, x_normed_1, mul_3], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul, aten.div]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add_1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   norm_x_1 => pow_3, pow_4, sum_3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   rms_x_1 => mul_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_normed_1 => div_3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%add_1, 2), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [-1], True), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_3, 0.5), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_4, 0.5), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 4), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_1, %add_2), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_7, %div_3), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_linalg_vector_norm_mul_6 = async_compile.triton('triton_poi_fused_add_div_linalg_vector_norm_mul_6', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_linalg_vector_norm_mul_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_linalg_vector_norm_mul_6(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 / tmp4
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5b/c5boxqblmqsst63m4qrq75qfizepk2lpfeuplo6yduqkzsfez62o.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [silu, mul_4], Original ATen: [aten.silu, aten.mul]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_5
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   silu => mul_4, sigmoid
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%view_19,), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_19, %sigmoid), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %view_21), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_silu_7 = async_compile.triton('triton_poi_fused_mul_silu_7', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_silu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_silu_7(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 192
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5d/c5d3athr4zdixpaojhyweppagomjolkjgi5lvqngnnvwuympqsof.py
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [h, out], Original ATen: [aten.add]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h => add_1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => add_3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%primals_1, %view_17), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1, %view_23), kwargs = {})
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_8 = async_compile.triton('triton_poi_fused_add_8', '''
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_8(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp4, xmask)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4), (4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, 4), (4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (12, 4), (4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (12, 4), (4, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 12), (12, 1))
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [norm_x, rms_x, add, x_normed, mul_1], Original ATen: [aten.linalg_vector_norm, aten.mul, aten.add, aten.div]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_linalg_vector_norm_mul_0.run(primals_2, primals_1, buf0, 64, grid=grid(64), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xq], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 4), (1, 4), 0), out=buf1)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xk], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_4, (4, 4), (1, 4), 0), out=buf2)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xv], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (16, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 4), (1, 4), 0), out=buf3)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, clone], Original ATen: [aten.mul, aten.clone]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_1.run(buf1, buf4, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = reinterpret_tensor(buf1, (4, 4, 1, 4), (16, 4, 4, 1), 0); del buf1  # reuse
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1, clone_1], Original ATen: [aten.mul, aten.clone]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_mul_1.run(buf2, buf5, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm], Original ATen: [aten.bmm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf4, (16, 4, 1), (4, 1, 0), 0), reinterpret_tensor(buf5, (16, 1, 4), (4, 0, 1), 0), out=buf6)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [amax, sub, exp], Original ATen: [aten._safe_softmax]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_2.run(buf6, buf7, 256, grid=grid(256), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, div, eq, logical_not, any_1, logical_not_1, full, where], Original ATen: [aten._safe_softmax]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__safe_softmax_3.run(buf6, buf7, buf8, 256, grid=grid(256), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf2, (4, 4, 4, 1), (16, 4, 1, 1), 0); del buf2  # reuse
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [clone_2], Original ATen: [aten.clone]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf3, buf9, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf3, (16, 4, 1), (4, 1, 1), 0); del buf3  # reuse
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bmm_1], Original ATen: [aten.bmm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf8, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf9, (16, 4, 1), (4, 1, 0), 0), out=buf10)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [contiguous], Original ATen: [aten.clone]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_4.run(buf10, buf11, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf10, (16, 4), (4, 1), 0); del buf10  # reuse
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf11, (16, 4), (4, 1), 0), reinterpret_tensor(primals_6, (4, 4), (1, 4), 0), out=buf12)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 1), (4, 1, 16), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_linalg_vector_norm_mul_5.run(primals_1, buf12, buf13, 16, grid=grid(16), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h, norm_x_1, rms_x_1, add_2, x_normed_1, mul_3], Original ATen: [aten.add, aten.linalg_vector_norm, aten.mul, aten.div]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_linalg_vector_norm_mul_6.run(primals_7, primals_1, buf12, buf13, buf14, 64, grid=grid(64), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((16, 12), (12, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_4], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (16, 4), (4, 1), 0), reinterpret_tensor(primals_8, (4, 12), (1, 4), 0), out=buf15)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((16, 12), (12, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_5], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf14, (16, 4), (4, 1), 0), reinterpret_tensor(primals_9, (4, 12), (1, 4), 0), out=buf16)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 4, 12), (48, 12, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [silu, mul_4], Original ATen: [aten.silu, aten.mul]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_silu_7.run(buf15, buf16, buf17, 192, grid=grid(192), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((16, 4), (4, 1), torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_6], Original ATen: [aten.mm]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf17, (16, 12), (12, 1), 0), reinterpret_tensor(primals_10, (12, 4), (1, 12), 0), out=buf18)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = reinterpret_tensor(buf18, (4, 4, 4), (16, 4, 1), 0); del buf18  # reuse
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [h, out], Original ATen: [aten.add]
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_8.run(buf19, primals_1, buf12, 64, grid=grid(64), stream=stream0)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf19, primals_1, primals_7, reinterpret_tensor(buf0, (16, 4), (4, 1), 0), buf8, reinterpret_tensor(buf9, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf4, (16, 1, 4), (4, 1, 1), 0), reinterpret_tensor(buf5, (16, 4, 1), (4, 1, 4), 0), reinterpret_tensor(buf11, (16, 4), (4, 1), 0), buf12, reinterpret_tensor(buf14, (16, 4), (4, 1), 0), buf15, buf16, reinterpret_tensor(buf17, (16, 12), (12, 1), 0), primals_10, primals_9, primals_8, primals_6, primals_5, primals_4, primals_3, )
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((12, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 12), (12, 1), device='cuda:0', dtype=torch.float32)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:07:27.329000 230987 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:07:27.344000 230987 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/vm/cvmm2bbgrtixym5ekwokjrmfe6ymqupfe2naxhplhezkgqlnxdo3.py
