W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_bethgelab_foolbox.py", line 177, in forward
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     x = self.transforms(x)
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 1370, in forward
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     angle = self.get_params(self.degrees)
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 1352, in get_params
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     angle = float(torch.empty(1).uniform_(float(degrees[0]), float(degrees[1])).item())
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0204 15:08:49.610000 1165832 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] Output code: 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] # AOT ID: ['1_inference']
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import torch
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import math
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import random
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import os
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import tempfile
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from math import inf, nan
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch import device, empty_strided
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] aten = torch.ops.aten
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile.wait(globals())
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] del async_compile
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def call(args):
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     buf0 = empty_strided_cpu((1, ), (1, ), torch.float32)
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     # Topologically Sorted Source Nodes: [uniform_], Original ATen: [aten.uniform]
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     buf1 = torch.ops.aten.uniform.default(buf0, -25.0, 25.0)
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     del buf0
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     buf2 = buf1
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return (buf2, )
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     fn = lambda: call([])
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] if __name__ == "__main__":
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:08:50.492000 1165832 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0204 15:08:50.500000 1165832 site-packages/torch/_inductor/graph.py:2053] [2/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/77/c77bhaotnunynrxisoort5ggwts66sqfhocdn52d5rr7kjp4sh6m.py
I0204 15:08:50.507000 1165832 site-packages/torch/_inductor/graph.py:2087] [2/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/77/c77bhaotnunynrxisoort5ggwts66sqfhocdn52d5rr7kjp4sh6m.py
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] Output code: 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # AOT ID: ['3_inference']
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import torch
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import math
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import random
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import os
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import tempfile
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from math import inf, nan
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch import device, empty_strided
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton.language as tl
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     grid,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     split_scan_grid,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     grid_combo_kernels,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     start_graph,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     end_graph,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     cooperative_reduction_grid,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] )
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] aten = torch.ops.aten
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zc/czcpe6eonivhfhna6mqugsqge2zl43o5j2u2k6ab6osbinjl23b7.py
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_grid, copy_, copy__1, fill_], Original ATen: [aten.linspace, aten.copy, aten.fill]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   copy_ => copy
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   copy__1 => copy_1
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   fill_ => full_default
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   x_grid => add, convert_element_type, convert_element_type_1, iota, lt, mul, mul_1, sub, sub_1, where
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Graph fragment:
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %iota : [num_users=3] = call_function[target=torch.ops.prims.iota.default](args = (64,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%iota, 32.0), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 1.0), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, -31.5), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (63, %iota), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sub, torch.float32), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_1, 1.0), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (31.5, %mul_1), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %add, %sub_1), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %where), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %select_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%empty, %copy, 3, 0), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_3, %unsqueeze), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %select_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default, %copy_1, 3, 1), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 64, 64], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %select_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_1, %full_default, 3, 2), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_poi_fused_copy_fill_linspace_0 = async_compile.triton('triton_poi_fused_copy_fill_linspace_0', '''
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton.language as tl
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     size_hints={'x': 16384}, 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     filename=__file__,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_fill_linspace_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] )
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton.jit
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def triton_poi_fused_copy_fill_linspace_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xnumel = 12288
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x0 = (xindex % 3)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x2 = xindex // 192
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x1 = ((xindex // 3) % 64)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x4 = xindex
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp0 = x0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp1 = tl.full([1], 2, tl.int32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp2 = tmp0 == tmp1
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp4 = tmp0 == tmp3
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp5 = x2
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp7 = 32.0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp8 = tmp6 < tmp7
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp9 = 1.0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp10 = tmp6 * tmp9
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp11 = -31.5
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp12 = tmp10 + tmp11
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp13 = 63 + ((-1)*x2)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp15 = tmp14 * tmp9
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp16 = 31.5
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp17 = tmp16 - tmp15
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp18 = tl.where(tmp8, tmp12, tmp17)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp19 = tl.full([1], 0, tl.int32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp20 = tmp0 == tmp19
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp21 = x1
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp23 = tmp22 < tmp7
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp24 = tmp22 * tmp9
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp25 = tmp24 + tmp11
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp26 = 63 + ((-1)*x1)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp28 = tmp27 * tmp9
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp29 = tmp16 - tmp28
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp30 = tl.where(tmp23, tmp25, tmp29)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp31 = float("nan")
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp32 = tl.where(tmp20, tmp30, tmp31)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp33 = tl.where(tmp4, tmp18, tmp32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp34 = tl.where(tmp2, tmp9, tmp33)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp34, None)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] ''', device_str='cuda')
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3k/c3kw5fpxgzjczfzjk5dlwbabpanuivsyttluk3twbgqszb6krszn.py
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Topologically Sorted Source Nodes: [tensor_1, rescaled_theta], Original ATen: [aten.lift_fresh, aten.div]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   rescaled_theta => div
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   tensor_1 => lift_fresh_copy_1
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Graph fragment:
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %lift_fresh_copy_1 : [num_users=1] = call_function[target=torch.ops.aten.lift_fresh_copy.default](args = (%_tensor_constant1,), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%permute, %lift_fresh_copy_1), kwargs = {})
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_poi_fused_div_lift_fresh_1 = async_compile.triton('triton_poi_fused_div_lift_fresh_1', '''
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton.language as tl
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     size_hints={'x': 8}, 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     filename=__file__,
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_lift_fresh_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] )
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton.jit
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def triton_poi_fused_div_lift_fresh_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xnumel = 6
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x0 = (xindex % 2)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x1 = xindex // 2
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x2 = xindex
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp0 = x1 + 3*x0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp1 = tl.full([1], 3, tl.int64)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp5 = tl.full([1], 2, tl.int64)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp6 = tmp0 < tmp5
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp7 = 0.35973861813545227
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp8 = 0.0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp9 = tl.where(tmp6, tmp7, tmp8)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp10 = 0.9330531358718872
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp11 = tl.where(tmp4, tmp10, tmp9)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp12 = tl.full([1], 4, tl.int64)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp14 = tl.full([1], 5, tl.int64)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp15 = tmp0 < tmp14
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp16 = tl.where(tmp15, tmp10, tmp8)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp17 = -0.35973861813545227
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp18 = tl.where(tmp13, tmp17, tmp16)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp19 = tl.where(tmp2, tmp11, tmp18)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp20 = x0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp21 = tmp20 < tmp3
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp22 = 32.0
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp22)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp24 = tmp19 / tmp23
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp24, xmask)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] ''', device_str='cuda')
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] async_compile.wait(globals())
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] del async_compile
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def call(args):
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 64, 64, 3), (12288, 192, 3, 1), torch.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_grid, copy_, copy__1, fill_], Original ATen: [aten.linspace, aten.copy, aten.fill]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         triton_poi_fused_copy_fill_linspace_0.run(buf1, 12288, grid=grid(12288), stream=stream0)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 3, 2), (6, 2, 1), torch.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         # Topologically Sorted Source Nodes: [tensor_1, rescaled_theta], Original ATen: [aten.lift_fresh, aten.div]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         triton_poi_fused_div_lift_fresh_1.run(buf2, 6, grid=grid(6), stream=stream0)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 4096, 2), (8192, 2, 1), torch.float32)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         # Topologically Sorted Source Nodes: [tensor_1, rescaled_theta, output_grid], Original ATen: [aten.lift_fresh, aten.div, aten.bmm]
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf1, (1, 4096, 3), (0, 3, 1), 0), buf2, out=buf3)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         del buf1
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         del buf2
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     return (reinterpret_tensor(buf3, (1, 64, 64, 2), (8192, 128, 2, 1), 0), )
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     fn = lambda: call([])
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] if __name__ == "__main__":
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:08:51.182000 1165832 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0204 15:08:51.186000 1165832 site-packages/torch/_inductor/graph.py:2053] [6/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/7w/c7wummbb3mvtrqqqm3cypbubqvwoiuwlvf6iojrjzsklxo6imoej.py
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break from `Tensor.item()`, consider setting:
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     torch._dynamo.config.capture_scalar_outputs = True
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] or:
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] to include these operations in the captured graph.
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] Graph break: from user code at:
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "./generated/test_bethgelab_foolbox.py", line 177, in forward
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     x = self.transforms(x)
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 1370, in forward
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     angle = self.get_params(self.degrees)
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]   File "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 1352, in get_params
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0]     angle = float(torch.empty(1).uniform_(float(degrees[0]), float(degrees[1])).item())
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
W0205 19:58:10.097000 2481653 site-packages/torch/_dynamo/variables/tensor.py:869] [0/0] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] Output code: 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] # AOT ID: ['1_inference']
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import torch
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import math
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import random
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import os
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] import tempfile
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from math import inf, nan
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch import device, empty_strided
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] aten = torch.ops.aten
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile = AsyncCompile()
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] async_compile.wait(globals())
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] del async_compile
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def call(args):
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     buf0 = empty_strided_cpu((1, ), (1, ), torch.float32)
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     # Topologically Sorted Source Nodes: [uniform_], Original ATen: [aten.uniform]
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     buf1 = torch.ops.aten.uniform.default(buf0, -25.0, 25.0)
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     del buf0
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     buf2 = buf1
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return (buf2, )
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     fn = lambda: call([])
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] if __name__ == "__main__":
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:58:11.001000 2481653 site-packages/torch/_inductor/graph.py:2045] [2/0_1] [__output_code] 
V0205 19:58:11.008000 2481653 site-packages/torch/_inductor/graph.py:2053] [2/0_1] [__output_code] Output code written to: inductor_cache/77/c77bhaotnunynrxisoort5ggwts66sqfhocdn52d5rr7kjp4sh6m.py
I0205 19:58:11.015000 2481653 site-packages/torch/_inductor/graph.py:2087] [2/0_1] [__output_code] Output code written to: inductor_cache/77/c77bhaotnunynrxisoort5ggwts66sqfhocdn52d5rr7kjp4sh6m.py
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] Output code: 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # AOT ID: ['3_inference']
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import torch
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import math
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import random
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import os
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import tempfile
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from math import inf, nan
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch import device, empty_strided
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton.language as tl
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     grid,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     split_scan_grid,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     grid_combo_kernels,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     start_graph,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     end_graph,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     cooperative_reduction_grid,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] )
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] aten = torch.ops.aten
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] async_compile = AsyncCompile()
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # kernel path: inductor_cache/zc/czcpe6eonivhfhna6mqugsqge2zl43o5j2u2k6ab6osbinjl23b7.py
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Topologically Sorted Source Nodes: [x_grid, copy_, copy__1, fill_], Original ATen: [aten.linspace, aten.copy, aten.fill]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   copy_ => copy
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   copy__1 => copy_1
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   fill_ => full_default
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   x_grid => add, convert_element_type, convert_element_type_1, iota, lt, mul, mul_1, sub, sub_1, where
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Graph fragment:
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %iota : [num_users=3] = call_function[target=torch.ops.prims.iota.default](args = (64,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%iota, 32.0), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 1.0), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, -31.5), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (63, %iota), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %convert_element_type_1 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%sub, torch.float32), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_1, 1.0), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (31.5, %mul_1), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %add, %sub_1), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select, %where), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %select_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.select_scatter.default](args = (%empty, %copy, 3, 0), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%select_3, %unsqueeze), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %select_scatter_default_1 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default, %copy_1, 3, 1), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([1, 64, 64], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %select_scatter_default_2 : [num_users=1] = call_function[target=torch.ops.aten.select_scatter.default](args = (%select_scatter_default_1, %full_default, 3, 2), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_poi_fused_copy_fill_linspace_0 = async_compile.triton('triton_poi_fused_copy_fill_linspace_0', '''
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton.language as tl
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     size_hints={'x': 16384}, 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     filename=__file__,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_copy_fill_linspace_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] )
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton.jit
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def triton_poi_fused_copy_fill_linspace_0(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xnumel = 12288
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x0 = (xindex % 3)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x2 = xindex // 192
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x1 = ((xindex // 3) % 64)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x4 = xindex
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp0 = x0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp1 = tl.full([1], 2, tl.int32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp2 = tmp0 == tmp1
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp4 = tmp0 == tmp3
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp5 = x2
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp6 = tmp5.to(tl.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp7 = 32.0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp8 = tmp6 < tmp7
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp9 = 1.0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp10 = tmp6 * tmp9
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp11 = -31.5
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp12 = tmp10 + tmp11
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp13 = 63 + ((-1)*x2)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp14 = tmp13.to(tl.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp15 = tmp14 * tmp9
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp16 = 31.5
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp17 = tmp16 - tmp15
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp18 = tl.where(tmp8, tmp12, tmp17)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp19 = tl.full([1], 0, tl.int32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp20 = tmp0 == tmp19
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp21 = x1
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp22 = tmp21.to(tl.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp23 = tmp22 < tmp7
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp24 = tmp22 * tmp9
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp25 = tmp24 + tmp11
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp26 = 63 + ((-1)*x1)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp28 = tmp27 * tmp9
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp29 = tmp16 - tmp28
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp30 = tl.where(tmp23, tmp25, tmp29)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp31 = float("nan")
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp32 = tl.where(tmp20, tmp30, tmp31)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp33 = tl.where(tmp4, tmp18, tmp32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp34 = tl.where(tmp2, tmp9, tmp33)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tl.store(out_ptr0 + (x4), tmp34, None)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] ''', device_str='cuda')
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # kernel path: inductor_cache/3k/c3kw5fpxgzjczfzjk5dlwbabpanuivsyttluk3twbgqszb6krszn.py
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Topologically Sorted Source Nodes: [tensor_1, rescaled_theta], Original ATen: [aten.lift_fresh, aten.div]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Source node to ATen node mapping:
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   rescaled_theta => div
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   tensor_1 => lift_fresh_copy_1
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] # Graph fragment:
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %lift_fresh_copy_1 : [num_users=1] = call_function[target=torch.ops.aten.lift_fresh_copy.default](args = (%_tensor_constant1,), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%permute, %lift_fresh_copy_1), kwargs = {})
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_poi_fused_div_lift_fresh_1 = async_compile.triton('triton_poi_fused_div_lift_fresh_1', '''
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] import triton.language as tl
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     size_hints={'x': 8}, 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     filename=__file__,
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_lift_fresh_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     min_elem_per_thread=0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] )
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] @triton.jit
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def triton_poi_fused_div_lift_fresh_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xnumel = 6
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     xmask = xindex < xnumel
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x0 = (xindex % 2)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x1 = xindex // 2
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     x2 = xindex
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp0 = x1 + 3*x0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp1 = tl.full([1], 3, tl.int64)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp5 = tl.full([1], 2, tl.int64)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp6 = tmp0 < tmp5
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp7 = 0.35973861813545227
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp8 = 0.0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp9 = tl.where(tmp6, tmp7, tmp8)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp10 = 0.9330531358718872
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp11 = tl.where(tmp4, tmp10, tmp9)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp12 = tl.full([1], 4, tl.int64)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp13 = tmp0 < tmp12
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp14 = tl.full([1], 5, tl.int64)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp15 = tmp0 < tmp14
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp16 = tl.where(tmp15, tmp10, tmp8)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp17 = -0.35973861813545227
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp18 = tl.where(tmp13, tmp17, tmp16)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp19 = tl.where(tmp2, tmp11, tmp18)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp20 = x0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp21 = tmp20 < tmp3
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp22 = 32.0
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp23 = tl.where(tmp21, tmp22, tmp22)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tmp24 = tmp19 / tmp23
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     tl.store(out_ptr0 + (x2), tmp24, xmask)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] ''', device_str='cuda')
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] async_compile.wait(globals())
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] del async_compile
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def call(args):
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         buf1 = empty_strided_cuda((1, 64, 64, 3), (12288, 192, 3, 1), torch.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         # Topologically Sorted Source Nodes: [x_grid, copy_, copy__1, fill_], Original ATen: [aten.linspace, aten.copy, aten.fill]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         triton_poi_fused_copy_fill_linspace_0.run(buf1, 12288, grid=grid(12288), stream=stream0)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         buf2 = empty_strided_cuda((1, 3, 2), (6, 2, 1), torch.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         # Topologically Sorted Source Nodes: [tensor_1, rescaled_theta], Original ATen: [aten.lift_fresh, aten.div]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         triton_poi_fused_div_lift_fresh_1.run(buf2, 6, grid=grid(6), stream=stream0)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         buf3 = empty_strided_cuda((1, 4096, 2), (8192, 2, 1), torch.float32)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         # Topologically Sorted Source Nodes: [tensor_1, rescaled_theta, output_grid], Original ATen: [aten.lift_fresh, aten.div, aten.bmm]
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf1, (1, 4096, 3), (0, 3, 1), 0), buf2, out=buf3)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         del buf1
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]         del buf2
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     return (reinterpret_tensor(buf3, (1, 64, 64, 2), (8192, 128, 2, 1), 0), )
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     fn = lambda: call([])
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] if __name__ == "__main__":
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:58:11.714000 2481653 site-packages/torch/_inductor/graph.py:2045] [6/0_1] [__output_code] 
V0205 19:58:11.719000 2481653 site-packages/torch/_inductor/graph.py:2053] [6/0_1] [__output_code] Output code written to: inductor_cache/xx/cxxtr6skpq73vqeg4akuoqgi2i52p25sztgb3hjbqgycxsj6vkwe.py
