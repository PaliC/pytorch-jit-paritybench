V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_forward']
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zp/czp35rtqpmtwk6q4hww5ukuytylpkbmm4232sdx4ja2dsxqlxtvb.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.convolution]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits => convolution
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6y/c6ywxbhpde76tyijneuwqsduok7pgaveok5hspuhaquiajslu73z.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [soft_one_hot], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   soft_one_hot => add, exp, log, neg, sum_1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%exponential,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%log,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution, %neg), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_log_neg_1 = async_compile.triton('triton_poi_fused__softmax_add_log_neg_1', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_log_neg_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_log_neg_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl_math.log(tmp1)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -tmp2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.log(tmp8)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = -tmp9
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 + tmp10
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp6, tmp12)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp15)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = -tmp16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 + tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp13, tmp19)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.log(tmp22)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = -tmp23
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp20, tmp26)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp6 - tmp27
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp12 - tmp27
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.exp(tmp32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 + tmp33
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp19 - tmp27
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl_math.exp(tmp36)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp34 + tmp37
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp26 - tmp27
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl_math.exp(tmp40)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp38 + tmp41
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp27, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp42, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2d/c2dygcrgojnyyxerb53iarjyqe3m3qdlc252tfxl3ypg77vltwvx.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [soft_one_hot, qy], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   qy => amax_1, exp_1, sub_2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   soft_one_hot => add, div_1, exp, log, neg
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%exponential,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%log,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution, %neg), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=4] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convolution, [1], True), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %amax_1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_log_neg_2 = async_compile.triton('triton_poi_fused__softmax_add_log_neg_2', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_log_neg_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_log_neg_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl_math.log(tmp1)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -tmp2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl_math.exp(tmp9)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 - tmp19
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp12, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hw/chwhniticn67alxfq5xma6gcki63q7qacbeojcuwy4xtg6z3urep.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [qy], Original ATen: [aten._softmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   qy => div_2, sum_2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_3 = async_compile.triton('triton_poi_fused__softmax_3', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, add, log, mul_1, sum_1, mean, diff], Original ATen: [aten.mul, aten.add, aten.log, aten.sum, aten.mean]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diff => mul_2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log_1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, 4), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 1e-10), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %log_1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_3,), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 0.0005), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_log_mean_mul_sum_4 = async_compile.triton('triton_per_fused_add_log_mean_mul_sum_4', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_log_mean_mul_sum_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_log_mean_mul_sum_4(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 4.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1e-10
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.log(tmp4)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 + tmp3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl_math.log(tmp9)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 * tmp10
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 + tmp11
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 + tmp3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp15)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 * tmp16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp12 + tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.log(tmp21)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 * tmp22
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp18 + tmp23
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, RBLOCK])
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp25, 1)[:, None]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 64.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 / tmp28
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.0005
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp31, None)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bv/cbvw55ep3iuww7mrywcuqagagkm5sjiinxizq7f23dcinnyr6nhx.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [soft_one_hot, ind], Original ATen: [aten.max, aten.scatter, aten.sub, aten.add, aten.argmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ind => argmax
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   soft_one_hot => add_1, max_1, scatter_upon_const_tensor, sub_1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%div_1, 1, True), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=1] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [4, 4, 4, 4], background_val: 0, dtype: torch.float32, dim: 1, selector: %getitem_1, val: 1.0})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%scatter_upon_const_tensor, %div_1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_1, %div_1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%add_1, 1), kwargs = {})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_argmax_max_scatter_sub_5 = async_compile.triton('triton_poi_fused_add_argmax_max_scatter_sub_5', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_argmax_max_scatter_sub_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_argmax_max_scatter_sub_5(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 == tmp10
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = 1.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 0.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.where(tmp47, tmp48, tmp49)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 - tmp0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp46 == tmp11
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp48, tmp49)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 - tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 + tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp52 > tmp56
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp52 == tmp56
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp52 != tmp52
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp56 != tmp56
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 > tmp60
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp57 | tmp61
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp59 & tmp60
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp58 | tmp63
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 & tmp12
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp62 | tmp65
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp66, tmp52, tmp56)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.where(tmp66, tmp10, tmp11)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp46 == tmp26
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.where(tmp69, tmp48, tmp49)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 - tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 + tmp17
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp67 > tmp72
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp67 == tmp72
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp67 != tmp67
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp72 != tmp72
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp75 > tmp76
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp73 | tmp77
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp75 & tmp76
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp74 | tmp79
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp68 < tmp26
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 & tmp81
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp78 | tmp82
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.where(tmp83, tmp67, tmp72)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp83, tmp68, tmp26)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp46 == tmp41
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.where(tmp86, tmp48, tmp49)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 - tmp32
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp88 + tmp32
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84 > tmp89
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp84 == tmp89
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp84 != tmp84
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp89 != tmp89
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp92 > tmp93
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp90 | tmp94
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp92 & tmp93
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp91 | tmp96
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp85 < tmp41
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp97 & tmp98
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp95 | tmp99
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.where(tmp100, tmp84, tmp89)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.where(tmp100, tmp85, tmp41)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp46, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp102, xmask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5x/c5x7czl2lz3egk576cnoppdwzn4ezguq4hvwmjvk66v26jpm6l4j.py
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z_q], Original ATen: [aten.clone]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_q => clone
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_6(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2 + 16*y3), xmask & ymask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = y0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp8, xmask & ymask)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.convolution]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.convolution]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_2, 256, grid=grid(256), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot], Original ATen: [aten.exponential]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = torch.ops.aten.exponential.default(buf2)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_log_neg_1.run(buf1, buf4, buf5, buf6, 64, grid=grid(64), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf2; del buf2  # reuse
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot, qy], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_log_neg_2.run(buf7, buf1, buf5, buf6, buf11, 256, grid=grid(256), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [qy], Original ATen: [aten._softmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_3.run(buf11, buf12, 256, grid=grid(256), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((), (), torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf13; del buf13  # reuse
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, add, log, mul_1, sum_1, mean, diff], Original ATen: [aten.mul, aten.add, aten.log, aten.sum, aten.mean]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_log_mean_mul_sum_4.run(buf15, buf12, 1, 64, grid=grid(1), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.int64)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.int64)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot, ind], Original ATen: [aten.max, aten.scatter, aten.sub, aten.add, aten.argmax]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_argmax_max_scatter_sub_5.run(buf7, buf8, buf14, 64, grid=grid(64), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf12, (4, 4, 4, 4, 1), (64, 16, 4, 1, 1), 0); del buf12  # reuse
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_q], Original ATen: [aten.clone]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_6.run(buf8, buf7, buf9, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf11, (1, 64, 4), (256, 4, 1), 0); del buf11  # reuse
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_q], Original ATen: [aten.bmm]
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf9, (1, 64, 4), (0, 4, 1), 0), reinterpret_tensor(primals_4, (1, 4, 4), (16, 4, 1), 0), out=buf10)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 4, 4, 4), (64, 1, 16, 4), 0), buf15, buf14, primals_1, primals_3, buf1, buf7, reinterpret_tensor(buf9, (1, 4, 64), (256, 1, 4), 0), reinterpret_tensor(primals_4, (1, 4, 4), (16, 1, 4), 0), )
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:21:41.503000 1001972 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:21:41.514000 1001972 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/su/csu6fdorq6rwhnqniyxu6pbea5nf7chwrmxgio2jyvxyj6oequ5x.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['11_forward']
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zp/czp35rtqpmtwk6q4hww5ukuytylpkbmm4232sdx4ja2dsxqlxtvb.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.convolution]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   logits => convolution
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=4] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp2, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6y/c6ywxbhpde76tyijneuwqsduok7pgaveok5hspuhaquiajslu73z.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [soft_one_hot], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   soft_one_hot => add, exp, log, neg, sum_1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%exponential,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%log,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution, %neg), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_log_neg_1 = async_compile.triton('triton_poi_fused__softmax_add_log_neg_1', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_log_neg_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_log_neg_1(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl_math.log(tmp1)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -tmp2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.log(tmp8)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = -tmp9
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 + tmp10
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp6, tmp12)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp15)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = -tmp16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 + tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = triton_helpers.maximum(tmp13, tmp19)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl_math.log(tmp22)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = -tmp23
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp21 + tmp24
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp20, tmp26)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp6 - tmp27
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl_math.exp(tmp29)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp12 - tmp27
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl_math.exp(tmp32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 + tmp33
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp19 - tmp27
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl_math.exp(tmp36)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp34 + tmp37
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp26 - tmp27
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl_math.exp(tmp40)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp38 + tmp41
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp27, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp42, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2d/c2dygcrgojnyyxerb53iarjyqe3m3qdlc252tfxl3ypg77vltwvx.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [soft_one_hot, qy], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   qy => amax_1, exp_1, sub_2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   soft_one_hot => add, div_1, exp, log, neg
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%exponential,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%log,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution, %neg), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, 1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=4] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_1 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%convolution, [1], True), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %amax_1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_log_neg_2 = async_compile.triton('triton_poi_fused__softmax_add_log_neg_2', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_log_neg_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_log_neg_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl_math.log(tmp1)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = -tmp2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 + tmp3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl_math.exp(tmp9)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 / tmp11
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = triton_helpers.maximum(tmp13, tmp14)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp15, tmp16)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 - tmp19
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl_math.exp(tmp20)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp12, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp21, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hw/chwhniticn67alxfq5xma6gcki63q7qacbeojcuwy4xtg6z3urep.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [qy], Original ATen: [aten._softmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   qy => div_2, sum_2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_1, %sum_2), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_3 = async_compile.triton('triton_poi_fused__softmax_3', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 / tmp7
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp8, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pi/cpinawmmwno4svyj5bhkno3mi5msui47ncxt7qvslqrcufl4hcuk.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, add, log, mul_1, sum_1, mean, diff], Original ATen: [aten.mul, aten.add, aten.log, aten.sum, aten.mean]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add_2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   diff => mul_2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log_1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, 4), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 1e-10), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_2, %log_1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_3,), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 0.0005), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_log_mean_mul_sum_4 = async_compile.triton('triton_per_fused_add_log_mean_mul_sum_4', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': (2,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_log_mean_mul_sum_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_log_mean_mul_sum_4(in_out_ptr0, in_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 4.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1e-10
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl_math.log(tmp4)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 * tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 * tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 + tmp3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl_math.log(tmp9)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 * tmp10
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp6 + tmp11
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 + tmp3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.log(tmp15)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp13 * tmp16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp12 + tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 + tmp3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.log(tmp21)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 * tmp22
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp18 + tmp23
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.broadcast_to(tmp24, [XBLOCK, RBLOCK])
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.sum(tmp25, 1)[:, None]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = 64.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 / tmp28
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = 0.0005
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 * tmp30
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp31, None)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bv/cbvw55ep3iuww7mrywcuqagagkm5sjiinxizq7f23dcinnyr6nhx.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [soft_one_hot, ind], Original ATen: [aten.max, aten.scatter, aten.sub, aten.add, aten.argmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   ind => argmax
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   soft_one_hot => add_1, max_1, scatter_upon_const_tensor, sub_1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%div_1, 1, True), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %scatter_upon_const_tensor : [num_users=1] = call_function[target=torch._inductor.fx_passes.post_grad.scatter_upon_const_tensor](args = (), kwargs = {shape: [4, 4, 4, 4], background_val: 0, dtype: torch.float32, dim: 1, selector: %getitem_1, val: 1.0})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%scatter_upon_const_tensor, %div_1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_1, %div_1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%add_1, 1), kwargs = {})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_argmax_max_scatter_sub_5 = async_compile.triton('triton_poi_fused_add_argmax_max_scatter_sub_5', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'out_ptr1': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_argmax_max_scatter_sub_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_argmax_max_scatter_sub_5(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 == tmp10
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = 1.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 0.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.where(tmp47, tmp48, tmp49)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 - tmp0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp46 == tmp11
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp48, tmp49)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 - tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 + tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp52 > tmp56
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp52 == tmp56
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp52 != tmp52
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp56 != tmp56
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 > tmp60
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp57 | tmp61
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp59 & tmp60
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp58 | tmp63
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 & tmp12
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp62 | tmp65
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp66, tmp52, tmp56)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tl.where(tmp66, tmp10, tmp11)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp46 == tmp26
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.where(tmp69, tmp48, tmp49)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 - tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp71 + tmp17
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp67 > tmp72
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp67 == tmp72
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp67 != tmp67
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp72 != tmp72
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp75 > tmp76
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp73 | tmp77
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp75 & tmp76
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp74 | tmp79
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp68 < tmp26
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 & tmp81
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp78 | tmp82
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tl.where(tmp83, tmp67, tmp72)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.where(tmp83, tmp68, tmp26)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp46 == tmp41
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tl.where(tmp86, tmp48, tmp49)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 - tmp32
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp88 + tmp32
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84 > tmp89
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp84 == tmp89
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp84 != tmp84
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp89 != tmp89
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp92 > tmp93
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp90 | tmp94
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp92 & tmp93
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp91 | tmp96
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp85 < tmp41
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp97 & tmp98
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp95 | tmp99
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tl.where(tmp100, tmp84, tmp89)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.where(tmp100, tmp85, tmp41)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp46, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp102, xmask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5x/c5x7czl2lz3egk576cnoppdwzn4ezguq4hvwmjvk66v26jpm6l4j.py
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z_q], Original ATen: [aten.clone]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_q => clone
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_6(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x2 + 16*y3), xmask & ymask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = y0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp6
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x2 + 64*y1), tmp8, xmask & ymask)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4 = args
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.convolution]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_3, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [logits], Original ATen: [aten.convolution]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(buf1, primals_2, 256, grid=grid(256), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot], Original ATen: [aten.exponential]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = torch.ops.aten.exponential.default(buf2)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_log_neg_1.run(buf1, buf4, buf5, buf6, 64, grid=grid(64), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = buf2; del buf2  # reuse
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot, qy], Original ATen: [aten.log, aten.neg, aten.add, aten._softmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_log_neg_2.run(buf7, buf1, buf5, buf6, buf11, 256, grid=grid(256), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [qy], Original ATen: [aten._softmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_3.run(buf11, buf12, 256, grid=grid(256), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((), (), torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = buf13; del buf13  # reuse
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, add, log, mul_1, sum_1, mean, diff], Original ATen: [aten.mul, aten.add, aten.log, aten.sum, aten.mean]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_log_mean_mul_sum_4.run(buf15, buf12, 1, 64, grid=grid(1), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.int64)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.int64)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [soft_one_hot, ind], Original ATen: [aten.max, aten.scatter, aten.sub, aten.add, aten.argmax]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_argmax_max_scatter_sub_5.run(buf7, buf8, buf14, 64, grid=grid(64), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf12, (4, 4, 4, 4, 1), (64, 16, 4, 1, 1), 0); del buf12  # reuse
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_q], Original ATen: [aten.clone]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_6.run(buf8, buf7, buf9, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf11, (1, 64, 4), (256, 4, 1), 0); del buf11  # reuse
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_q], Original ATen: [aten.bmm]
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf9, (1, 64, 4), (0, 4, 1), 0), reinterpret_tensor(primals_4, (1, 4, 4), (16, 4, 1), 0), out=buf10)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf10, (4, 4, 4, 4), (64, 1, 16, 4), 0), buf15, buf14, primals_1, primals_3, buf1, buf7, reinterpret_tensor(buf9, (1, 4, 64), (256, 1, 4), 0), reinterpret_tensor(primals_4, (1, 4, 4), (16, 1, 4), 0), )
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4])
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:11:58.972000 3651921 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:11:58.987000 3651921 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/s3/cs3uksmz7oopu4malpo2pzo32y3kfj3aq5bw4ub73jvs2aadv4f7.py
