V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_inference']
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/c7/cc7ksp4yhbvdm4p4mndjlbhmwxkzcq3oaw4wswxdu676e3bxxrfz.py
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [smooth_l1_loss, sum_1, loss_transl, mul, smooth_l1_loss_1, sum_2, loss_rot, mul_1, total_loss], Original ATen: [aten.smooth_l1_loss, aten.sum, aten.mean, aten.mul, aten.add]
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_rot => mean_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_transl => mean
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   smooth_l1_loss => abs_1, div, lt, mul, pow_1, sub, sub_1, where
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   smooth_l1_loss_1 => abs_2, div_1, lt_1, mul_1, pow_2, sub_2, sub_3, where_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   total_loss => add
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %arg0_1), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul, 1.0), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div, %sub_1), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where, [1]), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_1,), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg3_1, %arg2_1), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub_2,), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_2, 1.0), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_2, 2), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, 0.5), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_1, 1.0), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_2, 0.5), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_1, %div_1, %sub_3), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_1, [1]), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_2,), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_1, 1.0), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0 = async_compile.triton('triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0', '''
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (16 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (32 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr1 + (48 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr2 + (r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr3 + (r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr2 + (16 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr3 + (16 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.load(in_ptr2 + (32 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr3 + (32 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr2 + (48 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr3 + (48 + r0 + 64*r1), None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 * tmp3
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.5
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp3 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp5, tmp9, tmp10)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 - tmp13
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl_math.abs(tmp14)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp15
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp16, tmp19, tmp20)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp11 + tmp21
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 - tmp24
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.abs(tmp25)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp26
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp26 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp27, tmp30, tmp31)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp22 + tmp32
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 - tmp35
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl_math.abs(tmp36)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp37
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp37 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp38, tmp41, tmp42)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp33 + tmp43
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [XBLOCK, RBLOCK])
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.sum(tmp45, 1)[:, None]
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 - tmp49
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl_math.abs(tmp50)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 * tmp51
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp51 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp52, tmp55, tmp56)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 - tmp59
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl_math.abs(tmp60)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp61
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp61 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp62, tmp65, tmp66)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp57 + tmp67
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 - tmp70
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl_math.abs(tmp71)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp72 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp72
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp72 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp73, tmp76, tmp77)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp68 + tmp78
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 - tmp81
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl_math.abs(tmp82)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83 < tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 * tmp83
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp85 * tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp86 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp83 - tmp7
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.where(tmp84, tmp87, tmp88)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp79 + tmp89
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.broadcast_to(tmp90, [XBLOCK, RBLOCK])
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.sum(tmp91, 1)[:, None]
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = 64.0
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp47 / tmp94
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp95 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp93 / tmp94
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp97 * tmp4
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp96 + tmp98
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp99, None)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [smooth_l1_loss, sum_1, loss_transl, mul, smooth_l1_loss_1, sum_2, loss_rot, mul_1, total_loss], Original ATen: [aten.smooth_l1_loss, aten.sum, aten.mean, aten.mul, aten.add]
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0.run(buf4, arg1_1, arg0_1, arg3_1, arg2_1, 1, 64, grid=grid(1), stream=stream0)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:08:49.048000 568482 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:08:49.052000 568482 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/xh/cxheoefcweler3qqcebyfqz2amabysscd45dpoon7zsoiga7xizb.py
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['1_inference']
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/c7/cc7ksp4yhbvdm4p4mndjlbhmwxkzcq3oaw4wswxdu676e3bxxrfz.py
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [smooth_l1_loss, sum_1, loss_transl, mul, smooth_l1_loss_1, sum_2, loss_rot, mul_1, total_loss], Original ATen: [aten.smooth_l1_loss, aten.sum, aten.mean, aten.mul, aten.add]
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_rot => mean_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_transl => mean
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul_2
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_3
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   smooth_l1_loss => abs_1, div, lt, mul, pow_1, sub, sub_1, where
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   smooth_l1_loss_1 => abs_2, div_1, lt_1, mul_1, pow_2, sub_2, sub_3, where_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   total_loss => add
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %arg0_1), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_1 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_1, 1.0), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_1, 2), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_1, 0.5), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul, 1.0), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_1, 0.5), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div, %sub_1), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where, [1]), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_1,), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg3_1, %arg2_1), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_2 : [num_users=3] = call_function[target=torch.ops.aten.abs.default](args = (%sub_2,), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt_1 : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%abs_2, 1.0), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%abs_2, 2), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, 0.5), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_1, 1.0), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%abs_2, 0.5), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_1 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt_1, %div_1, %sub_3), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%where_1, [1]), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%sum_2,), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean_1, 1.0), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0 = async_compile.triton('triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0', '''
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (16 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (32 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr1 + (48 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr2 + (r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.load(in_ptr3 + (r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.load(in_ptr2 + (16 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.load(in_ptr3 + (16 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.load(in_ptr2 + (32 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr3 + (32 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr2 + (48 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tl.load(in_ptr3 + (48 + r0 + 64*r1), None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.abs(tmp2)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 * tmp3
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 0.5
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp3 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp5, tmp9, tmp10)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 - tmp13
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl_math.abs(tmp14)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp15
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.where(tmp16, tmp19, tmp20)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp11 + tmp21
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 - tmp24
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl_math.abs(tmp25)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp26
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp26 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.where(tmp27, tmp30, tmp31)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp22 + tmp32
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 - tmp35
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl_math.abs(tmp36)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp37
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp37 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.where(tmp38, tmp41, tmp42)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp33 + tmp43
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.broadcast_to(tmp44, [XBLOCK, RBLOCK])
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.sum(tmp45, 1)[:, None]
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 - tmp49
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl_math.abs(tmp50)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 * tmp51
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp53 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp51 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp52, tmp55, tmp56)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp58 - tmp59
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl_math.abs(tmp60)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp61 * tmp61
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp61 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.where(tmp62, tmp65, tmp66)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp57 + tmp67
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp69 - tmp70
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tl_math.abs(tmp71)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp72 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 * tmp72
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp74 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp72 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp73, tmp76, tmp77)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp68 + tmp78
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 - tmp81
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl_math.abs(tmp82)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp83 < tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp83 * tmp83
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp85 * tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp86 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp83 - tmp7
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.where(tmp84, tmp87, tmp88)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp79 + tmp89
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tl.broadcast_to(tmp90, [XBLOCK, RBLOCK])
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.sum(tmp91, 1)[:, None]
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = 64.0
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp47 / tmp94
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp95 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp93 / tmp94
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp97 * tmp4
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tmp96 + tmp98
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp99, None)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [smooth_l1_loss, sum_1, loss_transl, mul, smooth_l1_loss_1, sum_2, loss_rot, mul_1, total_loss], Original ATen: [aten.smooth_l1_loss, aten.sum, aten.mean, aten.mul, aten.add]
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mean_mul_smooth_l1_loss_sum_0.run(buf4, arg1_1, arg0_1, arg3_1, arg2_1, 1, 64, grid=grid(1), stream=stream0)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf4, )
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:59:05.427000 3326160 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:59:05.431000 3326160 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ow/cowkumqjyijk5fn6jal453if6odw76nenennf3dgkxfaypy3h5wq.py
