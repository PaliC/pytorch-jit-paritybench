V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['25_inference']
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, a_tilde, mul, add, clamp, pow_1, za, pow_2, sub_1, a_tilde_1, mul_2, add_1, clamp_1, pow_3, za_1, pow_4, sub_2, a_tilde_2, mul_4, add_2, clamp_2, pow_5, za_2, truediv, pow_7, sub_4, truediv_1, neg, add_3, sm, mul_6, add_4, clamp_3, x, y_hat, pow_9, sub_6, truediv_2, neg_1, pow_10, sum_4, sub_7, truediv_3, out, truediv_4, sum_5], Original ATen: [aten.max, aten.sub, aten.mul, aten.add, aten.clamp, aten.pow, aten.sum, aten.reciprocal, aten.div, aten.neg, aten.index, aten.rsub]
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_tilde => sub
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_tilde_1 => mul_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_tilde_2 => mul_3
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp => clamp_min
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_min_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_2 => clamp_min_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_3 => clamp_min_3
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_7
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_1 => neg_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => sub_8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_10 => pow_10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_5 => pow_5
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_7 => pow_7
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_9 => pow_9
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sm => sub_5
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_6 => sub_6
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_5 => sum_5
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => mul_6, reciprocal
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_4 => div_3
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => pow_8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_hat => index
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   za => sum_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   za_1 => sum_2
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   za_2 => sum_3
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%arg0_1, 1, True), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add, 0), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min, -0.3333333333333333), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, %sub_1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_1, 0), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_1, -0.3333333333333333), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1], True), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_4, %sub_2), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_2, 0), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_2, -0.3333333333333333), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_5, [1], True), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%sum_3,), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_6, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%pow_7, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_4, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div,), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%neg, %getitem), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %add_3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_4, 0), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_3, -0.3333333333333333), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%pow_8, [%iota_default, %arg1_1]), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_9 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%index, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%pow_9, 1), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_6, -3), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div_1,), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_10 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%pow_8, -2), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_10, [1]), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sum_4), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_7, -2), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%neg_1, %div_2), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_8, 4), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%div_3,), kwargs = {})
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0 = async_compile.triton('triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0', '''
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0(in_ptr0, in_ptr1, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 - tmp6
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = -3.0
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.0
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp11, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = -0.3333333333333333
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.pow(tmp13, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp1 - tmp6
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.pow(tmp19, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15 + tmp20
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp3 - tmp6
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.pow(tmp25, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp21 + tmp26
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp5 - tmp6
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = triton_helpers.maximum(tmp30, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = libdevice.pow(tmp31, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp27 + tmp32
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1, 1], 1, tl.int32)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 / tmp33
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp35
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp7
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = libdevice.pow(tmp41, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp37 * tmp16
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = libdevice.pow(tmp46, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp42 + tmp47
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp37 * tmp22
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp49 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = triton_helpers.maximum(tmp51, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = libdevice.pow(tmp52, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp48 + tmp53
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 * tmp28
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = triton_helpers.maximum(tmp57, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.pow(tmp58, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp54 + tmp59
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp34 / tmp60
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp61
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp62 * tmp61
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp7
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = triton_helpers.maximum(tmp66, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = libdevice.pow(tmp67, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp63 * tmp16
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = triton_helpers.maximum(tmp71, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = libdevice.pow(tmp72, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp68 + tmp73
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp63 * tmp22
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp76 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = triton_helpers.maximum(tmp77, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = libdevice.pow(tmp78, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp74 + tmp79
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp63 * tmp28
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = triton_helpers.maximum(tmp83, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = libdevice.pow(tmp84, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp80 + tmp85
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp34 / tmp86
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 * tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp34 / tmp88
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp89 * tmp89
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp90 * tmp89
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp91 - tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp92 * tmp14
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = -tmp93
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 + tmp6
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp0 - tmp95
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp96 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp97 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = triton_helpers.maximum(tmp98, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = libdevice.pow(tmp99, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp34 / tmp100
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp101 * tmp101
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp1 - tmp95
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = triton_helpers.maximum(tmp105, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = libdevice.pow(tmp106, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp34 / tmp107
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp108 * tmp108
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp102 + tmp109
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp3 - tmp95
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp111 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp112 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = triton_helpers.maximum(tmp113, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = libdevice.pow(tmp114, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp34 / tmp115
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp116 * tmp116
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp110 + tmp117
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp5 - tmp95
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp119 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tmp120 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = triton_helpers.maximum(tmp121, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = libdevice.pow(tmp122, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp34 / tmp123
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tmp124 * tmp124
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tmp118 + tmp125
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tl.full([XBLOCK, RBLOCK], 4, tl.int32)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = tmp127 + tmp128
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tmp127 < 0
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = tl.where(tmp130, tmp129, tmp127)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp131) & (tmp131 < 4), "index out of bounds: 0 <= tmp131 < 4")
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tl.load(in_ptr0 + (r0 + 16*tmp131 + 64*r1), None)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = tmp133 - tmp95
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp134 * tmp8
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = tmp135 + tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = triton_helpers.maximum(tmp136, tmp12)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = libdevice.pow(tmp137, tmp14)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp34 / tmp138
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = tmp139 * tmp139
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tmp140 * tmp139
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tmp141 - tmp10
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tmp142 * tmp14
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = -tmp143
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = tmp10 - tmp126
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp146 = -0.5
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp147 = tmp145 * tmp146
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp148 = tmp144 - tmp147
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp149 = 0.25
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp150 = tmp148 * tmp149
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp151 = tl.broadcast_to(tmp150, [XBLOCK, RBLOCK])
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp153 = tl.sum(tmp151, 1)[:, None]
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp153, None)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, a_tilde, mul, add, clamp, pow_1, za, pow_2, sub_1, a_tilde_1, mul_2, add_1, clamp_1, pow_3, za_1, pow_4, sub_2, a_tilde_2, mul_4, add_2, clamp_2, pow_5, za_2, truediv, pow_7, sub_4, truediv_1, neg, add_3, sm, mul_6, add_4, clamp_3, x, y_hat, pow_9, sub_6, truediv_2, neg_1, pow_10, sum_4, sub_7, truediv_3, out, truediv_4, sum_5], Original ATen: [aten.max, aten.sub, aten.mul, aten.add, aten.clamp, aten.pow, aten.sum, aten.reciprocal, aten.div, aten.neg, aten.index, aten.rsub]
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0.run(arg0_1, arg1_1, buf5, 1, 64, grid=grid(1), stream=stream0)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, )
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:20:23.379000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:23.385000 3789799 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bq/cbqsbx2g6vvku4ibvwntx7oj4ehq7m4ffkwek2sguwnveir2pggm.py
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['25_inference']
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [max_1, a_tilde, mul, add, clamp, pow_1, za, pow_2, sub_1, a_tilde_1, mul_2, add_1, clamp_1, pow_3, za_1, pow_4, sub_2, a_tilde_2, mul_4, add_2, clamp_2, pow_5, za_2, truediv, pow_7, sub_4, truediv_1, neg, add_3, sm, mul_6, add_4, clamp_3, x, y_hat, pow_9, sub_6, truediv_2, neg_1, pow_10, sum_4, sub_7, truediv_3, out, truediv_4, sum_5], Original ATen: [aten.max, aten.sub, aten.mul, aten.add, aten.clamp, aten.pow, aten.sum, aten.reciprocal, aten.div, aten.neg, aten.index, aten.rsub]
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_tilde => sub
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_tilde_1 => mul_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   a_tilde_2 => mul_3
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp => clamp_min
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_min_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_2 => clamp_min_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_3 => clamp_min_3
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_6 => mul_7
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg => neg
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   neg_1 => neg_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => sub_8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_10 => pow_10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_3 => pow_3
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_4 => pow_4
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_5 => pow_5
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_7 => pow_7
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_9 => pow_9
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sm => sub_5
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_6 => sub_6
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_7 => sub_7
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_5 => sum_5
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => mul_6, reciprocal
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_1 => div
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_2 => div_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_4 => div_3
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => pow_8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y_hat => index
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   za => sum_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   za_1 => sum_2
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   za_2 => sum_3
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%arg0_1, 1, True), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add, 0), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min, -0.3333333333333333), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1], True), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_1, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_2, %sub_1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_1, 0), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_3 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_1, -0.3333333333333333), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_3, [1], True), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_4 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sum_2, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %getitem), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%pow_4, %sub_2), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_2, 0), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_5 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_2, -0.3333333333333333), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_5, [1], True), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %reciprocal : [num_users=1] = call_function[target=torch.ops.aten.reciprocal.default](args = (%sum_3,), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%reciprocal, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_6, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%pow_7, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_4, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div,), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%neg, %getitem), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %add_3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_3 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%add_4, 0), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=2] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%clamp_min_3, -0.3333333333333333), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=1] = call_function[target=torch.ops.aten.index.Tensor](args = (%pow_8, [%iota_default, %arg1_1]), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_9 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%index, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%pow_9, 1), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_6, -3), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%div_1,), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_10 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%pow_8, -2), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_10, [1]), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sum_4), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_7, -2), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%neg_1, %div_2), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_8, 4), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%div_3,), kwargs = {})
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0 = async_compile.triton('triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0', '''
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0(in_ptr0, in_ptr1, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 16)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 16
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0 + 64*r1), None)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (16 + r0 + 64*r1), None)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (32 + r0 + 64*r1), None)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (48 + r0 + 64*r1), None)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp127 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last')
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp0, tmp1)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp2, tmp3)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp4, tmp5)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp0 - tmp6
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = -3.0
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 0.0
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = triton_helpers.maximum(tmp11, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = -0.3333333333333333
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.pow(tmp13, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp1 - tmp6
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = libdevice.pow(tmp19, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp15 + tmp20
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp3 - tmp6
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = libdevice.pow(tmp25, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp21 + tmp26
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp5 - tmp6
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = triton_helpers.maximum(tmp30, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = libdevice.pow(tmp31, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp27 + tmp32
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full([1, 1], 1, tl.int32)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 / tmp33
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp36 * tmp35
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 * tmp7
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp40, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = libdevice.pow(tmp41, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp37 * tmp16
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = triton_helpers.maximum(tmp45, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = libdevice.pow(tmp46, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp42 + tmp47
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp37 * tmp22
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp49 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = triton_helpers.maximum(tmp51, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = libdevice.pow(tmp52, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp48 + tmp53
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp37 * tmp28
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp56 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = triton_helpers.maximum(tmp57, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = libdevice.pow(tmp58, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp54 + tmp59
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp34 / tmp60
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp61 * tmp61
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp62 * tmp61
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp7
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp65 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = triton_helpers.maximum(tmp66, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = libdevice.pow(tmp67, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp63 * tmp16
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp69 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp70 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = triton_helpers.maximum(tmp71, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = libdevice.pow(tmp72, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp68 + tmp73
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tmp63 * tmp22
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp76 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = triton_helpers.maximum(tmp77, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = libdevice.pow(tmp78, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp74 + tmp79
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp63 * tmp28
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp81 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tmp82 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = triton_helpers.maximum(tmp83, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = libdevice.pow(tmp84, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp80 + tmp85
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp34 / tmp86
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 * tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp34 / tmp88
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp89 * tmp89
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp90 * tmp89
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp91 - tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tmp92 * tmp14
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = -tmp93
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 + tmp6
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp0 - tmp95
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tmp96 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tmp97 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = triton_helpers.maximum(tmp98, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = libdevice.pow(tmp99, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp34 / tmp100
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp101 * tmp101
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tmp1 - tmp95
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = triton_helpers.maximum(tmp105, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = libdevice.pow(tmp106, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tmp34 / tmp107
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp108 * tmp108
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp102 + tmp109
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tmp3 - tmp95
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp111 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tmp112 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = triton_helpers.maximum(tmp113, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = libdevice.pow(tmp114, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp34 / tmp115
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp116 * tmp116
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp110 + tmp117
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp5 - tmp95
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tmp119 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tmp120 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = triton_helpers.maximum(tmp121, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = libdevice.pow(tmp122, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tmp34 / tmp123
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tmp124 * tmp124
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp126 = tmp118 + tmp125
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp128 = tl.full([XBLOCK, RBLOCK], 4, tl.int32)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp129 = tmp127 + tmp128
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp130 = tmp127 < 0
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp131 = tl.where(tmp130, tmp129, tmp127)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert((0 <= tmp131) & (tmp131 < 4), "index out of bounds: 0 <= tmp131 < 4")
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp133 = tl.load(in_ptr0 + (r0 + 16*tmp131 + 64*r1), None)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp134 = tmp133 - tmp95
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp135 = tmp134 * tmp8
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp136 = tmp135 + tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp137 = triton_helpers.maximum(tmp136, tmp12)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp138 = libdevice.pow(tmp137, tmp14)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp139 = tmp34 / tmp138
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp140 = tmp139 * tmp139
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp141 = tmp140 * tmp139
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp142 = tmp141 - tmp10
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp143 = tmp142 * tmp14
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp144 = -tmp143
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp145 = tmp10 - tmp126
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp146 = -0.5
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp147 = tmp145 * tmp146
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp148 = tmp144 - tmp147
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp149 = 0.25
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp150 = tmp148 * tmp149
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp151 = tl.broadcast_to(tmp150, [XBLOCK, RBLOCK])
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp153 = tl.sum(tmp151, 1)[:, None]
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp153, None)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, ), (1, ))
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((), (), torch.float32)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [max_1, a_tilde, mul, add, clamp, pow_1, za, pow_2, sub_1, a_tilde_1, mul_2, add_1, clamp_1, pow_3, za_1, pow_4, sub_2, a_tilde_2, mul_4, add_2, clamp_2, pow_5, za_2, truediv, pow_7, sub_4, truediv_1, neg, add_3, sm, mul_6, add_4, clamp_3, x, y_hat, pow_9, sub_6, truediv_2, neg_1, pow_10, sum_4, sub_7, truediv_3, out, truediv_4, sum_5], Original ATen: [aten.max, aten.sub, aten.mul, aten.add, aten.clamp, aten.pow, aten.sum, aten.reciprocal, aten.div, aten.neg, aten.index, aten.rsub]
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0.run(arg0_1, arg1_1, buf5, 1, 64, grid=grid(1), stream=stream0)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, )
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.int64)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:09:22.285000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:22.291000 1107798 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/gd/cgdxf76hwsevgotvi77ur5jyrlvwaow55dghla3o4izvaq2po5tc.py
