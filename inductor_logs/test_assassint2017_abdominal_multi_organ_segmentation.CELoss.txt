V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vl/cvlzzht6oafhg2l3kckmpbfmyluvrjxbdzc34y7gptg2sv5vnetv.py
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, loss_stage1], Original ATen: [aten._softmax, aten._log_softmax]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage1 => amax, sub
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax_2, exp_2, sub_4
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_2 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax_2), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_2 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_4,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_0 = async_compile.triton('triton_poi_fused__log_softmax__softmax_0', '''
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp8, xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/a5/ca5rgc3ucrfie66m7aojl43yccx2zz2wlqmg342jqtwrn7vo2dit.py
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, max_1, softmax_1, max_2, loss_stage1, sub, exponential_term_stage1, loss_stage1_1, loss_stage2, sub_1, exponential_term_stage2, loss_stage2_1, loss], Original ATen: [aten._softmax, aten.max, aten._log_softmax, aten.mul, aten.sum, aten.neg, aten.rsub, aten.pow, aten.add]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exponential_term_stage1 => pow_1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exponential_term_stage2 => pow_2
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => add
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage1 => exp, log, mul, neg, sub_1, sum_2, sum_3
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage1_1 => mul_2
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage2 => exp_1, log_1, mul_1, neg_1, sub_3, sum_4, sum_5
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage2_1 => mul_3
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_6
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax_1 => div_1, sum_7
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_5
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_7
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_2, [1], True), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_2, %sum_6), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%div, 1), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_3, [1], True), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_3, %sum_7), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%div_1, 1), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %log), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %arg0_1), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_3,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %getitem), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_5, 2), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %pow_1), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_4,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %arg0_1), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_5,), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %getitem_2), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_7, 2), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg_1, %pow_2), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1 = async_compile.triton('triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1', '''
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (16 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr2 + (32 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr2 + (48 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr3 + (x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr3 + (16 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr3 + (32 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr3 + (48 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr4 + (x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr4 + (16 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr4 + (32 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr4 + (48 + x0 + 64*x1), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl_math.exp(tmp0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl_math.log(tmp10)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 - tmp11
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp2 - tmp11
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 + tmp17
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp5 - tmp11
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp8 - tmp11
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = -tmp26
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp28 / tmp34
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 / tmp34
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.maximum(tmp35, tmp36)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp31 / tmp34
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp37, tmp38)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp33 / tmp34
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp39, tmp40)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 1.0
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 - tmp41
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp43
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp27 * tmp44
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl_math.exp(tmp46)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl_math.exp(tmp48)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp47 + tmp49
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl_math.exp(tmp51)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp50 + tmp52
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl_math.exp(tmp54)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 + tmp55
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl_math.log(tmp56)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp46 - tmp57
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp13
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp48 - tmp57
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 * tmp16
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp59 + tmp61
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp51 - tmp57
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp20
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp62 + tmp64
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp54 - tmp57
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 * tmp24
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp65 + tmp67
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = -tmp68
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 + tmp73
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp74 + tmp75
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp70 / tmp76
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp71 / tmp76
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = triton_helpers.maximum(tmp77, tmp78)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp73 / tmp76
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = triton_helpers.maximum(tmp79, tmp80)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp75 / tmp76
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = triton_helpers.maximum(tmp81, tmp82)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp42 - tmp83
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp84 * tmp84
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp69 * tmp85
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp45 + tmp86
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp87, xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eu/ceu6ibf6jul6jlhcz75dfdd3b5vkbtboetigwqookzn3q2l3bdr5.py
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [gt, type_1], Original ATen: [aten.gt, aten._to_copy]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt => gt
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   type_1 => convert_element_type
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%arg0_1, 0), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%gt, torch.float32), kwargs = {})
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_gt_2 = async_compile.triton('triton_poi_fused__to_copy_gt_2', '''
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_gt_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_gt_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, xmask)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] cpp_fused_eq_sum_3 = async_compile.cpp_pybinding(['const float*', 'float*', 'bool*'], '''
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr0,
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        bool* out_ptr1)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             float tmp_acc0 = 0;
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             at::vec::Vectorized<float> tmp_acc0_vec = at::vec::Vectorized<float>(0);
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(256L); x0+=static_cast<int64_t>(16L))
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     if(C10_LIKELY(x0 >= static_cast<int64_t>(0) && x0 < static_cast<int64_t>(256L)))
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<int64_t>(x0), static_cast<int64_t>(16));
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         tmp_acc0_vec = tmp_acc0_vec + tmp0;
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             tmp_acc0 = tmp_acc0 + at::vec::vec_reduce_all<float, 1>([](at::vec::Vectorized<float>& x, at::vec::Vectorized<float>& y) { return x + y; }, tmp_acc0_vec);
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             out_ptr0[static_cast<int64_t>(0L)] = static_cast<float>(tmp_acc0);
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 auto tmp0 = out_ptr0[static_cast<int64_t>(0L)];
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 auto tmp1 = static_cast<float>(0.0);
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 auto tmp2 = tmp0 == tmp1;
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp2;
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] }
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''')
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, loss_stage1], Original ATen: [aten._softmax, aten._log_softmax]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_0.run(arg1_1, buf0, buf2, 256, grid=grid(256), stream=stream0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax_1, loss_stage2], Original ATen: [aten._softmax, aten._log_softmax]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_0.run(arg2_1, buf1, buf4, 256, grid=grid(256), stream=stream0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf3; del buf3  # reuse
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, max_1, softmax_1, max_2, loss_stage1, sub, exponential_term_stage1, loss_stage1_1, loss_stage2, sub_1, exponential_term_stage2, loss_stage2_1, loss], Original ATen: [aten._softmax, aten.max, aten._log_softmax, aten.mul, aten.sum, aten.neg, aten.rsub, aten.pow, aten.add]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1.run(buf6, buf2, arg0_1, buf0, buf4, buf1, 64, grid=grid(64), stream=stream0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [gt, type_1], Original ATen: [aten.gt, aten._to_copy]
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_gt_2.run(arg0_1, buf7, 256, grid=grid(256), stream=stream0)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf8 = empty_strided_cpu((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf8.copy_(buf7, False)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf7
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf9 = empty_strided_cpu((), (), torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf10 = empty_strided_cpu((), (), torch.bool)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cpp_fused_eq_sum_3(buf8, buf9, buf10)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, buf9, buf10, )
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:00:55.254000 980584 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:00:55.262000 980584 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/q5/cq5invisxpkxs7z776qzgnllg3vlxb4zai6h2w4fc7nfnqxi7ajy.py
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_inference']
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vl/cvlzzht6oafhg2l3kckmpbfmyluvrjxbdzc34y7gptg2sv5vnetv.py
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, loss_stage1], Original ATen: [aten._softmax, aten._log_softmax]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage1 => amax, sub
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => amax_2, exp_2, sub_4
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_2 : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax_2), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_2 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_4,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%arg1_1, [1], True), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg1_1, %amax), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_0 = async_compile.triton('triton_poi_fused__log_softmax__softmax_0', '''
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_0(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (32 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (48 + x0 + 64*x2), xmask, eviction_policy='evict_last')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = triton_helpers.maximum(tmp1, tmp2)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 - tmp7
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp9, xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp8, xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/a5/ca5rgc3ucrfie66m7aojl43yccx2zz2wlqmg342jqtwrn7vo2dit.py
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax, max_1, softmax_1, max_2, loss_stage1, sub, exponential_term_stage1, loss_stage1_1, loss_stage2, sub_1, exponential_term_stage2, loss_stage2_1, loss], Original ATen: [aten._softmax, aten.max, aten._log_softmax, aten.mul, aten.sum, aten.neg, aten.rsub, aten.pow, aten.add]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exponential_term_stage1 => pow_1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   exponential_term_stage2 => pow_2
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => add
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage1 => exp, log, mul, neg, sub_1, sum_2, sum_3
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage1_1 => mul_2
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage2 => exp_1, log_1, mul_1, neg_1, sub_3, sum_4, sum_5
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_stage2_1 => mul_3
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => max_1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_2 => max_2
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div, sum_6
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax_1 => div_1, sum_7
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub_5
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_7
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_6 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_2, [1], True), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_2, %sum_6), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_1 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%div, 1), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_7 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_3, [1], True), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp_3, %sum_7), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %max_2 : [num_users=1] = call_function[target=torch.ops.aten.max.dim](args = (%div_1, 1), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_2,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub, %log), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %arg0_1), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul, [1]), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_3,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %getitem), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_5, 2), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg, %pow_1), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp_1 : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_2,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp_1, [1], True), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%sum_4,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_2, %log_1), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %arg0_1), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%mul_1, [1]), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%sum_5,), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %getitem_2), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%sub_7, 2), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%neg_1, %pow_2), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %mul_3), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1 = async_compile.triton('triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1', '''
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 20, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (16 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (32 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (48 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (16 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (32 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr1 + (48 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr2 + (16 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr2 + (32 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr2 + (48 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr3 + (x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr3 + (16 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr3 + (32 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_ptr3 + (48 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr4 + (x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.load(in_ptr4 + (16 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tl.load(in_ptr4 + (32 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr4 + (48 + x0 + 64*x1), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl_math.exp(tmp0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl_math.exp(tmp2)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.exp(tmp8)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl_math.log(tmp10)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 - tmp11
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp2 - tmp11
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp14 + tmp17
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp5 - tmp11
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp8 - tmp11
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 + tmp25
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = -tmp26
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 + tmp31
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 + tmp33
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp28 / tmp34
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 / tmp34
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = triton_helpers.maximum(tmp35, tmp36)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp31 / tmp34
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = triton_helpers.maximum(tmp37, tmp38)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp33 / tmp34
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = triton_helpers.maximum(tmp39, tmp40)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = 1.0
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 - tmp41
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp43 * tmp43
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp27 * tmp44
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl_math.exp(tmp46)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl_math.exp(tmp48)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp47 + tmp49
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tl_math.exp(tmp51)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp50 + tmp52
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl_math.exp(tmp54)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp53 + tmp55
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl_math.log(tmp56)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp46 - tmp57
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 * tmp13
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp48 - tmp57
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp60 * tmp16
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp59 + tmp61
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp51 - tmp57
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 * tmp20
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp62 + tmp64
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp54 - tmp57
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp66 * tmp24
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp65 + tmp67
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = -tmp68
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tmp72 + tmp73
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp74 + tmp75
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp70 / tmp76
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tmp71 / tmp76
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = triton_helpers.maximum(tmp77, tmp78)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tmp73 / tmp76
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = triton_helpers.maximum(tmp79, tmp80)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp75 / tmp76
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = triton_helpers.maximum(tmp81, tmp82)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp42 - tmp83
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tmp84 * tmp84
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp69 * tmp85
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp45 + tmp86
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp87, xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eu/ceu6ibf6jul6jlhcz75dfdd3b5vkbtboetigwqookzn3q2l3bdr5.py
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [gt, type_1], Original ATen: [aten.gt, aten._to_copy]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   gt => gt
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   type_1 => convert_element_type
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%arg0_1, 0), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%gt, torch.float32), kwargs = {})
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_gt_2 = async_compile.triton('triton_poi_fused__to_copy_gt_2', '''
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_gt_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_gt_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp3, xmask)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] cpp_fused_eq_sum_3 = async_compile.cpp_pybinding(['const float*', 'float*', 'bool*'], '''
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        float* out_ptr0,
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                        bool* out_ptr1)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             float tmp_acc0 = 0;
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(256L); x0+=static_cast<int64_t>(1L))
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         auto tmp0 = in_ptr0[static_cast<int64_t>(x0)];
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                         tmp_acc0 = tmp_acc0 + tmp0;
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                     }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             out_ptr0[static_cast<int64_t>(0L)] = tmp_acc0;
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             {
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 auto tmp0 = out_ptr0[static_cast<int64_t>(0L)];
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 auto tmp1 = static_cast<float>(0.0);
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 auto tmp2 = tmp0 == tmp1;
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]                 out_ptr1[static_cast<int64_t>(0L)] = tmp2;
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] }
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''')
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, loss_stage1], Original ATen: [aten._softmax, aten._log_softmax]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_0.run(arg1_1, buf0, buf2, 256, grid=grid(256), stream=stream0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax_1, loss_stage2], Original ATen: [aten._softmax, aten._log_softmax]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_0.run(arg2_1, buf1, buf4, 256, grid=grid(256), stream=stream0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf3; del buf3  # reuse
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax, max_1, softmax_1, max_2, loss_stage1, sub, exponential_term_stage1, loss_stage1_1, loss_stage2, sub_1, exponential_term_stage2, loss_stage2_1, loss], Original ATen: [aten._softmax, aten.max, aten._log_softmax, aten.mul, aten.sum, aten.neg, aten.rsub, aten.pow, aten.add]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__log_softmax__softmax_add_max_mul_neg_pow_rsub_sum_1.run(buf6, buf2, arg0_1, buf0, buf4, buf1, 64, grid=grid(64), stream=stream0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = buf4; del buf4  # reuse
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [gt, type_1], Original ATen: [aten.gt, aten._to_copy]
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_gt_2.run(arg0_1, buf7, 256, grid=grid(256), stream=stream0)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf8 = empty_strided_cpu((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf8.copy_(buf7, False)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     del buf7
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf9 = empty_strided_cpu((), (), torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     buf10 = empty_strided_cpu((), (), torch.bool)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cpp_fused_eq_sum_3(buf8, buf9, buf10)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf6, buf9, buf10, )
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:50:07.631000 2272289 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:50:07.638000 2272289 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/w7/cw7c5cfioxfjfipisk7jxcrteg2wqkyf5ixlih2kifecgy4xjupq.py
