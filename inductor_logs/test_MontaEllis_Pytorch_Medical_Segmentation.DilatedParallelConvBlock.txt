V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['9_forward']
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tp/ctp5vwvgtkz5uyvha5kk5uki5gl5rg22tfxdh7qfbqwnrq5pvec5.py
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [p, d1_1], Original ATen: [aten.avg_pool2d, aten.add]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   d1_1 => add
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p => avg_pool2d
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%convolution, [3, 3], [1, 1], [1, 1]), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_1, %avg_pool2d), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_avg_pool2d_0 = async_compile.triton('triton_poi_fused_add_avg_pool2d_0', '''
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_avg_pool2d_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_avg_pool2d_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + x0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x3), tmp10 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-4) + x3), tmp16 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + x0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-3) + x3), tmp23 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = x1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-1) + x3), tmp30 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x3), tmp33 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (1 + x3), tmp36 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + x1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (3 + x3), tmp43 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (4 + x3), tmp46 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (5 + x3), tmp49 & xmask, other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 1 + ((-1)*x0) + ((-1)*x1) + x0*x1 + ((5) * ((5) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (5)))*((5) * ((5) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (5))) + ((-1)*x0*((5) * ((5) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (5)))) + ((-1)*x1*((5) * ((5) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (5)))) + ((5) * ((5) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (5))) + ((5) * ((5) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (5)))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 + tmp53
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp55, xmask)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5h/c5h2yvuni2jmoqkitpy24j5r5nj5n32rsiwvhiax2aazrmra76du.py
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add, %add_1, %add_2, %add_3], 1), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full(tmp12.shape, 0.0, tmp12.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp9, tmp12, tmp13)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 >= tmp7
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 3, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 < tmp16
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 & tmp17
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full(tmp23.shape, 0.0, tmp23.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp18, tmp23, tmp24)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp0 >= tmp16
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1], 4, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp0 < tmp27
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr1 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr2 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr3 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 + tmp34
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full(tmp35.shape, 0.0, tmp35.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp26, tmp35, tmp36)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp18, tmp25, tmp37)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp9, tmp14, tmp38)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp4, tmp5, tmp39)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp40, xmask)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/26/c26pa7nvsqko2tddva64zfg6dpkmxomdqzrrseuumslxrd2p65xt.py
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat_1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_4, %add_5, %add_6, %add_7], 1), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 * tmp7
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp4, tmp9, tmp10)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 >= tmp3
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 2, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 < tmp13
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 & tmp14
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (x0 + 16*x2), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr2 + (x0 + 16*x2), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (16 + x0 + 64*x2), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 * tmp20
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp15, tmp22, tmp23)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp13
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 3, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (x0 + 16*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (x0 + 16*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0 + 16*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (32 + x0 + 64*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.sigmoid(tmp34)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 * tmp35
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp33 + tmp36
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full(tmp37.shape, 0.0, tmp37.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp28, tmp37, tmp38)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp0 >= tmp26
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 4, tl.int64)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp0 < tmp41
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr2 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp43 + tmp44
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr3 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 + tmp46
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr4 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 + tmp48
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr1 + (48 + x0 + 64*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.sigmoid(tmp50)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 * tmp51
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp49 + tmp52
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full(tmp53.shape, 0.0, tmp53.dtype)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp40, tmp53, tmp54)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp28, tmp39, tmp55)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp15, tmp24, tmp56)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp4, tmp11, tmp57)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp58, xmask)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6k/c6k5hsfxivmpwccwp6ik5wwkvi3vz3525tbgztdbqqg2l6ck7bsm.py
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, output_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten._prelu_kernel]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_9, mul_5, mul_6, sub
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_2 => gt, mul_7, where
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_5), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_7), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze_9), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_11), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_9, 0), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %add_9), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_9, %mul_7), kwargs = {})
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3', '''
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, xnumel, XBLOCK : tl.constexpr):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp15
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp20, xmask)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (1, 4, 1, 1), (4, 1, 1, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 1, 3, 3), (9, 9, 3, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 1, 1, 1), (1, 1, 1, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d1], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d2], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf0, primals_4, stride=(1, 1), padding=(2, 2), dilation=(2, 2), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d3], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf0, primals_5, stride=(1, 1), padding=(4, 4), dilation=(4, 4), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d4], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf0, primals_6, stride=(1, 1), padding=(8, 8), dilation=(8, 8), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 1, 4, 4), (16, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf1; del buf1  # reuse
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [p, d1_1], Original ATen: [aten.avg_pool2d, aten.add]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_avg_pool2d_0.run(buf6, buf0, 64, grid=grid(64), stream=stream0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf6, buf2, buf3, buf4, buf7, 256, grid=grid(256), stream=stream0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(buf6, buf8, buf2, buf3, buf4, buf9, 256, grid=grid(256), stream=stream0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_1], Original ATen: [aten.convolution]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, output_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten._prelu_kernel]
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3.run(buf12, buf10, primals_9, primals_10, primals_11, primals_12, primals_13, 256, grid=grid(256), stream=stream0)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, buf0, buf2, buf3, buf4, buf6, buf7, buf8, buf9, buf10, )
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:31:43.124000 1399396 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:31:43.132000 1399396 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/vn/cvn3enzfybde6feqvzgaz26wwusdvpyom2jhdx2icfk5gb52t42y.py
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['9_forward']
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tp/ctp5vwvgtkz5uyvha5kk5uki5gl5rg22tfxdh7qfbqwnrq5pvec5.py
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [p, d1_1], Original ATen: [aten.avg_pool2d, aten.add]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   d1_1 => add
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   p => avg_pool2d
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=1] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%convolution, [3, 3], [1, 1], [1, 1]), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_1, %avg_pool2d), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_avg_pool2d_0 = async_compile.triton('triton_poi_fused_add_avg_pool2d_0', '''
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_avg_pool2d_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_avg_pool2d_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + x1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + x0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + x3), tmp10 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = x0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-4) + x3), tmp16 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + x0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-3) + x3), tmp23 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = x1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-1) + x3), tmp30 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (x3), tmp33 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (1 + x3), tmp36 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + x1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (3 + x3), tmp43 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (4 + x3), tmp46 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (5 + x3), tmp49 & xmask, other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 1 + ((-1)*x0) + ((-1)*x1) + x0*x1 + ((5) * ((5) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (5)))*((5) * ((5) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (5))) + ((-1)*x0*((5) * ((5) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (5)))) + ((-1)*x1*((5) * ((5) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (5)))) + ((5) * ((5) <= (2 + x0)) + (2 + x0) * ((2 + x0) < (5))) + ((5) * ((5) <= (2 + x1)) + (2 + x1) * ((2 + x1) < (5)))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp54 + tmp53
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp55, xmask)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5h/c5h2yvuni2jmoqkitpy24j5r5nj5n32rsiwvhiax2aazrmra76du.py
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat => cat
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add, %add_1, %add_2, %add_3], 1), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full(tmp12.shape, 0.0, tmp12.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp9, tmp12, tmp13)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 >= tmp7
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 3, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 < tmp16
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 & tmp17
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (x0 + 16*x2), tmp18 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full(tmp23.shape, 0.0, tmp23.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.where(tmp18, tmp23, tmp24)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp0 >= tmp16
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full([1], 4, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp0 < tmp27
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr1 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr2 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr3 + (x0 + 16*x2), tmp26 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 + tmp34
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full(tmp35.shape, 0.0, tmp35.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp26, tmp35, tmp36)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp18, tmp25, tmp37)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp9, tmp14, tmp38)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp4, tmp5, tmp39)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp40, xmask)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/26/c26pa7nvsqko2tddva64zfg6dpkmxomdqzrrseuumslxrd2p65xt.py
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat_1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_4, %add_5, %add_6, %add_7], 1), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x0 + 64*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 * tmp7
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp5 + tmp8
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(tmp4, tmp9, tmp10)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 >= tmp3
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 2, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp0 < tmp13
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 & tmp14
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (x0 + 16*x2), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr2 + (x0 + 16*x2), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (16 + x0 + 64*x2), tmp15 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.sigmoid(tmp19)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 * tmp20
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp18 + tmp21
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp15, tmp22, tmp23)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp13
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 3, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr0 + (x0 + 16*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr2 + (x0 + 16*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr3 + (x0 + 16*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr1 + (32 + x0 + 64*x2), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.sigmoid(tmp34)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp33 * tmp35
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp33 + tmp36
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.full(tmp37.shape, 0.0, tmp37.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp28, tmp37, tmp38)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp0 >= tmp26
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 4, tl.int64)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp0 < tmp41
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr2 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp43 + tmp44
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr3 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 + tmp46
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.load(in_ptr4 + (x0 + 16*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp47 + tmp48
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr1 + (48 + x0 + 64*x2), tmp40 & xmask, eviction_policy='evict_last', other=0.0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.sigmoid(tmp50)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp49 * tmp51
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp49 + tmp52
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.full(tmp53.shape, 0.0, tmp53.dtype)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp40, tmp53, tmp54)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp28, tmp39, tmp55)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp15, tmp24, tmp56)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp4, tmp11, tmp57)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp58, xmask)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/6k/c6k5hsfxivmpwccwp6ik5wwkvi3vz3525tbgztdbqqg2l6ck7bsm.py
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, output_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten._prelu_kernel]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_9, mul_5, mul_6, sub
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_2 => gt, mul_7, where
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_6, %unsqueeze_5), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_7), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, %unsqueeze_9), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_6, %unsqueeze_11), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%add_9, 0), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, %add_9), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%gt, %add_9, %mul_7), kwargs = {})
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3', '''
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, xnumel, XBLOCK : tl.constexpr):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = 0.0
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 > tmp16
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp15
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp17, tmp15, tmp19)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp20, xmask)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13 = args
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (1, 4, 1, 1), (4, 1, 1, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 1, 3, 3), (9, 9, 3, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 1, 1, 1), (1, 1, 1, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, ), (1, ))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d1], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d2], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf0, primals_4, stride=(1, 1), padding=(2, 2), dilation=(2, 2), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d3], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = extern_kernels.convolution(buf0, primals_5, stride=(1, 1), padding=(4, 4), dilation=(4, 4), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf3, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [d4], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf0, primals_6, stride=(1, 1), padding=(8, 8), dilation=(8, 8), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 1, 4, 4), (16, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = buf1; del buf1  # reuse
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [p, d1_1], Original ATen: [aten.avg_pool2d, aten.add]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_avg_pool2d_0.run(buf6, buf0, 64, grid=grid(64), stream=stream0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat], Original ATen: [aten.cat]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf6, buf2, buf3, buf4, buf7, 256, grid=grid(256), stream=stream0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_5], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_7, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(buf6, buf8, buf2, buf3, buf4, buf9, 256, grid=grid(256), stream=stream0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_1], Original ATen: [aten.convolution]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_8, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = buf11; del buf11  # reuse
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, output_2], Original ATen: [aten._native_batch_norm_legit_no_training, aten._prelu_kernel]
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_3.run(buf12, buf10, primals_9, primals_10, primals_11, primals_12, primals_13, 256, grid=grid(256), stream=stream0)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, buf0, buf2, buf3, buf4, buf6, buf7, buf8, buf9, buf10, )
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((1, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13])
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:21:58.293000 3913846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:21:58.302000 3913846 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/4h/c4hqzk4iit3a5dpcddsr25gcgic3rbcmnnvn7f5a6eyiye7pd6rl.py
