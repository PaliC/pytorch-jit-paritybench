V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_forward']
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3h/c3hpecenggnrxcqg3nyshgwbawgb3vfvl2axvlomnkql4xptnmer.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 48
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 27*y1), tmp0, xmask & ymask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rk/crkqip7ffcfqbmsp45eehhaktv7l52fmuxgtb6gz4wgizbjcmw4a.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 16*x2 + 144*y1), tmp0, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/az/cazdt4eac53o47y4abuwbxvsaadhafr2pfig3u32lsk5wu2h4nog.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4096
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z5/cz5lcpzem5jshoxsyxcxgxhiha6q7ktzqnt2hpqcbwodal3x5j3j.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v2/cv2pmewnv75qopjeemipmicxycwgwldxplrujnsdidwoepu6aupv.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_4 = async_compile.triton('triton_poi_fused_4', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16384
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3y/c3ybaagrpyprvu4qucwd5owykjor76dxa5rtm4m76njylkiiywna.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_5 = async_compile.triton('triton_poi_fused_5', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xz/cxzcrugq4kcwxq7htwrwvbkq7zxo3viqlah4bvlf6slq5i3eb3jh.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_6 = async_compile.triton('triton_poi_fused_6', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/jh/cjhhnfinlhhffv5btkdvfwwwcotaigx3vwp5gtzhat7lb2a6j2x3.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu, std], Original ATen: [aten.mean, aten.std]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu => mean
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => var
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1, 2, 3], True), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%primals_1, [1, 2, 3]), kwargs = {correction: 1.0, keepdim: True})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mean_std_7 = async_compile.triton('triton_red_fused_mean_std_7', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8, 'r': 8192},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mean_std_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mean_std_7(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 6144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 6144*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = _tmp2 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask & xmask, tmp3, _tmp2)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             tmp1, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean = tl.where(rmask & xmask, tmp4_mean_next, tmp4_mean)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_m2 = tl.where(rmask & xmask, tmp4_m2_next, tmp4_m2)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_weight = tl.where(rmask & xmask, tmp4_weight_next, tmp4_weight)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_tmp, tmp5_tmp, tmp6_tmp = triton_helpers.welford(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean, tmp4_m2, tmp4_weight, 1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp4_tmp[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp5_tmp[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp6_tmp[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp5, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp6, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3w/c3wdegafx6jzwccwh46g6tamo3yqgjrc3abze7l5plk545t3jk2k.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu], Original ATen: [aten.mean]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu => mean
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1, 2, 3], True), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_8 = async_compile.triton('triton_per_fused_mean_8', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 2},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_8(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/id/cid4egcp7emppqjmeu66anhzusifiv5njqcm6ej5unfjlvkk7npf.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [std], Original ATen: [aten.std]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => var
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%primals_1, [1, 2, 3]), kwargs = {correction: 1.0, keepdim: True})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_std_9 = async_compile.triton('triton_per_fused_std_9', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 2},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_std_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_std_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 2*x0), xmask, other=0.0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1 + 2*x0), xmask, other=0.0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu, std, std_min, sub, max_1, x], Original ATen: [aten.mean, aten.std, aten.div, aten.sub, aten.maximum]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => maximum
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu => mean
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => sqrt, var
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std_min => full_default
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => div_1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1, 2, 3], True), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%primals_1, [1, 2, 3]), kwargs = {correction: 1.0, keepdim: True})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%var,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 1, 1, 1], 0.009021097794175148), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %mean), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%sqrt, %full_default), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, %maximum), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_maximum_mean_std_sub_10 = async_compile.triton('triton_poi_fused_div_maximum_mean_std_sub_10', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.DEFAULT,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_maximum_mean_std_sub_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_maximum_mean_std_sub_10(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y1), ymask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (y1), ymask, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 12288.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 / tmp2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 - tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 12287.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 / tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.009021097794175148
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp4 / tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp11, ymask)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5f/c5fphigm63tonbkfsio5et3iiaj2gxavq7fjjmmxiy2jeoxv3mzz.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, x_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub_1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => relu
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_3), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_11', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_11(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yy/cyyga4wm6g6yqt2p2xwshaxtsibl3ci2wgxkztlayxxzvycy6i7q.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_1, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_1 => add_3, mul_4, mul_5, sub_2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => relu_1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_11), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_12', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dr/cdrni4xpq2cuzti3skg4zc5hham7wzxdlsk3ztogbiraq3uxbydg.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, batch_norm_2, out_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_2 => add_6, mul_7, mul_8, sub_3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => relu_2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %unsqueeze_17), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_19), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_6,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3w/c3w4f6ec6ti4bur3a6eix4j474hfiwqzjlazblaqmdzy5np5yuzg.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, batch_norm_4, out_6], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_4 => add_11, mul_13, mul_14, sub_5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_6 => relu_4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %convolution_5), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %unsqueeze_33), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_35), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_11,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_46 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %unsqueeze_442), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_48 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %unsqueeze_466), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 / tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp6 * tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp20, tmp19)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp2 - tmp22
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp23, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gt/cgtn5ym225twmwli6d3cqs3faxedyc3gmwmcsqaodacswjuf6uux.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3, batch_norm_6, out_9], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_6 => add_16, mul_19, mul_20, sub_7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_9 => relu_6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %convolution_5), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %convolution_7), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_14, %unsqueeze_49), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_51), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_53), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_55), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_16,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_44 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_14, %unsqueeze_418), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp23, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/lc/clc33ybv34h36urjei2dnuvkecgqwqa4ryupqjemz74byn5yx2ya.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4, batch_norm_8, x_2], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_8 => add_21, mul_25, mul_26, sub_9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => add_19
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => relu_8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %convolution_5), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %convolution_7), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %convolution_9), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_19, %unsqueeze_65), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_67), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_69), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_71), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_42 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_19, %unsqueeze_394), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 64)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp23)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hz/chzwrwbdspx3xzwblh45ndjdsbhie2u6wu2jzrmfvolc4zj3oh2q.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_9, out_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_9 => add_23, mul_28, mul_29, sub_10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_12 => relu_9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_10, %unsqueeze_73), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %unsqueeze_75), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_28, %unsqueeze_77), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_79), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_9 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_23,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_17 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_17', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_17(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v2/cv2hopsybvwokmmez3gccox4p2gdqv6nofn6bcgyf25za6suy5u2.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, batch_norm_10, out_14], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_10 => add_26, mul_31, mul_32, sub_11
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_14 => relu_10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_24, %unsqueeze_81), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_83), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_31, %unsqueeze_85), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_32, %unsqueeze_87), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_10 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_26,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_40 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_24, %unsqueeze_370), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp4, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mf/cmffcbukh2twv4tsjlnli56an5fk674iayevsdb76562xyahqqqz.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, batch_norm_12, out_17], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_12 => add_31, mul_37, mul_38, sub_13
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => add_29
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_17 => relu_12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_29 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_24, %convolution_14), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_29, %unsqueeze_97), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %unsqueeze_99), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_37, %unsqueeze_101), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_31 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_38, %unsqueeze_103), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_12 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_31,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_38 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_29, %unsqueeze_346), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 / tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp6 * tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp20, tmp19)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vp/cvp4u7q2yewm5vhii5fah37prv66jflpvttg7hs3dhmusfuxe4zc.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7, batch_norm_14, out_20], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_14 => add_36, mul_43, mul_44, sub_15
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => add_29
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => add_34
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_20 => relu_14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_29 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_24, %convolution_14), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_29, %convolution_16), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_34, %unsqueeze_113), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_43 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_115), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_44 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_43, %unsqueeze_117), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_36 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_44, %unsqueeze_119), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_14 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_36,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_36 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_34, %unsqueeze_322), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp23, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/px/cpxuyrs26qpxctf5l4vfa2qcbfcuxloodsgtdns6yrxzul2neiwf.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7, input_8, batch_norm_16, x_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_16 => add_41, mul_49, mul_50, sub_17
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => add_29
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => add_34
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_39
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => relu_16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_29 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_24, %convolution_14), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_29, %convolution_16), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_39 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_34, %convolution_18), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_39, %unsqueeze_129), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_49 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %unsqueeze_131), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_50 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_49, %unsqueeze_133), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_41 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_50, %unsqueeze_135), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_16 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_41,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_39, %unsqueeze_298), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 128)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp23)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/eb/cebrjatpbqlo4hdr77tobxgdl7nkso46cdx3r23wmmc5d5kwpa73.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_17, out_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_17 => add_43, mul_52, mul_53, sub_18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_23 => relu_17
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_19, %unsqueeze_137), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_52 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %unsqueeze_139), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_52, %unsqueeze_141), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_43 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_53, %unsqueeze_143), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_17 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_43,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_22 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_22', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_22(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/mw/cmwmhug6amdtltbja5qpdzsdf6emnczsvfiknbdfazkcshvapkun.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, batch_norm_18, out_25], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_18 => add_46, mul_55, mul_56, sub_19
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_25 => relu_18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_44, %unsqueeze_145), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %unsqueeze_147), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %unsqueeze_149), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_46 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_56, %unsqueeze_151), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_18 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_46,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_44, %unsqueeze_274), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp4, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vf/cvfbvkxtsczhcdryn5a2x4p7dwmpt47tou7suxg5vdo4a6s6wl5x.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, batch_norm_20, out_28], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_20 => add_51, mul_61, mul_62, sub_21
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => add_49
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_28 => relu_20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_44, %convolution_23), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_49, %unsqueeze_161), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_163), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_62 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_61, %unsqueeze_165), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_51 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_62, %unsqueeze_167), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_20 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_51,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_30 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_49, %unsqueeze_250), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 / tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp6 * tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp20, tmp19)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ah/cahrzqaku4efjo2m6rhjq4kqet54ntrjxy6oncgujmo2m6pple34.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, input_11, batch_norm_22, out_31], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_22 => add_56, mul_67, mul_68, sub_23
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => add_49
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_54
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_31 => relu_22
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_44, %convolution_23), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_54 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_49, %convolution_25), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_54, %unsqueeze_177), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_179), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_68 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_67, %unsqueeze_181), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_56 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_68, %unsqueeze_183), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_22 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_56,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_28 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_54, %unsqueeze_226), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp23, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cx/ccxcqp3pw3awejjwa7hrc7vxnelqnd6ong3sya744o7epq3hhaum.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12, batch_norm_24, out_34], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_24 => add_61, mul_73, mul_74, sub_25
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => add_49
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_54
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => add_59
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_34 => relu_24
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_44, %convolution_23), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_54 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_49, %convolution_25), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_59 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_54, %convolution_27), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_59, %unsqueeze_193), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_73 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_25, %unsqueeze_195), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_74 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_73, %unsqueeze_197), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_61 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_74, %unsqueeze_199), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_24 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_61,), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_26 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_59, %unsqueeze_202), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 0, tl.int32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp23)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/xx/cxxxxlabx2bmk3xnpgdiyworg6cdjxzus2bjsrogd4jryn7wx3yd.py
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_36], Original ATen: [aten.view]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_36 => view
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%avg_pool2d, [-1, 256]), kwargs = {})
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_view_27 = async_compile.triton('triton_poi_fused_view_27', '''
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_view_27', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_view_27(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (256*((x0 % 4)) + 1024*((x0 + 256*x1) // 1024) + ((((x0 + 256*x1) // 4) % 256))), None, eviction_policy='evict_last')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131 = args
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 3, 3, 3), (27, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, 16, 3, 3), (144, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, 16, 1, 1), (16, 1, 1, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (64, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (64, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (128, 64, 3, 3), (576, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (128, 64, 1, 1), (64, 1, 1, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_55, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_56, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_57, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_58, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_59, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_60, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_61, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_62, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_63, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_64, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_65, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_66, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_67, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_68, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_69, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_70, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_71, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_72, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_73, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_74, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_75, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_76, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_77, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_78, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_79, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_80, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_81, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_82, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_83, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_84, (128, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_85, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_86, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_87, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_88, (128, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_89, (256, 128, 3, 3), (1152, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_90, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_91, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_92, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_93, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_94, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_95, (256, 128, 1, 1), (128, 1, 1, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_96, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_97, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_98, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_99, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_100, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_101, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_102, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_103, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_104, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_105, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_106, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_107, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_108, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_109, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_110, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_111, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_112, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_113, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_114, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_115, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_116, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_117, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_118, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_119, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_120, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_121, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_122, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_123, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_124, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_125, (256, 256, 3, 3), (2304, 9, 3, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_126, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_127, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_128, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_129, (256, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_130, (10, 256), (256, 1))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_131, (10, ), (1, ))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 3, 3, 3), (27, 1, 9, 3), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 48, 9, grid=grid(48, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 16, 3, 3), (144, 1, 48, 16), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_7, buf1, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_12, buf2, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_18, buf3, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_18
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_23, buf4, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_23
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_28, buf5, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_33, buf6, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_38, buf7, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_38
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_43, buf8, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_43
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_48, buf9, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_48
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_53, buf10, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_53
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_59, buf11, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_59
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_64, buf12, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_64
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_69, buf13, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_69
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_74, buf14, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_74
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_79, buf15, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_79
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_84, buf16, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_84
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_5.run(primals_89, buf17, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_89
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_94, buf18, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_94
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_100, buf19, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_100
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_105, buf20, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_105
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_110, buf21, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_110
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_115, buf22, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_115
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_120, buf23, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_120
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_125, buf24, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_125
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu, std], Original ATen: [aten.mean, aten.std]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mean_std_7.run(primals_1, buf25, buf27, buf28, buf29, 8, 6144, grid=grid(8), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu], Original ATen: [aten.mean]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_8.run(buf25, buf26, 4, 2, grid=grid(4), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [std], Original ATen: [aten.std]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_std_9.run(buf27, buf28, buf29, buf31, 4, 2, grid=grid(4), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf27
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf28
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf29
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu, std, std_min, sub, max_1, x], Original ATen: [aten.mean, aten.std, aten.div, aten.sub, aten.maximum]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_maximum_mean_std_sub_10.run(primals_1, buf26, buf31, buf33, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf31
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf33, buf0, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 16, 64, 64), (65536, 1, 1024, 16))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 16, 64, 64), (65536, 1, 1024, 16), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, x_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_11.run(buf34, primals_3, primals_4, primals_5, primals_6, buf35, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf35, buf1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_1, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf36, primals_8, primals_9, primals_10, primals_11, buf37, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = extern_kernels.convolution(buf35, primals_13, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf39, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, batch_norm_2, out_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13.run(buf39, buf38, primals_14, primals_15, primals_16, primals_17, buf40, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = extern_kernels.convolution(buf40, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf41, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_3, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf41, primals_19, primals_20, primals_21, primals_22, buf42, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = extern_kernels.convolution(buf42, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf43, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf104 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf105 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, batch_norm_4, out_6], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14.run(buf39, buf38, buf43, primals_24, primals_25, primals_26, primals_27, primals_14, buf44, buf104, buf105, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_24
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_6], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = extern_kernels.convolution(buf44, buf5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf45, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_5, out_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf45, primals_29, primals_30, primals_31, primals_32, buf46, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_8], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = extern_kernels.convolution(buf46, buf6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf47, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf103 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3, batch_norm_6, out_9], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15.run(buf39, buf38, buf43, buf47, primals_34, primals_35, primals_36, primals_37, buf48, buf103, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_34
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_8], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = extern_kernels.convolution(buf48, buf7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf49, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_7, out_10], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf49, primals_39, primals_40, primals_41, primals_42, buf50, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_42
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_11], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = extern_kernels.convolution(buf50, buf8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf51, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = buf39; del buf39  # reuse
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf102 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4, batch_norm_8, x_2], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16.run(buf52, buf38, buf43, buf47, buf51, primals_44, primals_45, primals_46, primals_47, buf53, buf102, 1048576, grid=grid(1048576), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf38
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf43
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf47
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf51
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf52
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_44
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_47
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_10], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = extern_kernels.convolution(buf53, buf9, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf54, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_9, out_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf54, primals_49, primals_50, primals_51, primals_52, buf55, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_52
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_13], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = extern_kernels.convolution(buf55, buf10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf56, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_12], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = extern_kernels.convolution(buf53, primals_54, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf57, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf101 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, batch_norm_10, out_14], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18.run(buf57, buf56, primals_55, primals_56, primals_57, primals_58, buf58, buf101, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_55
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_58
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_13], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = extern_kernels.convolution(buf58, buf11, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf59, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_11, out_15], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf59, primals_60, primals_61, primals_62, primals_63, buf60, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_63
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_16], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = extern_kernels.convolution(buf60, buf12, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf61, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf100 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, batch_norm_12, out_17], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19.run(buf57, buf56, buf61, primals_65, primals_66, primals_67, primals_68, buf62, buf100, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_65
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_68
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_15], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf63 = extern_kernels.convolution(buf62, buf13, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf63, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf64 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_13, out_18], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf63, primals_70, primals_71, primals_72, primals_73, buf64, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_73
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_19], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = extern_kernels.convolution(buf64, buf14, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf65, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf66 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf99 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7, batch_norm_14, out_20], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20.run(buf57, buf56, buf61, buf65, primals_75, primals_76, primals_77, primals_78, buf66, buf99, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_75
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_78
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_17], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf67 = extern_kernels.convolution(buf66, buf15, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf67, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf68 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_15, out_21], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf67, primals_80, primals_81, primals_82, primals_83, buf68, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_83
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_22], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf69 = extern_kernels.convolution(buf68, buf16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf69, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf70 = buf57; del buf57  # reuse
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf71 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf98 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7, input_8, batch_norm_16, x_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21.run(buf70, buf56, buf61, buf65, buf69, primals_85, primals_86, primals_87, primals_88, buf71, buf98, 524288, grid=grid(524288), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf56
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf61
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf65
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf69
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf70
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_85
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_88
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_19], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf72 = extern_kernels.convolution(buf71, buf17, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf72, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf73 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_17, out_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf72, primals_90, primals_91, primals_92, primals_93, buf73, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_93
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_24], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf74 = extern_kernels.convolution(buf73, buf18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf74, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_21], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf75 = extern_kernels.convolution(buf71, primals_95, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf75, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf76 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf97 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, batch_norm_18, out_25], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23.run(buf75, buf74, primals_96, primals_97, primals_98, primals_99, buf76, buf97, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_96
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_99
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_22], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf77 = extern_kernels.convolution(buf76, buf19, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf77, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf78 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_19, out_26], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf77, primals_101, primals_102, primals_103, primals_104, buf78, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_104
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_27], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf79 = extern_kernels.convolution(buf78, buf20, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf79, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf80 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf96 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, batch_norm_20, out_28], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24.run(buf75, buf74, buf79, primals_106, primals_107, primals_108, primals_109, buf80, buf96, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_106
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_109
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_24], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf81 = extern_kernels.convolution(buf80, buf21, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf81, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf82 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_21, out_29], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf81, primals_111, primals_112, primals_113, primals_114, buf82, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_114
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_30], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf83 = extern_kernels.convolution(buf82, buf22, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf83, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf84 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf95 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, input_11, batch_norm_22, out_31], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25.run(buf75, buf74, buf79, buf83, primals_116, primals_117, primals_118, primals_119, buf84, buf95, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_116
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_119
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_26], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf85 = extern_kernels.convolution(buf84, buf23, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf85, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf86 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_23, out_32], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf85, primals_121, primals_122, primals_123, primals_124, buf86, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_124
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_33], Original ATen: [aten.convolution]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf87 = extern_kernels.convolution(buf86, buf24, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf87, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf88 = buf75; del buf75  # reuse
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf89 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf94 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12, batch_norm_24, out_34], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26.run(buf88, buf74, buf79, buf83, buf87, primals_126, primals_127, primals_128, primals_129, buf89, buf94, 262144, grid=grid(262144), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf74
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf79
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf83
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf87
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf88
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_126
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_129
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_35], Original ATen: [aten.avg_pool2d]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf90 = torch.ops.aten.avg_pool2d.default(buf89, [8, 8], [8, 8], [0, 0], False, True, None)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf91 = buf90
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf90
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf92 = empty_strided_cuda((16, 256), (256, 1), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_36], Original ATen: [aten.view]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_view_27.run(buf91, buf92, 4096, grid=grid(4096), stream=stream0)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf91
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf93 = empty_strided_cuda((16, 10), (10, 1), torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_131, buf92, reinterpret_tensor(primals_130, (256, 10), (1, 256), 0), alpha=1, beta=1, out=buf93)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_131
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf93, buf0, primals_3, primals_4, primals_5, buf1, primals_8, primals_9, primals_10, buf2, primals_13, primals_15, primals_16, buf3, primals_19, primals_20, primals_21, buf4, primals_25, primals_26, buf5, primals_29, primals_30, primals_31, buf6, primals_35, primals_36, buf7, primals_39, primals_40, primals_41, buf8, primals_45, primals_46, buf9, primals_49, primals_50, primals_51, buf10, primals_54, primals_56, primals_57, buf11, primals_60, primals_61, primals_62, buf12, primals_66, primals_67, buf13, primals_70, primals_71, primals_72, buf14, primals_76, primals_77, buf15, primals_80, primals_81, primals_82, buf16, primals_86, primals_87, buf17, primals_90, primals_91, primals_92, buf18, primals_95, primals_97, primals_98, buf19, primals_101, primals_102, primals_103, buf20, primals_107, primals_108, buf21, primals_111, primals_112, primals_113, buf22, primals_117, primals_118, buf23, primals_121, primals_122, primals_123, buf24, primals_127, primals_128, buf33, buf34, buf35, buf36, buf37, buf40, buf41, buf42, buf44, buf45, buf46, buf48, buf49, buf50, buf53, buf54, buf55, buf58, buf59, buf60, buf62, buf63, buf64, buf66, buf67, buf68, buf71, buf72, buf73, buf76, buf77, buf78, buf80, buf81, buf82, buf84, buf85, buf86, buf89, buf92, primals_130, buf94, buf95, buf96, buf97, buf98, buf99, buf100, buf101, buf102, buf103, buf104, buf105, )
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((128, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_55 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_56 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_57 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_58 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_59 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_60 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_61 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_62 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_63 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_64 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_65 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_66 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_67 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_68 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_69 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_70 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_71 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_72 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_73 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_74 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_75 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_76 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_77 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_78 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_79 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_80 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_81 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_82 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_83 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_84 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_85 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_86 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_87 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_88 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_89 = rand_strided((256, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_90 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_91 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_92 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_93 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_94 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_95 = rand_strided((256, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_96 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_97 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_98 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_99 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_100 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_101 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_102 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_103 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_104 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_105 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_106 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_107 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_108 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_109 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_110 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_111 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_112 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_113 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_114 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_115 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_116 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_117 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_118 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_119 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_120 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_121 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_122 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_123 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_124 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_125 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_126 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_127 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_128 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_129 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_130 = rand_strided((10, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_131 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131])
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:03:05.631000 403859 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:03:05.668000 403859 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/bt/cbtz76bdrpg2e2biuyqvafdbc55rimkvduzxdqbrwgzbmkg4btit.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['8_forward']
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3h/c3hpecenggnrxcqg3nyshgwbawgb3vfvl2axvlomnkql4xptnmer.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 48
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 27*y1), tmp0, xmask & ymask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rk/crkqip7ffcfqbmsp45eehhaktv7l52fmuxgtb6gz4wgizbjcmw4a.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 1024, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 1024
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 16)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 16*x2 + 144*y1), tmp0, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/az/cazdt4eac53o47y4abuwbxvsaadhafr2pfig3u32lsk5wu2h4nog.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4096
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z5/cz5lcpzem5jshoxsyxcxgxhiha6q7ktzqnt2hpqcbwodal3x5j3j.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 8192, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 8192
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 64
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/v2/cv2pmewnv75qopjeemipmicxycwgwldxplrujnsdidwoepu6aupv.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_4 = async_compile.triton('triton_poi_fused_4', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16384, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_4(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16384
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3y/c3ybaagrpyprvu4qucwd5owykjor76dxa5rtm4m76njylkiiywna.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_5 = async_compile.triton('triton_poi_fused_5', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 32768, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_5(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 32768
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 128
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 128*x2 + 1152*y1), tmp0, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xz/cxzcrugq4kcwxq7htwrwvbkq7zxo3viqlah4bvlf6slq5i3eb3jh.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_6 = async_compile.triton('triton_poi_fused_6', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 65536, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_6(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 65536
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 256
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 256*x2 + 2304*y1), tmp0, xmask & ymask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/jh/cjhhnfinlhhffv5btkdvfwwwcotaigx3vwp5gtzhat7lb2a6j2x3.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu, std], Original ATen: [aten.mean, aten.std]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu => mean
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => var
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1, 2, 3], True), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%primals_1, [1, 2, 3]), kwargs = {correction: 1.0, keepdim: True})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_mean_std_7 = async_compile.triton('triton_red_fused_mean_std_7', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 8, 'r': 8192},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_mean_std_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_mean_std_7(in_ptr0, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 6144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = rindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r1 + 6144*x0), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = _tmp2 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask & xmask, tmp3, _tmp2)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean_next, tmp4_m2_next, tmp4_weight_next = triton_helpers.welford_reduce(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]             tmp1, tmp4_mean, tmp4_m2, tmp4_weight, roffset == 0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean = tl.where(rmask & xmask, tmp4_mean_next, tmp4_mean)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_m2 = tl.where(rmask & xmask, tmp4_m2_next, tmp4_m2)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_weight = tl.where(rmask & xmask, tmp4_weight_next, tmp4_weight)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4_tmp, tmp5_tmp, tmp6_tmp = triton_helpers.welford(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4_mean, tmp4_m2, tmp4_weight, 1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp4_tmp[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp5_tmp[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp6_tmp[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp4, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x0), tmp5, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x0), tmp6, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3w/c3wdegafx6jzwccwh46g6tamo3yqgjrc3abze7l5plk545t3jk2k.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu], Original ATen: [aten.mean]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu => mean
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1, 2, 3], True), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_mean_8 = async_compile.triton('triton_per_fused_mean_8', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 2},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mean_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_mean_8(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp4, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/id/cid4egcp7emppqjmeu66anhzusifiv5njqcm6ej5unfjlvkk7npf.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [std], Original ATen: [aten.std]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => var
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%primals_1, [1, 2, 3]), kwargs = {correction: 1.0, keepdim: True})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_std_9 = async_compile.triton('triton_per_fused_std_9', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 2},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_std_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_std_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 2*x0), xmask, other=0.0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (r1 + 2*x0), xmask, other=0.0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (r1 + 2*x0), xmask, other=0.0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(xmask, tmp3, 0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(xmask, tmp4, 0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.where(xmask, tmp5, 0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10, tmp11, tmp12 = triton_helpers.welford(tmp7, tmp8, tmp9, 1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp10[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp14, xmask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zb/czburxbxpl4x2h3i7nb2t3dkbaio57k3476gzlfal5idesiyomos.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mu, std, std_min, sub, max_1, x], Original ATen: [aten.mean, aten.std, aten.div, aten.sub, aten.maximum]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   max_1 => maximum
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mu => mean
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std => sqrt, var
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   std_min => full_default
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => div_1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [1, 2, 3], True), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var : [num_users=1] = call_function[target=torch.ops.aten.var.correction](args = (%primals_1, [1, 2, 3]), kwargs = {correction: 1.0, keepdim: True})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%var,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([4, 1, 1, 1], 0.009021097794175148), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %mean), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum : [num_users=1] = call_function[target=torch.ops.aten.maximum.default](args = (%sqrt, %full_default), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub, %maximum), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_maximum_mean_std_sub_10 = async_compile.triton('triton_poi_fused_div_maximum_mean_std_sub_10', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.DEFAULT,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_maximum_mean_std_sub_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_maximum_mean_std_sub_10(in_ptr0, in_ptr1, in_ptr2, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 3)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y1), ymask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (y1), ymask, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 12288.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 / tmp2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 - tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 12287.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 / tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.009021097794175148
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = triton_helpers.maximum(tmp8, tmp9)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp4 / tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp11, ymask)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5f/c5fphigm63tonbkfsio5et3iiaj2gxavq7fjjmmxiy2jeoxv3mzz.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm, x_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm => add_1, mul_1, mul_2, sub_1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => relu
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_3), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_11', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_11(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yy/cyyga4wm6g6yqt2p2xwshaxtsibl3ci2wgxkztlayxxzvycy6i7q.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_1, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_1 => add_3, mul_4, mul_5, sub_2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_1 => relu_1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_9), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_11), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_12', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dr/cdrni4xpq2cuzti3skg4zc5hham7wzxdlsk3ztogbiraq3uxbydg.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, batch_norm_2, out_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_2 => add_6, mul_7, mul_8, sub_3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_3 => relu_2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %unsqueeze_17), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %unsqueeze_19), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_6,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3w/c3w4f6ec6ti4bur3a6eix4j474hfiwqzjlazblaqmdzy5np5yuzg.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, batch_norm_4, out_6], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_4 => add_11, mul_13, mul_14, sub_5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_6 => relu_4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %convolution_5), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %unsqueeze_33), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_35), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_11,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_46 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_9, %unsqueeze_442), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_48 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_4, %unsqueeze_466), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 / tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp6 * tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp20, tmp19)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp2 - tmp22
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp23, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gt/cgtn5ym225twmwli6d3cqs3faxedyc3gmwmcsqaodacswjuf6uux.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3, batch_norm_6, out_9], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_6 => add_16, mul_19, mul_20, sub_7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_9 => relu_6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %convolution_5), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %convolution_7), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_7 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_14, %unsqueeze_49), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_7, %unsqueeze_51), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_53), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_16 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_55), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_6 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_16,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_44 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_14, %unsqueeze_418), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp23, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/lc/clc33ybv34h36urjei2dnuvkecgqwqa4ryupqjemz74byn5yx2ya.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4, batch_norm_8, x_2], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_8 => add_21, mul_25, mul_26, sub_9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add_4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => add_14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_4 => add_19
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_2 => relu_8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_2), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_9 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_4, %convolution_5), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_14 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_9, %convolution_7), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_19 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_14, %convolution_9), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_19, %unsqueeze_65), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_67), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_69), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_71), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_8 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_42 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_19, %unsqueeze_394), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1048576}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1048576
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 64)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp23)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hz/chzwrwbdspx3xzwblh45ndjdsbhie2u6wu2jzrmfvolc4zj3oh2q.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_9, out_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_9 => add_23, mul_28, mul_29, sub_10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_12 => relu_9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_10 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_10, %unsqueeze_73), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_10, %unsqueeze_75), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_28, %unsqueeze_77), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_23 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_79), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_9 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_23,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_17 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_17', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_17(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/v2/cv2hopsybvwokmmez3gccox4p2gdqv6nofn6bcgyf25za6suy5u2.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, batch_norm_10, out_14], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_10 => add_26, mul_31, mul_32, sub_11
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_14 => relu_10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_24, %unsqueeze_81), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_31 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_83), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_32 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_31, %unsqueeze_85), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_32, %unsqueeze_87), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_10 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_26,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_40 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_24, %unsqueeze_370), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp4, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mf/cmffcbukh2twv4tsjlnli56an5fk674iayevsdb76562xyahqqqz.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, batch_norm_12, out_17], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_12 => add_31, mul_37, mul_38, sub_13
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => add_29
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_17 => relu_12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_29 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_24, %convolution_14), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_29, %unsqueeze_97), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %unsqueeze_99), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_37, %unsqueeze_101), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_31 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_38, %unsqueeze_103), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_12 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_31,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_38 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_29, %unsqueeze_346), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 / tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp6 * tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp20, tmp19)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vp/cvp4u7q2yewm5vhii5fah37prv66jflpvttg7hs3dhmusfuxe4zc.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7, batch_norm_14, out_20], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_14 => add_36, mul_43, mul_44, sub_15
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => add_29
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => add_34
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_20 => relu_14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_29 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_24, %convolution_14), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_29, %convolution_16), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_34, %unsqueeze_113), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_43 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_115), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_44 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_43, %unsqueeze_117), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_36 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_44, %unsqueeze_119), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_14 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_36,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_36 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_34, %unsqueeze_322), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp23, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/px/cpxuyrs26qpxctf5l4vfa2qcbfcuxloodsgtdns6yrxzul2neiwf.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5, input_6, input_7, input_8, batch_norm_16, x_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_16 => add_41, mul_49, mul_50, sub_17
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => add_24
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_6 => add_29
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_7 => add_34
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => add_39
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_3 => relu_16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_24 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_12, %convolution_11), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_29 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_24, %convolution_14), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_34 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_29, %convolution_16), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_39 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_34, %convolution_18), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_17 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_39, %unsqueeze_129), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_49 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_17, %unsqueeze_131), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_50 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_49, %unsqueeze_133), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_41 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_50, %unsqueeze_135), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_16 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_41,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_34 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_39, %unsqueeze_298), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 524288}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 524288
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 128)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp23)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/eb/cebrjatpbqlo4hdr77tobxgdl7nkso46cdx3r23wmmc5d5kwpa73.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [batch_norm_17, out_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_17 => add_43, mul_52, mul_53, sub_18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_23 => relu_17
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_19, %unsqueeze_137), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_52 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %unsqueeze_139), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_53 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_52, %unsqueeze_141), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_43 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_53, %unsqueeze_143), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_17 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_43,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_22 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_22', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_22', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_22(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp17, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/mw/cmwmhug6amdtltbja5qpdzsdf6emnczsvfiknbdfazkcshvapkun.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, batch_norm_18, out_25], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_18 => add_46, mul_55, mul_56, sub_19
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_25 => relu_18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_19 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_44, %unsqueeze_145), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_19, %unsqueeze_147), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %unsqueeze_149), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_46 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_56, %unsqueeze_151), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_18 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_46,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_32 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_44, %unsqueeze_274), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 + tmp6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = libdevice.sqrt(tmp7)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 / tmp8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 * tmp11
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 * tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 + tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp18, tmp17)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp19, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp4, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vf/cvfbvkxtsczhcdryn5a2x4p7dwmpt47tou7suxg5vdo4a6s6wl5x.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, batch_norm_20, out_28], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_20 => add_51, mul_61, mul_62, sub_21
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => add_49
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_28 => relu_20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_44, %convolution_23), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_21 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_49, %unsqueeze_161), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_61 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_21, %unsqueeze_163), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_62 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_61, %unsqueeze_165), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_51 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_62, %unsqueeze_167), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_20 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_51,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_30 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_49, %unsqueeze_250), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 - tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 + tmp8
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = libdevice.sqrt(tmp9)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 / tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 * tmp13
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp6 * tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp20, tmp19)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp21, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp6, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ah/cahrzqaku4efjo2m6rhjq4kqet54ntrjxy6oncgujmo2m6pple34.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, input_11, batch_norm_22, out_31], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_22 => add_56, mul_67, mul_68, sub_23
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => add_49
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_54
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_31 => relu_22
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_44, %convolution_23), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_54 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_49, %convolution_25), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_23 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_54, %unsqueeze_177), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_67 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_23, %unsqueeze_179), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_68 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_67, %unsqueeze_181), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_56 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_68, %unsqueeze_183), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_22 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_56,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_28 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_54, %unsqueeze_226), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr3 + (x2), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 - tmp7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 / tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 * tmp16
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 + tmp20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = triton_helpers.maximum(tmp22, tmp21)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp23, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp8, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cx/ccxcqp3pw3awejjwa7hrc7vxnelqnd6ong3sya744o7epq3hhaum.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12, batch_norm_24, out_34], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   batch_norm_24 => add_61, mul_73, mul_74, sub_25
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_10 => add_49
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_11 => add_54
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_12 => add_59
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_9 => add_44
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_34 => relu_24
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_44 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_21, %convolution_20), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_49 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_44, %convolution_23), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_54 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_49, %convolution_25), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_59 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_54, %convolution_27), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_59, %unsqueeze_193), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_73 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_25, %unsqueeze_195), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_74 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_73, %unsqueeze_197), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_61 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_74, %unsqueeze_199), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_24 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_61,), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_26 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_59, %unsqueeze_202), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 262144}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 262144
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = (xindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr5 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr6 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr7 + (x1), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 - tmp9
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 1e-05
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = libdevice.sqrt(tmp13)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 1, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 1.0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp10 * tmp18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.full([1], 0, tl.int32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp24, tmp23)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp25, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp10, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/xx/cxxxxlabx2bmk3xnpgdiyworg6cdjxzus2bjsrogd4jryn7wx3yd.py
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out_36], Original ATen: [aten.view]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out_36 => view
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %view : [num_users=2] = call_function[target=torch.ops.aten.reshape.default](args = (%avg_pool2d, [-1, 256]), kwargs = {})
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_view_27 = async_compile.triton('triton_poi_fused_view_27', '''
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4096}, 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_view_27', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_view_27(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4096
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 256
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (256*((x0 % 4)) + 1024*((x0 + 256*x1) // 1024) + ((((x0 + 256*x1) // 4) % 256))), None, eviction_policy='evict_last')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131 = args
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 3, 64, 64), (12288, 4096, 64, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, 3, 3, 3), (27, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (16, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (16, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (64, 16, 3, 3), (144, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (64, 16, 1, 1), (16, 1, 1, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (64, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (64, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (128, 64, 3, 3), (576, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (128, 64, 1, 1), (64, 1, 1, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_55, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_56, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_57, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_58, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_59, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_60, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_61, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_62, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_63, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_64, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_65, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_66, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_67, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_68, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_69, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_70, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_71, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_72, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_73, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_74, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_75, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_76, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_77, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_78, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_79, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_80, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_81, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_82, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_83, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_84, (128, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_85, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_86, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_87, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_88, (128, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_89, (256, 128, 3, 3), (1152, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_90, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_91, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_92, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_93, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_94, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_95, (256, 128, 1, 1), (128, 1, 1, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_96, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_97, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_98, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_99, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_100, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_101, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_102, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_103, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_104, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_105, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_106, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_107, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_108, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_109, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_110, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_111, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_112, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_113, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_114, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_115, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_116, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_117, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_118, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_119, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_120, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_121, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_122, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_123, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_124, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_125, (256, 256, 3, 3), (2304, 9, 3, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_126, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_127, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_128, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_129, (256, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_130, (10, 256), (256, 1))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_131, (10, ), (1, ))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 3, 3, 3), (27, 1, 9, 3), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_0.run(primals_2, buf0, 48, 9, grid=grid(48, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 16, 3, 3), (144, 1, 48, 16), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_1.run(primals_7, buf1, 1024, 9, grid=grid(1024, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_12, buf2, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_18, buf3, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_18
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_23, buf4, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_23
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_28, buf5, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_28
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_33, buf6, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_33
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_38, buf7, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_38
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_2.run(primals_43, buf8, 4096, 9, grid=grid(4096, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_43
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((128, 64, 3, 3), (576, 1, 192, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_3.run(primals_48, buf9, 8192, 9, grid=grid(8192, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_48
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_53, buf10, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_53
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_59, buf11, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_59
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_64, buf12, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_64
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_69, buf13, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_69
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_74, buf14, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_74
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_79, buf15, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_79
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((128, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_4.run(primals_84, buf16, 16384, 9, grid=grid(16384, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_84
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((256, 128, 3, 3), (1152, 1, 384, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_5.run(primals_89, buf17, 32768, 9, grid=grid(32768, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_89
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_94, buf18, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_94
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_100, buf19, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_100
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_105, buf20, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_105
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_110, buf21, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_110
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_115, buf22, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_115
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_120, buf23, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_120
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((256, 256, 3, 3), (2304, 1, 768, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_6.run(primals_125, buf24, 65536, 9, grid=grid(65536, 9), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_125
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((4, 1, 1, 1, 2), (2, 8, 8, 8, 1), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu, std], Original ATen: [aten.mean, aten.std]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_mean_std_7.run(primals_1, buf25, buf27, buf28, buf29, 8, 6144, grid=grid(8), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu], Original ATen: [aten.mean]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_mean_8.run(buf25, buf26, 4, 2, grid=grid(4), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf25
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((4, 1, 1, 1), (1, 4, 4, 4), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [std], Original ATen: [aten.std]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_std_9.run(buf27, buf28, buf29, buf31, 4, 2, grid=grid(4), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf27
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf28
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf29
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mu, std, std_min, sub, max_1, x], Original ATen: [aten.mean, aten.std, aten.div, aten.sub, aten.maximum]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_maximum_mean_std_sub_10.run(primals_1, buf26, buf31, buf33, 12, 4096, grid=grid(12, 4096), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf26
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf31
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = extern_kernels.convolution(buf33, buf0, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf34, (4, 16, 64, 64), (65536, 1, 1024, 16))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = empty_strided_cuda((4, 16, 64, 64), (65536, 1, 1024, 16), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm, x_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_11.run(buf34, primals_3, primals_4, primals_5, primals_6, buf35, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_1], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = extern_kernels.convolution(buf35, buf1, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf36, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_1, out_1], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf36, primals_8, primals_9, primals_10, primals_11, buf37, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_2], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf38 = extern_kernels.convolution(buf37, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf38, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_3], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf39 = extern_kernels.convolution(buf35, primals_13, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf39, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf40 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, batch_norm_2, out_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_relu_13.run(buf39, buf38, primals_14, primals_15, primals_16, primals_17, buf40, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_17
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_4], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf41 = extern_kernels.convolution(buf40, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf41, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf42 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_3, out_4], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf41, primals_19, primals_20, primals_21, primals_22, buf42, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_22
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_5], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf43 = extern_kernels.convolution(buf42, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf43, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf44 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf104 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf105 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, batch_norm_4, out_6], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_14.run(buf39, buf38, buf43, primals_24, primals_25, primals_26, primals_27, primals_14, buf44, buf104, buf105, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_24
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_27
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_6], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf45 = extern_kernels.convolution(buf44, buf5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf45, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf46 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_5, out_7], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf45, primals_29, primals_30, primals_31, primals_32, buf46, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_32
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_8], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf47 = extern_kernels.convolution(buf46, buf6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf47, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf48 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf103 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3, batch_norm_6, out_9], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_15.run(buf39, buf38, buf43, buf47, primals_34, primals_35, primals_36, primals_37, buf48, buf103, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_34
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_37
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_8], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf49 = extern_kernels.convolution(buf48, buf7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf49, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf50 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_7, out_10], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_12.run(buf49, primals_39, primals_40, primals_41, primals_42, buf50, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_42
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_11], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf51 = extern_kernels.convolution(buf50, buf8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf51, (4, 64, 64, 64), (262144, 1, 4096, 64))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf52 = buf39; del buf39  # reuse
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf53 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf102 = empty_strided_cuda((4, 64, 64, 64), (262144, 1, 4096, 64), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4, batch_norm_8, x_2], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_16.run(buf52, buf38, buf43, buf47, buf51, primals_44, primals_45, primals_46, primals_47, buf53, buf102, 1048576, grid=grid(1048576), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf38
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf43
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf47
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf51
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf52
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_44
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_47
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_10], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf54 = extern_kernels.convolution(buf53, buf9, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf54, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf55 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_9, out_12], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf54, primals_49, primals_50, primals_51, primals_52, buf55, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_52
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_13], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf56 = extern_kernels.convolution(buf55, buf10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf56, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_12], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf57 = extern_kernels.convolution(buf53, primals_54, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf57, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf58 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf101 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, batch_norm_10, out_14], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_18.run(buf57, buf56, primals_55, primals_56, primals_57, primals_58, buf58, buf101, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_55
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_58
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_13], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf59 = extern_kernels.convolution(buf58, buf11, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf59, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf60 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_11, out_15], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf59, primals_60, primals_61, primals_62, primals_63, buf60, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_63
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_16], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf61 = extern_kernels.convolution(buf60, buf12, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf61, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf62 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf100 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, batch_norm_12, out_17], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_19.run(buf57, buf56, buf61, primals_65, primals_66, primals_67, primals_68, buf62, buf100, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_65
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_68
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_15], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf63 = extern_kernels.convolution(buf62, buf13, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf63, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf64 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_13, out_18], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf63, primals_70, primals_71, primals_72, primals_73, buf64, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_73
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_19], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf65 = extern_kernels.convolution(buf64, buf14, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf65, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf66 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf99 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7, batch_norm_14, out_20], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_20.run(buf57, buf56, buf61, buf65, primals_75, primals_76, primals_77, primals_78, buf66, buf99, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_75
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_78
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_17], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf67 = extern_kernels.convolution(buf66, buf15, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf67, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf68 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_15, out_21], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_17.run(buf67, primals_80, primals_81, primals_82, primals_83, buf68, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_83
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_22], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf69 = extern_kernels.convolution(buf68, buf16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf69, (4, 128, 32, 32), (131072, 1, 4096, 128))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf70 = buf57; del buf57  # reuse
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf71 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf98 = empty_strided_cuda((4, 128, 32, 32), (131072, 1, 4096, 128), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5, input_6, input_7, input_8, batch_norm_16, x_3], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_21.run(buf70, buf56, buf61, buf65, buf69, primals_85, primals_86, primals_87, primals_88, buf71, buf98, 524288, grid=grid(524288), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf56
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf61
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf65
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf69
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf70
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_85
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_88
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_19], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf72 = extern_kernels.convolution(buf71, buf17, stride=(2, 2), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf72, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf73 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_17, out_23], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf72, primals_90, primals_91, primals_92, primals_93, buf73, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_93
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_24], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf74 = extern_kernels.convolution(buf73, buf18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf74, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_21], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf75 = extern_kernels.convolution(buf71, primals_95, stride=(2, 2), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf75, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf76 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf97 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, batch_norm_18, out_25], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_23.run(buf75, buf74, primals_96, primals_97, primals_98, primals_99, buf76, buf97, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_96
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_99
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_22], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf77 = extern_kernels.convolution(buf76, buf19, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf77, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf78 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_19, out_26], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf77, primals_101, primals_102, primals_103, primals_104, buf78, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_104
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_27], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf79 = extern_kernels.convolution(buf78, buf20, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf79, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf80 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf96 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, batch_norm_20, out_28], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_24.run(buf75, buf74, buf79, primals_106, primals_107, primals_108, primals_109, buf80, buf96, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_106
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_109
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_24], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf81 = extern_kernels.convolution(buf80, buf21, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf81, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf82 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_21, out_29], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf81, primals_111, primals_112, primals_113, primals_114, buf82, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_114
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_30], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf83 = extern_kernels.convolution(buf82, buf22, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf83, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf84 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf95 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, input_11, batch_norm_22, out_31], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_25.run(buf75, buf74, buf79, buf83, primals_116, primals_117, primals_118, primals_119, buf84, buf95, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_116
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_119
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv2d_26], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf85 = extern_kernels.convolution(buf84, buf23, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf85, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf86 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [batch_norm_23, out_32], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_22.run(buf85, primals_121, primals_122, primals_123, primals_124, buf86, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_124
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_33], Original ATen: [aten.convolution]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf87 = extern_kernels.convolution(buf86, buf24, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf87, (4, 256, 16, 16), (65536, 1, 4096, 256))
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf88 = buf75; del buf75  # reuse
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf89 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf94 = empty_strided_cuda((4, 256, 16, 16), (65536, 1, 4096, 256), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9, input_10, input_11, input_12, batch_norm_24, out_34], Original ATen: [aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_add_native_batch_norm_backward_relu_26.run(buf88, buf74, buf79, buf83, buf87, primals_126, primals_127, primals_128, primals_129, buf89, buf94, 262144, grid=grid(262144), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf74
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf79
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf83
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf87
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf88
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_126
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_129
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_35], Original ATen: [aten.avg_pool2d]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf90 = torch.ops.aten.avg_pool2d.default(buf89, [8, 8], [8, 8], [0, 0], False, True, None)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf91 = buf90
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf90
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf92 = empty_strided_cuda((16, 256), (256, 1), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_36], Original ATen: [aten.view]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_view_27.run(buf91, buf92, 4096, grid=grid(4096), stream=stream0)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf91
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf93 = empty_strided_cuda((16, 10), (10, 1), torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear], Original ATen: [aten.addmm]
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_131, buf92, reinterpret_tensor(primals_130, (256, 10), (1, 256), 0), alpha=1, beta=1, out=buf93)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_131
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf93, buf0, primals_3, primals_4, primals_5, buf1, primals_8, primals_9, primals_10, buf2, primals_13, primals_15, primals_16, buf3, primals_19, primals_20, primals_21, buf4, primals_25, primals_26, buf5, primals_29, primals_30, primals_31, buf6, primals_35, primals_36, buf7, primals_39, primals_40, primals_41, buf8, primals_45, primals_46, buf9, primals_49, primals_50, primals_51, buf10, primals_54, primals_56, primals_57, buf11, primals_60, primals_61, primals_62, buf12, primals_66, primals_67, buf13, primals_70, primals_71, primals_72, buf14, primals_76, primals_77, buf15, primals_80, primals_81, primals_82, buf16, primals_86, primals_87, buf17, primals_90, primals_91, primals_92, buf18, primals_95, primals_97, primals_98, buf19, primals_101, primals_102, primals_103, buf20, primals_107, primals_108, buf21, primals_111, primals_112, primals_113, buf22, primals_117, primals_118, buf23, primals_121, primals_122, primals_123, buf24, primals_127, primals_128, buf33, buf34, buf35, buf36, buf37, buf40, buf41, buf42, buf44, buf45, buf46, buf48, buf49, buf50, buf53, buf54, buf55, buf58, buf59, buf60, buf62, buf63, buf64, buf66, buf67, buf68, buf71, buf72, buf73, buf76, buf77, buf78, buf80, buf81, buf82, buf84, buf85, buf86, buf89, buf92, primals_130, buf94, buf95, buf96, buf97, buf98, buf99, buf100, buf101, buf102, buf103, buf104, buf105, )
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, 3, 3, 3), (27, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((64, 16, 3, 3), (144, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((64, 16, 1, 1), (16, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((128, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_55 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_56 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_57 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_58 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_59 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_60 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_61 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_62 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_63 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_64 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_65 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_66 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_67 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_68 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_69 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_70 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_71 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_72 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_73 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_74 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_75 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_76 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_77 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_78 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_79 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_80 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_81 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_82 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_83 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_84 = rand_strided((128, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_85 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_86 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_87 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_88 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_89 = rand_strided((256, 128, 3, 3), (1152, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_90 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_91 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_92 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_93 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_94 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_95 = rand_strided((256, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_96 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_97 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_98 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_99 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_100 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_101 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_102 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_103 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_104 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_105 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_106 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_107 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_108 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_109 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_110 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_111 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_112 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_113 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_114 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_115 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_116 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_117 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_118 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_119 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_120 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_121 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_122 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_123 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_124 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_125 = rand_strided((256, 256, 3, 3), (2304, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_126 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_127 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_128 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_129 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_130 = rand_strided((10, 256), (256, 1), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_131 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131])
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:53:21.127000 3064183 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:53:21.182000 3064183 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/a3/ca3pe3rq5hxl4f4io2xlnzh25neihavotnia2fp4ovh6vwndnxna.py
