V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['10_inference']
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/6i/c6izhby3gxoec7tke643fnznz4okdgxt6uz55u6ssadttx7ugmvl.py
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_1, e_square], Original ATen: [aten.pow, aten.sum]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   e_square => sum_1
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_1 => pow_1
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view_1, 2), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_pow_sum_0 = async_compile.triton('triton_per_fused_pow_sum_0', '''
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4, 'r': 64},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_pow_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_pow_sum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 64
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r1 = rindex
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 64*x0), xmask, other=0.0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tmp0 * tmp0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.where(xmask, tmp2, 0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5w/c5w33bh7ug334ukqrlzgivcy35fhcezrowekv5cctudw4f7evnpz.py
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res => clamp_min
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res_1 => sqrt
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub => sub
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 2), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 1e-12), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_clamp_mul_sqrt_sub_1 = async_compile.triton('triton_poi_fused_add_clamp_mul_sqrt_sub_1', '''
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_mul_sqrt_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_clamp_mul_sqrt_sub_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 2.0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 * tmp4
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp2 - tmp5
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = 1e-12
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = libdevice.sqrt(tmp8)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp9, xmask)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hj/chjfumspusoznq6gxi4jzafzk3bzlvvwg2r3jtostkpuepwmoqkr.py
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1, setitem], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt, aten.lift_fresh, aten.index_put]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res => clamp_min
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res_1 => sqrt
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem => full_default, index_put
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub => sub
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 2), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 1e-12), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%sqrt, [%lift_fresh_copy_1, %lift_fresh_copy_2], %full_default), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2 = async_compile.triton('triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2', '''
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = x0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.full([1], 2, tl.int64)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.full([1], 0, tl.int64)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.where(tmp4, tmp5, tmp3)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tl.full([1], 3, tl.int64)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.where(tmp8, tmp1, tmp7)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.where(tmp2, tmp6, tmp9)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = 0.0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(5*tmp10, [XBLOCK])), tmp11, xmask)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ej/cejs74h4expajvmao7l5ckcakekrsxxcbahqt5tiy6wzlwqjrgv5.py
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [gt], Original ATen: [aten.gt]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   gt => gt
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%index_put, 0), kwargs = {})
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_gt_3 = async_compile.triton('triton_poi_fused_gt_3', '''
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gt_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_gt_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 > tmp1
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, e_square], Original ATen: [aten.pow, aten.sum]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_pow_sum_0.run(arg1_1, buf0, 4, 64, grid=grid(4), stream=stream0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [prod], Original ATen: [aten.mm]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(arg1_1, (4, 64), (64, 1), 0), reinterpret_tensor(arg1_1, (64, 4), (1, 64), 0), out=buf1)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_clamp_mul_sqrt_sub_1.run(buf2, buf0, 16, grid=grid(16), stream=stream0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf0
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1, setitem], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt, aten.lift_fresh, aten.index_put]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2.run(buf2, 4, grid=grid(4), stream=stream0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [gt], Original ATen: [aten.gt]
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_gt_3.run(buf2, buf4, 16, grid=grid(16), stream=stream0)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf2, buf4, reinterpret_tensor(arg0_1, (4, 64), (64, 1), 0), reinterpret_tensor(arg1_1, (4, 64), (64, 1), 0), )
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:25:41.226000 1564440 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 15:25:41.231000 1564440 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jq/cjqip6mkjp77wezk4ovsum5mnhtxwz4h2ub6agn5krfbjr35dylq.py
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['10_inference']
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/6i/c6izhby3gxoec7tke643fnznz4okdgxt6uz55u6ssadttx7ugmvl.py
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [pow_1, e_square], Original ATen: [aten.pow, aten.sum]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   e_square => sum_1
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   pow_1 => pow_1
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%view_1, 2), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=2] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [1]), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused_pow_sum_0 = async_compile.triton('triton_per_fused_pow_sum_0', '''
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4, 'r': 64},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_pow_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused_pow_sum_0(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 64
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r1 = rindex
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 64*x0), xmask, other=0.0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tmp0 * tmp0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.where(xmask, tmp2, 0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.sum(tmp4, 1)[:, None]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp5, xmask)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/5w/c5w33bh7ug334ukqrlzgivcy35fhcezrowekv5cctudw4f7evnpz.py
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res => clamp_min
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res_1 => sqrt
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub => sub
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 2), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 1e-12), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_clamp_mul_sqrt_sub_1 = async_compile.triton('triton_poi_fused_add_clamp_mul_sqrt_sub_1', '''
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_mul_sqrt_sub_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_clamp_mul_sqrt_sub_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x1 = xindex // 4
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = (xindex % 4)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x2 = xindex
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = 2.0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tmp3 * tmp4
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp2 - tmp5
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = 1e-12
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = libdevice.sqrt(tmp8)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp9, xmask)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/hj/chjfumspusoznq6gxi4jzafzk3bzlvvwg2r3jtostkpuepwmoqkr.py
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1, setitem], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt, aten.lift_fresh, aten.index_put]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res => clamp_min
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   res_1 => sqrt
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   setitem => full_default, index_put
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub => sub
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze, %unsqueeze_1), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mm, 2), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 1e-12), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sqrt : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%clamp_min,), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %full_default : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%sqrt, [%lift_fresh_copy_1, %lift_fresh_copy_2], %full_default), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2 = async_compile.triton('triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2', '''
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 4}, 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2', 'mutated_arg_names': ['out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 4
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = x0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = tl.full([1], 2, tl.int64)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = tl.full([1], 0, tl.int64)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tl.where(tmp4, tmp5, tmp3)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tl.full([1], 3, tl.int64)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tl.where(tmp8, tmp1, tmp7)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tl.where(tmp2, tmp6, tmp9)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = 0.0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (tl.broadcast_to(5*tmp10, [XBLOCK])), tmp11, xmask)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/ej/cejs74h4expajvmao7l5ckcakekrsxxcbahqt5tiy6wzlwqjrgv5.py
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [gt], Original ATen: [aten.gt]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   gt => gt
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Scalar](args = (%index_put, 0), kwargs = {})
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_poi_fused_gt_3 = async_compile.triton('triton_poi_fused_gt_3', '''
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.pointwise(
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 16}, 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_gt_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     min_elem_per_thread=0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_poi_fused_gt_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 16
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = xindex < xnumel
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     x0 = xindex
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 > tmp1
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, e_square], Original ATen: [aten.pow, aten.sum]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused_pow_sum_0.run(arg1_1, buf0, 4, 64, grid=grid(4), stream=stream0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [prod], Original ATen: [aten.mm]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         extern_kernels.mm(reinterpret_tensor(arg1_1, (4, 64), (64, 1), 0), reinterpret_tensor(arg1_1, (64, 4), (1, 64), 0), out=buf1)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_clamp_mul_sqrt_sub_1.run(buf2, buf0, 16, grid=grid(16), stream=stream0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del buf0
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [add, mul, sub, res, res_1, setitem], Original ATen: [aten.add, aten.mul, aten.sub, aten.clamp, aten.sqrt, aten.lift_fresh, aten.index_put]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_add_clamp_index_put_lift_fresh_mul_sqrt_sub_2.run(buf2, 4, grid=grid(4), stream=stream0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [gt], Original ATen: [aten.gt]
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_poi_fused_gt_3.run(buf2, buf4, 16, grid=grid(16), stream=stream0)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf2, buf4, reinterpret_tensor(arg0_1, (4, 64), (64, 1), 0), reinterpret_tensor(arg1_1, (4, 64), (64, 1), 0), )
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:15:27.096000 3022404 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 20:15:27.101000 3022404 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/6q/c6qyjcxrskwsoeoqgxa3dyl53bb27vlfmlav2tuqlpfvetwf25sy.py
