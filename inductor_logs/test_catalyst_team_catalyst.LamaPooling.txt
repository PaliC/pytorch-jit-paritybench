V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['34_forward']
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qz/cqzcj3u22wpdshdz3zsdaukizw3st2ny6pl5vfusqdy2mmeyjmyg.py
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_2, %primals_3, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 3*y3), tmp0, xmask & ymask)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vw/cvwisd545m6fhrl2ci4swzjxzy5tcyxm23qnvqmzmmxhy22cuv33.py
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_2, %primals_3, [1], [0], [1], False, [0], 1), kwargs = {})
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nj/cnjoe77xvzjyfmm3gtmxscraeu3eayxehandfkswqlzpf6rsf4kd.py
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.cat]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => cat
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%slice_2, %mean, %getitem, %sum_2], 1), kwargs = {})
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (8 + x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 3.0
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 / tmp15
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp9, tmp16, tmp17)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 >= tmp7
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 3, tl.int64)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 < tmp20
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 & tmp21
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (x0 + 16*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + (4 + x0 + 16*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp23, tmp24)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr0 + (8 + x0 + 16*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp25, tmp26)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp22, tmp27, tmp28)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 >= tmp20
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 4, tl.int64)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 < tmp31
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (3*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp33
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp35
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (x0 + 16*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr1 + (1 + 3*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 - tmp39
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl_math.exp(tmp40)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 / tmp41
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (4 + x0 + 16*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp42 * tmp43
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp38 + tmp44
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (2 + 3*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 - tmp46
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl_math.exp(tmp47)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 / tmp48
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (8 + x0 + 16*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 * tmp50
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp45 + tmp51
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.full(tmp52.shape, 0.0, tmp52.dtype)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp30, tmp52, tmp53)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp22, tmp29, tmp54)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp9, tmp18, tmp55)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp4, tmp5, tmp56)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp57, xmask)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (1, 4, 1), (4, 1, 1))
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, ), (1, ))
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 3), (12, 3, 1), torch.float32)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(primals_1, buf0, 16, 3, grid=grid(16, 3), stream=stream0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 3), (3, 3, 1))
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf2, primals_3, 12, grid=grid(12), stream=stream0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.cat]
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf2, buf3, 64, grid=grid(64), stream=stream0)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf3, (4, 16), (16, 1), 0), primals_2, reinterpret_tensor(primals_1, (4, 4, 3), (16, 1, 4), 0), buf2, )
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((1, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:20:06.969000 1413504 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:20:06.974000 1413504 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/za/czaqyupcrchpujyuezfi6dfjplnhg3rtha4t3psiukbgcwdpfrko.py
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['34_forward']
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qz/cqzcj3u22wpdshdz3zsdaukizw3st2ny6pl5vfusqdy2mmeyjmyg.py
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_2, %primals_3, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_0 = async_compile.triton('triton_poi_fused_convolution_0', '''
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 3
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 3*y3), tmp0, xmask & ymask)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vw/cvwisd545m6fhrl2ci4swzjxzy5tcyxm23qnvqmzmmxhy22cuv33.py
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => convolution
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution : [num_users=3] = call_function[target=torch.ops.aten.convolution.default](args = (%permute, %primals_2, %primals_3, [1], [0], [1], False, [0], 1), kwargs = {})
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_1 = async_compile.triton('triton_poi_fused_convolution_1', '''
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_1(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x0), xmask)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (0))
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 + tmp2
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp3, xmask)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nj/cnjoe77xvzjyfmm3gtmxscraeu3eayxehandfkswqlzpf6rsf4kd.py
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.cat]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_4 => cat
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%slice_2, %mean, %getitem, %sum_2], 1), kwargs = {})
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (12 + x0 + 16*x2), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + (4 + x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr0 + (8 + x0 + 16*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 3.0
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 / tmp15
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full(tmp16.shape, 0.0, tmp16.dtype)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp9, tmp16, tmp17)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 >= tmp7
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.full([1], 3, tl.int64)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp0 < tmp20
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp19 & tmp21
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (x0 + 16*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + (4 + x0 + 16*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp23, tmp24)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr0 + (8 + x0 + 16*x2), tmp22 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = triton_helpers.maximum(tmp25, tmp26)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp22, tmp27, tmp28)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 >= tmp20
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 4, tl.int64)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 < tmp31
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (3*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp33
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp35
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (x0 + 16*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp36 * tmp37
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.load(in_ptr1 + (1 + 3*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 - tmp39
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl_math.exp(tmp40)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 / tmp41
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr0 + (4 + x0 + 16*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp42 * tmp43
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp38 + tmp44
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr1 + (2 + 3*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 - tmp46
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl_math.exp(tmp47)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp48 / tmp48
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (8 + x0 + 16*x2), tmp30 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 * tmp50
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp45 + tmp51
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tl.full(tmp52.shape, 0.0, tmp52.dtype)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp30, tmp52, tmp53)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tl.where(tmp22, tmp29, tmp54)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.where(tmp9, tmp18, tmp55)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.where(tmp4, tmp5, tmp56)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp57, xmask)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3 = args
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (1, 4, 1), (4, 1, 1))
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, ), (1, ))
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 3), (12, 3, 1), torch.float32)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_0.run(primals_1, buf0, 16, 3, grid=grid(16, 3), stream=stream0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 1, 3), (3, 3, 1))
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_1.run(buf2, primals_3, 12, grid=grid(12), stream=stream0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_4], Original ATen: [aten.cat]
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, buf2, buf3, 64, grid=grid(64), stream=stream0)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf3, (4, 16), (16, 1), 0), primals_2, reinterpret_tensor(primals_1, (4, 4, 3), (16, 1, 4), 0), buf2, )
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((1, 4, 1), (4, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3])
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:09:51.853000 2785343 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:09:51.857000 2785343 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/lz/clzdu3omgujtqaa4ntrn4yf6h7epbkyersz4itz3m6voavr752v5.py
