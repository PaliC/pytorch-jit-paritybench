V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_forward']
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bq/cbqdb4r55v4dfu7yp23w475k3vxnxmyd7uikkm7k555tgnba5n6g.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean, x], Original ATen: [aten.mean]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean_1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [-1]), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=3] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [-1]), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_0 = async_compile.triton('triton_poi_fused_mean_0', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (4 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (5 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (6 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (7 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (8 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (9 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (10 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (11 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (12 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (13 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (14 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (15 + 16*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 161*x1), tmp36, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_for_fused_1 = async_compile.triton('triton_for_fused_1', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.foreach(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_warps=8,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_for_fused_1', 'mutated_arg_names': [], 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_for_fused_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     pid = tl.program_id(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1024
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_xblocks_0 = tl.cdiv(576, XBLOCK)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_xblocks_1 = num_xblocks_0 + tl.cdiv(40, XBLOCK)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_xblocks_2 = num_xblocks_1 + tl.cdiv(12, XBLOCK)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     if pid < num_xblocks_0:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pid_offset = pid
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xnumel = 576
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rnumel = 1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xoffset = pid_offset * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x0 = (xindex % 144)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x1 = xindex // 144
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (x0 + 161*x1), tmp0, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     elif pid < num_xblocks_1:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pid_offset = pid - num_xblocks_0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xnumel = 40
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rnumel = 1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xoffset = pid_offset * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x2 = (xindex % 10)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x3 = xindex // 10
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr1 + (x2 + 161*x3), tmp1, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     elif pid < num_xblocks_2:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pid_offset = pid - num_xblocks_1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xnumel = 12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rnumel = 1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xoffset = pid_offset * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x4 = (xindex % 3)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x5 = xindex // 3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr2 + (x4 + 161*x5), tmp2, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     else:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pass
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rh/crhdteesukvl5bcghqy5kbwu3tkfiztx4uwssiksrnxccie4zedb.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xc_5], Original ATen: [aten.cat]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xc_5 => cat_1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%mean_1, %add, %add_1, %add_2], 1), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 644
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 161)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 161
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (161*x1 + (x0)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 148, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (144*x1 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full(tmp14.shape, 0.0, tmp14.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp9, tmp14, tmp15)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 >= tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 158, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 < tmp18
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 & tmp19
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr4 + (10*x1 + ((-148) + x0)), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr5 + ((-148) + x0), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr6 + ((-148) + x0), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp20, tmp25, tmp26)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp0 >= tmp18
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full([1], 161, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 < tmp29
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr7 + (3*x1 + ((-158) + x0)), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr8 + ((-158) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr9 + ((-158) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 + tmp34
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full(tmp35.shape, 0.0, tmp35.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp28, tmp35, tmp36)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp20, tmp27, tmp37)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp9, tmp16, tmp38)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp4, tmp5, tmp39)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp40, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/km/ckmfmmiiosvr2msuaftf64dzad6jmo3756elwtxsukhdq5iva4hv.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xc_10], Original ATen: [aten.cat]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xc_10 => cat_2
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%mean_1, %add_3, %add_4, %add_5], 1), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 644
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 161)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 161
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (161*x1 + (x0)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 148, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (144*x1 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (144*x1 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp11
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp12 + tmp16
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 158, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (10*x1 + ((-148) + x0)), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + ((-148) + x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr7 + (10*x1 + ((-148) + x0)), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp25
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr8 + ((-148) + x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp26 + tmp30
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp31, tmp32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp21
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 161, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr9 + (3*x1 + ((-158) + x0)), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr10 + ((-158) + x0), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr11 + (3*x1 + ((-158) + x0)), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 + tmp38
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr12 + ((-158) + x0), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp39 + tmp43
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full(tmp44.shape, 0.0, tmp44.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp34, tmp44, tmp45)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp23, tmp33, tmp46)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp9, tmp19, tmp47)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp4, tmp5, tmp48)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp49, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/tr/ctr2cx6zxa3ejt4f5ubl43xj6eb7kk7lzmldbeucul4mertmpstm.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear_3, pred_shape, linear_8, pred_shape_1, linear_13, pred_shape_2], Original ATen: [aten.addmm, aten.add]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_13 => add_tensor_1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_3 => add_tensor_7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_8 => add_tensor_4
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_shape => add_1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_shape_1 => add_4
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_shape_2 => add_7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_7, %primals_12), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_7, %expand_1), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_4, %primals_12), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_4, %add_1), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_12), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_1, %add_4), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_4 = async_compile.triton('triton_poi_fused_add_addmm_4', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 40
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 10)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp10, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/p6/cp6752ijb7oktmlcas5llhmdyi7fofi5mxeqq43r4lmacolk4lkp.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear_4, pred_cam, linear_9, pred_cam_1, linear_14, pred_cam_2], Original ATen: [aten.addmm, aten.add]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_14 => add_tensor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_4 => add_tensor_6
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_9 => add_tensor_3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_cam => add_2
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_cam_1 => add_5
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_cam_2 => add_8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_6, %primals_14), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_6, %expand_2), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_3, %primals_14), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_3, %add_2), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_14), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor, %add_5), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_5 = async_compile.triton('triton_poi_fused_add_addmm_5', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp10, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l3/cl3f62qidus2eqdmwvvmtnusydg6jsdz3qtllho5abubn5ag2yh4.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear_2, pred_pose, linear_7, pred_pose_1, linear_12, pred_pose_2], Original ATen: [aten.addmm, aten.add]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_12 => add_tensor_2
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_2 => add_tensor_8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_7 => add_tensor_5
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_pose => add
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_pose_1 => add_3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_pose_2 => add_6
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_8, %primals_10), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_8, %expand), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_5, %primals_10), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_5, %add), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_2, %primals_10), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_2, %add_3), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_6 = async_compile.triton('triton_poi_fused_add_addmm_6', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 144)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp10, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/s4/cs4bc3jpymx5nayaa55njb73ezj5tmfmcto5l3dwbslm665iyui2.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [b1], Original ATen: [aten.div]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   b1 => div
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=6] = call_function[target=torch.ops.aten.div.Tensor](args = (%select, %expand_3), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_7 = async_compile.triton('triton_poi_fused_div_7', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (6*x1), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 6*x1), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (4 + 6*x1), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.sqrt(tmp8)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 / tmp11
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp12, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rl/crlu4wdcm6xdpmenosmyzb7lxpqxoopusbhsp55rhrxmltloacbw.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   einsum => bmm
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %bmm : [num_users=2] = call_function[target=torch.ops.aten.bmm.default](args = (%view_1, %view_2), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_bmm_8 = async_compile.triton('triton_poi_fused_bmm_8', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_bmm_8(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1 + 2*x0), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/h4/ch45oxjyv5jnbq6iu6cgfnsdptwjmpxy7usro3iw3wkifrwwonku.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sub], Original ATen: [aten.mul, aten.sub]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %div), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_1, %mul), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sub_9 = async_compile.triton('triton_poi_fused_mul_sub_9', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sub_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sub_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1 + 2*x2), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 - tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ts/cts7dbgxpgavahd5xjhzk6xdsvi7a6oktufho6id3uaigjzbbh46.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   b3 => index
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=2] = call_function[target=torch.ops.aten.index.Tensor](args = (%div, [None, %remainder]), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_linalg_cross_10 = async_compile.triton('triton_poi_fused_linalg_cross_10', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_linalg_cross_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_linalg_cross_10(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x1 + (((1 + x0) % 3))), xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fq/cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   b3 => index_2
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=2] = call_function[target=torch.ops.aten.index.Tensor](args = (%div, [None, %remainder_1]), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_linalg_cross_11 = async_compile.triton('triton_poi_fused_linalg_cross_11', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_linalg_cross_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_linalg_cross_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x1 + (((2 + x0) % 3))), xmask, eviction_policy='evict_last')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/l2/cl27brnphirf43rwxzdlvqub4qfeov3fmqqjzhdk45o7g7zowtgg.py
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   stack => cat_3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_1, %unsqueeze_2, %unsqueeze_3], -1), kwargs = {})
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_12 = async_compile.triton('triton_poi_fused_stack_12', '''
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 864
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 9
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3) % 3)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x3), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (3*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 3*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 3*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 + tmp17
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = libdevice.sqrt(tmp18)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1e-12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp19, tmp20)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 / tmp21
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp9, tmp22, tmp23)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 3, tl.int64)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (x3), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (3*x2 + (((2 + x1) % 3))), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr1 + (3*x2), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp30
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr1 + (1 + 3*x2), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 * tmp32
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr1 + (2 + 3*x2), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 + tmp36
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = libdevice.sqrt(tmp37)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1e-12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = triton_helpers.maximum(tmp38, tmp39)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp29 / tmp40
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp28 * tmp41
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr3 + (x3), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr1 + (3*x2 + (((1 + x1) % 3))), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 / tmp40
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp43 * tmp45
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp42 - tmp46
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.full(tmp47.shape, 0.0, tmp47.dtype)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp25, tmp47, tmp48)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.where(tmp9, tmp24, tmp49)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.where(tmp4, tmp5, tmp50)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp51, xmask)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14 = args
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (1, 144), (144, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 10), (10, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 3), (3, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1024, 161), (161, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1024, ), (1, ))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1024, 1024), (1024, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1024, ), (1, ))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (144, 1024), (1024, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (144, ), (1, ))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (10, 1024), (1024, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (10, ), (1, ))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (3, 1024), (1024, 1))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (3, ), (1, ))
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 161), (161, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = reinterpret_tensor(buf4, (4, 4), (161, 1), 0)  # alias
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean, x], Original ATen: [aten.mean]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_0.run(primals_1, buf0, 16, grid=grid(16), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf4, (4, 144), (161, 1), 4)  # alias
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf4, (4, 10), (161, 1), 148)  # alias
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf4, (4, 3), (161, 1), 158)  # alias
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_for_fused_1.run(primals_2, primals_3, primals_4, buf1, buf2, buf3, grid=(3, 1, 1), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_1], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, buf4, reinterpret_tensor(primals_5, (161, 1024), (1, 161), 0), alpha=1, beta=1, out=buf5)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_3], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, buf5, reinterpret_tensor(primals_7, (1024, 1024), (1, 1024), 0), alpha=1, beta=1, out=buf6)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 144), (144, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_2], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_9, (1024, 144), (1, 1024), 0), out=buf7)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_11, (1024, 10), (1, 1024), 0), out=buf8)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 3), (3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_4], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_13, (1024, 3), (1, 1024), 0), out=buf9)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 161), (161, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_5], Original ATen: [aten.cat]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(buf0, buf7, primals_10, primals_2, buf8, primals_12, primals_3, buf9, primals_14, primals_4, buf10, 644, grid=grid(644), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_6], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, buf10, reinterpret_tensor(primals_5, (161, 1024), (1, 161), 0), alpha=1, beta=1, out=buf11)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_8], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, buf11, reinterpret_tensor(primals_7, (1024, 1024), (1, 1024), 0), alpha=1, beta=1, out=buf12)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 144), (144, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_7], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf12, reinterpret_tensor(primals_9, (1024, 144), (1, 1024), 0), out=buf13)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_8], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf12, reinterpret_tensor(primals_11, (1024, 10), (1, 1024), 0), out=buf14)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 3), (3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_9], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf12, reinterpret_tensor(primals_13, (1024, 3), (1, 1024), 0), out=buf15)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 161), (161, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_10], Original ATen: [aten.cat]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(buf0, buf13, primals_10, buf7, primals_2, buf14, primals_12, buf8, primals_3, buf15, primals_14, buf9, primals_4, buf16, 644, grid=grid(644), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_11], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, buf16, reinterpret_tensor(primals_5, (161, 1024), (1, 161), 0), alpha=1, beta=1, out=buf17)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_13], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, buf17, reinterpret_tensor(primals_7, (1024, 1024), (1, 1024), 0), alpha=1, beta=1, out=buf18)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 144), (144, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_12], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf18, reinterpret_tensor(primals_9, (1024, 144), (1, 1024), 0), out=buf19)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_13], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf18, reinterpret_tensor(primals_11, (1024, 10), (1, 1024), 0), out=buf20)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3, pred_shape, linear_8, pred_shape_1, linear_13, pred_shape_2], Original ATen: [aten.addmm, aten.add]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_4.run(buf21, primals_12, buf14, buf8, primals_3, 40, grid=grid(40), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 3), (3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_14], Original ATen: [aten.addmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf18, reinterpret_tensor(primals_13, (1024, 3), (1, 1024), 0), out=buf22)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = buf22; del buf22  # reuse
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_4, pred_cam, linear_9, pred_cam_1, linear_14, pred_cam_2], Original ATen: [aten.addmm, aten.add]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_5.run(buf23, primals_14, buf15, buf9, primals_4, 12, grid=grid(12), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf19; del buf19  # reuse
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_2, pred_pose, linear_7, pred_pose_1, linear_12, pred_pose_2], Original ATen: [aten.addmm, aten.add]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_6.run(buf24, primals_10, buf13, buf7, primals_2, 576, grid=grid(576), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((96, 3), (3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [b1], Original ATen: [aten.div]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_7.run(buf24, buf25, 288, grid=grid(288), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((96, 3, 1), (3, 1, 288), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_8.run(buf24, buf26, 288, grid=grid(288), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((96, 1, 1), (1, 1, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf25, (96, 1, 3), (3, 3, 1), 0), buf26, out=buf27)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = reinterpret_tensor(buf26, (96, 3), (3, 1), 0); del buf26  # reuse
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sub], Original ATen: [aten.mul, aten.sub]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sub_9.run(buf24, buf27, buf25, buf28, 288, grid=grid(288), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((96, 3), (3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_linalg_cross_10.run(buf25, buf29, 288, grid=grid(288), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((96, 3), (3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_linalg_cross_11.run(buf25, buf30, 288, grid=grid(288), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((96, 3, 3), (9, 3, 1), torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_12.run(buf25, buf28, buf29, buf30, buf31, 864, grid=grid(864), stream=stream0)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf31, (4, 24, 3, 3), (216, 9, 3, 1), 0), buf21, buf23, buf4, buf5, buf6, buf10, buf11, buf12, buf16, buf17, buf18, reinterpret_tensor(buf24, (96, 3), (6, 2), 0), buf25, buf27, buf28, buf29, buf30, reinterpret_tensor(buf24, (96, 1, 3), (6, 2, 2), 1), primals_13, primals_11, primals_9, primals_7, primals_5, )
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((1, 144), (144, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 3), (3, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1024, 161), (161, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1024, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((144, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((144, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((10, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((3, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14])
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:20:38.372000 3814935 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:38.391000 3814935 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/li/cli4gusik5nkvnjewiv55qazsh75n7rqqfbgd5uttdarekmsxeip.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['7_forward']
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bq/cbqdb4r55v4dfu7yp23w475k3vxnxmyd7uikkm7k555tgnba5n6g.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mean, x], Original ATen: [aten.mean]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mean => mean
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => mean_1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.dim](args = (%primals_1, [-1]), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean_1 : [num_users=3] = call_function[target=torch.ops.aten.mean.dim](args = (%mean, [-1]), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mean_0 = async_compile.triton('triton_poi_fused_mean_0', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mean_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mean_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (4 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (5 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (6 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr0 + (7 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (8 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + (9 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr0 + (10 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr0 + (11 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr0 + (12 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (13 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr0 + (14 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (15 + 16*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = 4.0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 / tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp8 + tmp16
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp18 + tmp19
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 / tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp17 + tmp25
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 + tmp28
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp29 + tmp30
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 / tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp26 + tmp34
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 / tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 161*x1), tmp36, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Unsorted Source Nodes: [], Original ATen: []
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_for_fused_1 = async_compile.triton('triton_for_fused_1', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.foreach(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_warps=8,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'kernel_name': 'triton_for_fused_1', 'mutated_arg_names': [], 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_for_fused_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     pid = tl.program_id(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1024
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_xblocks_0 = tl.cdiv(576, XBLOCK)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_xblocks_1 = num_xblocks_0 + tl.cdiv(40, XBLOCK)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     num_xblocks_2 = num_xblocks_1 + tl.cdiv(12, XBLOCK)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     if pid < num_xblocks_0:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pid_offset = pid
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xnumel = 576
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rnumel = 1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xoffset = pid_offset * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x0 = (xindex % 144)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x1 = xindex // 144
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr0 + (x0 + 161*x1), tmp0, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     elif pid < num_xblocks_1:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pid_offset = pid - num_xblocks_0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xnumel = 40
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rnumel = 1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xoffset = pid_offset * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x2 = (xindex % 10)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x3 = xindex // 10
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.load(in_ptr1 + (x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr1 + (x2 + 161*x3), tmp1, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     elif pid < num_xblocks_2:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pid_offset = pid - num_xblocks_1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xnumel = 12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rnumel = 1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xoffset = pid_offset * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x4 = (xindex % 3)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         x5 = xindex // 3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tl.load(in_ptr2 + (x4), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr2 + (x4 + 161*x5), tmp2, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     else:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         pass
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rh/crhdteesukvl5bcghqy5kbwu3tkfiztx4uwssiksrnxccie4zedb.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xc_5], Original ATen: [aten.cat]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xc_5 => cat_1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%mean_1, %add, %add_1, %add_2], 1), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 644
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 161)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 161
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (161*x1 + (x0)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 148, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (144*x1 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full(tmp14.shape, 0.0, tmp14.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp9, tmp14, tmp15)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp0 >= tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full([1], 158, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp0 < tmp18
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp17 & tmp19
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr4 + (10*x1 + ((-148) + x0)), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr5 + ((-148) + x0), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 + tmp22
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr6 + ((-148) + x0), tmp20 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 + tmp24
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full(tmp25.shape, 0.0, tmp25.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.where(tmp20, tmp25, tmp26)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp0 >= tmp18
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.full([1], 161, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 < tmp29
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr7 + (3*x1 + ((-158) + x0)), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr8 + ((-158) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp31 + tmp32
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr9 + ((-158) + x0), tmp28 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp33 + tmp34
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tl.full(tmp35.shape, 0.0, tmp35.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.where(tmp28, tmp35, tmp36)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.where(tmp20, tmp27, tmp37)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.where(tmp9, tmp16, tmp38)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.where(tmp4, tmp5, tmp39)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp40, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/km/ckmfmmiiosvr2msuaftf64dzad6jmo3756elwtxsukhdq5iva4hv.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [xc_10], Original ATen: [aten.cat]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   xc_10 => cat_2
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%mean_1, %add_3, %add_4, %add_5], 1), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_3 = async_compile.triton('triton_poi_fused_cat_3', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_3(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 644
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 161)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 161
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (161*x1 + (x0)), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 148, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (144*x1 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 + tmp11
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr3 + (144*x1 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 + tmp11
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + ((-4) + x0), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp12 + tmp16
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.full(tmp17.shape, 0.0, tmp17.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp9, tmp17, tmp18)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp0 >= tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.full([1], 158, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp0 < tmp21
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp20 & tmp22
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr5 + (10*x1 + ((-148) + x0)), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr6 + ((-148) + x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp24 + tmp25
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr7 + (10*x1 + ((-148) + x0)), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 + tmp25
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr8 + ((-148) + x0), tmp23 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp26 + tmp30
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.full(tmp31.shape, 0.0, tmp31.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp23, tmp31, tmp32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp0 >= tmp21
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.full([1], 161, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 < tmp35
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr9 + (3*x1 + ((-158) + x0)), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tl.load(in_ptr10 + ((-158) + x0), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 + tmp38
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr11 + (3*x1 + ((-158) + x0)), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp40 + tmp38
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.load(in_ptr12 + ((-158) + x0), tmp34 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp39 + tmp43
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.full(tmp44.shape, 0.0, tmp44.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp34, tmp44, tmp45)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.where(tmp23, tmp33, tmp46)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.where(tmp9, tmp19, tmp47)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp4, tmp5, tmp48)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp49, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/tr/ctr2cx6zxa3ejt4f5ubl43xj6eb7kk7lzmldbeucul4mertmpstm.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear_3, pred_shape, linear_8, pred_shape_1, linear_13, pred_shape_2], Original ATen: [aten.addmm, aten.add]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_13 => add_tensor_1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_3 => add_tensor_7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_8 => add_tensor_4
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_shape => add_1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_shape_1 => add_4
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_shape_2 => add_7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_7, %primals_12), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_7, %expand_1), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_4, %primals_12), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_4, %add_1), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_1, %primals_12), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_1, %add_4), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_4 = async_compile.triton('triton_poi_fused_add_addmm_4', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 40
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 10)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp10, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/p6/cp6752ijb7oktmlcas5llhmdyi7fofi5mxeqq43r4lmacolk4lkp.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear_4, pred_cam, linear_9, pred_cam_1, linear_14, pred_cam_2], Original ATen: [aten.addmm, aten.add]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_14 => add_tensor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_4 => add_tensor_6
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_9 => add_tensor_3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_cam => add_2
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_cam_1 => add_5
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_cam_2 => add_8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_6, %primals_14), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_6, %expand_2), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_3, %primals_14), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_3, %add_2), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default, %primals_14), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor, %add_5), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_5 = async_compile.triton('triton_poi_fused_add_addmm_5', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp10, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l3/cl3f62qidus2eqdmwvvmtnusydg6jsdz3qtllho5abubn5ag2yh4.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [linear_2, pred_pose, linear_7, pred_pose_1, linear_12, pred_pose_2], Original ATen: [aten.addmm, aten.add]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_12 => add_tensor_2
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_2 => add_tensor_8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   linear_7 => add_tensor_5
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_pose => add
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_pose_1 => add_3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pred_pose_2 => add_6
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_8 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_8, %primals_10), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_8, %expand), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_5, %primals_10), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_5, %add), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_tensor_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_2, %primals_10), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_tensor_2, %add_3), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_addmm_6 = async_compile.triton('triton_poi_fused_add_addmm_6', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_addmm_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_addmm_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 576
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 144)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr2 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp2 + tmp9
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp10, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/s4/cs4bc3jpymx5nayaa55njb73ezj5tmfmcto5l3dwbslm665iyui2.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [b1], Original ATen: [aten.div]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   b1 => div
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=6] = call_function[target=torch.ops.aten.div.Tensor](args = (%select, %expand_3), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_7 = async_compile.triton('triton_poi_fused_div_7', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (2*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (6*x1), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 6*x1), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (4 + 6*x1), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = libdevice.sqrt(tmp8)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.maximum(tmp9, tmp10)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp0 / tmp11
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp12, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rl/crlu4wdcm6xdpmenosmyzb7lxpqxoopusbhsp55rhrxmltloacbw.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   einsum => bmm
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %bmm : [num_users=2] = call_function[target=torch.ops.aten.bmm.default](args = (%view_1, %view_2), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_bmm_8 = async_compile.triton('triton_poi_fused_bmm_8', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bmm_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_bmm_8(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1 + 2*x0), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/h4/ch45oxjyv5jnbq6iu6cgfnsdptwjmpxy7usro3iw3wkifrwwonku.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul, sub], Original ATen: [aten.mul, aten.sub]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, %div), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=3] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_1, %mul), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sub_9 = async_compile.triton('triton_poi_fused_mul_sub_9', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sub_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sub_9(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (1 + 2*x2), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr2 + (x2), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 - tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp4, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ts/cts7dbgxpgavahd5xjhzk6xdsvi7a6oktufho6id3uaigjzbbh46.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   b3 => index
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index : [num_users=2] = call_function[target=torch.ops.aten.index.Tensor](args = (%div, [None, %remainder]), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_linalg_cross_10 = async_compile.triton('triton_poi_fused_linalg_cross_10', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_linalg_cross_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_linalg_cross_10(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x1 + (((1 + x0) % 3))), xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fq/cfq3thvwx2c2xndz5dozjyukr4erzugyvck52r5festrq5uejzdq.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   b3 => index_2
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_2 : [num_users=2] = call_function[target=torch.ops.aten.index.Tensor](args = (%div, [None, %remainder_1]), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_linalg_cross_11 = async_compile.triton('triton_poi_fused_linalg_cross_11', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_linalg_cross_11', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_linalg_cross_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 288
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (3*x1 + (((2 + x0) % 3))), xmask, eviction_policy='evict_last')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp0, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/l2/cl27brnphirf43rwxzdlvqub4qfeov3fmqqjzhdk45o7g7zowtgg.py
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   stack => cat_3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_3 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze_1, %unsqueeze_2, %unsqueeze_3], -1), kwargs = {})
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_12 = async_compile.triton('triton_poi_fused_stack_12', '''
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 12, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 864
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 3)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 9
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 3) % 3)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 2, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x3), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (3*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 3*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 3*x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 + tmp17
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = libdevice.sqrt(tmp18)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1e-12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp19, tmp20)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 / tmp21
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.full(tmp22.shape, 0.0, tmp22.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp9, tmp22, tmp23)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp0 >= tmp7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 3, tl.int64)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp0 < tmp26
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr2 + (x3), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (3*x2 + (((2 + x1) % 3))), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.load(in_ptr1 + (3*x2), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp30
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr1 + (1 + 3*x2), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 * tmp32
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp31 + tmp33
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr1 + (2 + 3*x2), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp35 * tmp35
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp34 + tmp36
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = libdevice.sqrt(tmp37)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1e-12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = triton_helpers.maximum(tmp38, tmp39)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp29 / tmp40
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp28 * tmp41
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl.load(in_ptr3 + (x3), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr1 + (3*x2 + (((1 + x1) % 3))), tmp25 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 / tmp40
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp43 * tmp45
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp42 - tmp46
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.full(tmp47.shape, 0.0, tmp47.dtype)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp25, tmp47, tmp48)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.where(tmp9, tmp24, tmp49)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.where(tmp4, tmp5, tmp50)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp51, xmask)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14 = args
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (1, 144), (144, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, 10), (10, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, 3), (3, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1024, 161), (161, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1024, ), (1, ))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1024, 1024), (1024, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1024, ), (1, ))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (144, 1024), (1024, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (144, ), (1, ))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (10, 1024), (1024, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (10, ), (1, ))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (3, 1024), (1024, 1))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (3, ), (1, ))
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 161), (161, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = reinterpret_tensor(buf4, (4, 4), (161, 1), 0)  # alias
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mean, x], Original ATen: [aten.mean]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mean_0.run(primals_1, buf0, 16, grid=grid(16), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = reinterpret_tensor(buf4, (4, 144), (161, 1), 4)  # alias
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf4, (4, 10), (161, 1), 148)  # alias
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf4, (4, 3), (161, 1), 158)  # alias
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Unsorted Source Nodes: [], Original ATen: []
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_for_fused_1.run(primals_2, primals_3, primals_4, buf1, buf2, buf3, grid=(3, 1, 1), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_1], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, buf4, reinterpret_tensor(primals_5, (161, 1024), (1, 161), 0), alpha=1, beta=1, out=buf5)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_3], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, buf5, reinterpret_tensor(primals_7, (1024, 1024), (1, 1024), 0), alpha=1, beta=1, out=buf6)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 144), (144, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_2], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_9, (1024, 144), (1, 1024), 0), out=buf7)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_11, (1024, 10), (1, 1024), 0), out=buf8)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 3), (3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_4], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf6, reinterpret_tensor(primals_13, (1024, 3), (1, 1024), 0), out=buf9)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 161), (161, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_5], Original ATen: [aten.cat]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(buf0, buf7, primals_10, primals_2, buf8, primals_12, primals_3, buf9, primals_14, primals_4, buf10, 644, grid=grid(644), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_6], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, buf10, reinterpret_tensor(primals_5, (161, 1024), (1, 161), 0), alpha=1, beta=1, out=buf11)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_8], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, buf11, reinterpret_tensor(primals_7, (1024, 1024), (1, 1024), 0), alpha=1, beta=1, out=buf12)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 144), (144, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_7], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf12, reinterpret_tensor(primals_9, (1024, 144), (1, 1024), 0), out=buf13)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_8], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf12, reinterpret_tensor(primals_11, (1024, 10), (1, 1024), 0), out=buf14)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 3), (3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_9], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf12, reinterpret_tensor(primals_13, (1024, 3), (1, 1024), 0), out=buf15)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 161), (161, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_10], Original ATen: [aten.cat]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_3.run(buf0, buf13, primals_10, buf7, primals_2, buf14, primals_12, buf8, primals_3, buf15, primals_14, buf9, primals_4, buf16, 644, grid=grid(644), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_11], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, buf16, reinterpret_tensor(primals_5, (161, 1024), (1, 161), 0), alpha=1, beta=1, out=buf17)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 1024), (1024, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [xc_13], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_8, buf17, reinterpret_tensor(primals_7, (1024, 1024), (1, 1024), 0), alpha=1, beta=1, out=buf18)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((4, 144), (144, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_12], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf18, reinterpret_tensor(primals_9, (1024, 144), (1, 1024), 0), out=buf19)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 10), (10, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_13], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf18, reinterpret_tensor(primals_11, (1024, 10), (1, 1024), 0), out=buf20)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = buf20; del buf20  # reuse
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_3, pred_shape, linear_8, pred_shape_1, linear_13, pred_shape_2], Original ATen: [aten.addmm, aten.add]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_4.run(buf21, primals_12, buf14, buf8, primals_3, 40, grid=grid(40), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf14
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = empty_strided_cuda((4, 3), (3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_14], Original ATen: [aten.addmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf18, reinterpret_tensor(primals_13, (1024, 3), (1, 1024), 0), out=buf22)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = buf22; del buf22  # reuse
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_4, pred_cam, linear_9, pred_cam_1, linear_14, pred_cam_2], Original ATen: [aten.addmm, aten.add]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_5.run(buf23, primals_14, buf15, buf9, primals_4, 12, grid=grid(12), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf15
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf9
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = buf19; del buf19  # reuse
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [linear_2, pred_pose, linear_7, pred_pose_1, linear_12, pred_pose_2], Original ATen: [aten.addmm, aten.add]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_addmm_6.run(buf24, primals_10, buf13, buf7, primals_2, 576, grid=grid(576), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf13
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = empty_strided_cuda((96, 3), (3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [b1], Original ATen: [aten.div]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_7.run(buf24, buf25, 288, grid=grid(288), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((96, 3, 1), (3, 1, 288), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_bmm_8.run(buf24, buf26, 288, grid=grid(288), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((96, 1, 1), (1, 1, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum], Original ATen: [aten.bmm]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf25, (96, 1, 3), (3, 3, 1), 0), buf26, out=buf27)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = reinterpret_tensor(buf26, (96, 3), (3, 1), 0); del buf26  # reuse
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul, sub], Original ATen: [aten.mul, aten.sub]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sub_9.run(buf24, buf27, buf25, buf28, 288, grid=grid(288), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = empty_strided_cuda((96, 3), (3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_linalg_cross_10.run(buf25, buf29, 288, grid=grid(288), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((96, 3), (3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [b3], Original ATen: [aten.linalg_cross]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_linalg_cross_11.run(buf25, buf30, 288, grid=grid(288), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = empty_strided_cuda((96, 3, 3), (9, 3, 1), torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [stack], Original ATen: [aten.stack]
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_12.run(buf25, buf28, buf29, buf30, buf31, 864, grid=grid(864), stream=stream0)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf31, (4, 24, 3, 3), (216, 9, 3, 1), 0), buf21, buf23, buf4, buf5, buf6, buf10, buf11, buf12, buf16, buf17, buf18, reinterpret_tensor(buf24, (96, 3), (6, 2), 0), buf25, buf27, buf28, buf29, buf30, reinterpret_tensor(buf24, (96, 1, 3), (6, 2, 2), 1), primals_13, primals_11, primals_9, primals_7, primals_5, )
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((1, 144), (144, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, 10), (10, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, 3), (3, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1024, 161), (161, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1024, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((144, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((144, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((10, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((10, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((3, 1024), (1024, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((3, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14])
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:09:37.680000 1117231 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:37.700000 1117231 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/4j/c4jhndpci7ql32orr6pv2xn3yhrfdyflfa2tehm64f6qzwdkja6w.py
