V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['6_inference']
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rf/crfhchfaemaigzwktgyclnuci45puuj5lgsakea6x27s6ru65nya.py
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [ge, labels, ge_1, output_gt_zero, sub, mul, mul_1, mul_2, sub_1, exp, add, log, loss_val, mul_3, loss_pos_pix, loss_pos, sub_3, mul_4, loss_neg_pix, loss_neg, final_loss], Original ATen: [aten.ge, aten._to_copy, aten.sub, aten.mul, aten.exp, aten.add, aten.log, aten.neg, aten.sum, aten.rsub]
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   exp => exp
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   final_loss => add_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   ge => ge
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   ge_1 => ge_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   labels => convert_element_type
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   log => log
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_neg => sum_2
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_neg_pix => neg_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_pos => sum_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_pos_pix => neg
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_val => sub_2
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_1 => mul_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_2 => mul_2
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_3 => mul_3
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_4 => mul_4
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   output_gt_zero => convert_element_type_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub => sub
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub_1 => sub_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub_3 => sub_3
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%arg1_1, 0.5), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type : [num_users=3] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ge, torch.float32), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%arg0_1, 0), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type_1 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ge_1, torch.float32), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type, %convert_element_type_1), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %sub), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %convert_element_type_1), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, 2), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %mul_2), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%exp, 1), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %log), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, %sub_2), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_3,), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%neg,), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %convert_element_type), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %sub_2), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_4,), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%neg_1,), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0 = async_compile.triton('triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0', '''
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 256
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r0 = rindex
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0), None)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.5
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = 0.0
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 >= tmp5
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp3 - tmp7
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp4 * tmp8
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp4 * tmp7
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = 2.0
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp10 * tmp11
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp4 - tmp12
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = 1.0
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tmp14 + tmp15
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl_math.log(tmp16)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tmp9 - tmp17
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp3 * tmp18
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = -tmp19
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [RBLOCK])
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = triton_helpers.promote_to_tensor(tl.sum(tmp21, 0))
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tmp15 - tmp3
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp24 * tmp18
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = -tmp25
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [RBLOCK])
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = triton_helpers.promote_to_tensor(tl.sum(tmp27, 0))
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = tmp23 + tmp29
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.debug_barrier()
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp30, None)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] cpp_fused_lift_fresh_prod_1 = async_compile.cpp_pybinding(['int64_t*'], '''
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] extern "C"  void kernel(int64_t* out_ptr0)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             int64_t tmp_acc0 = 1;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             at::vec::VectorizedN<int64_t,2> tmp_acc0_vec = at::vec::VectorizedN<int64_t,2>(1);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(16L))
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     if(C10_LIKELY(x0 >= static_cast<int64_t>(0L) && x0 < static_cast<int64_t>(4L)))
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         for (int64_t x0_tail = static_cast<int64_t>(0L);x0_tail < static_cast<int64_t>(4L); x0_tail++)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         {
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp0 = x0_tail;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp1 = c10::convert<int64_t>(tmp0);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp2 = static_cast<int64_t>(2);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp3 = tmp1 < tmp2;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp4 = static_cast<int64_t>(1);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp5 = tmp1 < tmp4;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp6 = static_cast<int64_t>(4);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp7 = tmp5 ? tmp6 : tmp6;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp8 = static_cast<int64_t>(3);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp9 = tmp1 < tmp8;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp10 = tmp9 ? tmp6 : tmp6;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             auto tmp11 = tmp3 ? tmp7 : tmp10;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                             tmp_acc0 = tmp_acc0 * tmp11;
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             tmp_acc0 = tmp_acc0 * at::vec::vec_reduce_all<int64_t, 2>([](at::vec::Vectorized<int64_t>& x, at::vec::Vectorized<int64_t>& y) { return x * y; }, tmp_acc0_vec);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             out_ptr0[static_cast<int64_t>(0L)] = static_cast<int64_t>(tmp_acc0);
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] }
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''')
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = buf0; del buf0  # reuse
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [ge, labels, ge_1, output_gt_zero, sub, mul, mul_1, mul_2, sub_1, exp, add, log, loss_val, mul_3, loss_pos_pix, loss_pos, sub_3, mul_4, loss_neg_pix, loss_neg, final_loss], Original ATen: [aten.ge, aten._to_copy, aten.sub, aten.mul, aten.exp, aten.add, aten.log, aten.neg, aten.sum, aten.rsub]
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0.run(buf3, arg1_1, arg0_1, 1, 256, grid=grid(1), stream=stream0)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg1_1
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     buf2 = empty_strided_cpu((), (), torch.int64)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cpp_fused_lift_fresh_prod_1(buf2)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf3, buf2, )
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:00:20.236000 2869054 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0204 14:00:20.240000 2869054 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/h2/ch25eeii5p4fq2o44gfmbke5jdkpjixjvudea7v7hqfhwmojpri2.py
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] Output code: 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # AOT ID: ['6_inference']
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import torch
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import math
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import random
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import os
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import tempfile
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from math import inf, nan
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch import device, empty_strided
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     split_scan_grid,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     grid_combo_kernels,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     start_graph,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     end_graph,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cooperative_reduction_grid,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] aten = torch.ops.aten
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] _quantized = torch.ops._quantized
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile = AsyncCompile()
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # kernel path: inductor_cache/rf/crfhchfaemaigzwktgyclnuci45puuj5lgsakea6x27s6ru65nya.py
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Topologically Sorted Source Nodes: [ge, labels, ge_1, output_gt_zero, sub, mul, mul_1, mul_2, sub_1, exp, add, log, loss_val, mul_3, loss_pos_pix, loss_pos, sub_3, mul_4, loss_neg_pix, loss_neg, final_loss], Original ATen: [aten.ge, aten._to_copy, aten.sub, aten.mul, aten.exp, aten.add, aten.log, aten.neg, aten.sum, aten.rsub]
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Source node to ATen node mapping:
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   add => add
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   exp => exp
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   final_loss => add_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   ge => ge
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   ge_1 => ge_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   labels => convert_element_type
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   log => log
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_neg => sum_2
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_neg_pix => neg_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_pos => sum_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_pos_pix => neg
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   loss_val => sub_2
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul => mul
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_1 => mul_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_2 => mul_2
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_3 => mul_3
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   mul_4 => mul_4
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   output_gt_zero => convert_element_type_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub => sub
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub_1 => sub_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   sub_3 => sub_3
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] # Graph fragment:
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%arg1_1, 0.5), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type : [num_users=3] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ge, torch.float32), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%arg0_1, 0), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %convert_element_type_1 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%ge_1, torch.float32), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type, %convert_element_type_1), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %sub), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg0_1, %convert_element_type_1), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, 2), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%arg0_1, %mul_2), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %exp : [num_users=1] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%exp, 1), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_2 : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %log), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, %sub_2), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %neg : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_3,), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%neg,), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1.0, %convert_element_type), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_3, %sub_2), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%mul_4,), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%neg_1,), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, %sum_2), kwargs = {})
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0 = async_compile.triton('triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0', '''
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] import triton.language as tl
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     filename=__file__,
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 2, 'num_reduction': 2, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] )
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] @triton.jit
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xnumel = 1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rnumel = 256
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     roffset = 0
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     r0 = rindex
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (r0), None)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp4 = tl.load(in_ptr1 + (r0), None)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp1 = 0.5
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp3 = tmp2.to(tl.float32)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp5 = 0.0
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp6 = tmp4 >= tmp5
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp8 = tmp3 - tmp7
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp9 = tmp4 * tmp8
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp10 = tmp4 * tmp7
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp11 = 2.0
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp12 = tmp10 * tmp11
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp13 = tmp4 - tmp12
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp14 = tl_math.exp(tmp13)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp15 = 1.0
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp16 = tmp14 + tmp15
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp17 = tl_math.log(tmp16)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp18 = tmp9 - tmp17
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp19 = tmp3 * tmp18
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp20 = -tmp19
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [RBLOCK])
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp23 = triton_helpers.promote_to_tensor(tl.sum(tmp21, 0))
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp24 = tmp15 - tmp3
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp25 = tmp24 * tmp18
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp26 = -tmp25
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp27 = tl.broadcast_to(tmp26, [RBLOCK])
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp29 = triton_helpers.promote_to_tensor(tl.sum(tmp27, 0))
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tmp30 = tmp23 + tmp29
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.debug_barrier()
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp30, None)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''', device_str='cuda')
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] cpp_fused_lift_fresh_prod_1 = async_compile.cpp_pybinding(['int64_t*'], '''
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] extern "C"  void kernel(int64_t* out_ptr0)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] {
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     {
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         {
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             int64_t tmp_acc0 = 1;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4L); x0+=static_cast<int64_t>(1L))
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             {
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 {
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     {
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp0 = x0;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp2 = static_cast<int64_t>(2);
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp3 = tmp1 < tmp2;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp4 = static_cast<int64_t>(1);
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp5 = tmp1 < tmp4;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp6 = static_cast<int64_t>(4);
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp7 = tmp5 ? tmp6 : tmp6;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp8 = static_cast<int64_t>(3);
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp9 = tmp1 < tmp8;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp10 = tmp9 ? tmp6 : tmp6;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         auto tmp11 = tmp3 ? tmp7 : tmp10;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                         tmp_acc0 = tmp_acc0 * tmp11;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                     }
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]                 }
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             }
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]             out_ptr0[static_cast<int64_t>(0L)] = tmp_acc0;
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         }
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     }
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] }
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] ''')
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] async_compile.wait(globals())
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] del async_compile
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def call(args):
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1, arg1_1 = args
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     args.clear()
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         torch.cuda.set_device(0)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf0 = empty_strided_cuda((), (), torch.float32)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         buf3 = buf0; del buf0  # reuse
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         # Topologically Sorted Source Nodes: [ge, labels, ge_1, output_gt_zero, sub, mul, mul_1, mul_2, sub_1, exp, add, log, loss_val, mul_3, loss_pos_pix, loss_pos, sub_3, mul_4, loss_neg_pix, loss_neg, final_loss], Original ATen: [aten.ge, aten._to_copy, aten.sub, aten.mul, aten.exp, aten.add, aten.log, aten.neg, aten.sum, aten.rsub]
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         triton_per_fused__to_copy_add_exp_ge_log_mul_neg_rsub_sub_sum_0.run(buf3, arg1_1, arg0_1, 1, 256, grid=grid(1), stream=stream0)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg0_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]         del arg1_1
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     buf2 = empty_strided_cpu((), (), torch.int64)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     cpp_fused_lift_fresh_prod_1(buf2)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return (buf3, buf2, )
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] if __name__ == "__main__":
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:49:50.614000 627950 site-packages/torch/_inductor/graph.py:2045] [0/0_1] [__output_code] 
V0205 18:49:50.617000 627950 site-packages/torch/_inductor/graph.py:2053] [0/0_1] [__output_code] Output code written to: inductor_cache/nu/cnuf7ewemh5zfmkk55q5jm4ikd2qgxuolo4auzynodhscg2ulpjj.py
