V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vm/cvmrazvx6j4imwv5rkimvd7c6jg6jt2c6rtrk5jt6fg7ecf5tlre.py
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [combined], Original ATen: [aten.cat]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   combined => cat
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_2, %sub], 1), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 768
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 12)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 192
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 8, tl.int64)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 128*x2), tmp4 & xmask, other=0.0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 12, tl.int64)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 16*((-8) + x1) + 64*x2), tmp6 & xmask, other=0.0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (x0 + 16*((-8) + x1) + 128*x2), tmp6 & xmask, other=0.0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp6, tmp11, tmp12)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp4, tmp5, tmp13)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp14, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/r2/cr2agi6qmw6ndrpx64ihp2oombuhqfcofg2xsg25egiokw4jfj7n.py
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [i, f, o, g, mul, mul_1, c_next, tanh_1, h_next], Original ATen: [aten.sigmoid, aten.tanh, aten.mul, aten.add, aten.sigmoid_backward]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c_next => add
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   f => sigmoid_1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   g => tanh
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_next => mul_2
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   i => sigmoid
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   o => sigmoid_2
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tanh_1 => tanh_1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem,), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=3] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_1,), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_2 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_2,), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%getitem_3,), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %primals_5), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %tanh), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_1 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add,), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_2, %tanh_1), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid_1), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %sub_4), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1', '''
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, out_ptr3, out_ptr4, out_ptr5, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 64)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (128 + x4 + 256*x2), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (8 + x1), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (x4 + 256*x2), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (192 + x4 + 256*x2), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (12 + x1), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (64 + x4 + 256*x2), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (4 + x1), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr2 + (x3), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.sigmoid(tmp14)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 * tmp11
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1.0
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 - tmp15
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp15 * tmp21
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.tanh(tmp19)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp3 * tmp23
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp3, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp7, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp11, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x3), tmp19, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (x3), tmp22, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (x3), tmp24, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fw/cfwtb5adyysf5xc6vwqglhn6i2sbdepyrsoxbeg2vnkskylvm66g.py
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.adaptive_max_pool2d]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => getitem_4, getitem_5
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_4 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_5 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_adaptive_max_pool2d_2 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_2', '''
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_adaptive_max_pool2d_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 > tmp0
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int8)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 0, tl.int8)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 > tmp2
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 2, tl.int8)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp11, tmp12, tmp10)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 > tmp4
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 3, tl.int8)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp15, tmp13)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7y/c7ywxjxrkssccxwbusfmcbwpa5goptq7e3dvn7pxz3pxzpgq35wn.py
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [isub], Original ATen: [aten.sub]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   isub => sub
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %slice_3), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_1, %sub), kwargs = {})
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sub_3 = async_compile.triton('triton_poi_fused_sub_3', '''
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sub_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sub_3(in_ptr0, in_ptr1, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 128*x1), xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp2, xmask)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 8, 4, 4), (128, 16, 4, 1))
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, 12, 1, 1), (12, 1, 1, 1))
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 12, 4, 4), (192, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [combined], Original ATen: [aten.cat]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_2, primals_1, buf0, 768, grid=grid(768), stream=stream0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [combined_conv], Original ATen: [aten.convolution]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 16, 4, 4), (256, 16, 4, 1))
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [i, f, o, g, mul, mul_1, c_next, tanh_1, h_next], Original ATen: [aten.sigmoid, aten.tanh, aten.mul, aten.add, aten.sigmoid_backward]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1.run(buf1, primals_4, primals_5, buf3, buf2, buf4, buf5, buf11, buf6, 256, grid=grid(256), stream=stream0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.int8)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.adaptive_max_pool2d]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2.run(buf6, buf7, buf8, 64, grid=grid(64), stream=stream0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.int8)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.adaptive_max_pool2d]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2.run(buf5, buf9, buf10, 64, grid=grid(64), stream=stream0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [isub], Original ATen: [aten.sub]
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sub_3.run(primals_1, primals_2, primals_1, 256, grid=grid(256), stream=stream0)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf9, primals_3, primals_5, buf0, buf2, buf3, buf4, buf5, buf6, buf8, buf10, buf11, )
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 8, 4, 4), (128, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, 12, 1, 1), (12, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:17:39.816000 3697207 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:17:39.823000 3697207 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/d3/cd3scsl7rgafhcrfn2o7neypo4brsrvibghey3rwr3i55arrbvtx.py
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['0_forward']
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vm/cvmrazvx6j4imwv5rkimvd7c6jg6jt2c6rtrk5jt6fg7ecf5tlre.py
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [combined], Original ATen: [aten.cat]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   combined => cat
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_2, %sub], 1), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_0 = async_compile.triton('triton_poi_fused_cat_0', '''
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1024}, 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_0(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 768
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 12)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 192
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 8, tl.int64)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 16*(x1) + 128*x2), tmp4 & xmask, other=0.0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 12, tl.int64)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 16*((-8) + x1) + 64*x2), tmp6 & xmask, other=0.0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (x0 + 16*((-8) + x1) + 128*x2), tmp6 & xmask, other=0.0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full(tmp11.shape, 0.0, tmp11.dtype)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp6, tmp11, tmp12)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(tmp4, tmp5, tmp13)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp14, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/r2/cr2agi6qmw6ndrpx64ihp2oombuhqfcofg2xsg25egiokw4jfj7n.py
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [i, f, o, g, mul, mul_1, c_next, tanh_1, h_next], Original ATen: [aten.sigmoid, aten.tanh, aten.mul, aten.add, aten.sigmoid_backward]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   c_next => add
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   f => sigmoid_1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   g => tanh
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   h_next => mul_2
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   i => sigmoid
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   o => sigmoid_2
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   tanh_1 => tanh_1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem,), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=3] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_1,), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_2 : [num_users=2] = call_function[target=torch.ops.aten.sigmoid.default](args = (%getitem_2,), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh : [num_users=2] = call_function[target=torch.ops.aten.tanh.default](args = (%getitem_3,), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %primals_5), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %tanh), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %tanh_1 : [num_users=1] = call_function[target=torch.ops.aten.tanh.default](args = (%add,), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_2, %tanh_1), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %sigmoid_1), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %sub_4), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1', '''
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1(in_ptr0, in_ptr1, in_ptr2, out_ptr0, out_ptr1, out_ptr2, out_ptr3, out_ptr4, out_ptr5, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 64)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 4)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (128 + x4 + 256*x2), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (8 + x1), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr0 + (x4 + 256*x2), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (192 + x4 + 256*x2), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (12 + x1), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (64 + x4 + 256*x2), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (4 + x1), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr2 + (x3), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.sigmoid(tmp2)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.sigmoid(tmp6)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 + tmp9
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = libdevice.tanh(tmp10)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.sigmoid(tmp14)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp7 * tmp11
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 + tmp18
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1.0
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp20 - tmp15
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp15 * tmp21
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = libdevice.tanh(tmp19)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp3 * tmp23
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp3, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp7, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp11, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x3), tmp19, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (x3), tmp22, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (x3), tmp24, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fw/cfwtb5adyysf5xc6vwqglhn6i2sbdepyrsoxbeg2vnkskylvm66g.py
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.adaptive_max_pool2d]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => getitem_4, getitem_5
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_4 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 0), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %getitem_5 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_adaptive_max_pool2d_2 = async_compile.triton('triton_poi_fused_adaptive_max_pool2d_2', '''
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i8', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_adaptive_max_pool2d_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_adaptive_max_pool2d_2(in_ptr0, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = triton_helpers.maximum(tmp1, tmp0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = triton_helpers.maximum(tmp5, tmp4)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp1 > tmp0
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.full([1], 1, tl.int8)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.full([1], 0, tl.int8)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp7, tmp8, tmp9)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp3 > tmp2
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 2, tl.int8)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp11, tmp12, tmp10)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 > tmp4
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([1], 3, tl.int8)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp15, tmp13)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x0), tmp16, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7y/c7ywxjxrkssccxwbusfmcbwpa5goptq7e3dvn7pxz3pxzpgq35wn.py
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [isub], Original ATen: [aten.sub]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   isub => sub
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%primals_1, %slice_3), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %copy_ : [num_users=0] = call_function[target=torch.ops.aten.copy_.default](args = (%primals_1, %sub), kwargs = {})
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sub_3 = async_compile.triton('triton_poi_fused_sub_3', '''
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sub_3', 'mutated_arg_names': ['in_ptr0', 'out_ptr1'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sub_3(in_ptr0, in_ptr1, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 64)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 64
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 128*x1), xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp2, xmask)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 8, 4, 4), (128, 16, 4, 1))
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (16, 12, 1, 1), (12, 1, 1, 1))
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (16, ), (1, ))
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 12, 4, 4), (192, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [combined], Original ATen: [aten.cat]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_0.run(primals_2, primals_1, buf0, 768, grid=grid(768), stream=stream0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [combined_conv], Original ATen: [aten.convolution]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_3, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 16, 4, 4), (256, 16, 4, 1))
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [i, f, o, g, mul, mul_1, c_next, tanh_1, h_next], Original ATen: [aten.sigmoid, aten.tanh, aten.mul, aten.add, aten.sigmoid_backward]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_sigmoid_backward_tanh_1.run(buf1, primals_4, primals_5, buf3, buf2, buf4, buf5, buf11, buf6, 256, grid=grid(256), stream=stream0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.int8)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.adaptive_max_pool2d]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2.run(buf6, buf7, buf8, 64, grid=grid(64), stream=stream0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 1), torch.int8)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2], Original ATen: [aten.adaptive_max_pool2d]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_adaptive_max_pool2d_2.run(buf5, buf9, buf10, 64, grid=grid(64), stream=stream0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [isub], Original ATen: [aten.sub]
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sub_3.run(primals_1, primals_2, primals_1, 256, grid=grid(256), stream=stream0)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf7, buf9, primals_3, primals_5, buf0, buf2, buf3, buf4, buf5, buf6, buf8, buf10, buf11, )
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 8, 4, 4), (128, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((16, 12, 1, 1), (12, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:06:41.426000 1050161 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:06:41.432000 1050161 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/yi/cyiec577gcqpocihvp3lp4kilweempyw4a4je7bdrnqce7kffl4m.py
