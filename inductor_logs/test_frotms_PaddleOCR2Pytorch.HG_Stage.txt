V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['29_forward']
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ww/cwwgtdtsfmelctsswowqngxc5go2ueat4bdbeaky4owan4yajef7.py
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1, mul_1, mul_2, sub
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_0', '''
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 4)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/q2/cq2t2vuctsjiy4eiwibz25566s2wpm4h5ga6aqlvajdgqisrsfkm.py
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.cat]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => cat
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_1, %relu], 1), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 8*(x1) + 32*x2), tmp4 & xmask, other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 8*((-4) + x1) + 32*x2), tmp6 & xmask, other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-05
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.sqrt(tmp14)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 1, tl.int32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 / tmp15
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1.0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp11 * tmp19
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr4 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr5 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 0, tl.int32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp24)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full(tmp26.shape, 0.0, tmp26.dtype)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp6, tmp26, tmp27)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp4, tmp5, tmp28)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp29, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4v/c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_7, x_8, x_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => add_5, mul_7, mul_8, sub_2
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => relu_1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_9 => mean
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_5,), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [-1, -2], True), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2', '''
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 8*x3), xmask, other=0.0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(xmask, tmp18, 0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.sum(tmp20, 1)[:, None]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 8.0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 / tmp22
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r2 + 8*x3), tmp17, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp23, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hv/chvqzov6rrdilj4pa4ijcefqvp5lldzq4rag3ez2ioxdgg3elwy7.py
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => convolution_3
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_17, %primals_18, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/rt/crtpspbgdqgifpjie7jjgzxkqan7posrlfxzflb4ucxmyukn4yoh.py
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_11, x_12], Original ATen: [aten.sigmoid, aten.mul]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => sigmoid
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_12 => mul_9
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_3,), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %relu_1), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sigmoid_4 = async_compile.triton('triton_poi_fused_mul_sigmoid_4', '''
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sigmoid_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sigmoid_4(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp3, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qj/cqj5frz5d2k6d5cljtwwz4wsydfjm6t2ga6vlotcp2ed5ikivpji.py
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_22, x_23, x_24], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_22 => sigmoid_1
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_23 => mul_16
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_24 => add_10
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_6,), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %relu_3), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %mul_9), kwargs = {})
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_5 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_5', '''
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_5(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x2), xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp5, xmask)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54 = args
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 1, 3, 3), (9, 9, 3, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 8, 1, 1), (8, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, 8, 1, 1), (8, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, 8, 1, 1), (8, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (4, 8, 1, 1), (8, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (4, ), (1, ))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(2, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_0.run(buf0, primals_3, primals_4, primals_5, primals_6, buf1, 128, grid=grid(128), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.cat]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf1, buf2, primals_8, primals_9, primals_10, primals_11, buf3, 256, grid=grid(256), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf6  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7, x_8, x_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf7, buf4, primals_13, primals_14, primals_15, primals_16, buf5, 16, 8, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_17, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf9, primals_18, 16, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_18
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf5; del buf5  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11, x_12], Original ATen: [aten.sigmoid, aten.mul]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sigmoid_4.run(buf10, buf9, 128, grid=grid(128), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_19, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_16], Original ATen: [aten.cat]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf10, buf11, primals_20, primals_21, primals_22, primals_23, buf12, 256, grid=grid(256), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_17], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_24, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = reinterpret_tensor(buf15, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf15  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_18, x_19, x_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf16, buf13, primals_25, primals_26, primals_27, primals_28, buf14, 16, 8, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_21], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, primals_29, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_21], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf18, primals_30, 16, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = buf14; del buf14  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_22, x_23, x_24], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_5.run(buf19, buf18, buf10, 128, grid=grid(128), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_25], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_31, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_28], Original ATen: [aten.cat]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf19, buf20, primals_32, primals_33, primals_34, primals_35, buf21, 256, grid=grid(256), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_29], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_36, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf24, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf24  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_30, x_31, x_32], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf25, buf22, primals_37, primals_38, primals_39, primals_40, buf23, 16, 8, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_33], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_41, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = buf26; del buf26  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_33], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf27, primals_42, 16, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_42
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf23; del buf23  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_34, x_35, x_36], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_5.run(buf28, buf27, buf19, 128, grid=grid(128), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_37], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = extern_kernels.convolution(buf28, primals_43, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf29, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_40], Original ATen: [aten.cat]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf28, buf29, primals_44, primals_45, primals_46, primals_47, buf30, 256, grid=grid(256), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_41], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf30, primals_48, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 4, 2, 4), (32, 8, 4, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = reinterpret_tensor(buf33, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf33  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_42, x_43, x_44], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf34, buf31, primals_49, primals_50, primals_51, primals_52, buf32, 16, 8, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_45], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = extern_kernels.convolution(buf34, primals_53, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf35, (4, 4, 1, 1), (4, 1, 1, 1))
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = buf35; del buf35  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_45], Original ATen: [aten.convolution]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf36, primals_54, 16, grid=grid(16), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_54
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf32; del buf32  # reuse
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_46, x_47, x_48], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_5.run(buf37, buf36, buf28, 128, grid=grid(128), stream=stream0)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf37, primals_1, primals_2, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, buf0, buf1, buf2, buf3, buf4, buf7, buf9, buf10, buf11, buf12, buf13, buf16, buf18, buf19, buf20, buf21, buf22, buf25, buf27, buf28, buf29, buf30, buf31, buf34, buf36, )
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54])
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:19:37.728000 2798527 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:19:37.741000 2798527 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/re/creexbreth5is6qwaz24r4lhj7gfwkqu6x732qapq5dxiww5ity2.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['29_forward']
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ww/cwwgtdtsfmelctsswowqngxc5go2ueat4bdbeaky4owan4yajef7.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_1 => add_1, mul_1, mul_2, sub
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_0 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_0', '''
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 4)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x3), xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp15, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/q2/cq2t2vuctsjiy4eiwibz25566s2wpm4h5ga6aqlvajdgqisrsfkm.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.cat]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => cat
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%add_1, %relu], 1), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_1 = async_compile.triton('triton_poi_fused_cat_1', '''
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 8) % 8)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 8)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 8*(x1) + 32*x2), tmp4 & xmask, other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x0 + 8*((-4) + x1) + 32*x2), tmp6 & xmask, other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr2 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-05
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.sqrt(tmp14)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1], 1, tl.int32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 / tmp15
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 1.0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 * tmp18
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp11 * tmp19
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr4 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 * tmp21
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr5 + ((-4) + x1), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp22 + tmp23
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 0, tl.int32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = triton_helpers.maximum(tmp25, tmp24)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.full(tmp26.shape, 0.0, tmp26.dtype)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.where(tmp6, tmp26, tmp27)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp4, tmp5, tmp28)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp29, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4v/c4vihls7qcrv5dnwj7djz2nvzr456fhuoc2q4pcfiryop5zegszn.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_7, x_8, x_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_7 => add_5, mul_7, mul_8, sub_2
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_8 => relu_1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_9 => mean
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_2, %unsqueeze_17), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_5,), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=2] = call_function[target=torch.ops.aten.mean.dim](args = (%relu_1, [-1, -2], True), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2', '''
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 8},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 8
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 8
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2 + 8*x3), xmask, other=0.0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1e-05
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK, RBLOCK])
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(xmask, tmp18, 0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.sum(tmp20, 1)[:, None]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = 8.0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 / tmp22
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r2 + 8*x3), tmp17, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp23, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hv/chvqzov6rrdilj4pa4ijcefqvp5lldzq4rag3ez2ioxdgg3elwy7.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_10 => convolution_3
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%mean, %primals_17, %primals_18, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_convolution_3 = async_compile.triton('triton_poi_fused_convolution_3', '''
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_convolution_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp2, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/rt/crtpspbgdqgifpjie7jjgzxkqan7posrlfxzflb4ucxmyukn4yoh.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_11, x_12], Original ATen: [aten.sigmoid, aten.mul]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_11 => sigmoid
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_12 => mul_9
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_3,), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=4] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid, %relu_1), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_sigmoid_4 = async_compile.triton('triton_poi_fused_mul_sigmoid_4', '''
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_sigmoid_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_sigmoid_4(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp3, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qj/cqj5frz5d2k6d5cljtwwz4wsydfjm6t2ga6vlotcp2ed5ikivpji.py
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_22, x_23, x_24], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_22 => sigmoid_1
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_23 => mul_16
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_24 => add_10
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convolution_6,), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sigmoid_1, %relu_3), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_10 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_16, %mul_9), kwargs = {})
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_sigmoid_5 = async_compile.triton('triton_poi_fused_add_mul_sigmoid_5', '''
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128}, 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_sigmoid_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_sigmoid_5(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 8
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr1 + (x2), xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.sigmoid(tmp0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp5, xmask)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54 = args
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 1, 3, 3), (9, 9, 3, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 8, 1, 1), (8, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_16, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_17, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_18, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_19, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_20, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_21, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_22, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_23, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_24, (4, 8, 1, 1), (8, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_25, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_26, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_27, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_28, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_29, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_30, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_31, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_32, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_33, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_34, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_35, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_36, (4, 8, 1, 1), (8, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_37, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_38, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_39, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_40, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_41, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_42, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_43, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_44, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_45, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_46, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_47, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_48, (4, 8, 1, 1), (8, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_49, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_50, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_51, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_52, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_53, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_54, (4, ), (1, ))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = extern_kernels.convolution(primals_2, primals_1, stride=(2, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf0, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_1], Original ATen: [aten._native_batch_norm_legit_no_training]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_0.run(buf0, primals_3, primals_4, primals_5, primals_6, buf1, 128, grid=grid(128), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_2], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.cat]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf1, buf2, primals_8, primals_9, primals_10, primals_11, buf3, 256, grid=grid(256), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = extern_kernels.convolution(buf3, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf4, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = reinterpret_tensor(buf6, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf6  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_7, x_8, x_9], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf7, buf4, primals_13, primals_14, primals_15, primals_16, buf5, 16, 8, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(buf7, primals_17, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = buf8; del buf8  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_10], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf9, primals_18, 16, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_18
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = buf5; del buf5  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_11, x_12], Original ATen: [aten.sigmoid, aten.mul]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_sigmoid_4.run(buf10, buf9, 128, grid=grid(128), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_13], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = extern_kernels.convolution(buf10, primals_19, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf11, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_16], Original ATen: [aten.cat]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf10, buf11, primals_20, primals_21, primals_22, primals_23, buf12, 256, grid=grid(256), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_17], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = extern_kernels.convolution(buf12, primals_24, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf13, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = reinterpret_tensor(buf15, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf15  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_18, x_19, x_20], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf16, buf13, primals_25, primals_26, primals_27, primals_28, buf14, 16, 8, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_21], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = extern_kernels.convolution(buf16, primals_29, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf17, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = buf17; del buf17  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_21], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf18, primals_30, 16, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_30
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = buf14; del buf14  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_22, x_23, x_24], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_5.run(buf19, buf18, buf10, 128, grid=grid(128), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_25], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = extern_kernels.convolution(buf19, primals_31, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf20, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_28], Original ATen: [aten.cat]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf19, buf20, primals_32, primals_33, primals_34, primals_35, buf21, 256, grid=grid(256), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_29], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_36, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = reinterpret_tensor(buf24, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf24  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_30, x_31, x_32], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf25, buf22, primals_37, primals_38, primals_39, primals_40, buf23, 16, 8, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_33], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = extern_kernels.convolution(buf25, primals_41, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf26, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = buf26; del buf26  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_33], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf27, primals_42, 16, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_42
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf28 = buf23; del buf23  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_34, x_35, x_36], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_5.run(buf28, buf27, buf19, 128, grid=grid(128), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_37], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf29 = extern_kernels.convolution(buf28, primals_43, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf29, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf30 = empty_strided_cuda((4, 8, 2, 4), (64, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_40], Original ATen: [aten.cat]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_1.run(buf28, buf29, primals_44, primals_45, primals_46, primals_47, buf30, 256, grid=grid(256), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_41], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf31 = extern_kernels.convolution(buf30, primals_48, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf31, (4, 4, 2, 4), (32, 8, 4, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf32 = empty_strided_cuda((4, 4, 2, 4), (32, 8, 4, 1), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf33 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 16, 16), torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf34 = reinterpret_tensor(buf33, (4, 4, 1, 1), (4, 1, 1, 1), 0); del buf33  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_42, x_43, x_44], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.mean]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_no_training_mean_relu_2.run(buf34, buf31, primals_49, primals_50, primals_51, primals_52, buf32, 16, 8, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_45], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf35 = extern_kernels.convolution(buf34, primals_53, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf35, (4, 4, 1, 1), (4, 1, 1, 1))
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf36 = buf35; del buf35  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_45], Original ATen: [aten.convolution]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_convolution_3.run(buf36, primals_54, 16, grid=grid(16), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_54
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf37 = buf32; del buf32  # reuse
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_46, x_47, x_48], Original ATen: [aten.sigmoid, aten.mul, aten.add]
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_sigmoid_5.run(buf37, buf36, buf28, 128, grid=grid(128), stream=stream0)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf37, primals_1, primals_2, primals_3, primals_4, primals_5, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, buf0, buf1, buf2, buf3, buf4, buf7, buf9, buf10, buf11, buf12, buf13, buf16, buf18, buf19, buf20, buf21, buf22, buf25, buf27, buf28, buf29, buf30, buf31, buf34, buf36, )
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_16 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_17 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_18 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_19 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_20 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_21 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_22 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_23 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_24 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_25 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_26 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_27 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_28 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_29 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_30 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_31 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_32 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_33 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_34 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_35 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_36 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_37 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_38 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_39 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_40 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_41 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_42 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_43 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_44 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_45 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_46 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_47 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_48 = rand_strided((4, 8, 1, 1), (8, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_49 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_50 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_51 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_52 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_53 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_54 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54])
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:08:31.324000 255060 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:08:31.337000 255060 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/d5/cd5q7eb7d24aj7tn6do3vyntvjrbwb6ueznfur5vppijssogpyjs.py
