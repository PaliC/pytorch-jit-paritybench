V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['18_inference']
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sf/csf4rskm2qgfbpys57akmhok4dcoznaksrdkj23vsyb4m6bdeif2.py
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [n, log, mul, k, log_1, mul_1, sub_1, sub_2, sub_3, add_2, log_2, mul_2, sub_4, x, log_3, mul_3, add_3, sub_5, sub, one_minus_x, log_4, mul_4, y], Original ATen: [aten.add, aten.log, aten.mul, aten.sub, aten.clamp, aten.rsub]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   k => add_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_1 => log_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_2 => log_2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_3 => log_3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_4 => log_4
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   n => add
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   one_minus_x => clamp_max, clamp_min
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => clamp_max_1, clamp_min_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y => add_4
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg1_1, 1e-07), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, %log), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg2_1, 1e-07), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_1,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %log_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %add_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %add_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_3, 1e-07), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_2 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %log_2), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %mul_2), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%arg0_1, 0.0001), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_3 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%clamp_max_1,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg2_1, %log_3), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_4, %mul_3), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (255, %arg2_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg0_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0001), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_4 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%clamp_max,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %log_4), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_4), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_log_mul_rsub_sub_0 = async_compile.triton('triton_poi_fused_add_clamp_log_mul_rsub_sub_0', '''
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_log_mul_rsub_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_log_mul_rsub_sub_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 256)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr2 + (x3), None)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-07
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.log(tmp8)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 - tmp10
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 - tmp8
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 + tmp2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.log(tmp13)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp14
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp11 - tmp15
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0001
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1.0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.minimum(tmp19, tmp20)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.log(tmp21)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 * tmp22
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp16 + tmp23
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 255, tl.int64)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp6
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp20 - tmp17
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp28, tmp18)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp29, tmp20)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl_math.log(tmp30)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp27 * tmp31
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp24 + tmp32
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp33, None)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gj/cgj7cqkvy23sxxosrhu77wgjsksyxohjjoeyciaqfld5eocqp3p4.py
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_1 = async_compile.triton('triton_red_fused_1', '''
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 128},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 16*r2 + 2048*x1), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = 1.0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = triton_helpers.maximum(_tmp4, tmp3)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(_tmp4, 1)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/uo/cuo4fy6vrtejc5mi3vdwz5vrcophl4toobcvvntjpaf7vg5nrqz7.py
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_2 = async_compile.triton('triton_per_fused_2', '''
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER_TINY,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_2(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*r2 + 32*x1), xmask, other=0.0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yk/cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => exp, sum_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__softmax_3 = async_compile.triton('triton_red_fused__softmax_3', '''
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 128},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__softmax_3(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp8 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r3 = rindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 16*r3 + 2048*x4), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = 1.0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tmp2 - tmp3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp4 * tmp1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl_math.exp(tmp5)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = _tmp8 + tmp7
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp8 = tl.where(rmask & xmask, tmp9, _tmp8)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp8, xmask)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pd/cpdjedp3a2xuu26cvm5itknkuxljgqjsf7mbshjiask7oimdxxuu.py
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => exp, sum_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_4 = async_compile.triton('triton_per_fused__softmax_4', '''
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER_TINY,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_4(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*r2 + 32*x1), xmask, other=0.0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nz/cnzvzrczioeczbrnqb74rwh5sgxu4abqiu6pe5xfbxcn7gfj5ylu.py
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div_1, exp
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_5 = async_compile.triton('triton_poi_fused__softmax_5', '''
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_5(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4096
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 16*x2), None, eviction_policy='evict_last')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0 + 16*x2), None, eviction_policy='evict_last')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp8, None)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 256, 4, 4), (4096, 16, 4, 1))
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, 1, 1, 1), (1, 1, 1, 1))
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, 256, 1, 1), (256, 1, 1, 1))
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [n, log, mul, k, log_1, mul_1, sub_1, sub_2, sub_3, add_2, log_2, mul_2, sub_4, x, log_3, mul_3, add_3, sub_5, sub, one_minus_x, log_4, mul_4, y], Original ATen: [aten.add, aten.log, aten.mul, aten.sub, aten.clamp, aten.rsub]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_log_mul_rsub_sub_0.run(arg1_1, arg2_1, arg0_1, buf0, 16384, grid=grid(16384), stream=stream0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 1, 4, 4, 2), (32, 128, 4, 1, 16), torch.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_1.run(buf0, buf1, 128, 128, grid=grid(128), stream=stream0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_2.run(buf1, buf2, 64, 2, grid=grid(64), stream=stream0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf1; del buf1  # reuse
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__softmax_3.run(buf0, buf2, buf3, 128, 128, grid=grid(128), stream=stream0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_4.run(buf3, buf4, 64, 2, grid=grid(64), stream=stream0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_5.run(buf5, buf2, buf4, 16384, grid=grid(16384), stream=stream0)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, )
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 256, 4, 4), (4096, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((1, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.int64)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:35:48.658000 3163268 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:35:48.670000 3163268 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/km/ckm476mfoj2ehmpjjnuxbjw2fkfqbqoe47djxrjrym4brujssezb.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['18_inference']
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sf/csf4rskm2qgfbpys57akmhok4dcoznaksrdkj23vsyb4m6bdeif2.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [n, log, mul, k, log_1, mul_1, sub_1, sub_2, sub_3, add_2, log_2, mul_2, sub_4, x, log_3, mul_3, add_3, sub_5, sub, one_minus_x, log_4, mul_4, y], Original ATen: [aten.add, aten.log, aten.mul, aten.sub, aten.clamp, aten.rsub]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   k => add_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_1 => log_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_2 => log_2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_3 => log_3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log_4 => log_4
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_3 => mul_3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_4 => mul_4
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   n => add
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   one_minus_x => clamp_max, clamp_min
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_2 => sub_2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x => clamp_max_1, clamp_min_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   y => add_4
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg1_1, 1e-07), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add, %log), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%arg2_1, 1e-07), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_1 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_1,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %log_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %add_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %add_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_3, 1e-07), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_2 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%add_2,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %log_2), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%sub_1, %mul_2), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%arg0_1, 0.0001), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_3 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%clamp_max_1,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%arg2_1, %log_3), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sub_4, %mul_3), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (255, %arg2_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %arg0_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0001), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log_4 : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%clamp_max,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %log_4), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_4), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_log_mul_rsub_sub_0 = async_compile.triton('triton_poi_fused_add_clamp_log_mul_rsub_sub_0', '''
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_log_mul_rsub_sub_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_log_mul_rsub_sub_0(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 16) % 256)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (0))
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr1 + (x1), None, eviction_policy='evict_last')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr2 + (x3), None)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 1e-07
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 + tmp2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl_math.log(tmp3)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 * tmp4
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 + tmp2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl_math.log(tmp8)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 - tmp10
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp3 - tmp8
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 + tmp2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.log(tmp13)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 * tmp14
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp11 - tmp15
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0001
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp17, tmp18)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = 1.0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.minimum(tmp19, tmp20)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl_math.log(tmp21)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp7 * tmp22
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp16 + tmp23
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.full([1], 255, tl.int64)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp6
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26.to(tl.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp20 - tmp17
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = triton_helpers.maximum(tmp28, tmp18)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = triton_helpers.minimum(tmp29, tmp20)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl_math.log(tmp30)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp27 * tmp31
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp24 + tmp32
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp33, None)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/gj/cgj7cqkvy23sxxosrhu77wgjsksyxohjjoeyciaqfld5eocqp3p4.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_1 = async_compile.triton('triton_red_fused_1', '''
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 128},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_1(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp4 = tl.full([XBLOCK, RBLOCK], float("-inf"), tl.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r2 = rindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 16*r2 + 2048*x1), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = 1.0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = tl.broadcast_to(tmp2, [XBLOCK, RBLOCK])
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = triton_helpers.maximum(_tmp4, tmp3)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp4 = tl.where(rmask & xmask, tmp5, _tmp4)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(_tmp4, 1)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/uo/cuo4fy6vrtejc5mi3vdwz5vrcophl4toobcvvntjpaf7vg5nrqz7.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax_default : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%mul_tensor, [1], True), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_2 = async_compile.triton('triton_per_fused_2', '''
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER_TINY,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_2', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_2(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*r2 + 32*x1), xmask, other=0.0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, float("-inf"))
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.max2(tmp3, 1)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yk/cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => exp, sum_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused__softmax_3 = async_compile.triton('triton_red_fused__softmax_3', '''
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 128, 'r': 128},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused__softmax_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused__softmax_3(in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 128
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 128
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex // 16
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 32
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (x0 + 16*x2), xmask, eviction_policy='evict_last')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp8 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r3 = rindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (x0 + 16*r3 + 2048*x4), rmask & xmask, eviction_policy='evict_first', other=0.0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = 1.0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp2 = tmp0 * tmp1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tmp2 - tmp3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tmp4 * tmp1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tl_math.exp(tmp5)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tl.broadcast_to(tmp6, [XBLOCK, RBLOCK])
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp9 = _tmp8 + tmp7
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp8 = tl.where(rmask & xmask, tmp9, _tmp8)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.sum(_tmp8, 1)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp8, xmask)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pd/cpdjedp3a2xuu26cvm5itknkuxljgqjsf7mbshjiask7oimdxxuu.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => exp, sum_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [1], True), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__softmax_4 = async_compile.triton('triton_per_fused__softmax_4', '''
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64, 'r': 2},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.OUTER_TINY,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__softmax_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__softmax_4(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 16
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 16*r2 + 32*x1), xmask, other=0.0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.where(xmask, tmp1, 0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.sum(tmp3, 1)[:, None]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp4, xmask)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nz/cnzvzrczioeczbrnqb74rwh5sgxu4abqiu6pe5xfbxcn7gfj5ylu.py
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   softmax => div_1, exp
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_tensor : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_4, 1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_tensor : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%mul_tensor, %amax_default), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_tensor : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%sub_tensor, 1.0), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%div_tensor,), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_5 = async_compile.triton('triton_poi_fused__softmax_5', '''
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16384}, 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_5(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16384
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 16)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 4096
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), None)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x0 + 16*x2), None, eviction_policy='evict_last')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr1 + (x0 + 16*x2), None, eviction_policy='evict_last')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl_math.exp(tmp5)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 / tmp7
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp8, None)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1 = args
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 256, 4, 4), (4096, 16, 4, 1))
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (1, 1, 1, 1), (1, 1, 1, 1))
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (1, 256, 1, 1), (256, 1, 1, 1))
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 256, 4, 4), (4096, 16, 4, 1), torch.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [n, log, mul, k, log_1, mul_1, sub_1, sub_2, sub_3, add_2, log_2, mul_2, sub_4, x, log_3, mul_3, add_3, sub_5, sub, one_minus_x, log_4, mul_4, y], Original ATen: [aten.add, aten.log, aten.mul, aten.sub, aten.clamp, aten.rsub]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_log_mul_rsub_sub_0.run(arg1_1, arg2_1, arg0_1, buf0, 16384, grid=grid(16384), stream=stream0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 1, 4, 4, 2), (32, 128, 4, 1, 16), torch.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_1.run(buf0, buf1, 128, 128, grid=grid(128), stream=stream0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [], Original ATen: []
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_2.run(buf1, buf2, 64, 2, grid=grid(64), stream=stream0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf1; del buf1  # reuse
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused__softmax_3.run(buf0, buf2, buf3, 128, 128, grid=grid(128), stream=stream0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 1, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__softmax_4.run(buf3, buf4, 64, 2, grid=grid(64), stream=stream0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf0; del buf0  # reuse
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [softmax], Original ATen: [aten._softmax]
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_5.run(buf5, buf2, buf4, 16384, grid=grid(16384), stream=stream0)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf4
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf5, )
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 256, 4, 4), (4096, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((1, 1, 1, 1), (1, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((1, 256, 1, 1), (256, 1, 1, 1), device='cuda:0', dtype=torch.int64)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1])
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:24:32.395000 624249 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:24:32.403000 624249 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/yr/cyrep2aiaxsceulzoc52ghxclqmfkjlgxeeyiypcxnzkka4mgl7z.py
