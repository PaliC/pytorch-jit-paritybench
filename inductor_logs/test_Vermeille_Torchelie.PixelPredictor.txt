V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['17_forward']
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pc/cpcgbbrbte4bzz7vtscc22nsnqhty52r53vo6qbg2xvx6x3mcghg.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.clone]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => clone_1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x3 + 16*x2 + 64*y1), xmask & ymask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5 + 16*y4), tmp0, xmask & ymask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/42/c42v6enidqxhafxseipfkezemrx3hoxpcvoebbyfbp4omd66dmuw.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_1, %primals_4), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused_add_relu_threshold_backward_1', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_relu_threshold_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_relu_threshold_backward_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/co/ccoi2v7lkwegkzqattgfjjsvkqnwxibuwhpfifllza6big2ofcuc.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%permute, %slice_2], -1), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 80
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 5) % 16)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 5) % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 20) % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x0) + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 5, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x4 + 64*x3), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 5*x2 + 20*x1 + 80*x3), tmp10, xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/5j/c5jeibklwwvf5nunzlkqhy4jyukpiagrlztwz7usuqo353y5n4a2.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.relu]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => relu_1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%view_6,), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_3 = async_compile.triton('triton_poi_fused_relu_3', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b7/cb7yo7zsahztg2xpoefghjdmxqhokdmxxrbrzluukusepagkteoy.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_2 => cat_1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%permute, %slice_3], -1), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 384
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 96
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 6) % 16)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 24) % 4)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x0) + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 6, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x4 + 16*((-4) + x0) + 64*x3), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 6*x2 + 24*x1 + 96*x3), tmp10, xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qd/cqd7sgn5izupf4ntgov5xnwa4ttvxipccy6yqvpqjukhz6hw5f3y.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.relu]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => relu_2
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%view_15,), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_5 = async_compile.triton('triton_poi_fused_relu_5', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_5(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 384
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/dw/cdw3s4hxv6ffhlxrxu7zldbeo5c5xtzk3x2xeveqarqzcxiy6ssa.py
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.stack]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => cat_2
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_4, %view_13, %view_22], 2), kwargs = {})
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_6 = async_compile.triton('triton_poi_fused_stack_6', '''
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_6(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49152
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 12)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 3072
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 256*(x1) + 1024*x2), tmp4, other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 256*((-4) + x1) + 1024*x2), tmp9, other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 >= tmp7
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 12, tl.int64)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 < tmp12
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x0 + 256*((-8) + x1) + 1024*x2), tmp11, other=0.0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp9, tmp10, tmp14)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp4, tmp5, tmp15)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp16, None)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14 = args
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, 4), (4, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, ), (1, ))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (5, 5), (5, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (5, ), (1, ))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, 5), (5, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (6, 6), (6, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (6, ), (1, ))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, 6), (6, 1))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (256, ), (1, ))
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.clone]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.mm]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 4), (1, 4), 0), out=buf1)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf1, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf1  # reuse
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_relu_threshold_backward_1.run(buf2, primals_4, buf13, 256, grid=grid(256), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, 256), (256, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, reinterpret_tensor(buf2, (64, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 256), (1, 4), 0), alpha=1, beta=1, out=buf3)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 5), (80, 20, 5, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, primals_2, buf4, 320, grid=grid(320), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 5), (5, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (64, 5), (5, 1), 0), reinterpret_tensor(primals_7, (5, 5), (1, 5), 0), out=buf5)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf5, (4, 4, 4, 5), (80, 20, 5, 1), 0); del buf5  # reuse
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.relu]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_3.run(buf6, primals_8, 320, grid=grid(320), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 256), (256, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.addmm]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_10, reinterpret_tensor(buf6, (64, 5), (5, 1), 0), reinterpret_tensor(primals_9, (5, 256), (1, 5), 0), alpha=1, beta=1, out=buf7)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 6), (96, 24, 6, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(primals_1, primals_2, buf8, 384, grid=grid(384), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((64, 6), (6, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.addmm]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf8, (64, 6), (6, 1), 0), reinterpret_tensor(primals_11, (6, 6), (1, 6), 0), out=buf9)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf9, (4, 4, 4, 6), (96, 24, 6, 1), 0); del buf9  # reuse
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.relu]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_5.run(buf10, primals_12, 384, grid=grid(384), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((64, 256), (256, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.addmm]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_14, reinterpret_tensor(buf10, (64, 6), (6, 1), 0), reinterpret_tensor(primals_13, (6, 256), (1, 6), 0), alpha=1, beta=1, out=buf11)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 12, 256), (12288, 3072, 256, 1), torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.stack]
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_6.run(buf3, buf7, buf11, buf12, 49152, grid=grid(49152), stream=stream0)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 256, 3, 4, 4), (12288, 1, 1024, 256, 3072), 0), reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(buf2, (64, 4), (4, 1), 0), reinterpret_tensor(buf4, (64, 5), (5, 1), 0), reinterpret_tensor(buf6, (64, 5), (5, 1), 0), reinterpret_tensor(buf8, (64, 6), (6, 1), 0), reinterpret_tensor(buf10, (64, 6), (6, 1), 0), primals_13, primals_9, primals_5, buf13, )
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((5, 5), (5, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((5, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, 5), (5, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((6, 6), (6, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((6, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, 6), (6, 1), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14])
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:20:21.131000 3789799 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:20:21.141000 3789799 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/mh/cmh6aqjitwloxtwspyrjnzzlwrlwpmkla7tbgxdvgmvjdwohnbgv.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['17_forward']
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pc/cpcgbbrbte4bzz7vtscc22nsnqhty52r53vo6qbg2xvx6x3mcghg.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.clone]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => clone_1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_0 = async_compile.triton('triton_poi_fused_clone_0', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.SQUARE,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 4
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x3 + 16*x2 + 64*y1), xmask & ymask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5 + 16*y4), tmp0, xmask & ymask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/42/c42v6enidqxhafxseipfkezemrx3hoxpcvoebbyfbp4omd66dmuw.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_1 => add
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => relu
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_1, %primals_4), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add,), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le_2 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_relu_threshold_backward_1 = async_compile.triton('triton_poi_fused_add_relu_threshold_backward_1', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_relu_threshold_backward_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_relu_threshold_backward_1(in_out_ptr0, in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 0.0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 <= tmp5
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp6, xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/co/ccoi2v7lkwegkzqattgfjjsvkqnwxibuwhpfifllza6big2ofcuc.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_1 => cat
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%permute, %slice_2], -1), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_2 = async_compile.triton('triton_poi_fused_cat_2', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 80
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 5) % 16)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 5) % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 20) % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x0) + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 5, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x4 + 64*x3), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 5*x2 + 20*x1 + 80*x3), tmp10, xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/5j/c5jeibklwwvf5nunzlkqhy4jyukpiagrlztwz7usuqo353y5n4a2.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.relu]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_5 => relu_1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_1 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%view_6,), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_3 = async_compile.triton('triton_poi_fused_relu_3', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_3(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 320
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 5)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b7/cb7yo7zsahztg2xpoefghjdmxqhokdmxxrbrzluukusepagkteoy.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   cat_2 => cat_1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_1 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%permute, %slice_3], -1), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_4 = async_compile.triton('triton_poi_fused_cat_4', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_4(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 384
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 96
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 6) % 16)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 6) % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 24) % 4)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x0) + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 6, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr1 + (x4 + 16*((-4) + x0) + 64*x3), tmp6 & xmask, eviction_policy='evict_last', other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(tmp4, tmp5, tmp9)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0 + 6*x2 + 24*x1 + 96*x3), tmp10, xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qd/cqd7sgn5izupf4ntgov5xnwa4ttvxipccy6yqvpqjukhz6hw5f3y.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.relu]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_8 => relu_2
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu_2 : [num_users=1] = call_function[target=torch.ops.aten.relu.default](args = (%view_15,), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_relu_5 = async_compile.triton('triton_poi_fused_relu_5', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 512}, 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_relu_5(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 384
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 6)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 0, tl.int32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = triton_helpers.maximum(tmp3, tmp2)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp4, xmask)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/dw/cdw3s4hxv6ffhlxrxu7zldbeo5c5xtzk3x2xeveqarqzcxiy6ssa.py
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [out], Original ATen: [aten.stack]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   out => cat_2
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat_2 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_4, %view_13, %view_22], 2), kwargs = {})
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_stack_6 = async_compile.triton('triton_poi_fused_stack_6', '''
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 65536}, 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_stack_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_stack_6(in_ptr0, in_ptr1, in_ptr2, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 49152
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 256) % 12)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 256)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 3072
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x0 + 256*(x1) + 1024*x2), tmp4, other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x0 + 256*((-4) + x1) + 1024*x2), tmp9, other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp0 >= tmp7
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([1], 12, tl.int64)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp0 < tmp12
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x0 + 256*((-8) + x1) + 1024*x2), tmp11, other=0.0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp9, tmp10, tmp14)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp4, tmp5, tmp15)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp16, None)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14 = args
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, ), (1, ))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (256, 4), (4, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (256, ), (1, ))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (5, 5), (5, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (5, ), (1, ))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (256, 5), (5, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (256, ), (1, ))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (6, 6), (6, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (6, ), (1, ))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (256, 6), (6, 1))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (256, ), (1, ))
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.clone]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_0.run(primals_1, buf0, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.mm]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(primals_3, (4, 4), (1, 4), 0), out=buf1)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = reinterpret_tensor(buf1, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf1  # reuse
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.bool)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1, input_2], Original ATen: [aten.add, aten.relu, aten.threshold_backward]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_relu_threshold_backward_1.run(buf2, primals_4, buf13, 256, grid=grid(256), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_4
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((64, 256), (256, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_3], Original ATen: [aten.addmm]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_6, reinterpret_tensor(buf2, (64, 4), (4, 1), 0), reinterpret_tensor(primals_5, (4, 256), (1, 4), 0), alpha=1, beta=1, out=buf3)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 5), (80, 20, 5, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_2.run(primals_1, primals_2, buf4, 320, grid=grid(320), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((64, 5), (5, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_4], Original ATen: [aten.addmm]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf4, (64, 5), (5, 1), 0), reinterpret_tensor(primals_7, (5, 5), (1, 5), 0), out=buf5)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf5, (4, 4, 4, 5), (80, 20, 5, 1), 0); del buf5  # reuse
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_5], Original ATen: [aten.relu]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_3.run(buf6, primals_8, 320, grid=grid(320), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((64, 256), (256, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.addmm]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_10, reinterpret_tensor(buf6, (64, 5), (5, 1), 0), reinterpret_tensor(primals_9, (5, 256), (1, 5), 0), alpha=1, beta=1, out=buf7)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 4, 4, 6), (96, 24, 6, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [cat_2], Original ATen: [aten.cat]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_4.run(primals_1, primals_2, buf8, 384, grid=grid(384), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((64, 6), (6, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_7], Original ATen: [aten.addmm]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(buf8, (64, 6), (6, 1), 0), reinterpret_tensor(primals_11, (6, 6), (1, 6), 0), out=buf9)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf9, (4, 4, 4, 6), (96, 24, 6, 1), 0); del buf9  # reuse
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.relu]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_relu_5.run(buf10, primals_12, 384, grid=grid(384), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((64, 256), (256, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.addmm]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_14, reinterpret_tensor(buf10, (64, 6), (6, 1), 0), reinterpret_tensor(primals_13, (6, 256), (1, 6), 0), alpha=1, beta=1, out=buf11)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 4, 12, 256), (12288, 3072, 256, 1), torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out], Original ATen: [aten.stack]
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_stack_6.run(buf3, buf7, buf11, buf12, 49152, grid=grid(49152), stream=stream0)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf11
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf3
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 256, 3, 4, 4), (12288, 1, 1024, 256, 3072), 0), reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(buf2, (64, 4), (4, 1), 0), reinterpret_tensor(buf4, (64, 5), (5, 1), 0), reinterpret_tensor(buf6, (64, 5), (5, 1), 0), reinterpret_tensor(buf8, (64, 6), (6, 1), 0), reinterpret_tensor(buf10, (64, 6), (6, 1), 0), primals_13, primals_9, primals_5, buf13, )
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((256, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((5, 5), (5, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((5, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((256, 5), (5, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((6, 6), (6, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((6, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((256, 6), (6, 1), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((256, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14])
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:09:20.017000 1107798 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:09:20.027000 1107798 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/b2/cb2x4gebhzh5pt26gbe23e4eqfmi3q2bdpd2ltc5qjvr2bk72kv4.py
