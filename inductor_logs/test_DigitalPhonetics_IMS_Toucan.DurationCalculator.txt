V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_inference']
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [argmax, eq, sum_1, argmax_1, eq_1, sum_2, argmax_2, eq_2, sum_3, argmax_3, eq_3, sum_4, durations], Original ATen: [aten.argmax, aten.eq, aten.sum, aten.stack]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax => argmax
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax_1 => argmax_1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax_2 => argmax_2
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax_3 => argmax_3
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   durations => cat
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_1 => eq_1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_2 => eq_2
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_3 => eq_3
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax, 0), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq,), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax_1 : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax_1, 1), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_1,), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax_2 : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_2 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax_2, 2), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_2,), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax_3 : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_3 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax_3, 3), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_3,), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3],), kwargs = {})
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_argmax_eq_stack_sum_0 = async_compile.triton('triton_per_fused_argmax_eq_stack_sum_0', '''
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr8': '*i64', 'out_ptr9': '*i64', 'out_ptr10': '*i64', 'out_ptr11': '*i64', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_argmax_eq_stack_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_argmax_eq_stack_sum_0(in_ptr0, out_ptr8, out_ptr9, out_ptr10, out_ptr11, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1, 1], 0, tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1, 1], 1, tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1, 1], 2, tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1, 1], 3, tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 == tmp10
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47.to(tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.broadcast_to(tmp48, [XBLOCK, RBLOCK])
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.sum(tmp49, 1)[:, None]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp46 == tmp11
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52.to(tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.broadcast_to(tmp53, [XBLOCK, RBLOCK])
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.sum(tmp54, 1)[:, None]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp46 == tmp26
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57.to(tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.broadcast_to(tmp58, [XBLOCK, RBLOCK])
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.sum(tmp59, 1)[:, None]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp46 == tmp41
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp62.to(tl.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.broadcast_to(tmp63, [XBLOCK, RBLOCK])
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.sum(tmp64, 1)[:, None]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr8 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp66, None)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr9 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp61, None)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr10 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp56, None)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr11 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp51, None)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf12, (1, ), (1, ), 3)  # alias
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf12, (1, ), (1, ), 2)  # alias
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf12, (1, ), (1, ), 1)  # alias
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf12, (1, ), (1, ), 0)  # alias
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [argmax, eq, sum_1, argmax_1, eq_1, sum_2, argmax_2, eq_2, sum_3, argmax_3, eq_3, sum_4, durations], Original ATen: [aten.argmax, aten.eq, aten.sum, aten.stack]
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_argmax_eq_stack_sum_0.run(arg0_1, buf11, buf10, buf9, buf8, 1, 64, grid=grid(1), stream=stream0)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:51:24.921000 141845 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:51:24.924000 141845 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/hb/chbjgczonmrgtnoo2za5ixxlzk7tkd4hfcptlfp6lfhzevtqpf73.py
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_inference']
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ru/cruukk6v2it7zysmze2n627e4tq44akfzegyzyqj4vwgts5q364w.py
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [argmax, eq, sum_1, argmax_1, eq_1, sum_2, argmax_2, eq_2, sum_3, argmax_3, eq_3, sum_4, durations], Original ATen: [aten.argmax, aten.eq, aten.sum, aten.stack]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax => argmax
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax_1 => argmax_1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax_2 => argmax_2
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   argmax_3 => argmax_3
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   durations => cat
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq => eq
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_1 => eq_1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_2 => eq_2
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   eq_3 => eq_3
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax, 0), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq,), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax_1 : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_1 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax_1, 1), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_1,), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax_2 : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_2 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax_2, 2), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_2,), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmax_3 : [num_users=1] = call_function[target=torch.ops.aten.argmax.default](args = (%arg0_1, -1), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_3 : [num_users=1] = call_function[target=torch.ops.aten.eq.Scalar](args = (%argmax_3, 3), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%eq_3,), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3],), kwargs = {})
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_argmax_eq_stack_sum_0 = async_compile.triton('triton_per_fused_argmax_eq_stack_sum_0', '''
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 64},
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr8': '*i64', 'out_ptr9': '*i64', 'out_ptr10': '*i64', 'out_ptr11': '*i64', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_argmax_eq_stack_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_argmax_eq_stack_sum_0(in_ptr0, out_ptr8, out_ptr9, out_ptr10, out_ptr11, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = rindex
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*r0), None, eviction_policy='evict_last')
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*r0), None, eviction_policy='evict_last')
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*r0), None, eviction_policy='evict_last')
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*r0), None, eviction_policy='evict_last')
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 > tmp1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1, 1], 0, tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1, 1], 1, tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 > tmp17
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1, 1], 2, tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 > tmp32
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1, 1], 3, tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 == tmp10
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47.to(tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.broadcast_to(tmp48, [XBLOCK, RBLOCK])
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.sum(tmp49, 1)[:, None]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp46 == tmp11
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp52.to(tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.broadcast_to(tmp53, [XBLOCK, RBLOCK])
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.sum(tmp54, 1)[:, None]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp46 == tmp26
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp57.to(tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tl.broadcast_to(tmp58, [XBLOCK, RBLOCK])
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tl.sum(tmp59, 1)[:, None]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp46 == tmp41
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp62.to(tl.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.broadcast_to(tmp63, [XBLOCK, RBLOCK])
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.sum(tmp64, 1)[:, None]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr8 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp66, None)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr9 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp61, None)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr10 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp56, None)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr11 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp51, None)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, = args
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = reinterpret_tensor(buf12, (1, ), (1, ), 3)  # alias
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf12, (1, ), (1, ), 2)  # alias
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = reinterpret_tensor(buf12, (1, ), (1, ), 1)  # alias
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf12, (1, ), (1, ), 0)  # alias
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [argmax, eq, sum_1, argmax_1, eq_1, sum_2, argmax_2, eq_2, sum_3, argmax_3, eq_3, sum_4, durations], Original ATen: [aten.argmax, aten.eq, aten.sum, aten.stack]
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_argmax_eq_stack_sum_0.run(arg0_1, buf11, buf10, buf9, buf8, 1, 64, grid=grid(1), stream=stream0)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf12, )
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:41:48.708000 2757587 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:41:48.711000 2757587 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/ly/clywvdsuxzwsek4aljqi4br75fdzvxnpwwn3bzumv7plp7yn7kvv.py
