V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/wt/cwtvvzonv7c45icwoba2jg7hy5cabkvlm3qdyxgrg7iygtx5o63d.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [qk_x], Original ATen: [aten.constant_pad_nd]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   qk_x => constant_pad_nd
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%permute, [3, 0], 0.0), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-3) + x2
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + ((-12) + y0 + 4*x2 + 16*y1), tmp2 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 7*y3), tmp3, xmask & ymask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/pb/cpbveklhg676j4ejas2ipya4asccye22isre3s3lhvkvc2ejqpju.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att => clone
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 4) % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 16
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x3 + 16*y1 + 128*y2), xmask & ymask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3 + 4*y1), xmask & ymask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 4*y4), tmp2, xmask & ymask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/r2/cr2nvmz6rkzt3cnydg5ulyzsgcpq3sjappqakyysp25xnainbfct.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att => clone_1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_2 = async_compile.triton('triton_poi_fused_clone_2', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 64)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (64 + x3 + 128*x2), xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (16 + x1), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp2, xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ex/cex73e5iisoxyttuz25otguknp5pandqhaotiq43q6ioyemindfv.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_1 => div
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_2 => add
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_3 => amax, exp, sub_1, sum_1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_7, 2.0), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %primals_6), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %primals_6), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1000000000.0), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add, [-1], True), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_div_mul_rsub_3 = async_compile.triton('triton_poi_fused__softmax_add_div_mul_rsub_3', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_div_mul_rsub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_div_mul_rsub_3(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp3
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = -1000000000.0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 - tmp12
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp9, tmp16)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp5 - tmp20
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp17, tmp24)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp5 - tmp28
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 + tmp31
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp25, tmp32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp9 - tmp33
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp16 - tmp33
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl_math.exp(tmp36)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp35 + tmp37
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp24 - tmp33
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl_math.exp(tmp39)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp38 + tmp40
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp32 - tmp33
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl_math.exp(tmp42)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 + tmp43
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp33, xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp44, xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/g3/cg3cvgmohvfjzqxyyz4sd4wuzpu4czepynulxypgfjb65rafya5m.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_1 => div
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_2 => add
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_3 => div_1, exp, sub_1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_7, 2.0), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %primals_6), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %primals_6), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1000000000.0), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_div_mul_rsub_4 = async_compile.triton('triton_poi_fused__softmax_add_div_mul_rsub_4', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_div_mul_rsub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_div_mul_rsub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x4), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr2 + (x5), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp3
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = -1000000000.0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.exp(tmp11)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp14, xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/sr/csr4gdcxw4c252tnwr2g3kemzrxyknp7w7ugzxervzheeefix7f7.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn => clone_3
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_3,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp2, xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4t/c4t4kevu4476fuvcmfsmvsfqlxvjb77otza7y2tl4gbmdsvw4uls.py
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => clone_4
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_5,), kwargs = {memory_format: torch.contiguous_format})
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp0, xmask)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 16), (16, 1))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, 4, 4), (16, 4, 1))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 1, 4, 4), (16, 16, 4, 1))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, 4), (4, 1))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 16), (16, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.addmm]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), primals_3, out=buf0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 7), (28, 7, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [qk_x], Original ATen: [aten.constant_pad_nd]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_1, buf1, 16, 7, grid=grid(16, 7), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_4, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 32, 4), (128, 4, 1))
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_1.run(buf2, primals_5, buf3, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_2.run(buf2, primals_5, buf4, 256, grid=grid(256), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.bmm]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (16, 4, 4), (16, 4, 1), 0), out=buf5)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_div_mul_rsub_3.run(buf5, primals_6, buf6, buf7, 64, grid=grid(64), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf5, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_div_mul_rsub_4.run(buf8, primals_6, buf6, buf7, 256, grid=grid(256), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf0, primals_2, buf9, 256, grid=grid(256), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf0, (16, 4, 4), (16, 4, 1), 0); del buf0  # reuse
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.bmm]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf8, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0), out=buf10)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.clone]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_6.run(buf10, buf11, 256, grid=grid(256), stream=stream0)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf7, (16, 4), (4, 1), 0); del buf7  # reuse
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_7, reinterpret_tensor(buf11, (16, 16), (16, 1), 0), primals_8, alpha=1, beta=1, out=buf12)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4), (16, 4, 1), 0), primals_4, primals_6, buf1, buf8, reinterpret_tensor(primals_8, (4, 16), (1, 4), 0), reinterpret_tensor(buf11, (16, 16), (1, 16), 0), reinterpret_tensor(buf9, (16, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf3, (16, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf4, (16, 4, 4), (16, 1, 4), 0), reinterpret_tensor(primals_1, (4, 16), (1, 4), 0), )
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 1, 4, 4), (16, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:24:53.635000 3415184 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:24:53.642000 3415184 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ni/cniimde7nnyymdyswxfvpkwlxp3rhjzzbu4wxj53ycsywfzmkptg.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['2_forward']
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/wt/cwtvvzonv7c45icwoba2jg7hy5cabkvlm3qdyxgrg7iygtx5o63d.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [qk_x], Original ATen: [aten.constant_pad_nd]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   qk_x => constant_pad_nd
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %constant_pad_nd : [num_users=2] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%permute, [3, 0], 0.0), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_constant_pad_nd_0 = async_compile.triton('triton_poi_fused_constant_pad_nd_0', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 8}, tile_hint=TileHint.SQUARE,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_constant_pad_nd_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_constant_pad_nd_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-3) + x2
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + ((-12) + y0 + 4*x2 + 16*y1), tmp2 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 7*y3), tmp3, xmask & ymask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/pb/cpbveklhg676j4ejas2ipya4asccye22isre3s3lhvkvc2ejqpju.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att => clone
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_1 = async_compile.triton('triton_poi_fused_clone_1', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.DEFAULT,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_1(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = ((yindex // 4) % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y2 = yindex // 16
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 4*x3 + 16*y1 + 128*y2), xmask & ymask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x3 + 4*y1), xmask & ymask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3 + 4*y4), tmp2, xmask & ymask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/r2/cr2nvmz6rkzt3cnydg5ulyzsgcpq3sjappqakyysp25xnainbfct.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att => clone_1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_1,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_2 = async_compile.triton('triton_poi_fused_clone_2', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_2(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 64
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = (xindex % 64)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 16)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (64 + x3 + 128*x2), xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (16 + x1), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp2, xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ex/cex73e5iisoxyttuz25otguknp5pandqhaotiq43q6ioyemindfv.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_1 => div
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_2 => add
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_3 => amax, exp, sub_1, sum_1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_7, 2.0), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %primals_6), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %primals_6), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1000000000.0), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %amax : [num_users=1] = call_function[target=torch.ops.aten.amax.default](args = (%add, [-1], True), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%exp, [-1], True), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_div_mul_rsub_3 = async_compile.triton('triton_poi_fused__softmax_add_div_mul_rsub_3', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_div_mul_rsub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_div_mul_rsub_3(in_ptr0, in_ptr1, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x2), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr0 + (1 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr0 + (2 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr0 + (3 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp3
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = -1000000000.0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 * tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp5 - tmp12
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 * tmp7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp13 + tmp15
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp9, tmp16)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 * tmp20
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp5 - tmp20
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 * tmp7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp21 + tmp23
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp17, tmp24)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 * tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 * tmp28
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp5 - tmp28
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp29 + tmp31
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = triton_helpers.maximum(tmp25, tmp32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp9 - tmp33
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.exp(tmp34)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp16 - tmp33
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl_math.exp(tmp36)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp35 + tmp37
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp24 - tmp33
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl_math.exp(tmp39)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp38 + tmp40
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp32 - tmp33
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tl_math.exp(tmp42)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 + tmp43
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp33, xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp44, xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/g3/cg3cvgmohvfjzqxyyz4sd4wuzpu4czepynulxypgfjb65rafya5m.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_1 => div
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_2 => add
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pre_att_3 => div_1, exp, sub_1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%view_7, 2.0), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div, %primals_6), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (1, %primals_6), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, -1000000000.0), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul, %mul_1), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %amax), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%sub_1,), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%exp, %sum_1), kwargs = {})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__softmax_add_div_mul_rsub_4 = async_compile.triton('triton_poi_fused__softmax_add_div_mul_rsub_4', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__softmax_add_div_mul_rsub_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__softmax_add_div_mul_rsub_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = (xindex % 16)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex // 4
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (x3), xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (x4), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x5), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr2 + (x5), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = 1.0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 - tmp3
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = -1000000000.0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 * tmp7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp4 + tmp8
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 - tmp10
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.exp(tmp11)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 / tmp13
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x3), tmp14, xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/sr/csr4gdcxw4c252tnwr2g3kemzrxyknp7w7ugzxervzheeefix7f7.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   attn => clone_3
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%expand_3,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_5 = async_compile.triton('triton_poi_fused_clone_5', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_5(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x0 + 4*x2), xmask, eviction_policy='evict_last')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp2, xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/4t/c4t4kevu4476fuvcmfsmvsfqlxvjb77otza7y2tl4gbmdsvw4uls.py
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   x_5 => clone_4
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone_4 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_5,), kwargs = {memory_format: torch.contiguous_format})
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_clone_6 = async_compile.triton('triton_poi_fused_clone_6', '''
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clone_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_clone_6(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0 + 4*x2 + 16*x1 + 64*x3), xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x4), tmp0, xmask)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8 = args
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4), (16, 4, 1))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (16, ), (1, ))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 16), (16, 1))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (32, 4, 4), (16, 4, 1))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (32, ), (1, ))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1, 1, 4, 4), (16, 16, 4, 1))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (4, ), (1, ))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (16, 4), (4, 1))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((16, 16), (16, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x], Original ATen: [aten.addmm]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(reinterpret_tensor(primals_1, (16, 4), (4, 1), 0), primals_3, out=buf0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 7), (28, 7, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [qk_x], Original ATen: [aten.constant_pad_nd]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_constant_pad_nd_0.run(primals_1, buf1, 16, 7, grid=grid(16, 7), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [conv1d], Original ATen: [aten.convolution]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(buf1, primals_4, stride=(1,), padding=(0,), dilation=(1,), transposed=False, output_padding=(0,), groups=1, bias=None)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (4, 32, 4), (128, 4, 1))
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_1.run(buf2, primals_5, buf3, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_2.run(buf2, primals_5, buf4, 256, grid=grid(256), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((16, 4, 4), (16, 4, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att], Original ATen: [aten.bmm]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf3, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf4, (16, 4, 4), (16, 4, 1), 0), out=buf5)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 1), (16, 4, 1, 64), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_div_mul_rsub_3.run(buf5, primals_6, buf6, buf7, 64, grid=grid(64), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = reinterpret_tensor(buf5, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf5  # reuse
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pre_att_1, mul, sub, mul_1, pre_att_2, pre_att_3], Original ATen: [aten.div, aten.mul, aten.rsub, aten.add, aten._softmax]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__softmax_add_div_mul_rsub_4.run(buf8, primals_6, buf6, buf7, 256, grid=grid(256), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_5.run(buf0, primals_2, buf9, 256, grid=grid(256), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = reinterpret_tensor(buf0, (16, 4, 4), (16, 4, 1), 0); del buf0  # reuse
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [attn], Original ATen: [aten.bmm]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf8, (16, 4, 4), (16, 4, 1), 0), reinterpret_tensor(buf9, (16, 4, 4), (16, 4, 1), 0), out=buf10)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_5], Original ATen: [aten.clone]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_clone_6.run(buf10, buf11, 256, grid=grid(256), stream=stream0)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf7, (16, 4), (4, 1), 0); del buf7  # reuse
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [x_6], Original ATen: [aten.addmm]
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_7, reinterpret_tensor(buf11, (16, 16), (16, 1), 0), primals_8, alpha=1, beta=1, out=buf12)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf12, (4, 4, 4), (16, 4, 1), 0), primals_4, primals_6, buf1, buf8, reinterpret_tensor(primals_8, (4, 16), (1, 4), 0), reinterpret_tensor(buf11, (16, 16), (1, 16), 0), reinterpret_tensor(buf9, (16, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf3, (16, 4, 4), (16, 1, 4), 0), reinterpret_tensor(buf4, (16, 4, 4), (16, 1, 4), 0), reinterpret_tensor(primals_1, (4, 16), (1, 4), 0), )
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((16, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 16), (16, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((32, 4, 4), (16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((32, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1, 1, 4, 4), (16, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((16, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8])
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:14:50.396000 2077305 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:14:50.405000 2077305 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/72/c72fqqt43qqil7llxyuepeqbbfbymyj2fy2reo2fvxgpmp6453m5.py
