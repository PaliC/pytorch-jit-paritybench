V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_inference']
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ug/cug6ujacudwpebahhr2zdb6nodecjd23zqlxzvvaa2fzk55ocyyx.py
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_2, sum_2, feat_t_norm, add_1, feat_t, setitem_1], Original ATen: [aten.pow, aten.sum, aten.sqrt, aten.add, aten.div, aten.lift_fresh, aten.index_put]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t => div_1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t_norm => sqrt_1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => full_default_1, index_put_1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%arg1_1, 2), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1], True), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%sum_2,), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt_1, 1e-06), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg1_1, %add_1), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put_1 : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%div_1, [%ne_1], %full_default_1), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0 = async_compile.triton('triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0', '''
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-06
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 != tmp15
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 0.0
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp16, tmp17, tmp15)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp18, xmask)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/vp/cvp5pwcgmvaiq2tthqlm3wvavxodrb7hbluyfz3jomul5y4hzukd.py
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_3, feat_t_cos_sim_1, sum_4, feat_t_cond_prob, add_4, add_2, feat_s_cos_sim_1, sum_3, feat_s_cond_prob, add_5, truediv_6, log, mul, loss], Original ATen: [aten.add, aten.div, aten.sum, aten.log, aten.mul, aten.mean]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_s_cond_prob => div_4
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_s_cos_sim_1 => div_2
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t_cond_prob => div_5
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t_cos_sim_1 => div_3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mean
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_6 => div_6
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_1, 1.0), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_3, 2.0), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%div_3, [1], True), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%div_3, %sum_4), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_5, 1e-06), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm, 1.0), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_2, 2.0), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%div_2, [1], True), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_4 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%div_2, %sum_3), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_4, 1e-06), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_4, %add_5), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%div_6,), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_5, %log), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%mul,), kwargs = {})
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log_mean_mul_sum_1 = async_compile.triton('triton_per_fused_add_div_log_mean_mul_sum_1', '''
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log_mean_mul_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log_mean_mul_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 4
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2), None)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1 + 4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2 + 4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (3 + 4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (r2), None)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (1 + 4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (2 + 4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (3 + 4*r1), None, eviction_policy='evict_last')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.5
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 + tmp10
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 + tmp14
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 + tmp18
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp4 / tmp19
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-06
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp28 + tmp31
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 + tmp35
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 * tmp3
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp36 + tmp39
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp25 / tmp40
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 + tmp21
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp22 / tmp42
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl_math.log(tmp43)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp20 * tmp44
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK, RBLOCK])
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.sum(tmp46, 1)[:, None]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 16.0
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 / tmp49
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp50, None)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, sum_2, feat_t_norm, add_1, feat_t, setitem_1], Original ATen: [aten.pow, aten.sum, aten.sqrt, aten.add, aten.div, aten.lift_fresh, aten.index_put]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0.run(buf1, arg1_1, 16, grid=grid(16), stream=stream0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_t_cos_sim], Original ATen: [aten.mm]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(buf1, (4, 4), (1, 4), 0), out=buf2)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, feat_s_norm, add, feat_s, setitem], Original ATen: [aten.pow, aten.sum, aten.sqrt, aten.add, aten.div, aten.lift_fresh, aten.index_put]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0.run(buf5, arg0_1, 16, grid=grid(16), stream=stream0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_s_cos_sim], Original ATen: [aten.mm]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(buf5, (4, 4), (1, 4), 0), out=buf6)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((), (), torch.float32)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_3, feat_t_cos_sim_1, sum_4, feat_t_cond_prob, add_4, add_2, feat_s_cos_sim_1, sum_3, feat_s_cond_prob, add_5, truediv_6, log, mul, loss], Original ATen: [aten.add, aten.div, aten.sum, aten.log, aten.mul, aten.mean]
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log_mean_mul_sum_1.run(buf8, buf2, buf6, 1, 16, grid=grid(1), stream=stream0)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, )
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:25:52.158000 3453854 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:25:52.161000 3453854 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/ch/cchaizo6xsggjedvdzsmmerl55w6i7otfur3szsnihjkdxioixuv.py
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['14_inference']
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ug/cug6ujacudwpebahhr2zdb6nodecjd23zqlxzvvaa2fzk55ocyyx.py
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_2, sum_2, feat_t_norm, add_1, feat_t, setitem_1], Original ATen: [aten.pow, aten.sum, aten.sqrt, aten.add, aten.div, aten.lift_fresh, aten.index_put]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t => div_1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t_norm => sqrt_1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_2
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   setitem_1 => full_default_1, index_put_1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_2 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%arg1_1, 2), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_2, [1], True), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.sqrt.default](args = (%sum_2,), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sqrt_1, 1e-06), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg1_1, %add_1), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=1] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cpu, pin_memory: False})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %index_put_1 : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%div_1, [%ne_1], %full_default_1), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0 = async_compile.triton('triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0', '''
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0(in_out_ptr0, in_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-06
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15 != tmp15
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 0.0
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.where(tmp16, tmp17, tmp15)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp18, xmask)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/vp/cvp5pwcgmvaiq2tthqlm3wvavxodrb7hbluyfz3jomul5y4hzukd.py
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [add_3, feat_t_cos_sim_1, sum_4, feat_t_cond_prob, add_4, add_2, feat_s_cos_sim_1, sum_3, feat_s_cond_prob, add_5, truediv_6, log, mul, loss], Original ATen: [aten.add, aten.div, aten.sum, aten.log, aten.mul, aten.mean]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_2
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_3 => add_3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_4 => add_4
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_5 => add_5
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_s_cond_prob => div_4
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_s_cos_sim_1 => div_2
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t_cond_prob => div_5
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feat_t_cos_sim_1 => div_3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   log => log
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => mean
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_3 => sum_3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_4 => sum_4
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_6 => div_6
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_1, 1.0), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_3, 2.0), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%div_3, [1], True), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%div_3, %sum_4), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_5, 1e-06), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm, 1.0), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_2, 2.0), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%div_2, [1], True), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_4 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%div_2, %sum_3), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div_4, 1e-06), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%add_4, %add_5), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %log : [num_users=1] = call_function[target=torch.ops.aten.log.default](args = (%div_6,), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%div_5, %log), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%mul,), kwargs = {})
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_div_log_mean_mul_sum_1 = async_compile.triton('triton_per_fused_add_div_log_mean_mul_sum_1', '''
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 16},
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_div_log_mean_mul_sum_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_div_log_mean_mul_sum_1(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex // 4
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r2), None)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (1 + 4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + (2 + 4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr0 + (3 + 4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_ptr1 + (r2), None)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.load(in_ptr1 + (4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.load(in_ptr1 + (1 + 4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.load(in_ptr1 + (2 + 4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr1 + (3 + 4*r1), None, eviction_policy='evict_last')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 0.5
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp7 + tmp10
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp11 + tmp14
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 + tmp18
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp4 / tmp19
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 1e-06
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp27 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tmp30 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp28 + tmp31
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 + tmp35
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp38 * tmp3
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp36 + tmp39
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp25 / tmp40
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp41 + tmp21
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp22 / tmp42
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl_math.log(tmp43)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp20 * tmp44
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.broadcast_to(tmp45, [XBLOCK, RBLOCK])
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tl.sum(tmp46, 1)[:, None]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = 16.0
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp48 / tmp49
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp50, None)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4), (4, 1))
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = buf0; del buf0  # reuse
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_2, sum_2, feat_t_norm, add_1, feat_t, setitem_1], Original ATen: [aten.pow, aten.sum, aten.sqrt, aten.add, aten.div, aten.lift_fresh, aten.index_put]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0.run(buf1, arg1_1, 16, grid=grid(16), stream=stream0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_t_cos_sim], Original ATen: [aten.mm]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf1, reinterpret_tensor(buf1, (4, 4), (1, 4), 0), out=buf2)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf1; del buf1  # reuse
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = buf4; del buf4  # reuse
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, feat_s_norm, add, feat_s, setitem], Original ATen: [aten.pow, aten.sum, aten.sqrt, aten.add, aten.div, aten.lift_fresh, aten.index_put]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_div_index_put_lift_fresh_pow_sqrt_sum_0.run(buf5, arg0_1, 16, grid=grid(16), stream=stream0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feat_s_cos_sim], Original ATen: [aten.mm]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.mm(buf5, reinterpret_tensor(buf5, (4, 4), (1, 4), 0), out=buf6)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf5
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((), (), torch.float32)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = buf7; del buf7  # reuse
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [add_3, feat_t_cos_sim_1, sum_4, feat_t_cond_prob, add_4, add_2, feat_s_cos_sim_1, sum_3, feat_s_cond_prob, add_5, truediv_6, log, mul, loss], Original ATen: [aten.add, aten.div, aten.sum, aten.log, aten.mul, aten.mean]
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_div_log_mean_mul_sum_1.run(buf8, buf2, buf6, 1, 16, grid=grid(1), stream=stream0)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf2
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf6
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf8, )
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:15:48.644000 2108070 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:15:48.649000 2108070 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/hp/chpcevvf6ndchu44ia2bmhwfbnwdvwgngokt4bg7ntsoivvw7lit.py
