V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['19_forward']
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/7h/c7h23m6rhe4yqdht7ucngqzco6gitqqon4bjx246hleqih5joopg.py
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_1], Original ATen: [aten.mul]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, 0.5), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ym/cym57timzsw2aujqkv65gproopz5phmvazjr3dc7jhzldpygspdt.py
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [bias], Original ATen: [aten.mul]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   bias => mul
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, 1), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_1 = async_compile.triton('triton_poi_fused_mul_1', '''
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qq/cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_2, weight, pow_1, sum_1, add, demod, weight_1], Original ATen: [aten.mul, aten.pow, aten.sum, aten.add, aten.rsqrt]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   demod => rsqrt
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight => mul_3
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_1 => mul_4
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.125), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %view), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_3, 2), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [2, 3, 4]), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-08), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %view_1), kwargs = {})
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mul_pow_rsqrt_sum_2 = async_compile.triton('triton_per_fused_add_mul_pow_rsqrt_sum_2', '''
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 64},
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mul_pow_rsqrt_sum_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mul_pow_rsqrt_sum_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r5 = rindex
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex // 16
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r5 + 64*x0), xmask, eviction_policy='evict_last', other=0.0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r3 + 4*x1), xmask, eviction_policy='evict_last', other=0.0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.125
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(xmask, tmp6, 0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sum(tmp8, 1)[:, None]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-08
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.rsqrt(tmp11)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp12, xmask)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r5 + 64*x4), tmp13, xmask)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1], Original ATen: [aten.mul]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(primals_3, buf0, 16, grid=grid(16), stream=stream0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bias], Original ATen: [aten.mul]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_1.run(primals_2, buf1, 4, grid=grid(4), stream=stream0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bias, out], Original ATen: [aten.mul, aten.addmm]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(buf1, primals_4, reinterpret_tensor(buf0, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf0; del buf0  # reuse
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, weight, pow_1, sum_1, add, demod, weight_1], Original ATen: [aten.mul, aten.pow, aten.sum, aten.add, aten.rsqrt]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mul_pow_rsqrt_sum_2.run(buf4, primals_5, buf2, buf5, 16, 64, grid=grid(16), stream=stream0)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.convolution]
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(primals_1, (1, 16, 4, 4), (256, 16, 4, 1), 0), reinterpret_tensor(buf5, (16, 4, 4, 4), (64, 16, 4, 1), 0), stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (1, 16, 5, 5), (400, 25, 5, 1))
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf6, (4, 4, 5, 5), (100, 25, 5, 1), 0), primals_4, primals_5, buf2, buf4, reinterpret_tensor(buf5, (16, 4, 4, 4), (64, 16, 4, 1), 0), reinterpret_tensor(primals_1, (1, 16, 4, 4), (256, 16, 4, 1), 0), )
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 4, 4, 4), (256, 64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:32:35.362000 18345 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:32:35.366000 18345 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/dm/cdmbl5onq34rusemmbooarb5lsn6okihromyulbzcmsgch2ae6oh.py
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['19_forward']
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/7h/c7h23m6rhe4yqdht7ucngqzco6gitqqon4bjx246hleqih5joopg.py
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_1], Original ATen: [aten.mul]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_3, 0.5), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.5
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ym/cym57timzsw2aujqkv65gproopz5phmvazjr3dc7jhzldpygspdt.py
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [bias], Original ATen: [aten.mul]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   bias => mul
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_2, 1), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_1 = async_compile.triton('triton_poi_fused_mul_1', '''
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 1.0
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/qq/cqqcz2id4lilpbutqds6ozpbkznutd32f6ye2pk37kdkdy43p6s6.py
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul_2, weight, pow_1, sum_1, add, demod, weight_1], Original ATen: [aten.mul, aten.pow, aten.sum, aten.add, aten.rsqrt]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   demod => rsqrt
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_2 => mul_2
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight => mul_3
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   weight_1 => mul_4
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%primals_5, 0.125), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2, %view), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_1 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%mul_3, 2), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_1, [2, 3, 4]), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_1, 1e-08), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add,), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %view_1), kwargs = {})
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_add_mul_pow_rsqrt_sum_2 = async_compile.triton('triton_per_fused_add_mul_pow_rsqrt_sum_2', '''
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16, 'r': 64},
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_mul_pow_rsqrt_sum_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_add_mul_pow_rsqrt_sum_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 64
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 64
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r5 = rindex
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex // 16
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = xindex
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r5 + 64*x0), xmask, eviction_policy='evict_last', other=0.0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r3 + 4*x1), xmask, eviction_policy='evict_last', other=0.0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.125
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 * tmp3
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp4 * tmp4
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.broadcast_to(tmp5, [XBLOCK, RBLOCK])
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(xmask, tmp6, 0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.sum(tmp8, 1)[:, None]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1e-08
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp9 + tmp10
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.rsqrt(tmp11)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp4 * tmp12
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x4), tmp12, xmask)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r5 + 64*x4), tmp13, xmask)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, ), (1, ))
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4), (4, 1))
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4), (4, 1))
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, 4, 4, 4, 4), (256, 64, 16, 4, 1))
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_1], Original ATen: [aten.mul]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(primals_3, buf0, 16, grid=grid(16), stream=stream0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bias], Original ATen: [aten.mul]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_1.run(primals_2, buf1, 4, grid=grid(4), stream=stream0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [bias, out], Original ATen: [aten.mul, aten.addmm]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(buf1, primals_4, reinterpret_tensor(buf0, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = buf0; del buf0  # reuse
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = buf3; del buf3  # reuse
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4, 4, 4, 4), (256, 64, 16, 4, 1), torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul_2, weight, pow_1, sum_1, add, demod, weight_1], Original ATen: [aten.mul, aten.pow, aten.sum, aten.add, aten.rsqrt]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_add_mul_pow_rsqrt_sum_2.run(buf4, primals_5, buf2, buf5, 16, 64, grid=grid(16), stream=stream0)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [out_1], Original ATen: [aten.convolution]
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = extern_kernels.convolution(reinterpret_tensor(primals_1, (1, 16, 4, 4), (256, 16, 4, 1), 0), reinterpret_tensor(buf5, (16, 4, 4, 4), (64, 16, 4, 1), 0), stride=(1, 1), padding=(2, 2), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf6, (1, 16, 5, 5), (400, 25, 5, 1))
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf6, (4, 4, 5, 5), (100, 25, 5, 1), 0), primals_4, primals_5, buf2, buf4, reinterpret_tensor(buf5, (16, 4, 4, 4), (64, 16, 4, 1), 0), reinterpret_tensor(primals_1, (1, 16, 4, 4), (256, 16, 4, 1), 0), )
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, 4, 4, 4, 4), (256, 64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:21:22.275000 1409051 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:21:22.280000 1409051 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/2y/c2yi3czdylmxxqigv5w6gvszmxvfwrlrlfgm4x5bd7hizukmwqz5.py
