V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_forward']
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/nk/cnkz7ganuoslsp662v6ct2f4kwwhagc7dzsfsjk7niwakcgww4xv.py
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul], Original ATen: [aten.mul]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, %select_1), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (64 + x0), xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/kr/ckrajbnrdamixc2nl4gasxwobdfqbzdknbzxki7zqmrtmkwp42yt.py
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [no_update_holes, output_1, new_mask, new_mask_1, instance_norm, mul_1, output_mask_1], Original ATen: [aten.eq, aten.masked_fill, aten.ones_like, aten._native_batch_norm_legit, aten.mul, aten.convolution]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   instance_norm => add_1, rsqrt, var_mean
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask => full_default_3
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask_1 => where_2
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   no_update_holes => eq
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => full_default_2
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_mask_1 => convolution_3
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=3] = call_function[target=torch.ops.aten.eq.Scalar](args = (%squeeze_1, 0), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_3 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default_2, %full_default_3), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze_4, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_6, %where_2), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze_8, %primals_5, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1', '''
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r1 + 16*x0), xmask, other=0.0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp4, tmp0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 / tmp5
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp2, tmp1, tmp6)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(xmask, tmp8, 0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(xmask, tmp11, 0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.sum(tmp13, 1)[:, None]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([XBLOCK, 1], 16, tl.int32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 / tmp16
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 - tmp17
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp18
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK, RBLOCK])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(xmask, tmp20, 0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.sum(tmp22, 1)[:, None]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 16.0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 1e-05
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.rsqrt(tmp27)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp7 - tmp17
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp28
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1, 1], 0, tl.int32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp31, tmp30)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp2, tmp1, tmp4)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp28, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 16*x0), tmp34, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 16*x0), tmp33, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp17, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/r7/cr7ih4gjkjsdcrlnw6mqhcxabylxlwf72mybaggrna2gfz3yfnyh.py
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mask_sum, output_1, new_mask, no_update_holes_1, mask_sum_1, new_mask_3, instance_norm_1, add_2], Original ATen: [aten.masked_fill, aten.ones_like, aten.eq, aten._native_batch_norm_legit, aten.add, aten.native_batch_norm_backward]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_4
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   instance_norm_1 => add_3, rsqrt_1, var_mean_1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mask_sum => full_default_1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mask_sum_1 => where_3
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask => full_default_3
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask_3 => where_5
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   no_update_holes_1 => eq_1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => full_default_2
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_3 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_1 : [num_users=4] = call_function[target=torch.ops.aten.eq.Scalar](args = (%squeeze_9, 0), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_1, %full_default_1, %squeeze_9), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_1, %full_default_2, %full_default_3), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze_11, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select, %squeeze_13), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_11, %unsqueeze_15), kwargs = {})
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2', '''
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr4, out_ptr5, out_ptr6, xnumel, rnumel, XBLOCK : tl.constexpr):
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (r1 + 16*x0), xmask, other=0.0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp2, tmp3, tmp0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp1, tmp3)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 / tmp4
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp2, tmp1, tmp7)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, 0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp9, [XBLOCK, RBLOCK])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(xmask, tmp12, 0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.sum(tmp14, 1)[:, None]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([XBLOCK, 1], 16, tl.int32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 / tmp17
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp9 - tmp18
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK, RBLOCK])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(xmask, tmp21, 0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.sum(tmp23, 1)[:, None]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp8 - tmp18
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 16.0
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp24 / tmp27
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 1e-05
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = libdevice.rsqrt(tmp30)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp26 * tmp31
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp25 + tmp32
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 16*x0), tmp2, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 16*x0), tmp4, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 16*x0), tmp5, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (r1 + 16*x0), tmp33, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (r1 + 16*x0), tmp26, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr6 + (x0), tmp31, xmask)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4, 3, 3), (36, 9, 3, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul], Original ATen: [aten.mul]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(primals_1, buf0, 64, grid=grid(64), stream=stream0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.convolution]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(reinterpret_tensor(buf0, (1, 4, 4, 4), (0, 16, 4, 1), 0), primals_2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (1, 4, 4, 4), (64, 16, 4, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_mask], Original ATen: [aten.convolution]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(primals_1, (1, 4, 4, 4), (64, 16, 4, 1), 64), primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (1, 4, 4, 4), (64, 16, 4, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf4, (1, 4, 1, 1), (4, 1, 1, 1), 0); del buf4  # reuse
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((1, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [no_update_holes, output_1, new_mask, new_mask_1, instance_norm, mul_1, output_mask_1], Original ATen: [aten.eq, aten.masked_fill, aten.ones_like, aten._native_batch_norm_legit, aten.mul, aten.convolution]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1.run(buf6, buf2, buf1, buf3, buf7, buf9, 4, 16, grid=grid(4), stream=stream0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_2], Original ATen: [aten.convolution]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(reinterpret_tensor(buf7, (1, 4, 4, 4), (0, 16, 4, 1), 0), primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (1, 4, 4, 4), (64, 16, 4, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_mask_1], Original ATen: [aten.convolution]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (1, 4, 4, 4), (64, 16, 4, 1))
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf10, (4, 4, 4), (16, 4, 1), 0); del buf10  # reuse
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf9, (4, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((1, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mask_sum, output_1, new_mask, no_update_holes_1, mask_sum_1, new_mask_3, instance_norm_1, add_2], Original ATen: [aten.masked_fill, aten.ones_like, aten.eq, aten._native_batch_norm_legit, aten.add, aten.native_batch_norm_backward]
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2.run(buf12, buf8, primals_1, buf11, buf13, buf18, buf19, buf17, 4, 16, grid=grid(4), stream=stream0)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf18, buf13, primals_2, primals_4, reinterpret_tensor(buf0, (1, 4, 4, 4), (64, 16, 4, 1), 0), buf1, buf2, buf3, buf6, reinterpret_tensor(buf7, (1, 4, 4, 4), (64, 16, 4, 1), 0), buf11, buf12, reinterpret_tensor(buf17, (4, ), (1, ), 0), buf19, )
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 13:20:24.304000 935770 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 13:20:24.309000 935770 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/jb/cjbuk54o4ab3umuqzqzqbqabbczd7y7ketobffayixd3bwjl6fce.py
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['6_forward']
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/nk/cnkz7ganuoslsp662v6ct2f4kwwhagc7dzsfsjk7niwakcgww4xv.py
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mul], Original ATen: [aten.mul]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%select, %select_1), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_mul_0 = async_compile.triton('triton_poi_fused_mul_0', '''
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_mul_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_mul_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (64 + x0), xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 * tmp1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/kr/ckrajbnrdamixc2nl4gasxwobdfqbzdknbzxki7zqmrtmkwp42yt.py
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [no_update_holes, output_1, new_mask, new_mask_1, instance_norm, mul_1, output_mask_1], Original ATen: [aten.eq, aten.masked_fill, aten.ones_like, aten._native_batch_norm_legit, aten.mul, aten.convolution]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   instance_norm => add_1, rsqrt, var_mean
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_1 => mul_2
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask => full_default_3
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask_1 => where_2
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   no_update_holes => eq
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => full_default_2
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_mask_1 => convolution_3
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq : [num_users=3] = call_function[target=torch.ops.aten.eq.Scalar](args = (%squeeze_1, 0), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_3 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_2 : [num_users=2] = call_function[target=torch.ops.aten.where.self](args = (%eq, %full_default_2, %full_default_3), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze_4, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem, 1e-05), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%squeeze_6, %where_2), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%unsqueeze_8, %primals_5, None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1 = async_compile.triton('triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1', '''
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr1 + (r1 + 16*x0), xmask, other=0.0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 1.0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp4, tmp0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 / tmp5
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.where(tmp2, tmp1, tmp6)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.broadcast_to(tmp7, [XBLOCK, RBLOCK])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.where(xmask, tmp8, 0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(xmask, tmp11, 0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.sum(tmp13, 1)[:, None]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.full([XBLOCK, 1], 16, tl.int32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp15.to(tl.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp14 / tmp16
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp8 - tmp17
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 * tmp18
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK, RBLOCK])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.where(xmask, tmp20, 0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.sum(tmp22, 1)[:, None]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 16.0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 / tmp24
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 1e-05
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 + tmp26
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = libdevice.rsqrt(tmp27)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp7 - tmp17
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 * tmp28
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1, 1], 0, tl.int32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = triton_helpers.maximum(tmp31, tmp30)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tl.where(tmp2, tmp1, tmp4)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp32 * tmp33
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x0), tmp28, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 16*x0), tmp34, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (r1 + 16*x0), tmp33, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp17, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/r7/cr7ih4gjkjsdcrlnw6mqhcxabylxlwf72mybaggrna2gfz3yfnyh.py
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [mask_sum, output_1, new_mask, no_update_holes_1, mask_sum_1, new_mask_3, instance_norm_1, add_2], Original ATen: [aten.masked_fill, aten.ones_like, aten.eq, aten._native_batch_norm_legit, aten.add, aten.native_batch_norm_backward]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_4
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   instance_norm_1 => add_3, rsqrt_1, var_mean_1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mask_sum => full_default_1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mask_sum_1 => where_3
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask => full_default_3
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   new_mask_3 => where_5
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   no_update_holes_1 => eq_1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => full_default_2
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_1 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([], 1.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_2 : [num_users=4] = call_function[target=torch.ops.aten.full.default](args = ([], 0.0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %full_default_3 : [num_users=2] = call_function[target=torch.ops.aten.full.default](args = ([4, 4, 4], 1), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %eq_1 : [num_users=4] = call_function[target=torch.ops.aten.eq.Scalar](args = (%squeeze_9, 0), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_3 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_1, %full_default_1, %squeeze_9), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where_5 : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%eq_1, %full_default_2, %full_default_3), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%unsqueeze_11, [0, 2, 3]), kwargs = {correction: 0, keepdim: True})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, 1e-05), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %rsqrt_1 : [num_users=2] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%select, %squeeze_13), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%unsqueeze_11, %unsqueeze_15), kwargs = {})
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2 = async_compile.triton('triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2', '''
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4, 'r': 16},
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*i1', 'out_ptr1': '*fp32', 'out_ptr4': '*fp32', 'out_ptr5': '*fp32', 'out_ptr6': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 3, 'num_reduction': 4, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2(in_out_ptr0, in_ptr0, in_ptr1, out_ptr0, out_ptr1, out_ptr4, out_ptr5, out_ptr6, xnumel, rnumel, XBLOCK : tl.constexpr):
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 16
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 16
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[None, :]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = rindex
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_out_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (r1 + 16*x0), xmask, other=0.0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr1 + (r1 + 16*x0), xmask, other=0.0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = 0.0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 == tmp1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = 1.0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp2, tmp3, tmp0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.where(tmp2, tmp1, tmp3)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 / tmp4
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp2, tmp1, tmp7)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.broadcast_to(tmp8, [XBLOCK, RBLOCK])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.where(xmask, tmp9, 0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.broadcast_to(tmp9, [XBLOCK, RBLOCK])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.where(xmask, tmp12, 0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.sum(tmp14, 1)[:, None]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([XBLOCK, 1], 16, tl.int32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16.to(tl.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 / tmp17
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp9 - tmp18
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK, RBLOCK])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.where(xmask, tmp21, 0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.sum(tmp23, 1)[:, None]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp8 - tmp18
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = 16.0
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp24 / tmp27
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = 1e-05
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp28 + tmp29
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = libdevice.rsqrt(tmp30)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp26 * tmp31
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp25 + tmp32
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (r1 + 16*x0), tmp2, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (r1 + 16*x0), tmp4, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (r1 + 16*x0), tmp5, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr4 + (r1 + 16*x0), tmp33, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr5 + (r1 + 16*x0), tmp26, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr6 + (x0), tmp31, xmask)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5 = args
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 4, 3, 3), (36, 9, 3, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mul], Original ATen: [aten.mul]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_mul_0.run(primals_1, buf0, 64, grid=grid(64), stream=stream0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.convolution]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(reinterpret_tensor(buf0, (1, 4, 4, 4), (0, 16, 4, 1), 0), primals_2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (1, 4, 4, 4), (64, 16, 4, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_mask], Original ATen: [aten.convolution]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = extern_kernels.convolution(reinterpret_tensor(primals_1, (1, 4, 4, 4), (64, 16, 4, 1), 64), primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf2, (1, 4, 4, 4), (64, 16, 4, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 1, 1), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf4, (1, 4, 1, 1), (4, 1, 1, 1), 0); del buf4  # reuse
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((1, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [no_update_holes, output_1, new_mask, new_mask_1, instance_norm, mul_1, output_mask_1], Original ATen: [aten.eq, aten.masked_fill, aten.ones_like, aten._native_batch_norm_legit, aten.mul, aten.convolution]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_convolution_eq_masked_fill_mul_ones_like_1.run(buf6, buf2, buf1, buf3, buf7, buf9, 4, 16, grid=grid(4), stream=stream0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_2], Original ATen: [aten.convolution]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = extern_kernels.convolution(reinterpret_tensor(buf7, (1, 4, 4, 4), (0, 16, 4, 1), 0), primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf8, (1, 4, 4, 4), (64, 16, 4, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_mask_1], Original ATen: [aten.convolution]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (1, 4, 4, 4), (64, 16, 4, 1))
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_5
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.bool)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = reinterpret_tensor(buf10, (4, 4, 4), (16, 4, 1), 0); del buf10  # reuse
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = reinterpret_tensor(buf9, (4, 4, 4), (16, 4, 1), 0); del buf9  # reuse
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = empty_strided_cuda((1, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((1, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [mask_sum, output_1, new_mask, no_update_holes_1, mask_sum_1, new_mask_3, instance_norm_1, add_2], Original ATen: [aten.masked_fill, aten.ones_like, aten.eq, aten._native_batch_norm_legit, aten.add, aten.native_batch_norm_backward]
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused__native_batch_norm_legit_add_eq_masked_fill_native_batch_norm_backward_ones_like_2.run(buf12, buf8, primals_1, buf11, buf13, buf18, buf19, buf17, 4, 16, grid=grid(4), stream=stream0)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf8
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf18, buf13, primals_2, primals_4, reinterpret_tensor(buf0, (1, 4, 4, 4), (64, 16, 4, 1), 0), buf1, buf2, buf3, buf6, reinterpret_tensor(buf7, (1, 4, 4, 4), (64, 16, 4, 1), 0), buf11, buf12, reinterpret_tensor(buf17, (4, ), (1, ), 0), buf19, )
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 4, 3, 3), (36, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5])
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 18:10:42.193000 3619245 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 18:10:42.199000 3619245 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/qo/cqoo6nmxtby3kolrjhde7au2gmi6jorwagk26mgokordcyuqd3wj.py
