V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['21_inference']
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/i2/ci2cc3arqufteywssdicaush2v5xagoixyfawdzju7zjoimn7t4q.py
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_1, sum_2], Original ATen: [aten.sum]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%unsqueeze_1,), kwargs = {})
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%permute_1, [2]), kwargs = {})
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_sum_0 = async_compile.triton('triton_red_fused_sum_0', '''
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_sum_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = _tmp2 + tmp1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask, tmp3, _tmp2)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r5 = ((rindex // 4) % 16)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = (rindex % 4)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r3 = ((rindex // 16) % 4)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r4 = rindex // 64
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r6 = (rindex % 16)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r5), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tl.load(in_ptr0 + (r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tl.load(in_ptr3 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tl.load(in_ptr0 + (64 + r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp27 = tl.load(in_ptr0 + (128 + r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp34 = tl.load(in_ptr0 + (192 + r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tl.full([XBLOCK, RBLOCK], 16, tl.int32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tmp4 + tmp5
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp4 < 0
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tl.where(tmp7, tmp6, tmp4)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.device_assert(((0 <= tmp8) & (tmp8 < 16)) | ~(rmask), "index out of bounds: 0 <= tmp8 < 16")
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tl.load(in_ptr2 + (16*r1 + 64*r3 + ((tmp8 % 16))), rmask, eviction_policy='evict_last', other=0.0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp12 = tmp10 * tmp11
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp14 = tmp13 * tmp11
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp15 = tmp12 - tmp14
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tl_math.abs(tmp15)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp17 = 0.0001
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tmp2 + tmp17
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp19 = tmp16 / tmp18
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp21 = tmp10 * tmp20
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp13 * tmp20
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp23 = tmp21 - tmp22
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp24 = tl_math.abs(tmp23)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp25 = tmp24 / tmp18
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp26 = tmp19 + tmp25
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp28 = tmp10 * tmp27
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp29 = tmp13 * tmp27
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp30 = tmp28 - tmp29
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp31 = tl_math.abs(tmp30)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp32 = tmp31 / tmp18
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp33 = tmp26 + tmp32
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp35 = tmp10 * tmp34
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp36 = tmp13 * tmp34
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp37 = tmp35 - tmp36
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp38 = tl_math.abs(tmp37)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp39 = tmp38 / tmp18
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp40 = tmp33 + tmp39
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp40, rmask)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/53/c53ire2o44zgwj3zoyww4mxsf6di5lso5ndzupefzy52coz2be4w.py
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [loss_2], Original ATen: [aten.sum]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => sum_3
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sum_2, [1]), kwargs = {})
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sum_1 = async_compile.triton('triton_poi_fused_sum_1', '''
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sum_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (64 + x0), xmask)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (128 + x0), xmask)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (192 + x0), xmask)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (16, 64, 4, 1), torch.float32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, sum_2], Original ATen: [aten.sum]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_sum_0.run(arg2_1, arg1_1, arg0_1, arg3_1, buf1, 1, 256, grid=grid(1), stream=stream0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [loss_2], Original ATen: [aten.sum]
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sum_1.run(buf1, buf2, 64, grid=grid(64), stream=stream0)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.int64)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 14:16:35.879000 3595284 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 14:16:35.882000 3595284 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/6k/c6kf2jywjjdn4of6aa5wfd7boyfp3nc6pdidqxn4kodbctotlhwd.py
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['21_inference']
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/i2/ci2cc3arqufteywssdicaush2v5xagoixyfawdzju7zjoimn7t4q.py
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [sum_1, sum_2], Original ATen: [aten.sum]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_2
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_1 : [num_users=1] = call_function[target=torch.ops.aten.sum.default](args = (%unsqueeze_1,), kwargs = {})
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_2 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%permute_1, [2]), kwargs = {})
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_red_fused_sum_0 = async_compile.triton('triton_red_fused_sum_0', '''
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.reduction(
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.DEFAULT,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 6), 'tt.equal_to': (5,)}, 'cls': 'AttrsDescriptor'})]},
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_sum_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_red_fused_sum_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([XBLOCK, RBLOCK], True, tl.int1)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rbase = tl.arange(0, RBLOCK)[None, :]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     _tmp2 = tl.full([XBLOCK, RBLOCK], 0, tl.float32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp0 = tl.load(in_ptr0 + (r0), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp3 = _tmp2 + tmp1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         _tmp2 = tl.where(rmask, tmp3, _tmp2)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.sum(_tmp2, 1)[:, None]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     for roffset in range(0, rnumel, RBLOCK):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rindex = roffset + rbase
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         rmask = rindex < rnumel
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r5 = ((rindex // 4) % 16)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r1 = (rindex % 4)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r3 = ((rindex // 16) % 4)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r4 = rindex // 64
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r6 = (rindex % 16)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         r0 = rindex
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp4 = tl.load(in_ptr1 + (r5), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp11 = tl.load(in_ptr0 + (r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp13 = tl.load(in_ptr3 + (r0), rmask, eviction_policy='evict_first', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp20 = tl.load(in_ptr0 + (64 + r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp27 = tl.load(in_ptr0 + (128 + r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp34 = tl.load(in_ptr0 + (192 + r6 + 16*r4), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp5 = tl.full([XBLOCK, RBLOCK], 16, tl.int32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp6 = tmp4 + tmp5
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp7 = tmp4 < 0
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp8 = tl.where(tmp7, tmp6, tmp4)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.device_assert(((0 <= tmp8) & (tmp8 < 16)) | ~(rmask), "index out of bounds: 0 <= tmp8 < 16")
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp10 = tl.load(in_ptr2 + (16*r1 + 64*r3 + ((tmp8 % 16))), rmask, eviction_policy='evict_last', other=0.0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp12 = tmp10 * tmp11
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp14 = tmp13 * tmp11
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp15 = tmp12 - tmp14
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp16 = tl_math.abs(tmp15)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp17 = 0.0001
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp18 = tmp2 + tmp17
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp19 = tmp16 / tmp18
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp21 = tmp10 * tmp20
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp22 = tmp13 * tmp20
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp23 = tmp21 - tmp22
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp24 = tl_math.abs(tmp23)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp25 = tmp24 / tmp18
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp26 = tmp19 + tmp25
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp28 = tmp10 * tmp27
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp29 = tmp13 * tmp27
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp30 = tmp28 - tmp29
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp31 = tl_math.abs(tmp30)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp32 = tmp31 / tmp18
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp33 = tmp26 + tmp32
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp35 = tmp10 * tmp34
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp36 = tmp13 * tmp34
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp37 = tmp35 - tmp36
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp38 = tl_math.abs(tmp37)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp39 = tmp38 / tmp18
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tmp40 = tmp33 + tmp39
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         tl.store(out_ptr1 + (tl.broadcast_to(r0, [XBLOCK, RBLOCK])), tmp40, rmask)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/53/c53ire2o44zgwj3zoyww4mxsf6di5lso5ndzupefzy52coz2be4w.py
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [loss_2], Original ATen: [aten.sum]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => sum_3
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_3 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%sum_2, [1]), kwargs = {})
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_sum_1 = async_compile.triton('triton_poi_fused_sum_1', '''
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sum_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_sum_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (64 + x0), xmask)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (128 + x0), xmask)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (192 + x0), xmask)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 + tmp3
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 + tmp5
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1, arg2_1, arg3_1 = args
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg2_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg3_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4, 4, 4), (16, 64, 4, 1), torch.float32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [sum_1, sum_2], Original ATen: [aten.sum]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_red_fused_sum_0.run(arg2_1, arg1_1, arg0_1, arg3_1, buf1, 1, 256, grid=grid(1), stream=stream0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg2_1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg3_1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 4, 4), (16, 4, 1), torch.float32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [loss_2], Original ATen: [aten.sum]
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_sum_1.run(buf1, buf2, 64, grid=grid(64), stream=stream0)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.int64)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg2_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg3_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1, arg2_1, arg3_1])
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 19:05:41.526000 1016885 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 19:05:41.530000 1016885 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/aa/caazoqehikm5qpme4xrya3naco4gud7xokxk4zf5mgmud5zkscer.py
