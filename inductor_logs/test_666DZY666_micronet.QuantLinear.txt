V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/yc/cyc3alpuaetjs733jm7t7w2nk55igron4uqko7tu3aaqh2im2k46.py
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv, sub, sign, abs_3, add, floor, output, clamp, add_1, output_1], Original ATen: [aten.div, aten.sub, aten.sign, aten.abs, aten.add, aten.floor, aten.mul, aten.clamp]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_3 => abs_3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp => clamp_max, clamp_min
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floor => floor
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => mul
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => mul_1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sign => sign
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %primals_3), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_3, 0.5), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %floor), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul, %primals_6), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min, %primals_7), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max, %primals_3), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %primals_1), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0 = async_compile.triton('triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0', '''
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr3 + (0))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (0))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 - tmp5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 0, tl.int32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 < tmp6
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int8)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 < tmp7
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.int8)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 - tmp11
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12.to(tmp6.dtype)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.abs(tmp6)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.floor(tmp16)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 * tmp17
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp18, tmp20)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp21, tmp23)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp2
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp26, xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/iw/ciwejttrjtwegikvdjclrgfax7ehm4nnmifupvxzsivkd3aj3jb7.py
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_3, sub_3, truediv_4, sub_4, truediv_5, sub_5, output_2, clamp_1, add_2, output_3], Original ATen: [aten.div, aten.sub, aten.abs, aten.maximum, aten.neg, aten.sign, aten.add, aten.floor, aten.mul, aten.clamp, aten.ge, aten.le, aten.logical_and, aten.gt, aten.lt]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_max_1, clamp_min_1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_2 => abs_4, abs_5, abs_6, add_2, floor_1, maximum_1, mul_2, neg_1, sign_1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_3 => mul_3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_4 => div_4
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_5 => div_5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_8, %primals_9), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=4] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_3, %primals_10), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_4 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_11, %primals_9), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_4, %primals_10), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_12, %primals_9), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_5, %primals_10), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_4 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_4,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_5 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_5,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum_1 : [num_users=2] = call_function[target=torch.ops.aten.maximum.default](args = (%abs_4, %abs_5), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%maximum_1,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign_1 : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub_3,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_6 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_3,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_6, 0.5), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add_2,), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign_1, %floor_1), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul_2, %primals_13), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min_1, %primals_14), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max_1, %primals_10), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, %primals_9), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Tensor](args = (%mul_2, %primals_13), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Tensor](args = (%mul_2, %primals_14), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %le), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Tensor](args = (%sub_3, %maximum_1), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%sub_3, %neg_1), kwargs = {})
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1 = async_compile.triton('triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1', '''
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*i1', 'out_ptr3': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (0))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (0))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 / tmp1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 < tmp4
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.int8)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 < tmp5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int8)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp9
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tmp4.dtype)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.abs(tmp4)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.5
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.floor(tmp14)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp11 * tmp15
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp16, tmp18)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.minimum(tmp19, tmp21)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 + tmp3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp16 >= tmp18
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp16 <= tmp21
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 & tmp26
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 / tmp1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl_math.abs(tmp30)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 / tmp1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.abs(tmp34)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp31, tmp35)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp4 > tmp36
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = -tmp36
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp4 < tmp38
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp24, xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp27, xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp37, xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x2), tmp39, xmask)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15 = args
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (1, ), (1, ))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, ), (1, ))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (), ())
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (), ())
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, 1), (1, 1))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 1), (1, 1))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, 1), (1, 1))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 1), (1, 1))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (), ())
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (), ())
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv, sub, sign, abs_3, add, floor, output, clamp, add_1, output_1], Original ATen: [aten.div, aten.sub, aten.sign, aten.abs, aten.add, aten.floor, aten.mul, aten.clamp]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0.run(primals_2, primals_1, primals_3, primals_6, primals_7, buf0, 256, grid=grid(256), stream=stream0)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_3, sub_3, truediv_4, sub_4, truediv_5, sub_5, output_2, clamp_1, add_2, output_3], Original ATen: [aten.div, aten.sub, aten.abs, aten.maximum, aten.neg, aten.sign, aten.add, aten.floor, aten.mul, aten.clamp, aten.ge, aten.le, aten.logical_and, aten.gt, aten.lt]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1.run(primals_8, primals_9, primals_10, primals_13, primals_14, primals_11, primals_12, buf1, buf3, buf4, buf5, 16, grid=grid(16), stream=stream0)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_4], Original ATen: [aten.addmm]
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_15, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(buf1, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf2, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_9, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), buf3, buf4, buf5, )
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15])
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 12:23:25.102000 3371744 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 12:23:25.106000 3371744 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/th/cth5uanoccl6blek4lztv2bci4k6mcoafud72ra4swwz7lc4zrms.py
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['13_forward']
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/yc/cyc3alpuaetjs733jm7t7w2nk55igron4uqko7tu3aaqh2im2k46.py
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv, sub, sign, abs_3, add, floor, output, clamp, add_1, output_1], Original ATen: [aten.div, aten.sub, aten.sign, aten.abs, aten.add, aten.floor, aten.mul, aten.clamp]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   abs_3 => abs_3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_1 => add_1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp => clamp_max, clamp_min
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   floor => floor
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output => mul
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_1 => mul_1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sign => sign
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub => sub
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv => div
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_2, %primals_1), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=2] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div, %primals_3), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_3 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_3, 0.5), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign, %floor), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul, %primals_6), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min, %primals_7), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max, %primals_3), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_1, %primals_1), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0 = async_compile.triton('triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0', '''
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x0), xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (0))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.broadcast_to(tmp1, [XBLOCK])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.load(in_ptr2 + (0))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.broadcast_to(tmp4, [XBLOCK])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr3 + (0))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.broadcast_to(tmp19, [XBLOCK])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr4 + (0))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.broadcast_to(tmp22, [XBLOCK])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 / tmp2
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp3 - tmp5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 0, tl.int32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 < tmp6
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int8)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp6 < tmp7
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tl.int8)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp9 - tmp11
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12.to(tmp6.dtype)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl_math.abs(tmp6)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = 0.5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 + tmp15
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = libdevice.floor(tmp16)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp13 * tmp17
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = triton_helpers.maximum(tmp18, tmp20)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = triton_helpers.minimum(tmp21, tmp23)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 * tmp2
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp26, xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/iw/ciwejttrjtwegikvdjclrgfax7ehm4nnmifupvxzsivkd3aj3jb7.py
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [truediv_3, sub_3, truediv_4, sub_4, truediv_5, sub_5, output_2, clamp_1, add_2, output_3], Original ATen: [aten.div, aten.sub, aten.abs, aten.maximum, aten.neg, aten.sign, aten.add, aten.floor, aten.mul, aten.clamp, aten.ge, aten.le, aten.logical_and, aten.gt, aten.lt]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add_2 => add_3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   clamp_1 => clamp_max_1, clamp_min_1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_2 => abs_4, abs_5, abs_6, add_2, floor_1, maximum_1, mul_2, neg_1, sign_1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   output_3 => mul_3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_3 => sub_3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_4 => sub_4
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_5 => sub_5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_3 => div_3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_4 => div_4
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_5 => div_5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_3 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_8, %primals_9), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_3 : [num_users=4] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_3, %primals_10), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_4 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_11, %primals_9), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_4, %primals_10), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_5 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%primals_12, %primals_9), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%div_5, %primals_10), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_4 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_4,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_5 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_5,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %maximum_1 : [num_users=2] = call_function[target=torch.ops.aten.maximum.default](args = (%abs_4, %abs_5), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %neg_1 : [num_users=1] = call_function[target=torch.ops.aten.neg.default](args = (%maximum_1,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sign_1 : [num_users=1] = call_function[target=torch.ops.aten.sign.default](args = (%sub_3,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %abs_6 : [num_users=1] = call_function[target=torch.ops.aten.abs.default](args = (%sub_3,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%abs_6, 0.5), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %floor_1 : [num_users=1] = call_function[target=torch.ops.aten.floor.default](args = (%add_2,), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=3] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sign_1, %floor_1), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.Tensor](args = (%mul_2, %primals_13), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.Tensor](args = (%clamp_min_1, %primals_14), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clamp_max_1, %primals_10), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_3, %primals_9), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Tensor](args = (%mul_2, %primals_13), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Tensor](args = (%mul_2, %primals_14), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge, %le), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %gt : [num_users=1] = call_function[target=torch.ops.aten.gt.Tensor](args = (%sub_3, %maximum_1), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Tensor](args = (%sub_3, %neg_1), kwargs = {})
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1 = async_compile.triton('triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1', '''
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'out_ptr2': '*i1', 'out_ptr3': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (x1), xmask, eviction_policy='evict_last')
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (x1), xmask, eviction_policy='evict_last')
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr3 + (0))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.broadcast_to(tmp17, [XBLOCK])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (0))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.broadcast_to(tmp20, [XBLOCK])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr5 + (x1), xmask, eviction_policy='evict_last')
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr6 + (x1), xmask, eviction_policy='evict_last')
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 / tmp1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp2 - tmp3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.full([1], 0, tl.int32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 < tmp4
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.int8)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 < tmp5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8.to(tl.int8)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 - tmp9
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10.to(tmp4.dtype)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl_math.abs(tmp4)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 0.5
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 + tmp13
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = libdevice.floor(tmp14)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp11 * tmp15
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = triton_helpers.maximum(tmp16, tmp18)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = triton_helpers.minimum(tmp19, tmp21)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 + tmp3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp16 >= tmp18
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp16 <= tmp21
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp25 & tmp26
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 / tmp1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl_math.abs(tmp30)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp32 / tmp1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp33 - tmp3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl_math.abs(tmp34)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = triton_helpers.maximum(tmp31, tmp35)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp4 > tmp36
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = -tmp36
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp4 < tmp38
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp24, xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp27, xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp37, xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr3 + (x2), tmp39, xmask)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15 = args
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (1, ), (1, ))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (1, ), (1, ))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (1, ), (1, ))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (1, ), (1, ))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (), ())
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (), ())
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (4, 4), (4, 1))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (4, 1), (1, 1))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (4, 1), (1, 1))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_11, (4, 1), (1, 1))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_12, (4, 1), (1, 1))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_13, (), ())
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_14, (), ())
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_15, (4, ), (1, ))
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv, sub, sign, abs_3, add, floor, output, clamp, add_1, output_1], Original ATen: [aten.div, aten.sub, aten.sign, aten.abs, aten.add, aten.floor, aten.mul, aten.clamp]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_clamp_div_floor_mul_sign_sub_0.run(primals_2, primals_1, primals_3, primals_6, primals_7, buf0, 256, grid=grid(256), stream=stream0)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_2
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_3
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_6
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_7
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, 4), (4, 1), torch.bool)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [truediv_3, sub_3, truediv_4, sub_4, truediv_5, sub_5, output_2, clamp_1, add_2, output_3], Original ATen: [aten.div, aten.sub, aten.abs, aten.maximum, aten.neg, aten.sign, aten.add, aten.floor, aten.mul, aten.clamp, aten.ge, aten.le, aten.logical_and, aten.gt, aten.lt]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_abs_add_clamp_div_floor_ge_gt_le_logical_and_lt_maximum_mul_neg_sign_sub_1.run(primals_8, primals_9, primals_10, primals_13, primals_14, primals_11, primals_12, buf1, buf3, buf4, buf5, 16, grid=grid(16), stream=stream0)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_11
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_12
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_13
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_14
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_8
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_4], Original ATen: [aten.addmm]
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.addmm(primals_15, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), reinterpret_tensor(buf1, (4, 4), (1, 4), 0), alpha=1, beta=1, out=buf2)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_15
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf2, (4, 4, 4, 4), (64, 16, 4, 1), 0), primals_9, reinterpret_tensor(buf0, (64, 4), (4, 1), 0), buf3, buf4, buf5, )
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((1, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_11 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_12 = rand_strided((4, 1), (1, 1), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_13 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_14 = rand_strided((), (), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_15 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15])
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 17:13:22.716000 2034518 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 17:13:22.722000 2034518 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/lm/clmxamir4657h3tra7bai55qtoqb7s33whgb46m42bq5zszwq7wv.py
