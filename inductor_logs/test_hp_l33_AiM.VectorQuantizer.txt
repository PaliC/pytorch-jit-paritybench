V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z_flattened_1], Original ATen: [aten.div]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_flattened_1 => div_1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%view, %expand_1), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x1 + 64*(y0 // 16) + ((y0 % 16))), xmask & ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + 64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (32 + 64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + 64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp15, xmask & ymask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/b7/cb7abxx73ybh54lfw3lo2gkonanygca7mebgl6e2rm7lch3qvggy.py
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [embedding], Original ATen: [aten.div]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   embedding => div_2
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg1_1, %expand_2), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_1 = async_compile.triton('triton_poi_fused_div_1', '''
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/2c/c2ctvhkwnh4lgx4gexdu4qdny2i6srtc7sd2bnz6mbkqntfavc3x.py
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, d], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   d => sub
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_7
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_8
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_5
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_1, 2), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_7, [1], True), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_2, 2), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_8, [1]), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_4, %sum_5), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, 2), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_pow_sub_sum_2 = async_compile.triton('triton_poi_fused_add_mul_pow_sub_sum_2', '''
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_pow_sub_sum_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_pow_sub_sum_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_out_ptr0 + (x2), xmask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 + tmp17
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 + tmp21
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 2.0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 - tmp25
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp26, xmask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/bp/cbpenxuzv26lkbef65n73bhka4cdg4b6tvp4654bxk6x5pv3txa6.py
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [min_encoding_indices], Original ATen: [aten.argmin]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_encoding_indices => argmin
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmin : [num_users=2] = call_function[target=torch.ops.aten.argmin.default](args = (%sub, 1), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_argmin_3 = async_compile.triton('triton_poi_fused_argmin_3', '''
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_argmin_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_argmin_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 < tmp17
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 < tmp32
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z, z_1, sub_1, z_q_1], Original ATen: [aten.clone, aten.div, aten.sub, aten.add]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z => clone
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_1 => div
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_q_1 => add_1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%clone, %expand), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %div), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div, %sub_1), kwargs = {})
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_div_sub_4 = async_compile.triton('triton_poi_fused_add_clone_div_sub_4', '''
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_div_sub_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_div_sub_4(in_ptr0, in_ptr1, in_ptr2, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (32 + x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([XBLOCK, YBLOCK], 4, tl.int32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 < 0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp16)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp20) & (tmp20 < 4)) | ~(xmask & ymask), "index out of bounds: 0 <= tmp20 < 4")
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (y0 + 4*tmp20), xmask & ymask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 - tmp15
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp15 + tmp23
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 4*x2 + 64*y1), tmp24, xmask & ymask)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_flattened_1], Original ATen: [aten.div]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 64, 4, grid=grid(64, 4), stream=stream0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [embedding], Original ATen: [aten.div]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(arg1_1, buf1, 16, grid=grid(16), stream=stream0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 64, 4), (256, 4, 1), torch.float32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum_2], Original ATen: [aten.bmm]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf0, (1, 64, 4), (256, 4, 1), 0), reinterpret_tensor(buf1, (1, 4, 4), (0, 1, 4), 0), out=buf2)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (64, 4), (4, 1), 0); del buf2  # reuse
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, d], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_pow_sub_sum_2.run(buf3, buf0, buf1, 256, grid=grid(256), stream=stream0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [min_encoding_indices], Original ATen: [aten.argmin]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_argmin_3.run(buf3, buf4, 64, grid=grid(64), stream=stream0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf3, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf3  # reuse
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z, z_1, sub_1, z_q_1], Original ATen: [aten.clone, aten.div, aten.sub, aten.add]
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_div_sub_4.run(arg0_1, buf4, buf1, buf6, 16, 16, grid=grid(16, 16), stream=stream0)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 1, 16, 4), 0), buf4, )
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 16:44:16.670000 3339846 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 16:44:16.682000 3339846 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/yy/cyy4tcgamlpzjable7xobq3q65xkyu5yarpxmpxkcmqti57pexev.py
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['4_inference']
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z_flattened_1], Original ATen: [aten.div]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_flattened_1 => div_1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_1 : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%view, %expand_1), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_0 = async_compile.triton('triton_poi_fused_div_0', '''
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 64, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_0', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 64
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = yindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (16*x1 + 64*(y0 // 16) + ((y0 % 16))), xmask & ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + 64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (32 + 64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + 64*(y0 // 16) + ((y0 % 16))), ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x1 + 4*y0), tmp15, xmask & ymask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/b7/cb7abxx73ybh54lfw3lo2gkonanygca7mebgl6e2rm7lch3qvggy.py
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [embedding], Original ATen: [aten.div]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   embedding => div_2
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_2 : [num_users=3] = call_function[target=torch.ops.aten.div.Tensor](args = (%arg1_1, %expand_2), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_div_1 = async_compile.triton('triton_poi_fused_div_1', '''
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_div_1', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_div_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2), xmask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp15, xmask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/2c/c2ctvhkwnh4lgx4gexdu4qdny2i6srtc7sd2bnz6mbkqntfavc3x.py
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, d], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   add => add
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   d => sub
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul => mul
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_1 => pow_7
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   pow_2 => pow_8
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_1 => sum_4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sum_2 => sum_5
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_7 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_1, 2), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_4 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_7, [1], True), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %pow_8 : [num_users=1] = call_function[target=torch.ops.aten.pow.Tensor_Scalar](args = (%div_2, 2), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sum_5 : [num_users=1] = call_function[target=torch.ops.aten.sum.dim_IntList](args = (%pow_8, [1]), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%sum_4, %sum_5), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view_4, 2), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add, %mul), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_mul_pow_sub_sum_2 = async_compile.triton('triton_poi_fused_add_mul_pow_sub_sum_2', '''
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_mul_pow_sub_sum_2', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_mul_pow_sub_sum_2(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tl.load(in_ptr0 + (1 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (2 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.load(in_ptr0 + (3 + 4*x1), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.load(in_ptr1 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr1 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tl.load(in_out_ptr0 + (x2), xmask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0 * tmp0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp2 * tmp2
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp1 + tmp3
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 * tmp5
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp4 + tmp6
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp8 * tmp8
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp7 + tmp9
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp11 * tmp11
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp13
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp12 + tmp14
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 * tmp16
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 + tmp17
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp19
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp10 + tmp21
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 2.0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp23 * tmp24
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp22 - tmp25
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp26, xmask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/bp/cbpenxuzv26lkbef65n73bhka4cdg4b6tvp4654bxk6x5pv3txa6.py
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [min_encoding_indices], Original ATen: [aten.argmin]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   min_encoding_indices => argmin
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %argmin : [num_users=2] = call_function[target=torch.ops.aten.argmin.default](args = (%sub, 1), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_argmin_3 = async_compile.triton('triton_poi_fused_argmin_3', '''
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 64}, 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_argmin_3', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_argmin_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 64
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + (2 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tl.load(in_ptr0 + (3 + 4*x0), xmask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 < tmp1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 == tmp1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 != tmp0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp1 != tmp1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp4 > tmp5
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp2 | tmp6
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp4 & tmp5
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp3 | tmp8
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.full([1], 0, tl.int64)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.full([1], 1, tl.int64)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < tmp11
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp9 & tmp12
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp7 | tmp13
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp0, tmp1)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.where(tmp14, tmp10, tmp11)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp15 < tmp17
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp15 == tmp17
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp15 != tmp15
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp17 != tmp17
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 > tmp21
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp18 | tmp22
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp20 & tmp21
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp19 | tmp24
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tl.full([1], 2, tl.int64)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp16 < tmp26
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp25 & tmp27
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp23 | tmp28
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tl.where(tmp29, tmp15, tmp17)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.where(tmp29, tmp16, tmp26)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 < tmp32
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tmp30 == tmp32
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp30 != tmp30
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp32 != tmp32
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 > tmp36
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp33 | tmp37
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp35 & tmp36
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp34 | tmp39
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.full([1], 3, tl.int64)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp31 < tmp41
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp40 & tmp42
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp38 | tmp43
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp30, tmp32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.where(tmp44, tmp31, tmp41)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp46, xmask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [z, z_1, sub_1, z_q_1], Original ATen: [aten.clone, aten.div, aten.sub, aten.add]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_1 => sub_1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z => clone
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_1 => div
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   z_q_1 => add_1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clone : [num_users=3] = call_function[target=torch.ops.aten.clone.default](args = (%permute,), kwargs = {memory_format: torch.contiguous_format})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div : [num_users=2] = call_function[target=torch.ops.aten.div.Tensor](args = (%clone, %expand), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %div), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%div, %sub_1), kwargs = {})
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clone_div_sub_4 = async_compile.triton('triton_poi_fused_add_clone_div_sub_4', '''
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_div_sub_4', 'mutated_arg_names': [], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clone_div_sub_4(in_ptr0, in_ptr1, in_ptr2, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x2 + 16*y3), xmask & ymask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr0 + (x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr0 + (16 + x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (32 + x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr0 + (48 + x2 + 64*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr1 + (x2 + 16*y1), xmask & ymask, eviction_policy='evict_last')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp1 * tmp1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp3 * tmp3
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 + tmp4
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 * tmp6
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 + tmp7
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp9 * tmp9
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp8 + tmp10
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = libdevice.sqrt(tmp11)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = 1e-12
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = triton_helpers.maximum(tmp12, tmp13)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp0 / tmp14
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.full([XBLOCK, YBLOCK], 4, tl.int32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 + tmp17
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp16 < 0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.where(tmp19, tmp18, tmp16)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.device_assert(((0 <= tmp20) & (tmp20 < 4)) | ~(xmask & ymask), "index out of bounds: 0 <= tmp20 < 4")
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr2 + (y0 + 4*tmp20), xmask & ymask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 - tmp15
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp15 + tmp23
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 4*x2 + 64*y1), tmp24, xmask & ymask)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4), (4, 1))
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((64, 4), (4, 1), torch.float32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z_flattened_1], Original ATen: [aten.div]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_0.run(arg0_1, buf0, 64, 4, grid=grid(64, 4), stream=stream0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((4, 4), (4, 1), torch.float32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [embedding], Original ATen: [aten.div]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_div_1.run(arg1_1, buf1, 16, grid=grid(16), stream=stream0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((1, 64, 4), (256, 4, 1), torch.float32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [einsum_2], Original ATen: [aten.bmm]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         extern_kernels.bmm(reinterpret_tensor(buf0, (1, 64, 4), (256, 4, 1), 0), reinterpret_tensor(buf1, (1, 4, 4), (0, 1, 4), 0), out=buf2)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = reinterpret_tensor(buf2, (64, 4), (4, 1), 0); del buf2  # reuse
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [pow_1, sum_1, pow_2, sum_2, add, mul, d], Original ATen: [aten.pow, aten.sum, aten.add, aten.mul, aten.sub]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_mul_pow_sub_sum_2.run(buf3, buf0, buf1, 256, grid=grid(256), stream=stream0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf0
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((64, ), (1, ), torch.int64)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [min_encoding_indices], Original ATen: [aten.argmin]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_argmin_3.run(buf3, buf4, 64, grid=grid(64), stream=stream0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = reinterpret_tensor(buf3, (4, 4, 4, 4), (64, 16, 4, 1), 0); del buf3  # reuse
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [z, z_1, sub_1, z_q_1], Original ATen: [aten.clone, aten.div, aten.sub, aten.add]
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clone_div_sub_4.run(arg0_1, buf4, buf1, buf6, 16, 16, grid=grid(16, 16), stream=stream0)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (reinterpret_tensor(buf6, (4, 4, 4, 4), (64, 1, 16, 4), 0), buf4, )
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 21:32:51.987000 803870 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 21:32:51.993000 803870 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/rj/crjsuuq7ipgr6gi4qzpll6jyd6wip2xdpk35lt7ewqtkihxrycwb.py
