V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_inference']
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/oc/coc2dbndgh3fv7tlnxz5riglmjoysbfv5npyeyt5gjtysoe7nxaf.py
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [stack, lt, mul_8, mul_9, truediv_6, sub_12, loss, loss_1, loss_2], Original ATen: [aten.stack, aten.lt, aten.mul, aten.div, aten.sub, aten.where, aten.mean]
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => where
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => mul_10
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt => lt
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_8
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_9 => mul_9
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   stack => cat
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_12 => sub_12
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_6 => div_6
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], -1), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%view, 0.2), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, 0.5), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_8, %view), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_9, 0.2), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, 0.1), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div_6, %sub_12), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_div_lt_mean_mul_stack_sub_where_0 = async_compile.triton('triton_per_fused_div_lt_mean_mul_stack_sub_where_0', '''
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_div_lt_mean_mul_stack_sub_where_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 16, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_div_lt_mean_mul_stack_sub_where_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = ((rindex // 4) % 16)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 64
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = r0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp5
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.5
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp9
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp10 - tmp14
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.abs(tmp15)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 2.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp7 - tmp18
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp7 + tmp18
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 0.001
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 / tmp22
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 0.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp23, tmp24)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 1.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 - tmp25
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp4, tmp27, tmp28)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 >= tmp3
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 2, tl.int64)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 < tmp31
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 & tmp32
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 - tmp35
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 + tmp34
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 0.5
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr1 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 + tmp41
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 * tmp38
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp39 - tmp43
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl_math.abs(tmp44)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = 2.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 * tmp46
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp36 - tmp47
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp36 + tmp47
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = 0.001
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp48 / tmp51
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = 0.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = triton_helpers.maximum(tmp52, tmp53)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = 1.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 - tmp54
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.full(tmp56.shape, 0.0, tmp56.dtype)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp33, tmp56, tmp57)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp0 >= tmp31
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.full([1], 3, tl.int64)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp0 < tmp60
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp59 & tmp61
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.load(in_ptr0 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.load(in_ptr0 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 - tmp64
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.load(in_ptr1 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.load(in_ptr1 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 - tmp67
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = 0.001
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp68 + tmp69
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp65 / tmp70
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp65 + tmp69
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp68 / tmp72
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = triton_helpers.minimum(tmp71, tmp73)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = 1.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 - tmp74
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.full(tmp76.shape, 0.0, tmp76.dtype)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp62, tmp76, tmp77)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp0 >= tmp60
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.full([1], 4, tl.int64)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp0 < tmp80
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.load(in_ptr0 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl.load(in_ptr0 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp82 - tmp83
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr1 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.load(in_ptr1 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 - tmp86
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = 0.001
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp87 + tmp88
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84 / tmp89
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp84 + tmp88
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp87 / tmp91
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = triton_helpers.minimum(tmp90, tmp92)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = 1.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 - tmp93
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.full(tmp95.shape, 0.0, tmp95.dtype)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp79, tmp95, tmp96)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp62, tmp78, tmp97)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp33, tmp58, tmp98)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.where(tmp4, tmp29, tmp99)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = 0.2
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp100 < tmp101
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = 0.5
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp100 * tmp103
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 * tmp100
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = 5.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp105 * tmp106
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = 0.1
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp100 - tmp108
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.where(tmp102, tmp107, tmp109)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.broadcast_to(tmp110, [RBLOCK])
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = triton_helpers.promote_to_tensor(tl.sum(tmp111, 0))
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = 256.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp113 / tmp114
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = 1.0
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp115 * tmp116
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp117, None)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [stack, lt, mul_8, mul_9, truediv_6, sub_12, loss, loss_1, loss_2], Original ATen: [aten.stack, aten.lt, aten.mul, aten.div, aten.sub, aten.where, aten.mean]
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_div_lt_mean_mul_stack_sub_where_0.run(buf2, arg1_1, arg0_1, 1, 256, grid=grid(1), stream=stream0)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:55:54.308000 2240541 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:55:54.313000 2240541 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/z6/cz6ou6vgnlqlfspnai3iewgidbyencweus64mbta6aqndqg4yweg.py
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['10_inference']
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/oc/coc2dbndgh3fv7tlnxz5riglmjoysbfv5npyeyt5gjtysoe7nxaf.py
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [stack, lt, mul_8, mul_9, truediv_6, sub_12, loss, loss_1, loss_2], Original ATen: [aten.stack, aten.lt, aten.mul, aten.div, aten.sub, aten.where, aten.mean]
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss => where
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_1 => mean
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   loss_2 => mul_10
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   lt => lt
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_8 => mul_8
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   mul_9 => mul_9
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   stack => cat
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   sub_12 => sub_12
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   truediv_6 => div_6
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%unsqueeze, %unsqueeze_1, %unsqueeze_2, %unsqueeze_3], -1), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %lt : [num_users=1] = call_function[target=torch.ops.aten.lt.Scalar](args = (%view, 0.2), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%view, 0.5), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_9 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_8, %view), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %div_6 : [num_users=1] = call_function[target=torch.ops.aten.div.Tensor](args = (%mul_9, 0.2), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view, 0.1), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %where : [num_users=1] = call_function[target=torch.ops.aten.where.self](args = (%lt, %div_6, %sub_12), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mean : [num_users=1] = call_function[target=torch.ops.aten.mean.default](args = (%where,), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_10 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mean, 1.0), kwargs = {})
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_per_fused_div_lt_mean_mul_stack_sub_where_0 = async_compile.triton('triton_per_fused_div_lt_mean_mul_stack_sub_where_0', '''
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.persistent_reduction(
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 1, 'r': 256},
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     reduction_hint=ReductionHint.INNER,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'xnumel': 'i32', 'rnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 4), 'tt.equal_to': (3,)}, 'cls': 'AttrsDescriptor'})]},
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_div_lt_mean_mul_stack_sub_where_0', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': True, 'num_load': 16, 'num_reduction': 1, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_per_fused_div_lt_mean_mul_stack_sub_where_0(in_out_ptr0, in_ptr0, in_ptr1, xnumel, rnumel):
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     XBLOCK: tl.constexpr = 1
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rnumel = 256
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     RBLOCK: tl.constexpr = 256
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = tl.full([1], xoffset, tl.int32)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rindex = tl.arange(0, RBLOCK)[:]
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     roffset = 0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     rmask = tl.full([RBLOCK], True, tl.int1)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r0 = (rindex % 4)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r1 = ((rindex // 4) % 16)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r2 = rindex // 64
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     r3 = rindex
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = r0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 1, tl.int64)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tl.load(in_ptr0 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 - tmp6
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp5
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 0.5
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr1 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr1 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp4, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp13 * tmp9
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp10 - tmp14
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl_math.abs(tmp15)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = 2.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 * tmp17
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp7 - tmp18
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp7 + tmp18
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = 0.001
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 + tmp21
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp19 / tmp22
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = 0.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = triton_helpers.maximum(tmp23, tmp24)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 1.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 - tmp25
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.full(tmp27.shape, 0.0, tmp27.dtype)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tl.where(tmp4, tmp27, tmp28)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp0 >= tmp3
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.full([1], 2, tl.int64)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp0 < tmp31
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp30 & tmp32
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.load(in_ptr0 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp34 - tmp35
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tmp35 + tmp34
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = 0.5
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp37 * tmp38
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr1 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr1 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp33, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 + tmp41
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 * tmp38
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp39 - tmp43
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl_math.abs(tmp44)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = 2.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp45 * tmp46
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp36 - tmp47
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp36 + tmp47
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = 0.001
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp49 + tmp50
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp48 / tmp51
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = 0.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = triton_helpers.maximum(tmp52, tmp53)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = 1.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp55 - tmp54
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tl.full(tmp56.shape, 0.0, tmp56.dtype)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tl.where(tmp33, tmp56, tmp57)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp0 >= tmp31
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.full([1], 3, tl.int64)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp0 < tmp60
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp59 & tmp61
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.load(in_ptr0 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.load(in_ptr0 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp63 - tmp64
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.load(in_ptr1 + (tl.broadcast_to(32 + r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tl.load(in_ptr1 + (tl.broadcast_to(r1 + 64*r2, [RBLOCK])), tmp62, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp66 - tmp67
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = 0.001
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp68 + tmp69
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp65 / tmp70
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp65 + tmp69
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp68 / tmp72
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = triton_helpers.minimum(tmp71, tmp73)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = 1.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 - tmp74
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tl.full(tmp76.shape, 0.0, tmp76.dtype)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp62, tmp76, tmp77)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tmp0 >= tmp60
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.full([1], 4, tl.int64)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp0 < tmp80
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tl.load(in_ptr0 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl.load(in_ptr0 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp82 - tmp83
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr1 + (tl.broadcast_to(48 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tl.load(in_ptr1 + (tl.broadcast_to(16 + r1 + 64*r2, [RBLOCK])), tmp79, eviction_policy='evict_last', other=0.0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp85 - tmp86
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = 0.001
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tmp87 + tmp88
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp84 / tmp89
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp84 + tmp88
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tmp87 / tmp91
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = triton_helpers.minimum(tmp90, tmp92)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = 1.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tmp94 - tmp93
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tl.full(tmp95.shape, 0.0, tmp95.dtype)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.where(tmp79, tmp95, tmp96)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.where(tmp62, tmp78, tmp97)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.where(tmp33, tmp58, tmp98)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tl.where(tmp4, tmp29, tmp99)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = 0.2
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tmp100 < tmp101
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = 0.5
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp100 * tmp103
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp104 * tmp100
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = 5.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tmp105 * tmp106
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = 0.1
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp100 - tmp108
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tl.where(tmp102, tmp107, tmp109)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.broadcast_to(tmp110, [RBLOCK])
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = triton_helpers.promote_to_tensor(tl.sum(tmp111, 0))
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = 256.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp113 / tmp114
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = 1.0
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tmp115 * tmp116
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.debug_barrier()
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(in_out_ptr0 + (tl.full([1], 0, tl.int32)), tmp117, None)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1, arg1_1 = args
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg0_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(arg1_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = empty_strided_cuda((), (), torch.float32)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = buf1; del buf1  # reuse
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [stack, lt, mul_8, mul_9, truediv_6, sub_12, loss, loss_1, loss_2], Original ATen: [aten.stack, aten.lt, aten.mul, aten.div, aten.sub, aten.where, aten.mean]
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_per_fused_div_lt_mean_mul_stack_sub_where_0.run(buf2, arg1_1, arg0_1, 1, 256, grid=grid(1), stream=stream0)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg0_1
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del arg1_1
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf2, )
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg0_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     arg1_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([arg0_1, arg1_1])
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:45:13.729000 3778217 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:45:13.733000 3778217 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/x3/cx33tvgsfvluokt4lusz2pmxwqvdkv4zgx3lofwwyhn7qy3gcezs.py
