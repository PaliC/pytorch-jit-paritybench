V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['33_forward']
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/c5/cc52kox7odikc2dpvx4ixjbpbmbphiobzjcionfnni2rftmw7t2d.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feats], Original ATen: [aten.avg_pool2d]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats => avg_pool2d
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=3] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_0 = async_compile.triton('triton_poi_fused_avg_pool2d_0', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 2)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + 2*x3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 4, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + 2*x2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + 2*x2 + 8*x3 + 16*y4), tmp10 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2*x2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-4) + 2*x2 + 8*x3 + 16*y4), tmp16 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + 2*x2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-3) + 2*x2 + 8*x3 + 16*y4), tmp23 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 2*x3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-1) + 2*x2 + 8*x3 + 16*y4), tmp30 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (2*x2 + 8*x3 + 16*y4), tmp33 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (1 + 2*x2 + 8*x3 + 16*y4), tmp36 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + 2*x3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (3 + 2*x2 + 8*x3 + 16*y4), tmp43 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (4 + 2*x2 + 8*x3 + 16*y4), tmp46 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (5 + 2*x2 + 8*x3 + 16*y4), tmp49 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 1 + ((-2)*x2) + ((-2)*x3) + ((5) * ((5) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (5)))*((5) * ((5) <= (2 + 2*x3)) + (2 + 2*x3) * ((2 + 2*x3) < (5))) + ((-2)*x2*((5) * ((5) <= (2 + 2*x3)) + (2 + 2*x3) * ((2 + 2*x3) < (5)))) + ((-2)*x3*((5) * ((5) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (5)))) + 4*x2*x3 + ((5) * ((5) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (5))) + ((5) * ((5) <= (2 + 2*x3)) + (2 + 2*x3) * ((2 + 2*x3) < (5)))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 16*y1), tmp53, xmask & ymask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/hg/chgipuneekvmk3vfughnn2fgcych5blsttbpy6utjo7wpgxm7wik.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._to_copy]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => convert_element_type_1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ls/clskupd3nfqseasdggk5heuretgeuvvly25hnqcp3nhosltyhjg5.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.add, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => add, clamp_max
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add, 1), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_2 = async_compile.triton('triton_poi_fused_add_clamp_2', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.minimum(tmp8, tmp7)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/m7/cm7tky6h3w7hwxf4swpicocrvnpiwbjjvqzmi4sukaitomhp5woh.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul, sub
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.3333333333333333), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_3 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_3', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zz/czznfoblbyiqccnfauxjtc4n2d4zx7k7cjdzre7lczzjubms4f2f.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => _unsafe_index, _unsafe_index_1, add_2, mul_2, sub_1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sub_4 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sub_4', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sub_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sub_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 2, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2 + 4*tmp8 + 8*tmp4 + 16*x3), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x2 + 4*tmp13 + 8*tmp4 + 16*x3), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp9 + tmp17
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp18, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ju/cjulibppx5e5sboyetypoj3h7ignyukoos2r6dnzfiq7ycr3jvxn.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feats_1, feats_2, feats_3], Original ATen: [aten.avg_pool2d]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats_1 => avg_pool2d_1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats_2 => avg_pool2d_2
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats_3 => avg_pool2d_3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_1 : [num_users=3] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%avg_pool2d, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_2 : [num_users=3] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%avg_pool2d_1, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_3 : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%avg_pool2d_2, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_5 = async_compile.triton('triton_poi_fused_avg_pool2d_5', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_5(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], -1, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 & tmp5
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + ((-12) + x0 + 16*x1), tmp6 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp1 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 & tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 & tmp10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-8) + x0 + 16*x1), tmp11 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 + tmp7
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full([1], 1, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 & tmp16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp5 & tmp17
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + ((-4) + x0 + 16*x1), tmp18 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp13
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp10 & tmp5
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + ((-4) + x0 + 16*x1), tmp21 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 + tmp20
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp10 & tmp10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (x0 + 16*x1), tmp24 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp23
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp10 & tmp17
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (4 + x0 + 16*x1), tmp27 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp26
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp17 & tmp5
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (4 + x0 + 16*x1), tmp30 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp29
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp17 & tmp10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (8 + x0 + 16*x1), tmp33 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp17 & tmp17
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (12 + x0 + 16*x1), tmp36 & xmask, other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.full([1], 9, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 / tmp39
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp0 < tmp14
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp2 & tmp41
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp42
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp1 < tmp14
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp8 & tmp44
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp45
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp40 + tmp40
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp14 < tmp14
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp15 & tmp48
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp42 & tmp49
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp40 + tmp47
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp45 & tmp42
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp40 + tmp51
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp45 & tmp45
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp40 + tmp53
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp45 & tmp49
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp40 + tmp55
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp49 & tmp42
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp40 + tmp57
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp49 & tmp45
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp40 + tmp59
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp49 & tmp49
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp40 + tmp61
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 / tmp39
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 + tmp64
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 + tmp65
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 + tmp66
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp64 + tmp67
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp64 + tmp68
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp64 + tmp69
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp64 + tmp70
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp64 + tmp71
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp72 / tmp39
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp40, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp64, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp73, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/cp/ccpm52p646kxy4ney5kq7jctwkxo43sywj63ivfvjwsrrgs6qezn.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten._to_copy]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_1 => convert_element_type_5
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_5 : [num_users=9] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_6 = async_compile.triton('triton_poi_fused__to_copy_6', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3w/c3wzgfhcxi7rlxasz4ub2kkfwcqrjyq5hqphejfky4hjweegc37s.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled, upsampled_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => convert_element_type, iota
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_1 => clamp_max_6, clamp_min_4, clamp_min_6, mul_5, sub_5
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_5, 0.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_4, %convert_element_type_7), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=7] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_7 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_7', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_7(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/3p/c3p4rw3p7p7gyp5claxejiqi7pdyo3fhmjmkpeflpniqb5ppjqmj.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled_1, upsampled_2, upsampled_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_1 => _unsafe_index_4, _unsafe_index_5, add_7, mul_7, sub_6
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_2 => _unsafe_index_8, _unsafe_index_9, add_12, mul_12, sub_11
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_3 => _unsafe_index_12, _unsafe_index_13, add_17, mul_17, sub_16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_1, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_1, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_6), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_7), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_8 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_2, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_9 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_2, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_9, %_unsafe_index_8), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_6), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_8, %mul_12), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_12 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_13 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_16 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_13, %_unsafe_index_12), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_16, %clamp_max_6), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_12, %mul_17), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sub_8 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sub_8', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sub_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sub_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x2), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr6 + (x2), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 - tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 + tmp16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 - tmp18
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp15
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 - tmp22
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp15
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 + tmp24
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp21, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp25, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fe/cfefbuk4zbsj6tu4xdpar355tfbsidqilf5t2cxlyakwfx4kzcel.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [r], Original ATen: [aten.cat]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   r => cat
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_1, %add_4, %add_9, %add_14, %add_19], 1), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i64', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*i64', 'in_ptr10': '*i64', 'in_ptr11': '*fp32', 'in_ptr12': '*i64', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'in_ptr16': '*fp32', 'in_ptr17': '*fp32', 'in_ptr18': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 28, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, in_ptr16, in_ptr17, in_ptr18, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1280
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 20)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 320
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 20) % 16)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 80) % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 20) % 4)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x0) + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x4 + 16*((-4) + x0) + 64*x3), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([XBLOCK], 2, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp13, tmp11)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr3 + (x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (4*tmp19 + 8*tmp15 + 16*x3 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr5 + (x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp12
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp23, tmp22, tmp21)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr4 + (4*tmp24 + 8*tmp15 + 16*x3 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp20
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr6 + (x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp20 + tmp28
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr7 + (x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp10 + tmp32
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full(tmp33.shape, 0.0, tmp33.dtype)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp9, tmp33, tmp34)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 >= tmp7
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1], 12, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp0 < tmp37
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 & tmp38
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr8 + (x4 + 16*((-8) + x0) + 64*x3), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr9 + (x2), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.full([XBLOCK], 1, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp43, tmp41)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr10 + (x1), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp42
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr11 + (4*x3 + ((-8) + x0)), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr12 + (x1), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp42
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp52, tmp51)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp50 - tmp50
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr13 + (x1), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 * tmp56
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp50 + tmp57
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 - tmp40
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr14 + (x2), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 * tmp60
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp40 + tmp61
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.full(tmp62.shape, 0.0, tmp62.dtype)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.where(tmp39, tmp62, tmp63)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp0 >= tmp37
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.full([1], 16, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp0 < tmp66
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp65 & tmp67
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.load(in_ptr15 + (x4 + 16*((-12) + x0) + 64*x3), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr9 + (x2), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.full([XBLOCK], 1, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp70 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.where(tmp73, tmp72, tmp70)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr10 + (x1), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 + tmp71
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp75 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp77, tmp76, tmp75)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.load(in_ptr16 + (4*x3 + ((-12) + x0)), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr12 + (x1), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp80 + tmp71
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl.where(tmp82, tmp81, tmp80)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp79 - tmp79
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr13 + (x1), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp79 + tmp86
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 - tmp69
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr14 + (x2), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp69 + tmp90
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.full(tmp91.shape, 0.0, tmp91.dtype)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.where(tmp68, tmp91, tmp92)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp0 >= tmp66
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.full([1], 20, tl.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp0 < tmp95
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr17 + (x4 + 16*((-16) + x0) + 64*x3), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.load(in_ptr9 + (x2), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.full([XBLOCK], 1, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp98 + tmp99
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp98 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.where(tmp101, tmp100, tmp98)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tl.load(in_ptr10 + (x1), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103 + tmp99
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp103 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tl.where(tmp105, tmp104, tmp103)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tl.load(in_ptr18 + (4*x3 + ((-16) + x0)), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.load(in_ptr12 + (x1), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp108 + tmp99
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp108 < 0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.where(tmp110, tmp109, tmp108)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp107 - tmp107
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tl.load(in_ptr13 + (x1), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tmp112 * tmp113
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp107 + tmp114
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp115 - tmp97
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tl.load(in_ptr14 + (x2), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp116 * tmp117
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp97 + tmp118
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tl.full(tmp119.shape, 0.0, tmp119.dtype)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.where(tmp94, tmp119, tmp120)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tl.where(tmp68, tmp93, tmp121)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tl.where(tmp39, tmp64, tmp122)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tl.where(tmp9, tmp35, tmp123)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.where(tmp4, tmp5, tmp124)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp125, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: /tmp/torchinductor_sahanp/fl/cflis5zcuxyeazhd2guubnpwbzkydfhalg2nwqct6hmmyyyo5eqy.py
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_21, mul_21, mul_22, sub_20
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_1), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %unsqueeze_3), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_21, %unsqueeze_5), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_22, %unsqueeze_7), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10', '''
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4096
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 1024)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 1024
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 1024*x2 + 16384*y1), xmask, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), None, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), None, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), None, eviction_policy='evict_last')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 <= tmp18
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp17, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 1024*x2 + 16384*y1), tmp19, xmask)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 1, 3, 3), (9, 9, 3, 1))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 1, 3, 3), (9, 9, 3, 1))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 1, 3, 3), (9, 9, 3, 1))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 1, 3, 3), (9, 9, 3, 1))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1024, 20, 1, 1), (20, 1, 1, 1))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1024, ), (1, ))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1024, ), (1, ))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1024, ), (1, ))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1024, ), (1, ))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feats], Original ATen: [aten.avg_pool2d]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.convolution]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 2, 2), (16, 1, 8, 4))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._to_copy]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf2, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.add, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_2.run(buf3, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf4, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.add, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_2.run(buf5, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf6, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sub_4.run(buf2, buf4, buf1, buf5, buf6, buf7, 256, grid=grid(256), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.sub, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf8, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feats_1, feats_2, feats_3], Original ATen: [aten.avg_pool2d]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_5.run(buf0, buf9, buf18, buf21, 16, grid=grid(16), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_1], Original ATen: [aten.convolution]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 1, 1), (4, 1, 4, 4))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten._to_copy]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf11, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten.add, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf12, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled, upsampled_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf13, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten.add, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf14, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled, upsampled_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_7.run(buf15, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_2], Original ATen: [aten.convolution]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 4, 1, 1), (4, 1, 4, 4))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_3], Original ATen: [aten.convolution]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 4, 1, 1), (4, 1, 4, 4))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1, upsampled_2, upsampled_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sub_8.run(buf11, buf13, buf10, buf14, buf15, buf19, buf22, buf16, buf20, buf23, 256, grid=grid(256), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten.sub, aten.clamp]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_7.run(buf17, 4, grid=grid(4), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 20, 4, 4), (320, 1, 80, 20), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [r], Original ATen: [aten.cat]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(primals_1, buf7, buf3, buf4, buf1, buf5, buf6, buf8, buf16, buf12, buf13, buf10, buf14, buf15, buf17, buf20, buf19, buf23, buf22, buf24, 1280, grid=grid(1280), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 1024, 4, 4), (16384, 1, 4096, 1024))
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 1024, 4, 4), (16384, 16, 4, 1), torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 1024, 4, 4), (16384, 1, 4096, 1024), torch.bool)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10.run(buf25, primals_7, primals_8, primals_9, primals_10, buf26, buf27, 4096, 16, grid=grid(4096, 16), stream=stream0)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf26, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, buf0, buf2, buf3, buf4, buf5, buf6, buf8, buf9, buf11, buf12, buf13, buf14, buf15, buf17, buf18, buf21, buf24, buf25, buf27, )
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1024, 20, 1, 1), (20, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:44:55.028000 1969464 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0204 15:44:55.047000 1969464 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/72/c72yehld2whjs2236khyhbjejdmtcvagdmgboddk77ktdiwohfad.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] Output code: 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # AOT ID: ['33_forward']
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import torch
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import random
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import os
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import tempfile
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from math import inf, nan
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch import device, empty_strided
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     split_scan_grid,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     grid_combo_kernels,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     start_graph,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     end_graph,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     cooperative_reduction_grid,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] aten = torch.ops.aten
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile = AsyncCompile()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/c5/cc52kox7odikc2dpvx4ixjbpbmbphiobzjcionfnni2rftmw7t2d.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feats], Original ATen: [aten.avg_pool2d]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats => avg_pool2d
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d : [num_users=3] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%primals_1, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_0 = async_compile.triton('triton_poi_fused_avg_pool2d_0', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 16, 'x': 4}, tile_hint=TileHint.SQUARE,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = yindex < ynumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = (xindex % 2)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y4 = yindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = (-1) + 2*x3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1, 1], 0, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1, 1], 4, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = (-1) + 2*x2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp7 & tmp8
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp5 & tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr0 + ((-5) + 2*x2 + 8*x3 + 16*y4), tmp10 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = 2*x2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp12 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 & tmp14
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp5 & tmp15
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tl.load(in_ptr0 + ((-4) + 2*x2 + 8*x3 + 16*y4), tmp16 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp17 + tmp11
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = 1 + 2*x2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp19 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp20 & tmp21
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp5 & tmp22
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.load(in_ptr0 + ((-3) + 2*x2 + 8*x3 + 16*y4), tmp23 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp24 + tmp18
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = 2*x3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp26 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp27 & tmp28
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 & tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + ((-1) + 2*x2 + 8*x3 + 16*y4), tmp30 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp25
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp29 & tmp15
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (2*x2 + 8*x3 + 16*y4), tmp33 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp29 & tmp22
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (1 + 2*x2 + 8*x3 + 16*y4), tmp36 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = 1 + 2*x3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp39 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp39 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp40 & tmp41
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tl.load(in_ptr0 + (3 + 2*x2 + 8*x3 + 16*y4), tmp43 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp44 + tmp38
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp15
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tl.load(in_ptr0 + (4 + 2*x2 + 8*x3 + 16*y4), tmp46 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp47 + tmp45
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp42 & tmp22
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr0 + (5 + 2*x2 + 8*x3 + 16*y4), tmp49 & xmask & ymask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp50 + tmp48
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = 1 + ((-2)*x2) + ((-2)*x3) + ((5) * ((5) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (5)))*((5) * ((5) <= (2 + 2*x3)) + (2 + 2*x3) * ((2 + 2*x3) < (5))) + ((-2)*x2*((5) * ((5) <= (2 + 2*x3)) + (2 + 2*x3) * ((2 + 2*x3) < (5)))) + ((-2)*x3*((5) * ((5) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (5)))) + 4*x2*x3 + ((5) * ((5) <= (2 + 2*x2)) + (2 + 2*x2) * ((2 + 2*x2) < (5))) + ((5) * ((5) <= (2 + 2*x3)) + (2 + 2*x3) * ((2 + 2*x3) < (5)))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 / tmp52
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (y0 + 4*x5 + 16*y1), tmp53, xmask & ymask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/hg/chgipuneekvmk3vfughnn2fgcych5blsttbpy6utjo7wpgxm7wik.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._to_copy]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => convert_element_type_1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_1 : [num_users=5] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view, torch.int64), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_1 = async_compile.triton('triton_poi_fused__to_copy_1', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_1(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp6, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ls/clskupd3nfqseasdggk5heuretgeuvvly25hnqcp3nhosltyhjg5.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.add, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => add, clamp_max
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_1, 1), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%add, 1), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_add_clamp_2 = async_compile.triton('triton_poi_fused_add_clamp_2', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clamp_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_add_clamp_2(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 1, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp6 + tmp7
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.minimum(tmp8, tmp7)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/m7/cm7tky6h3w7hwxf4swpicocrvnpiwbjjvqzmi4sukaitomhp5woh.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => clamp_max_2, clamp_min, clamp_min_2, convert_element_type, iota, mul, sub
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.3333333333333333), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul, 0.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min, %convert_element_type_3), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_2 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub, 0.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_2 : [num_users=3] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_2, 1.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_3 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_3', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_3(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tmp0.to(tl.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = 0.3333333333333333
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp1 * tmp2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = triton_helpers.maximum(tmp3, tmp4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5.to(tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp6.to(tl.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp5 - tmp7
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = triton_helpers.maximum(tmp8, tmp4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = 1.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = triton_helpers.minimum(tmp9, tmp10)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp11, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/zz/czznfoblbyiqccnfauxjtc4n2d4zx7k7cjdzre7lczzjubms4f2f.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => _unsafe_index, _unsafe_index_1, add_2, mul_2, sub_1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution, [None, None, %convert_element_type_1, %convert_element_type_3]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution, [None, None, %convert_element_type_1, %clamp_max_1]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_1, %_unsafe_index), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %clamp_max_2), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index, %mul_2), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sub_4 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sub_4', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sub_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sub_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 16) % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 64
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 2, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2 + 4*tmp8 + 8*tmp4 + 16*x3), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr2 + (x2 + 4*tmp13 + 8*tmp4 + 16*x3), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 - tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 * tmp16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp9 + tmp17
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp18, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/ju/cjulibppx5e5sboyetypoj3h7ignyukoos2r6dnzfiq7ycr3jvxn.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [feats_1, feats_2, feats_3], Original ATen: [aten.avg_pool2d]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats_1 => avg_pool2d_1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats_2 => avg_pool2d_2
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   feats_3 => avg_pool2d_3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_1 : [num_users=3] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%avg_pool2d, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_2 : [num_users=3] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%avg_pool2d_1, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %avg_pool2d_3 : [num_users=2] = call_function[target=torch.ops.aten.avg_pool2d.default](args = (%avg_pool2d_2, [3, 3], [2, 2], [1, 1]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_avg_pool2d_5 = async_compile.triton('triton_poi_fused_avg_pool2d_5', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 16}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_avg_pool2d_5', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_avg_pool2d_5(in_ptr0, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = xindex // 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], -1, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 2, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp2 & tmp4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 & tmp5
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.load(in_ptr0 + ((-12) + x0 + 16*x1), tmp6 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp1 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp1 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 & tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp5 & tmp10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr0 + ((-8) + x0 + 16*x1), tmp11 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp12 + tmp7
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.full([1], 1, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp14 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp15 & tmp16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp5 & tmp17
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.load(in_ptr0 + ((-4) + x0 + 16*x1), tmp18 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 + tmp13
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp10 & tmp5
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr0 + ((-4) + x0 + 16*x1), tmp21 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 + tmp20
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp10 & tmp10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr0 + (x0 + 16*x1), tmp24 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 + tmp23
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tmp10 & tmp17
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tl.load(in_ptr0 + (4 + x0 + 16*x1), tmp27 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp28 + tmp26
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp17 & tmp5
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr0 + (4 + x0 + 16*x1), tmp30 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp31 + tmp29
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp17 & tmp10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.load(in_ptr0 + (8 + x0 + 16*x1), tmp33 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tmp34 + tmp32
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp17 & tmp17
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.load(in_ptr0 + (12 + x0 + 16*x1), tmp36 & xmask, other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp37 + tmp35
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tl.full([1], 9, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tmp38 / tmp39
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tmp0 < tmp14
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tmp2 & tmp41
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp42 & tmp42
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp1 < tmp14
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tmp8 & tmp44
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tmp42 & tmp45
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp40 + tmp40
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp14 < tmp14
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tmp15 & tmp48
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tmp42 & tmp49
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tmp40 + tmp47
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp45 & tmp42
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp40 + tmp51
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tmp45 & tmp45
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp40 + tmp53
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tmp45 & tmp49
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp40 + tmp55
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp49 & tmp42
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp40 + tmp57
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tmp49 & tmp45
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp40 + tmp59
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp49 & tmp49
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tmp40 + tmp61
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tmp63 / tmp39
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp64 + tmp64
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tmp64 + tmp65
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp64 + tmp66
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp64 + tmp67
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tmp64 + tmp68
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tmp64 + tmp69
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tmp64 + tmp70
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp64 + tmp71
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp72 / tmp39
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2), tmp40, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x2), tmp64, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x2), tmp73, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/cp/ccpm52p646kxy4ney5kq7jctwkxo43sywj63ivfvjwsrrgs6qezn.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten._to_copy]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_1 => convert_element_type_5
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type_5 : [num_users=9] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_2, torch.int64), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_6 = async_compile.triton('triton_poi_fused__to_copy_6', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_6(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.full([1], 0, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3w/c3wzgfhcxi7rlxasz4ub2kkfwcqrjyq5hqphejfky4hjweegc37s.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled, upsampled_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled => convert_element_type, iota
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_1 => clamp_max_6, clamp_min_4, clamp_min_6, mul_5, sub_5
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %convert_element_type : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%iota, torch.float32), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type, 0.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_4 : [num_users=3] = call_function[target=torch.ops.aten.clamp_min.default](args = (%mul_5, 0.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%clamp_min_4, %convert_element_type_7), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_min_6 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%sub_5, 0.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %clamp_max_6 : [num_users=7] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_6, 1.0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__to_copy_arange_clamp_mul_sub_7 = async_compile.triton('triton_poi_fused__to_copy_arange_clamp_mul_sub_7', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 4}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_arange_clamp_mul_sub_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__to_copy_arange_clamp_mul_sub_7(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = 0.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/3p/c3p4rw3p7p7gyp5claxejiqi7pdyo3fhmjmkpeflpniqb5ppjqmj.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [upsampled_1, upsampled_2, upsampled_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_1 => _unsafe_index_4, _unsafe_index_5, add_7, mul_7, sub_6
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_2 => _unsafe_index_8, _unsafe_index_9, add_12, mul_12, sub_11
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   upsampled_3 => _unsafe_index_12, _unsafe_index_13, add_17, mul_17, sub_16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_4 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_1, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_5 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_1, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_5, %_unsafe_index_4), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %clamp_max_6), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_7 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_4, %mul_7), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_8 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_2, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_9 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_2, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_9, %_unsafe_index_8), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %clamp_max_6), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_12 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_8, %mul_12), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_12 : [num_users=2] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_5, %convert_element_type_7]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %_unsafe_index_13 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%convolution_3, [None, None, %convert_element_type_5, %clamp_max_5]), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_16 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%_unsafe_index_13, %_unsafe_index_12), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_16, %clamp_max_6), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_17 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%_unsafe_index_12, %mul_17), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__unsafe_index_add_mul_sub_8 = async_compile.triton('triton_poi_fused__unsafe_index_add_mul_sub_8', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 256}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*i64', 'in_ptr1': '*i64', 'in_ptr2': '*fp32', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__unsafe_index_add_mul_sub_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__unsafe_index_add_mul_sub_8(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 256
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 4) % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex // 16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (x1), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tl.load(in_ptr2 + (x2), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tl.load(in_ptr5 + (x2), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tl.load(in_ptr6 + (x2), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([XBLOCK], 1, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 + tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tmp0 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tl.where(tmp3, tmp2, tmp0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp5 + tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tmp5 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tl.where(tmp7, tmp6, tmp5)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp10 + tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tmp10 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tl.where(tmp12, tmp11, tmp10)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp9 - tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tmp14 * tmp15
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp9 + tmp16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp18 - tmp18
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tmp19 * tmp15
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tmp18 + tmp20
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp22 - tmp22
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tmp23 * tmp15
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tmp22 + tmp24
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x3), tmp17, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (x3), tmp21, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr2 + (x3), tmp25, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fe/cfefbuk4zbsj6tu4xdpar355tfbsidqilf5t2cxlyakwfx4kzcel.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [r], Original ATen: [aten.cat]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   r => cat
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_1, %add_4, %add_9, %add_14, %add_19], 1), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused_cat_9 = async_compile.triton('triton_poi_fused_cat_9', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'x': 2048}, 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*i64', 'in_ptr3': '*i64', 'in_ptr4': '*fp32', 'in_ptr5': '*i64', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*i64', 'in_ptr10': '*i64', 'in_ptr11': '*fp32', 'in_ptr12': '*i64', 'in_ptr13': '*fp32', 'in_ptr14': '*fp32', 'in_ptr15': '*fp32', 'in_ptr16': '*fp32', 'in_ptr17': '*fp32', 'in_ptr18': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_9', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 28, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused_cat_9(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, in_ptr14, in_ptr15, in_ptr16, in_ptr17, in_ptr18, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 1280
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x0 = (xindex % 20)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x3 = xindex // 320
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x4 = ((xindex // 20) % 16)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = ((xindex // 80) % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x1 = ((xindex // 20) % 4)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x5 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = x0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.full([1], 0, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 >= tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.full([1], 4, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = tmp0 < tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tl.load(in_ptr0 + (x4 + 16*(x0) + 64*x3), tmp4 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = tmp0 >= tmp3
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1], 8, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp0 < tmp7
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = tmp6 & tmp8
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tl.load(in_ptr1 + (x4 + 16*((-4) + x0) + 64*x3), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tl.load(in_ptr2 + (x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.full([XBLOCK], 2, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 + tmp12
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tmp11 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tl.where(tmp14, tmp13, tmp11)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.load(in_ptr3 + (x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = tmp16 + tmp12
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = tmp16 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tl.where(tmp18, tmp17, tmp16)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp20 = tl.load(in_ptr4 + (4*tmp19 + 8*tmp15 + 16*x3 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp21 = tl.load(in_ptr5 + (x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp22 = tmp21 + tmp12
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp23 = tmp21 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp24 = tl.where(tmp23, tmp22, tmp21)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp25 = tl.load(in_ptr4 + (4*tmp24 + 8*tmp15 + 16*x3 + ((-4) + x0)), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp26 = tmp25 - tmp20
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp27 = tl.load(in_ptr6 + (x1), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp28 = tmp26 * tmp27
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp29 = tmp20 + tmp28
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp30 = tmp29 - tmp10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp31 = tl.load(in_ptr7 + (x2), tmp9 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp32 = tmp30 * tmp31
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp33 = tmp10 + tmp32
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp34 = tl.full(tmp33.shape, 0.0, tmp33.dtype)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp35 = tl.where(tmp9, tmp33, tmp34)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp36 = tmp0 >= tmp7
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp37 = tl.full([1], 12, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp38 = tmp0 < tmp37
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp39 = tmp36 & tmp38
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp40 = tl.load(in_ptr8 + (x4 + 16*((-8) + x0) + 64*x3), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp41 = tl.load(in_ptr9 + (x2), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp42 = tl.full([XBLOCK], 1, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp43 = tmp41 + tmp42
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp44 = tmp41 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp45 = tl.where(tmp44, tmp43, tmp41)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp46 = tl.load(in_ptr10 + (x1), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp47 = tmp46 + tmp42
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp48 = tmp46 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp49 = tl.where(tmp48, tmp47, tmp46)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp50 = tl.load(in_ptr11 + (4*x3 + ((-8) + x0)), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp51 = tl.load(in_ptr12 + (x1), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp52 = tmp51 + tmp42
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp53 = tmp51 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp54 = tl.where(tmp53, tmp52, tmp51)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp55 = tmp50 - tmp50
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp56 = tl.load(in_ptr13 + (x1), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp57 = tmp55 * tmp56
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp58 = tmp50 + tmp57
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp59 = tmp58 - tmp40
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp60 = tl.load(in_ptr14 + (x2), tmp39 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp61 = tmp59 * tmp60
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp62 = tmp40 + tmp61
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp63 = tl.full(tmp62.shape, 0.0, tmp62.dtype)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp64 = tl.where(tmp39, tmp62, tmp63)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp65 = tmp0 >= tmp37
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp66 = tl.full([1], 16, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp67 = tmp0 < tmp66
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp68 = tmp65 & tmp67
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp69 = tl.load(in_ptr15 + (x4 + 16*((-12) + x0) + 64*x3), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp70 = tl.load(in_ptr9 + (x2), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp71 = tl.full([XBLOCK], 1, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp72 = tmp70 + tmp71
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp73 = tmp70 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp74 = tl.where(tmp73, tmp72, tmp70)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp75 = tl.load(in_ptr10 + (x1), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp76 = tmp75 + tmp71
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp77 = tmp75 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp78 = tl.where(tmp77, tmp76, tmp75)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp79 = tl.load(in_ptr16 + (4*x3 + ((-12) + x0)), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp80 = tl.load(in_ptr12 + (x1), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp81 = tmp80 + tmp71
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp82 = tmp80 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp83 = tl.where(tmp82, tmp81, tmp80)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp84 = tmp79 - tmp79
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp85 = tl.load(in_ptr13 + (x1), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp86 = tmp84 * tmp85
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp87 = tmp79 + tmp86
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp88 = tmp87 - tmp69
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp89 = tl.load(in_ptr14 + (x2), tmp68 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp90 = tmp88 * tmp89
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp91 = tmp69 + tmp90
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp92 = tl.full(tmp91.shape, 0.0, tmp91.dtype)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp93 = tl.where(tmp68, tmp91, tmp92)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp94 = tmp0 >= tmp66
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp95 = tl.full([1], 20, tl.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp96 = tmp0 < tmp95
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp97 = tl.load(in_ptr17 + (x4 + 16*((-16) + x0) + 64*x3), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp98 = tl.load(in_ptr9 + (x2), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp99 = tl.full([XBLOCK], 1, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp100 = tmp98 + tmp99
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp101 = tmp98 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp102 = tl.where(tmp101, tmp100, tmp98)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp103 = tl.load(in_ptr10 + (x1), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp104 = tmp103 + tmp99
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp105 = tmp103 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp106 = tl.where(tmp105, tmp104, tmp103)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp107 = tl.load(in_ptr18 + (4*x3 + ((-16) + x0)), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp108 = tl.load(in_ptr12 + (x1), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp109 = tmp108 + tmp99
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp110 = tmp108 < 0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp111 = tl.where(tmp110, tmp109, tmp108)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp112 = tmp107 - tmp107
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp113 = tl.load(in_ptr13 + (x1), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp114 = tmp112 * tmp113
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp115 = tmp107 + tmp114
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp116 = tmp115 - tmp97
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp117 = tl.load(in_ptr14 + (x2), tmp94 & xmask, eviction_policy='evict_last', other=0.0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp118 = tmp116 * tmp117
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp119 = tmp97 + tmp118
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp120 = tl.full(tmp119.shape, 0.0, tmp119.dtype)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp121 = tl.where(tmp94, tmp119, tmp120)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp122 = tl.where(tmp68, tmp93, tmp121)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp123 = tl.where(tmp39, tmp64, tmp122)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp124 = tl.where(tmp9, tmp35, tmp123)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp125 = tl.where(tmp4, tmp5, tmp124)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x5), tmp125, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # kernel path: inductor_cache/fl/cflis5zcuxyeazhd2guubnpwbzkydfhalg2nwqct6hmmyyyo5eqy.py
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Source node to ATen node mapping:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_2 => add_21, mul_21, mul_22, sub_20
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   input_3 => relu
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] # Graph fragment:
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %sub_20 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_4, %unsqueeze_1), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_21 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_20, %unsqueeze_3), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %mul_22 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_21, %unsqueeze_5), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_22, %unsqueeze_7), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%relu, 0), kwargs = {})
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10', '''
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] import triton.language as tl
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] triton_helpers.set_driver_to_gpu()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton_heuristics.pointwise(
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.DEFAULT,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     filename=__file__,
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*i1', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     min_elem_per_thread=0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] @triton.jit
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ynumel = 4096
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xnumel = 16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yoffset = tl.program_id(1) * YBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     xmask = xindex < xnumel
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     x2 = xindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y0 = (yindex % 1024)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y1 = yindex // 1024
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     y3 = yindex
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp0 = tl.load(in_ptr0 + (y0 + 1024*x2 + 16384*y1), xmask, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp3 = tl.load(in_ptr2 + (y0), None, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp12 = tl.load(in_ptr3 + (y0), None, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp14 = tl.load(in_ptr4 + (y0), None, eviction_policy='evict_last')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp2 = tmp0 - tmp1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp4 = 0.001
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp5 = tmp3 + tmp4
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp6 = libdevice.sqrt(tmp5)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp7 = tl.full([1, 1], 1, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp8 = tmp7 / tmp6
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp9 = 1.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp10 = tmp8 * tmp9
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp11 = tmp2 * tmp10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp13 = tmp11 * tmp12
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp15 = tmp13 + tmp14
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp16 = tl.full([1, 1], 0, tl.int32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp17 = triton_helpers.maximum(tmp16, tmp15)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp18 = 0.0
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tmp19 = tmp17 <= tmp18
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr0 + (x2 + 16*y3), tmp17, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     tl.store(out_ptr1 + (y0 + 1024*x2 + 16384*y1), tmp19, xmask)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] ''', device_str='cuda')
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] async_compile.wait(globals())
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] del async_compile
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def call(args):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10 = args
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     args.clear()
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_1, (4, 4, 4, 4), (64, 16, 4, 1))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_2, (4, 1, 3, 3), (9, 9, 3, 1))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_3, (4, 1, 3, 3), (9, 9, 3, 1))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_4, (4, 1, 3, 3), (9, 9, 3, 1))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_5, (4, 1, 3, 3), (9, 9, 3, 1))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_6, (1024, 20, 1, 1), (20, 1, 1, 1))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_7, (1024, ), (1, ))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_8, (1024, ), (1, ))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_9, (1024, ), (1, ))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     assert_size_stride(primals_10, (1024, ), (1, ))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     with torch.cuda._DeviceGuard(0):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         torch.cuda.set_device(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf0 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feats], Original ATen: [aten.avg_pool2d]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_0.run(primals_1, buf0, 16, 4, grid=grid(16, 4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output], Original ATen: [aten.convolution]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf1 = extern_kernels.convolution(buf0, primals_2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf1, (4, 4, 2, 2), (16, 1, 8, 4))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf2 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._to_copy]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf2, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf3 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.add, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_2.run(buf3, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf4 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_1.run(buf4, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf5 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.add, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_add_clamp_2.run(buf5, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf6 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf6, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf7 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sub_4.run(buf2, buf4, buf1, buf5, buf6, buf7, 256, grid=grid(256), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf8 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled], Original ATen: [aten.sub, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_3.run(buf8, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf9 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf18 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf21 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [feats_1, feats_2, feats_3], Original ATen: [aten.avg_pool2d]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_avg_pool2d_5.run(buf0, buf9, buf18, buf21, 16, grid=grid(16), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_1], Original ATen: [aten.convolution]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf10 = extern_kernels.convolution(buf9, primals_3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf10, (4, 4, 1, 1), (4, 1, 4, 4))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf11 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten._to_copy]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf11, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf12 = empty_strided_cuda((4, 1), (1, 1), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten.add, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf12, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf13 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled, upsampled_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf13, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf14 = empty_strided_cuda((4, ), (1, ), torch.int64)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten.add, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_6.run(buf14, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf15 = empty_strided_cuda((4, ), (1, ), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled, upsampled_1], Original ATen: [aten.arange, aten._to_copy, aten.mul, aten.clamp, aten.sub]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_7.run(buf15, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_2], Original ATen: [aten.convolution]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf19 = extern_kernels.convolution(buf18, primals_4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf19, (4, 4, 1, 1), (4, 1, 4, 4))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [output_3], Original ATen: [aten.convolution]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf22 = extern_kernels.convolution(buf21, primals_5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=4, bias=None)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf22, (4, 4, 1, 1), (4, 1, 4, 4))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf16 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf20 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf23 = empty_strided_cuda((4, 4, 4, 4), (64, 16, 4, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1, upsampled_2, upsampled_3], Original ATen: [aten._unsafe_index, aten.sub, aten.mul, aten.add]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__unsafe_index_add_mul_sub_8.run(buf11, buf13, buf10, buf14, buf15, buf19, buf22, buf16, buf20, buf23, 256, grid=grid(256), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf17 = empty_strided_cuda((4, 1), (1, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [upsampled_1], Original ATen: [aten.sub, aten.clamp]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__to_copy_arange_clamp_mul_sub_7.run(buf17, 4, grid=grid(4), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf24 = empty_strided_cuda((4, 20, 4, 4), (320, 1, 80, 20), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [r], Original ATen: [aten.cat]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused_cat_9.run(primals_1, buf7, buf3, buf4, buf1, buf5, buf6, buf8, buf16, buf12, buf13, buf10, buf14, buf15, buf17, buf20, buf19, buf23, buf22, buf24, 1280, grid=grid(1280), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf16
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf19
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf20
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf22
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf23
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del buf7
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_1
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf25 = extern_kernels.convolution(buf24, primals_6, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         assert_size_stride(buf25, (4, 1024, 4, 4), (16384, 1, 4096, 1024))
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf26 = empty_strided_cuda((4, 1024, 4, 4), (16384, 16, 4, 1), torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         buf27 = empty_strided_cuda((4, 1024, 4, 4), (16384, 1, 4096, 1024), torch.bool)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         # Topologically Sorted Source Nodes: [input_2, input_3], Original ATen: [aten._native_batch_norm_legit_no_training, aten.relu, aten.threshold_backward]
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         stream0 = get_raw_stream(0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         triton_poi_fused__native_batch_norm_legit_no_training_relu_threshold_backward_10.run(buf25, primals_7, primals_8, primals_9, primals_10, buf26, buf27, 4096, 16, grid=grid(4096, 16), stream=stream0)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]         del primals_10
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return (buf26, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, buf0, buf2, buf3, buf4, buf5, buf6, buf8, buf9, buf11, buf12, buf13, buf14, buf15, buf17, buf18, buf21, buf24, buf25, buf27, )
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_1 = rand_strided((4, 4, 4, 4), (64, 16, 4, 1), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_2 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_3 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_4 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_5 = rand_strided((4, 1, 3, 3), (9, 9, 3, 1), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_6 = rand_strided((1024, 20, 1, 1), (20, 1, 1, 1), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_7 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_8 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_9 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     primals_10 = rand_strided((1024, ), (1, ), device='cuda:0', dtype=torch.float32)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10])
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] if __name__ == "__main__":
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:34:38.942000 3476314 site-packages/torch/_inductor/graph.py:2045] [0/0] [__output_code] 
V0205 20:34:38.963000 3476314 site-packages/torch/_inductor/graph.py:2053] [0/0] [__output_code] Output code written to: inductor_cache/c6/cc6gtyv3cdawh4g2cxeef72wuyjv3id7oa4v2aftymt6ijhv3ysf.py
