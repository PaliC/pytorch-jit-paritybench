V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] Output code: 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] # AOT ID: ['0_inference']
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import torch
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import math
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import random
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import os
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import tempfile
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from math import inf, nan
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch import device, empty_strided
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] aten = torch.ops.aten
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] _quantized = torch.ops._quantized
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile = AsyncCompile()
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] cpp_fused__to_copy_stack_0 = async_compile.cpp_pybinding(['const float*', 'const int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'float*'], '''
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] #include "/tmp/torchinductor_sahanp/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        const int64_t* in_ptr1,
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr0,
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr1,
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr2,
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr3,
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        float* out_ptr4)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*((static_cast<int64_t>(x0) % static_cast<int64_t>(64L)));
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr0[static_cast<int64_t>(4L*x0)] = tmp1;
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*(c10::div_floor_integer(static_cast<int64_t>(x0), static_cast<int64_t>(64L)));
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr1[static_cast<int64_t>(4L*x0)] = tmp1;
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*((static_cast<int64_t>(x0) % static_cast<int64_t>(64L)));
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr2[static_cast<int64_t>(4L*x0)] = tmp1;
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*(c10::div_floor_integer(static_cast<int64_t>(x0), static_cast<int64_t>(64L)));
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr3[static_cast<int64_t>(4L*x0)] = tmp1;
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(36864L); x0+=static_cast<int64_t>(1L))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(4L); x1+=static_cast<int64_t>(16L))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     if(C10_LIKELY(x1 >= static_cast<int64_t>(0L) && x1 < static_cast<int64_t>(1)))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         for (int64_t x1_tail = static_cast<int64_t>(0L);x1_tail < static_cast<int64_t>(4L); x1_tail++)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         {
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             auto tmp0 = in_ptr0[static_cast<int64_t>(x1_tail + 4L*((static_cast<int64_t>(x0) % static_cast<int64_t>(9L))))];
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             auto tmp2 = in_ptr1[static_cast<int64_t>(x1_tail + 4L*(c10::div_floor_integer(static_cast<int64_t>(x0), static_cast<int64_t>(9L))))];
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             auto tmp1 = c10::convert<double>(tmp0);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             auto tmp3 = c10::convert<double>(tmp2);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             auto tmp4 = decltype(tmp1)(tmp1 + tmp3);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             auto tmp5 = c10::convert<float>(tmp4);
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                             out_ptr4[static_cast<int64_t>(x1_tail + 4L*x0)] = tmp5;
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] }
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] ''')
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile.wait(globals())
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] del async_compile
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def call(args):
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1, = args
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     args.clear()
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     assert_size_stride(arg0_1, (9, 4), (4, 1))
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf4 = empty_strided_cpu((4096, 4), (4, 1), torch.int64)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf0 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 0)  # alias
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf1 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 1)  # alias
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf2 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 2)  # alias
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf3 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 3)  # alias
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf5 = empty_strided_cpu((36864, 4), (4, 1), torch.float32)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     cpp_fused__to_copy_stack_0(arg0_1, buf4, buf0, buf1, buf2, buf3, buf5)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     del arg0_1
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return (buf5, )
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1 = rand_strided((9, 4), (4, 1), device='cpu', dtype=torch.float32)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     fn = lambda: call([arg0_1])
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] if __name__ == "__main__":
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:13:11.274000 1262385 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0204 15:13:11.281000 1262385 site-packages/torch/_inductor/graph.py:2053] [2/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/e7/ce7rtgk2wnygl7yfxxsdmgs6pkp44tdfub6zqdxmsepi3sejefnu.py
I0204 15:13:12.653000 1262385 site-packages/torch/_inductor/graph.py:2087] [2/0] [__output_code] Output code written to: /tmp/torchinductor_sahanp/e7/ce7rtgk2wnygl7yfxxsdmgs6pkp44tdfub6zqdxmsepi3sejefnu.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] Output code: 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # AOT ID: ['1_forward']
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from ctypes import c_void_p, c_long, c_int
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import torch
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import random
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import os
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import tempfile
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from math import inf, nan
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.utils import maybe_profile
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch import device, empty_strided
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_heuristics import (
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     grid,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     split_scan_grid,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     grid_combo_kernels,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     start_graph,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     end_graph,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     cooperative_reduction_grid,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._C import _cuda_getCurrentRawStream as get_raw_stream
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] aten = torch.ops.aten
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] inductor_ops = torch.ops.inductor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] _quantized = torch.ops._quantized
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] async_compile = AsyncCompile()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ok/cok4ohszotcxuq6557sb76xdvcns73rpjm2eqd4wd5phgeqf3m6a.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [sub], Original ATen: [aten.sub]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   sub => sub
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select, %select_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_sub_0 = async_compile.triton('triton_poi_fused_sub_0', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 65536}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sub_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_sub_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 36864
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/gt/cgtb7ww6s6adbvfhb6uq7tbabndra742pvth2ouz4pqywywjvxqi.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [sub_1], Original ATen: [aten.sub]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   sub_1 => sub_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_2, %select_3), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_sub_1 = async_compile.triton('triton_poi_fused_sub_1', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 65536}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_sub_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_sub_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 36864
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (3 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (1 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp2, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/v5/cv5elevlszzy6waplka52y4atlk766fovi7ssd2k26akheel7aur.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [exp], Original ATen: [aten.exp]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   exp => exp
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %exp : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%slice_12,), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_exp_2 = async_compile.triton('triton_poi_fused_exp_2', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 65536}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_exp_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_exp_2(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 36864
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl_math.exp(tmp0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ge/cgeaihh7yuicmcgxtqyccblxdzl4vpepwkixxsgot4fxiizzxsk4.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [exp_1], Original ATen: [aten.exp]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   exp_1 => exp_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %exp_1 : [num_users=2] = call_function[target=torch.ops.aten.exp.default](args = (%slice_14,), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_exp_3 = async_compile.triton('triton_poi_fused_exp_3', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 65536}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_exp_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_exp_3(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 36864
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (3 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl_math.exp(tmp0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp1, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/zt/czthqhvlphzs67bvzvii5xflwr2kgmrwmocbafuy4isaaqsxfmuy.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [dst_bbox], Original ATen: [aten.zeros_like]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   dst_bbox => full
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %full : [num_users=3] = call_function[target=torch.ops.aten.full.default](args = ([36864, 4], 0), kwargs = {dtype: torch.float32, layout: torch.strided, device: cuda:0, pin_memory: False})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_zeros_like_4 = async_compile.triton('triton_poi_fused_zeros_like_4', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 262144}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_zeros_like_4', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_zeros_like_4(out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 147456
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = 0.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp0, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/qi/cqihwbib56ostpee2guu73433ezzmwqgpk3mrq3y7le24m5tt3sf.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [mul, src_ctr_x, mul_1, src_ctr_y, mul_2, ctr_x, mul_3, ctr_y, w, h, mul_6, sub_2, setitem, mul_7, sub_3, setitem_1, add_4, setitem_2, add_5, setitem_3], Original ATen: [aten.mul, aten.add, aten.sub, aten.copy]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   add_4 => add_4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   add_5 => add_5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   ctr_x => add_2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   ctr_y => add_3
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   h => mul_5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   mul => mul
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   mul_1 => mul_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   mul_2 => mul_2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   mul_3 => mul_3
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   mul_6 => mul_6
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   mul_7 => mul_7
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   setitem => copy
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   setitem_1 => copy_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   setitem_2 => copy_2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   setitem_3 => copy_3
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   src_ctr_x => add
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   src_ctr_y => add_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   sub_2 => sub_2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   sub_3 => sub_3
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   w => mul_4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze, 0.5), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze_2, %mul), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%unsqueeze_1, 0.5), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%unsqueeze_3, %mul_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_8, %unsqueeze), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %add_2 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %add), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%slice_10, %unsqueeze_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %add_3 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_3, %add_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp, %unsqueeze), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%exp_1, %unsqueeze_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_6 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, 0.5), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_2, %mul_6), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %copy : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_16, %sub_2), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %slice_scatter_default : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%full, %copy, 1, 0, 9223372036854775807, 4), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %mul_7 : [num_users=2] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_5, 0.5), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %sub_3 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_3, %mul_7), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %copy_1 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_25, %sub_3), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %slice_scatter_default_1 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default, %copy_1, 1, 1, 9223372036854775807, 4), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_2, %mul_6), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %copy_2 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_34, %add_4), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %slice_scatter_default_2 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_1, %copy_2, 1, 2, 9223372036854775807, 4), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_3, %mul_7), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %copy_3 : [num_users=1] = call_function[target=torch.ops.aten.copy.default](args = (%slice_43, %add_5), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %slice_scatter_default_3 : [num_users=2] = call_function[target=torch.ops.aten.slice_scatter.default](args = (%slice_scatter_default_2, %copy_3, 1, 3, 9223372036854775807, 4), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_add_copy_mul_sub_5 = async_compile.triton('triton_poi_fused_add_copy_mul_sub_5', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 262144}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_copy_mul_sub_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 16, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_add_copy_mul_sub_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 147456
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = (xindex % 4)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x1 = xindex // 4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x2 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = x0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 >= tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp3 = (((-1) + x0) % 4)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp4 = tl.full([1], 0, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp5 = tmp3 == tmp4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp6 = tmp2 & tmp5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp7 = tl.load(in_ptr0 + (1 + 4*x1), tmp6, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp8 = tl.load(in_ptr1 + (x1), tmp6, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp9 = tmp7 * tmp8
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp10 = tl.load(in_ptr2 + (1 + 4*x1), tmp6, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp11 = 0.5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp12 = tmp8 * tmp11
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp13 = tmp10 + tmp12
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp14 = tmp9 + tmp13
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp15 = tl.load(in_ptr3 + (x1), tmp6, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp16 = tmp15 * tmp8
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp17 = tmp16 * tmp11
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp18 = tmp14 - tmp17
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp19 = tl.full(tmp18.shape, 0.0, tmp18.dtype)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp20 = tl.where(tmp6, tmp18, tmp19)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp21 = tmp0 == tmp4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp22 = tl.load(in_ptr0 + (4*x1), tmp21, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp23 = tl.load(in_ptr4 + (x1), tmp21, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp24 = tmp22 * tmp23
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp25 = tl.load(in_ptr2 + (4*x1), tmp21, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp26 = 0.5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp27 = tmp23 * tmp26
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp28 = tmp25 + tmp27
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp29 = tmp24 + tmp28
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp30 = tl.load(in_ptr5 + (x1), tmp21, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp31 = tmp30 * tmp23
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp32 = tmp31 * tmp26
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp33 = tmp29 - tmp32
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp34 = tl.full(tmp33.shape, 0.0, tmp33.dtype)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp35 = tl.where(tmp21, tmp33, tmp34)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp36 = 0.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp37 = tl.where(tmp21, tmp35, tmp36)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp38 = tl.where(tmp6, tmp20, tmp37)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp39 = tl.full([1], 2, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp40 = tmp0 >= tmp39
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp41 = (((-2) + x0) % 4)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp42 = tmp41 == tmp4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp43 = tmp40 & tmp42
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp44 = tl.load(in_ptr0 + (4*x1), tmp43, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp45 = tl.load(in_ptr4 + (x1), tmp43, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp46 = tmp44 * tmp45
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp47 = tl.load(in_ptr2 + (4*x1), tmp43, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp48 = 0.5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp49 = tmp45 * tmp48
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp50 = tmp47 + tmp49
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp51 = tmp46 + tmp50
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp52 = tl.load(in_ptr5 + (x1), tmp43, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp53 = tmp52 * tmp45
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp54 = tmp53 * tmp48
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp55 = tmp51 + tmp54
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp56 = tl.full(tmp55.shape, 0.0, tmp55.dtype)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp57 = tl.where(tmp43, tmp55, tmp56)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp58 = tl.where(tmp43, tmp57, tmp38)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp59 = tl.full([1], 3, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp60 = tmp0 >= tmp59
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp61 = (((-3) + x0) % 4)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp62 = tmp61 == tmp4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp63 = tmp60 & tmp62
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp64 = tl.load(in_ptr0 + (1 + 4*x1), tmp63, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp65 = tl.load(in_ptr1 + (x1), tmp63, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp66 = tmp64 * tmp65
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp67 = tl.load(in_ptr2 + (1 + 4*x1), tmp63, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp68 = 0.5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp69 = tmp65 * tmp68
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp70 = tmp67 + tmp69
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp71 = tmp66 + tmp70
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp72 = tl.load(in_ptr3 + (x1), tmp63, eviction_policy='evict_last', other=0.0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp73 = tmp72 * tmp65
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp74 = tmp73 * tmp68
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp75 = tmp71 + tmp74
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp76 = tl.full(tmp75.shape, 0.0, tmp75.dtype)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp77 = tl.where(tmp63, tmp75, tmp76)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp78 = tl.where(tmp63, tmp77, tmp58)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(in_out_ptr0 + (x2), tmp78, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/so/cso7mjiic5lquoanujqh5pfazx343uhbyaynbnbe32ehn64sq42n.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [getitem_10], Original ATen: [aten.index, aten.ge, aten.le, aten.logical_and]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   getitem_10 => index
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %index : [num_users=3] = call_function[target=torch.ops.aten.index.Tensor](args = (%slice_scatter_default_3, [None, %lift_fresh_copy]), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %ge_3 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%index, 0), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %le_1 : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%index, 64), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %logical_and_1 : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_3, %le_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_ge_index_le_logical_and_6 = async_compile.triton('triton_poi_fused_ge_index_le_logical_and_6', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 131072}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_ge_index_le_logical_and_6', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_ge_index_le_logical_and_6(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 73728
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = (xindex % 2)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x1 = xindex // 2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x2 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = x0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp3 = tl.full([1], 0, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp4 = tl.full([1], 2, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (tmp5 + 4*x1), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp7 = 0.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp8 = tmp6 >= tmp7
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp9 = 64.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp10 = tmp6 <= tmp9
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp11 = tmp8 & tmp10
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp11, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/je/cjeakvnuibg2q2p3tdbo2sci3xvxtt6wecmmy7lhhpbfrpxzt6pq.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [getitem_10, clamp, setitem_4], Original ATen: [aten.index, aten.clamp, aten.index_put]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   clamp => clamp_max, clamp_min
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   getitem_10 => index
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   setitem_4 => index_put
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %index : [num_users=3] = call_function[target=torch.ops.aten.index.Tensor](args = (%slice_scatter_default_3, [None, %lift_fresh_copy]), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %clamp_min : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%index, 0), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %clamp_max : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min, 64), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %index_put : [num_users=2] = call_function[target=torch.ops.aten.index_put_.default](args = (%slice_scatter_default_3, [None, %lift_fresh_copy_1], %clamp_max), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_clamp_index_index_put_7 = async_compile.triton('triton_poi_fused_clamp_index_index_put_7', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 131072}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_index_index_put_7', 'mutated_arg_names': ['in_ptr0', 'out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_clamp_index_index_put_7(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 73728
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = (xindex % 2)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x1 = xindex // 2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = x0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp3 = tl.full([1], 0, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp4 = tl.full([1], 2, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp5 = tl.where(tmp2, tmp3, tmp4)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (tmp5 + 4*x1), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp7 = 0.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp8 = triton_helpers.maximum(tmp6, tmp7)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp9 = 64.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp10 = triton_helpers.minimum(tmp8, tmp9)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (tmp5 + 4*x1), tmp10, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4z/c4zudovhnohd4qwsucero2mgzuzugig3dr573t3vpiymxzqiukov.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [getitem_11], Original ATen: [aten.index, aten.ge, aten.le, aten.logical_and]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   getitem_11 => index_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %index_1 : [num_users=3] = call_function[target=torch.ops.aten.index.Tensor](args = (%index_put, [None, %lift_fresh_copy_2]), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %ge_2 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%index_1, 0), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %le : [num_users=1] = call_function[target=torch.ops.aten.le.Scalar](args = (%index_1, 64), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %logical_and : [num_users=1] = call_function[target=torch.ops.aten.logical_and.default](args = (%ge_2, %le), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_ge_index_le_logical_and_8 = async_compile.triton('triton_poi_fused_ge_index_le_logical_and_8', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 131072}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr1': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_ge_index_le_logical_and_8', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_ge_index_le_logical_and_8(in_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 73728
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = (xindex % 2)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x1 = xindex // 2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x2 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = x0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp3 = tl.full([1], 3, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp4 = tl.where(tmp2, tmp1, tmp3)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (tmp4 + 4*x1), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp6 = 0.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp7 = tmp5 >= tmp6
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp8 = 64.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp9 = tmp5 <= tmp8
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp10 = tmp7 & tmp9
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr1 + (x2), tmp10, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/ks/cks2db56ahx32ilvtruh2x7nekshzunifcrl7alzso67clh5sp6i.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [getitem_11, clamp_1, setitem_5], Original ATen: [aten.index, aten.clamp, aten.index_put]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   clamp_1 => clamp_max_1, clamp_min_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   getitem_11 => index_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   setitem_5 => index_put_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %index_1 : [num_users=3] = call_function[target=torch.ops.aten.index.Tensor](args = (%index_put, [None, %lift_fresh_copy_2]), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %clamp_min_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_min.default](args = (%index_1, 0), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %clamp_max_1 : [num_users=1] = call_function[target=torch.ops.aten.clamp_max.default](args = (%clamp_min_1, 64), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %index_put_1 : [num_users=5] = call_function[target=torch.ops.aten.index_put_.default](args = (%index_put, [None, %lift_fresh_copy_3], %clamp_max_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_clamp_index_index_put_9 = async_compile.triton('triton_poi_fused_clamp_index_index_put_9', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 131072}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_clamp_index_index_put_9', 'mutated_arg_names': ['in_ptr0', 'out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_clamp_index_index_put_9(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 73728
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = (xindex % 2)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x1 = xindex // 2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = x0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.full([1], 1, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 < tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp3 = tl.full([1], 3, tl.int64)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp4 = tl.where(tmp2, tmp1, tmp3)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (tmp4 + 4*x1), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp6 = 0.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp7 = triton_helpers.maximum(tmp5, tmp6)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp8 = 64.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp9 = triton_helpers.minimum(tmp7, tmp8)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (tmp4 + 4*x1), tmp9, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # kernel path: /tmp/torchinductor_sahanp/4q/c4qwyjietypq2i3rmhp2auyzuw4ehtwm7e2hqsubcyhvm3kppuq4.py
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Topologically Sorted Source Nodes: [sub_4, ge, sub_5, ge_1, and_], Original ATen: [aten.sub, aten.ge, aten.bitwise_and]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Source node to ATen node mapping:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   and_ => bitwise_and
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   ge => ge
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   ge_1 => ge_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   sub_4 => sub_4
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   sub_5 => sub_5
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] # Graph fragment:
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_8, %select_9), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %ge : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%sub_4, 16.0), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%select_12, %select_13), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %ge_1 : [num_users=1] = call_function[target=torch.ops.aten.ge.Scalar](args = (%sub_5, 16.0), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] #   %bitwise_and : [num_users=1] = call_function[target=torch.ops.aten.bitwise_and.Tensor](args = (%ge, %ge_1), kwargs = {})
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_poi_fused_bitwise_and_ge_sub_10 = async_compile.triton('triton_poi_fused_bitwise_and_ge_sub_10', '''
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] import triton.language as tl
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from triton.compiler.compiler import AttrsDescriptor
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime import triton_helpers, triton_heuristics
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] triton_helpers.set_driver_to_gpu()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton_heuristics.pointwise(
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     size_hints={'x': 65536}, 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     filename=__file__,
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*i1', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_bitwise_and_ge_sub_10', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     min_elem_per_thread=0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] @triton.jit
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def triton_poi_fused_bitwise_and_ge_sub_10(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xnumel = 36864
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xoffset = tl.program_id(0) * XBLOCK
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xindex = xoffset + tl.arange(0, XBLOCK)[:]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     xmask = tl.full([XBLOCK], True, tl.int1)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     x0 = xindex
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp0 = tl.load(in_ptr0 + (2 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp1 = tl.load(in_ptr0 + (4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp5 = tl.load(in_ptr0 + (3 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp6 = tl.load(in_ptr0 + (1 + 4*x0), None, eviction_policy='evict_last')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp2 = tmp0 - tmp1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp3 = 16.0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp4 = tmp2 >= tmp3
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp7 = tmp5 - tmp6
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp8 = tmp7 >= tmp3
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tmp9 = tmp4 & tmp8
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     tl.store(out_ptr0 + (x0), tmp9, None)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] ''', device_str='cuda')
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] async_compile.wait(globals())
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] del async_compile
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def call(args):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     primals_1, primals_2 = args
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     args.clear()
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     assert_size_stride(primals_1, (36864, 4), (4, 1))
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     assert_size_stride(primals_2, (36864, 4), (4, 1))
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     with torch.cuda._DeviceGuard(0):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         torch.cuda.set_device(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf0 = empty_strided_cuda((36864, 4), (4, 1), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf0.copy_(primals_1, False)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         del primals_1
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf1 = empty_strided_cuda((36864, ), (1, ), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sub], Original ATen: [aten.sub]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_sub_0.run(buf0, buf1, 36864, grid=grid(36864), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf2 = empty_strided_cuda((36864, ), (1, ), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sub_1], Original ATen: [aten.sub]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_sub_1.run(buf0, buf2, 36864, grid=grid(36864), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf3 = empty_strided_cuda((36864, 1), (1, 1), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [exp], Original ATen: [aten.exp]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_exp_2.run(primals_2, buf3, 36864, grid=grid(36864), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf4 = empty_strided_cuda((36864, 1), (1, 1), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [exp_1], Original ATen: [aten.exp]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_exp_3.run(primals_2, buf4, 36864, grid=grid(36864), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf5 = empty_strided_cuda((36864, 4), (4, 1), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [dst_bbox], Original ATen: [aten.zeros_like]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_zeros_like_4.run(buf5, 147456, grid=grid(147456), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf6 = empty_strided_cuda((36864, 4), (4, 1), torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf7 = buf6; del buf6  # reuse
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf8 = buf7; del buf7  # reuse
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [mul, src_ctr_x, mul_1, src_ctr_y, mul_2, ctr_x, mul_3, ctr_y, w, h, mul_6, sub_2, setitem, mul_7, sub_3, setitem_1, add_4, setitem_2, add_5, setitem_3], Original ATen: [aten.mul, aten.add, aten.sub, aten.copy]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_add_copy_mul_sub_5.run(buf8, primals_2, buf2, buf0, buf4, buf1, buf3, 147456, grid=grid(147456), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         del buf0
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         del primals_2
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf19 = empty_strided_cuda((36864, 2), (2, 1), torch.bool)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [getitem_10], Original ATen: [aten.index, aten.ge, aten.le, aten.logical_and]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_ge_index_le_logical_and_6.run(buf8, buf19, 73728, grid=grid(73728), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [getitem_10, clamp, setitem_4], Original ATen: [aten.index, aten.clamp, aten.index_put]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_clamp_index_index_put_7.run(buf8, buf8, 73728, grid=grid(73728), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf18 = empty_strided_cuda((36864, 2), (2, 1), torch.bool)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [getitem_11], Original ATen: [aten.index, aten.ge, aten.le, aten.logical_and]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_ge_index_le_logical_and_8.run(buf8, buf18, 73728, grid=grid(73728), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [getitem_11, clamp_1, setitem_5], Original ATen: [aten.index, aten.clamp, aten.index_put]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_clamp_index_index_put_9.run(buf8, buf8, 73728, grid=grid(73728), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         buf17 = empty_strided_cuda((36864, ), (1, ), torch.bool)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         # Topologically Sorted Source Nodes: [sub_4, ge, sub_5, ge_1, and_], Original ATen: [aten.sub, aten.ge, aten.bitwise_and]
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         stream0 = get_raw_stream(0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]         triton_poi_fused_bitwise_and_ge_sub_10.run(buf8, buf17, 36864, grid=grid(36864), stream=stream0)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     return (buf17, buf8, reinterpret_tensor(buf1, (36864, 1), (1, 1), 0), reinterpret_tensor(buf2, (36864, 1), (1, 1), 0), buf3, buf4, buf5, buf18, buf19, )
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     from torch._dynamo.testing import rand_strided
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     from torch._inductor.utils import print_performance
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     primals_1 = rand_strided((36864, 4), (4, 1), device='cpu', dtype=torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     primals_2 = rand_strided((36864, 4), (4, 1), device='cuda:0', dtype=torch.float32)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     fn = lambda: call([primals_1, primals_2])
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] if __name__ == "__main__":
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0204 15:13:13.315000 1262385 site-packages/torch/_inductor/graph.py:2045] [3/0_1] [__output_code] 
V0204 15:13:13.329000 1262385 site-packages/torch/_inductor/graph.py:2053] [3/0_1] [__output_code] Output code written to: /tmp/torchinductor_sahanp/fc/cfcbixraawlry2ubqwes52qdfjfgga3m3moy5d4y4q22u7xufclo.py
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] Output code: 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] # AOT ID: ['0_inference']
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from ctypes import c_void_p, c_long, c_int
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import torch
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import math
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import random
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import os
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] import tempfile
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from math import inf, nan
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.hooks import run_intermediate_hooks
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.utils import maybe_profile
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.memory_planning import _align as align
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch import device, empty_strided
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.async_compile import AsyncCompile
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.select_algorithm import extern_kernels
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] from torch._inductor.codegen.multi_kernel import MultiKernelCall
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] aten = torch.ops.aten
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] inductor_ops = torch.ops.inductor
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] _quantized = torch.ops._quantized
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] assert_size_stride = torch._C._dynamo.guards.assert_size_stride
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] alloc_from_pool = torch.ops.inductor._alloc_from_pool
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile = AsyncCompile()
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] cpp_fused__to_copy_stack_0 = async_compile.cpp_pybinding(['const float*', 'const int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'int64_t*', 'float*'], '''
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] #include "inductor_cache/2r/c2rnilspx43ivnzu4uieul65kx65dfhfbptbh5og4wk6rqebuxoo.h"
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] extern "C"  void kernel(const float* in_ptr0,
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        const int64_t* in_ptr1,
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr0,
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr1,
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr2,
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        int64_t* out_ptr3,
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                        float* out_ptr4)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*((static_cast<int64_t>(x0) % static_cast<int64_t>(64L)));
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr0[static_cast<int64_t>(4L*x0)] = tmp1;
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*(c10::div_floor_integer(static_cast<int64_t>(x0), static_cast<int64_t>(64L)));
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr1[static_cast<int64_t>(4L*x0)] = tmp1;
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*((static_cast<int64_t>(x0) % static_cast<int64_t>(64L)));
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr2[static_cast<int64_t>(4L*x0)] = tmp1;
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(4096L); x0+=static_cast<int64_t>(1L))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp0 = 16L*(c10::div_floor_integer(static_cast<int64_t>(x0), static_cast<int64_t>(64L)));
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     auto tmp1 = c10::convert<int64_t>(tmp0);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     out_ptr3[static_cast<int64_t>(4L*x0)] = tmp1;
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         #pragma GCC ivdep
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         for(int64_t x0=static_cast<int64_t>(0L); x0<static_cast<int64_t>(36864L); x0+=static_cast<int64_t>(1L))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             #pragma GCC ivdep
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             for(int64_t x1=static_cast<int64_t>(0L); x1<static_cast<int64_t>(4L); x1+=static_cast<int64_t>(1L))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     {
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp0 = in_ptr0[static_cast<int64_t>(x1 + 4L*((static_cast<int64_t>(x0) % static_cast<int64_t>(9L))))];
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp2 = in_ptr1[static_cast<int64_t>(x1 + 4L*(c10::div_floor_integer(static_cast<int64_t>(x0), static_cast<int64_t>(9L))))];
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp1 = c10::convert<double>(tmp0);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp3 = c10::convert<double>(tmp2);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp4 = decltype(tmp1)(tmp1 + tmp3);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         auto tmp5 = c10::convert<float>(tmp4);
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                         out_ptr4[static_cast<int64_t>(x1 + 4L*x0)] = tmp5;
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                     }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]                 }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]             }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]         }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] }
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] ''')
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] async_compile.wait(globals())
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] del async_compile
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def call(args):
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1, = args
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     args.clear()
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     assert_size_stride(arg0_1, (9, 4), (4, 1))
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf4 = empty_strided_cpu((4096, 4), (4, 1), torch.int64)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf0 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 0)  # alias
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf1 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 1)  # alias
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf2 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 2)  # alias
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf3 = reinterpret_tensor(buf4, (4096, 1), (4, 1), 3)  # alias
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     buf5 = empty_strided_cpu((36864, 4), (4, 1), torch.float32)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     cpp_fused__to_copy_stack_0(arg0_1, buf4, buf0, buf1, buf2, buf3, buf5)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     del arg0_1
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return (buf5, )
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] def benchmark_compiled_module(times=10, repeat=10):
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._dynamo.testing import rand_strided
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.utils import print_performance
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     arg0_1 = rand_strided((9, 4), (4, 1), device='cpu', dtype=torch.float32)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     fn = lambda: call([arg0_1])
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     return print_performance(fn, times=times, repeat=repeat)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] if __name__ == "__main__":
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     from torch._inductor.wrapper_benchmark import compiled_module_main
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code]     compiled_module_main('None', benchmark_compiled_module)
V0205 20:02:38.096000 2584163 site-packages/torch/_inductor/graph.py:2045] [2/0] [__output_code] 
V0205 20:02:38.102000 2584163 site-packages/torch/_inductor/graph.py:2053] [2/0] [__output_code] Output code written to: inductor_cache/3q/c3qx2t77cwbspg4qg7bkbucwo62wuhy4osznkxv462fpgbz2ufks.py
