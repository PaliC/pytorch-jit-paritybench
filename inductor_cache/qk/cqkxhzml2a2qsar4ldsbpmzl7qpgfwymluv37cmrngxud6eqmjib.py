# AOT ID: ['7_forward']
from ctypes import c_void_p, c_long, c_int
import torch
import math
import random
import os
import tempfile
from math import inf, nan
from torch._inductor.hooks import run_intermediate_hooks
from torch._inductor.utils import maybe_profile
from torch._inductor.codegen.memory_planning import _align as align
from torch import device, empty_strided
from torch._inductor.async_compile import AsyncCompile
from torch._inductor.select_algorithm import extern_kernels
from torch._inductor.codegen.multi_kernel import MultiKernelCall
import triton
import triton.language as tl
from torch._inductor.runtime.triton_heuristics import (
    grid,
    split_scan_grid,
    grid_combo_kernels,
    start_graph,
    end_graph,
    cooperative_reduction_grid,
)
from torch._C import _cuda_getCurrentRawStream as get_raw_stream
from torch._C import _cuda_getCurrentRawStream as get_raw_stream

aten = torch.ops.aten
inductor_ops = torch.ops.inductor
_quantized = torch.ops._quantized
assert_size_stride = torch._C._dynamo.guards.assert_size_stride
empty_strided_cpu = torch._C._dynamo.guards._empty_strided_cpu
empty_strided_cuda = torch._C._dynamo.guards._empty_strided_cuda
empty_strided_xpu = torch._C._dynamo.guards._empty_strided_xpu
reinterpret_tensor = torch._C._dynamo.guards._reinterpret_tensor
alloc_from_pool = torch.ops.inductor._alloc_from_pool
async_compile = AsyncCompile()
empty_strided_p2p = torch._C._distributed_c10d._SymmetricMemory.empty_strided_p2p


# kernel path: inductor_cache/c4/cc4imz3vggpxflm4k2ligdp7sr7uxvronipdhyb2lyebvnmf6zdy.py
# Unsorted Source Nodes: [], Original ATen: []
# Source node to ATen node mapping:
triton_poi_fused_0 = async_compile.triton('triton_poi_fused_0', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'y': 256, 'x': 64}, tile_hint=TileHint.SQUARE,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_0(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
    ynumel = 192
    xnumel = 49
    yoffset = tl.program_id(1) * YBLOCK
    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
    ymask = yindex < ynumel
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    x2 = xindex
    y3 = yindex
    y0 = (yindex % 3)
    y1 = yindex // 3
    tmp0 = tl.load(in_ptr0 + (x2 + 49*y3), xmask & ymask, eviction_policy='evict_last')
    tl.store(out_ptr0 + (y0 + 3*x2 + 147*y1), tmp0, xmask & ymask)
''', device_str='cuda')


# kernel path: inductor_cache/f3/cf3yvvrx2dp4pn5dwcyzm6qhg7y76yekqxcww4ry23bgzk3jew7k.py
# Unsorted Source Nodes: [], Original ATen: []
# Source node to ATen node mapping:
triton_poi_fused_1 = async_compile.triton('triton_poi_fused_1', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'y': 16, 'x': 4096}, tile_hint=TileHint.SQUARE,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_1(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
    ynumel = 12
    xnumel = 4096
    yoffset = tl.program_id(1) * YBLOCK
    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
    ymask = yindex < ynumel
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
    x2 = xindex
    y3 = yindex
    y0 = (yindex % 3)
    y1 = yindex // 3
    tmp0 = tl.load(in_ptr0 + (x2 + 4096*y3), ymask, eviction_policy='evict_last')
    tl.store(out_ptr0 + (y0 + 3*x2 + 12288*y1), tmp0, ymask)
''', device_str='cuda')


# kernel path: inductor_cache/az/cazdt4eac53o47y4abuwbxvsaadhafr2pfig3u32lsk5wu2h4nog.py
# Unsorted Source Nodes: [], Original ATen: []
# Source node to ATen node mapping:
triton_poi_fused_2 = async_compile.triton('triton_poi_fused_2', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'y': 4096, 'x': 16}, tile_hint=TileHint.SQUARE,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_2', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_2(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
    ynumel = 4096
    xnumel = 9
    yoffset = tl.program_id(1) * YBLOCK
    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
    ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    x2 = xindex
    y3 = yindex
    y0 = (yindex % 64)
    y1 = yindex // 64
    tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask, eviction_policy='evict_last')
    tl.store(out_ptr0 + (y0 + 64*x2 + 576*y1), tmp0, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/sc/cscb23htajoklp42t24y7rwwubdsyudwhoqjms4bv5zrxbry6omx.py
# Unsorted Source Nodes: [], Original ATen: []
# Source node to ATen node mapping:
triton_poi_fused_3 = async_compile.triton('triton_poi_fused_3', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'y': 4, 'x': 16}, tile_hint=TileHint.SQUARE,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_3', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_3(in_ptr0, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
    ynumel = 4
    xnumel = 9
    yoffset = tl.program_id(1) * YBLOCK
    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
    ymask = yindex < ynumel
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    x2 = xindex
    y3 = yindex
    y0 = (yindex % 2)
    y1 = yindex // 2
    tmp0 = tl.load(in_ptr0 + (x2 + 9*y3), xmask & ymask, eviction_policy='evict_last')
    tl.store(out_ptr0 + (y0 + 2*x2 + 18*y1), tmp0, xmask & ymask)
''', device_str='cuda')


# kernel path: inductor_cache/ej/cejovihlj2eww6vssqziiuse7ydlgp4ypzhitcpq3swolghd34av.py
# Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4, input_5, input_13, input_14], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_1 => convolution
#   input_13 => add_9, mul_13, mul_14, sub_4
#   input_14 => relu_4
#   input_2 => add_1, mul_1, mul_2, sub
#   input_3 => relu
#   input_4 => add_3, mul_4, mul_5, sub_1
#   input_5 => relu_1
# Graph fragment:
#   %convolution : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%primals_3, %primals_1, %primals_2, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution, %unsqueeze_1), kwargs = {})
#   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %unsqueeze_3), kwargs = {})
#   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_1, %unsqueeze_5), kwargs = {})
#   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2, %unsqueeze_7), kwargs = {})
#   %relu : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1,), kwargs = {})
#   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%relu, %unsqueeze_9), kwargs = {})
#   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %unsqueeze_11), kwargs = {})
#   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_4, %unsqueeze_13), kwargs = {})
#   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_5, %unsqueeze_15), kwargs = {})
#   %relu_1 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_3,), kwargs = {})
#   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%relu, %unsqueeze_33), kwargs = {})
#   %mul_13 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %unsqueeze_35), kwargs = {})
#   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %unsqueeze_37), kwargs = {})
#   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_14, %unsqueeze_39), kwargs = {})
#   %relu_4 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_9,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_4 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_4', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 262144}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_4', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_4(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, out_ptr1, out_ptr2, xnumel, XBLOCK : tl.constexpr):
    xnumel = 262144
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 64)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr8 + (x0), None, eviction_policy='evict_last')
    tmp33 = tl.load(in_ptr9 + (x0), None, eviction_policy='evict_last')
    tmp35 = tl.load(in_ptr10 + (x0), None, eviction_policy='evict_last')
    tmp41 = tl.load(in_ptr11 + (x0), None, eviction_policy='evict_last')
    tmp43 = tl.load(in_ptr12 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tmp21 = tmp19 - tmp20
    tmp23 = tmp22 + tmp6
    tmp24 = libdevice.sqrt(tmp23)
    tmp25 = tmp9 / tmp24
    tmp26 = tmp25 * tmp11
    tmp27 = tmp21 * tmp26
    tmp29 = tmp27 * tmp28
    tmp31 = tmp29 + tmp30
    tmp32 = triton_helpers.maximum(tmp18, tmp31)
    tmp34 = tmp19 - tmp33
    tmp36 = tmp35 + tmp6
    tmp37 = libdevice.sqrt(tmp36)
    tmp38 = tmp9 / tmp37
    tmp39 = tmp38 * tmp11
    tmp40 = tmp34 * tmp39
    tmp42 = tmp40 * tmp41
    tmp44 = tmp42 + tmp43
    tmp45 = triton_helpers.maximum(tmp18, tmp44)
    tl.store(in_out_ptr0 + (x2), tmp2, None)
    tl.store(out_ptr1 + (x2), tmp32, None)
    tl.store(out_ptr2 + (x2), tmp45, None)
''', device_str='cuda')


# kernel path: inductor_cache/re/cre7q7c3tzxtq5x2ybhqc6bqpjywvoipmgyhlooy7f6sqckha2kb.py
# Topologically Sorted Source Nodes: [input_6, input_7, input_8], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_6 => convolution_1
#   input_7 => add_5, mul_7, mul_8, sub_2
#   input_8 => relu_2
# Graph fragment:
#   %convolution_1 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_1, %primals_12, %primals_13, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_1, %unsqueeze_17), kwargs = {})
#   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %unsqueeze_19), kwargs = {})
#   %mul_8 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_7, %unsqueeze_21), kwargs = {})
#   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_8, %unsqueeze_23), kwargs = {})
#   %relu_2 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_5,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_5 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_5', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 262144}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_5', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_5(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 262144
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 64)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, None)
    tl.store(out_ptr0 + (x2), tmp19, None)
''', device_str='cuda')


# kernel path: inductor_cache/a7/ca7dyszx55zafopaf264leua2dv6duiwg7cmrlad5u2fcla5ah5n.py
# Topologically Sorted Source Nodes: [input_12, input_15, input_16], Original ATen: [aten.convolution, aten.add]
# Source node to ATen node mapping:
#   input_12 => convolution_3
#   input_15 => convolution_4
#   input_16 => add_10
# Graph fragment:
#   %convolution_3 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_3, %primals_24, %primals_25, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %convolution_4 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_4, %primals_30, %primals_31, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_10 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_3, %convolution_4), kwargs = {})
triton_poi_fused_add_convolution_6 = async_compile.triton('triton_poi_fused_add_convolution_6', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 524288}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_6', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_6(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
    xnumel = 524288
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 128)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp6 = tmp2 + tmp5
    tl.store(in_out_ptr0 + (x2), tmp6, None)
''', device_str='cuda')


# kernel path: inductor_cache/cc/cccxhfa5h4djbxxok6mvvycj2optguo6sxfu4pyn5rk2mibjdi3m.py
# Topologically Sorted Source Nodes: [input_17, input_18, input_19], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_17 => _low_memory_max_pool2d_with_offsets, getitem_1
#   input_18 => add_12, mul_16, mul_17, sub_5
#   input_19 => relu_5
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_10, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %getitem_1 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets, 1), kwargs = {})
#   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem, %unsqueeze_41), kwargs = {})
#   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %unsqueeze_43), kwargs = {})
#   %mul_17 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_16, %unsqueeze_45), kwargs = {})
#   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_17, %unsqueeze_47), kwargs = {})
#   %relu_5 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_12,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_7 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_7', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 131072}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_7', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 131072
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = (xindex % 128)
    x1 = ((xindex // 128) % 16)
    x2 = xindex // 2048
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 256*x1 + 8192*x2), None)
    tmp1 = tl.load(in_ptr0 + (128 + x0 + 256*x1 + 8192*x2), None)
    tmp7 = tl.load(in_ptr0 + (4096 + x0 + 256*x1 + 8192*x2), None)
    tmp12 = tl.load(in_ptr0 + (4224 + x0 + 256*x1 + 8192*x2), None)
    tmp17 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp1 > tmp0
    tmp3 = tl.full([1], 1, tl.int8)
    tmp4 = tl.full([1], 0, tl.int8)
    tmp5 = tl.where(tmp2, tmp3, tmp4)
    tmp6 = triton_helpers.maximum(tmp1, tmp0)
    tmp8 = tmp7 > tmp6
    tmp9 = tl.full([1], 2, tl.int8)
    tmp10 = tl.where(tmp8, tmp9, tmp5)
    tmp11 = triton_helpers.maximum(tmp7, tmp6)
    tmp13 = tmp12 > tmp11
    tmp14 = tl.full([1], 3, tl.int8)
    tmp15 = tl.where(tmp13, tmp14, tmp10)
    tmp16 = triton_helpers.maximum(tmp12, tmp11)
    tmp18 = tmp16 - tmp17
    tmp20 = 1e-05
    tmp21 = tmp19 + tmp20
    tmp22 = libdevice.sqrt(tmp21)
    tmp23 = tl.full([1], 1, tl.int32)
    tmp24 = tmp23 / tmp22
    tmp25 = 1.0
    tmp26 = tmp24 * tmp25
    tmp27 = tmp18 * tmp26
    tmp29 = tmp27 * tmp28
    tmp31 = tmp29 + tmp30
    tmp32 = tl.full([1], 0, tl.int32)
    tmp33 = triton_helpers.maximum(tmp32, tmp31)
    tl.store(out_ptr0 + (x3), tmp15, None)
    tl.store(out_ptr1 + (x3), tmp33, None)
''', device_str='cuda')


# kernel path: inductor_cache/4b/c4b7ajsspbanzdj3cq7x5ukhof4smeh54wqlhjs73vykdv5zo3gb.py
# Topologically Sorted Source Nodes: [input_20, input_21, input_22], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_20 => convolution_5
#   input_21 => add_14, mul_19, mul_20, sub_6
#   input_22 => relu_6
# Graph fragment:
#   %convolution_5 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_5, %primals_36, %primals_37, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_5, %unsqueeze_49), kwargs = {})
#   %mul_19 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %unsqueeze_51), kwargs = {})
#   %mul_20 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_19, %unsqueeze_53), kwargs = {})
#   %add_14 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_20, %unsqueeze_55), kwargs = {})
#   %relu_6 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_14,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_8 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_8', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 65536}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_8', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_8(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 65536
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 64)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, None)
    tl.store(out_ptr0 + (x2), tmp19, None)
''', device_str='cuda')


# kernel path: inductor_cache/47/c47ezbhlzvxr33dk2vjtjm7mb76pbudrbkyag5cmqnopjgwbgqmo.py
# Topologically Sorted Source Nodes: [input_17, input_26, input_27, input_28, input_29, input_37, input_38], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_17 => _low_memory_max_pool2d_with_offsets
#   input_26 => convolution_7
#   input_27 => add_17
#   input_28 => add_19, mul_25, mul_26, sub_8
#   input_29 => relu_8
#   input_37 => add_25, mul_34, mul_35, sub_11
#   input_38 => relu_11
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_10, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %convolution_7 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_7, %primals_48, %primals_49, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_17 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_7, %getitem), kwargs = {})
#   %sub_8 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_17, %unsqueeze_65), kwargs = {})
#   %mul_25 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_8, %unsqueeze_67), kwargs = {})
#   %mul_26 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_25, %unsqueeze_69), kwargs = {})
#   %add_19 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_26, %unsqueeze_71), kwargs = {})
#   %relu_8 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_19,), kwargs = {})
#   %sub_11 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_17, %unsqueeze_89), kwargs = {})
#   %mul_34 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_11, %unsqueeze_91), kwargs = {})
#   %mul_35 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_34, %unsqueeze_93), kwargs = {})
#   %add_25 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_35, %unsqueeze_95), kwargs = {})
#   %relu_11 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_25,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_9 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_9', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 131072}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_9', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 131072
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x4 = xindex
    x0 = (xindex % 128)
    x1 = ((xindex // 128) % 16)
    x2 = xindex // 2048
    tmp0 = tl.load(in_out_ptr0 + (x4), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0 + 256*x1 + 8192*x2), None)
    tmp4 = tl.load(in_ptr1 + (128 + x0 + 256*x1 + 8192*x2), None)
    tmp6 = tl.load(in_ptr1 + (4096 + x0 + 256*x1 + 8192*x2), None)
    tmp8 = tl.load(in_ptr1 + (4224 + x0 + 256*x1 + 8192*x2), None)
    tmp11 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp13 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
    tmp36 = tl.load(in_ptr8 + (x0), None, eviction_policy='evict_last')
    tmp38 = tl.load(in_ptr9 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = triton_helpers.maximum(tmp4, tmp3)
    tmp7 = triton_helpers.maximum(tmp6, tmp5)
    tmp9 = triton_helpers.maximum(tmp8, tmp7)
    tmp10 = tmp2 + tmp9
    tmp12 = tmp10 - tmp11
    tmp14 = 1e-05
    tmp15 = tmp13 + tmp14
    tmp16 = libdevice.sqrt(tmp15)
    tmp17 = tl.full([1], 1, tl.int32)
    tmp18 = tmp17 / tmp16
    tmp19 = 1.0
    tmp20 = tmp18 * tmp19
    tmp21 = tmp12 * tmp20
    tmp23 = tmp21 * tmp22
    tmp25 = tmp23 + tmp24
    tmp26 = tl.full([1], 0, tl.int32)
    tmp27 = triton_helpers.maximum(tmp26, tmp25)
    tmp29 = tmp10 - tmp28
    tmp31 = tmp30 + tmp14
    tmp32 = libdevice.sqrt(tmp31)
    tmp33 = tmp17 / tmp32
    tmp34 = tmp33 * tmp19
    tmp35 = tmp29 * tmp34
    tmp37 = tmp35 * tmp36
    tmp39 = tmp37 + tmp38
    tmp40 = triton_helpers.maximum(tmp26, tmp39)
    tl.store(in_out_ptr0 + (x4), tmp10, None)
    tl.store(out_ptr0 + (x4), tmp27, None)
    tl.store(out_ptr1 + (x4), tmp40, None)
''', device_str='cuda')


# kernel path: inductor_cache/c2/cc2q4owufe3sbuuyzbvb5iv2yuwxkfins2qwljaw2ptiooo7rzz7.py
# Topologically Sorted Source Nodes: [input_30, input_31, input_32], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_30 => convolution_8
#   input_31 => add_21, mul_28, mul_29, sub_9
#   input_32 => relu_9
# Graph fragment:
#   %convolution_8 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_8, %primals_54, %primals_55, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_8, %unsqueeze_73), kwargs = {})
#   %mul_28 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %unsqueeze_75), kwargs = {})
#   %mul_29 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_28, %unsqueeze_77), kwargs = {})
#   %add_21 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_29, %unsqueeze_79), kwargs = {})
#   %relu_9 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_21,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 2048}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 2048
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 2)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, xmask)
    tl.store(out_ptr0 + (x2), tmp19, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/lg/clgu543dunioacikr75ydqtovmjpwbfuw5j6bqnualk7xyhzro7m.py
# Topologically Sorted Source Nodes: [input_36, input_39, input_40, input_41, input_42], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_36 => convolution_10
#   input_39 => convolution_11
#   input_40 => add_26
#   input_41 => add_28, mul_37, mul_38, sub_12
#   input_42 => relu_12
# Graph fragment:
#   %convolution_10 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_10, %primals_66, %primals_67, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %convolution_11 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_11, %primals_72, %primals_73, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_26 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_10, %convolution_11), kwargs = {})
#   %sub_12 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_26, %unsqueeze_97), kwargs = {})
#   %mul_37 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_12, %unsqueeze_99), kwargs = {})
#   %mul_38 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_37, %unsqueeze_101), kwargs = {})
#   %add_28 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_38, %unsqueeze_103), kwargs = {})
#   %relu_12 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_28,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_11 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_11', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_11', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_11(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp9 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp6 = tmp2 + tmp5
    tmp8 = tmp6 - tmp7
    tmp10 = 1e-05
    tmp11 = tmp9 + tmp10
    tmp12 = libdevice.sqrt(tmp11)
    tmp13 = tl.full([1], 1, tl.int32)
    tmp14 = tmp13 / tmp12
    tmp15 = 1.0
    tmp16 = tmp14 * tmp15
    tmp17 = tmp8 * tmp16
    tmp19 = tmp17 * tmp18
    tmp21 = tmp19 + tmp20
    tmp22 = tl.full([1], 0, tl.int32)
    tmp23 = triton_helpers.maximum(tmp22, tmp21)
    tl.store(in_out_ptr0 + (x2), tmp6, None)
    tl.store(out_ptr0 + (x2), tmp23, None)
''', device_str='cuda')


# kernel path: inductor_cache/ak/cakcuscaajs7cvzeylk63naglymunht3zgtpwtfgpyzteqgopd37.py
# Topologically Sorted Source Nodes: [input_49, up1, input_50, input_51], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_49 => convolution_14
#   input_50 => add_35, mul_46, mul_47, sub_15
#   input_51 => relu_15
#   up1 => add_33
# Graph fragment:
#   %convolution_14 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_14, %primals_90, %primals_91, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_33 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_14, %add_26), kwargs = {})
#   %sub_15 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_33, %unsqueeze_121), kwargs = {})
#   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_15, %unsqueeze_123), kwargs = {})
#   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_46, %unsqueeze_125), kwargs = {})
#   %add_35 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_47, %unsqueeze_127), kwargs = {})
#   %relu_15 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_35,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), None)
    tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, None)
''', device_str='cuda')


# kernel path: inductor_cache/l3/cl32acrodauz2ywvjtajpjvfspha42cqqc5bim55g7xf6kqh7i3c.py
# Topologically Sorted Source Nodes: [input_49, up1, input_58, up1_1, input_59, input_60], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_49 => convolution_14
#   input_58 => convolution_17
#   input_59 => add_42, mul_55, mul_56, sub_18
#   input_60 => relu_18
#   up1 => add_33
#   up1_1 => add_40
# Graph fragment:
#   %convolution_14 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_14, %primals_90, %primals_91, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_33 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_14, %add_26), kwargs = {})
#   %convolution_17 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_17, %primals_108, %primals_109, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_40 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_17, %add_33), kwargs = {})
#   %sub_18 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_40, %unsqueeze_145), kwargs = {})
#   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_18, %unsqueeze_147), kwargs = {})
#   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %unsqueeze_149), kwargs = {})
#   %add_42 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_56, %unsqueeze_151), kwargs = {})
#   %relu_18 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_42,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), None)
    tmp9 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, None)
    tl.store(out_ptr0 + (x2), tmp25, None)
''', device_str='cuda')


# kernel path: inductor_cache/2w/c2w5mfsvynnhal2ial7dsmmznqgzey5lzyih6srgi3oyx7uxrz5m.py
# Topologically Sorted Source Nodes: [low1, input_77, input_78], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_77 => add_56, mul_73, mul_74, sub_24
#   input_78 => relu_24
#   low1 => _low_memory_max_pool2d_with_offsets_1, getitem_3
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_1 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_26, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %getitem_3 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_1, 1), kwargs = {})
#   %sub_24 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_2, %unsqueeze_193), kwargs = {})
#   %mul_73 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_24, %unsqueeze_195), kwargs = {})
#   %mul_74 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_73, %unsqueeze_197), kwargs = {})
#   %add_56 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_74, %unsqueeze_199), kwargs = {})
#   %relu_24 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_56,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 8)
    x2 = xindex // 32
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 8*x1 + 128*x2), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 8*x1 + 128*x2), xmask)
    tmp7 = tl.load(in_ptr0 + (64 + x0 + 8*x1 + 128*x2), xmask)
    tmp12 = tl.load(in_ptr0 + (68 + x0 + 8*x1 + 128*x2), xmask)
    tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp1 > tmp0
    tmp3 = tl.full([1], 1, tl.int8)
    tmp4 = tl.full([1], 0, tl.int8)
    tmp5 = tl.where(tmp2, tmp3, tmp4)
    tmp6 = triton_helpers.maximum(tmp1, tmp0)
    tmp8 = tmp7 > tmp6
    tmp9 = tl.full([1], 2, tl.int8)
    tmp10 = tl.where(tmp8, tmp9, tmp5)
    tmp11 = triton_helpers.maximum(tmp7, tmp6)
    tmp13 = tmp12 > tmp11
    tmp14 = tl.full([1], 3, tl.int8)
    tmp15 = tl.where(tmp13, tmp14, tmp10)
    tmp16 = triton_helpers.maximum(tmp12, tmp11)
    tmp18 = tmp16 - tmp17
    tmp20 = 1e-05
    tmp21 = tmp19 + tmp20
    tmp22 = libdevice.sqrt(tmp21)
    tmp23 = tl.full([1], 1, tl.int32)
    tmp24 = tmp23 / tmp22
    tmp25 = 1.0
    tmp26 = tmp24 * tmp25
    tmp27 = tmp18 * tmp26
    tmp29 = tmp27 * tmp28
    tmp31 = tmp29 + tmp30
    tmp32 = tl.full([1], 0, tl.int32)
    tmp33 = triton_helpers.maximum(tmp32, tmp31)
    tl.store(out_ptr0 + (x3), tmp15, xmask)
    tl.store(out_ptr1 + (x3), tmp33, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/54/c54hqcytatysawjuqsghvjdkmap7cf3lp2xennsxx2zrg7i4d5gq.py
# Topologically Sorted Source Nodes: [input_79, input_80, input_81], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_79 => convolution_24
#   input_80 => add_58, mul_76, mul_77, sub_25
#   input_81 => relu_25
# Graph fragment:
#   %convolution_24 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_24, %primals_150, %primals_151, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_25 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_24, %unsqueeze_201), kwargs = {})
#   %mul_76 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_25, %unsqueeze_203), kwargs = {})
#   %mul_77 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_76, %unsqueeze_205), kwargs = {})
#   %add_58 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_77, %unsqueeze_207), kwargs = {})
#   %relu_25 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_58,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 512}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 512
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 2)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, xmask)
    tl.store(out_ptr0 + (x2), tmp19, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/nb/cnbdcagcistleitwtgrmq5kinjxnjcfehugwhn4p5t7ettcrbkcl.py
# Topologically Sorted Source Nodes: [low1, input_85, low1_1, input_86, input_87], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_85 => convolution_26
#   input_86 => add_63, mul_82, mul_83, sub_27
#   input_87 => relu_27
#   low1 => _low_memory_max_pool2d_with_offsets_1
#   low1_1 => add_61
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_1 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_26, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %convolution_26 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_26, %primals_162, %primals_163, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_61 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_26, %getitem_2), kwargs = {})
#   %sub_27 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_61, %unsqueeze_217), kwargs = {})
#   %mul_82 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_27, %unsqueeze_219), kwargs = {})
#   %mul_83 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_82, %unsqueeze_221), kwargs = {})
#   %add_63 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_83, %unsqueeze_223), kwargs = {})
#   %relu_27 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_63,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x4 = xindex
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 8)
    x2 = xindex // 32
    tmp0 = tl.load(in_out_ptr0 + (x4), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0 + 8*x1 + 128*x2), xmask)
    tmp4 = tl.load(in_ptr1 + (4 + x0 + 8*x1 + 128*x2), xmask)
    tmp6 = tl.load(in_ptr1 + (64 + x0 + 8*x1 + 128*x2), xmask)
    tmp8 = tl.load(in_ptr1 + (68 + x0 + 8*x1 + 128*x2), xmask)
    tmp11 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp13 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = triton_helpers.maximum(tmp4, tmp3)
    tmp7 = triton_helpers.maximum(tmp6, tmp5)
    tmp9 = triton_helpers.maximum(tmp8, tmp7)
    tmp10 = tmp2 + tmp9
    tmp12 = tmp10 - tmp11
    tmp14 = 1e-05
    tmp15 = tmp13 + tmp14
    tmp16 = libdevice.sqrt(tmp15)
    tmp17 = tl.full([1], 1, tl.int32)
    tmp18 = tmp17 / tmp16
    tmp19 = 1.0
    tmp20 = tmp18 * tmp19
    tmp21 = tmp12 * tmp20
    tmp23 = tmp21 * tmp22
    tmp25 = tmp23 + tmp24
    tmp26 = tl.full([1], 0, tl.int32)
    tmp27 = triton_helpers.maximum(tmp26, tmp25)
    tl.store(in_out_ptr0 + (x4), tmp10, xmask)
    tl.store(out_ptr0 + (x4), tmp27, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/4z/c4z7fyc74nvmq7qnmx2voacfrty6qbpipkxjjlpoosodaufuphuz.py
# Topologically Sorted Source Nodes: [input_94, low1_2, input_95, input_96], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_94 => convolution_29
#   input_95 => add_70, mul_91, mul_92, sub_30
#   input_96 => relu_30
#   low1_2 => add_68
# Graph fragment:
#   %convolution_29 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_29, %primals_180, %primals_181, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_68 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_29, %add_61), kwargs = {})
#   %sub_30 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_68, %unsqueeze_241), kwargs = {})
#   %mul_91 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_30, %unsqueeze_243), kwargs = {})
#   %mul_92 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_91, %unsqueeze_245), kwargs = {})
#   %add_70 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_92, %unsqueeze_247), kwargs = {})
#   %relu_30 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_70,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), xmask)
    tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ae/caeuzab5gxu3wo6fk4b6yyoysnddw47s6s5fn7rbxfnnzcwolhv6.py
# Topologically Sorted Source Nodes: [input_94, low1_2, input_103, low1_3, input_104, input_105], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_103 => convolution_32
#   input_104 => add_77, mul_100, mul_101, sub_33
#   input_105 => relu_33
#   input_94 => convolution_29
#   low1_2 => add_68
#   low1_3 => add_75
# Graph fragment:
#   %convolution_29 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_29, %primals_180, %primals_181, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_68 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_29, %add_61), kwargs = {})
#   %convolution_32 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_32, %primals_198, %primals_199, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_75 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_32, %add_68), kwargs = {})
#   %sub_33 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_75, %unsqueeze_265), kwargs = {})
#   %mul_100 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_33, %unsqueeze_267), kwargs = {})
#   %mul_101 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_100, %unsqueeze_269), kwargs = {})
#   %add_77 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_101, %unsqueeze_271), kwargs = {})
#   %relu_33 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_77,), kwargs = {})
#   %sub_1342 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_75, %unsqueeze_13370), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
    tl.store(out_ptr1 + (x2), tmp10, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/e2/ce24tdk7kx7dhhsbt3sbuttl5qo5ncuawvvkklzm7v2iqwnl5ra5.py
# Topologically Sorted Source Nodes: [input_112, low1_4, input_113, input_114], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_112 => convolution_35
#   input_113 => add_84, mul_109, mul_110, sub_36
#   input_114 => relu_36
#   low1_4 => add_82
# Graph fragment:
#   %convolution_35 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_35, %primals_216, %primals_217, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_82 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_35, %add_75), kwargs = {})
#   %sub_36 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_82, %unsqueeze_289), kwargs = {})
#   %mul_109 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_36, %unsqueeze_291), kwargs = {})
#   %mul_110 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_109, %unsqueeze_293), kwargs = {})
#   %add_84 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_110, %unsqueeze_295), kwargs = {})
#   %relu_36 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_84,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(in_out_ptr0 + (x2), tmp4, xmask)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/hd/chd7xdonlpa7yvgpd6jterinnpzn4tcftbioupovxbwc3hakwpvt.py
# Topologically Sorted Source Nodes: [input_121, up1_4, input_130, up1_5, input_131, input_132], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_121 => convolution_38
#   input_130 => convolution_41
#   input_131 => add_98, mul_127, mul_128, sub_42
#   input_132 => relu_42
#   up1_4 => add_89
#   up1_5 => add_96
# Graph fragment:
#   %convolution_38 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_38, %primals_234, %primals_235, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_89 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_38, %add_82), kwargs = {})
#   %convolution_41 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_41, %primals_252, %primals_253, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_96 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_41, %add_89), kwargs = {})
#   %sub_42 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_96, %unsqueeze_337), kwargs = {})
#   %mul_127 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_42, %unsqueeze_339), kwargs = {})
#   %mul_128 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_127, %unsqueeze_341), kwargs = {})
#   %add_98 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_128, %unsqueeze_343), kwargs = {})
#   %relu_42 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_98,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/64/c645ciqgd2xqx3faejizi7qzmdgwupxy2ihvzlb44fwtijuvzzfj.py
# Topologically Sorted Source Nodes: [low1_5, input_149, input_150], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_149 => add_112, mul_145, mul_146, sub_48
#   input_150 => relu_48
#   low1_5 => _low_memory_max_pool2d_with_offsets_2, getitem_5
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_2 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_82, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %getitem_5 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_2, 1), kwargs = {})
#   %sub_48 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_4, %unsqueeze_385), kwargs = {})
#   %mul_145 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_48, %unsqueeze_387), kwargs = {})
#   %mul_146 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_145, %unsqueeze_389), kwargs = {})
#   %add_112 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_146, %unsqueeze_391), kwargs = {})
#   %relu_48 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_112,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 4)
    x2 = xindex // 16
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 8*x1 + 64*x2), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 8*x1 + 64*x2), xmask)
    tmp7 = tl.load(in_ptr0 + (32 + x0 + 8*x1 + 64*x2), xmask)
    tmp12 = tl.load(in_ptr0 + (36 + x0 + 8*x1 + 64*x2), xmask)
    tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp1 > tmp0
    tmp3 = tl.full([1], 1, tl.int8)
    tmp4 = tl.full([1], 0, tl.int8)
    tmp5 = tl.where(tmp2, tmp3, tmp4)
    tmp6 = triton_helpers.maximum(tmp1, tmp0)
    tmp8 = tmp7 > tmp6
    tmp9 = tl.full([1], 2, tl.int8)
    tmp10 = tl.where(tmp8, tmp9, tmp5)
    tmp11 = triton_helpers.maximum(tmp7, tmp6)
    tmp13 = tmp12 > tmp11
    tmp14 = tl.full([1], 3, tl.int8)
    tmp15 = tl.where(tmp13, tmp14, tmp10)
    tmp16 = triton_helpers.maximum(tmp12, tmp11)
    tmp18 = tmp16 - tmp17
    tmp20 = 1e-05
    tmp21 = tmp19 + tmp20
    tmp22 = libdevice.sqrt(tmp21)
    tmp23 = tl.full([1], 1, tl.int32)
    tmp24 = tmp23 / tmp22
    tmp25 = 1.0
    tmp26 = tmp24 * tmp25
    tmp27 = tmp18 * tmp26
    tmp29 = tmp27 * tmp28
    tmp31 = tmp29 + tmp30
    tmp32 = tl.full([1], 0, tl.int32)
    tmp33 = triton_helpers.maximum(tmp32, tmp31)
    tl.store(out_ptr0 + (x3), tmp15, xmask)
    tl.store(out_ptr1 + (x3), tmp33, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/7v/c7vug3yjoxco3w2amdwviifsvyzcqwy3iv5yljci72ykrhranps7.py
# Topologically Sorted Source Nodes: [input_151, input_152, input_153], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_151 => convolution_48
#   input_152 => add_114, mul_148, mul_149, sub_49
#   input_153 => relu_49
# Graph fragment:
#   %convolution_48 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_48, %primals_294, %primals_295, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_49 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_48, %unsqueeze_393), kwargs = {})
#   %mul_148 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_49, %unsqueeze_395), kwargs = {})
#   %mul_149 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_148, %unsqueeze_397), kwargs = {})
#   %add_114 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_149, %unsqueeze_399), kwargs = {})
#   %relu_49 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_114,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 128}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 128
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 2)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, xmask)
    tl.store(out_ptr0 + (x2), tmp19, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/jq/cjq5wqrqsy5jk42fzwi36pcqor7li5xjq34z4uiy42fhqmepvr3t.py
# Topologically Sorted Source Nodes: [low1_5, input_157, low1_6, input_158, input_159], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_157 => convolution_50
#   input_158 => add_119, mul_154, mul_155, sub_51
#   input_159 => relu_51
#   low1_5 => _low_memory_max_pool2d_with_offsets_2
#   low1_6 => add_117
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_2 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_82, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %convolution_50 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_50, %primals_306, %primals_307, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_117 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_50, %getitem_4), kwargs = {})
#   %sub_51 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_117, %unsqueeze_409), kwargs = {})
#   %mul_154 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_51, %unsqueeze_411), kwargs = {})
#   %mul_155 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_154, %unsqueeze_413), kwargs = {})
#   %add_119 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_155, %unsqueeze_415), kwargs = {})
#   %relu_51 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_119,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x4 = xindex
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 4)
    x2 = xindex // 16
    tmp0 = tl.load(in_out_ptr0 + (x4), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0 + 8*x1 + 64*x2), xmask)
    tmp4 = tl.load(in_ptr1 + (4 + x0 + 8*x1 + 64*x2), xmask)
    tmp6 = tl.load(in_ptr1 + (32 + x0 + 8*x1 + 64*x2), xmask)
    tmp8 = tl.load(in_ptr1 + (36 + x0 + 8*x1 + 64*x2), xmask)
    tmp11 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp13 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = triton_helpers.maximum(tmp4, tmp3)
    tmp7 = triton_helpers.maximum(tmp6, tmp5)
    tmp9 = triton_helpers.maximum(tmp8, tmp7)
    tmp10 = tmp2 + tmp9
    tmp12 = tmp10 - tmp11
    tmp14 = 1e-05
    tmp15 = tmp13 + tmp14
    tmp16 = libdevice.sqrt(tmp15)
    tmp17 = tl.full([1], 1, tl.int32)
    tmp18 = tmp17 / tmp16
    tmp19 = 1.0
    tmp20 = tmp18 * tmp19
    tmp21 = tmp12 * tmp20
    tmp23 = tmp21 * tmp22
    tmp25 = tmp23 + tmp24
    tmp26 = tl.full([1], 0, tl.int32)
    tmp27 = triton_helpers.maximum(tmp26, tmp25)
    tl.store(in_out_ptr0 + (x4), tmp10, xmask)
    tl.store(out_ptr0 + (x4), tmp27, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/sd/csd5ibpnar5vklbdisfqmdcfb2fayqvpcyx66p2hfd5zg4wmoruz.py
# Topologically Sorted Source Nodes: [input_166, low1_7, input_167, input_168], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_166 => convolution_53
#   input_167 => add_126, mul_163, mul_164, sub_54
#   input_168 => relu_54
#   low1_7 => add_124
# Graph fragment:
#   %convolution_53 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_53, %primals_324, %primals_325, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_124 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_53, %add_117), kwargs = {})
#   %sub_54 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_124, %unsqueeze_433), kwargs = {})
#   %mul_163 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_54, %unsqueeze_435), kwargs = {})
#   %mul_164 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_163, %unsqueeze_437), kwargs = {})
#   %add_126 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_164, %unsqueeze_439), kwargs = {})
#   %relu_54 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_126,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), xmask)
    tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/m2/cm2krvu6miiyu2f2b2r7ggasa2y6zemvf6d4yaqlvolm7q7s32th.py
# Topologically Sorted Source Nodes: [input_166, low1_7, input_175, low1_8, input_176, input_177], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_166 => convolution_53
#   input_175 => convolution_56
#   input_176 => add_133, mul_172, mul_173, sub_57
#   input_177 => relu_57
#   low1_7 => add_124
#   low1_8 => add_131
# Graph fragment:
#   %convolution_53 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_53, %primals_324, %primals_325, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_124 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_53, %add_117), kwargs = {})
#   %convolution_56 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_56, %primals_342, %primals_343, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_131 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_56, %add_124), kwargs = {})
#   %sub_57 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_131, %unsqueeze_457), kwargs = {})
#   %mul_172 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_57, %unsqueeze_459), kwargs = {})
#   %mul_173 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_172, %unsqueeze_461), kwargs = {})
#   %add_133 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_173, %unsqueeze_463), kwargs = {})
#   %relu_57 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_133,), kwargs = {})
#   %sub_1318 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_131, %unsqueeze_13082), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
    tl.store(out_ptr1 + (x2), tmp10, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/j7/cj72novn5uszlqnjxcvyt5whc5hemoav5aqaafblwuqccip6mahy.py
# Topologically Sorted Source Nodes: [input_184, low1_9, input_185, input_186], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_184 => convolution_59
#   input_185 => add_140, mul_181, mul_182, sub_60
#   input_186 => relu_60
#   low1_9 => add_138
# Graph fragment:
#   %convolution_59 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_59, %primals_360, %primals_361, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_138 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_59, %add_131), kwargs = {})
#   %sub_60 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_138, %unsqueeze_481), kwargs = {})
#   %mul_181 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_60, %unsqueeze_483), kwargs = {})
#   %mul_182 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_181, %unsqueeze_485), kwargs = {})
#   %add_140 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_182, %unsqueeze_487), kwargs = {})
#   %relu_60 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_140,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(in_out_ptr0 + (x2), tmp4, xmask)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/y6/cy6nn2c6pzlbszj5nyb2nr6rxzvlb3qephuhsviedq2uhqwopga7.py
# Topologically Sorted Source Nodes: [input_193, up1_8, input_202, up1_9, input_203, input_204], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_193 => convolution_62
#   input_202 => convolution_65
#   input_203 => add_154, mul_199, mul_200, sub_66
#   input_204 => relu_66
#   up1_8 => add_145
#   up1_9 => add_152
# Graph fragment:
#   %convolution_62 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_62, %primals_378, %primals_379, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_145 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_62, %add_138), kwargs = {})
#   %convolution_65 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_65, %primals_396, %primals_397, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_152 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_65, %add_145), kwargs = {})
#   %sub_66 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_152, %unsqueeze_529), kwargs = {})
#   %mul_199 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_66, %unsqueeze_531), kwargs = {})
#   %mul_200 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_199, %unsqueeze_533), kwargs = {})
#   %add_154 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_200, %unsqueeze_535), kwargs = {})
#   %relu_66 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_154,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/uk/cukrtxfrumnqnwscmbwvjqnhg7wyveb4scge4257wsbefw47bsbd.py
# Topologically Sorted Source Nodes: [low1_10, input_221, input_222], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_221 => add_168, mul_217, mul_218, sub_72
#   input_222 => relu_72
#   low1_10 => _low_memory_max_pool2d_with_offsets_3, getitem_7
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_3 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_138, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %getitem_7 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_3, 1), kwargs = {})
#   %sub_72 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_6, %unsqueeze_577), kwargs = {})
#   %mul_217 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_72, %unsqueeze_579), kwargs = {})
#   %mul_218 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_217, %unsqueeze_581), kwargs = {})
#   %add_168 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_218, %unsqueeze_583), kwargs = {})
#   %relu_72 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_168,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 2)
    x2 = xindex // 8
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 8*x1 + 32*x2), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 8*x1 + 32*x2), xmask)
    tmp7 = tl.load(in_ptr0 + (16 + x0 + 8*x1 + 32*x2), xmask)
    tmp12 = tl.load(in_ptr0 + (20 + x0 + 8*x1 + 32*x2), xmask)
    tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp1 > tmp0
    tmp3 = tl.full([1], 1, tl.int8)
    tmp4 = tl.full([1], 0, tl.int8)
    tmp5 = tl.where(tmp2, tmp3, tmp4)
    tmp6 = triton_helpers.maximum(tmp1, tmp0)
    tmp8 = tmp7 > tmp6
    tmp9 = tl.full([1], 2, tl.int8)
    tmp10 = tl.where(tmp8, tmp9, tmp5)
    tmp11 = triton_helpers.maximum(tmp7, tmp6)
    tmp13 = tmp12 > tmp11
    tmp14 = tl.full([1], 3, tl.int8)
    tmp15 = tl.where(tmp13, tmp14, tmp10)
    tmp16 = triton_helpers.maximum(tmp12, tmp11)
    tmp18 = tmp16 - tmp17
    tmp20 = 1e-05
    tmp21 = tmp19 + tmp20
    tmp22 = libdevice.sqrt(tmp21)
    tmp23 = tl.full([1], 1, tl.int32)
    tmp24 = tmp23 / tmp22
    tmp25 = 1.0
    tmp26 = tmp24 * tmp25
    tmp27 = tmp18 * tmp26
    tmp29 = tmp27 * tmp28
    tmp31 = tmp29 + tmp30
    tmp32 = tl.full([1], 0, tl.int32)
    tmp33 = triton_helpers.maximum(tmp32, tmp31)
    tl.store(out_ptr0 + (x3), tmp15, xmask)
    tl.store(out_ptr1 + (x3), tmp33, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/o4/co4a66vtwkig3k7g7xzbs5zilyryj77ks7eism7hcon3rdkmpy4n.py
# Topologically Sorted Source Nodes: [input_223, input_224, input_225], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_223 => convolution_72
#   input_224 => add_170, mul_220, mul_221, sub_73
#   input_225 => relu_73
# Graph fragment:
#   %convolution_72 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_72, %primals_438, %primals_439, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_73 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_72, %unsqueeze_585), kwargs = {})
#   %mul_220 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_73, %unsqueeze_587), kwargs = {})
#   %mul_221 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_220, %unsqueeze_589), kwargs = {})
#   %add_170 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_221, %unsqueeze_591), kwargs = {})
#   %relu_73 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_170,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 32}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 32
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 2)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, xmask)
    tl.store(out_ptr0 + (x2), tmp19, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/3c/c3csvb3osb2emsxbo7t4qsyznhcn272suvpzpbbaik6ifigkpxme.py
# Topologically Sorted Source Nodes: [low1_10, input_229, low1_11, input_230, input_231], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_229 => convolution_74
#   input_230 => add_175, mul_226, mul_227, sub_75
#   input_231 => relu_75
#   low1_10 => _low_memory_max_pool2d_with_offsets_3
#   low1_11 => add_173
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_3 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_138, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %convolution_74 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_74, %primals_450, %primals_451, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_173 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_74, %getitem_6), kwargs = {})
#   %sub_75 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_173, %unsqueeze_601), kwargs = {})
#   %mul_226 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_75, %unsqueeze_603), kwargs = {})
#   %mul_227 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_226, %unsqueeze_605), kwargs = {})
#   %add_175 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_227, %unsqueeze_607), kwargs = {})
#   %relu_75 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_175,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x4 = xindex
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 2)
    x2 = xindex // 8
    tmp0 = tl.load(in_out_ptr0 + (x4), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0 + 8*x1 + 32*x2), xmask)
    tmp4 = tl.load(in_ptr1 + (4 + x0 + 8*x1 + 32*x2), xmask)
    tmp6 = tl.load(in_ptr1 + (16 + x0 + 8*x1 + 32*x2), xmask)
    tmp8 = tl.load(in_ptr1 + (20 + x0 + 8*x1 + 32*x2), xmask)
    tmp11 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp13 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = triton_helpers.maximum(tmp4, tmp3)
    tmp7 = triton_helpers.maximum(tmp6, tmp5)
    tmp9 = triton_helpers.maximum(tmp8, tmp7)
    tmp10 = tmp2 + tmp9
    tmp12 = tmp10 - tmp11
    tmp14 = 1e-05
    tmp15 = tmp13 + tmp14
    tmp16 = libdevice.sqrt(tmp15)
    tmp17 = tl.full([1], 1, tl.int32)
    tmp18 = tmp17 / tmp16
    tmp19 = 1.0
    tmp20 = tmp18 * tmp19
    tmp21 = tmp12 * tmp20
    tmp23 = tmp21 * tmp22
    tmp25 = tmp23 + tmp24
    tmp26 = tl.full([1], 0, tl.int32)
    tmp27 = triton_helpers.maximum(tmp26, tmp25)
    tl.store(in_out_ptr0 + (x4), tmp10, xmask)
    tl.store(out_ptr0 + (x4), tmp27, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/sr/csr4femk4johffjdlaimhzjv7v2xllvjhvcbnmkrr6mvl7h2aeu4.py
# Topologically Sorted Source Nodes: [input_238, low1_12, input_239, input_240], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_238 => convolution_77
#   input_239 => add_182, mul_235, mul_236, sub_78
#   input_240 => relu_78
#   low1_12 => add_180
# Graph fragment:
#   %convolution_77 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_77, %primals_468, %primals_469, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_180 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_77, %add_173), kwargs = {})
#   %sub_78 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_180, %unsqueeze_625), kwargs = {})
#   %mul_235 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_78, %unsqueeze_627), kwargs = {})
#   %mul_236 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_235, %unsqueeze_629), kwargs = {})
#   %add_182 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_236, %unsqueeze_631), kwargs = {})
#   %relu_78 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_182,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), xmask)
    tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/m2/cm22ugykjwru7iyvlox6mpvkgbfp6f42uo7es3hcwehwdrtqvsfv.py
# Topologically Sorted Source Nodes: [input_238, low1_12, input_247, low1_13, input_248, input_249], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_238 => convolution_77
#   input_247 => convolution_80
#   input_248 => add_189, mul_244, mul_245, sub_81
#   input_249 => relu_81
#   low1_12 => add_180
#   low1_13 => add_187
# Graph fragment:
#   %convolution_77 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_77, %primals_468, %primals_469, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_180 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_77, %add_173), kwargs = {})
#   %convolution_80 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_80, %primals_486, %primals_487, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_187 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_80, %add_180), kwargs = {})
#   %sub_81 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_187, %unsqueeze_649), kwargs = {})
#   %mul_244 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_81, %unsqueeze_651), kwargs = {})
#   %mul_245 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_244, %unsqueeze_653), kwargs = {})
#   %add_189 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_245, %unsqueeze_655), kwargs = {})
#   %relu_81 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_189,), kwargs = {})
#   %sub_1294 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_187, %unsqueeze_12794), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
    tl.store(out_ptr1 + (x2), tmp10, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/rm/crmfz2lt5xzlv3q6pu7rb2fjtswugcgwjhd5ssk524gsjdwifp5j.py
# Topologically Sorted Source Nodes: [input_256, low1_14, input_257, input_258], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_256 => convolution_83
#   input_257 => add_196, mul_253, mul_254, sub_84
#   input_258 => relu_84
#   low1_14 => add_194
# Graph fragment:
#   %convolution_83 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_83, %primals_504, %primals_505, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_194 : [num_users=4] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_83, %add_187), kwargs = {})
#   %sub_84 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_194, %unsqueeze_673), kwargs = {})
#   %mul_253 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_84, %unsqueeze_675), kwargs = {})
#   %mul_254 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_253, %unsqueeze_677), kwargs = {})
#   %add_196 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_254, %unsqueeze_679), kwargs = {})
#   %relu_84 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_196,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(in_out_ptr0 + (x2), tmp4, xmask)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ry/cry4saolhac7rc5nfrhbhf7pq422fi6xgd3rhnh4nii4w5daap6w.py
# Topologically Sorted Source Nodes: [input_265, up1_12, input_274, up1_13, input_275, input_276], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_265 => convolution_86
#   input_274 => convolution_89
#   input_275 => add_210, mul_271, mul_272, sub_90
#   input_276 => relu_90
#   up1_12 => add_201
#   up1_13 => add_208
# Graph fragment:
#   %convolution_86 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_86, %primals_522, %primals_523, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_201 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_86, %add_194), kwargs = {})
#   %convolution_89 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_89, %primals_540, %primals_541, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_208 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_89, %add_201), kwargs = {})
#   %sub_90 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_208, %unsqueeze_721), kwargs = {})
#   %mul_271 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_90, %unsqueeze_723), kwargs = {})
#   %mul_272 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_271, %unsqueeze_725), kwargs = {})
#   %add_210 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_272, %unsqueeze_727), kwargs = {})
#   %relu_90 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_210,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/r6/cr6ctfhbptuvfghgzvfgyoyy3qmltfzbwibwbun53tmuyvcnq55l.py
# Topologically Sorted Source Nodes: [low1_15, input_293, input_294], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_293 => add_224, mul_289, mul_290, sub_96
#   input_294 => relu_96
#   low1_15 => _low_memory_max_pool2d_with_offsets_4, getitem_9
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_4 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_194, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %getitem_9 : [num_users=1] = call_function[target=operator.getitem](args = (%_low_memory_max_pool2d_with_offsets_4, 1), kwargs = {})
#   %sub_96 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_8, %unsqueeze_769), kwargs = {})
#   %mul_289 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_96, %unsqueeze_771), kwargs = {})
#   %mul_290 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_289, %unsqueeze_773), kwargs = {})
#   %add_224 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_290, %unsqueeze_775), kwargs = {})
#   %relu_96 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_224,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*i8', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 8, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = xindex // 4
    x2 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
    tmp7 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
    tmp12 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
    tmp17 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp1 > tmp0
    tmp3 = tl.full([1], 1, tl.int8)
    tmp4 = tl.full([1], 0, tl.int8)
    tmp5 = tl.where(tmp2, tmp3, tmp4)
    tmp6 = triton_helpers.maximum(tmp1, tmp0)
    tmp8 = tmp7 > tmp6
    tmp9 = tl.full([1], 2, tl.int8)
    tmp10 = tl.where(tmp8, tmp9, tmp5)
    tmp11 = triton_helpers.maximum(tmp7, tmp6)
    tmp13 = tmp12 > tmp11
    tmp14 = tl.full([1], 3, tl.int8)
    tmp15 = tl.where(tmp13, tmp14, tmp10)
    tmp16 = triton_helpers.maximum(tmp12, tmp11)
    tmp18 = tmp16 - tmp17
    tmp20 = 1e-05
    tmp21 = tmp19 + tmp20
    tmp22 = libdevice.sqrt(tmp21)
    tmp23 = tl.full([1], 1, tl.int32)
    tmp24 = tmp23 / tmp22
    tmp25 = 1.0
    tmp26 = tmp24 * tmp25
    tmp27 = tmp18 * tmp26
    tmp29 = tmp27 * tmp28
    tmp31 = tmp29 + tmp30
    tmp32 = tl.full([1], 0, tl.int32)
    tmp33 = triton_helpers.maximum(tmp32, tmp31)
    tl.store(out_ptr0 + (x2), tmp15, xmask)
    tl.store(out_ptr1 + (x2), tmp33, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/nm/cnmskgyuxrsq4zgbcgbf7x3bijbybqmo5ljdf73mtau77aehw66l.py
# Topologically Sorted Source Nodes: [input_295, input_296, input_297], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_295 => convolution_96
#   input_296 => add_226, mul_292, mul_293, sub_97
#   input_297 => relu_97
# Graph fragment:
#   %convolution_96 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_96, %primals_582, %primals_583, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_97 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_96, %unsqueeze_777), kwargs = {})
#   %mul_292 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_97, %unsqueeze_779), kwargs = {})
#   %mul_293 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_292, %unsqueeze_781), kwargs = {})
#   %add_226 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_293, %unsqueeze_783), kwargs = {})
#   %relu_97 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_226,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 8}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 8
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 2)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, xmask)
    tl.store(out_ptr0 + (x2), tmp19, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/6l/c6lx64zsi46hvjx57stcwst4jwnilyijzot7zu6u4aepxq65lfve.py
# Topologically Sorted Source Nodes: [low1_15, input_301, low1_16, input_302, input_303], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_301 => convolution_98
#   input_302 => add_231, mul_298, mul_299, sub_99
#   input_303 => relu_99
#   low1_15 => _low_memory_max_pool2d_with_offsets_4
#   low1_16 => add_229
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_4 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_194, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %convolution_98 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_98, %primals_594, %primals_595, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_229 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_98, %getitem_8), kwargs = {})
#   %sub_99 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_229, %unsqueeze_793), kwargs = {})
#   %mul_298 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_99, %unsqueeze_795), kwargs = {})
#   %mul_299 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_298, %unsqueeze_797), kwargs = {})
#   %add_231 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_299, %unsqueeze_799), kwargs = {})
#   %relu_99 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_231,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 10, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    x1 = xindex // 4
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0 + 16*x1), xmask)
    tmp4 = tl.load(in_ptr1 + (4 + x0 + 16*x1), xmask)
    tmp6 = tl.load(in_ptr1 + (8 + x0 + 16*x1), xmask)
    tmp8 = tl.load(in_ptr1 + (12 + x0 + 16*x1), xmask)
    tmp11 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp13 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = triton_helpers.maximum(tmp4, tmp3)
    tmp7 = triton_helpers.maximum(tmp6, tmp5)
    tmp9 = triton_helpers.maximum(tmp8, tmp7)
    tmp10 = tmp2 + tmp9
    tmp12 = tmp10 - tmp11
    tmp14 = 1e-05
    tmp15 = tmp13 + tmp14
    tmp16 = libdevice.sqrt(tmp15)
    tmp17 = tl.full([1], 1, tl.int32)
    tmp18 = tmp17 / tmp16
    tmp19 = 1.0
    tmp20 = tmp18 * tmp19
    tmp21 = tmp12 * tmp20
    tmp23 = tmp21 * tmp22
    tmp25 = tmp23 + tmp24
    tmp26 = tl.full([1], 0, tl.int32)
    tmp27 = triton_helpers.maximum(tmp26, tmp25)
    tl.store(in_out_ptr0 + (x2), tmp10, xmask)
    tl.store(out_ptr0 + (x2), tmp27, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ti/cti7aqc4oydka2fpdizpsf5xhlqdkopjua2dcei6gzhybex4oaq7.py
# Topologically Sorted Source Nodes: [input_310, low1_17, input_311, input_312], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_310 => convolution_101
#   input_311 => add_238, mul_307, mul_308, sub_102
#   input_312 => relu_102
#   low1_17 => add_236
# Graph fragment:
#   %convolution_101 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_101, %primals_612, %primals_613, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_236 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_101, %add_229), kwargs = {})
#   %sub_102 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_236, %unsqueeze_817), kwargs = {})
#   %mul_307 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_102, %unsqueeze_819), kwargs = {})
#   %mul_308 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_307, %unsqueeze_821), kwargs = {})
#   %add_238 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_308, %unsqueeze_823), kwargs = {})
#   %relu_102 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_238,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), xmask)
    tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ai/cai7qzqmrceorhjecvtuqabdts7vb7ya7eon5nv5aihdkhr32rmt.py
# Topologically Sorted Source Nodes: [input_310, low1_17, input_319, low1_18, input_320, input_321], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_310 => convolution_101
#   input_319 => convolution_104
#   input_320 => add_245, mul_316, mul_317, sub_105
#   input_321 => relu_105
#   low1_17 => add_236
#   low1_18 => add_243
# Graph fragment:
#   %convolution_101 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_101, %primals_612, %primals_613, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_236 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_101, %add_229), kwargs = {})
#   %convolution_104 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_104, %primals_630, %primals_631, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_243 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_104, %add_236), kwargs = {})
#   %sub_105 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_243, %unsqueeze_841), kwargs = {})
#   %mul_316 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_105, %unsqueeze_843), kwargs = {})
#   %mul_317 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_316, %unsqueeze_845), kwargs = {})
#   %add_245 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_317, %unsqueeze_847), kwargs = {})
#   %relu_105 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_245,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/td/ctdff6zp4khjql6rdj2sswjnavoafuxgyz6sca6tg22ogt6sthjm.py
# Topologically Sorted Source Nodes: [input_382, low3_1, input_391, low3_2, input_392, input_393], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_382 => convolution_125
#   input_391 => convolution_128
#   input_392 => add_301, mul_388, mul_389, sub_129
#   input_393 => relu_129
#   low3_1 => add_292
#   low3_2 => add_299
# Graph fragment:
#   %convolution_125 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_125, %primals_756, %primals_757, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_292 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_125, %add_285), kwargs = {})
#   %convolution_128 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_128, %primals_774, %primals_775, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_299 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_128, %add_292), kwargs = {})
#   %sub_129 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_299, %unsqueeze_1033), kwargs = {})
#   %mul_388 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_129, %unsqueeze_1035), kwargs = {})
#   %mul_389 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_388, %unsqueeze_1037), kwargs = {})
#   %add_301 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_389, %unsqueeze_1039), kwargs = {})
#   %relu_129 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_301,), kwargs = {})
#   %sub_1246 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_299, %unsqueeze_12218), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp25, xmask)
    tl.store(out_ptr1 + (x2), tmp10, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/zf/czfmpulovtpfmatzggrzzgvfh4ehcehimxzqkh74pudqrexrbhfc.py
# Topologically Sorted Source Nodes: [up2], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
# Source node to ATen node mapping:
#   up2 => add_307, add_308, convert_element_type_264, convert_element_type_265, iota, mul_396, mul_397
# Graph fragment:
#   %iota : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (2,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
#   %mul_396 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota, 1), kwargs = {})
#   %add_307 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_396, 0), kwargs = {})
#   %convert_element_type_264 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_307, torch.float32), kwargs = {})
#   %add_308 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_264, 0.0), kwargs = {})
#   %mul_397 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_308, 0.5), kwargs = {})
#   %convert_element_type_265 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_397, torch.int64), kwargs = {})
triton_poi_fused__to_copy_add_arange_mul_41 = async_compile.triton('triton_poi_fused__to_copy_add_arange_mul_41', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 2}, 
    filename=__file__,
    triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_mul_41', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__to_copy_add_arange_mul_41(out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 2
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = xindex
    tmp0 = x0
    tmp1 = tmp0.to(tl.float32)
    tmp2 = 0.5
    tmp3 = tmp1 * tmp2
    tmp4 = tmp3.to(tl.int32)
    tl.store(out_ptr0 + (x0), tmp4, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ob/cobti3ixqaw2t2u5k32aqvwd66hc267qica2hczntadja5bintro.py
# Topologically Sorted Source Nodes: [input_283, up1_14, input_292, up1_15, input_400, low3_3, up2, low2_4, input_401, input_402], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_283 => convolution_92
#   input_292 => convolution_95
#   input_400 => convolution_131
#   input_401 => add_313, mul_401, mul_402, sub_132
#   input_402 => relu_132
#   low2_4 => add_311
#   low3_3 => add_306
#   up1_14 => add_215
#   up1_15 => add_222
#   up2 => _unsafe_index
# Graph fragment:
#   %convolution_92 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_92, %primals_558, %primals_559, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_215 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_92, %add_208), kwargs = {})
#   %convolution_95 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_95, %primals_576, %primals_577, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_222 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_95, %add_215), kwargs = {})
#   %convolution_131 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_131, %primals_792, %primals_793, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_306 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_131, %add_299), kwargs = {})
#   %_unsafe_index : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_306, [None, None, %unsqueeze_1056, %convert_element_type_265]), kwargs = {})
#   %add_311 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_222, %_unsafe_index), kwargs = {})
#   %sub_132 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_311, %unsqueeze_1058), kwargs = {})
#   %mul_401 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_132, %unsqueeze_1060), kwargs = {})
#   %mul_402 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_401, %unsqueeze_1062), kwargs = {})
#   %add_313 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_402, %unsqueeze_1064), kwargs = {})
#   %relu_132 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_313,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 14, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x5 = xindex
    x0 = (xindex % 4)
    x2 = ((xindex // 8) % 2)
    x1 = ((xindex // 4) % 2)
    x3 = xindex // 16
    tmp0 = tl.load(in_out_ptr0 + (x5), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x5), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x5), xmask)
    tmp9 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr5 + (x0 + 4*x3), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp21 = tl.load(in_ptr7 + (x0 + 4*x3), xmask, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
    tmp26 = tl.load(in_ptr9 + (x0), xmask, eviction_policy='evict_last')
    tmp35 = tl.load(in_ptr10 + (x0), xmask, eviction_policy='evict_last')
    tmp37 = tl.load(in_ptr11 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tl.full([XBLOCK], 1, tl.int32)
    tmp11 = tmp9 + tmp10
    tmp12 = tmp9 < 0
    tmp13 = tl.where(tmp12, tmp11, tmp9)
    tmp15 = tmp14 + tmp10
    tmp16 = tmp14 < 0
    tmp17 = tl.where(tmp16, tmp15, tmp14)
    tmp20 = tmp18 + tmp19
    tmp22 = tmp20 + tmp21
    tmp23 = tmp8 + tmp22
    tmp25 = tmp23 - tmp24
    tmp27 = 1e-05
    tmp28 = tmp26 + tmp27
    tmp29 = libdevice.sqrt(tmp28)
    tmp30 = tl.full([1], 1, tl.int32)
    tmp31 = tmp30 / tmp29
    tmp32 = 1.0
    tmp33 = tmp31 * tmp32
    tmp34 = tmp25 * tmp33
    tmp36 = tmp34 * tmp35
    tmp38 = tmp36 + tmp37
    tmp39 = tl.full([1], 0, tl.int32)
    tmp40 = triton_helpers.maximum(tmp39, tmp38)
    tl.store(in_out_ptr0 + (x5), tmp23, xmask)
    tl.store(out_ptr0 + (x5), tmp40, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/3b/c3bivzopehlih667jgttlxuytvvzcl4gouc4org4nri6uw42ic4t.py
# Topologically Sorted Source Nodes: [up2_1], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
# Source node to ATen node mapping:
#   up2_1 => add_340, add_341, convert_element_type_292, convert_element_type_293, iota_2, mul_436, mul_437
# Graph fragment:
#   %iota_2 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (4,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
#   %mul_436 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota_2, 1), kwargs = {})
#   %add_340 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_436, 0), kwargs = {})
#   %convert_element_type_292 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_340, torch.float32), kwargs = {})
#   %add_341 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_292, 0.0), kwargs = {})
#   %mul_437 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_341, 0.5), kwargs = {})
#   %convert_element_type_293 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_437, torch.int64), kwargs = {})
triton_poi_fused__to_copy_add_arange_mul_43 = async_compile.triton('triton_poi_fused__to_copy_add_arange_mul_43', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4}, 
    filename=__file__,
    triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_mul_43', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__to_copy_add_arange_mul_43(out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = xindex
    tmp0 = x0
    tmp1 = tmp0.to(tl.float32)
    tmp2 = 0.5
    tmp3 = tmp1 * tmp2
    tmp4 = tmp3.to(tl.int32)
    tl.store(out_ptr0 + (x0), tmp4, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ka/ckaqpsjqzsg2mkqqq4huqb6tn2h4zwohghljbigcftgm3v5755s4.py
# Topologically Sorted Source Nodes: [input_211, up1_10, input_220, up1_11, input_427, low3_6, input_436, low3_7, up2_1, low2_5, input_437, input_438], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_211 => convolution_68
#   input_220 => convolution_71
#   input_427 => convolution_140
#   input_436 => convolution_143
#   input_437 => add_346, mul_441, mul_442, sub_144
#   input_438 => relu_144
#   low2_5 => add_344
#   low3_6 => add_332
#   low3_7 => add_339
#   up1_10 => add_159
#   up1_11 => add_166
#   up2_1 => _unsafe_index_1
# Graph fragment:
#   %convolution_68 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_68, %primals_414, %primals_415, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_159 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_68, %add_152), kwargs = {})
#   %convolution_71 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_71, %primals_432, %primals_433, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_166 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_71, %add_159), kwargs = {})
#   %convolution_140 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_140, %primals_846, %primals_847, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_332 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_140, %add_325), kwargs = {})
#   %convolution_143 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_143, %primals_864, %primals_865, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_339 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_143, %add_332), kwargs = {})
#   %_unsafe_index_1 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_339, [None, None, %unsqueeze_1153, %convert_element_type_293]), kwargs = {})
#   %add_344 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_166, %_unsafe_index_1), kwargs = {})
#   %sub_144 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_344, %unsqueeze_1155), kwargs = {})
#   %mul_441 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_144, %unsqueeze_1157), kwargs = {})
#   %mul_442 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_441, %unsqueeze_1159), kwargs = {})
#   %add_346 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_442, %unsqueeze_1161), kwargs = {})
#   %relu_144 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_346,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x5 = xindex
    x0 = (xindex % 4)
    x2 = ((xindex // 16) % 4)
    x1 = ((xindex // 4) % 4)
    x3 = xindex // 64
    tmp0 = tl.load(in_out_ptr0 + (x5), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x5), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x5), xmask)
    tmp9 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr10 + (x0), xmask, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr11 + (x0), xmask, eviction_policy='evict_last')
    tmp39 = tl.load(in_ptr12 + (x0), xmask, eviction_policy='evict_last')
    tmp41 = tl.load(in_ptr13 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tl.full([XBLOCK], 2, tl.int32)
    tmp11 = tmp9 + tmp10
    tmp12 = tmp9 < 0
    tmp13 = tl.where(tmp12, tmp11, tmp9)
    tmp15 = tmp14 + tmp10
    tmp16 = tmp14 < 0
    tmp17 = tl.where(tmp16, tmp15, tmp14)
    tmp18 = tl.load(in_ptr5 + (x0 + 4*tmp17 + 8*tmp13 + 16*x3), xmask)
    tmp20 = tmp18 + tmp19
    tmp21 = tl.load(in_ptr7 + (x0 + 4*tmp17 + 8*tmp13 + 16*x3), xmask)
    tmp23 = tmp21 + tmp22
    tmp24 = tl.load(in_ptr9 + (x0 + 4*tmp17 + 8*tmp13 + 16*x3), xmask)
    tmp25 = tmp23 + tmp24
    tmp26 = tmp20 + tmp25
    tmp27 = tmp8 + tmp26
    tmp29 = tmp27 - tmp28
    tmp31 = 1e-05
    tmp32 = tmp30 + tmp31
    tmp33 = libdevice.sqrt(tmp32)
    tmp34 = tl.full([1], 1, tl.int32)
    tmp35 = tmp34 / tmp33
    tmp36 = 1.0
    tmp37 = tmp35 * tmp36
    tmp38 = tmp29 * tmp37
    tmp40 = tmp38 * tmp39
    tmp42 = tmp40 + tmp41
    tmp43 = tl.full([1], 0, tl.int32)
    tmp44 = triton_helpers.maximum(tmp43, tmp42)
    tl.store(in_out_ptr0 + (x5), tmp27, xmask)
    tl.store(out_ptr0 + (x5), tmp44, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ey/ceydaa53dqgshtridno7fuy3hypjjtm4slh4cv5oktn7a7v6i7cy.py
# Topologically Sorted Source Nodes: [up2_2], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
# Source node to ATen node mapping:
#   up2_2 => add_373, add_374, convert_element_type_320, convert_element_type_321, iota_4, mul_476, mul_477
# Graph fragment:
#   %iota_4 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (8,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
#   %mul_476 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota_4, 1), kwargs = {})
#   %add_373 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_476, 0), kwargs = {})
#   %convert_element_type_320 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_373, torch.float32), kwargs = {})
#   %add_374 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_320, 0.0), kwargs = {})
#   %mul_477 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_374, 0.5), kwargs = {})
#   %convert_element_type_321 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_477, torch.int64), kwargs = {})
triton_poi_fused__to_copy_add_arange_mul_45 = async_compile.triton('triton_poi_fused__to_copy_add_arange_mul_45', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 8}, 
    filename=__file__,
    triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0,), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_mul_45', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__to_copy_add_arange_mul_45(out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 8
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = xindex
    tmp0 = x0
    tmp1 = tmp0.to(tl.float32)
    tmp2 = 0.5
    tmp3 = tmp1 * tmp2
    tmp4 = tmp3.to(tl.int32)
    tl.store(out_ptr0 + (x0), tmp4, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/o3/co3f6pbpclqbgcdrxqawffk46czxeqypjj2z5yq3kbwtjqko4czp.py
# Topologically Sorted Source Nodes: [input_139, up1_6, input_148, up1_7, input_463, low3_10, input_472, low3_11, up2_2, low2_6, input_473, input_474], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_139 => convolution_44
#   input_148 => convolution_47
#   input_463 => convolution_152
#   input_472 => convolution_155
#   input_473 => add_379, mul_481, mul_482, sub_156
#   input_474 => relu_156
#   low2_6 => add_377
#   low3_10 => add_365
#   low3_11 => add_372
#   up1_6 => add_103
#   up1_7 => add_110
#   up2_2 => _unsafe_index_2
# Graph fragment:
#   %convolution_44 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_44, %primals_270, %primals_271, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_103 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_44, %add_96), kwargs = {})
#   %convolution_47 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_47, %primals_288, %primals_289, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_110 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_47, %add_103), kwargs = {})
#   %convolution_152 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_152, %primals_918, %primals_919, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_365 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_152, %add_358), kwargs = {})
#   %convolution_155 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_155, %primals_936, %primals_937, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_372 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_155, %add_365), kwargs = {})
#   %_unsafe_index_2 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_372, [None, None, %unsqueeze_1250, %convert_element_type_321]), kwargs = {})
#   %add_377 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_110, %_unsafe_index_2), kwargs = {})
#   %sub_156 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_377, %unsqueeze_1252), kwargs = {})
#   %mul_481 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_156, %unsqueeze_1254), kwargs = {})
#   %mul_482 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_481, %unsqueeze_1256), kwargs = {})
#   %add_379 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_482, %unsqueeze_1258), kwargs = {})
#   %relu_156 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_379,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x5 = xindex
    x0 = (xindex % 4)
    x2 = ((xindex // 32) % 8)
    x1 = ((xindex // 4) % 8)
    x3 = xindex // 256
    tmp0 = tl.load(in_out_ptr0 + (x5), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x5), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x5), xmask)
    tmp9 = tl.load(in_ptr4 + (x2), xmask, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr4 + (x1), xmask, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr10 + (x0), xmask, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr11 + (x0), xmask, eviction_policy='evict_last')
    tmp39 = tl.load(in_ptr12 + (x0), xmask, eviction_policy='evict_last')
    tmp41 = tl.load(in_ptr13 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tl.full([XBLOCK], 4, tl.int32)
    tmp11 = tmp9 + tmp10
    tmp12 = tmp9 < 0
    tmp13 = tl.where(tmp12, tmp11, tmp9)
    tmp15 = tmp14 + tmp10
    tmp16 = tmp14 < 0
    tmp17 = tl.where(tmp16, tmp15, tmp14)
    tmp18 = tl.load(in_ptr5 + (x0 + 4*tmp17 + 16*tmp13 + 64*x3), xmask)
    tmp20 = tmp18 + tmp19
    tmp21 = tl.load(in_ptr7 + (x0 + 4*tmp17 + 16*tmp13 + 64*x3), xmask)
    tmp23 = tmp21 + tmp22
    tmp24 = tl.load(in_ptr9 + (x0 + 4*tmp17 + 16*tmp13 + 64*x3), xmask)
    tmp25 = tmp23 + tmp24
    tmp26 = tmp20 + tmp25
    tmp27 = tmp8 + tmp26
    tmp29 = tmp27 - tmp28
    tmp31 = 1e-05
    tmp32 = tmp30 + tmp31
    tmp33 = libdevice.sqrt(tmp32)
    tmp34 = tl.full([1], 1, tl.int32)
    tmp35 = tmp34 / tmp33
    tmp36 = 1.0
    tmp37 = tmp35 * tmp36
    tmp38 = tmp29 * tmp37
    tmp40 = tmp38 * tmp39
    tmp42 = tmp40 + tmp41
    tmp43 = tl.full([1], 0, tl.int32)
    tmp44 = triton_helpers.maximum(tmp43, tmp42)
    tl.store(in_out_ptr0 + (x5), tmp27, xmask)
    tl.store(out_ptr0 + (x5), tmp44, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/xh/cxhbc7vxdow7uu7dvg5rsil7t5geicdlatfhteb2neh5wcjhzo7x.py
# Topologically Sorted Source Nodes: [up2_3], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
# Source node to ATen node mapping:
#   up2_3 => add_406, add_407, convert_element_type_348, convert_element_type_349, iota_6, mul_516, mul_517
# Graph fragment:
#   %iota_6 : [num_users=1] = call_function[target=torch.ops.prims.iota.default](args = (16,), kwargs = {start: 0, step: 1, dtype: torch.int64, device: cuda:0, requires_grad: False})
#   %mul_516 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%iota_6, 1), kwargs = {})
#   %add_406 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_516, 0), kwargs = {})
#   %convert_element_type_348 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_406, torch.float32), kwargs = {})
#   %add_407 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_348, 0.0), kwargs = {})
#   %mul_517 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_407, 0.5), kwargs = {})
#   %convert_element_type_349 : [num_users=6] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%mul_517, torch.int64), kwargs = {})
triton_poi_fused__to_copy_add_arange_mul_47 = async_compile.triton('triton_poi_fused__to_copy_add_arange_mul_47', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'out_ptr0': '*i64', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__to_copy_add_arange_mul_47', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 0, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__to_copy_add_arange_mul_47(out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = xindex
    tmp0 = x0
    tmp1 = tmp0.to(tl.float32)
    tmp2 = 0.5
    tmp3 = tmp1 * tmp2
    tmp4 = tmp3.to(tl.int32)
    tl.store(out_ptr0 + (x0), tmp4, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/yx/cyxjbjqzcq72b6kjsy3o4wt6675zdhy66fqhajpm5r24vioyznxt.py
# Topologically Sorted Source Nodes: [input_67, up1_2, input_76, up1_3, input_499, low3_14, input_508, low3_15, up2_3, hg, input_509, input_510], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   hg => add_410
#   input_499 => convolution_164
#   input_508 => convolution_167
#   input_509 => add_412, mul_521, mul_522, sub_168
#   input_510 => relu_168
#   input_67 => convolution_20
#   input_76 => convolution_23
#   low3_14 => add_398
#   low3_15 => add_405
#   up1_2 => add_47
#   up1_3 => add_54
#   up2_3 => _unsafe_index_3
# Graph fragment:
#   %convolution_20 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_20, %primals_126, %primals_127, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_47 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_20, %add_40), kwargs = {})
#   %convolution_23 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_23, %primals_144, %primals_145, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_54 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_23, %add_47), kwargs = {})
#   %convolution_164 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_164, %primals_990, %primals_991, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_398 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_164, %add_391), kwargs = {})
#   %convolution_167 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_167, %primals_1008, %primals_1009, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_405 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_167, %add_398), kwargs = {})
#   %_unsafe_index_3 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_405, [None, None, %unsqueeze_1347, %convert_element_type_349]), kwargs = {})
#   %add_410 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_54, %_unsafe_index_3), kwargs = {})
#   %sub_168 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_410, %unsqueeze_1349), kwargs = {})
#   %mul_521 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_168, %unsqueeze_1351), kwargs = {})
#   %mul_522 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_521, %unsqueeze_1353), kwargs = {})
#   %add_412 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_522, %unsqueeze_1355), kwargs = {})
#   %relu_168 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_412,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x5 = xindex
    x0 = (xindex % 4)
    x2 = ((xindex // 64) % 16)
    x1 = ((xindex // 4) % 16)
    x3 = xindex // 1024
    tmp0 = tl.load(in_out_ptr0 + (x5), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x5), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x5), None)
    tmp9 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr8 + (x0), None, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr10 + (x0), None, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr11 + (x0), None, eviction_policy='evict_last')
    tmp39 = tl.load(in_ptr12 + (x0), None, eviction_policy='evict_last')
    tmp41 = tl.load(in_ptr13 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tl.full([XBLOCK], 8, tl.int32)
    tmp11 = tmp9 + tmp10
    tmp12 = tmp9 < 0
    tmp13 = tl.where(tmp12, tmp11, tmp9)
    tmp15 = tmp14 + tmp10
    tmp16 = tmp14 < 0
    tmp17 = tl.where(tmp16, tmp15, tmp14)
    tmp18 = tl.load(in_ptr5 + (x0 + 4*tmp17 + 32*tmp13 + 256*x3), None)
    tmp20 = tmp18 + tmp19
    tmp21 = tl.load(in_ptr7 + (x0 + 4*tmp17 + 32*tmp13 + 256*x3), None)
    tmp23 = tmp21 + tmp22
    tmp24 = tl.load(in_ptr9 + (x0 + 4*tmp17 + 32*tmp13 + 256*x3), None)
    tmp25 = tmp23 + tmp24
    tmp26 = tmp20 + tmp25
    tmp27 = tmp8 + tmp26
    tmp29 = tmp27 - tmp28
    tmp31 = 1e-05
    tmp32 = tmp30 + tmp31
    tmp33 = libdevice.sqrt(tmp32)
    tmp34 = tl.full([1], 1, tl.int32)
    tmp35 = tmp34 / tmp33
    tmp36 = 1.0
    tmp37 = tmp35 * tmp36
    tmp38 = tmp29 * tmp37
    tmp40 = tmp38 * tmp39
    tmp42 = tmp40 + tmp41
    tmp43 = tl.full([1], 0, tl.int32)
    tmp44 = triton_helpers.maximum(tmp43, tmp42)
    tl.store(in_out_ptr0 + (x5), tmp27, None)
    tl.store(out_ptr0 + (x5), tmp44, None)
''', device_str='cuda')


# kernel path: inductor_cache/zd/czdaefj4c3wk7cvtag37iajq3vog6n2ggtz3fe6hprux74dfwtcz.py
# Topologically Sorted Source Nodes: [input_535, ll_2, input_544, ll_3], Original ATen: [aten.convolution, aten.add]
# Source node to ATen node mapping:
#   input_535 => convolution_176
#   input_544 => convolution_179
#   ll_2 => add_431
#   ll_3 => add_438
# Graph fragment:
#   %convolution_176 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_176, %primals_1062, %primals_1063, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_431 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_176, %add_424), kwargs = {})
#   %convolution_179 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_179, %primals_1080, %primals_1081, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_438 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_179, %add_431), kwargs = {})
triton_poi_fused_add_convolution_49 = async_compile.triton('triton_poi_fused_add_convolution_49', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_49', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_49(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), None)
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tl.store(in_out_ptr0 + (x2), tmp8, None)
''', device_str='cuda')


# kernel path: inductor_cache/5u/c5umxflyxxybytkwekkb4nz2yuhaxp7xg7urten6afsrvl5ymmjr.py
# Topologically Sorted Source Nodes: [input_545, input_546, input_547], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   input_545 => convolution_180
#   input_546 => add_440, mul_557, mul_558, sub_180
#   input_547 => relu_180
# Graph fragment:
#   %convolution_180 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%add_438, %primals_1082, %primals_1083, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %sub_180 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convolution_180, %unsqueeze_1445), kwargs = {})
#   %mul_557 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_180, %unsqueeze_1447), kwargs = {})
#   %mul_558 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_557, %unsqueeze_1449), kwargs = {})
#   %add_440 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_558, %unsqueeze_1451), kwargs = {})
#   %relu_180 : [num_users=3] = call_function[target=torch.ops.aten.relu.default](args = (%add_440,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 6, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 - tmp3
    tmp6 = 1e-05
    tmp7 = tmp5 + tmp6
    tmp8 = libdevice.sqrt(tmp7)
    tmp9 = tl.full([1], 1, tl.int32)
    tmp10 = tmp9 / tmp8
    tmp11 = 1.0
    tmp12 = tmp10 * tmp11
    tmp13 = tmp4 * tmp12
    tmp15 = tmp13 * tmp14
    tmp17 = tmp15 + tmp16
    tmp18 = tl.full([1], 0, tl.int32)
    tmp19 = triton_helpers.maximum(tmp18, tmp17)
    tl.store(in_out_ptr0 + (x2), tmp2, None)
    tl.store(out_ptr0 + (x2), tmp19, None)
''', device_str='cuda')


# kernel path: inductor_cache/ol/col7deejnx7fu5vgmco6dew7jx4hjuectlsjqvzm2673yt4jjsmz.py
# Topologically Sorted Source Nodes: [tmpOut, tmpOut_], Original ATen: [aten.convolution]
# Source node to ATen node mapping:
#   tmpOut => convolution_181
#   tmpOut_ => convolution_183
# Graph fragment:
#   %convolution_181 : [num_users=2] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_180, %primals_1088, %primals_1089, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %convolution_183 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%convolution_181, %primals_1092, %primals_1093, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
triton_poi_fused_convolution_51 = async_compile.triton('triton_poi_fused_convolution_51', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'y': 16, 'x': 256}, tile_hint=TileHint.DEFAULT,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_51', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_convolution_51(in_ptr0, in_ptr1, out_ptr0, out_ptr1, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
    ynumel = 16
    xnumel = 256
    yoffset = tl.program_id(1) * YBLOCK
    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
    ymask = yindex < ynumel
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    x2 = xindex
    y0 = (yindex % 4)
    y1 = yindex // 4
    y3 = yindex
    tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 1024*y1), xmask & ymask, eviction_policy='evict_last')
    tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tl.store(out_ptr0 + (x2 + 256*y3), tmp2, xmask & ymask)
    tl.store(out_ptr1 + (y0 + 4*x2 + 1024*y1), tmp2, xmask & ymask)
''', device_str='cuda')


# kernel path: inductor_cache/p6/cp6brkxeb5dy7kknof544r443llqlrsoscqjwbywwcztrsf7krff.py
# Topologically Sorted Source Nodes: [ll_, tmpOut_, add_63, x, input_548, input_549], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
# Source node to ATen node mapping:
#   add_63 => add_441
#   input_548 => add_444, mul_560, mul_561, sub_181
#   input_549 => relu_181
#   ll_ => convolution_182
#   tmpOut_ => convolution_183
#   x => add_442
# Graph fragment:
#   %convolution_182 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_180, %primals_1090, %primals_1091, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %convolution_183 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%convolution_181, %primals_1092, %primals_1093, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_441 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_26, %convolution_182), kwargs = {})
#   %add_442 : [num_users=5] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_441, %convolution_183), kwargs = {})
#   %sub_181 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_442, %unsqueeze_1453), kwargs = {})
#   %mul_560 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_181, %unsqueeze_1455), kwargs = {})
#   %mul_561 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_560, %unsqueeze_1457), kwargs = {})
#   %add_444 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_561, %unsqueeze_1459), kwargs = {})
#   %relu_181 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_444,), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), None)
    tmp1 = tl.load(in_out_ptr0 + (x2), None)
    tmp2 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp5 = tl.load(in_ptr2 + (x2), None)
    tmp6 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp9 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
    tmp3 = tmp1 + tmp2
    tmp4 = tmp0 + tmp3
    tmp7 = tmp5 + tmp6
    tmp8 = tmp4 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, None)
    tl.store(out_ptr0 + (x2), tmp25, None)
''', device_str='cuda')


# kernel path: inductor_cache/26/c26oiii4f3etovmwxpw5sy3idbgudwkn3wvmbg55v23rioxx7zqr.py
# Topologically Sorted Source Nodes: [input_2002, low3_60, input_2011, low3_61, input_2012, input_2013], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_2002 => convolution_674
#   input_2011 => convolution_677
#   input_2012 => add_1641, mul_2068, mul_2069, sub_669
#   input_2013 => relu_669
#   low3_60 => add_1632
#   low3_61 => add_1639
# Graph fragment:
#   %convolution_674 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_665, %primals_4014, %primals_4015, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1632 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_674, %add_1625), kwargs = {})
#   %convolution_677 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_668, %primals_4032, %primals_4033, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1639 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_677, %add_1632), kwargs = {})
#   %sub_669 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1639, %unsqueeze_5368), kwargs = {})
#   %mul_2068 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_669, %unsqueeze_5370), kwargs = {})
#   %mul_2069 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2068, %unsqueeze_5372), kwargs = {})
#   %add_1641 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2069, %unsqueeze_5374), kwargs = {})
#   %relu_669 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1641,), kwargs = {})
#   %sub_706 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1639, %unsqueeze_5738), kwargs = {})
#   %sub_709 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1632, %unsqueeze_5774), kwargs = {})
#   %sub_712 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1625, %unsqueeze_5810), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_53 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_53', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'out_ptr2': '*fp32', 'out_ptr3': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_53', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 11, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_53(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, out_ptr0, out_ptr1, out_ptr2, out_ptr3, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp4 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), xmask)
    tmp9 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp13 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp15 = tl.load(in_ptr7 + (x0), xmask, eviction_policy='evict_last')
    tmp24 = tl.load(in_ptr8 + (x0), xmask, eviction_policy='evict_last')
    tmp26 = tl.load(in_ptr9 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp7 - tmp9
    tmp12 = tmp6 - tmp11
    tmp14 = tmp8 - tmp13
    tmp16 = 1e-05
    tmp17 = tmp15 + tmp16
    tmp18 = libdevice.sqrt(tmp17)
    tmp19 = tl.full([1], 1, tl.int32)
    tmp20 = tmp19 / tmp18
    tmp21 = 1.0
    tmp22 = tmp20 * tmp21
    tmp23 = tmp14 * tmp22
    tmp25 = tmp23 * tmp24
    tmp27 = tmp25 + tmp26
    tmp28 = tl.full([1], 0, tl.int32)
    tmp29 = triton_helpers.maximum(tmp28, tmp27)
    tl.store(in_out_ptr0 + (x2), tmp8, xmask)
    tl.store(out_ptr0 + (x2), tmp10, xmask)
    tl.store(out_ptr1 + (x2), tmp12, xmask)
    tl.store(out_ptr2 + (x2), tmp29, xmask)
    tl.store(out_ptr3 + (x2), tmp14, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/of/cofagrneqfopselh6wcqws6ukx2pewyka2jcndiuw5rjvmrxqaeq.py
# Topologically Sorted Source Nodes: [input_2020, low3_62, input_2021, input_2022], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_2020 => convolution_680
#   input_2021 => add_1648, mul_2077, mul_2078, sub_672
#   input_2022 => relu_672
#   low3_62 => add_1646
# Graph fragment:
#   %convolution_680 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_671, %primals_4050, %primals_4051, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1646 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_680, %add_1639), kwargs = {})
#   %sub_672 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1646, %unsqueeze_5392), kwargs = {})
#   %mul_2077 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_672, %unsqueeze_5394), kwargs = {})
#   %mul_2078 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2077, %unsqueeze_5396), kwargs = {})
#   %add_1648 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2078, %unsqueeze_5398), kwargs = {})
#   %relu_672 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1648,), kwargs = {})
#   %sub_703 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1646, %unsqueeze_5702), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_54 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_54', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_54', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_54(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), xmask)
    tmp5 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), xmask, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), xmask, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, xmask)
    tl.store(out_ptr1 + (x2), tmp6, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/zj/czjycfiwurolczhfkin5tgsri6wihmcdslwjqkrzwmdv53d4yne6.py
# Topologically Sorted Source Nodes: [input_1588, up1_50, input_1597, up1_51, input_2020, low3_62, input_2029, low3_63, up2_15, hg_3, input_2030, input_2031], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   hg_3 => add_1658
#   input_1588 => convolution_536
#   input_1597 => convolution_539
#   input_2020 => convolution_680
#   input_2029 => convolution_683
#   input_2030 => add_1660, mul_2090, mul_2091, sub_675
#   input_2031 => relu_675
#   low3_62 => add_1646
#   low3_63 => add_1653
#   up1_50 => add_1295
#   up1_51 => add_1302
#   up2_15 => _unsafe_index_15
# Graph fragment:
#   %convolution_536 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_527, %primals_3186, %primals_3187, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1295 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_536, %add_1288), kwargs = {})
#   %convolution_539 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_530, %primals_3204, %primals_3205, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1302 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_539, %add_1295), kwargs = {})
#   %convolution_680 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_671, %primals_4050, %primals_4051, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1646 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_680, %add_1639), kwargs = {})
#   %convolution_683 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_674, %primals_4068, %primals_4069, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1653 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_683, %add_1646), kwargs = {})
#   %_unsafe_index_15 : [num_users=1] = call_function[target=torch.ops.aten._unsafe_index.Tensor](args = (%add_1653, [None, None, %unsqueeze_1347, %convert_element_type_349]), kwargs = {})
#   %add_1658 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%add_1302, %_unsafe_index_15), kwargs = {})
#   %sub_675 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1658, %unsqueeze_5417), kwargs = {})
#   %mul_2090 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_675, %unsqueeze_5419), kwargs = {})
#   %mul_2091 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2090, %unsqueeze_5421), kwargs = {})
#   %add_1660 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2091, %unsqueeze_5423), kwargs = {})
#   %relu_675 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1660,), kwargs = {})
#   %sub_700 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1658, %unsqueeze_5666), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_native_batch_norm_backward_relu_55 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_native_batch_norm_backward_relu_55', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*i64', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'in_ptr8': '*fp32', 'in_ptr9': '*fp32', 'in_ptr10': '*fp32', 'in_ptr11': '*fp32', 'in_ptr12': '*fp32', 'in_ptr13': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_native_batch_norm_backward_relu_55', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 13, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_native_batch_norm_backward_relu_55(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, in_ptr9, in_ptr10, in_ptr11, in_ptr12, in_ptr13, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x5 = xindex
    x0 = (xindex % 4)
    x2 = ((xindex // 64) % 16)
    x1 = ((xindex // 4) % 16)
    x3 = xindex // 1024
    tmp0 = tl.load(in_out_ptr0 + (x5), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x5), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x5), None)
    tmp9 = tl.load(in_ptr4 + (x2), None, eviction_policy='evict_last')
    tmp14 = tl.load(in_ptr4 + (x1), None, eviction_policy='evict_last')
    tmp19 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr8 + (x0), None, eviction_policy='evict_last')
    tmp28 = tl.load(in_ptr10 + (x0), None, eviction_policy='evict_last')
    tmp30 = tl.load(in_ptr11 + (x0), None, eviction_policy='evict_last')
    tmp39 = tl.load(in_ptr12 + (x0), None, eviction_policy='evict_last')
    tmp41 = tl.load(in_ptr13 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tl.full([XBLOCK], 8, tl.int32)
    tmp11 = tmp9 + tmp10
    tmp12 = tmp9 < 0
    tmp13 = tl.where(tmp12, tmp11, tmp9)
    tmp15 = tmp14 + tmp10
    tmp16 = tmp14 < 0
    tmp17 = tl.where(tmp16, tmp15, tmp14)
    tmp18 = tl.load(in_ptr5 + (x0 + 4*tmp17 + 32*tmp13 + 256*x3), None)
    tmp20 = tmp18 + tmp19
    tmp21 = tl.load(in_ptr7 + (x0 + 4*tmp17 + 32*tmp13 + 256*x3), None)
    tmp23 = tmp21 + tmp22
    tmp24 = tl.load(in_ptr9 + (x0 + 4*tmp17 + 32*tmp13 + 256*x3), None)
    tmp25 = tmp23 + tmp24
    tmp26 = tmp20 + tmp25
    tmp27 = tmp8 + tmp26
    tmp29 = tmp27 - tmp28
    tmp31 = 1e-05
    tmp32 = tmp30 + tmp31
    tmp33 = libdevice.sqrt(tmp32)
    tmp34 = tl.full([1], 1, tl.int32)
    tmp35 = tmp34 / tmp33
    tmp36 = 1.0
    tmp37 = tmp35 * tmp36
    tmp38 = tmp29 * tmp37
    tmp40 = tmp38 * tmp39
    tmp42 = tmp40 + tmp41
    tmp43 = tl.full([1], 0, tl.int32)
    tmp44 = triton_helpers.maximum(tmp43, tmp42)
    tl.store(in_out_ptr0 + (x5), tmp27, None)
    tl.store(out_ptr0 + (x5), tmp44, None)
    tl.store(out_ptr1 + (x5), tmp29, None)
''', device_str='cuda')


# kernel path: inductor_cache/ud/cudzrg5owtkblmdl2ndzgqvmd4xufelrkys674473626mdelakz2.py
# Topologically Sorted Source Nodes: [input_2038, ll_12, input_2039, input_2040], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_2038 => convolution_686
#   input_2039 => add_1667, mul_2099, mul_2100, sub_678
#   input_2040 => relu_678
#   ll_12 => add_1665
# Graph fragment:
#   %convolution_686 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_677, %primals_4086, %primals_4087, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1665 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_686, %add_1658), kwargs = {})
#   %sub_678 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1665, %unsqueeze_5441), kwargs = {})
#   %mul_2099 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_678, %unsqueeze_5443), kwargs = {})
#   %mul_2100 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2099, %unsqueeze_5445), kwargs = {})
#   %add_1667 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2100, %unsqueeze_5447), kwargs = {})
#   %relu_678 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1667,), kwargs = {})
#   %sub_697 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1665, %unsqueeze_5630), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_56 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_56', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_56', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 7, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_56(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr2 + (x2), None)
    tmp5 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp16 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp18 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = 1e-05
    tmp9 = tmp7 + tmp8
    tmp10 = libdevice.sqrt(tmp9)
    tmp11 = tl.full([1], 1, tl.int32)
    tmp12 = tmp11 / tmp10
    tmp13 = 1.0
    tmp14 = tmp12 * tmp13
    tmp15 = tmp6 * tmp14
    tmp17 = tmp15 * tmp16
    tmp19 = tmp17 + tmp18
    tmp20 = tl.full([1], 0, tl.int32)
    tmp21 = triton_helpers.maximum(tmp20, tmp19)
    tl.store(out_ptr0 + (x2), tmp21, None)
    tl.store(out_ptr1 + (x2), tmp6, None)
''', device_str='cuda')


# kernel path: inductor_cache/u6/cu64pnsj3o7kmebzwhtn5fxnxysbnywyxjobz7hd4t7cv2tfrvwu.py
# Topologically Sorted Source Nodes: [input_2038, ll_12, input_2047, ll_13, input_2048, input_2049], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_2038 => convolution_686
#   input_2047 => convolution_689
#   input_2048 => add_1674, mul_2108, mul_2109, sub_681
#   input_2049 => relu_681
#   ll_12 => add_1665
#   ll_13 => add_1672
# Graph fragment:
#   %convolution_686 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_677, %primals_4086, %primals_4087, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1665 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_686, %add_1658), kwargs = {})
#   %convolution_689 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_680, %primals_4104, %primals_4105, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1672 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_689, %add_1665), kwargs = {})
#   %sub_681 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1672, %unsqueeze_5465), kwargs = {})
#   %mul_2108 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_681, %unsqueeze_5467), kwargs = {})
#   %mul_2109 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_2108, %unsqueeze_5469), kwargs = {})
#   %add_1674 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_2109, %unsqueeze_5471), kwargs = {})
#   %relu_681 : [num_users=2] = call_function[target=torch.ops.aten.relu.default](args = (%add_1674,), kwargs = {})
#   %sub_694 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1672, %unsqueeze_5594), kwargs = {})
triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_57 = async_compile.triton('triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_57', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'out_ptr0': '*fp32', 'out_ptr1': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_57', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 9, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_57(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, out_ptr0, out_ptr1, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp4 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp6 = tl.load(in_ptr3 + (x2), None)
    tmp9 = tl.load(in_ptr4 + (x0), None, eviction_policy='evict_last')
    tmp11 = tl.load(in_ptr5 + (x0), None, eviction_policy='evict_last')
    tmp20 = tl.load(in_ptr6 + (x0), None, eviction_policy='evict_last')
    tmp22 = tl.load(in_ptr7 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp5 = tmp3 + tmp4
    tmp7 = tmp5 + tmp6
    tmp8 = tmp2 + tmp7
    tmp10 = tmp8 - tmp9
    tmp12 = 1e-05
    tmp13 = tmp11 + tmp12
    tmp14 = libdevice.sqrt(tmp13)
    tmp15 = tl.full([1], 1, tl.int32)
    tmp16 = tmp15 / tmp14
    tmp17 = 1.0
    tmp18 = tmp16 * tmp17
    tmp19 = tmp10 * tmp18
    tmp21 = tmp19 * tmp20
    tmp23 = tmp21 + tmp22
    tmp24 = tl.full([1], 0, tl.int32)
    tmp25 = triton_helpers.maximum(tmp24, tmp23)
    tl.store(in_out_ptr0 + (x2), tmp8, None)
    tl.store(out_ptr0 + (x2), tmp25, None)
    tl.store(out_ptr1 + (x2), tmp10, None)
''', device_str='cuda')


# kernel path: inductor_cache/2b/c2bh3sj4htou2na4532oqxif5ll2h42kq457vnmnetgd5uipwdws.py
# Topologically Sorted Source Nodes: [tmpOut_3], Original ATen: [aten.convolution]
# Source node to ATen node mapping:
#   tmpOut_3 => convolution_697
# Graph fragment:
#   %convolution_697 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_687, %primals_4148, %primals_4149, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
triton_poi_fused_convolution_58 = async_compile.triton('triton_poi_fused_convolution_58', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'y': 16, 'x': 256}, tile_hint=TileHint.DEFAULT,
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'ynumel': 'i32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_convolution_58', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_convolution_58(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
    ynumel = 16
    xnumel = 256
    yoffset = tl.program_id(1) * YBLOCK
    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
    ymask = yindex < ynumel
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
    xmask = xindex < xnumel
    x2 = xindex
    y0 = (yindex % 4)
    y1 = yindex // 4
    y3 = yindex
    tmp0 = tl.load(in_ptr0 + (y0 + 4*x2 + 1024*y1), xmask & ymask, eviction_policy='evict_last')
    tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tl.store(out_ptr0 + (x2 + 256*y3), tmp2, xmask & ymask)
''', device_str='cuda')


# kernel path: inductor_cache/75/c75bdlac52hbsyenbd7eihgheaqafw6fej7t5fdpgzoff65rlnaf.py
# Topologically Sorted Source Nodes: [input_1984, low3_58], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1984 => convolution_668
#   low3_58 => add_1613
# Graph fragment:
#   %convolution_668 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_659, %primals_3978, %primals_3979, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1613 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_668, %add_1606), kwargs = {})
#   %sub_715 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1613, %unsqueeze_5846), kwargs = {})
#   %sub_718 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1606, %unsqueeze_5882), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_59 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_59', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_59', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_59(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = tmp3 - tmp7
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
    tl.store(out_ptr0 + (x2), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/2y/c2y7x3nibvgrnczfpohysc3d3po3dqjqgi4hsrvekmmvoazga3og.py
# Topologically Sorted Source Nodes: [input_1948, low3_54], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1948 => convolution_656
#   low3_54 => add_1580
# Graph fragment:
#   %convolution_656 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_647, %primals_3906, %primals_3907, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1580 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_656, %add_1573), kwargs = {})
#   %sub_727 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1580, %unsqueeze_5990), kwargs = {})
#   %sub_730 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1573, %unsqueeze_6026), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_60 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_60', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_60', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_60(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = tmp3 - tmp7
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
    tl.store(out_ptr0 + (x2), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/oa/coafbjvde5efo7i2j43hw7jqj5yjv7erxh5rba5ou62v3gbaef3i.py
# Topologically Sorted Source Nodes: [input_1903, low3_49], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1903 => convolution_641
#   low3_49 => add_1540
# Graph fragment:
#   %convolution_641 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_632, %primals_3816, %primals_3817, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1540 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_641, %add_1533), kwargs = {})
#   %sub_742 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1540, %unsqueeze_6170), kwargs = {})
#   %sub_745 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1533, %unsqueeze_6206), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_61 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_61', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_61', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_61(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = tmp3 - tmp7
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
    tl.store(out_ptr0 + (x2), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/fb/cfbvnlzjsx6cbhl33zfuwdhvmqygqtpd6lbx7b4s2ezcqsxi26ts.py
# Topologically Sorted Source Nodes: [low1_75], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   low1_75 => _low_memory_max_pool2d_with_offsets_16
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_16 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_1442, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %sub_772 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_32, %unsqueeze_6530), kwargs = {})
triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 16}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 16
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = xindex // 4
    x2 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 16*x1), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 16*x1), xmask)
    tmp3 = tl.load(in_ptr0 + (8 + x0 + 16*x1), xmask)
    tmp5 = tl.load(in_ptr0 + (12 + x0 + 16*x1), xmask)
    tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = triton_helpers.maximum(tmp1, tmp0)
    tmp4 = triton_helpers.maximum(tmp3, tmp2)
    tmp6 = triton_helpers.maximum(tmp5, tmp4)
    tmp8 = tmp6 - tmp7
    tl.store(out_ptr0 + (x2), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/d6/cd6wabx6n2pzemwtunfm6g3pepkadmgftidwq6bbru5ppt3lplwv.py
# Topologically Sorted Source Nodes: [input_1786, up1_60], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1786 => convolution_602
#   up1_60 => add_1449
# Graph fragment:
#   %convolution_602 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_593, %primals_3582, %primals_3583, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1449 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_602, %add_1442), kwargs = {})
#   %sub_781 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1449, %unsqueeze_6638), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_63 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_63', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_63', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_63(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/ec/cec6puozdhwwlu6ywgvrtwfkryy3jc7movxt5shao32g4lql4blv.py
# Topologically Sorted Source Nodes: [low1_70], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   low1_70 => _low_memory_max_pool2d_with_offsets_15
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_15 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_1386, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %sub_796 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_30, %unsqueeze_6818), kwargs = {})
triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 64}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 64
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 2)
    x2 = xindex // 8
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 8*x1 + 32*x2), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 8*x1 + 32*x2), xmask)
    tmp3 = tl.load(in_ptr0 + (16 + x0 + 8*x1 + 32*x2), xmask)
    tmp5 = tl.load(in_ptr0 + (20 + x0 + 8*x1 + 32*x2), xmask)
    tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = triton_helpers.maximum(tmp1, tmp0)
    tmp4 = triton_helpers.maximum(tmp3, tmp2)
    tmp6 = triton_helpers.maximum(tmp5, tmp4)
    tmp8 = tmp6 - tmp7
    tl.store(out_ptr0 + (x3), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/2l/c2lpjsmdwwhxy6oljshogyyoj4j4rxipxk6ycsplnretzoilf7ck.py
# Topologically Sorted Source Nodes: [input_1714, up1_56], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1714 => convolution_578
#   up1_56 => add_1393
# Graph fragment:
#   %convolution_578 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_569, %primals_3438, %primals_3439, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1393 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_578, %add_1386), kwargs = {})
#   %sub_805 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1393, %unsqueeze_6926), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_65 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_65', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_65', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_65(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/qm/cqmnssyan64wurmuhnzhv67sudxeyhvpybgw2coilugyto4anwq6.py
# Topologically Sorted Source Nodes: [low1_65], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   low1_65 => _low_memory_max_pool2d_with_offsets_14
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_14 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_1330, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %sub_820 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_28, %unsqueeze_7106), kwargs = {})
triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 256}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 256
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 4)
    x2 = xindex // 16
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 8*x1 + 64*x2), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 8*x1 + 64*x2), xmask)
    tmp3 = tl.load(in_ptr0 + (32 + x0 + 8*x1 + 64*x2), xmask)
    tmp5 = tl.load(in_ptr0 + (36 + x0 + 8*x1 + 64*x2), xmask)
    tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = triton_helpers.maximum(tmp1, tmp0)
    tmp4 = triton_helpers.maximum(tmp3, tmp2)
    tmp6 = triton_helpers.maximum(tmp5, tmp4)
    tmp8 = tmp6 - tmp7
    tl.store(out_ptr0 + (x3), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/24/c24qq5apuzfphoi2kbuqubqx6g6bdipzzmc5zuu6kdthhqja2kdw.py
# Topologically Sorted Source Nodes: [input_1660, up1_54], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1660 => convolution_560
#   up1_54 => add_1351
# Graph fragment:
#   %convolution_560 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_551, %primals_3330, %primals_3331, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1351 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_560, %add_1344), kwargs = {})
#   %sub_823 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1351, %unsqueeze_7142), kwargs = {})
#   %sub_826 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1344, %unsqueeze_7178), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_67 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_67', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_67', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_67(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = tmp3 - tmp7
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
    tl.store(out_ptr0 + (x2), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/sy/csyl3dabq6shllbgsgagtw7f2tthk4drbpj3k5jahssovqt3y3sw.py
# Topologically Sorted Source Nodes: [input_1642, up1_52], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1642 => convolution_554
#   up1_52 => add_1337
# Graph fragment:
#   %convolution_554 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_545, %primals_3294, %primals_3295, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1337 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_554, %add_1330), kwargs = {})
#   %sub_829 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1337, %unsqueeze_7214), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_68 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_68', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_68', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_68(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), xmask)
    tmp1 = tl.load(in_ptr0 + (x0), xmask, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), xmask)
    tmp5 = tl.load(in_ptr2 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tl.store(in_out_ptr0 + (x2), tmp6, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/kp/ckpplgq3hsyeto2f3hqs5inlr4osxpmzomkyzbivgzkh2p4vrxc5.py
# Topologically Sorted Source Nodes: [low1_60], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   low1_60 => _low_memory_max_pool2d_with_offsets_13
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets_13 : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_1274, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %sub_844 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem_26, %unsqueeze_7394), kwargs = {})
triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1024}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1024
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = xindex < xnumel
    x0 = (xindex % 4)
    x1 = ((xindex // 4) % 8)
    x2 = xindex // 32
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 8*x1 + 128*x2), xmask)
    tmp1 = tl.load(in_ptr0 + (4 + x0 + 8*x1 + 128*x2), xmask)
    tmp3 = tl.load(in_ptr0 + (64 + x0 + 8*x1 + 128*x2), xmask)
    tmp5 = tl.load(in_ptr0 + (68 + x0 + 8*x1 + 128*x2), xmask)
    tmp7 = tl.load(in_ptr1 + (x0), xmask, eviction_policy='evict_last')
    tmp2 = triton_helpers.maximum(tmp1, tmp0)
    tmp4 = triton_helpers.maximum(tmp3, tmp2)
    tmp6 = triton_helpers.maximum(tmp5, tmp4)
    tmp8 = tmp6 - tmp7
    tl.store(out_ptr0 + (x3), tmp8, xmask)
''', device_str='cuda')


# kernel path: inductor_cache/2t/c2tc6mvmwxn7dmsoyjtt2tihs3a3nrq3gf5otqbg3diawdhxrgrl.py
# Topologically Sorted Source Nodes: [input_1588, up1_50], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1588 => convolution_536
#   up1_50 => add_1295
# Graph fragment:
#   %convolution_536 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_527, %primals_3186, %primals_3187, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1295 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_536, %add_1288), kwargs = {})
#   %sub_847 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1295, %unsqueeze_7430), kwargs = {})
#   %sub_850 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1288, %unsqueeze_7466), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_70 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_70', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_70', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_70(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp5 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp7 = tl.load(in_ptr3 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tmp8 = tmp3 - tmp7
    tl.store(in_out_ptr0 + (x2), tmp6, None)
    tl.store(out_ptr0 + (x2), tmp8, None)
''', device_str='cuda')


# kernel path: inductor_cache/ik/cik24kigcns7cnpxrtr2t5f7ckvx2ocr7dlg2ap7keckqv433bfe.py
# Topologically Sorted Source Nodes: [input_1570, up1_48], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_1570 => convolution_530
#   up1_48 => add_1281
# Graph fragment:
#   %convolution_530 : [num_users=1] = call_function[target=torch.ops.aten.convolution.default](args = (%relu_521, %primals_3150, %primals_3151, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), kwargs = {})
#   %add_1281 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%convolution_530, %add_1274), kwargs = {})
#   %sub_853 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_1281, %unsqueeze_7502), kwargs = {})
triton_poi_fused_add_convolution_native_batch_norm_backward_71 = async_compile.triton('triton_poi_fused_add_convolution_native_batch_norm_backward_71', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 4096}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_convolution_native_batch_norm_backward_71', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_convolution_native_batch_norm_backward_71(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
    xnumel = 4096
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x2 = xindex
    x0 = (xindex % 4)
    tmp0 = tl.load(in_out_ptr0 + (x2), None)
    tmp1 = tl.load(in_ptr0 + (x0), None, eviction_policy='evict_last')
    tmp3 = tl.load(in_ptr1 + (x2), None)
    tmp5 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last')
    tmp2 = tmp0 + tmp1
    tmp4 = tmp2 + tmp3
    tmp6 = tmp4 - tmp5
    tl.store(in_out_ptr0 + (x2), tmp6, None)
''', device_str='cuda')


# kernel path: inductor_cache/eo/ceowri3gs64wynxoug6lr7s6fqzjnqxtyfbgeyk7lxhrs5dra66r.py
# Topologically Sorted Source Nodes: [input_17], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
# Source node to ATen node mapping:
#   input_17 => _low_memory_max_pool2d_with_offsets
# Graph fragment:
#   %_low_memory_max_pool2d_with_offsets : [num_users=2] = call_function[target=torch.ops.prims._low_memory_max_pool2d_with_offsets.default](args = (%add_10, [2, 2], [2, 2], [0, 0], [1, 1], False), kwargs = {})
#   %sub_1370 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%getitem, %unsqueeze_13706), kwargs = {})
triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_72 = async_compile.triton('triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_72', '''
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 131072}, 
    filename=__file__,
    triton_meta={'signature': {'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'out_ptr0': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3), 'tt.equal_to': ()}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_72', 'mutated_arg_names': [], 'optimize_mem': False, 'no_x_dim': False, 'num_load': 5, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_72(in_ptr0, in_ptr1, out_ptr0, xnumel, XBLOCK : tl.constexpr):
    xnumel = 131072
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    x0 = (xindex % 128)
    x1 = ((xindex // 128) % 16)
    x2 = xindex // 2048
    x3 = xindex
    tmp0 = tl.load(in_ptr0 + (x0 + 256*x1 + 8192*x2), None)
    tmp1 = tl.load(in_ptr0 + (128 + x0 + 256*x1 + 8192*x2), None)
    tmp3 = tl.load(in_ptr0 + (4096 + x0 + 256*x1 + 8192*x2), None)
    tmp5 = tl.load(in_ptr0 + (4224 + x0 + 256*x1 + 8192*x2), None)
    tmp7 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last')
    tmp2 = triton_helpers.maximum(tmp1, tmp0)
    tmp4 = triton_helpers.maximum(tmp3, tmp2)
    tmp6 = triton_helpers.maximum(tmp5, tmp4)
    tmp8 = tmp6 - tmp7
    tl.store(out_ptr0 + (x3), tmp8, None)
''', device_str='cuda')


async_compile.wait(globals())
del async_compile

def call(args):
    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121, primals_1122, primals_1123, primals_1124, primals_1125, primals_1126, primals_1127, primals_1128, primals_1129, primals_1130, primals_1131, primals_1132, primals_1133, primals_1134, primals_1135, primals_1136, primals_1137, primals_1138, primals_1139, primals_1140, primals_1141, primals_1142, primals_1143, primals_1144, primals_1145, primals_1146, primals_1147, primals_1148, primals_1149, primals_1150, primals_1151, primals_1152, primals_1153, primals_1154, primals_1155, primals_1156, primals_1157, primals_1158, primals_1159, primals_1160, primals_1161, primals_1162, primals_1163, primals_1164, primals_1165, primals_1166, primals_1167, primals_1168, primals_1169, primals_1170, primals_1171, primals_1172, primals_1173, primals_1174, primals_1175, primals_1176, primals_1177, primals_1178, primals_1179, primals_1180, primals_1181, primals_1182, primals_1183, primals_1184, primals_1185, primals_1186, primals_1187, primals_1188, primals_1189, primals_1190, primals_1191, primals_1192, primals_1193, primals_1194, primals_1195, primals_1196, primals_1197, primals_1198, primals_1199, primals_1200, primals_1201, primals_1202, primals_1203, primals_1204, primals_1205, primals_1206, primals_1207, primals_1208, primals_1209, primals_1210, primals_1211, primals_1212, primals_1213, primals_1214, primals_1215, primals_1216, primals_1217, primals_1218, primals_1219, primals_1220, primals_1221, primals_1222, primals_1223, primals_1224, primals_1225, primals_1226, primals_1227, primals_1228, primals_1229, primals_1230, primals_1231, primals_1232, primals_1233, primals_1234, primals_1235, primals_1236, primals_1237, primals_1238, primals_1239, primals_1240, primals_1241, primals_1242, primals_1243, primals_1244, primals_1245, primals_1246, primals_1247, primals_1248, primals_1249, primals_1250, primals_1251, primals_1252, primals_1253, primals_1254, primals_1255, primals_1256, primals_1257, primals_1258, primals_1259, primals_1260, primals_1261, primals_1262, primals_1263, primals_1264, primals_1265, primals_1266, primals_1267, primals_1268, primals_1269, primals_1270, primals_1271, primals_1272, primals_1273, primals_1274, primals_1275, primals_1276, primals_1277, primals_1278, primals_1279, primals_1280, primals_1281, primals_1282, primals_1283, primals_1284, primals_1285, primals_1286, primals_1287, primals_1288, primals_1289, primals_1290, primals_1291, primals_1292, primals_1293, primals_1294, primals_1295, primals_1296, primals_1297, primals_1298, primals_1299, primals_1300, primals_1301, primals_1302, primals_1303, primals_1304, primals_1305, primals_1306, primals_1307, primals_1308, primals_1309, primals_1310, primals_1311, primals_1312, primals_1313, primals_1314, primals_1315, primals_1316, primals_1317, primals_1318, primals_1319, primals_1320, primals_1321, primals_1322, primals_1323, primals_1324, primals_1325, primals_1326, primals_1327, primals_1328, primals_1329, primals_1330, primals_1331, primals_1332, primals_1333, primals_1334, primals_1335, primals_1336, primals_1337, primals_1338, primals_1339, primals_1340, primals_1341, primals_1342, primals_1343, primals_1344, primals_1345, primals_1346, primals_1347, primals_1348, primals_1349, primals_1350, primals_1351, primals_1352, primals_1353, primals_1354, primals_1355, primals_1356, primals_1357, primals_1358, primals_1359, primals_1360, primals_1361, primals_1362, primals_1363, primals_1364, primals_1365, primals_1366, primals_1367, primals_1368, primals_1369, primals_1370, primals_1371, primals_1372, primals_1373, primals_1374, primals_1375, primals_1376, primals_1377, primals_1378, primals_1379, primals_1380, primals_1381, primals_1382, primals_1383, primals_1384, primals_1385, primals_1386, primals_1387, primals_1388, primals_1389, primals_1390, primals_1391, primals_1392, primals_1393, primals_1394, primals_1395, primals_1396, primals_1397, primals_1398, primals_1399, primals_1400, primals_1401, primals_1402, primals_1403, primals_1404, primals_1405, primals_1406, primals_1407, primals_1408, primals_1409, primals_1410, primals_1411, primals_1412, primals_1413, primals_1414, primals_1415, primals_1416, primals_1417, primals_1418, primals_1419, primals_1420, primals_1421, primals_1422, primals_1423, primals_1424, primals_1425, primals_1426, primals_1427, primals_1428, primals_1429, primals_1430, primals_1431, primals_1432, primals_1433, primals_1434, primals_1435, primals_1436, primals_1437, primals_1438, primals_1439, primals_1440, primals_1441, primals_1442, primals_1443, primals_1444, primals_1445, primals_1446, primals_1447, primals_1448, primals_1449, primals_1450, primals_1451, primals_1452, primals_1453, primals_1454, primals_1455, primals_1456, primals_1457, primals_1458, primals_1459, primals_1460, primals_1461, primals_1462, primals_1463, primals_1464, primals_1465, primals_1466, primals_1467, primals_1468, primals_1469, primals_1470, primals_1471, primals_1472, primals_1473, primals_1474, primals_1475, primals_1476, primals_1477, primals_1478, primals_1479, primals_1480, primals_1481, primals_1482, primals_1483, primals_1484, primals_1485, primals_1486, primals_1487, primals_1488, primals_1489, primals_1490, primals_1491, primals_1492, primals_1493, primals_1494, primals_1495, primals_1496, primals_1497, primals_1498, primals_1499, primals_1500, primals_1501, primals_1502, primals_1503, primals_1504, primals_1505, primals_1506, primals_1507, primals_1508, primals_1509, primals_1510, primals_1511, primals_1512, primals_1513, primals_1514, primals_1515, primals_1516, primals_1517, primals_1518, primals_1519, primals_1520, primals_1521, primals_1522, primals_1523, primals_1524, primals_1525, primals_1526, primals_1527, primals_1528, primals_1529, primals_1530, primals_1531, primals_1532, primals_1533, primals_1534, primals_1535, primals_1536, primals_1537, primals_1538, primals_1539, primals_1540, primals_1541, primals_1542, primals_1543, primals_1544, primals_1545, primals_1546, primals_1547, primals_1548, primals_1549, primals_1550, primals_1551, primals_1552, primals_1553, primals_1554, primals_1555, primals_1556, primals_1557, primals_1558, primals_1559, primals_1560, primals_1561, primals_1562, primals_1563, primals_1564, primals_1565, primals_1566, primals_1567, primals_1568, primals_1569, primals_1570, primals_1571, primals_1572, primals_1573, primals_1574, primals_1575, primals_1576, primals_1577, primals_1578, primals_1579, primals_1580, primals_1581, primals_1582, primals_1583, primals_1584, primals_1585, primals_1586, primals_1587, primals_1588, primals_1589, primals_1590, primals_1591, primals_1592, primals_1593, primals_1594, primals_1595, primals_1596, primals_1597, primals_1598, primals_1599, primals_1600, primals_1601, primals_1602, primals_1603, primals_1604, primals_1605, primals_1606, primals_1607, primals_1608, primals_1609, primals_1610, primals_1611, primals_1612, primals_1613, primals_1614, primals_1615, primals_1616, primals_1617, primals_1618, primals_1619, primals_1620, primals_1621, primals_1622, primals_1623, primals_1624, primals_1625, primals_1626, primals_1627, primals_1628, primals_1629, primals_1630, primals_1631, primals_1632, primals_1633, primals_1634, primals_1635, primals_1636, primals_1637, primals_1638, primals_1639, primals_1640, primals_1641, primals_1642, primals_1643, primals_1644, primals_1645, primals_1646, primals_1647, primals_1648, primals_1649, primals_1650, primals_1651, primals_1652, primals_1653, primals_1654, primals_1655, primals_1656, primals_1657, primals_1658, primals_1659, primals_1660, primals_1661, primals_1662, primals_1663, primals_1664, primals_1665, primals_1666, primals_1667, primals_1668, primals_1669, primals_1670, primals_1671, primals_1672, primals_1673, primals_1674, primals_1675, primals_1676, primals_1677, primals_1678, primals_1679, primals_1680, primals_1681, primals_1682, primals_1683, primals_1684, primals_1685, primals_1686, primals_1687, primals_1688, primals_1689, primals_1690, primals_1691, primals_1692, primals_1693, primals_1694, primals_1695, primals_1696, primals_1697, primals_1698, primals_1699, primals_1700, primals_1701, primals_1702, primals_1703, primals_1704, primals_1705, primals_1706, primals_1707, primals_1708, primals_1709, primals_1710, primals_1711, primals_1712, primals_1713, primals_1714, primals_1715, primals_1716, primals_1717, primals_1718, primals_1719, primals_1720, primals_1721, primals_1722, primals_1723, primals_1724, primals_1725, primals_1726, primals_1727, primals_1728, primals_1729, primals_1730, primals_1731, primals_1732, primals_1733, primals_1734, primals_1735, primals_1736, primals_1737, primals_1738, primals_1739, primals_1740, primals_1741, primals_1742, primals_1743, primals_1744, primals_1745, primals_1746, primals_1747, primals_1748, primals_1749, primals_1750, primals_1751, primals_1752, primals_1753, primals_1754, primals_1755, primals_1756, primals_1757, primals_1758, primals_1759, primals_1760, primals_1761, primals_1762, primals_1763, primals_1764, primals_1765, primals_1766, primals_1767, primals_1768, primals_1769, primals_1770, primals_1771, primals_1772, primals_1773, primals_1774, primals_1775, primals_1776, primals_1777, primals_1778, primals_1779, primals_1780, primals_1781, primals_1782, primals_1783, primals_1784, primals_1785, primals_1786, primals_1787, primals_1788, primals_1789, primals_1790, primals_1791, primals_1792, primals_1793, primals_1794, primals_1795, primals_1796, primals_1797, primals_1798, primals_1799, primals_1800, primals_1801, primals_1802, primals_1803, primals_1804, primals_1805, primals_1806, primals_1807, primals_1808, primals_1809, primals_1810, primals_1811, primals_1812, primals_1813, primals_1814, primals_1815, primals_1816, primals_1817, primals_1818, primals_1819, primals_1820, primals_1821, primals_1822, primals_1823, primals_1824, primals_1825, primals_1826, primals_1827, primals_1828, primals_1829, primals_1830, primals_1831, primals_1832, primals_1833, primals_1834, primals_1835, primals_1836, primals_1837, primals_1838, primals_1839, primals_1840, primals_1841, primals_1842, primals_1843, primals_1844, primals_1845, primals_1846, primals_1847, primals_1848, primals_1849, primals_1850, primals_1851, primals_1852, primals_1853, primals_1854, primals_1855, primals_1856, primals_1857, primals_1858, primals_1859, primals_1860, primals_1861, primals_1862, primals_1863, primals_1864, primals_1865, primals_1866, primals_1867, primals_1868, primals_1869, primals_1870, primals_1871, primals_1872, primals_1873, primals_1874, primals_1875, primals_1876, primals_1877, primals_1878, primals_1879, primals_1880, primals_1881, primals_1882, primals_1883, primals_1884, primals_1885, primals_1886, primals_1887, primals_1888, primals_1889, primals_1890, primals_1891, primals_1892, primals_1893, primals_1894, primals_1895, primals_1896, primals_1897, primals_1898, primals_1899, primals_1900, primals_1901, primals_1902, primals_1903, primals_1904, primals_1905, primals_1906, primals_1907, primals_1908, primals_1909, primals_1910, primals_1911, primals_1912, primals_1913, primals_1914, primals_1915, primals_1916, primals_1917, primals_1918, primals_1919, primals_1920, primals_1921, primals_1922, primals_1923, primals_1924, primals_1925, primals_1926, primals_1927, primals_1928, primals_1929, primals_1930, primals_1931, primals_1932, primals_1933, primals_1934, primals_1935, primals_1936, primals_1937, primals_1938, primals_1939, primals_1940, primals_1941, primals_1942, primals_1943, primals_1944, primals_1945, primals_1946, primals_1947, primals_1948, primals_1949, primals_1950, primals_1951, primals_1952, primals_1953, primals_1954, primals_1955, primals_1956, primals_1957, primals_1958, primals_1959, primals_1960, primals_1961, primals_1962, primals_1963, primals_1964, primals_1965, primals_1966, primals_1967, primals_1968, primals_1969, primals_1970, primals_1971, primals_1972, primals_1973, primals_1974, primals_1975, primals_1976, primals_1977, primals_1978, primals_1979, primals_1980, primals_1981, primals_1982, primals_1983, primals_1984, primals_1985, primals_1986, primals_1987, primals_1988, primals_1989, primals_1990, primals_1991, primals_1992, primals_1993, primals_1994, primals_1995, primals_1996, primals_1997, primals_1998, primals_1999, primals_2000, primals_2001, primals_2002, primals_2003, primals_2004, primals_2005, primals_2006, primals_2007, primals_2008, primals_2009, primals_2010, primals_2011, primals_2012, primals_2013, primals_2014, primals_2015, primals_2016, primals_2017, primals_2018, primals_2019, primals_2020, primals_2021, primals_2022, primals_2023, primals_2024, primals_2025, primals_2026, primals_2027, primals_2028, primals_2029, primals_2030, primals_2031, primals_2032, primals_2033, primals_2034, primals_2035, primals_2036, primals_2037, primals_2038, primals_2039, primals_2040, primals_2041, primals_2042, primals_2043, primals_2044, primals_2045, primals_2046, primals_2047, primals_2048, primals_2049, primals_2050, primals_2051, primals_2052, primals_2053, primals_2054, primals_2055, primals_2056, primals_2057, primals_2058, primals_2059, primals_2060, primals_2061, primals_2062, primals_2063, primals_2064, primals_2065, primals_2066, primals_2067, primals_2068, primals_2069, primals_2070, primals_2071, primals_2072, primals_2073, primals_2074, primals_2075, primals_2076, primals_2077, primals_2078, primals_2079, primals_2080, primals_2081, primals_2082, primals_2083, primals_2084, primals_2085, primals_2086, primals_2087, primals_2088, primals_2089, primals_2090, primals_2091, primals_2092, primals_2093, primals_2094, primals_2095, primals_2096, primals_2097, primals_2098, primals_2099, primals_2100, primals_2101, primals_2102, primals_2103, primals_2104, primals_2105, primals_2106, primals_2107, primals_2108, primals_2109, primals_2110, primals_2111, primals_2112, primals_2113, primals_2114, primals_2115, primals_2116, primals_2117, primals_2118, primals_2119, primals_2120, primals_2121, primals_2122, primals_2123, primals_2124, primals_2125, primals_2126, primals_2127, primals_2128, primals_2129, primals_2130, primals_2131, primals_2132, primals_2133, primals_2134, primals_2135, primals_2136, primals_2137, primals_2138, primals_2139, primals_2140, primals_2141, primals_2142, primals_2143, primals_2144, primals_2145, primals_2146, primals_2147, primals_2148, primals_2149, primals_2150, primals_2151, primals_2152, primals_2153, primals_2154, primals_2155, primals_2156, primals_2157, primals_2158, primals_2159, primals_2160, primals_2161, primals_2162, primals_2163, primals_2164, primals_2165, primals_2166, primals_2167, primals_2168, primals_2169, primals_2170, primals_2171, primals_2172, primals_2173, primals_2174, primals_2175, primals_2176, primals_2177, primals_2178, primals_2179, primals_2180, primals_2181, primals_2182, primals_2183, primals_2184, primals_2185, primals_2186, primals_2187, primals_2188, primals_2189, primals_2190, primals_2191, primals_2192, primals_2193, primals_2194, primals_2195, primals_2196, primals_2197, primals_2198, primals_2199, primals_2200, primals_2201, primals_2202, primals_2203, primals_2204, primals_2205, primals_2206, primals_2207, primals_2208, primals_2209, primals_2210, primals_2211, primals_2212, primals_2213, primals_2214, primals_2215, primals_2216, primals_2217, primals_2218, primals_2219, primals_2220, primals_2221, primals_2222, primals_2223, primals_2224, primals_2225, primals_2226, primals_2227, primals_2228, primals_2229, primals_2230, primals_2231, primals_2232, primals_2233, primals_2234, primals_2235, primals_2236, primals_2237, primals_2238, primals_2239, primals_2240, primals_2241, primals_2242, primals_2243, primals_2244, primals_2245, primals_2246, primals_2247, primals_2248, primals_2249, primals_2250, primals_2251, primals_2252, primals_2253, primals_2254, primals_2255, primals_2256, primals_2257, primals_2258, primals_2259, primals_2260, primals_2261, primals_2262, primals_2263, primals_2264, primals_2265, primals_2266, primals_2267, primals_2268, primals_2269, primals_2270, primals_2271, primals_2272, primals_2273, primals_2274, primals_2275, primals_2276, primals_2277, primals_2278, primals_2279, primals_2280, primals_2281, primals_2282, primals_2283, primals_2284, primals_2285, primals_2286, primals_2287, primals_2288, primals_2289, primals_2290, primals_2291, primals_2292, primals_2293, primals_2294, primals_2295, primals_2296, primals_2297, primals_2298, primals_2299, primals_2300, primals_2301, primals_2302, primals_2303, primals_2304, primals_2305, primals_2306, primals_2307, primals_2308, primals_2309, primals_2310, primals_2311, primals_2312, primals_2313, primals_2314, primals_2315, primals_2316, primals_2317, primals_2318, primals_2319, primals_2320, primals_2321, primals_2322, primals_2323, primals_2324, primals_2325, primals_2326, primals_2327, primals_2328, primals_2329, primals_2330, primals_2331, primals_2332, primals_2333, primals_2334, primals_2335, primals_2336, primals_2337, primals_2338, primals_2339, primals_2340, primals_2341, primals_2342, primals_2343, primals_2344, primals_2345, primals_2346, primals_2347, primals_2348, primals_2349, primals_2350, primals_2351, primals_2352, primals_2353, primals_2354, primals_2355, primals_2356, primals_2357, primals_2358, primals_2359, primals_2360, primals_2361, primals_2362, primals_2363, primals_2364, primals_2365, primals_2366, primals_2367, primals_2368, primals_2369, primals_2370, primals_2371, primals_2372, primals_2373, primals_2374, primals_2375, primals_2376, primals_2377, primals_2378, primals_2379, primals_2380, primals_2381, primals_2382, primals_2383, primals_2384, primals_2385, primals_2386, primals_2387, primals_2388, primals_2389, primals_2390, primals_2391, primals_2392, primals_2393, primals_2394, primals_2395, primals_2396, primals_2397, primals_2398, primals_2399, primals_2400, primals_2401, primals_2402, primals_2403, primals_2404, primals_2405, primals_2406, primals_2407, primals_2408, primals_2409, primals_2410, primals_2411, primals_2412, primals_2413, primals_2414, primals_2415, primals_2416, primals_2417, primals_2418, primals_2419, primals_2420, primals_2421, primals_2422, primals_2423, primals_2424, primals_2425, primals_2426, primals_2427, primals_2428, primals_2429, primals_2430, primals_2431, primals_2432, primals_2433, primals_2434, primals_2435, primals_2436, primals_2437, primals_2438, primals_2439, primals_2440, primals_2441, primals_2442, primals_2443, primals_2444, primals_2445, primals_2446, primals_2447, primals_2448, primals_2449, primals_2450, primals_2451, primals_2452, primals_2453, primals_2454, primals_2455, primals_2456, primals_2457, primals_2458, primals_2459, primals_2460, primals_2461, primals_2462, primals_2463, primals_2464, primals_2465, primals_2466, primals_2467, primals_2468, primals_2469, primals_2470, primals_2471, primals_2472, primals_2473, primals_2474, primals_2475, primals_2476, primals_2477, primals_2478, primals_2479, primals_2480, primals_2481, primals_2482, primals_2483, primals_2484, primals_2485, primals_2486, primals_2487, primals_2488, primals_2489, primals_2490, primals_2491, primals_2492, primals_2493, primals_2494, primals_2495, primals_2496, primals_2497, primals_2498, primals_2499, primals_2500, primals_2501, primals_2502, primals_2503, primals_2504, primals_2505, primals_2506, primals_2507, primals_2508, primals_2509, primals_2510, primals_2511, primals_2512, primals_2513, primals_2514, primals_2515, primals_2516, primals_2517, primals_2518, primals_2519, primals_2520, primals_2521, primals_2522, primals_2523, primals_2524, primals_2525, primals_2526, primals_2527, primals_2528, primals_2529, primals_2530, primals_2531, primals_2532, primals_2533, primals_2534, primals_2535, primals_2536, primals_2537, primals_2538, primals_2539, primals_2540, primals_2541, primals_2542, primals_2543, primals_2544, primals_2545, primals_2546, primals_2547, primals_2548, primals_2549, primals_2550, primals_2551, primals_2552, primals_2553, primals_2554, primals_2555, primals_2556, primals_2557, primals_2558, primals_2559, primals_2560, primals_2561, primals_2562, primals_2563, primals_2564, primals_2565, primals_2566, primals_2567, primals_2568, primals_2569, primals_2570, primals_2571, primals_2572, primals_2573, primals_2574, primals_2575, primals_2576, primals_2577, primals_2578, primals_2579, primals_2580, primals_2581, primals_2582, primals_2583, primals_2584, primals_2585, primals_2586, primals_2587, primals_2588, primals_2589, primals_2590, primals_2591, primals_2592, primals_2593, primals_2594, primals_2595, primals_2596, primals_2597, primals_2598, primals_2599, primals_2600, primals_2601, primals_2602, primals_2603, primals_2604, primals_2605, primals_2606, primals_2607, primals_2608, primals_2609, primals_2610, primals_2611, primals_2612, primals_2613, primals_2614, primals_2615, primals_2616, primals_2617, primals_2618, primals_2619, primals_2620, primals_2621, primals_2622, primals_2623, primals_2624, primals_2625, primals_2626, primals_2627, primals_2628, primals_2629, primals_2630, primals_2631, primals_2632, primals_2633, primals_2634, primals_2635, primals_2636, primals_2637, primals_2638, primals_2639, primals_2640, primals_2641, primals_2642, primals_2643, primals_2644, primals_2645, primals_2646, primals_2647, primals_2648, primals_2649, primals_2650, primals_2651, primals_2652, primals_2653, primals_2654, primals_2655, primals_2656, primals_2657, primals_2658, primals_2659, primals_2660, primals_2661, primals_2662, primals_2663, primals_2664, primals_2665, primals_2666, primals_2667, primals_2668, primals_2669, primals_2670, primals_2671, primals_2672, primals_2673, primals_2674, primals_2675, primals_2676, primals_2677, primals_2678, primals_2679, primals_2680, primals_2681, primals_2682, primals_2683, primals_2684, primals_2685, primals_2686, primals_2687, primals_2688, primals_2689, primals_2690, primals_2691, primals_2692, primals_2693, primals_2694, primals_2695, primals_2696, primals_2697, primals_2698, primals_2699, primals_2700, primals_2701, primals_2702, primals_2703, primals_2704, primals_2705, primals_2706, primals_2707, primals_2708, primals_2709, primals_2710, primals_2711, primals_2712, primals_2713, primals_2714, primals_2715, primals_2716, primals_2717, primals_2718, primals_2719, primals_2720, primals_2721, primals_2722, primals_2723, primals_2724, primals_2725, primals_2726, primals_2727, primals_2728, primals_2729, primals_2730, primals_2731, primals_2732, primals_2733, primals_2734, primals_2735, primals_2736, primals_2737, primals_2738, primals_2739, primals_2740, primals_2741, primals_2742, primals_2743, primals_2744, primals_2745, primals_2746, primals_2747, primals_2748, primals_2749, primals_2750, primals_2751, primals_2752, primals_2753, primals_2754, primals_2755, primals_2756, primals_2757, primals_2758, primals_2759, primals_2760, primals_2761, primals_2762, primals_2763, primals_2764, primals_2765, primals_2766, primals_2767, primals_2768, primals_2769, primals_2770, primals_2771, primals_2772, primals_2773, primals_2774, primals_2775, primals_2776, primals_2777, primals_2778, primals_2779, primals_2780, primals_2781, primals_2782, primals_2783, primals_2784, primals_2785, primals_2786, primals_2787, primals_2788, primals_2789, primals_2790, primals_2791, primals_2792, primals_2793, primals_2794, primals_2795, primals_2796, primals_2797, primals_2798, primals_2799, primals_2800, primals_2801, primals_2802, primals_2803, primals_2804, primals_2805, primals_2806, primals_2807, primals_2808, primals_2809, primals_2810, primals_2811, primals_2812, primals_2813, primals_2814, primals_2815, primals_2816, primals_2817, primals_2818, primals_2819, primals_2820, primals_2821, primals_2822, primals_2823, primals_2824, primals_2825, primals_2826, primals_2827, primals_2828, primals_2829, primals_2830, primals_2831, primals_2832, primals_2833, primals_2834, primals_2835, primals_2836, primals_2837, primals_2838, primals_2839, primals_2840, primals_2841, primals_2842, primals_2843, primals_2844, primals_2845, primals_2846, primals_2847, primals_2848, primals_2849, primals_2850, primals_2851, primals_2852, primals_2853, primals_2854, primals_2855, primals_2856, primals_2857, primals_2858, primals_2859, primals_2860, primals_2861, primals_2862, primals_2863, primals_2864, primals_2865, primals_2866, primals_2867, primals_2868, primals_2869, primals_2870, primals_2871, primals_2872, primals_2873, primals_2874, primals_2875, primals_2876, primals_2877, primals_2878, primals_2879, primals_2880, primals_2881, primals_2882, primals_2883, primals_2884, primals_2885, primals_2886, primals_2887, primals_2888, primals_2889, primals_2890, primals_2891, primals_2892, primals_2893, primals_2894, primals_2895, primals_2896, primals_2897, primals_2898, primals_2899, primals_2900, primals_2901, primals_2902, primals_2903, primals_2904, primals_2905, primals_2906, primals_2907, primals_2908, primals_2909, primals_2910, primals_2911, primals_2912, primals_2913, primals_2914, primals_2915, primals_2916, primals_2917, primals_2918, primals_2919, primals_2920, primals_2921, primals_2922, primals_2923, primals_2924, primals_2925, primals_2926, primals_2927, primals_2928, primals_2929, primals_2930, primals_2931, primals_2932, primals_2933, primals_2934, primals_2935, primals_2936, primals_2937, primals_2938, primals_2939, primals_2940, primals_2941, primals_2942, primals_2943, primals_2944, primals_2945, primals_2946, primals_2947, primals_2948, primals_2949, primals_2950, primals_2951, primals_2952, primals_2953, primals_2954, primals_2955, primals_2956, primals_2957, primals_2958, primals_2959, primals_2960, primals_2961, primals_2962, primals_2963, primals_2964, primals_2965, primals_2966, primals_2967, primals_2968, primals_2969, primals_2970, primals_2971, primals_2972, primals_2973, primals_2974, primals_2975, primals_2976, primals_2977, primals_2978, primals_2979, primals_2980, primals_2981, primals_2982, primals_2983, primals_2984, primals_2985, primals_2986, primals_2987, primals_2988, primals_2989, primals_2990, primals_2991, primals_2992, primals_2993, primals_2994, primals_2995, primals_2996, primals_2997, primals_2998, primals_2999, primals_3000, primals_3001, primals_3002, primals_3003, primals_3004, primals_3005, primals_3006, primals_3007, primals_3008, primals_3009, primals_3010, primals_3011, primals_3012, primals_3013, primals_3014, primals_3015, primals_3016, primals_3017, primals_3018, primals_3019, primals_3020, primals_3021, primals_3022, primals_3023, primals_3024, primals_3025, primals_3026, primals_3027, primals_3028, primals_3029, primals_3030, primals_3031, primals_3032, primals_3033, primals_3034, primals_3035, primals_3036, primals_3037, primals_3038, primals_3039, primals_3040, primals_3041, primals_3042, primals_3043, primals_3044, primals_3045, primals_3046, primals_3047, primals_3048, primals_3049, primals_3050, primals_3051, primals_3052, primals_3053, primals_3054, primals_3055, primals_3056, primals_3057, primals_3058, primals_3059, primals_3060, primals_3061, primals_3062, primals_3063, primals_3064, primals_3065, primals_3066, primals_3067, primals_3068, primals_3069, primals_3070, primals_3071, primals_3072, primals_3073, primals_3074, primals_3075, primals_3076, primals_3077, primals_3078, primals_3079, primals_3080, primals_3081, primals_3082, primals_3083, primals_3084, primals_3085, primals_3086, primals_3087, primals_3088, primals_3089, primals_3090, primals_3091, primals_3092, primals_3093, primals_3094, primals_3095, primals_3096, primals_3097, primals_3098, primals_3099, primals_3100, primals_3101, primals_3102, primals_3103, primals_3104, primals_3105, primals_3106, primals_3107, primals_3108, primals_3109, primals_3110, primals_3111, primals_3112, primals_3113, primals_3114, primals_3115, primals_3116, primals_3117, primals_3118, primals_3119, primals_3120, primals_3121, primals_3122, primals_3123, primals_3124, primals_3125, primals_3126, primals_3127, primals_3128, primals_3129, primals_3130, primals_3131, primals_3132, primals_3133, primals_3134, primals_3135, primals_3136, primals_3137, primals_3138, primals_3139, primals_3140, primals_3141, primals_3142, primals_3143, primals_3144, primals_3145, primals_3146, primals_3147, primals_3148, primals_3149, primals_3150, primals_3151, primals_3152, primals_3153, primals_3154, primals_3155, primals_3156, primals_3157, primals_3158, primals_3159, primals_3160, primals_3161, primals_3162, primals_3163, primals_3164, primals_3165, primals_3166, primals_3167, primals_3168, primals_3169, primals_3170, primals_3171, primals_3172, primals_3173, primals_3174, primals_3175, primals_3176, primals_3177, primals_3178, primals_3179, primals_3180, primals_3181, primals_3182, primals_3183, primals_3184, primals_3185, primals_3186, primals_3187, primals_3188, primals_3189, primals_3190, primals_3191, primals_3192, primals_3193, primals_3194, primals_3195, primals_3196, primals_3197, primals_3198, primals_3199, primals_3200, primals_3201, primals_3202, primals_3203, primals_3204, primals_3205, primals_3206, primals_3207, primals_3208, primals_3209, primals_3210, primals_3211, primals_3212, primals_3213, primals_3214, primals_3215, primals_3216, primals_3217, primals_3218, primals_3219, primals_3220, primals_3221, primals_3222, primals_3223, primals_3224, primals_3225, primals_3226, primals_3227, primals_3228, primals_3229, primals_3230, primals_3231, primals_3232, primals_3233, primals_3234, primals_3235, primals_3236, primals_3237, primals_3238, primals_3239, primals_3240, primals_3241, primals_3242, primals_3243, primals_3244, primals_3245, primals_3246, primals_3247, primals_3248, primals_3249, primals_3250, primals_3251, primals_3252, primals_3253, primals_3254, primals_3255, primals_3256, primals_3257, primals_3258, primals_3259, primals_3260, primals_3261, primals_3262, primals_3263, primals_3264, primals_3265, primals_3266, primals_3267, primals_3268, primals_3269, primals_3270, primals_3271, primals_3272, primals_3273, primals_3274, primals_3275, primals_3276, primals_3277, primals_3278, primals_3279, primals_3280, primals_3281, primals_3282, primals_3283, primals_3284, primals_3285, primals_3286, primals_3287, primals_3288, primals_3289, primals_3290, primals_3291, primals_3292, primals_3293, primals_3294, primals_3295, primals_3296, primals_3297, primals_3298, primals_3299, primals_3300, primals_3301, primals_3302, primals_3303, primals_3304, primals_3305, primals_3306, primals_3307, primals_3308, primals_3309, primals_3310, primals_3311, primals_3312, primals_3313, primals_3314, primals_3315, primals_3316, primals_3317, primals_3318, primals_3319, primals_3320, primals_3321, primals_3322, primals_3323, primals_3324, primals_3325, primals_3326, primals_3327, primals_3328, primals_3329, primals_3330, primals_3331, primals_3332, primals_3333, primals_3334, primals_3335, primals_3336, primals_3337, primals_3338, primals_3339, primals_3340, primals_3341, primals_3342, primals_3343, primals_3344, primals_3345, primals_3346, primals_3347, primals_3348, primals_3349, primals_3350, primals_3351, primals_3352, primals_3353, primals_3354, primals_3355, primals_3356, primals_3357, primals_3358, primals_3359, primals_3360, primals_3361, primals_3362, primals_3363, primals_3364, primals_3365, primals_3366, primals_3367, primals_3368, primals_3369, primals_3370, primals_3371, primals_3372, primals_3373, primals_3374, primals_3375, primals_3376, primals_3377, primals_3378, primals_3379, primals_3380, primals_3381, primals_3382, primals_3383, primals_3384, primals_3385, primals_3386, primals_3387, primals_3388, primals_3389, primals_3390, primals_3391, primals_3392, primals_3393, primals_3394, primals_3395, primals_3396, primals_3397, primals_3398, primals_3399, primals_3400, primals_3401, primals_3402, primals_3403, primals_3404, primals_3405, primals_3406, primals_3407, primals_3408, primals_3409, primals_3410, primals_3411, primals_3412, primals_3413, primals_3414, primals_3415, primals_3416, primals_3417, primals_3418, primals_3419, primals_3420, primals_3421, primals_3422, primals_3423, primals_3424, primals_3425, primals_3426, primals_3427, primals_3428, primals_3429, primals_3430, primals_3431, primals_3432, primals_3433, primals_3434, primals_3435, primals_3436, primals_3437, primals_3438, primals_3439, primals_3440, primals_3441, primals_3442, primals_3443, primals_3444, primals_3445, primals_3446, primals_3447, primals_3448, primals_3449, primals_3450, primals_3451, primals_3452, primals_3453, primals_3454, primals_3455, primals_3456, primals_3457, primals_3458, primals_3459, primals_3460, primals_3461, primals_3462, primals_3463, primals_3464, primals_3465, primals_3466, primals_3467, primals_3468, primals_3469, primals_3470, primals_3471, primals_3472, primals_3473, primals_3474, primals_3475, primals_3476, primals_3477, primals_3478, primals_3479, primals_3480, primals_3481, primals_3482, primals_3483, primals_3484, primals_3485, primals_3486, primals_3487, primals_3488, primals_3489, primals_3490, primals_3491, primals_3492, primals_3493, primals_3494, primals_3495, primals_3496, primals_3497, primals_3498, primals_3499, primals_3500, primals_3501, primals_3502, primals_3503, primals_3504, primals_3505, primals_3506, primals_3507, primals_3508, primals_3509, primals_3510, primals_3511, primals_3512, primals_3513, primals_3514, primals_3515, primals_3516, primals_3517, primals_3518, primals_3519, primals_3520, primals_3521, primals_3522, primals_3523, primals_3524, primals_3525, primals_3526, primals_3527, primals_3528, primals_3529, primals_3530, primals_3531, primals_3532, primals_3533, primals_3534, primals_3535, primals_3536, primals_3537, primals_3538, primals_3539, primals_3540, primals_3541, primals_3542, primals_3543, primals_3544, primals_3545, primals_3546, primals_3547, primals_3548, primals_3549, primals_3550, primals_3551, primals_3552, primals_3553, primals_3554, primals_3555, primals_3556, primals_3557, primals_3558, primals_3559, primals_3560, primals_3561, primals_3562, primals_3563, primals_3564, primals_3565, primals_3566, primals_3567, primals_3568, primals_3569, primals_3570, primals_3571, primals_3572, primals_3573, primals_3574, primals_3575, primals_3576, primals_3577, primals_3578, primals_3579, primals_3580, primals_3581, primals_3582, primals_3583, primals_3584, primals_3585, primals_3586, primals_3587, primals_3588, primals_3589, primals_3590, primals_3591, primals_3592, primals_3593, primals_3594, primals_3595, primals_3596, primals_3597, primals_3598, primals_3599, primals_3600, primals_3601, primals_3602, primals_3603, primals_3604, primals_3605, primals_3606, primals_3607, primals_3608, primals_3609, primals_3610, primals_3611, primals_3612, primals_3613, primals_3614, primals_3615, primals_3616, primals_3617, primals_3618, primals_3619, primals_3620, primals_3621, primals_3622, primals_3623, primals_3624, primals_3625, primals_3626, primals_3627, primals_3628, primals_3629, primals_3630, primals_3631, primals_3632, primals_3633, primals_3634, primals_3635, primals_3636, primals_3637, primals_3638, primals_3639, primals_3640, primals_3641, primals_3642, primals_3643, primals_3644, primals_3645, primals_3646, primals_3647, primals_3648, primals_3649, primals_3650, primals_3651, primals_3652, primals_3653, primals_3654, primals_3655, primals_3656, primals_3657, primals_3658, primals_3659, primals_3660, primals_3661, primals_3662, primals_3663, primals_3664, primals_3665, primals_3666, primals_3667, primals_3668, primals_3669, primals_3670, primals_3671, primals_3672, primals_3673, primals_3674, primals_3675, primals_3676, primals_3677, primals_3678, primals_3679, primals_3680, primals_3681, primals_3682, primals_3683, primals_3684, primals_3685, primals_3686, primals_3687, primals_3688, primals_3689, primals_3690, primals_3691, primals_3692, primals_3693, primals_3694, primals_3695, primals_3696, primals_3697, primals_3698, primals_3699, primals_3700, primals_3701, primals_3702, primals_3703, primals_3704, primals_3705, primals_3706, primals_3707, primals_3708, primals_3709, primals_3710, primals_3711, primals_3712, primals_3713, primals_3714, primals_3715, primals_3716, primals_3717, primals_3718, primals_3719, primals_3720, primals_3721, primals_3722, primals_3723, primals_3724, primals_3725, primals_3726, primals_3727, primals_3728, primals_3729, primals_3730, primals_3731, primals_3732, primals_3733, primals_3734, primals_3735, primals_3736, primals_3737, primals_3738, primals_3739, primals_3740, primals_3741, primals_3742, primals_3743, primals_3744, primals_3745, primals_3746, primals_3747, primals_3748, primals_3749, primals_3750, primals_3751, primals_3752, primals_3753, primals_3754, primals_3755, primals_3756, primals_3757, primals_3758, primals_3759, primals_3760, primals_3761, primals_3762, primals_3763, primals_3764, primals_3765, primals_3766, primals_3767, primals_3768, primals_3769, primals_3770, primals_3771, primals_3772, primals_3773, primals_3774, primals_3775, primals_3776, primals_3777, primals_3778, primals_3779, primals_3780, primals_3781, primals_3782, primals_3783, primals_3784, primals_3785, primals_3786, primals_3787, primals_3788, primals_3789, primals_3790, primals_3791, primals_3792, primals_3793, primals_3794, primals_3795, primals_3796, primals_3797, primals_3798, primals_3799, primals_3800, primals_3801, primals_3802, primals_3803, primals_3804, primals_3805, primals_3806, primals_3807, primals_3808, primals_3809, primals_3810, primals_3811, primals_3812, primals_3813, primals_3814, primals_3815, primals_3816, primals_3817, primals_3818, primals_3819, primals_3820, primals_3821, primals_3822, primals_3823, primals_3824, primals_3825, primals_3826, primals_3827, primals_3828, primals_3829, primals_3830, primals_3831, primals_3832, primals_3833, primals_3834, primals_3835, primals_3836, primals_3837, primals_3838, primals_3839, primals_3840, primals_3841, primals_3842, primals_3843, primals_3844, primals_3845, primals_3846, primals_3847, primals_3848, primals_3849, primals_3850, primals_3851, primals_3852, primals_3853, primals_3854, primals_3855, primals_3856, primals_3857, primals_3858, primals_3859, primals_3860, primals_3861, primals_3862, primals_3863, primals_3864, primals_3865, primals_3866, primals_3867, primals_3868, primals_3869, primals_3870, primals_3871, primals_3872, primals_3873, primals_3874, primals_3875, primals_3876, primals_3877, primals_3878, primals_3879, primals_3880, primals_3881, primals_3882, primals_3883, primals_3884, primals_3885, primals_3886, primals_3887, primals_3888, primals_3889, primals_3890, primals_3891, primals_3892, primals_3893, primals_3894, primals_3895, primals_3896, primals_3897, primals_3898, primals_3899, primals_3900, primals_3901, primals_3902, primals_3903, primals_3904, primals_3905, primals_3906, primals_3907, primals_3908, primals_3909, primals_3910, primals_3911, primals_3912, primals_3913, primals_3914, primals_3915, primals_3916, primals_3917, primals_3918, primals_3919, primals_3920, primals_3921, primals_3922, primals_3923, primals_3924, primals_3925, primals_3926, primals_3927, primals_3928, primals_3929, primals_3930, primals_3931, primals_3932, primals_3933, primals_3934, primals_3935, primals_3936, primals_3937, primals_3938, primals_3939, primals_3940, primals_3941, primals_3942, primals_3943, primals_3944, primals_3945, primals_3946, primals_3947, primals_3948, primals_3949, primals_3950, primals_3951, primals_3952, primals_3953, primals_3954, primals_3955, primals_3956, primals_3957, primals_3958, primals_3959, primals_3960, primals_3961, primals_3962, primals_3963, primals_3964, primals_3965, primals_3966, primals_3967, primals_3968, primals_3969, primals_3970, primals_3971, primals_3972, primals_3973, primals_3974, primals_3975, primals_3976, primals_3977, primals_3978, primals_3979, primals_3980, primals_3981, primals_3982, primals_3983, primals_3984, primals_3985, primals_3986, primals_3987, primals_3988, primals_3989, primals_3990, primals_3991, primals_3992, primals_3993, primals_3994, primals_3995, primals_3996, primals_3997, primals_3998, primals_3999, primals_4000, primals_4001, primals_4002, primals_4003, primals_4004, primals_4005, primals_4006, primals_4007, primals_4008, primals_4009, primals_4010, primals_4011, primals_4012, primals_4013, primals_4014, primals_4015, primals_4016, primals_4017, primals_4018, primals_4019, primals_4020, primals_4021, primals_4022, primals_4023, primals_4024, primals_4025, primals_4026, primals_4027, primals_4028, primals_4029, primals_4030, primals_4031, primals_4032, primals_4033, primals_4034, primals_4035, primals_4036, primals_4037, primals_4038, primals_4039, primals_4040, primals_4041, primals_4042, primals_4043, primals_4044, primals_4045, primals_4046, primals_4047, primals_4048, primals_4049, primals_4050, primals_4051, primals_4052, primals_4053, primals_4054, primals_4055, primals_4056, primals_4057, primals_4058, primals_4059, primals_4060, primals_4061, primals_4062, primals_4063, primals_4064, primals_4065, primals_4066, primals_4067, primals_4068, primals_4069, primals_4070, primals_4071, primals_4072, primals_4073, primals_4074, primals_4075, primals_4076, primals_4077, primals_4078, primals_4079, primals_4080, primals_4081, primals_4082, primals_4083, primals_4084, primals_4085, primals_4086, primals_4087, primals_4088, primals_4089, primals_4090, primals_4091, primals_4092, primals_4093, primals_4094, primals_4095, primals_4096, primals_4097, primals_4098, primals_4099, primals_4100, primals_4101, primals_4102, primals_4103, primals_4104, primals_4105, primals_4106, primals_4107, primals_4108, primals_4109, primals_4110, primals_4111, primals_4112, primals_4113, primals_4114, primals_4115, primals_4116, primals_4117, primals_4118, primals_4119, primals_4120, primals_4121, primals_4122, primals_4123, primals_4124, primals_4125, primals_4126, primals_4127, primals_4128, primals_4129, primals_4130, primals_4131, primals_4132, primals_4133, primals_4134, primals_4135, primals_4136, primals_4137, primals_4138, primals_4139, primals_4140, primals_4141, primals_4142, primals_4143, primals_4144, primals_4145, primals_4146, primals_4147, primals_4148, primals_4149 = args
    args.clear()
    assert_size_stride(primals_1, (64, 3, 7, 7), (147, 49, 7, 1))
    assert_size_stride(primals_2, (64, ), (1, ))
    assert_size_stride(primals_3, (4, 3, 64, 64), (12288, 4096, 64, 1))
    assert_size_stride(primals_4, (64, ), (1, ))
    assert_size_stride(primals_5, (64, ), (1, ))
    assert_size_stride(primals_6, (64, ), (1, ))
    assert_size_stride(primals_7, (64, ), (1, ))
    assert_size_stride(primals_8, (64, ), (1, ))
    assert_size_stride(primals_9, (64, ), (1, ))
    assert_size_stride(primals_10, (64, ), (1, ))
    assert_size_stride(primals_11, (64, ), (1, ))
    assert_size_stride(primals_12, (64, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(primals_13, (64, ), (1, ))
    assert_size_stride(primals_14, (64, ), (1, ))
    assert_size_stride(primals_15, (64, ), (1, ))
    assert_size_stride(primals_16, (64, ), (1, ))
    assert_size_stride(primals_17, (64, ), (1, ))
    assert_size_stride(primals_18, (64, 64, 3, 3), (576, 9, 3, 1))
    assert_size_stride(primals_19, (64, ), (1, ))
    assert_size_stride(primals_20, (64, ), (1, ))
    assert_size_stride(primals_21, (64, ), (1, ))
    assert_size_stride(primals_22, (64, ), (1, ))
    assert_size_stride(primals_23, (64, ), (1, ))
    assert_size_stride(primals_24, (128, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(primals_25, (128, ), (1, ))
    assert_size_stride(primals_26, (64, ), (1, ))
    assert_size_stride(primals_27, (64, ), (1, ))
    assert_size_stride(primals_28, (64, ), (1, ))
    assert_size_stride(primals_29, (64, ), (1, ))
    assert_size_stride(primals_30, (128, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(primals_31, (128, ), (1, ))
    assert_size_stride(primals_32, (128, ), (1, ))
    assert_size_stride(primals_33, (128, ), (1, ))
    assert_size_stride(primals_34, (128, ), (1, ))
    assert_size_stride(primals_35, (128, ), (1, ))
    assert_size_stride(primals_36, (64, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_37, (64, ), (1, ))
    assert_size_stride(primals_38, (64, ), (1, ))
    assert_size_stride(primals_39, (64, ), (1, ))
    assert_size_stride(primals_40, (64, ), (1, ))
    assert_size_stride(primals_41, (64, ), (1, ))
    assert_size_stride(primals_42, (64, 64, 3, 3), (576, 9, 3, 1))
    assert_size_stride(primals_43, (64, ), (1, ))
    assert_size_stride(primals_44, (64, ), (1, ))
    assert_size_stride(primals_45, (64, ), (1, ))
    assert_size_stride(primals_46, (64, ), (1, ))
    assert_size_stride(primals_47, (64, ), (1, ))
    assert_size_stride(primals_48, (128, 64, 1, 1), (64, 1, 1, 1))
    assert_size_stride(primals_49, (128, ), (1, ))
    assert_size_stride(primals_50, (128, ), (1, ))
    assert_size_stride(primals_51, (128, ), (1, ))
    assert_size_stride(primals_52, (128, ), (1, ))
    assert_size_stride(primals_53, (128, ), (1, ))
    assert_size_stride(primals_54, (2, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_55, (2, ), (1, ))
    assert_size_stride(primals_56, (2, ), (1, ))
    assert_size_stride(primals_57, (2, ), (1, ))
    assert_size_stride(primals_58, (2, ), (1, ))
    assert_size_stride(primals_59, (2, ), (1, ))
    assert_size_stride(primals_60, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_61, (2, ), (1, ))
    assert_size_stride(primals_62, (2, ), (1, ))
    assert_size_stride(primals_63, (2, ), (1, ))
    assert_size_stride(primals_64, (2, ), (1, ))
    assert_size_stride(primals_65, (2, ), (1, ))
    assert_size_stride(primals_66, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_67, (4, ), (1, ))
    assert_size_stride(primals_68, (128, ), (1, ))
    assert_size_stride(primals_69, (128, ), (1, ))
    assert_size_stride(primals_70, (128, ), (1, ))
    assert_size_stride(primals_71, (128, ), (1, ))
    assert_size_stride(primals_72, (4, 128, 1, 1), (128, 1, 1, 1))
    assert_size_stride(primals_73, (4, ), (1, ))
    assert_size_stride(primals_74, (4, ), (1, ))
    assert_size_stride(primals_75, (4, ), (1, ))
    assert_size_stride(primals_76, (4, ), (1, ))
    assert_size_stride(primals_77, (4, ), (1, ))
    assert_size_stride(primals_78, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_79, (2, ), (1, ))
    assert_size_stride(primals_80, (2, ), (1, ))
    assert_size_stride(primals_81, (2, ), (1, ))
    assert_size_stride(primals_82, (2, ), (1, ))
    assert_size_stride(primals_83, (2, ), (1, ))
    assert_size_stride(primals_84, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_85, (2, ), (1, ))
    assert_size_stride(primals_86, (2, ), (1, ))
    assert_size_stride(primals_87, (2, ), (1, ))
    assert_size_stride(primals_88, (2, ), (1, ))
    assert_size_stride(primals_89, (2, ), (1, ))
    assert_size_stride(primals_90, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_91, (4, ), (1, ))
    assert_size_stride(primals_92, (4, ), (1, ))
    assert_size_stride(primals_93, (4, ), (1, ))
    assert_size_stride(primals_94, (4, ), (1, ))
    assert_size_stride(primals_95, (4, ), (1, ))
    assert_size_stride(primals_96, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_97, (2, ), (1, ))
    assert_size_stride(primals_98, (2, ), (1, ))
    assert_size_stride(primals_99, (2, ), (1, ))
    assert_size_stride(primals_100, (2, ), (1, ))
    assert_size_stride(primals_101, (2, ), (1, ))
    assert_size_stride(primals_102, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_103, (2, ), (1, ))
    assert_size_stride(primals_104, (2, ), (1, ))
    assert_size_stride(primals_105, (2, ), (1, ))
    assert_size_stride(primals_106, (2, ), (1, ))
    assert_size_stride(primals_107, (2, ), (1, ))
    assert_size_stride(primals_108, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_109, (4, ), (1, ))
    assert_size_stride(primals_110, (4, ), (1, ))
    assert_size_stride(primals_111, (4, ), (1, ))
    assert_size_stride(primals_112, (4, ), (1, ))
    assert_size_stride(primals_113, (4, ), (1, ))
    assert_size_stride(primals_114, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_115, (2, ), (1, ))
    assert_size_stride(primals_116, (2, ), (1, ))
    assert_size_stride(primals_117, (2, ), (1, ))
    assert_size_stride(primals_118, (2, ), (1, ))
    assert_size_stride(primals_119, (2, ), (1, ))
    assert_size_stride(primals_120, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_121, (2, ), (1, ))
    assert_size_stride(primals_122, (2, ), (1, ))
    assert_size_stride(primals_123, (2, ), (1, ))
    assert_size_stride(primals_124, (2, ), (1, ))
    assert_size_stride(primals_125, (2, ), (1, ))
    assert_size_stride(primals_126, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_127, (4, ), (1, ))
    assert_size_stride(primals_128, (4, ), (1, ))
    assert_size_stride(primals_129, (4, ), (1, ))
    assert_size_stride(primals_130, (4, ), (1, ))
    assert_size_stride(primals_131, (4, ), (1, ))
    assert_size_stride(primals_132, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_133, (2, ), (1, ))
    assert_size_stride(primals_134, (2, ), (1, ))
    assert_size_stride(primals_135, (2, ), (1, ))
    assert_size_stride(primals_136, (2, ), (1, ))
    assert_size_stride(primals_137, (2, ), (1, ))
    assert_size_stride(primals_138, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_139, (2, ), (1, ))
    assert_size_stride(primals_140, (2, ), (1, ))
    assert_size_stride(primals_141, (2, ), (1, ))
    assert_size_stride(primals_142, (2, ), (1, ))
    assert_size_stride(primals_143, (2, ), (1, ))
    assert_size_stride(primals_144, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_145, (4, ), (1, ))
    assert_size_stride(primals_146, (4, ), (1, ))
    assert_size_stride(primals_147, (4, ), (1, ))
    assert_size_stride(primals_148, (4, ), (1, ))
    assert_size_stride(primals_149, (4, ), (1, ))
    assert_size_stride(primals_150, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_151, (2, ), (1, ))
    assert_size_stride(primals_152, (2, ), (1, ))
    assert_size_stride(primals_153, (2, ), (1, ))
    assert_size_stride(primals_154, (2, ), (1, ))
    assert_size_stride(primals_155, (2, ), (1, ))
    assert_size_stride(primals_156, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_157, (2, ), (1, ))
    assert_size_stride(primals_158, (2, ), (1, ))
    assert_size_stride(primals_159, (2, ), (1, ))
    assert_size_stride(primals_160, (2, ), (1, ))
    assert_size_stride(primals_161, (2, ), (1, ))
    assert_size_stride(primals_162, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_163, (4, ), (1, ))
    assert_size_stride(primals_164, (4, ), (1, ))
    assert_size_stride(primals_165, (4, ), (1, ))
    assert_size_stride(primals_166, (4, ), (1, ))
    assert_size_stride(primals_167, (4, ), (1, ))
    assert_size_stride(primals_168, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_169, (2, ), (1, ))
    assert_size_stride(primals_170, (2, ), (1, ))
    assert_size_stride(primals_171, (2, ), (1, ))
    assert_size_stride(primals_172, (2, ), (1, ))
    assert_size_stride(primals_173, (2, ), (1, ))
    assert_size_stride(primals_174, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_175, (2, ), (1, ))
    assert_size_stride(primals_176, (2, ), (1, ))
    assert_size_stride(primals_177, (2, ), (1, ))
    assert_size_stride(primals_178, (2, ), (1, ))
    assert_size_stride(primals_179, (2, ), (1, ))
    assert_size_stride(primals_180, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_181, (4, ), (1, ))
    assert_size_stride(primals_182, (4, ), (1, ))
    assert_size_stride(primals_183, (4, ), (1, ))
    assert_size_stride(primals_184, (4, ), (1, ))
    assert_size_stride(primals_185, (4, ), (1, ))
    assert_size_stride(primals_186, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_187, (2, ), (1, ))
    assert_size_stride(primals_188, (2, ), (1, ))
    assert_size_stride(primals_189, (2, ), (1, ))
    assert_size_stride(primals_190, (2, ), (1, ))
    assert_size_stride(primals_191, (2, ), (1, ))
    assert_size_stride(primals_192, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_193, (2, ), (1, ))
    assert_size_stride(primals_194, (2, ), (1, ))
    assert_size_stride(primals_195, (2, ), (1, ))
    assert_size_stride(primals_196, (2, ), (1, ))
    assert_size_stride(primals_197, (2, ), (1, ))
    assert_size_stride(primals_198, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_199, (4, ), (1, ))
    assert_size_stride(primals_200, (4, ), (1, ))
    assert_size_stride(primals_201, (4, ), (1, ))
    assert_size_stride(primals_202, (4, ), (1, ))
    assert_size_stride(primals_203, (4, ), (1, ))
    assert_size_stride(primals_204, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_205, (2, ), (1, ))
    assert_size_stride(primals_206, (2, ), (1, ))
    assert_size_stride(primals_207, (2, ), (1, ))
    assert_size_stride(primals_208, (2, ), (1, ))
    assert_size_stride(primals_209, (2, ), (1, ))
    assert_size_stride(primals_210, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_211, (2, ), (1, ))
    assert_size_stride(primals_212, (2, ), (1, ))
    assert_size_stride(primals_213, (2, ), (1, ))
    assert_size_stride(primals_214, (2, ), (1, ))
    assert_size_stride(primals_215, (2, ), (1, ))
    assert_size_stride(primals_216, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_217, (4, ), (1, ))
    assert_size_stride(primals_218, (4, ), (1, ))
    assert_size_stride(primals_219, (4, ), (1, ))
    assert_size_stride(primals_220, (4, ), (1, ))
    assert_size_stride(primals_221, (4, ), (1, ))
    assert_size_stride(primals_222, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_223, (2, ), (1, ))
    assert_size_stride(primals_224, (2, ), (1, ))
    assert_size_stride(primals_225, (2, ), (1, ))
    assert_size_stride(primals_226, (2, ), (1, ))
    assert_size_stride(primals_227, (2, ), (1, ))
    assert_size_stride(primals_228, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_229, (2, ), (1, ))
    assert_size_stride(primals_230, (2, ), (1, ))
    assert_size_stride(primals_231, (2, ), (1, ))
    assert_size_stride(primals_232, (2, ), (1, ))
    assert_size_stride(primals_233, (2, ), (1, ))
    assert_size_stride(primals_234, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_235, (4, ), (1, ))
    assert_size_stride(primals_236, (4, ), (1, ))
    assert_size_stride(primals_237, (4, ), (1, ))
    assert_size_stride(primals_238, (4, ), (1, ))
    assert_size_stride(primals_239, (4, ), (1, ))
    assert_size_stride(primals_240, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_241, (2, ), (1, ))
    assert_size_stride(primals_242, (2, ), (1, ))
    assert_size_stride(primals_243, (2, ), (1, ))
    assert_size_stride(primals_244, (2, ), (1, ))
    assert_size_stride(primals_245, (2, ), (1, ))
    assert_size_stride(primals_246, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_247, (2, ), (1, ))
    assert_size_stride(primals_248, (2, ), (1, ))
    assert_size_stride(primals_249, (2, ), (1, ))
    assert_size_stride(primals_250, (2, ), (1, ))
    assert_size_stride(primals_251, (2, ), (1, ))
    assert_size_stride(primals_252, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_253, (4, ), (1, ))
    assert_size_stride(primals_254, (4, ), (1, ))
    assert_size_stride(primals_255, (4, ), (1, ))
    assert_size_stride(primals_256, (4, ), (1, ))
    assert_size_stride(primals_257, (4, ), (1, ))
    assert_size_stride(primals_258, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_259, (2, ), (1, ))
    assert_size_stride(primals_260, (2, ), (1, ))
    assert_size_stride(primals_261, (2, ), (1, ))
    assert_size_stride(primals_262, (2, ), (1, ))
    assert_size_stride(primals_263, (2, ), (1, ))
    assert_size_stride(primals_264, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_265, (2, ), (1, ))
    assert_size_stride(primals_266, (2, ), (1, ))
    assert_size_stride(primals_267, (2, ), (1, ))
    assert_size_stride(primals_268, (2, ), (1, ))
    assert_size_stride(primals_269, (2, ), (1, ))
    assert_size_stride(primals_270, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_271, (4, ), (1, ))
    assert_size_stride(primals_272, (4, ), (1, ))
    assert_size_stride(primals_273, (4, ), (1, ))
    assert_size_stride(primals_274, (4, ), (1, ))
    assert_size_stride(primals_275, (4, ), (1, ))
    assert_size_stride(primals_276, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_277, (2, ), (1, ))
    assert_size_stride(primals_278, (2, ), (1, ))
    assert_size_stride(primals_279, (2, ), (1, ))
    assert_size_stride(primals_280, (2, ), (1, ))
    assert_size_stride(primals_281, (2, ), (1, ))
    assert_size_stride(primals_282, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_283, (2, ), (1, ))
    assert_size_stride(primals_284, (2, ), (1, ))
    assert_size_stride(primals_285, (2, ), (1, ))
    assert_size_stride(primals_286, (2, ), (1, ))
    assert_size_stride(primals_287, (2, ), (1, ))
    assert_size_stride(primals_288, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_289, (4, ), (1, ))
    assert_size_stride(primals_290, (4, ), (1, ))
    assert_size_stride(primals_291, (4, ), (1, ))
    assert_size_stride(primals_292, (4, ), (1, ))
    assert_size_stride(primals_293, (4, ), (1, ))
    assert_size_stride(primals_294, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_295, (2, ), (1, ))
    assert_size_stride(primals_296, (2, ), (1, ))
    assert_size_stride(primals_297, (2, ), (1, ))
    assert_size_stride(primals_298, (2, ), (1, ))
    assert_size_stride(primals_299, (2, ), (1, ))
    assert_size_stride(primals_300, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_301, (2, ), (1, ))
    assert_size_stride(primals_302, (2, ), (1, ))
    assert_size_stride(primals_303, (2, ), (1, ))
    assert_size_stride(primals_304, (2, ), (1, ))
    assert_size_stride(primals_305, (2, ), (1, ))
    assert_size_stride(primals_306, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_307, (4, ), (1, ))
    assert_size_stride(primals_308, (4, ), (1, ))
    assert_size_stride(primals_309, (4, ), (1, ))
    assert_size_stride(primals_310, (4, ), (1, ))
    assert_size_stride(primals_311, (4, ), (1, ))
    assert_size_stride(primals_312, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_313, (2, ), (1, ))
    assert_size_stride(primals_314, (2, ), (1, ))
    assert_size_stride(primals_315, (2, ), (1, ))
    assert_size_stride(primals_316, (2, ), (1, ))
    assert_size_stride(primals_317, (2, ), (1, ))
    assert_size_stride(primals_318, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_319, (2, ), (1, ))
    assert_size_stride(primals_320, (2, ), (1, ))
    assert_size_stride(primals_321, (2, ), (1, ))
    assert_size_stride(primals_322, (2, ), (1, ))
    assert_size_stride(primals_323, (2, ), (1, ))
    assert_size_stride(primals_324, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_325, (4, ), (1, ))
    assert_size_stride(primals_326, (4, ), (1, ))
    assert_size_stride(primals_327, (4, ), (1, ))
    assert_size_stride(primals_328, (4, ), (1, ))
    assert_size_stride(primals_329, (4, ), (1, ))
    assert_size_stride(primals_330, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_331, (2, ), (1, ))
    assert_size_stride(primals_332, (2, ), (1, ))
    assert_size_stride(primals_333, (2, ), (1, ))
    assert_size_stride(primals_334, (2, ), (1, ))
    assert_size_stride(primals_335, (2, ), (1, ))
    assert_size_stride(primals_336, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_337, (2, ), (1, ))
    assert_size_stride(primals_338, (2, ), (1, ))
    assert_size_stride(primals_339, (2, ), (1, ))
    assert_size_stride(primals_340, (2, ), (1, ))
    assert_size_stride(primals_341, (2, ), (1, ))
    assert_size_stride(primals_342, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_343, (4, ), (1, ))
    assert_size_stride(primals_344, (4, ), (1, ))
    assert_size_stride(primals_345, (4, ), (1, ))
    assert_size_stride(primals_346, (4, ), (1, ))
    assert_size_stride(primals_347, (4, ), (1, ))
    assert_size_stride(primals_348, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_349, (2, ), (1, ))
    assert_size_stride(primals_350, (2, ), (1, ))
    assert_size_stride(primals_351, (2, ), (1, ))
    assert_size_stride(primals_352, (2, ), (1, ))
    assert_size_stride(primals_353, (2, ), (1, ))
    assert_size_stride(primals_354, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_355, (2, ), (1, ))
    assert_size_stride(primals_356, (2, ), (1, ))
    assert_size_stride(primals_357, (2, ), (1, ))
    assert_size_stride(primals_358, (2, ), (1, ))
    assert_size_stride(primals_359, (2, ), (1, ))
    assert_size_stride(primals_360, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_361, (4, ), (1, ))
    assert_size_stride(primals_362, (4, ), (1, ))
    assert_size_stride(primals_363, (4, ), (1, ))
    assert_size_stride(primals_364, (4, ), (1, ))
    assert_size_stride(primals_365, (4, ), (1, ))
    assert_size_stride(primals_366, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_367, (2, ), (1, ))
    assert_size_stride(primals_368, (2, ), (1, ))
    assert_size_stride(primals_369, (2, ), (1, ))
    assert_size_stride(primals_370, (2, ), (1, ))
    assert_size_stride(primals_371, (2, ), (1, ))
    assert_size_stride(primals_372, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_373, (2, ), (1, ))
    assert_size_stride(primals_374, (2, ), (1, ))
    assert_size_stride(primals_375, (2, ), (1, ))
    assert_size_stride(primals_376, (2, ), (1, ))
    assert_size_stride(primals_377, (2, ), (1, ))
    assert_size_stride(primals_378, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_379, (4, ), (1, ))
    assert_size_stride(primals_380, (4, ), (1, ))
    assert_size_stride(primals_381, (4, ), (1, ))
    assert_size_stride(primals_382, (4, ), (1, ))
    assert_size_stride(primals_383, (4, ), (1, ))
    assert_size_stride(primals_384, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_385, (2, ), (1, ))
    assert_size_stride(primals_386, (2, ), (1, ))
    assert_size_stride(primals_387, (2, ), (1, ))
    assert_size_stride(primals_388, (2, ), (1, ))
    assert_size_stride(primals_389, (2, ), (1, ))
    assert_size_stride(primals_390, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_391, (2, ), (1, ))
    assert_size_stride(primals_392, (2, ), (1, ))
    assert_size_stride(primals_393, (2, ), (1, ))
    assert_size_stride(primals_394, (2, ), (1, ))
    assert_size_stride(primals_395, (2, ), (1, ))
    assert_size_stride(primals_396, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_397, (4, ), (1, ))
    assert_size_stride(primals_398, (4, ), (1, ))
    assert_size_stride(primals_399, (4, ), (1, ))
    assert_size_stride(primals_400, (4, ), (1, ))
    assert_size_stride(primals_401, (4, ), (1, ))
    assert_size_stride(primals_402, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_403, (2, ), (1, ))
    assert_size_stride(primals_404, (2, ), (1, ))
    assert_size_stride(primals_405, (2, ), (1, ))
    assert_size_stride(primals_406, (2, ), (1, ))
    assert_size_stride(primals_407, (2, ), (1, ))
    assert_size_stride(primals_408, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_409, (2, ), (1, ))
    assert_size_stride(primals_410, (2, ), (1, ))
    assert_size_stride(primals_411, (2, ), (1, ))
    assert_size_stride(primals_412, (2, ), (1, ))
    assert_size_stride(primals_413, (2, ), (1, ))
    assert_size_stride(primals_414, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_415, (4, ), (1, ))
    assert_size_stride(primals_416, (4, ), (1, ))
    assert_size_stride(primals_417, (4, ), (1, ))
    assert_size_stride(primals_418, (4, ), (1, ))
    assert_size_stride(primals_419, (4, ), (1, ))
    assert_size_stride(primals_420, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_421, (2, ), (1, ))
    assert_size_stride(primals_422, (2, ), (1, ))
    assert_size_stride(primals_423, (2, ), (1, ))
    assert_size_stride(primals_424, (2, ), (1, ))
    assert_size_stride(primals_425, (2, ), (1, ))
    assert_size_stride(primals_426, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_427, (2, ), (1, ))
    assert_size_stride(primals_428, (2, ), (1, ))
    assert_size_stride(primals_429, (2, ), (1, ))
    assert_size_stride(primals_430, (2, ), (1, ))
    assert_size_stride(primals_431, (2, ), (1, ))
    assert_size_stride(primals_432, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_433, (4, ), (1, ))
    assert_size_stride(primals_434, (4, ), (1, ))
    assert_size_stride(primals_435, (4, ), (1, ))
    assert_size_stride(primals_436, (4, ), (1, ))
    assert_size_stride(primals_437, (4, ), (1, ))
    assert_size_stride(primals_438, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_439, (2, ), (1, ))
    assert_size_stride(primals_440, (2, ), (1, ))
    assert_size_stride(primals_441, (2, ), (1, ))
    assert_size_stride(primals_442, (2, ), (1, ))
    assert_size_stride(primals_443, (2, ), (1, ))
    assert_size_stride(primals_444, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_445, (2, ), (1, ))
    assert_size_stride(primals_446, (2, ), (1, ))
    assert_size_stride(primals_447, (2, ), (1, ))
    assert_size_stride(primals_448, (2, ), (1, ))
    assert_size_stride(primals_449, (2, ), (1, ))
    assert_size_stride(primals_450, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_451, (4, ), (1, ))
    assert_size_stride(primals_452, (4, ), (1, ))
    assert_size_stride(primals_453, (4, ), (1, ))
    assert_size_stride(primals_454, (4, ), (1, ))
    assert_size_stride(primals_455, (4, ), (1, ))
    assert_size_stride(primals_456, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_457, (2, ), (1, ))
    assert_size_stride(primals_458, (2, ), (1, ))
    assert_size_stride(primals_459, (2, ), (1, ))
    assert_size_stride(primals_460, (2, ), (1, ))
    assert_size_stride(primals_461, (2, ), (1, ))
    assert_size_stride(primals_462, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_463, (2, ), (1, ))
    assert_size_stride(primals_464, (2, ), (1, ))
    assert_size_stride(primals_465, (2, ), (1, ))
    assert_size_stride(primals_466, (2, ), (1, ))
    assert_size_stride(primals_467, (2, ), (1, ))
    assert_size_stride(primals_468, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_469, (4, ), (1, ))
    assert_size_stride(primals_470, (4, ), (1, ))
    assert_size_stride(primals_471, (4, ), (1, ))
    assert_size_stride(primals_472, (4, ), (1, ))
    assert_size_stride(primals_473, (4, ), (1, ))
    assert_size_stride(primals_474, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_475, (2, ), (1, ))
    assert_size_stride(primals_476, (2, ), (1, ))
    assert_size_stride(primals_477, (2, ), (1, ))
    assert_size_stride(primals_478, (2, ), (1, ))
    assert_size_stride(primals_479, (2, ), (1, ))
    assert_size_stride(primals_480, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_481, (2, ), (1, ))
    assert_size_stride(primals_482, (2, ), (1, ))
    assert_size_stride(primals_483, (2, ), (1, ))
    assert_size_stride(primals_484, (2, ), (1, ))
    assert_size_stride(primals_485, (2, ), (1, ))
    assert_size_stride(primals_486, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_487, (4, ), (1, ))
    assert_size_stride(primals_488, (4, ), (1, ))
    assert_size_stride(primals_489, (4, ), (1, ))
    assert_size_stride(primals_490, (4, ), (1, ))
    assert_size_stride(primals_491, (4, ), (1, ))
    assert_size_stride(primals_492, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_493, (2, ), (1, ))
    assert_size_stride(primals_494, (2, ), (1, ))
    assert_size_stride(primals_495, (2, ), (1, ))
    assert_size_stride(primals_496, (2, ), (1, ))
    assert_size_stride(primals_497, (2, ), (1, ))
    assert_size_stride(primals_498, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_499, (2, ), (1, ))
    assert_size_stride(primals_500, (2, ), (1, ))
    assert_size_stride(primals_501, (2, ), (1, ))
    assert_size_stride(primals_502, (2, ), (1, ))
    assert_size_stride(primals_503, (2, ), (1, ))
    assert_size_stride(primals_504, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_505, (4, ), (1, ))
    assert_size_stride(primals_506, (4, ), (1, ))
    assert_size_stride(primals_507, (4, ), (1, ))
    assert_size_stride(primals_508, (4, ), (1, ))
    assert_size_stride(primals_509, (4, ), (1, ))
    assert_size_stride(primals_510, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_511, (2, ), (1, ))
    assert_size_stride(primals_512, (2, ), (1, ))
    assert_size_stride(primals_513, (2, ), (1, ))
    assert_size_stride(primals_514, (2, ), (1, ))
    assert_size_stride(primals_515, (2, ), (1, ))
    assert_size_stride(primals_516, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_517, (2, ), (1, ))
    assert_size_stride(primals_518, (2, ), (1, ))
    assert_size_stride(primals_519, (2, ), (1, ))
    assert_size_stride(primals_520, (2, ), (1, ))
    assert_size_stride(primals_521, (2, ), (1, ))
    assert_size_stride(primals_522, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_523, (4, ), (1, ))
    assert_size_stride(primals_524, (4, ), (1, ))
    assert_size_stride(primals_525, (4, ), (1, ))
    assert_size_stride(primals_526, (4, ), (1, ))
    assert_size_stride(primals_527, (4, ), (1, ))
    assert_size_stride(primals_528, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_529, (2, ), (1, ))
    assert_size_stride(primals_530, (2, ), (1, ))
    assert_size_stride(primals_531, (2, ), (1, ))
    assert_size_stride(primals_532, (2, ), (1, ))
    assert_size_stride(primals_533, (2, ), (1, ))
    assert_size_stride(primals_534, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_535, (2, ), (1, ))
    assert_size_stride(primals_536, (2, ), (1, ))
    assert_size_stride(primals_537, (2, ), (1, ))
    assert_size_stride(primals_538, (2, ), (1, ))
    assert_size_stride(primals_539, (2, ), (1, ))
    assert_size_stride(primals_540, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_541, (4, ), (1, ))
    assert_size_stride(primals_542, (4, ), (1, ))
    assert_size_stride(primals_543, (4, ), (1, ))
    assert_size_stride(primals_544, (4, ), (1, ))
    assert_size_stride(primals_545, (4, ), (1, ))
    assert_size_stride(primals_546, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_547, (2, ), (1, ))
    assert_size_stride(primals_548, (2, ), (1, ))
    assert_size_stride(primals_549, (2, ), (1, ))
    assert_size_stride(primals_550, (2, ), (1, ))
    assert_size_stride(primals_551, (2, ), (1, ))
    assert_size_stride(primals_552, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_553, (2, ), (1, ))
    assert_size_stride(primals_554, (2, ), (1, ))
    assert_size_stride(primals_555, (2, ), (1, ))
    assert_size_stride(primals_556, (2, ), (1, ))
    assert_size_stride(primals_557, (2, ), (1, ))
    assert_size_stride(primals_558, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_559, (4, ), (1, ))
    assert_size_stride(primals_560, (4, ), (1, ))
    assert_size_stride(primals_561, (4, ), (1, ))
    assert_size_stride(primals_562, (4, ), (1, ))
    assert_size_stride(primals_563, (4, ), (1, ))
    assert_size_stride(primals_564, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_565, (2, ), (1, ))
    assert_size_stride(primals_566, (2, ), (1, ))
    assert_size_stride(primals_567, (2, ), (1, ))
    assert_size_stride(primals_568, (2, ), (1, ))
    assert_size_stride(primals_569, (2, ), (1, ))
    assert_size_stride(primals_570, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_571, (2, ), (1, ))
    assert_size_stride(primals_572, (2, ), (1, ))
    assert_size_stride(primals_573, (2, ), (1, ))
    assert_size_stride(primals_574, (2, ), (1, ))
    assert_size_stride(primals_575, (2, ), (1, ))
    assert_size_stride(primals_576, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_577, (4, ), (1, ))
    assert_size_stride(primals_578, (4, ), (1, ))
    assert_size_stride(primals_579, (4, ), (1, ))
    assert_size_stride(primals_580, (4, ), (1, ))
    assert_size_stride(primals_581, (4, ), (1, ))
    assert_size_stride(primals_582, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_583, (2, ), (1, ))
    assert_size_stride(primals_584, (2, ), (1, ))
    assert_size_stride(primals_585, (2, ), (1, ))
    assert_size_stride(primals_586, (2, ), (1, ))
    assert_size_stride(primals_587, (2, ), (1, ))
    assert_size_stride(primals_588, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_589, (2, ), (1, ))
    assert_size_stride(primals_590, (2, ), (1, ))
    assert_size_stride(primals_591, (2, ), (1, ))
    assert_size_stride(primals_592, (2, ), (1, ))
    assert_size_stride(primals_593, (2, ), (1, ))
    assert_size_stride(primals_594, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_595, (4, ), (1, ))
    assert_size_stride(primals_596, (4, ), (1, ))
    assert_size_stride(primals_597, (4, ), (1, ))
    assert_size_stride(primals_598, (4, ), (1, ))
    assert_size_stride(primals_599, (4, ), (1, ))
    assert_size_stride(primals_600, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_601, (2, ), (1, ))
    assert_size_stride(primals_602, (2, ), (1, ))
    assert_size_stride(primals_603, (2, ), (1, ))
    assert_size_stride(primals_604, (2, ), (1, ))
    assert_size_stride(primals_605, (2, ), (1, ))
    assert_size_stride(primals_606, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_607, (2, ), (1, ))
    assert_size_stride(primals_608, (2, ), (1, ))
    assert_size_stride(primals_609, (2, ), (1, ))
    assert_size_stride(primals_610, (2, ), (1, ))
    assert_size_stride(primals_611, (2, ), (1, ))
    assert_size_stride(primals_612, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_613, (4, ), (1, ))
    assert_size_stride(primals_614, (4, ), (1, ))
    assert_size_stride(primals_615, (4, ), (1, ))
    assert_size_stride(primals_616, (4, ), (1, ))
    assert_size_stride(primals_617, (4, ), (1, ))
    assert_size_stride(primals_618, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_619, (2, ), (1, ))
    assert_size_stride(primals_620, (2, ), (1, ))
    assert_size_stride(primals_621, (2, ), (1, ))
    assert_size_stride(primals_622, (2, ), (1, ))
    assert_size_stride(primals_623, (2, ), (1, ))
    assert_size_stride(primals_624, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_625, (2, ), (1, ))
    assert_size_stride(primals_626, (2, ), (1, ))
    assert_size_stride(primals_627, (2, ), (1, ))
    assert_size_stride(primals_628, (2, ), (1, ))
    assert_size_stride(primals_629, (2, ), (1, ))
    assert_size_stride(primals_630, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_631, (4, ), (1, ))
    assert_size_stride(primals_632, (4, ), (1, ))
    assert_size_stride(primals_633, (4, ), (1, ))
    assert_size_stride(primals_634, (4, ), (1, ))
    assert_size_stride(primals_635, (4, ), (1, ))
    assert_size_stride(primals_636, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_637, (2, ), (1, ))
    assert_size_stride(primals_638, (2, ), (1, ))
    assert_size_stride(primals_639, (2, ), (1, ))
    assert_size_stride(primals_640, (2, ), (1, ))
    assert_size_stride(primals_641, (2, ), (1, ))
    assert_size_stride(primals_642, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_643, (2, ), (1, ))
    assert_size_stride(primals_644, (2, ), (1, ))
    assert_size_stride(primals_645, (2, ), (1, ))
    assert_size_stride(primals_646, (2, ), (1, ))
    assert_size_stride(primals_647, (2, ), (1, ))
    assert_size_stride(primals_648, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_649, (4, ), (1, ))
    assert_size_stride(primals_650, (4, ), (1, ))
    assert_size_stride(primals_651, (4, ), (1, ))
    assert_size_stride(primals_652, (4, ), (1, ))
    assert_size_stride(primals_653, (4, ), (1, ))
    assert_size_stride(primals_654, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_655, (2, ), (1, ))
    assert_size_stride(primals_656, (2, ), (1, ))
    assert_size_stride(primals_657, (2, ), (1, ))
    assert_size_stride(primals_658, (2, ), (1, ))
    assert_size_stride(primals_659, (2, ), (1, ))
    assert_size_stride(primals_660, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_661, (2, ), (1, ))
    assert_size_stride(primals_662, (2, ), (1, ))
    assert_size_stride(primals_663, (2, ), (1, ))
    assert_size_stride(primals_664, (2, ), (1, ))
    assert_size_stride(primals_665, (2, ), (1, ))
    assert_size_stride(primals_666, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_667, (4, ), (1, ))
    assert_size_stride(primals_668, (4, ), (1, ))
    assert_size_stride(primals_669, (4, ), (1, ))
    assert_size_stride(primals_670, (4, ), (1, ))
    assert_size_stride(primals_671, (4, ), (1, ))
    assert_size_stride(primals_672, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_673, (2, ), (1, ))
    assert_size_stride(primals_674, (2, ), (1, ))
    assert_size_stride(primals_675, (2, ), (1, ))
    assert_size_stride(primals_676, (2, ), (1, ))
    assert_size_stride(primals_677, (2, ), (1, ))
    assert_size_stride(primals_678, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_679, (2, ), (1, ))
    assert_size_stride(primals_680, (2, ), (1, ))
    assert_size_stride(primals_681, (2, ), (1, ))
    assert_size_stride(primals_682, (2, ), (1, ))
    assert_size_stride(primals_683, (2, ), (1, ))
    assert_size_stride(primals_684, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_685, (4, ), (1, ))
    assert_size_stride(primals_686, (4, ), (1, ))
    assert_size_stride(primals_687, (4, ), (1, ))
    assert_size_stride(primals_688, (4, ), (1, ))
    assert_size_stride(primals_689, (4, ), (1, ))
    assert_size_stride(primals_690, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_691, (2, ), (1, ))
    assert_size_stride(primals_692, (2, ), (1, ))
    assert_size_stride(primals_693, (2, ), (1, ))
    assert_size_stride(primals_694, (2, ), (1, ))
    assert_size_stride(primals_695, (2, ), (1, ))
    assert_size_stride(primals_696, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_697, (2, ), (1, ))
    assert_size_stride(primals_698, (2, ), (1, ))
    assert_size_stride(primals_699, (2, ), (1, ))
    assert_size_stride(primals_700, (2, ), (1, ))
    assert_size_stride(primals_701, (2, ), (1, ))
    assert_size_stride(primals_702, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_703, (4, ), (1, ))
    assert_size_stride(primals_704, (4, ), (1, ))
    assert_size_stride(primals_705, (4, ), (1, ))
    assert_size_stride(primals_706, (4, ), (1, ))
    assert_size_stride(primals_707, (4, ), (1, ))
    assert_size_stride(primals_708, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_709, (2, ), (1, ))
    assert_size_stride(primals_710, (2, ), (1, ))
    assert_size_stride(primals_711, (2, ), (1, ))
    assert_size_stride(primals_712, (2, ), (1, ))
    assert_size_stride(primals_713, (2, ), (1, ))
    assert_size_stride(primals_714, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_715, (2, ), (1, ))
    assert_size_stride(primals_716, (2, ), (1, ))
    assert_size_stride(primals_717, (2, ), (1, ))
    assert_size_stride(primals_718, (2, ), (1, ))
    assert_size_stride(primals_719, (2, ), (1, ))
    assert_size_stride(primals_720, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_721, (4, ), (1, ))
    assert_size_stride(primals_722, (4, ), (1, ))
    assert_size_stride(primals_723, (4, ), (1, ))
    assert_size_stride(primals_724, (4, ), (1, ))
    assert_size_stride(primals_725, (4, ), (1, ))
    assert_size_stride(primals_726, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_727, (2, ), (1, ))
    assert_size_stride(primals_728, (2, ), (1, ))
    assert_size_stride(primals_729, (2, ), (1, ))
    assert_size_stride(primals_730, (2, ), (1, ))
    assert_size_stride(primals_731, (2, ), (1, ))
    assert_size_stride(primals_732, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_733, (2, ), (1, ))
    assert_size_stride(primals_734, (2, ), (1, ))
    assert_size_stride(primals_735, (2, ), (1, ))
    assert_size_stride(primals_736, (2, ), (1, ))
    assert_size_stride(primals_737, (2, ), (1, ))
    assert_size_stride(primals_738, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_739, (4, ), (1, ))
    assert_size_stride(primals_740, (4, ), (1, ))
    assert_size_stride(primals_741, (4, ), (1, ))
    assert_size_stride(primals_742, (4, ), (1, ))
    assert_size_stride(primals_743, (4, ), (1, ))
    assert_size_stride(primals_744, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_745, (2, ), (1, ))
    assert_size_stride(primals_746, (2, ), (1, ))
    assert_size_stride(primals_747, (2, ), (1, ))
    assert_size_stride(primals_748, (2, ), (1, ))
    assert_size_stride(primals_749, (2, ), (1, ))
    assert_size_stride(primals_750, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_751, (2, ), (1, ))
    assert_size_stride(primals_752, (2, ), (1, ))
    assert_size_stride(primals_753, (2, ), (1, ))
    assert_size_stride(primals_754, (2, ), (1, ))
    assert_size_stride(primals_755, (2, ), (1, ))
    assert_size_stride(primals_756, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_757, (4, ), (1, ))
    assert_size_stride(primals_758, (4, ), (1, ))
    assert_size_stride(primals_759, (4, ), (1, ))
    assert_size_stride(primals_760, (4, ), (1, ))
    assert_size_stride(primals_761, (4, ), (1, ))
    assert_size_stride(primals_762, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_763, (2, ), (1, ))
    assert_size_stride(primals_764, (2, ), (1, ))
    assert_size_stride(primals_765, (2, ), (1, ))
    assert_size_stride(primals_766, (2, ), (1, ))
    assert_size_stride(primals_767, (2, ), (1, ))
    assert_size_stride(primals_768, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_769, (2, ), (1, ))
    assert_size_stride(primals_770, (2, ), (1, ))
    assert_size_stride(primals_771, (2, ), (1, ))
    assert_size_stride(primals_772, (2, ), (1, ))
    assert_size_stride(primals_773, (2, ), (1, ))
    assert_size_stride(primals_774, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_775, (4, ), (1, ))
    assert_size_stride(primals_776, (4, ), (1, ))
    assert_size_stride(primals_777, (4, ), (1, ))
    assert_size_stride(primals_778, (4, ), (1, ))
    assert_size_stride(primals_779, (4, ), (1, ))
    assert_size_stride(primals_780, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_781, (2, ), (1, ))
    assert_size_stride(primals_782, (2, ), (1, ))
    assert_size_stride(primals_783, (2, ), (1, ))
    assert_size_stride(primals_784, (2, ), (1, ))
    assert_size_stride(primals_785, (2, ), (1, ))
    assert_size_stride(primals_786, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_787, (2, ), (1, ))
    assert_size_stride(primals_788, (2, ), (1, ))
    assert_size_stride(primals_789, (2, ), (1, ))
    assert_size_stride(primals_790, (2, ), (1, ))
    assert_size_stride(primals_791, (2, ), (1, ))
    assert_size_stride(primals_792, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_793, (4, ), (1, ))
    assert_size_stride(primals_794, (4, ), (1, ))
    assert_size_stride(primals_795, (4, ), (1, ))
    assert_size_stride(primals_796, (4, ), (1, ))
    assert_size_stride(primals_797, (4, ), (1, ))
    assert_size_stride(primals_798, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_799, (2, ), (1, ))
    assert_size_stride(primals_800, (2, ), (1, ))
    assert_size_stride(primals_801, (2, ), (1, ))
    assert_size_stride(primals_802, (2, ), (1, ))
    assert_size_stride(primals_803, (2, ), (1, ))
    assert_size_stride(primals_804, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_805, (2, ), (1, ))
    assert_size_stride(primals_806, (2, ), (1, ))
    assert_size_stride(primals_807, (2, ), (1, ))
    assert_size_stride(primals_808, (2, ), (1, ))
    assert_size_stride(primals_809, (2, ), (1, ))
    assert_size_stride(primals_810, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_811, (4, ), (1, ))
    assert_size_stride(primals_812, (4, ), (1, ))
    assert_size_stride(primals_813, (4, ), (1, ))
    assert_size_stride(primals_814, (4, ), (1, ))
    assert_size_stride(primals_815, (4, ), (1, ))
    assert_size_stride(primals_816, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_817, (2, ), (1, ))
    assert_size_stride(primals_818, (2, ), (1, ))
    assert_size_stride(primals_819, (2, ), (1, ))
    assert_size_stride(primals_820, (2, ), (1, ))
    assert_size_stride(primals_821, (2, ), (1, ))
    assert_size_stride(primals_822, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_823, (2, ), (1, ))
    assert_size_stride(primals_824, (2, ), (1, ))
    assert_size_stride(primals_825, (2, ), (1, ))
    assert_size_stride(primals_826, (2, ), (1, ))
    assert_size_stride(primals_827, (2, ), (1, ))
    assert_size_stride(primals_828, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_829, (4, ), (1, ))
    assert_size_stride(primals_830, (4, ), (1, ))
    assert_size_stride(primals_831, (4, ), (1, ))
    assert_size_stride(primals_832, (4, ), (1, ))
    assert_size_stride(primals_833, (4, ), (1, ))
    assert_size_stride(primals_834, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_835, (2, ), (1, ))
    assert_size_stride(primals_836, (2, ), (1, ))
    assert_size_stride(primals_837, (2, ), (1, ))
    assert_size_stride(primals_838, (2, ), (1, ))
    assert_size_stride(primals_839, (2, ), (1, ))
    assert_size_stride(primals_840, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_841, (2, ), (1, ))
    assert_size_stride(primals_842, (2, ), (1, ))
    assert_size_stride(primals_843, (2, ), (1, ))
    assert_size_stride(primals_844, (2, ), (1, ))
    assert_size_stride(primals_845, (2, ), (1, ))
    assert_size_stride(primals_846, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_847, (4, ), (1, ))
    assert_size_stride(primals_848, (4, ), (1, ))
    assert_size_stride(primals_849, (4, ), (1, ))
    assert_size_stride(primals_850, (4, ), (1, ))
    assert_size_stride(primals_851, (4, ), (1, ))
    assert_size_stride(primals_852, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_853, (2, ), (1, ))
    assert_size_stride(primals_854, (2, ), (1, ))
    assert_size_stride(primals_855, (2, ), (1, ))
    assert_size_stride(primals_856, (2, ), (1, ))
    assert_size_stride(primals_857, (2, ), (1, ))
    assert_size_stride(primals_858, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_859, (2, ), (1, ))
    assert_size_stride(primals_860, (2, ), (1, ))
    assert_size_stride(primals_861, (2, ), (1, ))
    assert_size_stride(primals_862, (2, ), (1, ))
    assert_size_stride(primals_863, (2, ), (1, ))
    assert_size_stride(primals_864, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_865, (4, ), (1, ))
    assert_size_stride(primals_866, (4, ), (1, ))
    assert_size_stride(primals_867, (4, ), (1, ))
    assert_size_stride(primals_868, (4, ), (1, ))
    assert_size_stride(primals_869, (4, ), (1, ))
    assert_size_stride(primals_870, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_871, (2, ), (1, ))
    assert_size_stride(primals_872, (2, ), (1, ))
    assert_size_stride(primals_873, (2, ), (1, ))
    assert_size_stride(primals_874, (2, ), (1, ))
    assert_size_stride(primals_875, (2, ), (1, ))
    assert_size_stride(primals_876, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_877, (2, ), (1, ))
    assert_size_stride(primals_878, (2, ), (1, ))
    assert_size_stride(primals_879, (2, ), (1, ))
    assert_size_stride(primals_880, (2, ), (1, ))
    assert_size_stride(primals_881, (2, ), (1, ))
    assert_size_stride(primals_882, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_883, (4, ), (1, ))
    assert_size_stride(primals_884, (4, ), (1, ))
    assert_size_stride(primals_885, (4, ), (1, ))
    assert_size_stride(primals_886, (4, ), (1, ))
    assert_size_stride(primals_887, (4, ), (1, ))
    assert_size_stride(primals_888, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_889, (2, ), (1, ))
    assert_size_stride(primals_890, (2, ), (1, ))
    assert_size_stride(primals_891, (2, ), (1, ))
    assert_size_stride(primals_892, (2, ), (1, ))
    assert_size_stride(primals_893, (2, ), (1, ))
    assert_size_stride(primals_894, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_895, (2, ), (1, ))
    assert_size_stride(primals_896, (2, ), (1, ))
    assert_size_stride(primals_897, (2, ), (1, ))
    assert_size_stride(primals_898, (2, ), (1, ))
    assert_size_stride(primals_899, (2, ), (1, ))
    assert_size_stride(primals_900, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_901, (4, ), (1, ))
    assert_size_stride(primals_902, (4, ), (1, ))
    assert_size_stride(primals_903, (4, ), (1, ))
    assert_size_stride(primals_904, (4, ), (1, ))
    assert_size_stride(primals_905, (4, ), (1, ))
    assert_size_stride(primals_906, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_907, (2, ), (1, ))
    assert_size_stride(primals_908, (2, ), (1, ))
    assert_size_stride(primals_909, (2, ), (1, ))
    assert_size_stride(primals_910, (2, ), (1, ))
    assert_size_stride(primals_911, (2, ), (1, ))
    assert_size_stride(primals_912, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_913, (2, ), (1, ))
    assert_size_stride(primals_914, (2, ), (1, ))
    assert_size_stride(primals_915, (2, ), (1, ))
    assert_size_stride(primals_916, (2, ), (1, ))
    assert_size_stride(primals_917, (2, ), (1, ))
    assert_size_stride(primals_918, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_919, (4, ), (1, ))
    assert_size_stride(primals_920, (4, ), (1, ))
    assert_size_stride(primals_921, (4, ), (1, ))
    assert_size_stride(primals_922, (4, ), (1, ))
    assert_size_stride(primals_923, (4, ), (1, ))
    assert_size_stride(primals_924, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_925, (2, ), (1, ))
    assert_size_stride(primals_926, (2, ), (1, ))
    assert_size_stride(primals_927, (2, ), (1, ))
    assert_size_stride(primals_928, (2, ), (1, ))
    assert_size_stride(primals_929, (2, ), (1, ))
    assert_size_stride(primals_930, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_931, (2, ), (1, ))
    assert_size_stride(primals_932, (2, ), (1, ))
    assert_size_stride(primals_933, (2, ), (1, ))
    assert_size_stride(primals_934, (2, ), (1, ))
    assert_size_stride(primals_935, (2, ), (1, ))
    assert_size_stride(primals_936, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_937, (4, ), (1, ))
    assert_size_stride(primals_938, (4, ), (1, ))
    assert_size_stride(primals_939, (4, ), (1, ))
    assert_size_stride(primals_940, (4, ), (1, ))
    assert_size_stride(primals_941, (4, ), (1, ))
    assert_size_stride(primals_942, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_943, (2, ), (1, ))
    assert_size_stride(primals_944, (2, ), (1, ))
    assert_size_stride(primals_945, (2, ), (1, ))
    assert_size_stride(primals_946, (2, ), (1, ))
    assert_size_stride(primals_947, (2, ), (1, ))
    assert_size_stride(primals_948, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_949, (2, ), (1, ))
    assert_size_stride(primals_950, (2, ), (1, ))
    assert_size_stride(primals_951, (2, ), (1, ))
    assert_size_stride(primals_952, (2, ), (1, ))
    assert_size_stride(primals_953, (2, ), (1, ))
    assert_size_stride(primals_954, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_955, (4, ), (1, ))
    assert_size_stride(primals_956, (4, ), (1, ))
    assert_size_stride(primals_957, (4, ), (1, ))
    assert_size_stride(primals_958, (4, ), (1, ))
    assert_size_stride(primals_959, (4, ), (1, ))
    assert_size_stride(primals_960, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_961, (2, ), (1, ))
    assert_size_stride(primals_962, (2, ), (1, ))
    assert_size_stride(primals_963, (2, ), (1, ))
    assert_size_stride(primals_964, (2, ), (1, ))
    assert_size_stride(primals_965, (2, ), (1, ))
    assert_size_stride(primals_966, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_967, (2, ), (1, ))
    assert_size_stride(primals_968, (2, ), (1, ))
    assert_size_stride(primals_969, (2, ), (1, ))
    assert_size_stride(primals_970, (2, ), (1, ))
    assert_size_stride(primals_971, (2, ), (1, ))
    assert_size_stride(primals_972, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_973, (4, ), (1, ))
    assert_size_stride(primals_974, (4, ), (1, ))
    assert_size_stride(primals_975, (4, ), (1, ))
    assert_size_stride(primals_976, (4, ), (1, ))
    assert_size_stride(primals_977, (4, ), (1, ))
    assert_size_stride(primals_978, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_979, (2, ), (1, ))
    assert_size_stride(primals_980, (2, ), (1, ))
    assert_size_stride(primals_981, (2, ), (1, ))
    assert_size_stride(primals_982, (2, ), (1, ))
    assert_size_stride(primals_983, (2, ), (1, ))
    assert_size_stride(primals_984, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_985, (2, ), (1, ))
    assert_size_stride(primals_986, (2, ), (1, ))
    assert_size_stride(primals_987, (2, ), (1, ))
    assert_size_stride(primals_988, (2, ), (1, ))
    assert_size_stride(primals_989, (2, ), (1, ))
    assert_size_stride(primals_990, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_991, (4, ), (1, ))
    assert_size_stride(primals_992, (4, ), (1, ))
    assert_size_stride(primals_993, (4, ), (1, ))
    assert_size_stride(primals_994, (4, ), (1, ))
    assert_size_stride(primals_995, (4, ), (1, ))
    assert_size_stride(primals_996, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_997, (2, ), (1, ))
    assert_size_stride(primals_998, (2, ), (1, ))
    assert_size_stride(primals_999, (2, ), (1, ))
    assert_size_stride(primals_1000, (2, ), (1, ))
    assert_size_stride(primals_1001, (2, ), (1, ))
    assert_size_stride(primals_1002, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1003, (2, ), (1, ))
    assert_size_stride(primals_1004, (2, ), (1, ))
    assert_size_stride(primals_1005, (2, ), (1, ))
    assert_size_stride(primals_1006, (2, ), (1, ))
    assert_size_stride(primals_1007, (2, ), (1, ))
    assert_size_stride(primals_1008, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1009, (4, ), (1, ))
    assert_size_stride(primals_1010, (4, ), (1, ))
    assert_size_stride(primals_1011, (4, ), (1, ))
    assert_size_stride(primals_1012, (4, ), (1, ))
    assert_size_stride(primals_1013, (4, ), (1, ))
    assert_size_stride(primals_1014, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1015, (2, ), (1, ))
    assert_size_stride(primals_1016, (2, ), (1, ))
    assert_size_stride(primals_1017, (2, ), (1, ))
    assert_size_stride(primals_1018, (2, ), (1, ))
    assert_size_stride(primals_1019, (2, ), (1, ))
    assert_size_stride(primals_1020, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1021, (2, ), (1, ))
    assert_size_stride(primals_1022, (2, ), (1, ))
    assert_size_stride(primals_1023, (2, ), (1, ))
    assert_size_stride(primals_1024, (2, ), (1, ))
    assert_size_stride(primals_1025, (2, ), (1, ))
    assert_size_stride(primals_1026, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1027, (4, ), (1, ))
    assert_size_stride(primals_1028, (4, ), (1, ))
    assert_size_stride(primals_1029, (4, ), (1, ))
    assert_size_stride(primals_1030, (4, ), (1, ))
    assert_size_stride(primals_1031, (4, ), (1, ))
    assert_size_stride(primals_1032, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1033, (2, ), (1, ))
    assert_size_stride(primals_1034, (2, ), (1, ))
    assert_size_stride(primals_1035, (2, ), (1, ))
    assert_size_stride(primals_1036, (2, ), (1, ))
    assert_size_stride(primals_1037, (2, ), (1, ))
    assert_size_stride(primals_1038, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1039, (2, ), (1, ))
    assert_size_stride(primals_1040, (2, ), (1, ))
    assert_size_stride(primals_1041, (2, ), (1, ))
    assert_size_stride(primals_1042, (2, ), (1, ))
    assert_size_stride(primals_1043, (2, ), (1, ))
    assert_size_stride(primals_1044, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1045, (4, ), (1, ))
    assert_size_stride(primals_1046, (4, ), (1, ))
    assert_size_stride(primals_1047, (4, ), (1, ))
    assert_size_stride(primals_1048, (4, ), (1, ))
    assert_size_stride(primals_1049, (4, ), (1, ))
    assert_size_stride(primals_1050, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1051, (2, ), (1, ))
    assert_size_stride(primals_1052, (2, ), (1, ))
    assert_size_stride(primals_1053, (2, ), (1, ))
    assert_size_stride(primals_1054, (2, ), (1, ))
    assert_size_stride(primals_1055, (2, ), (1, ))
    assert_size_stride(primals_1056, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1057, (2, ), (1, ))
    assert_size_stride(primals_1058, (2, ), (1, ))
    assert_size_stride(primals_1059, (2, ), (1, ))
    assert_size_stride(primals_1060, (2, ), (1, ))
    assert_size_stride(primals_1061, (2, ), (1, ))
    assert_size_stride(primals_1062, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1063, (4, ), (1, ))
    assert_size_stride(primals_1064, (4, ), (1, ))
    assert_size_stride(primals_1065, (4, ), (1, ))
    assert_size_stride(primals_1066, (4, ), (1, ))
    assert_size_stride(primals_1067, (4, ), (1, ))
    assert_size_stride(primals_1068, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1069, (2, ), (1, ))
    assert_size_stride(primals_1070, (2, ), (1, ))
    assert_size_stride(primals_1071, (2, ), (1, ))
    assert_size_stride(primals_1072, (2, ), (1, ))
    assert_size_stride(primals_1073, (2, ), (1, ))
    assert_size_stride(primals_1074, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1075, (2, ), (1, ))
    assert_size_stride(primals_1076, (2, ), (1, ))
    assert_size_stride(primals_1077, (2, ), (1, ))
    assert_size_stride(primals_1078, (2, ), (1, ))
    assert_size_stride(primals_1079, (2, ), (1, ))
    assert_size_stride(primals_1080, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1081, (4, ), (1, ))
    assert_size_stride(primals_1082, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1083, (4, ), (1, ))
    assert_size_stride(primals_1084, (4, ), (1, ))
    assert_size_stride(primals_1085, (4, ), (1, ))
    assert_size_stride(primals_1086, (4, ), (1, ))
    assert_size_stride(primals_1087, (4, ), (1, ))
    assert_size_stride(primals_1088, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1089, (4, ), (1, ))
    assert_size_stride(primals_1090, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1091, (4, ), (1, ))
    assert_size_stride(primals_1092, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1093, (4, ), (1, ))
    assert_size_stride(primals_1094, (4, ), (1, ))
    assert_size_stride(primals_1095, (4, ), (1, ))
    assert_size_stride(primals_1096, (4, ), (1, ))
    assert_size_stride(primals_1097, (4, ), (1, ))
    assert_size_stride(primals_1098, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1099, (2, ), (1, ))
    assert_size_stride(primals_1100, (2, ), (1, ))
    assert_size_stride(primals_1101, (2, ), (1, ))
    assert_size_stride(primals_1102, (2, ), (1, ))
    assert_size_stride(primals_1103, (2, ), (1, ))
    assert_size_stride(primals_1104, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1105, (2, ), (1, ))
    assert_size_stride(primals_1106, (2, ), (1, ))
    assert_size_stride(primals_1107, (2, ), (1, ))
    assert_size_stride(primals_1108, (2, ), (1, ))
    assert_size_stride(primals_1109, (2, ), (1, ))
    assert_size_stride(primals_1110, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1111, (4, ), (1, ))
    assert_size_stride(primals_1112, (4, ), (1, ))
    assert_size_stride(primals_1113, (4, ), (1, ))
    assert_size_stride(primals_1114, (4, ), (1, ))
    assert_size_stride(primals_1115, (4, ), (1, ))
    assert_size_stride(primals_1116, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1117, (2, ), (1, ))
    assert_size_stride(primals_1118, (2, ), (1, ))
    assert_size_stride(primals_1119, (2, ), (1, ))
    assert_size_stride(primals_1120, (2, ), (1, ))
    assert_size_stride(primals_1121, (2, ), (1, ))
    assert_size_stride(primals_1122, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1123, (2, ), (1, ))
    assert_size_stride(primals_1124, (2, ), (1, ))
    assert_size_stride(primals_1125, (2, ), (1, ))
    assert_size_stride(primals_1126, (2, ), (1, ))
    assert_size_stride(primals_1127, (2, ), (1, ))
    assert_size_stride(primals_1128, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1129, (4, ), (1, ))
    assert_size_stride(primals_1130, (4, ), (1, ))
    assert_size_stride(primals_1131, (4, ), (1, ))
    assert_size_stride(primals_1132, (4, ), (1, ))
    assert_size_stride(primals_1133, (4, ), (1, ))
    assert_size_stride(primals_1134, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1135, (2, ), (1, ))
    assert_size_stride(primals_1136, (2, ), (1, ))
    assert_size_stride(primals_1137, (2, ), (1, ))
    assert_size_stride(primals_1138, (2, ), (1, ))
    assert_size_stride(primals_1139, (2, ), (1, ))
    assert_size_stride(primals_1140, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1141, (2, ), (1, ))
    assert_size_stride(primals_1142, (2, ), (1, ))
    assert_size_stride(primals_1143, (2, ), (1, ))
    assert_size_stride(primals_1144, (2, ), (1, ))
    assert_size_stride(primals_1145, (2, ), (1, ))
    assert_size_stride(primals_1146, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1147, (4, ), (1, ))
    assert_size_stride(primals_1148, (4, ), (1, ))
    assert_size_stride(primals_1149, (4, ), (1, ))
    assert_size_stride(primals_1150, (4, ), (1, ))
    assert_size_stride(primals_1151, (4, ), (1, ))
    assert_size_stride(primals_1152, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1153, (2, ), (1, ))
    assert_size_stride(primals_1154, (2, ), (1, ))
    assert_size_stride(primals_1155, (2, ), (1, ))
    assert_size_stride(primals_1156, (2, ), (1, ))
    assert_size_stride(primals_1157, (2, ), (1, ))
    assert_size_stride(primals_1158, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1159, (2, ), (1, ))
    assert_size_stride(primals_1160, (2, ), (1, ))
    assert_size_stride(primals_1161, (2, ), (1, ))
    assert_size_stride(primals_1162, (2, ), (1, ))
    assert_size_stride(primals_1163, (2, ), (1, ))
    assert_size_stride(primals_1164, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1165, (4, ), (1, ))
    assert_size_stride(primals_1166, (4, ), (1, ))
    assert_size_stride(primals_1167, (4, ), (1, ))
    assert_size_stride(primals_1168, (4, ), (1, ))
    assert_size_stride(primals_1169, (4, ), (1, ))
    assert_size_stride(primals_1170, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1171, (2, ), (1, ))
    assert_size_stride(primals_1172, (2, ), (1, ))
    assert_size_stride(primals_1173, (2, ), (1, ))
    assert_size_stride(primals_1174, (2, ), (1, ))
    assert_size_stride(primals_1175, (2, ), (1, ))
    assert_size_stride(primals_1176, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1177, (2, ), (1, ))
    assert_size_stride(primals_1178, (2, ), (1, ))
    assert_size_stride(primals_1179, (2, ), (1, ))
    assert_size_stride(primals_1180, (2, ), (1, ))
    assert_size_stride(primals_1181, (2, ), (1, ))
    assert_size_stride(primals_1182, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1183, (4, ), (1, ))
    assert_size_stride(primals_1184, (4, ), (1, ))
    assert_size_stride(primals_1185, (4, ), (1, ))
    assert_size_stride(primals_1186, (4, ), (1, ))
    assert_size_stride(primals_1187, (4, ), (1, ))
    assert_size_stride(primals_1188, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1189, (2, ), (1, ))
    assert_size_stride(primals_1190, (2, ), (1, ))
    assert_size_stride(primals_1191, (2, ), (1, ))
    assert_size_stride(primals_1192, (2, ), (1, ))
    assert_size_stride(primals_1193, (2, ), (1, ))
    assert_size_stride(primals_1194, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1195, (2, ), (1, ))
    assert_size_stride(primals_1196, (2, ), (1, ))
    assert_size_stride(primals_1197, (2, ), (1, ))
    assert_size_stride(primals_1198, (2, ), (1, ))
    assert_size_stride(primals_1199, (2, ), (1, ))
    assert_size_stride(primals_1200, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1201, (4, ), (1, ))
    assert_size_stride(primals_1202, (4, ), (1, ))
    assert_size_stride(primals_1203, (4, ), (1, ))
    assert_size_stride(primals_1204, (4, ), (1, ))
    assert_size_stride(primals_1205, (4, ), (1, ))
    assert_size_stride(primals_1206, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1207, (2, ), (1, ))
    assert_size_stride(primals_1208, (2, ), (1, ))
    assert_size_stride(primals_1209, (2, ), (1, ))
    assert_size_stride(primals_1210, (2, ), (1, ))
    assert_size_stride(primals_1211, (2, ), (1, ))
    assert_size_stride(primals_1212, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1213, (2, ), (1, ))
    assert_size_stride(primals_1214, (2, ), (1, ))
    assert_size_stride(primals_1215, (2, ), (1, ))
    assert_size_stride(primals_1216, (2, ), (1, ))
    assert_size_stride(primals_1217, (2, ), (1, ))
    assert_size_stride(primals_1218, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1219, (4, ), (1, ))
    assert_size_stride(primals_1220, (4, ), (1, ))
    assert_size_stride(primals_1221, (4, ), (1, ))
    assert_size_stride(primals_1222, (4, ), (1, ))
    assert_size_stride(primals_1223, (4, ), (1, ))
    assert_size_stride(primals_1224, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1225, (2, ), (1, ))
    assert_size_stride(primals_1226, (2, ), (1, ))
    assert_size_stride(primals_1227, (2, ), (1, ))
    assert_size_stride(primals_1228, (2, ), (1, ))
    assert_size_stride(primals_1229, (2, ), (1, ))
    assert_size_stride(primals_1230, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1231, (2, ), (1, ))
    assert_size_stride(primals_1232, (2, ), (1, ))
    assert_size_stride(primals_1233, (2, ), (1, ))
    assert_size_stride(primals_1234, (2, ), (1, ))
    assert_size_stride(primals_1235, (2, ), (1, ))
    assert_size_stride(primals_1236, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1237, (4, ), (1, ))
    assert_size_stride(primals_1238, (4, ), (1, ))
    assert_size_stride(primals_1239, (4, ), (1, ))
    assert_size_stride(primals_1240, (4, ), (1, ))
    assert_size_stride(primals_1241, (4, ), (1, ))
    assert_size_stride(primals_1242, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1243, (2, ), (1, ))
    assert_size_stride(primals_1244, (2, ), (1, ))
    assert_size_stride(primals_1245, (2, ), (1, ))
    assert_size_stride(primals_1246, (2, ), (1, ))
    assert_size_stride(primals_1247, (2, ), (1, ))
    assert_size_stride(primals_1248, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1249, (2, ), (1, ))
    assert_size_stride(primals_1250, (2, ), (1, ))
    assert_size_stride(primals_1251, (2, ), (1, ))
    assert_size_stride(primals_1252, (2, ), (1, ))
    assert_size_stride(primals_1253, (2, ), (1, ))
    assert_size_stride(primals_1254, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1255, (4, ), (1, ))
    assert_size_stride(primals_1256, (4, ), (1, ))
    assert_size_stride(primals_1257, (4, ), (1, ))
    assert_size_stride(primals_1258, (4, ), (1, ))
    assert_size_stride(primals_1259, (4, ), (1, ))
    assert_size_stride(primals_1260, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1261, (2, ), (1, ))
    assert_size_stride(primals_1262, (2, ), (1, ))
    assert_size_stride(primals_1263, (2, ), (1, ))
    assert_size_stride(primals_1264, (2, ), (1, ))
    assert_size_stride(primals_1265, (2, ), (1, ))
    assert_size_stride(primals_1266, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1267, (2, ), (1, ))
    assert_size_stride(primals_1268, (2, ), (1, ))
    assert_size_stride(primals_1269, (2, ), (1, ))
    assert_size_stride(primals_1270, (2, ), (1, ))
    assert_size_stride(primals_1271, (2, ), (1, ))
    assert_size_stride(primals_1272, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1273, (4, ), (1, ))
    assert_size_stride(primals_1274, (4, ), (1, ))
    assert_size_stride(primals_1275, (4, ), (1, ))
    assert_size_stride(primals_1276, (4, ), (1, ))
    assert_size_stride(primals_1277, (4, ), (1, ))
    assert_size_stride(primals_1278, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1279, (2, ), (1, ))
    assert_size_stride(primals_1280, (2, ), (1, ))
    assert_size_stride(primals_1281, (2, ), (1, ))
    assert_size_stride(primals_1282, (2, ), (1, ))
    assert_size_stride(primals_1283, (2, ), (1, ))
    assert_size_stride(primals_1284, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1285, (2, ), (1, ))
    assert_size_stride(primals_1286, (2, ), (1, ))
    assert_size_stride(primals_1287, (2, ), (1, ))
    assert_size_stride(primals_1288, (2, ), (1, ))
    assert_size_stride(primals_1289, (2, ), (1, ))
    assert_size_stride(primals_1290, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1291, (4, ), (1, ))
    assert_size_stride(primals_1292, (4, ), (1, ))
    assert_size_stride(primals_1293, (4, ), (1, ))
    assert_size_stride(primals_1294, (4, ), (1, ))
    assert_size_stride(primals_1295, (4, ), (1, ))
    assert_size_stride(primals_1296, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1297, (2, ), (1, ))
    assert_size_stride(primals_1298, (2, ), (1, ))
    assert_size_stride(primals_1299, (2, ), (1, ))
    assert_size_stride(primals_1300, (2, ), (1, ))
    assert_size_stride(primals_1301, (2, ), (1, ))
    assert_size_stride(primals_1302, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1303, (2, ), (1, ))
    assert_size_stride(primals_1304, (2, ), (1, ))
    assert_size_stride(primals_1305, (2, ), (1, ))
    assert_size_stride(primals_1306, (2, ), (1, ))
    assert_size_stride(primals_1307, (2, ), (1, ))
    assert_size_stride(primals_1308, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1309, (4, ), (1, ))
    assert_size_stride(primals_1310, (4, ), (1, ))
    assert_size_stride(primals_1311, (4, ), (1, ))
    assert_size_stride(primals_1312, (4, ), (1, ))
    assert_size_stride(primals_1313, (4, ), (1, ))
    assert_size_stride(primals_1314, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1315, (2, ), (1, ))
    assert_size_stride(primals_1316, (2, ), (1, ))
    assert_size_stride(primals_1317, (2, ), (1, ))
    assert_size_stride(primals_1318, (2, ), (1, ))
    assert_size_stride(primals_1319, (2, ), (1, ))
    assert_size_stride(primals_1320, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1321, (2, ), (1, ))
    assert_size_stride(primals_1322, (2, ), (1, ))
    assert_size_stride(primals_1323, (2, ), (1, ))
    assert_size_stride(primals_1324, (2, ), (1, ))
    assert_size_stride(primals_1325, (2, ), (1, ))
    assert_size_stride(primals_1326, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1327, (4, ), (1, ))
    assert_size_stride(primals_1328, (4, ), (1, ))
    assert_size_stride(primals_1329, (4, ), (1, ))
    assert_size_stride(primals_1330, (4, ), (1, ))
    assert_size_stride(primals_1331, (4, ), (1, ))
    assert_size_stride(primals_1332, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1333, (2, ), (1, ))
    assert_size_stride(primals_1334, (2, ), (1, ))
    assert_size_stride(primals_1335, (2, ), (1, ))
    assert_size_stride(primals_1336, (2, ), (1, ))
    assert_size_stride(primals_1337, (2, ), (1, ))
    assert_size_stride(primals_1338, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1339, (2, ), (1, ))
    assert_size_stride(primals_1340, (2, ), (1, ))
    assert_size_stride(primals_1341, (2, ), (1, ))
    assert_size_stride(primals_1342, (2, ), (1, ))
    assert_size_stride(primals_1343, (2, ), (1, ))
    assert_size_stride(primals_1344, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1345, (4, ), (1, ))
    assert_size_stride(primals_1346, (4, ), (1, ))
    assert_size_stride(primals_1347, (4, ), (1, ))
    assert_size_stride(primals_1348, (4, ), (1, ))
    assert_size_stride(primals_1349, (4, ), (1, ))
    assert_size_stride(primals_1350, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1351, (2, ), (1, ))
    assert_size_stride(primals_1352, (2, ), (1, ))
    assert_size_stride(primals_1353, (2, ), (1, ))
    assert_size_stride(primals_1354, (2, ), (1, ))
    assert_size_stride(primals_1355, (2, ), (1, ))
    assert_size_stride(primals_1356, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1357, (2, ), (1, ))
    assert_size_stride(primals_1358, (2, ), (1, ))
    assert_size_stride(primals_1359, (2, ), (1, ))
    assert_size_stride(primals_1360, (2, ), (1, ))
    assert_size_stride(primals_1361, (2, ), (1, ))
    assert_size_stride(primals_1362, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1363, (4, ), (1, ))
    assert_size_stride(primals_1364, (4, ), (1, ))
    assert_size_stride(primals_1365, (4, ), (1, ))
    assert_size_stride(primals_1366, (4, ), (1, ))
    assert_size_stride(primals_1367, (4, ), (1, ))
    assert_size_stride(primals_1368, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1369, (2, ), (1, ))
    assert_size_stride(primals_1370, (2, ), (1, ))
    assert_size_stride(primals_1371, (2, ), (1, ))
    assert_size_stride(primals_1372, (2, ), (1, ))
    assert_size_stride(primals_1373, (2, ), (1, ))
    assert_size_stride(primals_1374, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1375, (2, ), (1, ))
    assert_size_stride(primals_1376, (2, ), (1, ))
    assert_size_stride(primals_1377, (2, ), (1, ))
    assert_size_stride(primals_1378, (2, ), (1, ))
    assert_size_stride(primals_1379, (2, ), (1, ))
    assert_size_stride(primals_1380, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1381, (4, ), (1, ))
    assert_size_stride(primals_1382, (4, ), (1, ))
    assert_size_stride(primals_1383, (4, ), (1, ))
    assert_size_stride(primals_1384, (4, ), (1, ))
    assert_size_stride(primals_1385, (4, ), (1, ))
    assert_size_stride(primals_1386, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1387, (2, ), (1, ))
    assert_size_stride(primals_1388, (2, ), (1, ))
    assert_size_stride(primals_1389, (2, ), (1, ))
    assert_size_stride(primals_1390, (2, ), (1, ))
    assert_size_stride(primals_1391, (2, ), (1, ))
    assert_size_stride(primals_1392, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1393, (2, ), (1, ))
    assert_size_stride(primals_1394, (2, ), (1, ))
    assert_size_stride(primals_1395, (2, ), (1, ))
    assert_size_stride(primals_1396, (2, ), (1, ))
    assert_size_stride(primals_1397, (2, ), (1, ))
    assert_size_stride(primals_1398, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1399, (4, ), (1, ))
    assert_size_stride(primals_1400, (4, ), (1, ))
    assert_size_stride(primals_1401, (4, ), (1, ))
    assert_size_stride(primals_1402, (4, ), (1, ))
    assert_size_stride(primals_1403, (4, ), (1, ))
    assert_size_stride(primals_1404, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1405, (2, ), (1, ))
    assert_size_stride(primals_1406, (2, ), (1, ))
    assert_size_stride(primals_1407, (2, ), (1, ))
    assert_size_stride(primals_1408, (2, ), (1, ))
    assert_size_stride(primals_1409, (2, ), (1, ))
    assert_size_stride(primals_1410, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1411, (2, ), (1, ))
    assert_size_stride(primals_1412, (2, ), (1, ))
    assert_size_stride(primals_1413, (2, ), (1, ))
    assert_size_stride(primals_1414, (2, ), (1, ))
    assert_size_stride(primals_1415, (2, ), (1, ))
    assert_size_stride(primals_1416, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1417, (4, ), (1, ))
    assert_size_stride(primals_1418, (4, ), (1, ))
    assert_size_stride(primals_1419, (4, ), (1, ))
    assert_size_stride(primals_1420, (4, ), (1, ))
    assert_size_stride(primals_1421, (4, ), (1, ))
    assert_size_stride(primals_1422, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1423, (2, ), (1, ))
    assert_size_stride(primals_1424, (2, ), (1, ))
    assert_size_stride(primals_1425, (2, ), (1, ))
    assert_size_stride(primals_1426, (2, ), (1, ))
    assert_size_stride(primals_1427, (2, ), (1, ))
    assert_size_stride(primals_1428, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1429, (2, ), (1, ))
    assert_size_stride(primals_1430, (2, ), (1, ))
    assert_size_stride(primals_1431, (2, ), (1, ))
    assert_size_stride(primals_1432, (2, ), (1, ))
    assert_size_stride(primals_1433, (2, ), (1, ))
    assert_size_stride(primals_1434, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1435, (4, ), (1, ))
    assert_size_stride(primals_1436, (4, ), (1, ))
    assert_size_stride(primals_1437, (4, ), (1, ))
    assert_size_stride(primals_1438, (4, ), (1, ))
    assert_size_stride(primals_1439, (4, ), (1, ))
    assert_size_stride(primals_1440, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1441, (2, ), (1, ))
    assert_size_stride(primals_1442, (2, ), (1, ))
    assert_size_stride(primals_1443, (2, ), (1, ))
    assert_size_stride(primals_1444, (2, ), (1, ))
    assert_size_stride(primals_1445, (2, ), (1, ))
    assert_size_stride(primals_1446, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1447, (2, ), (1, ))
    assert_size_stride(primals_1448, (2, ), (1, ))
    assert_size_stride(primals_1449, (2, ), (1, ))
    assert_size_stride(primals_1450, (2, ), (1, ))
    assert_size_stride(primals_1451, (2, ), (1, ))
    assert_size_stride(primals_1452, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1453, (4, ), (1, ))
    assert_size_stride(primals_1454, (4, ), (1, ))
    assert_size_stride(primals_1455, (4, ), (1, ))
    assert_size_stride(primals_1456, (4, ), (1, ))
    assert_size_stride(primals_1457, (4, ), (1, ))
    assert_size_stride(primals_1458, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1459, (2, ), (1, ))
    assert_size_stride(primals_1460, (2, ), (1, ))
    assert_size_stride(primals_1461, (2, ), (1, ))
    assert_size_stride(primals_1462, (2, ), (1, ))
    assert_size_stride(primals_1463, (2, ), (1, ))
    assert_size_stride(primals_1464, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1465, (2, ), (1, ))
    assert_size_stride(primals_1466, (2, ), (1, ))
    assert_size_stride(primals_1467, (2, ), (1, ))
    assert_size_stride(primals_1468, (2, ), (1, ))
    assert_size_stride(primals_1469, (2, ), (1, ))
    assert_size_stride(primals_1470, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1471, (4, ), (1, ))
    assert_size_stride(primals_1472, (4, ), (1, ))
    assert_size_stride(primals_1473, (4, ), (1, ))
    assert_size_stride(primals_1474, (4, ), (1, ))
    assert_size_stride(primals_1475, (4, ), (1, ))
    assert_size_stride(primals_1476, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1477, (2, ), (1, ))
    assert_size_stride(primals_1478, (2, ), (1, ))
    assert_size_stride(primals_1479, (2, ), (1, ))
    assert_size_stride(primals_1480, (2, ), (1, ))
    assert_size_stride(primals_1481, (2, ), (1, ))
    assert_size_stride(primals_1482, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1483, (2, ), (1, ))
    assert_size_stride(primals_1484, (2, ), (1, ))
    assert_size_stride(primals_1485, (2, ), (1, ))
    assert_size_stride(primals_1486, (2, ), (1, ))
    assert_size_stride(primals_1487, (2, ), (1, ))
    assert_size_stride(primals_1488, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1489, (4, ), (1, ))
    assert_size_stride(primals_1490, (4, ), (1, ))
    assert_size_stride(primals_1491, (4, ), (1, ))
    assert_size_stride(primals_1492, (4, ), (1, ))
    assert_size_stride(primals_1493, (4, ), (1, ))
    assert_size_stride(primals_1494, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1495, (2, ), (1, ))
    assert_size_stride(primals_1496, (2, ), (1, ))
    assert_size_stride(primals_1497, (2, ), (1, ))
    assert_size_stride(primals_1498, (2, ), (1, ))
    assert_size_stride(primals_1499, (2, ), (1, ))
    assert_size_stride(primals_1500, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1501, (2, ), (1, ))
    assert_size_stride(primals_1502, (2, ), (1, ))
    assert_size_stride(primals_1503, (2, ), (1, ))
    assert_size_stride(primals_1504, (2, ), (1, ))
    assert_size_stride(primals_1505, (2, ), (1, ))
    assert_size_stride(primals_1506, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1507, (4, ), (1, ))
    assert_size_stride(primals_1508, (4, ), (1, ))
    assert_size_stride(primals_1509, (4, ), (1, ))
    assert_size_stride(primals_1510, (4, ), (1, ))
    assert_size_stride(primals_1511, (4, ), (1, ))
    assert_size_stride(primals_1512, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1513, (2, ), (1, ))
    assert_size_stride(primals_1514, (2, ), (1, ))
    assert_size_stride(primals_1515, (2, ), (1, ))
    assert_size_stride(primals_1516, (2, ), (1, ))
    assert_size_stride(primals_1517, (2, ), (1, ))
    assert_size_stride(primals_1518, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1519, (2, ), (1, ))
    assert_size_stride(primals_1520, (2, ), (1, ))
    assert_size_stride(primals_1521, (2, ), (1, ))
    assert_size_stride(primals_1522, (2, ), (1, ))
    assert_size_stride(primals_1523, (2, ), (1, ))
    assert_size_stride(primals_1524, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1525, (4, ), (1, ))
    assert_size_stride(primals_1526, (4, ), (1, ))
    assert_size_stride(primals_1527, (4, ), (1, ))
    assert_size_stride(primals_1528, (4, ), (1, ))
    assert_size_stride(primals_1529, (4, ), (1, ))
    assert_size_stride(primals_1530, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1531, (2, ), (1, ))
    assert_size_stride(primals_1532, (2, ), (1, ))
    assert_size_stride(primals_1533, (2, ), (1, ))
    assert_size_stride(primals_1534, (2, ), (1, ))
    assert_size_stride(primals_1535, (2, ), (1, ))
    assert_size_stride(primals_1536, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1537, (2, ), (1, ))
    assert_size_stride(primals_1538, (2, ), (1, ))
    assert_size_stride(primals_1539, (2, ), (1, ))
    assert_size_stride(primals_1540, (2, ), (1, ))
    assert_size_stride(primals_1541, (2, ), (1, ))
    assert_size_stride(primals_1542, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1543, (4, ), (1, ))
    assert_size_stride(primals_1544, (4, ), (1, ))
    assert_size_stride(primals_1545, (4, ), (1, ))
    assert_size_stride(primals_1546, (4, ), (1, ))
    assert_size_stride(primals_1547, (4, ), (1, ))
    assert_size_stride(primals_1548, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1549, (2, ), (1, ))
    assert_size_stride(primals_1550, (2, ), (1, ))
    assert_size_stride(primals_1551, (2, ), (1, ))
    assert_size_stride(primals_1552, (2, ), (1, ))
    assert_size_stride(primals_1553, (2, ), (1, ))
    assert_size_stride(primals_1554, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1555, (2, ), (1, ))
    assert_size_stride(primals_1556, (2, ), (1, ))
    assert_size_stride(primals_1557, (2, ), (1, ))
    assert_size_stride(primals_1558, (2, ), (1, ))
    assert_size_stride(primals_1559, (2, ), (1, ))
    assert_size_stride(primals_1560, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1561, (4, ), (1, ))
    assert_size_stride(primals_1562, (4, ), (1, ))
    assert_size_stride(primals_1563, (4, ), (1, ))
    assert_size_stride(primals_1564, (4, ), (1, ))
    assert_size_stride(primals_1565, (4, ), (1, ))
    assert_size_stride(primals_1566, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1567, (2, ), (1, ))
    assert_size_stride(primals_1568, (2, ), (1, ))
    assert_size_stride(primals_1569, (2, ), (1, ))
    assert_size_stride(primals_1570, (2, ), (1, ))
    assert_size_stride(primals_1571, (2, ), (1, ))
    assert_size_stride(primals_1572, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1573, (2, ), (1, ))
    assert_size_stride(primals_1574, (2, ), (1, ))
    assert_size_stride(primals_1575, (2, ), (1, ))
    assert_size_stride(primals_1576, (2, ), (1, ))
    assert_size_stride(primals_1577, (2, ), (1, ))
    assert_size_stride(primals_1578, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1579, (4, ), (1, ))
    assert_size_stride(primals_1580, (4, ), (1, ))
    assert_size_stride(primals_1581, (4, ), (1, ))
    assert_size_stride(primals_1582, (4, ), (1, ))
    assert_size_stride(primals_1583, (4, ), (1, ))
    assert_size_stride(primals_1584, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1585, (2, ), (1, ))
    assert_size_stride(primals_1586, (2, ), (1, ))
    assert_size_stride(primals_1587, (2, ), (1, ))
    assert_size_stride(primals_1588, (2, ), (1, ))
    assert_size_stride(primals_1589, (2, ), (1, ))
    assert_size_stride(primals_1590, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1591, (2, ), (1, ))
    assert_size_stride(primals_1592, (2, ), (1, ))
    assert_size_stride(primals_1593, (2, ), (1, ))
    assert_size_stride(primals_1594, (2, ), (1, ))
    assert_size_stride(primals_1595, (2, ), (1, ))
    assert_size_stride(primals_1596, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1597, (4, ), (1, ))
    assert_size_stride(primals_1598, (4, ), (1, ))
    assert_size_stride(primals_1599, (4, ), (1, ))
    assert_size_stride(primals_1600, (4, ), (1, ))
    assert_size_stride(primals_1601, (4, ), (1, ))
    assert_size_stride(primals_1602, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1603, (2, ), (1, ))
    assert_size_stride(primals_1604, (2, ), (1, ))
    assert_size_stride(primals_1605, (2, ), (1, ))
    assert_size_stride(primals_1606, (2, ), (1, ))
    assert_size_stride(primals_1607, (2, ), (1, ))
    assert_size_stride(primals_1608, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1609, (2, ), (1, ))
    assert_size_stride(primals_1610, (2, ), (1, ))
    assert_size_stride(primals_1611, (2, ), (1, ))
    assert_size_stride(primals_1612, (2, ), (1, ))
    assert_size_stride(primals_1613, (2, ), (1, ))
    assert_size_stride(primals_1614, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1615, (4, ), (1, ))
    assert_size_stride(primals_1616, (4, ), (1, ))
    assert_size_stride(primals_1617, (4, ), (1, ))
    assert_size_stride(primals_1618, (4, ), (1, ))
    assert_size_stride(primals_1619, (4, ), (1, ))
    assert_size_stride(primals_1620, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1621, (2, ), (1, ))
    assert_size_stride(primals_1622, (2, ), (1, ))
    assert_size_stride(primals_1623, (2, ), (1, ))
    assert_size_stride(primals_1624, (2, ), (1, ))
    assert_size_stride(primals_1625, (2, ), (1, ))
    assert_size_stride(primals_1626, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1627, (2, ), (1, ))
    assert_size_stride(primals_1628, (2, ), (1, ))
    assert_size_stride(primals_1629, (2, ), (1, ))
    assert_size_stride(primals_1630, (2, ), (1, ))
    assert_size_stride(primals_1631, (2, ), (1, ))
    assert_size_stride(primals_1632, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1633, (4, ), (1, ))
    assert_size_stride(primals_1634, (4, ), (1, ))
    assert_size_stride(primals_1635, (4, ), (1, ))
    assert_size_stride(primals_1636, (4, ), (1, ))
    assert_size_stride(primals_1637, (4, ), (1, ))
    assert_size_stride(primals_1638, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1639, (2, ), (1, ))
    assert_size_stride(primals_1640, (2, ), (1, ))
    assert_size_stride(primals_1641, (2, ), (1, ))
    assert_size_stride(primals_1642, (2, ), (1, ))
    assert_size_stride(primals_1643, (2, ), (1, ))
    assert_size_stride(primals_1644, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1645, (2, ), (1, ))
    assert_size_stride(primals_1646, (2, ), (1, ))
    assert_size_stride(primals_1647, (2, ), (1, ))
    assert_size_stride(primals_1648, (2, ), (1, ))
    assert_size_stride(primals_1649, (2, ), (1, ))
    assert_size_stride(primals_1650, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1651, (4, ), (1, ))
    assert_size_stride(primals_1652, (4, ), (1, ))
    assert_size_stride(primals_1653, (4, ), (1, ))
    assert_size_stride(primals_1654, (4, ), (1, ))
    assert_size_stride(primals_1655, (4, ), (1, ))
    assert_size_stride(primals_1656, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1657, (2, ), (1, ))
    assert_size_stride(primals_1658, (2, ), (1, ))
    assert_size_stride(primals_1659, (2, ), (1, ))
    assert_size_stride(primals_1660, (2, ), (1, ))
    assert_size_stride(primals_1661, (2, ), (1, ))
    assert_size_stride(primals_1662, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1663, (2, ), (1, ))
    assert_size_stride(primals_1664, (2, ), (1, ))
    assert_size_stride(primals_1665, (2, ), (1, ))
    assert_size_stride(primals_1666, (2, ), (1, ))
    assert_size_stride(primals_1667, (2, ), (1, ))
    assert_size_stride(primals_1668, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1669, (4, ), (1, ))
    assert_size_stride(primals_1670, (4, ), (1, ))
    assert_size_stride(primals_1671, (4, ), (1, ))
    assert_size_stride(primals_1672, (4, ), (1, ))
    assert_size_stride(primals_1673, (4, ), (1, ))
    assert_size_stride(primals_1674, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1675, (2, ), (1, ))
    assert_size_stride(primals_1676, (2, ), (1, ))
    assert_size_stride(primals_1677, (2, ), (1, ))
    assert_size_stride(primals_1678, (2, ), (1, ))
    assert_size_stride(primals_1679, (2, ), (1, ))
    assert_size_stride(primals_1680, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1681, (2, ), (1, ))
    assert_size_stride(primals_1682, (2, ), (1, ))
    assert_size_stride(primals_1683, (2, ), (1, ))
    assert_size_stride(primals_1684, (2, ), (1, ))
    assert_size_stride(primals_1685, (2, ), (1, ))
    assert_size_stride(primals_1686, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1687, (4, ), (1, ))
    assert_size_stride(primals_1688, (4, ), (1, ))
    assert_size_stride(primals_1689, (4, ), (1, ))
    assert_size_stride(primals_1690, (4, ), (1, ))
    assert_size_stride(primals_1691, (4, ), (1, ))
    assert_size_stride(primals_1692, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1693, (2, ), (1, ))
    assert_size_stride(primals_1694, (2, ), (1, ))
    assert_size_stride(primals_1695, (2, ), (1, ))
    assert_size_stride(primals_1696, (2, ), (1, ))
    assert_size_stride(primals_1697, (2, ), (1, ))
    assert_size_stride(primals_1698, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1699, (2, ), (1, ))
    assert_size_stride(primals_1700, (2, ), (1, ))
    assert_size_stride(primals_1701, (2, ), (1, ))
    assert_size_stride(primals_1702, (2, ), (1, ))
    assert_size_stride(primals_1703, (2, ), (1, ))
    assert_size_stride(primals_1704, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1705, (4, ), (1, ))
    assert_size_stride(primals_1706, (4, ), (1, ))
    assert_size_stride(primals_1707, (4, ), (1, ))
    assert_size_stride(primals_1708, (4, ), (1, ))
    assert_size_stride(primals_1709, (4, ), (1, ))
    assert_size_stride(primals_1710, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1711, (2, ), (1, ))
    assert_size_stride(primals_1712, (2, ), (1, ))
    assert_size_stride(primals_1713, (2, ), (1, ))
    assert_size_stride(primals_1714, (2, ), (1, ))
    assert_size_stride(primals_1715, (2, ), (1, ))
    assert_size_stride(primals_1716, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1717, (2, ), (1, ))
    assert_size_stride(primals_1718, (2, ), (1, ))
    assert_size_stride(primals_1719, (2, ), (1, ))
    assert_size_stride(primals_1720, (2, ), (1, ))
    assert_size_stride(primals_1721, (2, ), (1, ))
    assert_size_stride(primals_1722, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1723, (4, ), (1, ))
    assert_size_stride(primals_1724, (4, ), (1, ))
    assert_size_stride(primals_1725, (4, ), (1, ))
    assert_size_stride(primals_1726, (4, ), (1, ))
    assert_size_stride(primals_1727, (4, ), (1, ))
    assert_size_stride(primals_1728, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1729, (2, ), (1, ))
    assert_size_stride(primals_1730, (2, ), (1, ))
    assert_size_stride(primals_1731, (2, ), (1, ))
    assert_size_stride(primals_1732, (2, ), (1, ))
    assert_size_stride(primals_1733, (2, ), (1, ))
    assert_size_stride(primals_1734, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1735, (2, ), (1, ))
    assert_size_stride(primals_1736, (2, ), (1, ))
    assert_size_stride(primals_1737, (2, ), (1, ))
    assert_size_stride(primals_1738, (2, ), (1, ))
    assert_size_stride(primals_1739, (2, ), (1, ))
    assert_size_stride(primals_1740, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1741, (4, ), (1, ))
    assert_size_stride(primals_1742, (4, ), (1, ))
    assert_size_stride(primals_1743, (4, ), (1, ))
    assert_size_stride(primals_1744, (4, ), (1, ))
    assert_size_stride(primals_1745, (4, ), (1, ))
    assert_size_stride(primals_1746, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1747, (2, ), (1, ))
    assert_size_stride(primals_1748, (2, ), (1, ))
    assert_size_stride(primals_1749, (2, ), (1, ))
    assert_size_stride(primals_1750, (2, ), (1, ))
    assert_size_stride(primals_1751, (2, ), (1, ))
    assert_size_stride(primals_1752, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1753, (2, ), (1, ))
    assert_size_stride(primals_1754, (2, ), (1, ))
    assert_size_stride(primals_1755, (2, ), (1, ))
    assert_size_stride(primals_1756, (2, ), (1, ))
    assert_size_stride(primals_1757, (2, ), (1, ))
    assert_size_stride(primals_1758, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1759, (4, ), (1, ))
    assert_size_stride(primals_1760, (4, ), (1, ))
    assert_size_stride(primals_1761, (4, ), (1, ))
    assert_size_stride(primals_1762, (4, ), (1, ))
    assert_size_stride(primals_1763, (4, ), (1, ))
    assert_size_stride(primals_1764, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1765, (2, ), (1, ))
    assert_size_stride(primals_1766, (2, ), (1, ))
    assert_size_stride(primals_1767, (2, ), (1, ))
    assert_size_stride(primals_1768, (2, ), (1, ))
    assert_size_stride(primals_1769, (2, ), (1, ))
    assert_size_stride(primals_1770, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1771, (2, ), (1, ))
    assert_size_stride(primals_1772, (2, ), (1, ))
    assert_size_stride(primals_1773, (2, ), (1, ))
    assert_size_stride(primals_1774, (2, ), (1, ))
    assert_size_stride(primals_1775, (2, ), (1, ))
    assert_size_stride(primals_1776, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1777, (4, ), (1, ))
    assert_size_stride(primals_1778, (4, ), (1, ))
    assert_size_stride(primals_1779, (4, ), (1, ))
    assert_size_stride(primals_1780, (4, ), (1, ))
    assert_size_stride(primals_1781, (4, ), (1, ))
    assert_size_stride(primals_1782, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1783, (2, ), (1, ))
    assert_size_stride(primals_1784, (2, ), (1, ))
    assert_size_stride(primals_1785, (2, ), (1, ))
    assert_size_stride(primals_1786, (2, ), (1, ))
    assert_size_stride(primals_1787, (2, ), (1, ))
    assert_size_stride(primals_1788, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1789, (2, ), (1, ))
    assert_size_stride(primals_1790, (2, ), (1, ))
    assert_size_stride(primals_1791, (2, ), (1, ))
    assert_size_stride(primals_1792, (2, ), (1, ))
    assert_size_stride(primals_1793, (2, ), (1, ))
    assert_size_stride(primals_1794, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1795, (4, ), (1, ))
    assert_size_stride(primals_1796, (4, ), (1, ))
    assert_size_stride(primals_1797, (4, ), (1, ))
    assert_size_stride(primals_1798, (4, ), (1, ))
    assert_size_stride(primals_1799, (4, ), (1, ))
    assert_size_stride(primals_1800, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1801, (2, ), (1, ))
    assert_size_stride(primals_1802, (2, ), (1, ))
    assert_size_stride(primals_1803, (2, ), (1, ))
    assert_size_stride(primals_1804, (2, ), (1, ))
    assert_size_stride(primals_1805, (2, ), (1, ))
    assert_size_stride(primals_1806, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1807, (2, ), (1, ))
    assert_size_stride(primals_1808, (2, ), (1, ))
    assert_size_stride(primals_1809, (2, ), (1, ))
    assert_size_stride(primals_1810, (2, ), (1, ))
    assert_size_stride(primals_1811, (2, ), (1, ))
    assert_size_stride(primals_1812, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1813, (4, ), (1, ))
    assert_size_stride(primals_1814, (4, ), (1, ))
    assert_size_stride(primals_1815, (4, ), (1, ))
    assert_size_stride(primals_1816, (4, ), (1, ))
    assert_size_stride(primals_1817, (4, ), (1, ))
    assert_size_stride(primals_1818, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1819, (2, ), (1, ))
    assert_size_stride(primals_1820, (2, ), (1, ))
    assert_size_stride(primals_1821, (2, ), (1, ))
    assert_size_stride(primals_1822, (2, ), (1, ))
    assert_size_stride(primals_1823, (2, ), (1, ))
    assert_size_stride(primals_1824, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1825, (2, ), (1, ))
    assert_size_stride(primals_1826, (2, ), (1, ))
    assert_size_stride(primals_1827, (2, ), (1, ))
    assert_size_stride(primals_1828, (2, ), (1, ))
    assert_size_stride(primals_1829, (2, ), (1, ))
    assert_size_stride(primals_1830, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1831, (4, ), (1, ))
    assert_size_stride(primals_1832, (4, ), (1, ))
    assert_size_stride(primals_1833, (4, ), (1, ))
    assert_size_stride(primals_1834, (4, ), (1, ))
    assert_size_stride(primals_1835, (4, ), (1, ))
    assert_size_stride(primals_1836, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1837, (2, ), (1, ))
    assert_size_stride(primals_1838, (2, ), (1, ))
    assert_size_stride(primals_1839, (2, ), (1, ))
    assert_size_stride(primals_1840, (2, ), (1, ))
    assert_size_stride(primals_1841, (2, ), (1, ))
    assert_size_stride(primals_1842, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1843, (2, ), (1, ))
    assert_size_stride(primals_1844, (2, ), (1, ))
    assert_size_stride(primals_1845, (2, ), (1, ))
    assert_size_stride(primals_1846, (2, ), (1, ))
    assert_size_stride(primals_1847, (2, ), (1, ))
    assert_size_stride(primals_1848, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1849, (4, ), (1, ))
    assert_size_stride(primals_1850, (4, ), (1, ))
    assert_size_stride(primals_1851, (4, ), (1, ))
    assert_size_stride(primals_1852, (4, ), (1, ))
    assert_size_stride(primals_1853, (4, ), (1, ))
    assert_size_stride(primals_1854, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1855, (2, ), (1, ))
    assert_size_stride(primals_1856, (2, ), (1, ))
    assert_size_stride(primals_1857, (2, ), (1, ))
    assert_size_stride(primals_1858, (2, ), (1, ))
    assert_size_stride(primals_1859, (2, ), (1, ))
    assert_size_stride(primals_1860, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1861, (2, ), (1, ))
    assert_size_stride(primals_1862, (2, ), (1, ))
    assert_size_stride(primals_1863, (2, ), (1, ))
    assert_size_stride(primals_1864, (2, ), (1, ))
    assert_size_stride(primals_1865, (2, ), (1, ))
    assert_size_stride(primals_1866, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1867, (4, ), (1, ))
    assert_size_stride(primals_1868, (4, ), (1, ))
    assert_size_stride(primals_1869, (4, ), (1, ))
    assert_size_stride(primals_1870, (4, ), (1, ))
    assert_size_stride(primals_1871, (4, ), (1, ))
    assert_size_stride(primals_1872, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1873, (2, ), (1, ))
    assert_size_stride(primals_1874, (2, ), (1, ))
    assert_size_stride(primals_1875, (2, ), (1, ))
    assert_size_stride(primals_1876, (2, ), (1, ))
    assert_size_stride(primals_1877, (2, ), (1, ))
    assert_size_stride(primals_1878, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1879, (2, ), (1, ))
    assert_size_stride(primals_1880, (2, ), (1, ))
    assert_size_stride(primals_1881, (2, ), (1, ))
    assert_size_stride(primals_1882, (2, ), (1, ))
    assert_size_stride(primals_1883, (2, ), (1, ))
    assert_size_stride(primals_1884, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1885, (4, ), (1, ))
    assert_size_stride(primals_1886, (4, ), (1, ))
    assert_size_stride(primals_1887, (4, ), (1, ))
    assert_size_stride(primals_1888, (4, ), (1, ))
    assert_size_stride(primals_1889, (4, ), (1, ))
    assert_size_stride(primals_1890, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1891, (2, ), (1, ))
    assert_size_stride(primals_1892, (2, ), (1, ))
    assert_size_stride(primals_1893, (2, ), (1, ))
    assert_size_stride(primals_1894, (2, ), (1, ))
    assert_size_stride(primals_1895, (2, ), (1, ))
    assert_size_stride(primals_1896, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1897, (2, ), (1, ))
    assert_size_stride(primals_1898, (2, ), (1, ))
    assert_size_stride(primals_1899, (2, ), (1, ))
    assert_size_stride(primals_1900, (2, ), (1, ))
    assert_size_stride(primals_1901, (2, ), (1, ))
    assert_size_stride(primals_1902, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1903, (4, ), (1, ))
    assert_size_stride(primals_1904, (4, ), (1, ))
    assert_size_stride(primals_1905, (4, ), (1, ))
    assert_size_stride(primals_1906, (4, ), (1, ))
    assert_size_stride(primals_1907, (4, ), (1, ))
    assert_size_stride(primals_1908, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1909, (2, ), (1, ))
    assert_size_stride(primals_1910, (2, ), (1, ))
    assert_size_stride(primals_1911, (2, ), (1, ))
    assert_size_stride(primals_1912, (2, ), (1, ))
    assert_size_stride(primals_1913, (2, ), (1, ))
    assert_size_stride(primals_1914, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1915, (2, ), (1, ))
    assert_size_stride(primals_1916, (2, ), (1, ))
    assert_size_stride(primals_1917, (2, ), (1, ))
    assert_size_stride(primals_1918, (2, ), (1, ))
    assert_size_stride(primals_1919, (2, ), (1, ))
    assert_size_stride(primals_1920, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1921, (4, ), (1, ))
    assert_size_stride(primals_1922, (4, ), (1, ))
    assert_size_stride(primals_1923, (4, ), (1, ))
    assert_size_stride(primals_1924, (4, ), (1, ))
    assert_size_stride(primals_1925, (4, ), (1, ))
    assert_size_stride(primals_1926, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1927, (2, ), (1, ))
    assert_size_stride(primals_1928, (2, ), (1, ))
    assert_size_stride(primals_1929, (2, ), (1, ))
    assert_size_stride(primals_1930, (2, ), (1, ))
    assert_size_stride(primals_1931, (2, ), (1, ))
    assert_size_stride(primals_1932, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1933, (2, ), (1, ))
    assert_size_stride(primals_1934, (2, ), (1, ))
    assert_size_stride(primals_1935, (2, ), (1, ))
    assert_size_stride(primals_1936, (2, ), (1, ))
    assert_size_stride(primals_1937, (2, ), (1, ))
    assert_size_stride(primals_1938, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1939, (4, ), (1, ))
    assert_size_stride(primals_1940, (4, ), (1, ))
    assert_size_stride(primals_1941, (4, ), (1, ))
    assert_size_stride(primals_1942, (4, ), (1, ))
    assert_size_stride(primals_1943, (4, ), (1, ))
    assert_size_stride(primals_1944, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1945, (2, ), (1, ))
    assert_size_stride(primals_1946, (2, ), (1, ))
    assert_size_stride(primals_1947, (2, ), (1, ))
    assert_size_stride(primals_1948, (2, ), (1, ))
    assert_size_stride(primals_1949, (2, ), (1, ))
    assert_size_stride(primals_1950, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1951, (2, ), (1, ))
    assert_size_stride(primals_1952, (2, ), (1, ))
    assert_size_stride(primals_1953, (2, ), (1, ))
    assert_size_stride(primals_1954, (2, ), (1, ))
    assert_size_stride(primals_1955, (2, ), (1, ))
    assert_size_stride(primals_1956, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1957, (4, ), (1, ))
    assert_size_stride(primals_1958, (4, ), (1, ))
    assert_size_stride(primals_1959, (4, ), (1, ))
    assert_size_stride(primals_1960, (4, ), (1, ))
    assert_size_stride(primals_1961, (4, ), (1, ))
    assert_size_stride(primals_1962, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1963, (2, ), (1, ))
    assert_size_stride(primals_1964, (2, ), (1, ))
    assert_size_stride(primals_1965, (2, ), (1, ))
    assert_size_stride(primals_1966, (2, ), (1, ))
    assert_size_stride(primals_1967, (2, ), (1, ))
    assert_size_stride(primals_1968, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1969, (2, ), (1, ))
    assert_size_stride(primals_1970, (2, ), (1, ))
    assert_size_stride(primals_1971, (2, ), (1, ))
    assert_size_stride(primals_1972, (2, ), (1, ))
    assert_size_stride(primals_1973, (2, ), (1, ))
    assert_size_stride(primals_1974, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1975, (4, ), (1, ))
    assert_size_stride(primals_1976, (4, ), (1, ))
    assert_size_stride(primals_1977, (4, ), (1, ))
    assert_size_stride(primals_1978, (4, ), (1, ))
    assert_size_stride(primals_1979, (4, ), (1, ))
    assert_size_stride(primals_1980, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1981, (2, ), (1, ))
    assert_size_stride(primals_1982, (2, ), (1, ))
    assert_size_stride(primals_1983, (2, ), (1, ))
    assert_size_stride(primals_1984, (2, ), (1, ))
    assert_size_stride(primals_1985, (2, ), (1, ))
    assert_size_stride(primals_1986, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_1987, (2, ), (1, ))
    assert_size_stride(primals_1988, (2, ), (1, ))
    assert_size_stride(primals_1989, (2, ), (1, ))
    assert_size_stride(primals_1990, (2, ), (1, ))
    assert_size_stride(primals_1991, (2, ), (1, ))
    assert_size_stride(primals_1992, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_1993, (4, ), (1, ))
    assert_size_stride(primals_1994, (4, ), (1, ))
    assert_size_stride(primals_1995, (4, ), (1, ))
    assert_size_stride(primals_1996, (4, ), (1, ))
    assert_size_stride(primals_1997, (4, ), (1, ))
    assert_size_stride(primals_1998, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_1999, (2, ), (1, ))
    assert_size_stride(primals_2000, (2, ), (1, ))
    assert_size_stride(primals_2001, (2, ), (1, ))
    assert_size_stride(primals_2002, (2, ), (1, ))
    assert_size_stride(primals_2003, (2, ), (1, ))
    assert_size_stride(primals_2004, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2005, (2, ), (1, ))
    assert_size_stride(primals_2006, (2, ), (1, ))
    assert_size_stride(primals_2007, (2, ), (1, ))
    assert_size_stride(primals_2008, (2, ), (1, ))
    assert_size_stride(primals_2009, (2, ), (1, ))
    assert_size_stride(primals_2010, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2011, (4, ), (1, ))
    assert_size_stride(primals_2012, (4, ), (1, ))
    assert_size_stride(primals_2013, (4, ), (1, ))
    assert_size_stride(primals_2014, (4, ), (1, ))
    assert_size_stride(primals_2015, (4, ), (1, ))
    assert_size_stride(primals_2016, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2017, (2, ), (1, ))
    assert_size_stride(primals_2018, (2, ), (1, ))
    assert_size_stride(primals_2019, (2, ), (1, ))
    assert_size_stride(primals_2020, (2, ), (1, ))
    assert_size_stride(primals_2021, (2, ), (1, ))
    assert_size_stride(primals_2022, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2023, (2, ), (1, ))
    assert_size_stride(primals_2024, (2, ), (1, ))
    assert_size_stride(primals_2025, (2, ), (1, ))
    assert_size_stride(primals_2026, (2, ), (1, ))
    assert_size_stride(primals_2027, (2, ), (1, ))
    assert_size_stride(primals_2028, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2029, (4, ), (1, ))
    assert_size_stride(primals_2030, (4, ), (1, ))
    assert_size_stride(primals_2031, (4, ), (1, ))
    assert_size_stride(primals_2032, (4, ), (1, ))
    assert_size_stride(primals_2033, (4, ), (1, ))
    assert_size_stride(primals_2034, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2035, (2, ), (1, ))
    assert_size_stride(primals_2036, (2, ), (1, ))
    assert_size_stride(primals_2037, (2, ), (1, ))
    assert_size_stride(primals_2038, (2, ), (1, ))
    assert_size_stride(primals_2039, (2, ), (1, ))
    assert_size_stride(primals_2040, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2041, (2, ), (1, ))
    assert_size_stride(primals_2042, (2, ), (1, ))
    assert_size_stride(primals_2043, (2, ), (1, ))
    assert_size_stride(primals_2044, (2, ), (1, ))
    assert_size_stride(primals_2045, (2, ), (1, ))
    assert_size_stride(primals_2046, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2047, (4, ), (1, ))
    assert_size_stride(primals_2048, (4, ), (1, ))
    assert_size_stride(primals_2049, (4, ), (1, ))
    assert_size_stride(primals_2050, (4, ), (1, ))
    assert_size_stride(primals_2051, (4, ), (1, ))
    assert_size_stride(primals_2052, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2053, (2, ), (1, ))
    assert_size_stride(primals_2054, (2, ), (1, ))
    assert_size_stride(primals_2055, (2, ), (1, ))
    assert_size_stride(primals_2056, (2, ), (1, ))
    assert_size_stride(primals_2057, (2, ), (1, ))
    assert_size_stride(primals_2058, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2059, (2, ), (1, ))
    assert_size_stride(primals_2060, (2, ), (1, ))
    assert_size_stride(primals_2061, (2, ), (1, ))
    assert_size_stride(primals_2062, (2, ), (1, ))
    assert_size_stride(primals_2063, (2, ), (1, ))
    assert_size_stride(primals_2064, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2065, (4, ), (1, ))
    assert_size_stride(primals_2066, (4, ), (1, ))
    assert_size_stride(primals_2067, (4, ), (1, ))
    assert_size_stride(primals_2068, (4, ), (1, ))
    assert_size_stride(primals_2069, (4, ), (1, ))
    assert_size_stride(primals_2070, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2071, (2, ), (1, ))
    assert_size_stride(primals_2072, (2, ), (1, ))
    assert_size_stride(primals_2073, (2, ), (1, ))
    assert_size_stride(primals_2074, (2, ), (1, ))
    assert_size_stride(primals_2075, (2, ), (1, ))
    assert_size_stride(primals_2076, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2077, (2, ), (1, ))
    assert_size_stride(primals_2078, (2, ), (1, ))
    assert_size_stride(primals_2079, (2, ), (1, ))
    assert_size_stride(primals_2080, (2, ), (1, ))
    assert_size_stride(primals_2081, (2, ), (1, ))
    assert_size_stride(primals_2082, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2083, (4, ), (1, ))
    assert_size_stride(primals_2084, (4, ), (1, ))
    assert_size_stride(primals_2085, (4, ), (1, ))
    assert_size_stride(primals_2086, (4, ), (1, ))
    assert_size_stride(primals_2087, (4, ), (1, ))
    assert_size_stride(primals_2088, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2089, (2, ), (1, ))
    assert_size_stride(primals_2090, (2, ), (1, ))
    assert_size_stride(primals_2091, (2, ), (1, ))
    assert_size_stride(primals_2092, (2, ), (1, ))
    assert_size_stride(primals_2093, (2, ), (1, ))
    assert_size_stride(primals_2094, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2095, (2, ), (1, ))
    assert_size_stride(primals_2096, (2, ), (1, ))
    assert_size_stride(primals_2097, (2, ), (1, ))
    assert_size_stride(primals_2098, (2, ), (1, ))
    assert_size_stride(primals_2099, (2, ), (1, ))
    assert_size_stride(primals_2100, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2101, (4, ), (1, ))
    assert_size_stride(primals_2102, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2103, (4, ), (1, ))
    assert_size_stride(primals_2104, (4, ), (1, ))
    assert_size_stride(primals_2105, (4, ), (1, ))
    assert_size_stride(primals_2106, (4, ), (1, ))
    assert_size_stride(primals_2107, (4, ), (1, ))
    assert_size_stride(primals_2108, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2109, (4, ), (1, ))
    assert_size_stride(primals_2110, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2111, (4, ), (1, ))
    assert_size_stride(primals_2112, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2113, (4, ), (1, ))
    assert_size_stride(primals_2114, (4, ), (1, ))
    assert_size_stride(primals_2115, (4, ), (1, ))
    assert_size_stride(primals_2116, (4, ), (1, ))
    assert_size_stride(primals_2117, (4, ), (1, ))
    assert_size_stride(primals_2118, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2119, (2, ), (1, ))
    assert_size_stride(primals_2120, (2, ), (1, ))
    assert_size_stride(primals_2121, (2, ), (1, ))
    assert_size_stride(primals_2122, (2, ), (1, ))
    assert_size_stride(primals_2123, (2, ), (1, ))
    assert_size_stride(primals_2124, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2125, (2, ), (1, ))
    assert_size_stride(primals_2126, (2, ), (1, ))
    assert_size_stride(primals_2127, (2, ), (1, ))
    assert_size_stride(primals_2128, (2, ), (1, ))
    assert_size_stride(primals_2129, (2, ), (1, ))
    assert_size_stride(primals_2130, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2131, (4, ), (1, ))
    assert_size_stride(primals_2132, (4, ), (1, ))
    assert_size_stride(primals_2133, (4, ), (1, ))
    assert_size_stride(primals_2134, (4, ), (1, ))
    assert_size_stride(primals_2135, (4, ), (1, ))
    assert_size_stride(primals_2136, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2137, (2, ), (1, ))
    assert_size_stride(primals_2138, (2, ), (1, ))
    assert_size_stride(primals_2139, (2, ), (1, ))
    assert_size_stride(primals_2140, (2, ), (1, ))
    assert_size_stride(primals_2141, (2, ), (1, ))
    assert_size_stride(primals_2142, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2143, (2, ), (1, ))
    assert_size_stride(primals_2144, (2, ), (1, ))
    assert_size_stride(primals_2145, (2, ), (1, ))
    assert_size_stride(primals_2146, (2, ), (1, ))
    assert_size_stride(primals_2147, (2, ), (1, ))
    assert_size_stride(primals_2148, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2149, (4, ), (1, ))
    assert_size_stride(primals_2150, (4, ), (1, ))
    assert_size_stride(primals_2151, (4, ), (1, ))
    assert_size_stride(primals_2152, (4, ), (1, ))
    assert_size_stride(primals_2153, (4, ), (1, ))
    assert_size_stride(primals_2154, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2155, (2, ), (1, ))
    assert_size_stride(primals_2156, (2, ), (1, ))
    assert_size_stride(primals_2157, (2, ), (1, ))
    assert_size_stride(primals_2158, (2, ), (1, ))
    assert_size_stride(primals_2159, (2, ), (1, ))
    assert_size_stride(primals_2160, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2161, (2, ), (1, ))
    assert_size_stride(primals_2162, (2, ), (1, ))
    assert_size_stride(primals_2163, (2, ), (1, ))
    assert_size_stride(primals_2164, (2, ), (1, ))
    assert_size_stride(primals_2165, (2, ), (1, ))
    assert_size_stride(primals_2166, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2167, (4, ), (1, ))
    assert_size_stride(primals_2168, (4, ), (1, ))
    assert_size_stride(primals_2169, (4, ), (1, ))
    assert_size_stride(primals_2170, (4, ), (1, ))
    assert_size_stride(primals_2171, (4, ), (1, ))
    assert_size_stride(primals_2172, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2173, (2, ), (1, ))
    assert_size_stride(primals_2174, (2, ), (1, ))
    assert_size_stride(primals_2175, (2, ), (1, ))
    assert_size_stride(primals_2176, (2, ), (1, ))
    assert_size_stride(primals_2177, (2, ), (1, ))
    assert_size_stride(primals_2178, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2179, (2, ), (1, ))
    assert_size_stride(primals_2180, (2, ), (1, ))
    assert_size_stride(primals_2181, (2, ), (1, ))
    assert_size_stride(primals_2182, (2, ), (1, ))
    assert_size_stride(primals_2183, (2, ), (1, ))
    assert_size_stride(primals_2184, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2185, (4, ), (1, ))
    assert_size_stride(primals_2186, (4, ), (1, ))
    assert_size_stride(primals_2187, (4, ), (1, ))
    assert_size_stride(primals_2188, (4, ), (1, ))
    assert_size_stride(primals_2189, (4, ), (1, ))
    assert_size_stride(primals_2190, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2191, (2, ), (1, ))
    assert_size_stride(primals_2192, (2, ), (1, ))
    assert_size_stride(primals_2193, (2, ), (1, ))
    assert_size_stride(primals_2194, (2, ), (1, ))
    assert_size_stride(primals_2195, (2, ), (1, ))
    assert_size_stride(primals_2196, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2197, (2, ), (1, ))
    assert_size_stride(primals_2198, (2, ), (1, ))
    assert_size_stride(primals_2199, (2, ), (1, ))
    assert_size_stride(primals_2200, (2, ), (1, ))
    assert_size_stride(primals_2201, (2, ), (1, ))
    assert_size_stride(primals_2202, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2203, (4, ), (1, ))
    assert_size_stride(primals_2204, (4, ), (1, ))
    assert_size_stride(primals_2205, (4, ), (1, ))
    assert_size_stride(primals_2206, (4, ), (1, ))
    assert_size_stride(primals_2207, (4, ), (1, ))
    assert_size_stride(primals_2208, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2209, (2, ), (1, ))
    assert_size_stride(primals_2210, (2, ), (1, ))
    assert_size_stride(primals_2211, (2, ), (1, ))
    assert_size_stride(primals_2212, (2, ), (1, ))
    assert_size_stride(primals_2213, (2, ), (1, ))
    assert_size_stride(primals_2214, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2215, (2, ), (1, ))
    assert_size_stride(primals_2216, (2, ), (1, ))
    assert_size_stride(primals_2217, (2, ), (1, ))
    assert_size_stride(primals_2218, (2, ), (1, ))
    assert_size_stride(primals_2219, (2, ), (1, ))
    assert_size_stride(primals_2220, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2221, (4, ), (1, ))
    assert_size_stride(primals_2222, (4, ), (1, ))
    assert_size_stride(primals_2223, (4, ), (1, ))
    assert_size_stride(primals_2224, (4, ), (1, ))
    assert_size_stride(primals_2225, (4, ), (1, ))
    assert_size_stride(primals_2226, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2227, (2, ), (1, ))
    assert_size_stride(primals_2228, (2, ), (1, ))
    assert_size_stride(primals_2229, (2, ), (1, ))
    assert_size_stride(primals_2230, (2, ), (1, ))
    assert_size_stride(primals_2231, (2, ), (1, ))
    assert_size_stride(primals_2232, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2233, (2, ), (1, ))
    assert_size_stride(primals_2234, (2, ), (1, ))
    assert_size_stride(primals_2235, (2, ), (1, ))
    assert_size_stride(primals_2236, (2, ), (1, ))
    assert_size_stride(primals_2237, (2, ), (1, ))
    assert_size_stride(primals_2238, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2239, (4, ), (1, ))
    assert_size_stride(primals_2240, (4, ), (1, ))
    assert_size_stride(primals_2241, (4, ), (1, ))
    assert_size_stride(primals_2242, (4, ), (1, ))
    assert_size_stride(primals_2243, (4, ), (1, ))
    assert_size_stride(primals_2244, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2245, (2, ), (1, ))
    assert_size_stride(primals_2246, (2, ), (1, ))
    assert_size_stride(primals_2247, (2, ), (1, ))
    assert_size_stride(primals_2248, (2, ), (1, ))
    assert_size_stride(primals_2249, (2, ), (1, ))
    assert_size_stride(primals_2250, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2251, (2, ), (1, ))
    assert_size_stride(primals_2252, (2, ), (1, ))
    assert_size_stride(primals_2253, (2, ), (1, ))
    assert_size_stride(primals_2254, (2, ), (1, ))
    assert_size_stride(primals_2255, (2, ), (1, ))
    assert_size_stride(primals_2256, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2257, (4, ), (1, ))
    assert_size_stride(primals_2258, (4, ), (1, ))
    assert_size_stride(primals_2259, (4, ), (1, ))
    assert_size_stride(primals_2260, (4, ), (1, ))
    assert_size_stride(primals_2261, (4, ), (1, ))
    assert_size_stride(primals_2262, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2263, (2, ), (1, ))
    assert_size_stride(primals_2264, (2, ), (1, ))
    assert_size_stride(primals_2265, (2, ), (1, ))
    assert_size_stride(primals_2266, (2, ), (1, ))
    assert_size_stride(primals_2267, (2, ), (1, ))
    assert_size_stride(primals_2268, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2269, (2, ), (1, ))
    assert_size_stride(primals_2270, (2, ), (1, ))
    assert_size_stride(primals_2271, (2, ), (1, ))
    assert_size_stride(primals_2272, (2, ), (1, ))
    assert_size_stride(primals_2273, (2, ), (1, ))
    assert_size_stride(primals_2274, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2275, (4, ), (1, ))
    assert_size_stride(primals_2276, (4, ), (1, ))
    assert_size_stride(primals_2277, (4, ), (1, ))
    assert_size_stride(primals_2278, (4, ), (1, ))
    assert_size_stride(primals_2279, (4, ), (1, ))
    assert_size_stride(primals_2280, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2281, (2, ), (1, ))
    assert_size_stride(primals_2282, (2, ), (1, ))
    assert_size_stride(primals_2283, (2, ), (1, ))
    assert_size_stride(primals_2284, (2, ), (1, ))
    assert_size_stride(primals_2285, (2, ), (1, ))
    assert_size_stride(primals_2286, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2287, (2, ), (1, ))
    assert_size_stride(primals_2288, (2, ), (1, ))
    assert_size_stride(primals_2289, (2, ), (1, ))
    assert_size_stride(primals_2290, (2, ), (1, ))
    assert_size_stride(primals_2291, (2, ), (1, ))
    assert_size_stride(primals_2292, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2293, (4, ), (1, ))
    assert_size_stride(primals_2294, (4, ), (1, ))
    assert_size_stride(primals_2295, (4, ), (1, ))
    assert_size_stride(primals_2296, (4, ), (1, ))
    assert_size_stride(primals_2297, (4, ), (1, ))
    assert_size_stride(primals_2298, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2299, (2, ), (1, ))
    assert_size_stride(primals_2300, (2, ), (1, ))
    assert_size_stride(primals_2301, (2, ), (1, ))
    assert_size_stride(primals_2302, (2, ), (1, ))
    assert_size_stride(primals_2303, (2, ), (1, ))
    assert_size_stride(primals_2304, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2305, (2, ), (1, ))
    assert_size_stride(primals_2306, (2, ), (1, ))
    assert_size_stride(primals_2307, (2, ), (1, ))
    assert_size_stride(primals_2308, (2, ), (1, ))
    assert_size_stride(primals_2309, (2, ), (1, ))
    assert_size_stride(primals_2310, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2311, (4, ), (1, ))
    assert_size_stride(primals_2312, (4, ), (1, ))
    assert_size_stride(primals_2313, (4, ), (1, ))
    assert_size_stride(primals_2314, (4, ), (1, ))
    assert_size_stride(primals_2315, (4, ), (1, ))
    assert_size_stride(primals_2316, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2317, (2, ), (1, ))
    assert_size_stride(primals_2318, (2, ), (1, ))
    assert_size_stride(primals_2319, (2, ), (1, ))
    assert_size_stride(primals_2320, (2, ), (1, ))
    assert_size_stride(primals_2321, (2, ), (1, ))
    assert_size_stride(primals_2322, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2323, (2, ), (1, ))
    assert_size_stride(primals_2324, (2, ), (1, ))
    assert_size_stride(primals_2325, (2, ), (1, ))
    assert_size_stride(primals_2326, (2, ), (1, ))
    assert_size_stride(primals_2327, (2, ), (1, ))
    assert_size_stride(primals_2328, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2329, (4, ), (1, ))
    assert_size_stride(primals_2330, (4, ), (1, ))
    assert_size_stride(primals_2331, (4, ), (1, ))
    assert_size_stride(primals_2332, (4, ), (1, ))
    assert_size_stride(primals_2333, (4, ), (1, ))
    assert_size_stride(primals_2334, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2335, (2, ), (1, ))
    assert_size_stride(primals_2336, (2, ), (1, ))
    assert_size_stride(primals_2337, (2, ), (1, ))
    assert_size_stride(primals_2338, (2, ), (1, ))
    assert_size_stride(primals_2339, (2, ), (1, ))
    assert_size_stride(primals_2340, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2341, (2, ), (1, ))
    assert_size_stride(primals_2342, (2, ), (1, ))
    assert_size_stride(primals_2343, (2, ), (1, ))
    assert_size_stride(primals_2344, (2, ), (1, ))
    assert_size_stride(primals_2345, (2, ), (1, ))
    assert_size_stride(primals_2346, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2347, (4, ), (1, ))
    assert_size_stride(primals_2348, (4, ), (1, ))
    assert_size_stride(primals_2349, (4, ), (1, ))
    assert_size_stride(primals_2350, (4, ), (1, ))
    assert_size_stride(primals_2351, (4, ), (1, ))
    assert_size_stride(primals_2352, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2353, (2, ), (1, ))
    assert_size_stride(primals_2354, (2, ), (1, ))
    assert_size_stride(primals_2355, (2, ), (1, ))
    assert_size_stride(primals_2356, (2, ), (1, ))
    assert_size_stride(primals_2357, (2, ), (1, ))
    assert_size_stride(primals_2358, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2359, (2, ), (1, ))
    assert_size_stride(primals_2360, (2, ), (1, ))
    assert_size_stride(primals_2361, (2, ), (1, ))
    assert_size_stride(primals_2362, (2, ), (1, ))
    assert_size_stride(primals_2363, (2, ), (1, ))
    assert_size_stride(primals_2364, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2365, (4, ), (1, ))
    assert_size_stride(primals_2366, (4, ), (1, ))
    assert_size_stride(primals_2367, (4, ), (1, ))
    assert_size_stride(primals_2368, (4, ), (1, ))
    assert_size_stride(primals_2369, (4, ), (1, ))
    assert_size_stride(primals_2370, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2371, (2, ), (1, ))
    assert_size_stride(primals_2372, (2, ), (1, ))
    assert_size_stride(primals_2373, (2, ), (1, ))
    assert_size_stride(primals_2374, (2, ), (1, ))
    assert_size_stride(primals_2375, (2, ), (1, ))
    assert_size_stride(primals_2376, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2377, (2, ), (1, ))
    assert_size_stride(primals_2378, (2, ), (1, ))
    assert_size_stride(primals_2379, (2, ), (1, ))
    assert_size_stride(primals_2380, (2, ), (1, ))
    assert_size_stride(primals_2381, (2, ), (1, ))
    assert_size_stride(primals_2382, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2383, (4, ), (1, ))
    assert_size_stride(primals_2384, (4, ), (1, ))
    assert_size_stride(primals_2385, (4, ), (1, ))
    assert_size_stride(primals_2386, (4, ), (1, ))
    assert_size_stride(primals_2387, (4, ), (1, ))
    assert_size_stride(primals_2388, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2389, (2, ), (1, ))
    assert_size_stride(primals_2390, (2, ), (1, ))
    assert_size_stride(primals_2391, (2, ), (1, ))
    assert_size_stride(primals_2392, (2, ), (1, ))
    assert_size_stride(primals_2393, (2, ), (1, ))
    assert_size_stride(primals_2394, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2395, (2, ), (1, ))
    assert_size_stride(primals_2396, (2, ), (1, ))
    assert_size_stride(primals_2397, (2, ), (1, ))
    assert_size_stride(primals_2398, (2, ), (1, ))
    assert_size_stride(primals_2399, (2, ), (1, ))
    assert_size_stride(primals_2400, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2401, (4, ), (1, ))
    assert_size_stride(primals_2402, (4, ), (1, ))
    assert_size_stride(primals_2403, (4, ), (1, ))
    assert_size_stride(primals_2404, (4, ), (1, ))
    assert_size_stride(primals_2405, (4, ), (1, ))
    assert_size_stride(primals_2406, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2407, (2, ), (1, ))
    assert_size_stride(primals_2408, (2, ), (1, ))
    assert_size_stride(primals_2409, (2, ), (1, ))
    assert_size_stride(primals_2410, (2, ), (1, ))
    assert_size_stride(primals_2411, (2, ), (1, ))
    assert_size_stride(primals_2412, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2413, (2, ), (1, ))
    assert_size_stride(primals_2414, (2, ), (1, ))
    assert_size_stride(primals_2415, (2, ), (1, ))
    assert_size_stride(primals_2416, (2, ), (1, ))
    assert_size_stride(primals_2417, (2, ), (1, ))
    assert_size_stride(primals_2418, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2419, (4, ), (1, ))
    assert_size_stride(primals_2420, (4, ), (1, ))
    assert_size_stride(primals_2421, (4, ), (1, ))
    assert_size_stride(primals_2422, (4, ), (1, ))
    assert_size_stride(primals_2423, (4, ), (1, ))
    assert_size_stride(primals_2424, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2425, (2, ), (1, ))
    assert_size_stride(primals_2426, (2, ), (1, ))
    assert_size_stride(primals_2427, (2, ), (1, ))
    assert_size_stride(primals_2428, (2, ), (1, ))
    assert_size_stride(primals_2429, (2, ), (1, ))
    assert_size_stride(primals_2430, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2431, (2, ), (1, ))
    assert_size_stride(primals_2432, (2, ), (1, ))
    assert_size_stride(primals_2433, (2, ), (1, ))
    assert_size_stride(primals_2434, (2, ), (1, ))
    assert_size_stride(primals_2435, (2, ), (1, ))
    assert_size_stride(primals_2436, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2437, (4, ), (1, ))
    assert_size_stride(primals_2438, (4, ), (1, ))
    assert_size_stride(primals_2439, (4, ), (1, ))
    assert_size_stride(primals_2440, (4, ), (1, ))
    assert_size_stride(primals_2441, (4, ), (1, ))
    assert_size_stride(primals_2442, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2443, (2, ), (1, ))
    assert_size_stride(primals_2444, (2, ), (1, ))
    assert_size_stride(primals_2445, (2, ), (1, ))
    assert_size_stride(primals_2446, (2, ), (1, ))
    assert_size_stride(primals_2447, (2, ), (1, ))
    assert_size_stride(primals_2448, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2449, (2, ), (1, ))
    assert_size_stride(primals_2450, (2, ), (1, ))
    assert_size_stride(primals_2451, (2, ), (1, ))
    assert_size_stride(primals_2452, (2, ), (1, ))
    assert_size_stride(primals_2453, (2, ), (1, ))
    assert_size_stride(primals_2454, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2455, (4, ), (1, ))
    assert_size_stride(primals_2456, (4, ), (1, ))
    assert_size_stride(primals_2457, (4, ), (1, ))
    assert_size_stride(primals_2458, (4, ), (1, ))
    assert_size_stride(primals_2459, (4, ), (1, ))
    assert_size_stride(primals_2460, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2461, (2, ), (1, ))
    assert_size_stride(primals_2462, (2, ), (1, ))
    assert_size_stride(primals_2463, (2, ), (1, ))
    assert_size_stride(primals_2464, (2, ), (1, ))
    assert_size_stride(primals_2465, (2, ), (1, ))
    assert_size_stride(primals_2466, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2467, (2, ), (1, ))
    assert_size_stride(primals_2468, (2, ), (1, ))
    assert_size_stride(primals_2469, (2, ), (1, ))
    assert_size_stride(primals_2470, (2, ), (1, ))
    assert_size_stride(primals_2471, (2, ), (1, ))
    assert_size_stride(primals_2472, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2473, (4, ), (1, ))
    assert_size_stride(primals_2474, (4, ), (1, ))
    assert_size_stride(primals_2475, (4, ), (1, ))
    assert_size_stride(primals_2476, (4, ), (1, ))
    assert_size_stride(primals_2477, (4, ), (1, ))
    assert_size_stride(primals_2478, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2479, (2, ), (1, ))
    assert_size_stride(primals_2480, (2, ), (1, ))
    assert_size_stride(primals_2481, (2, ), (1, ))
    assert_size_stride(primals_2482, (2, ), (1, ))
    assert_size_stride(primals_2483, (2, ), (1, ))
    assert_size_stride(primals_2484, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2485, (2, ), (1, ))
    assert_size_stride(primals_2486, (2, ), (1, ))
    assert_size_stride(primals_2487, (2, ), (1, ))
    assert_size_stride(primals_2488, (2, ), (1, ))
    assert_size_stride(primals_2489, (2, ), (1, ))
    assert_size_stride(primals_2490, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2491, (4, ), (1, ))
    assert_size_stride(primals_2492, (4, ), (1, ))
    assert_size_stride(primals_2493, (4, ), (1, ))
    assert_size_stride(primals_2494, (4, ), (1, ))
    assert_size_stride(primals_2495, (4, ), (1, ))
    assert_size_stride(primals_2496, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2497, (2, ), (1, ))
    assert_size_stride(primals_2498, (2, ), (1, ))
    assert_size_stride(primals_2499, (2, ), (1, ))
    assert_size_stride(primals_2500, (2, ), (1, ))
    assert_size_stride(primals_2501, (2, ), (1, ))
    assert_size_stride(primals_2502, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2503, (2, ), (1, ))
    assert_size_stride(primals_2504, (2, ), (1, ))
    assert_size_stride(primals_2505, (2, ), (1, ))
    assert_size_stride(primals_2506, (2, ), (1, ))
    assert_size_stride(primals_2507, (2, ), (1, ))
    assert_size_stride(primals_2508, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2509, (4, ), (1, ))
    assert_size_stride(primals_2510, (4, ), (1, ))
    assert_size_stride(primals_2511, (4, ), (1, ))
    assert_size_stride(primals_2512, (4, ), (1, ))
    assert_size_stride(primals_2513, (4, ), (1, ))
    assert_size_stride(primals_2514, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2515, (2, ), (1, ))
    assert_size_stride(primals_2516, (2, ), (1, ))
    assert_size_stride(primals_2517, (2, ), (1, ))
    assert_size_stride(primals_2518, (2, ), (1, ))
    assert_size_stride(primals_2519, (2, ), (1, ))
    assert_size_stride(primals_2520, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2521, (2, ), (1, ))
    assert_size_stride(primals_2522, (2, ), (1, ))
    assert_size_stride(primals_2523, (2, ), (1, ))
    assert_size_stride(primals_2524, (2, ), (1, ))
    assert_size_stride(primals_2525, (2, ), (1, ))
    assert_size_stride(primals_2526, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2527, (4, ), (1, ))
    assert_size_stride(primals_2528, (4, ), (1, ))
    assert_size_stride(primals_2529, (4, ), (1, ))
    assert_size_stride(primals_2530, (4, ), (1, ))
    assert_size_stride(primals_2531, (4, ), (1, ))
    assert_size_stride(primals_2532, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2533, (2, ), (1, ))
    assert_size_stride(primals_2534, (2, ), (1, ))
    assert_size_stride(primals_2535, (2, ), (1, ))
    assert_size_stride(primals_2536, (2, ), (1, ))
    assert_size_stride(primals_2537, (2, ), (1, ))
    assert_size_stride(primals_2538, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2539, (2, ), (1, ))
    assert_size_stride(primals_2540, (2, ), (1, ))
    assert_size_stride(primals_2541, (2, ), (1, ))
    assert_size_stride(primals_2542, (2, ), (1, ))
    assert_size_stride(primals_2543, (2, ), (1, ))
    assert_size_stride(primals_2544, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2545, (4, ), (1, ))
    assert_size_stride(primals_2546, (4, ), (1, ))
    assert_size_stride(primals_2547, (4, ), (1, ))
    assert_size_stride(primals_2548, (4, ), (1, ))
    assert_size_stride(primals_2549, (4, ), (1, ))
    assert_size_stride(primals_2550, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2551, (2, ), (1, ))
    assert_size_stride(primals_2552, (2, ), (1, ))
    assert_size_stride(primals_2553, (2, ), (1, ))
    assert_size_stride(primals_2554, (2, ), (1, ))
    assert_size_stride(primals_2555, (2, ), (1, ))
    assert_size_stride(primals_2556, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2557, (2, ), (1, ))
    assert_size_stride(primals_2558, (2, ), (1, ))
    assert_size_stride(primals_2559, (2, ), (1, ))
    assert_size_stride(primals_2560, (2, ), (1, ))
    assert_size_stride(primals_2561, (2, ), (1, ))
    assert_size_stride(primals_2562, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2563, (4, ), (1, ))
    assert_size_stride(primals_2564, (4, ), (1, ))
    assert_size_stride(primals_2565, (4, ), (1, ))
    assert_size_stride(primals_2566, (4, ), (1, ))
    assert_size_stride(primals_2567, (4, ), (1, ))
    assert_size_stride(primals_2568, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2569, (2, ), (1, ))
    assert_size_stride(primals_2570, (2, ), (1, ))
    assert_size_stride(primals_2571, (2, ), (1, ))
    assert_size_stride(primals_2572, (2, ), (1, ))
    assert_size_stride(primals_2573, (2, ), (1, ))
    assert_size_stride(primals_2574, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2575, (2, ), (1, ))
    assert_size_stride(primals_2576, (2, ), (1, ))
    assert_size_stride(primals_2577, (2, ), (1, ))
    assert_size_stride(primals_2578, (2, ), (1, ))
    assert_size_stride(primals_2579, (2, ), (1, ))
    assert_size_stride(primals_2580, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2581, (4, ), (1, ))
    assert_size_stride(primals_2582, (4, ), (1, ))
    assert_size_stride(primals_2583, (4, ), (1, ))
    assert_size_stride(primals_2584, (4, ), (1, ))
    assert_size_stride(primals_2585, (4, ), (1, ))
    assert_size_stride(primals_2586, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2587, (2, ), (1, ))
    assert_size_stride(primals_2588, (2, ), (1, ))
    assert_size_stride(primals_2589, (2, ), (1, ))
    assert_size_stride(primals_2590, (2, ), (1, ))
    assert_size_stride(primals_2591, (2, ), (1, ))
    assert_size_stride(primals_2592, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2593, (2, ), (1, ))
    assert_size_stride(primals_2594, (2, ), (1, ))
    assert_size_stride(primals_2595, (2, ), (1, ))
    assert_size_stride(primals_2596, (2, ), (1, ))
    assert_size_stride(primals_2597, (2, ), (1, ))
    assert_size_stride(primals_2598, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2599, (4, ), (1, ))
    assert_size_stride(primals_2600, (4, ), (1, ))
    assert_size_stride(primals_2601, (4, ), (1, ))
    assert_size_stride(primals_2602, (4, ), (1, ))
    assert_size_stride(primals_2603, (4, ), (1, ))
    assert_size_stride(primals_2604, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2605, (2, ), (1, ))
    assert_size_stride(primals_2606, (2, ), (1, ))
    assert_size_stride(primals_2607, (2, ), (1, ))
    assert_size_stride(primals_2608, (2, ), (1, ))
    assert_size_stride(primals_2609, (2, ), (1, ))
    assert_size_stride(primals_2610, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2611, (2, ), (1, ))
    assert_size_stride(primals_2612, (2, ), (1, ))
    assert_size_stride(primals_2613, (2, ), (1, ))
    assert_size_stride(primals_2614, (2, ), (1, ))
    assert_size_stride(primals_2615, (2, ), (1, ))
    assert_size_stride(primals_2616, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2617, (4, ), (1, ))
    assert_size_stride(primals_2618, (4, ), (1, ))
    assert_size_stride(primals_2619, (4, ), (1, ))
    assert_size_stride(primals_2620, (4, ), (1, ))
    assert_size_stride(primals_2621, (4, ), (1, ))
    assert_size_stride(primals_2622, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2623, (2, ), (1, ))
    assert_size_stride(primals_2624, (2, ), (1, ))
    assert_size_stride(primals_2625, (2, ), (1, ))
    assert_size_stride(primals_2626, (2, ), (1, ))
    assert_size_stride(primals_2627, (2, ), (1, ))
    assert_size_stride(primals_2628, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2629, (2, ), (1, ))
    assert_size_stride(primals_2630, (2, ), (1, ))
    assert_size_stride(primals_2631, (2, ), (1, ))
    assert_size_stride(primals_2632, (2, ), (1, ))
    assert_size_stride(primals_2633, (2, ), (1, ))
    assert_size_stride(primals_2634, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2635, (4, ), (1, ))
    assert_size_stride(primals_2636, (4, ), (1, ))
    assert_size_stride(primals_2637, (4, ), (1, ))
    assert_size_stride(primals_2638, (4, ), (1, ))
    assert_size_stride(primals_2639, (4, ), (1, ))
    assert_size_stride(primals_2640, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2641, (2, ), (1, ))
    assert_size_stride(primals_2642, (2, ), (1, ))
    assert_size_stride(primals_2643, (2, ), (1, ))
    assert_size_stride(primals_2644, (2, ), (1, ))
    assert_size_stride(primals_2645, (2, ), (1, ))
    assert_size_stride(primals_2646, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2647, (2, ), (1, ))
    assert_size_stride(primals_2648, (2, ), (1, ))
    assert_size_stride(primals_2649, (2, ), (1, ))
    assert_size_stride(primals_2650, (2, ), (1, ))
    assert_size_stride(primals_2651, (2, ), (1, ))
    assert_size_stride(primals_2652, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2653, (4, ), (1, ))
    assert_size_stride(primals_2654, (4, ), (1, ))
    assert_size_stride(primals_2655, (4, ), (1, ))
    assert_size_stride(primals_2656, (4, ), (1, ))
    assert_size_stride(primals_2657, (4, ), (1, ))
    assert_size_stride(primals_2658, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2659, (2, ), (1, ))
    assert_size_stride(primals_2660, (2, ), (1, ))
    assert_size_stride(primals_2661, (2, ), (1, ))
    assert_size_stride(primals_2662, (2, ), (1, ))
    assert_size_stride(primals_2663, (2, ), (1, ))
    assert_size_stride(primals_2664, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2665, (2, ), (1, ))
    assert_size_stride(primals_2666, (2, ), (1, ))
    assert_size_stride(primals_2667, (2, ), (1, ))
    assert_size_stride(primals_2668, (2, ), (1, ))
    assert_size_stride(primals_2669, (2, ), (1, ))
    assert_size_stride(primals_2670, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2671, (4, ), (1, ))
    assert_size_stride(primals_2672, (4, ), (1, ))
    assert_size_stride(primals_2673, (4, ), (1, ))
    assert_size_stride(primals_2674, (4, ), (1, ))
    assert_size_stride(primals_2675, (4, ), (1, ))
    assert_size_stride(primals_2676, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2677, (2, ), (1, ))
    assert_size_stride(primals_2678, (2, ), (1, ))
    assert_size_stride(primals_2679, (2, ), (1, ))
    assert_size_stride(primals_2680, (2, ), (1, ))
    assert_size_stride(primals_2681, (2, ), (1, ))
    assert_size_stride(primals_2682, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2683, (2, ), (1, ))
    assert_size_stride(primals_2684, (2, ), (1, ))
    assert_size_stride(primals_2685, (2, ), (1, ))
    assert_size_stride(primals_2686, (2, ), (1, ))
    assert_size_stride(primals_2687, (2, ), (1, ))
    assert_size_stride(primals_2688, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2689, (4, ), (1, ))
    assert_size_stride(primals_2690, (4, ), (1, ))
    assert_size_stride(primals_2691, (4, ), (1, ))
    assert_size_stride(primals_2692, (4, ), (1, ))
    assert_size_stride(primals_2693, (4, ), (1, ))
    assert_size_stride(primals_2694, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2695, (2, ), (1, ))
    assert_size_stride(primals_2696, (2, ), (1, ))
    assert_size_stride(primals_2697, (2, ), (1, ))
    assert_size_stride(primals_2698, (2, ), (1, ))
    assert_size_stride(primals_2699, (2, ), (1, ))
    assert_size_stride(primals_2700, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2701, (2, ), (1, ))
    assert_size_stride(primals_2702, (2, ), (1, ))
    assert_size_stride(primals_2703, (2, ), (1, ))
    assert_size_stride(primals_2704, (2, ), (1, ))
    assert_size_stride(primals_2705, (2, ), (1, ))
    assert_size_stride(primals_2706, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2707, (4, ), (1, ))
    assert_size_stride(primals_2708, (4, ), (1, ))
    assert_size_stride(primals_2709, (4, ), (1, ))
    assert_size_stride(primals_2710, (4, ), (1, ))
    assert_size_stride(primals_2711, (4, ), (1, ))
    assert_size_stride(primals_2712, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2713, (2, ), (1, ))
    assert_size_stride(primals_2714, (2, ), (1, ))
    assert_size_stride(primals_2715, (2, ), (1, ))
    assert_size_stride(primals_2716, (2, ), (1, ))
    assert_size_stride(primals_2717, (2, ), (1, ))
    assert_size_stride(primals_2718, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2719, (2, ), (1, ))
    assert_size_stride(primals_2720, (2, ), (1, ))
    assert_size_stride(primals_2721, (2, ), (1, ))
    assert_size_stride(primals_2722, (2, ), (1, ))
    assert_size_stride(primals_2723, (2, ), (1, ))
    assert_size_stride(primals_2724, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2725, (4, ), (1, ))
    assert_size_stride(primals_2726, (4, ), (1, ))
    assert_size_stride(primals_2727, (4, ), (1, ))
    assert_size_stride(primals_2728, (4, ), (1, ))
    assert_size_stride(primals_2729, (4, ), (1, ))
    assert_size_stride(primals_2730, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2731, (2, ), (1, ))
    assert_size_stride(primals_2732, (2, ), (1, ))
    assert_size_stride(primals_2733, (2, ), (1, ))
    assert_size_stride(primals_2734, (2, ), (1, ))
    assert_size_stride(primals_2735, (2, ), (1, ))
    assert_size_stride(primals_2736, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2737, (2, ), (1, ))
    assert_size_stride(primals_2738, (2, ), (1, ))
    assert_size_stride(primals_2739, (2, ), (1, ))
    assert_size_stride(primals_2740, (2, ), (1, ))
    assert_size_stride(primals_2741, (2, ), (1, ))
    assert_size_stride(primals_2742, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2743, (4, ), (1, ))
    assert_size_stride(primals_2744, (4, ), (1, ))
    assert_size_stride(primals_2745, (4, ), (1, ))
    assert_size_stride(primals_2746, (4, ), (1, ))
    assert_size_stride(primals_2747, (4, ), (1, ))
    assert_size_stride(primals_2748, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2749, (2, ), (1, ))
    assert_size_stride(primals_2750, (2, ), (1, ))
    assert_size_stride(primals_2751, (2, ), (1, ))
    assert_size_stride(primals_2752, (2, ), (1, ))
    assert_size_stride(primals_2753, (2, ), (1, ))
    assert_size_stride(primals_2754, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2755, (2, ), (1, ))
    assert_size_stride(primals_2756, (2, ), (1, ))
    assert_size_stride(primals_2757, (2, ), (1, ))
    assert_size_stride(primals_2758, (2, ), (1, ))
    assert_size_stride(primals_2759, (2, ), (1, ))
    assert_size_stride(primals_2760, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2761, (4, ), (1, ))
    assert_size_stride(primals_2762, (4, ), (1, ))
    assert_size_stride(primals_2763, (4, ), (1, ))
    assert_size_stride(primals_2764, (4, ), (1, ))
    assert_size_stride(primals_2765, (4, ), (1, ))
    assert_size_stride(primals_2766, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2767, (2, ), (1, ))
    assert_size_stride(primals_2768, (2, ), (1, ))
    assert_size_stride(primals_2769, (2, ), (1, ))
    assert_size_stride(primals_2770, (2, ), (1, ))
    assert_size_stride(primals_2771, (2, ), (1, ))
    assert_size_stride(primals_2772, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2773, (2, ), (1, ))
    assert_size_stride(primals_2774, (2, ), (1, ))
    assert_size_stride(primals_2775, (2, ), (1, ))
    assert_size_stride(primals_2776, (2, ), (1, ))
    assert_size_stride(primals_2777, (2, ), (1, ))
    assert_size_stride(primals_2778, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2779, (4, ), (1, ))
    assert_size_stride(primals_2780, (4, ), (1, ))
    assert_size_stride(primals_2781, (4, ), (1, ))
    assert_size_stride(primals_2782, (4, ), (1, ))
    assert_size_stride(primals_2783, (4, ), (1, ))
    assert_size_stride(primals_2784, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2785, (2, ), (1, ))
    assert_size_stride(primals_2786, (2, ), (1, ))
    assert_size_stride(primals_2787, (2, ), (1, ))
    assert_size_stride(primals_2788, (2, ), (1, ))
    assert_size_stride(primals_2789, (2, ), (1, ))
    assert_size_stride(primals_2790, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2791, (2, ), (1, ))
    assert_size_stride(primals_2792, (2, ), (1, ))
    assert_size_stride(primals_2793, (2, ), (1, ))
    assert_size_stride(primals_2794, (2, ), (1, ))
    assert_size_stride(primals_2795, (2, ), (1, ))
    assert_size_stride(primals_2796, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2797, (4, ), (1, ))
    assert_size_stride(primals_2798, (4, ), (1, ))
    assert_size_stride(primals_2799, (4, ), (1, ))
    assert_size_stride(primals_2800, (4, ), (1, ))
    assert_size_stride(primals_2801, (4, ), (1, ))
    assert_size_stride(primals_2802, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2803, (2, ), (1, ))
    assert_size_stride(primals_2804, (2, ), (1, ))
    assert_size_stride(primals_2805, (2, ), (1, ))
    assert_size_stride(primals_2806, (2, ), (1, ))
    assert_size_stride(primals_2807, (2, ), (1, ))
    assert_size_stride(primals_2808, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2809, (2, ), (1, ))
    assert_size_stride(primals_2810, (2, ), (1, ))
    assert_size_stride(primals_2811, (2, ), (1, ))
    assert_size_stride(primals_2812, (2, ), (1, ))
    assert_size_stride(primals_2813, (2, ), (1, ))
    assert_size_stride(primals_2814, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2815, (4, ), (1, ))
    assert_size_stride(primals_2816, (4, ), (1, ))
    assert_size_stride(primals_2817, (4, ), (1, ))
    assert_size_stride(primals_2818, (4, ), (1, ))
    assert_size_stride(primals_2819, (4, ), (1, ))
    assert_size_stride(primals_2820, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2821, (2, ), (1, ))
    assert_size_stride(primals_2822, (2, ), (1, ))
    assert_size_stride(primals_2823, (2, ), (1, ))
    assert_size_stride(primals_2824, (2, ), (1, ))
    assert_size_stride(primals_2825, (2, ), (1, ))
    assert_size_stride(primals_2826, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2827, (2, ), (1, ))
    assert_size_stride(primals_2828, (2, ), (1, ))
    assert_size_stride(primals_2829, (2, ), (1, ))
    assert_size_stride(primals_2830, (2, ), (1, ))
    assert_size_stride(primals_2831, (2, ), (1, ))
    assert_size_stride(primals_2832, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2833, (4, ), (1, ))
    assert_size_stride(primals_2834, (4, ), (1, ))
    assert_size_stride(primals_2835, (4, ), (1, ))
    assert_size_stride(primals_2836, (4, ), (1, ))
    assert_size_stride(primals_2837, (4, ), (1, ))
    assert_size_stride(primals_2838, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2839, (2, ), (1, ))
    assert_size_stride(primals_2840, (2, ), (1, ))
    assert_size_stride(primals_2841, (2, ), (1, ))
    assert_size_stride(primals_2842, (2, ), (1, ))
    assert_size_stride(primals_2843, (2, ), (1, ))
    assert_size_stride(primals_2844, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2845, (2, ), (1, ))
    assert_size_stride(primals_2846, (2, ), (1, ))
    assert_size_stride(primals_2847, (2, ), (1, ))
    assert_size_stride(primals_2848, (2, ), (1, ))
    assert_size_stride(primals_2849, (2, ), (1, ))
    assert_size_stride(primals_2850, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2851, (4, ), (1, ))
    assert_size_stride(primals_2852, (4, ), (1, ))
    assert_size_stride(primals_2853, (4, ), (1, ))
    assert_size_stride(primals_2854, (4, ), (1, ))
    assert_size_stride(primals_2855, (4, ), (1, ))
    assert_size_stride(primals_2856, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2857, (2, ), (1, ))
    assert_size_stride(primals_2858, (2, ), (1, ))
    assert_size_stride(primals_2859, (2, ), (1, ))
    assert_size_stride(primals_2860, (2, ), (1, ))
    assert_size_stride(primals_2861, (2, ), (1, ))
    assert_size_stride(primals_2862, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2863, (2, ), (1, ))
    assert_size_stride(primals_2864, (2, ), (1, ))
    assert_size_stride(primals_2865, (2, ), (1, ))
    assert_size_stride(primals_2866, (2, ), (1, ))
    assert_size_stride(primals_2867, (2, ), (1, ))
    assert_size_stride(primals_2868, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2869, (4, ), (1, ))
    assert_size_stride(primals_2870, (4, ), (1, ))
    assert_size_stride(primals_2871, (4, ), (1, ))
    assert_size_stride(primals_2872, (4, ), (1, ))
    assert_size_stride(primals_2873, (4, ), (1, ))
    assert_size_stride(primals_2874, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2875, (2, ), (1, ))
    assert_size_stride(primals_2876, (2, ), (1, ))
    assert_size_stride(primals_2877, (2, ), (1, ))
    assert_size_stride(primals_2878, (2, ), (1, ))
    assert_size_stride(primals_2879, (2, ), (1, ))
    assert_size_stride(primals_2880, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2881, (2, ), (1, ))
    assert_size_stride(primals_2882, (2, ), (1, ))
    assert_size_stride(primals_2883, (2, ), (1, ))
    assert_size_stride(primals_2884, (2, ), (1, ))
    assert_size_stride(primals_2885, (2, ), (1, ))
    assert_size_stride(primals_2886, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2887, (4, ), (1, ))
    assert_size_stride(primals_2888, (4, ), (1, ))
    assert_size_stride(primals_2889, (4, ), (1, ))
    assert_size_stride(primals_2890, (4, ), (1, ))
    assert_size_stride(primals_2891, (4, ), (1, ))
    assert_size_stride(primals_2892, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2893, (2, ), (1, ))
    assert_size_stride(primals_2894, (2, ), (1, ))
    assert_size_stride(primals_2895, (2, ), (1, ))
    assert_size_stride(primals_2896, (2, ), (1, ))
    assert_size_stride(primals_2897, (2, ), (1, ))
    assert_size_stride(primals_2898, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2899, (2, ), (1, ))
    assert_size_stride(primals_2900, (2, ), (1, ))
    assert_size_stride(primals_2901, (2, ), (1, ))
    assert_size_stride(primals_2902, (2, ), (1, ))
    assert_size_stride(primals_2903, (2, ), (1, ))
    assert_size_stride(primals_2904, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2905, (4, ), (1, ))
    assert_size_stride(primals_2906, (4, ), (1, ))
    assert_size_stride(primals_2907, (4, ), (1, ))
    assert_size_stride(primals_2908, (4, ), (1, ))
    assert_size_stride(primals_2909, (4, ), (1, ))
    assert_size_stride(primals_2910, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2911, (2, ), (1, ))
    assert_size_stride(primals_2912, (2, ), (1, ))
    assert_size_stride(primals_2913, (2, ), (1, ))
    assert_size_stride(primals_2914, (2, ), (1, ))
    assert_size_stride(primals_2915, (2, ), (1, ))
    assert_size_stride(primals_2916, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2917, (2, ), (1, ))
    assert_size_stride(primals_2918, (2, ), (1, ))
    assert_size_stride(primals_2919, (2, ), (1, ))
    assert_size_stride(primals_2920, (2, ), (1, ))
    assert_size_stride(primals_2921, (2, ), (1, ))
    assert_size_stride(primals_2922, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2923, (4, ), (1, ))
    assert_size_stride(primals_2924, (4, ), (1, ))
    assert_size_stride(primals_2925, (4, ), (1, ))
    assert_size_stride(primals_2926, (4, ), (1, ))
    assert_size_stride(primals_2927, (4, ), (1, ))
    assert_size_stride(primals_2928, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2929, (2, ), (1, ))
    assert_size_stride(primals_2930, (2, ), (1, ))
    assert_size_stride(primals_2931, (2, ), (1, ))
    assert_size_stride(primals_2932, (2, ), (1, ))
    assert_size_stride(primals_2933, (2, ), (1, ))
    assert_size_stride(primals_2934, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2935, (2, ), (1, ))
    assert_size_stride(primals_2936, (2, ), (1, ))
    assert_size_stride(primals_2937, (2, ), (1, ))
    assert_size_stride(primals_2938, (2, ), (1, ))
    assert_size_stride(primals_2939, (2, ), (1, ))
    assert_size_stride(primals_2940, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2941, (4, ), (1, ))
    assert_size_stride(primals_2942, (4, ), (1, ))
    assert_size_stride(primals_2943, (4, ), (1, ))
    assert_size_stride(primals_2944, (4, ), (1, ))
    assert_size_stride(primals_2945, (4, ), (1, ))
    assert_size_stride(primals_2946, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2947, (2, ), (1, ))
    assert_size_stride(primals_2948, (2, ), (1, ))
    assert_size_stride(primals_2949, (2, ), (1, ))
    assert_size_stride(primals_2950, (2, ), (1, ))
    assert_size_stride(primals_2951, (2, ), (1, ))
    assert_size_stride(primals_2952, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2953, (2, ), (1, ))
    assert_size_stride(primals_2954, (2, ), (1, ))
    assert_size_stride(primals_2955, (2, ), (1, ))
    assert_size_stride(primals_2956, (2, ), (1, ))
    assert_size_stride(primals_2957, (2, ), (1, ))
    assert_size_stride(primals_2958, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2959, (4, ), (1, ))
    assert_size_stride(primals_2960, (4, ), (1, ))
    assert_size_stride(primals_2961, (4, ), (1, ))
    assert_size_stride(primals_2962, (4, ), (1, ))
    assert_size_stride(primals_2963, (4, ), (1, ))
    assert_size_stride(primals_2964, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2965, (2, ), (1, ))
    assert_size_stride(primals_2966, (2, ), (1, ))
    assert_size_stride(primals_2967, (2, ), (1, ))
    assert_size_stride(primals_2968, (2, ), (1, ))
    assert_size_stride(primals_2969, (2, ), (1, ))
    assert_size_stride(primals_2970, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2971, (2, ), (1, ))
    assert_size_stride(primals_2972, (2, ), (1, ))
    assert_size_stride(primals_2973, (2, ), (1, ))
    assert_size_stride(primals_2974, (2, ), (1, ))
    assert_size_stride(primals_2975, (2, ), (1, ))
    assert_size_stride(primals_2976, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2977, (4, ), (1, ))
    assert_size_stride(primals_2978, (4, ), (1, ))
    assert_size_stride(primals_2979, (4, ), (1, ))
    assert_size_stride(primals_2980, (4, ), (1, ))
    assert_size_stride(primals_2981, (4, ), (1, ))
    assert_size_stride(primals_2982, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_2983, (2, ), (1, ))
    assert_size_stride(primals_2984, (2, ), (1, ))
    assert_size_stride(primals_2985, (2, ), (1, ))
    assert_size_stride(primals_2986, (2, ), (1, ))
    assert_size_stride(primals_2987, (2, ), (1, ))
    assert_size_stride(primals_2988, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_2989, (2, ), (1, ))
    assert_size_stride(primals_2990, (2, ), (1, ))
    assert_size_stride(primals_2991, (2, ), (1, ))
    assert_size_stride(primals_2992, (2, ), (1, ))
    assert_size_stride(primals_2993, (2, ), (1, ))
    assert_size_stride(primals_2994, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_2995, (4, ), (1, ))
    assert_size_stride(primals_2996, (4, ), (1, ))
    assert_size_stride(primals_2997, (4, ), (1, ))
    assert_size_stride(primals_2998, (4, ), (1, ))
    assert_size_stride(primals_2999, (4, ), (1, ))
    assert_size_stride(primals_3000, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3001, (2, ), (1, ))
    assert_size_stride(primals_3002, (2, ), (1, ))
    assert_size_stride(primals_3003, (2, ), (1, ))
    assert_size_stride(primals_3004, (2, ), (1, ))
    assert_size_stride(primals_3005, (2, ), (1, ))
    assert_size_stride(primals_3006, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3007, (2, ), (1, ))
    assert_size_stride(primals_3008, (2, ), (1, ))
    assert_size_stride(primals_3009, (2, ), (1, ))
    assert_size_stride(primals_3010, (2, ), (1, ))
    assert_size_stride(primals_3011, (2, ), (1, ))
    assert_size_stride(primals_3012, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3013, (4, ), (1, ))
    assert_size_stride(primals_3014, (4, ), (1, ))
    assert_size_stride(primals_3015, (4, ), (1, ))
    assert_size_stride(primals_3016, (4, ), (1, ))
    assert_size_stride(primals_3017, (4, ), (1, ))
    assert_size_stride(primals_3018, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3019, (2, ), (1, ))
    assert_size_stride(primals_3020, (2, ), (1, ))
    assert_size_stride(primals_3021, (2, ), (1, ))
    assert_size_stride(primals_3022, (2, ), (1, ))
    assert_size_stride(primals_3023, (2, ), (1, ))
    assert_size_stride(primals_3024, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3025, (2, ), (1, ))
    assert_size_stride(primals_3026, (2, ), (1, ))
    assert_size_stride(primals_3027, (2, ), (1, ))
    assert_size_stride(primals_3028, (2, ), (1, ))
    assert_size_stride(primals_3029, (2, ), (1, ))
    assert_size_stride(primals_3030, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3031, (4, ), (1, ))
    assert_size_stride(primals_3032, (4, ), (1, ))
    assert_size_stride(primals_3033, (4, ), (1, ))
    assert_size_stride(primals_3034, (4, ), (1, ))
    assert_size_stride(primals_3035, (4, ), (1, ))
    assert_size_stride(primals_3036, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3037, (2, ), (1, ))
    assert_size_stride(primals_3038, (2, ), (1, ))
    assert_size_stride(primals_3039, (2, ), (1, ))
    assert_size_stride(primals_3040, (2, ), (1, ))
    assert_size_stride(primals_3041, (2, ), (1, ))
    assert_size_stride(primals_3042, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3043, (2, ), (1, ))
    assert_size_stride(primals_3044, (2, ), (1, ))
    assert_size_stride(primals_3045, (2, ), (1, ))
    assert_size_stride(primals_3046, (2, ), (1, ))
    assert_size_stride(primals_3047, (2, ), (1, ))
    assert_size_stride(primals_3048, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3049, (4, ), (1, ))
    assert_size_stride(primals_3050, (4, ), (1, ))
    assert_size_stride(primals_3051, (4, ), (1, ))
    assert_size_stride(primals_3052, (4, ), (1, ))
    assert_size_stride(primals_3053, (4, ), (1, ))
    assert_size_stride(primals_3054, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3055, (2, ), (1, ))
    assert_size_stride(primals_3056, (2, ), (1, ))
    assert_size_stride(primals_3057, (2, ), (1, ))
    assert_size_stride(primals_3058, (2, ), (1, ))
    assert_size_stride(primals_3059, (2, ), (1, ))
    assert_size_stride(primals_3060, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3061, (2, ), (1, ))
    assert_size_stride(primals_3062, (2, ), (1, ))
    assert_size_stride(primals_3063, (2, ), (1, ))
    assert_size_stride(primals_3064, (2, ), (1, ))
    assert_size_stride(primals_3065, (2, ), (1, ))
    assert_size_stride(primals_3066, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3067, (4, ), (1, ))
    assert_size_stride(primals_3068, (4, ), (1, ))
    assert_size_stride(primals_3069, (4, ), (1, ))
    assert_size_stride(primals_3070, (4, ), (1, ))
    assert_size_stride(primals_3071, (4, ), (1, ))
    assert_size_stride(primals_3072, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3073, (2, ), (1, ))
    assert_size_stride(primals_3074, (2, ), (1, ))
    assert_size_stride(primals_3075, (2, ), (1, ))
    assert_size_stride(primals_3076, (2, ), (1, ))
    assert_size_stride(primals_3077, (2, ), (1, ))
    assert_size_stride(primals_3078, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3079, (2, ), (1, ))
    assert_size_stride(primals_3080, (2, ), (1, ))
    assert_size_stride(primals_3081, (2, ), (1, ))
    assert_size_stride(primals_3082, (2, ), (1, ))
    assert_size_stride(primals_3083, (2, ), (1, ))
    assert_size_stride(primals_3084, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3085, (4, ), (1, ))
    assert_size_stride(primals_3086, (4, ), (1, ))
    assert_size_stride(primals_3087, (4, ), (1, ))
    assert_size_stride(primals_3088, (4, ), (1, ))
    assert_size_stride(primals_3089, (4, ), (1, ))
    assert_size_stride(primals_3090, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3091, (2, ), (1, ))
    assert_size_stride(primals_3092, (2, ), (1, ))
    assert_size_stride(primals_3093, (2, ), (1, ))
    assert_size_stride(primals_3094, (2, ), (1, ))
    assert_size_stride(primals_3095, (2, ), (1, ))
    assert_size_stride(primals_3096, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3097, (2, ), (1, ))
    assert_size_stride(primals_3098, (2, ), (1, ))
    assert_size_stride(primals_3099, (2, ), (1, ))
    assert_size_stride(primals_3100, (2, ), (1, ))
    assert_size_stride(primals_3101, (2, ), (1, ))
    assert_size_stride(primals_3102, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3103, (4, ), (1, ))
    assert_size_stride(primals_3104, (4, ), (1, ))
    assert_size_stride(primals_3105, (4, ), (1, ))
    assert_size_stride(primals_3106, (4, ), (1, ))
    assert_size_stride(primals_3107, (4, ), (1, ))
    assert_size_stride(primals_3108, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3109, (2, ), (1, ))
    assert_size_stride(primals_3110, (2, ), (1, ))
    assert_size_stride(primals_3111, (2, ), (1, ))
    assert_size_stride(primals_3112, (2, ), (1, ))
    assert_size_stride(primals_3113, (2, ), (1, ))
    assert_size_stride(primals_3114, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3115, (2, ), (1, ))
    assert_size_stride(primals_3116, (2, ), (1, ))
    assert_size_stride(primals_3117, (2, ), (1, ))
    assert_size_stride(primals_3118, (2, ), (1, ))
    assert_size_stride(primals_3119, (2, ), (1, ))
    assert_size_stride(primals_3120, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3121, (4, ), (1, ))
    assert_size_stride(primals_3122, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3123, (4, ), (1, ))
    assert_size_stride(primals_3124, (4, ), (1, ))
    assert_size_stride(primals_3125, (4, ), (1, ))
    assert_size_stride(primals_3126, (4, ), (1, ))
    assert_size_stride(primals_3127, (4, ), (1, ))
    assert_size_stride(primals_3128, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3129, (4, ), (1, ))
    assert_size_stride(primals_3130, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3131, (4, ), (1, ))
    assert_size_stride(primals_3132, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3133, (4, ), (1, ))
    assert_size_stride(primals_3134, (4, ), (1, ))
    assert_size_stride(primals_3135, (4, ), (1, ))
    assert_size_stride(primals_3136, (4, ), (1, ))
    assert_size_stride(primals_3137, (4, ), (1, ))
    assert_size_stride(primals_3138, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3139, (2, ), (1, ))
    assert_size_stride(primals_3140, (2, ), (1, ))
    assert_size_stride(primals_3141, (2, ), (1, ))
    assert_size_stride(primals_3142, (2, ), (1, ))
    assert_size_stride(primals_3143, (2, ), (1, ))
    assert_size_stride(primals_3144, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3145, (2, ), (1, ))
    assert_size_stride(primals_3146, (2, ), (1, ))
    assert_size_stride(primals_3147, (2, ), (1, ))
    assert_size_stride(primals_3148, (2, ), (1, ))
    assert_size_stride(primals_3149, (2, ), (1, ))
    assert_size_stride(primals_3150, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3151, (4, ), (1, ))
    assert_size_stride(primals_3152, (4, ), (1, ))
    assert_size_stride(primals_3153, (4, ), (1, ))
    assert_size_stride(primals_3154, (4, ), (1, ))
    assert_size_stride(primals_3155, (4, ), (1, ))
    assert_size_stride(primals_3156, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3157, (2, ), (1, ))
    assert_size_stride(primals_3158, (2, ), (1, ))
    assert_size_stride(primals_3159, (2, ), (1, ))
    assert_size_stride(primals_3160, (2, ), (1, ))
    assert_size_stride(primals_3161, (2, ), (1, ))
    assert_size_stride(primals_3162, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3163, (2, ), (1, ))
    assert_size_stride(primals_3164, (2, ), (1, ))
    assert_size_stride(primals_3165, (2, ), (1, ))
    assert_size_stride(primals_3166, (2, ), (1, ))
    assert_size_stride(primals_3167, (2, ), (1, ))
    assert_size_stride(primals_3168, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3169, (4, ), (1, ))
    assert_size_stride(primals_3170, (4, ), (1, ))
    assert_size_stride(primals_3171, (4, ), (1, ))
    assert_size_stride(primals_3172, (4, ), (1, ))
    assert_size_stride(primals_3173, (4, ), (1, ))
    assert_size_stride(primals_3174, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3175, (2, ), (1, ))
    assert_size_stride(primals_3176, (2, ), (1, ))
    assert_size_stride(primals_3177, (2, ), (1, ))
    assert_size_stride(primals_3178, (2, ), (1, ))
    assert_size_stride(primals_3179, (2, ), (1, ))
    assert_size_stride(primals_3180, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3181, (2, ), (1, ))
    assert_size_stride(primals_3182, (2, ), (1, ))
    assert_size_stride(primals_3183, (2, ), (1, ))
    assert_size_stride(primals_3184, (2, ), (1, ))
    assert_size_stride(primals_3185, (2, ), (1, ))
    assert_size_stride(primals_3186, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3187, (4, ), (1, ))
    assert_size_stride(primals_3188, (4, ), (1, ))
    assert_size_stride(primals_3189, (4, ), (1, ))
    assert_size_stride(primals_3190, (4, ), (1, ))
    assert_size_stride(primals_3191, (4, ), (1, ))
    assert_size_stride(primals_3192, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3193, (2, ), (1, ))
    assert_size_stride(primals_3194, (2, ), (1, ))
    assert_size_stride(primals_3195, (2, ), (1, ))
    assert_size_stride(primals_3196, (2, ), (1, ))
    assert_size_stride(primals_3197, (2, ), (1, ))
    assert_size_stride(primals_3198, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3199, (2, ), (1, ))
    assert_size_stride(primals_3200, (2, ), (1, ))
    assert_size_stride(primals_3201, (2, ), (1, ))
    assert_size_stride(primals_3202, (2, ), (1, ))
    assert_size_stride(primals_3203, (2, ), (1, ))
    assert_size_stride(primals_3204, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3205, (4, ), (1, ))
    assert_size_stride(primals_3206, (4, ), (1, ))
    assert_size_stride(primals_3207, (4, ), (1, ))
    assert_size_stride(primals_3208, (4, ), (1, ))
    assert_size_stride(primals_3209, (4, ), (1, ))
    assert_size_stride(primals_3210, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3211, (2, ), (1, ))
    assert_size_stride(primals_3212, (2, ), (1, ))
    assert_size_stride(primals_3213, (2, ), (1, ))
    assert_size_stride(primals_3214, (2, ), (1, ))
    assert_size_stride(primals_3215, (2, ), (1, ))
    assert_size_stride(primals_3216, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3217, (2, ), (1, ))
    assert_size_stride(primals_3218, (2, ), (1, ))
    assert_size_stride(primals_3219, (2, ), (1, ))
    assert_size_stride(primals_3220, (2, ), (1, ))
    assert_size_stride(primals_3221, (2, ), (1, ))
    assert_size_stride(primals_3222, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3223, (4, ), (1, ))
    assert_size_stride(primals_3224, (4, ), (1, ))
    assert_size_stride(primals_3225, (4, ), (1, ))
    assert_size_stride(primals_3226, (4, ), (1, ))
    assert_size_stride(primals_3227, (4, ), (1, ))
    assert_size_stride(primals_3228, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3229, (2, ), (1, ))
    assert_size_stride(primals_3230, (2, ), (1, ))
    assert_size_stride(primals_3231, (2, ), (1, ))
    assert_size_stride(primals_3232, (2, ), (1, ))
    assert_size_stride(primals_3233, (2, ), (1, ))
    assert_size_stride(primals_3234, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3235, (2, ), (1, ))
    assert_size_stride(primals_3236, (2, ), (1, ))
    assert_size_stride(primals_3237, (2, ), (1, ))
    assert_size_stride(primals_3238, (2, ), (1, ))
    assert_size_stride(primals_3239, (2, ), (1, ))
    assert_size_stride(primals_3240, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3241, (4, ), (1, ))
    assert_size_stride(primals_3242, (4, ), (1, ))
    assert_size_stride(primals_3243, (4, ), (1, ))
    assert_size_stride(primals_3244, (4, ), (1, ))
    assert_size_stride(primals_3245, (4, ), (1, ))
    assert_size_stride(primals_3246, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3247, (2, ), (1, ))
    assert_size_stride(primals_3248, (2, ), (1, ))
    assert_size_stride(primals_3249, (2, ), (1, ))
    assert_size_stride(primals_3250, (2, ), (1, ))
    assert_size_stride(primals_3251, (2, ), (1, ))
    assert_size_stride(primals_3252, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3253, (2, ), (1, ))
    assert_size_stride(primals_3254, (2, ), (1, ))
    assert_size_stride(primals_3255, (2, ), (1, ))
    assert_size_stride(primals_3256, (2, ), (1, ))
    assert_size_stride(primals_3257, (2, ), (1, ))
    assert_size_stride(primals_3258, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3259, (4, ), (1, ))
    assert_size_stride(primals_3260, (4, ), (1, ))
    assert_size_stride(primals_3261, (4, ), (1, ))
    assert_size_stride(primals_3262, (4, ), (1, ))
    assert_size_stride(primals_3263, (4, ), (1, ))
    assert_size_stride(primals_3264, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3265, (2, ), (1, ))
    assert_size_stride(primals_3266, (2, ), (1, ))
    assert_size_stride(primals_3267, (2, ), (1, ))
    assert_size_stride(primals_3268, (2, ), (1, ))
    assert_size_stride(primals_3269, (2, ), (1, ))
    assert_size_stride(primals_3270, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3271, (2, ), (1, ))
    assert_size_stride(primals_3272, (2, ), (1, ))
    assert_size_stride(primals_3273, (2, ), (1, ))
    assert_size_stride(primals_3274, (2, ), (1, ))
    assert_size_stride(primals_3275, (2, ), (1, ))
    assert_size_stride(primals_3276, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3277, (4, ), (1, ))
    assert_size_stride(primals_3278, (4, ), (1, ))
    assert_size_stride(primals_3279, (4, ), (1, ))
    assert_size_stride(primals_3280, (4, ), (1, ))
    assert_size_stride(primals_3281, (4, ), (1, ))
    assert_size_stride(primals_3282, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3283, (2, ), (1, ))
    assert_size_stride(primals_3284, (2, ), (1, ))
    assert_size_stride(primals_3285, (2, ), (1, ))
    assert_size_stride(primals_3286, (2, ), (1, ))
    assert_size_stride(primals_3287, (2, ), (1, ))
    assert_size_stride(primals_3288, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3289, (2, ), (1, ))
    assert_size_stride(primals_3290, (2, ), (1, ))
    assert_size_stride(primals_3291, (2, ), (1, ))
    assert_size_stride(primals_3292, (2, ), (1, ))
    assert_size_stride(primals_3293, (2, ), (1, ))
    assert_size_stride(primals_3294, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3295, (4, ), (1, ))
    assert_size_stride(primals_3296, (4, ), (1, ))
    assert_size_stride(primals_3297, (4, ), (1, ))
    assert_size_stride(primals_3298, (4, ), (1, ))
    assert_size_stride(primals_3299, (4, ), (1, ))
    assert_size_stride(primals_3300, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3301, (2, ), (1, ))
    assert_size_stride(primals_3302, (2, ), (1, ))
    assert_size_stride(primals_3303, (2, ), (1, ))
    assert_size_stride(primals_3304, (2, ), (1, ))
    assert_size_stride(primals_3305, (2, ), (1, ))
    assert_size_stride(primals_3306, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3307, (2, ), (1, ))
    assert_size_stride(primals_3308, (2, ), (1, ))
    assert_size_stride(primals_3309, (2, ), (1, ))
    assert_size_stride(primals_3310, (2, ), (1, ))
    assert_size_stride(primals_3311, (2, ), (1, ))
    assert_size_stride(primals_3312, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3313, (4, ), (1, ))
    assert_size_stride(primals_3314, (4, ), (1, ))
    assert_size_stride(primals_3315, (4, ), (1, ))
    assert_size_stride(primals_3316, (4, ), (1, ))
    assert_size_stride(primals_3317, (4, ), (1, ))
    assert_size_stride(primals_3318, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3319, (2, ), (1, ))
    assert_size_stride(primals_3320, (2, ), (1, ))
    assert_size_stride(primals_3321, (2, ), (1, ))
    assert_size_stride(primals_3322, (2, ), (1, ))
    assert_size_stride(primals_3323, (2, ), (1, ))
    assert_size_stride(primals_3324, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3325, (2, ), (1, ))
    assert_size_stride(primals_3326, (2, ), (1, ))
    assert_size_stride(primals_3327, (2, ), (1, ))
    assert_size_stride(primals_3328, (2, ), (1, ))
    assert_size_stride(primals_3329, (2, ), (1, ))
    assert_size_stride(primals_3330, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3331, (4, ), (1, ))
    assert_size_stride(primals_3332, (4, ), (1, ))
    assert_size_stride(primals_3333, (4, ), (1, ))
    assert_size_stride(primals_3334, (4, ), (1, ))
    assert_size_stride(primals_3335, (4, ), (1, ))
    assert_size_stride(primals_3336, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3337, (2, ), (1, ))
    assert_size_stride(primals_3338, (2, ), (1, ))
    assert_size_stride(primals_3339, (2, ), (1, ))
    assert_size_stride(primals_3340, (2, ), (1, ))
    assert_size_stride(primals_3341, (2, ), (1, ))
    assert_size_stride(primals_3342, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3343, (2, ), (1, ))
    assert_size_stride(primals_3344, (2, ), (1, ))
    assert_size_stride(primals_3345, (2, ), (1, ))
    assert_size_stride(primals_3346, (2, ), (1, ))
    assert_size_stride(primals_3347, (2, ), (1, ))
    assert_size_stride(primals_3348, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3349, (4, ), (1, ))
    assert_size_stride(primals_3350, (4, ), (1, ))
    assert_size_stride(primals_3351, (4, ), (1, ))
    assert_size_stride(primals_3352, (4, ), (1, ))
    assert_size_stride(primals_3353, (4, ), (1, ))
    assert_size_stride(primals_3354, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3355, (2, ), (1, ))
    assert_size_stride(primals_3356, (2, ), (1, ))
    assert_size_stride(primals_3357, (2, ), (1, ))
    assert_size_stride(primals_3358, (2, ), (1, ))
    assert_size_stride(primals_3359, (2, ), (1, ))
    assert_size_stride(primals_3360, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3361, (2, ), (1, ))
    assert_size_stride(primals_3362, (2, ), (1, ))
    assert_size_stride(primals_3363, (2, ), (1, ))
    assert_size_stride(primals_3364, (2, ), (1, ))
    assert_size_stride(primals_3365, (2, ), (1, ))
    assert_size_stride(primals_3366, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3367, (4, ), (1, ))
    assert_size_stride(primals_3368, (4, ), (1, ))
    assert_size_stride(primals_3369, (4, ), (1, ))
    assert_size_stride(primals_3370, (4, ), (1, ))
    assert_size_stride(primals_3371, (4, ), (1, ))
    assert_size_stride(primals_3372, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3373, (2, ), (1, ))
    assert_size_stride(primals_3374, (2, ), (1, ))
    assert_size_stride(primals_3375, (2, ), (1, ))
    assert_size_stride(primals_3376, (2, ), (1, ))
    assert_size_stride(primals_3377, (2, ), (1, ))
    assert_size_stride(primals_3378, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3379, (2, ), (1, ))
    assert_size_stride(primals_3380, (2, ), (1, ))
    assert_size_stride(primals_3381, (2, ), (1, ))
    assert_size_stride(primals_3382, (2, ), (1, ))
    assert_size_stride(primals_3383, (2, ), (1, ))
    assert_size_stride(primals_3384, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3385, (4, ), (1, ))
    assert_size_stride(primals_3386, (4, ), (1, ))
    assert_size_stride(primals_3387, (4, ), (1, ))
    assert_size_stride(primals_3388, (4, ), (1, ))
    assert_size_stride(primals_3389, (4, ), (1, ))
    assert_size_stride(primals_3390, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3391, (2, ), (1, ))
    assert_size_stride(primals_3392, (2, ), (1, ))
    assert_size_stride(primals_3393, (2, ), (1, ))
    assert_size_stride(primals_3394, (2, ), (1, ))
    assert_size_stride(primals_3395, (2, ), (1, ))
    assert_size_stride(primals_3396, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3397, (2, ), (1, ))
    assert_size_stride(primals_3398, (2, ), (1, ))
    assert_size_stride(primals_3399, (2, ), (1, ))
    assert_size_stride(primals_3400, (2, ), (1, ))
    assert_size_stride(primals_3401, (2, ), (1, ))
    assert_size_stride(primals_3402, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3403, (4, ), (1, ))
    assert_size_stride(primals_3404, (4, ), (1, ))
    assert_size_stride(primals_3405, (4, ), (1, ))
    assert_size_stride(primals_3406, (4, ), (1, ))
    assert_size_stride(primals_3407, (4, ), (1, ))
    assert_size_stride(primals_3408, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3409, (2, ), (1, ))
    assert_size_stride(primals_3410, (2, ), (1, ))
    assert_size_stride(primals_3411, (2, ), (1, ))
    assert_size_stride(primals_3412, (2, ), (1, ))
    assert_size_stride(primals_3413, (2, ), (1, ))
    assert_size_stride(primals_3414, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3415, (2, ), (1, ))
    assert_size_stride(primals_3416, (2, ), (1, ))
    assert_size_stride(primals_3417, (2, ), (1, ))
    assert_size_stride(primals_3418, (2, ), (1, ))
    assert_size_stride(primals_3419, (2, ), (1, ))
    assert_size_stride(primals_3420, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3421, (4, ), (1, ))
    assert_size_stride(primals_3422, (4, ), (1, ))
    assert_size_stride(primals_3423, (4, ), (1, ))
    assert_size_stride(primals_3424, (4, ), (1, ))
    assert_size_stride(primals_3425, (4, ), (1, ))
    assert_size_stride(primals_3426, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3427, (2, ), (1, ))
    assert_size_stride(primals_3428, (2, ), (1, ))
    assert_size_stride(primals_3429, (2, ), (1, ))
    assert_size_stride(primals_3430, (2, ), (1, ))
    assert_size_stride(primals_3431, (2, ), (1, ))
    assert_size_stride(primals_3432, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3433, (2, ), (1, ))
    assert_size_stride(primals_3434, (2, ), (1, ))
    assert_size_stride(primals_3435, (2, ), (1, ))
    assert_size_stride(primals_3436, (2, ), (1, ))
    assert_size_stride(primals_3437, (2, ), (1, ))
    assert_size_stride(primals_3438, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3439, (4, ), (1, ))
    assert_size_stride(primals_3440, (4, ), (1, ))
    assert_size_stride(primals_3441, (4, ), (1, ))
    assert_size_stride(primals_3442, (4, ), (1, ))
    assert_size_stride(primals_3443, (4, ), (1, ))
    assert_size_stride(primals_3444, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3445, (2, ), (1, ))
    assert_size_stride(primals_3446, (2, ), (1, ))
    assert_size_stride(primals_3447, (2, ), (1, ))
    assert_size_stride(primals_3448, (2, ), (1, ))
    assert_size_stride(primals_3449, (2, ), (1, ))
    assert_size_stride(primals_3450, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3451, (2, ), (1, ))
    assert_size_stride(primals_3452, (2, ), (1, ))
    assert_size_stride(primals_3453, (2, ), (1, ))
    assert_size_stride(primals_3454, (2, ), (1, ))
    assert_size_stride(primals_3455, (2, ), (1, ))
    assert_size_stride(primals_3456, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3457, (4, ), (1, ))
    assert_size_stride(primals_3458, (4, ), (1, ))
    assert_size_stride(primals_3459, (4, ), (1, ))
    assert_size_stride(primals_3460, (4, ), (1, ))
    assert_size_stride(primals_3461, (4, ), (1, ))
    assert_size_stride(primals_3462, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3463, (2, ), (1, ))
    assert_size_stride(primals_3464, (2, ), (1, ))
    assert_size_stride(primals_3465, (2, ), (1, ))
    assert_size_stride(primals_3466, (2, ), (1, ))
    assert_size_stride(primals_3467, (2, ), (1, ))
    assert_size_stride(primals_3468, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3469, (2, ), (1, ))
    assert_size_stride(primals_3470, (2, ), (1, ))
    assert_size_stride(primals_3471, (2, ), (1, ))
    assert_size_stride(primals_3472, (2, ), (1, ))
    assert_size_stride(primals_3473, (2, ), (1, ))
    assert_size_stride(primals_3474, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3475, (4, ), (1, ))
    assert_size_stride(primals_3476, (4, ), (1, ))
    assert_size_stride(primals_3477, (4, ), (1, ))
    assert_size_stride(primals_3478, (4, ), (1, ))
    assert_size_stride(primals_3479, (4, ), (1, ))
    assert_size_stride(primals_3480, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3481, (2, ), (1, ))
    assert_size_stride(primals_3482, (2, ), (1, ))
    assert_size_stride(primals_3483, (2, ), (1, ))
    assert_size_stride(primals_3484, (2, ), (1, ))
    assert_size_stride(primals_3485, (2, ), (1, ))
    assert_size_stride(primals_3486, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3487, (2, ), (1, ))
    assert_size_stride(primals_3488, (2, ), (1, ))
    assert_size_stride(primals_3489, (2, ), (1, ))
    assert_size_stride(primals_3490, (2, ), (1, ))
    assert_size_stride(primals_3491, (2, ), (1, ))
    assert_size_stride(primals_3492, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3493, (4, ), (1, ))
    assert_size_stride(primals_3494, (4, ), (1, ))
    assert_size_stride(primals_3495, (4, ), (1, ))
    assert_size_stride(primals_3496, (4, ), (1, ))
    assert_size_stride(primals_3497, (4, ), (1, ))
    assert_size_stride(primals_3498, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3499, (2, ), (1, ))
    assert_size_stride(primals_3500, (2, ), (1, ))
    assert_size_stride(primals_3501, (2, ), (1, ))
    assert_size_stride(primals_3502, (2, ), (1, ))
    assert_size_stride(primals_3503, (2, ), (1, ))
    assert_size_stride(primals_3504, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3505, (2, ), (1, ))
    assert_size_stride(primals_3506, (2, ), (1, ))
    assert_size_stride(primals_3507, (2, ), (1, ))
    assert_size_stride(primals_3508, (2, ), (1, ))
    assert_size_stride(primals_3509, (2, ), (1, ))
    assert_size_stride(primals_3510, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3511, (4, ), (1, ))
    assert_size_stride(primals_3512, (4, ), (1, ))
    assert_size_stride(primals_3513, (4, ), (1, ))
    assert_size_stride(primals_3514, (4, ), (1, ))
    assert_size_stride(primals_3515, (4, ), (1, ))
    assert_size_stride(primals_3516, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3517, (2, ), (1, ))
    assert_size_stride(primals_3518, (2, ), (1, ))
    assert_size_stride(primals_3519, (2, ), (1, ))
    assert_size_stride(primals_3520, (2, ), (1, ))
    assert_size_stride(primals_3521, (2, ), (1, ))
    assert_size_stride(primals_3522, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3523, (2, ), (1, ))
    assert_size_stride(primals_3524, (2, ), (1, ))
    assert_size_stride(primals_3525, (2, ), (1, ))
    assert_size_stride(primals_3526, (2, ), (1, ))
    assert_size_stride(primals_3527, (2, ), (1, ))
    assert_size_stride(primals_3528, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3529, (4, ), (1, ))
    assert_size_stride(primals_3530, (4, ), (1, ))
    assert_size_stride(primals_3531, (4, ), (1, ))
    assert_size_stride(primals_3532, (4, ), (1, ))
    assert_size_stride(primals_3533, (4, ), (1, ))
    assert_size_stride(primals_3534, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3535, (2, ), (1, ))
    assert_size_stride(primals_3536, (2, ), (1, ))
    assert_size_stride(primals_3537, (2, ), (1, ))
    assert_size_stride(primals_3538, (2, ), (1, ))
    assert_size_stride(primals_3539, (2, ), (1, ))
    assert_size_stride(primals_3540, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3541, (2, ), (1, ))
    assert_size_stride(primals_3542, (2, ), (1, ))
    assert_size_stride(primals_3543, (2, ), (1, ))
    assert_size_stride(primals_3544, (2, ), (1, ))
    assert_size_stride(primals_3545, (2, ), (1, ))
    assert_size_stride(primals_3546, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3547, (4, ), (1, ))
    assert_size_stride(primals_3548, (4, ), (1, ))
    assert_size_stride(primals_3549, (4, ), (1, ))
    assert_size_stride(primals_3550, (4, ), (1, ))
    assert_size_stride(primals_3551, (4, ), (1, ))
    assert_size_stride(primals_3552, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3553, (2, ), (1, ))
    assert_size_stride(primals_3554, (2, ), (1, ))
    assert_size_stride(primals_3555, (2, ), (1, ))
    assert_size_stride(primals_3556, (2, ), (1, ))
    assert_size_stride(primals_3557, (2, ), (1, ))
    assert_size_stride(primals_3558, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3559, (2, ), (1, ))
    assert_size_stride(primals_3560, (2, ), (1, ))
    assert_size_stride(primals_3561, (2, ), (1, ))
    assert_size_stride(primals_3562, (2, ), (1, ))
    assert_size_stride(primals_3563, (2, ), (1, ))
    assert_size_stride(primals_3564, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3565, (4, ), (1, ))
    assert_size_stride(primals_3566, (4, ), (1, ))
    assert_size_stride(primals_3567, (4, ), (1, ))
    assert_size_stride(primals_3568, (4, ), (1, ))
    assert_size_stride(primals_3569, (4, ), (1, ))
    assert_size_stride(primals_3570, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3571, (2, ), (1, ))
    assert_size_stride(primals_3572, (2, ), (1, ))
    assert_size_stride(primals_3573, (2, ), (1, ))
    assert_size_stride(primals_3574, (2, ), (1, ))
    assert_size_stride(primals_3575, (2, ), (1, ))
    assert_size_stride(primals_3576, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3577, (2, ), (1, ))
    assert_size_stride(primals_3578, (2, ), (1, ))
    assert_size_stride(primals_3579, (2, ), (1, ))
    assert_size_stride(primals_3580, (2, ), (1, ))
    assert_size_stride(primals_3581, (2, ), (1, ))
    assert_size_stride(primals_3582, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3583, (4, ), (1, ))
    assert_size_stride(primals_3584, (4, ), (1, ))
    assert_size_stride(primals_3585, (4, ), (1, ))
    assert_size_stride(primals_3586, (4, ), (1, ))
    assert_size_stride(primals_3587, (4, ), (1, ))
    assert_size_stride(primals_3588, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3589, (2, ), (1, ))
    assert_size_stride(primals_3590, (2, ), (1, ))
    assert_size_stride(primals_3591, (2, ), (1, ))
    assert_size_stride(primals_3592, (2, ), (1, ))
    assert_size_stride(primals_3593, (2, ), (1, ))
    assert_size_stride(primals_3594, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3595, (2, ), (1, ))
    assert_size_stride(primals_3596, (2, ), (1, ))
    assert_size_stride(primals_3597, (2, ), (1, ))
    assert_size_stride(primals_3598, (2, ), (1, ))
    assert_size_stride(primals_3599, (2, ), (1, ))
    assert_size_stride(primals_3600, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3601, (4, ), (1, ))
    assert_size_stride(primals_3602, (4, ), (1, ))
    assert_size_stride(primals_3603, (4, ), (1, ))
    assert_size_stride(primals_3604, (4, ), (1, ))
    assert_size_stride(primals_3605, (4, ), (1, ))
    assert_size_stride(primals_3606, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3607, (2, ), (1, ))
    assert_size_stride(primals_3608, (2, ), (1, ))
    assert_size_stride(primals_3609, (2, ), (1, ))
    assert_size_stride(primals_3610, (2, ), (1, ))
    assert_size_stride(primals_3611, (2, ), (1, ))
    assert_size_stride(primals_3612, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3613, (2, ), (1, ))
    assert_size_stride(primals_3614, (2, ), (1, ))
    assert_size_stride(primals_3615, (2, ), (1, ))
    assert_size_stride(primals_3616, (2, ), (1, ))
    assert_size_stride(primals_3617, (2, ), (1, ))
    assert_size_stride(primals_3618, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3619, (4, ), (1, ))
    assert_size_stride(primals_3620, (4, ), (1, ))
    assert_size_stride(primals_3621, (4, ), (1, ))
    assert_size_stride(primals_3622, (4, ), (1, ))
    assert_size_stride(primals_3623, (4, ), (1, ))
    assert_size_stride(primals_3624, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3625, (2, ), (1, ))
    assert_size_stride(primals_3626, (2, ), (1, ))
    assert_size_stride(primals_3627, (2, ), (1, ))
    assert_size_stride(primals_3628, (2, ), (1, ))
    assert_size_stride(primals_3629, (2, ), (1, ))
    assert_size_stride(primals_3630, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3631, (2, ), (1, ))
    assert_size_stride(primals_3632, (2, ), (1, ))
    assert_size_stride(primals_3633, (2, ), (1, ))
    assert_size_stride(primals_3634, (2, ), (1, ))
    assert_size_stride(primals_3635, (2, ), (1, ))
    assert_size_stride(primals_3636, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3637, (4, ), (1, ))
    assert_size_stride(primals_3638, (4, ), (1, ))
    assert_size_stride(primals_3639, (4, ), (1, ))
    assert_size_stride(primals_3640, (4, ), (1, ))
    assert_size_stride(primals_3641, (4, ), (1, ))
    assert_size_stride(primals_3642, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3643, (2, ), (1, ))
    assert_size_stride(primals_3644, (2, ), (1, ))
    assert_size_stride(primals_3645, (2, ), (1, ))
    assert_size_stride(primals_3646, (2, ), (1, ))
    assert_size_stride(primals_3647, (2, ), (1, ))
    assert_size_stride(primals_3648, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3649, (2, ), (1, ))
    assert_size_stride(primals_3650, (2, ), (1, ))
    assert_size_stride(primals_3651, (2, ), (1, ))
    assert_size_stride(primals_3652, (2, ), (1, ))
    assert_size_stride(primals_3653, (2, ), (1, ))
    assert_size_stride(primals_3654, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3655, (4, ), (1, ))
    assert_size_stride(primals_3656, (4, ), (1, ))
    assert_size_stride(primals_3657, (4, ), (1, ))
    assert_size_stride(primals_3658, (4, ), (1, ))
    assert_size_stride(primals_3659, (4, ), (1, ))
    assert_size_stride(primals_3660, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3661, (2, ), (1, ))
    assert_size_stride(primals_3662, (2, ), (1, ))
    assert_size_stride(primals_3663, (2, ), (1, ))
    assert_size_stride(primals_3664, (2, ), (1, ))
    assert_size_stride(primals_3665, (2, ), (1, ))
    assert_size_stride(primals_3666, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3667, (2, ), (1, ))
    assert_size_stride(primals_3668, (2, ), (1, ))
    assert_size_stride(primals_3669, (2, ), (1, ))
    assert_size_stride(primals_3670, (2, ), (1, ))
    assert_size_stride(primals_3671, (2, ), (1, ))
    assert_size_stride(primals_3672, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3673, (4, ), (1, ))
    assert_size_stride(primals_3674, (4, ), (1, ))
    assert_size_stride(primals_3675, (4, ), (1, ))
    assert_size_stride(primals_3676, (4, ), (1, ))
    assert_size_stride(primals_3677, (4, ), (1, ))
    assert_size_stride(primals_3678, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3679, (2, ), (1, ))
    assert_size_stride(primals_3680, (2, ), (1, ))
    assert_size_stride(primals_3681, (2, ), (1, ))
    assert_size_stride(primals_3682, (2, ), (1, ))
    assert_size_stride(primals_3683, (2, ), (1, ))
    assert_size_stride(primals_3684, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3685, (2, ), (1, ))
    assert_size_stride(primals_3686, (2, ), (1, ))
    assert_size_stride(primals_3687, (2, ), (1, ))
    assert_size_stride(primals_3688, (2, ), (1, ))
    assert_size_stride(primals_3689, (2, ), (1, ))
    assert_size_stride(primals_3690, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3691, (4, ), (1, ))
    assert_size_stride(primals_3692, (4, ), (1, ))
    assert_size_stride(primals_3693, (4, ), (1, ))
    assert_size_stride(primals_3694, (4, ), (1, ))
    assert_size_stride(primals_3695, (4, ), (1, ))
    assert_size_stride(primals_3696, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3697, (2, ), (1, ))
    assert_size_stride(primals_3698, (2, ), (1, ))
    assert_size_stride(primals_3699, (2, ), (1, ))
    assert_size_stride(primals_3700, (2, ), (1, ))
    assert_size_stride(primals_3701, (2, ), (1, ))
    assert_size_stride(primals_3702, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3703, (2, ), (1, ))
    assert_size_stride(primals_3704, (2, ), (1, ))
    assert_size_stride(primals_3705, (2, ), (1, ))
    assert_size_stride(primals_3706, (2, ), (1, ))
    assert_size_stride(primals_3707, (2, ), (1, ))
    assert_size_stride(primals_3708, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3709, (4, ), (1, ))
    assert_size_stride(primals_3710, (4, ), (1, ))
    assert_size_stride(primals_3711, (4, ), (1, ))
    assert_size_stride(primals_3712, (4, ), (1, ))
    assert_size_stride(primals_3713, (4, ), (1, ))
    assert_size_stride(primals_3714, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3715, (2, ), (1, ))
    assert_size_stride(primals_3716, (2, ), (1, ))
    assert_size_stride(primals_3717, (2, ), (1, ))
    assert_size_stride(primals_3718, (2, ), (1, ))
    assert_size_stride(primals_3719, (2, ), (1, ))
    assert_size_stride(primals_3720, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3721, (2, ), (1, ))
    assert_size_stride(primals_3722, (2, ), (1, ))
    assert_size_stride(primals_3723, (2, ), (1, ))
    assert_size_stride(primals_3724, (2, ), (1, ))
    assert_size_stride(primals_3725, (2, ), (1, ))
    assert_size_stride(primals_3726, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3727, (4, ), (1, ))
    assert_size_stride(primals_3728, (4, ), (1, ))
    assert_size_stride(primals_3729, (4, ), (1, ))
    assert_size_stride(primals_3730, (4, ), (1, ))
    assert_size_stride(primals_3731, (4, ), (1, ))
    assert_size_stride(primals_3732, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3733, (2, ), (1, ))
    assert_size_stride(primals_3734, (2, ), (1, ))
    assert_size_stride(primals_3735, (2, ), (1, ))
    assert_size_stride(primals_3736, (2, ), (1, ))
    assert_size_stride(primals_3737, (2, ), (1, ))
    assert_size_stride(primals_3738, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3739, (2, ), (1, ))
    assert_size_stride(primals_3740, (2, ), (1, ))
    assert_size_stride(primals_3741, (2, ), (1, ))
    assert_size_stride(primals_3742, (2, ), (1, ))
    assert_size_stride(primals_3743, (2, ), (1, ))
    assert_size_stride(primals_3744, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3745, (4, ), (1, ))
    assert_size_stride(primals_3746, (4, ), (1, ))
    assert_size_stride(primals_3747, (4, ), (1, ))
    assert_size_stride(primals_3748, (4, ), (1, ))
    assert_size_stride(primals_3749, (4, ), (1, ))
    assert_size_stride(primals_3750, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3751, (2, ), (1, ))
    assert_size_stride(primals_3752, (2, ), (1, ))
    assert_size_stride(primals_3753, (2, ), (1, ))
    assert_size_stride(primals_3754, (2, ), (1, ))
    assert_size_stride(primals_3755, (2, ), (1, ))
    assert_size_stride(primals_3756, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3757, (2, ), (1, ))
    assert_size_stride(primals_3758, (2, ), (1, ))
    assert_size_stride(primals_3759, (2, ), (1, ))
    assert_size_stride(primals_3760, (2, ), (1, ))
    assert_size_stride(primals_3761, (2, ), (1, ))
    assert_size_stride(primals_3762, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3763, (4, ), (1, ))
    assert_size_stride(primals_3764, (4, ), (1, ))
    assert_size_stride(primals_3765, (4, ), (1, ))
    assert_size_stride(primals_3766, (4, ), (1, ))
    assert_size_stride(primals_3767, (4, ), (1, ))
    assert_size_stride(primals_3768, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3769, (2, ), (1, ))
    assert_size_stride(primals_3770, (2, ), (1, ))
    assert_size_stride(primals_3771, (2, ), (1, ))
    assert_size_stride(primals_3772, (2, ), (1, ))
    assert_size_stride(primals_3773, (2, ), (1, ))
    assert_size_stride(primals_3774, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3775, (2, ), (1, ))
    assert_size_stride(primals_3776, (2, ), (1, ))
    assert_size_stride(primals_3777, (2, ), (1, ))
    assert_size_stride(primals_3778, (2, ), (1, ))
    assert_size_stride(primals_3779, (2, ), (1, ))
    assert_size_stride(primals_3780, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3781, (4, ), (1, ))
    assert_size_stride(primals_3782, (4, ), (1, ))
    assert_size_stride(primals_3783, (4, ), (1, ))
    assert_size_stride(primals_3784, (4, ), (1, ))
    assert_size_stride(primals_3785, (4, ), (1, ))
    assert_size_stride(primals_3786, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3787, (2, ), (1, ))
    assert_size_stride(primals_3788, (2, ), (1, ))
    assert_size_stride(primals_3789, (2, ), (1, ))
    assert_size_stride(primals_3790, (2, ), (1, ))
    assert_size_stride(primals_3791, (2, ), (1, ))
    assert_size_stride(primals_3792, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3793, (2, ), (1, ))
    assert_size_stride(primals_3794, (2, ), (1, ))
    assert_size_stride(primals_3795, (2, ), (1, ))
    assert_size_stride(primals_3796, (2, ), (1, ))
    assert_size_stride(primals_3797, (2, ), (1, ))
    assert_size_stride(primals_3798, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3799, (4, ), (1, ))
    assert_size_stride(primals_3800, (4, ), (1, ))
    assert_size_stride(primals_3801, (4, ), (1, ))
    assert_size_stride(primals_3802, (4, ), (1, ))
    assert_size_stride(primals_3803, (4, ), (1, ))
    assert_size_stride(primals_3804, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3805, (2, ), (1, ))
    assert_size_stride(primals_3806, (2, ), (1, ))
    assert_size_stride(primals_3807, (2, ), (1, ))
    assert_size_stride(primals_3808, (2, ), (1, ))
    assert_size_stride(primals_3809, (2, ), (1, ))
    assert_size_stride(primals_3810, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3811, (2, ), (1, ))
    assert_size_stride(primals_3812, (2, ), (1, ))
    assert_size_stride(primals_3813, (2, ), (1, ))
    assert_size_stride(primals_3814, (2, ), (1, ))
    assert_size_stride(primals_3815, (2, ), (1, ))
    assert_size_stride(primals_3816, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3817, (4, ), (1, ))
    assert_size_stride(primals_3818, (4, ), (1, ))
    assert_size_stride(primals_3819, (4, ), (1, ))
    assert_size_stride(primals_3820, (4, ), (1, ))
    assert_size_stride(primals_3821, (4, ), (1, ))
    assert_size_stride(primals_3822, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3823, (2, ), (1, ))
    assert_size_stride(primals_3824, (2, ), (1, ))
    assert_size_stride(primals_3825, (2, ), (1, ))
    assert_size_stride(primals_3826, (2, ), (1, ))
    assert_size_stride(primals_3827, (2, ), (1, ))
    assert_size_stride(primals_3828, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3829, (2, ), (1, ))
    assert_size_stride(primals_3830, (2, ), (1, ))
    assert_size_stride(primals_3831, (2, ), (1, ))
    assert_size_stride(primals_3832, (2, ), (1, ))
    assert_size_stride(primals_3833, (2, ), (1, ))
    assert_size_stride(primals_3834, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3835, (4, ), (1, ))
    assert_size_stride(primals_3836, (4, ), (1, ))
    assert_size_stride(primals_3837, (4, ), (1, ))
    assert_size_stride(primals_3838, (4, ), (1, ))
    assert_size_stride(primals_3839, (4, ), (1, ))
    assert_size_stride(primals_3840, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3841, (2, ), (1, ))
    assert_size_stride(primals_3842, (2, ), (1, ))
    assert_size_stride(primals_3843, (2, ), (1, ))
    assert_size_stride(primals_3844, (2, ), (1, ))
    assert_size_stride(primals_3845, (2, ), (1, ))
    assert_size_stride(primals_3846, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3847, (2, ), (1, ))
    assert_size_stride(primals_3848, (2, ), (1, ))
    assert_size_stride(primals_3849, (2, ), (1, ))
    assert_size_stride(primals_3850, (2, ), (1, ))
    assert_size_stride(primals_3851, (2, ), (1, ))
    assert_size_stride(primals_3852, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3853, (4, ), (1, ))
    assert_size_stride(primals_3854, (4, ), (1, ))
    assert_size_stride(primals_3855, (4, ), (1, ))
    assert_size_stride(primals_3856, (4, ), (1, ))
    assert_size_stride(primals_3857, (4, ), (1, ))
    assert_size_stride(primals_3858, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3859, (2, ), (1, ))
    assert_size_stride(primals_3860, (2, ), (1, ))
    assert_size_stride(primals_3861, (2, ), (1, ))
    assert_size_stride(primals_3862, (2, ), (1, ))
    assert_size_stride(primals_3863, (2, ), (1, ))
    assert_size_stride(primals_3864, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3865, (2, ), (1, ))
    assert_size_stride(primals_3866, (2, ), (1, ))
    assert_size_stride(primals_3867, (2, ), (1, ))
    assert_size_stride(primals_3868, (2, ), (1, ))
    assert_size_stride(primals_3869, (2, ), (1, ))
    assert_size_stride(primals_3870, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3871, (4, ), (1, ))
    assert_size_stride(primals_3872, (4, ), (1, ))
    assert_size_stride(primals_3873, (4, ), (1, ))
    assert_size_stride(primals_3874, (4, ), (1, ))
    assert_size_stride(primals_3875, (4, ), (1, ))
    assert_size_stride(primals_3876, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3877, (2, ), (1, ))
    assert_size_stride(primals_3878, (2, ), (1, ))
    assert_size_stride(primals_3879, (2, ), (1, ))
    assert_size_stride(primals_3880, (2, ), (1, ))
    assert_size_stride(primals_3881, (2, ), (1, ))
    assert_size_stride(primals_3882, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3883, (2, ), (1, ))
    assert_size_stride(primals_3884, (2, ), (1, ))
    assert_size_stride(primals_3885, (2, ), (1, ))
    assert_size_stride(primals_3886, (2, ), (1, ))
    assert_size_stride(primals_3887, (2, ), (1, ))
    assert_size_stride(primals_3888, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3889, (4, ), (1, ))
    assert_size_stride(primals_3890, (4, ), (1, ))
    assert_size_stride(primals_3891, (4, ), (1, ))
    assert_size_stride(primals_3892, (4, ), (1, ))
    assert_size_stride(primals_3893, (4, ), (1, ))
    assert_size_stride(primals_3894, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3895, (2, ), (1, ))
    assert_size_stride(primals_3896, (2, ), (1, ))
    assert_size_stride(primals_3897, (2, ), (1, ))
    assert_size_stride(primals_3898, (2, ), (1, ))
    assert_size_stride(primals_3899, (2, ), (1, ))
    assert_size_stride(primals_3900, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3901, (2, ), (1, ))
    assert_size_stride(primals_3902, (2, ), (1, ))
    assert_size_stride(primals_3903, (2, ), (1, ))
    assert_size_stride(primals_3904, (2, ), (1, ))
    assert_size_stride(primals_3905, (2, ), (1, ))
    assert_size_stride(primals_3906, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3907, (4, ), (1, ))
    assert_size_stride(primals_3908, (4, ), (1, ))
    assert_size_stride(primals_3909, (4, ), (1, ))
    assert_size_stride(primals_3910, (4, ), (1, ))
    assert_size_stride(primals_3911, (4, ), (1, ))
    assert_size_stride(primals_3912, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3913, (2, ), (1, ))
    assert_size_stride(primals_3914, (2, ), (1, ))
    assert_size_stride(primals_3915, (2, ), (1, ))
    assert_size_stride(primals_3916, (2, ), (1, ))
    assert_size_stride(primals_3917, (2, ), (1, ))
    assert_size_stride(primals_3918, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3919, (2, ), (1, ))
    assert_size_stride(primals_3920, (2, ), (1, ))
    assert_size_stride(primals_3921, (2, ), (1, ))
    assert_size_stride(primals_3922, (2, ), (1, ))
    assert_size_stride(primals_3923, (2, ), (1, ))
    assert_size_stride(primals_3924, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3925, (4, ), (1, ))
    assert_size_stride(primals_3926, (4, ), (1, ))
    assert_size_stride(primals_3927, (4, ), (1, ))
    assert_size_stride(primals_3928, (4, ), (1, ))
    assert_size_stride(primals_3929, (4, ), (1, ))
    assert_size_stride(primals_3930, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3931, (2, ), (1, ))
    assert_size_stride(primals_3932, (2, ), (1, ))
    assert_size_stride(primals_3933, (2, ), (1, ))
    assert_size_stride(primals_3934, (2, ), (1, ))
    assert_size_stride(primals_3935, (2, ), (1, ))
    assert_size_stride(primals_3936, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3937, (2, ), (1, ))
    assert_size_stride(primals_3938, (2, ), (1, ))
    assert_size_stride(primals_3939, (2, ), (1, ))
    assert_size_stride(primals_3940, (2, ), (1, ))
    assert_size_stride(primals_3941, (2, ), (1, ))
    assert_size_stride(primals_3942, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3943, (4, ), (1, ))
    assert_size_stride(primals_3944, (4, ), (1, ))
    assert_size_stride(primals_3945, (4, ), (1, ))
    assert_size_stride(primals_3946, (4, ), (1, ))
    assert_size_stride(primals_3947, (4, ), (1, ))
    assert_size_stride(primals_3948, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3949, (2, ), (1, ))
    assert_size_stride(primals_3950, (2, ), (1, ))
    assert_size_stride(primals_3951, (2, ), (1, ))
    assert_size_stride(primals_3952, (2, ), (1, ))
    assert_size_stride(primals_3953, (2, ), (1, ))
    assert_size_stride(primals_3954, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3955, (2, ), (1, ))
    assert_size_stride(primals_3956, (2, ), (1, ))
    assert_size_stride(primals_3957, (2, ), (1, ))
    assert_size_stride(primals_3958, (2, ), (1, ))
    assert_size_stride(primals_3959, (2, ), (1, ))
    assert_size_stride(primals_3960, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3961, (4, ), (1, ))
    assert_size_stride(primals_3962, (4, ), (1, ))
    assert_size_stride(primals_3963, (4, ), (1, ))
    assert_size_stride(primals_3964, (4, ), (1, ))
    assert_size_stride(primals_3965, (4, ), (1, ))
    assert_size_stride(primals_3966, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3967, (2, ), (1, ))
    assert_size_stride(primals_3968, (2, ), (1, ))
    assert_size_stride(primals_3969, (2, ), (1, ))
    assert_size_stride(primals_3970, (2, ), (1, ))
    assert_size_stride(primals_3971, (2, ), (1, ))
    assert_size_stride(primals_3972, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3973, (2, ), (1, ))
    assert_size_stride(primals_3974, (2, ), (1, ))
    assert_size_stride(primals_3975, (2, ), (1, ))
    assert_size_stride(primals_3976, (2, ), (1, ))
    assert_size_stride(primals_3977, (2, ), (1, ))
    assert_size_stride(primals_3978, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3979, (4, ), (1, ))
    assert_size_stride(primals_3980, (4, ), (1, ))
    assert_size_stride(primals_3981, (4, ), (1, ))
    assert_size_stride(primals_3982, (4, ), (1, ))
    assert_size_stride(primals_3983, (4, ), (1, ))
    assert_size_stride(primals_3984, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_3985, (2, ), (1, ))
    assert_size_stride(primals_3986, (2, ), (1, ))
    assert_size_stride(primals_3987, (2, ), (1, ))
    assert_size_stride(primals_3988, (2, ), (1, ))
    assert_size_stride(primals_3989, (2, ), (1, ))
    assert_size_stride(primals_3990, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_3991, (2, ), (1, ))
    assert_size_stride(primals_3992, (2, ), (1, ))
    assert_size_stride(primals_3993, (2, ), (1, ))
    assert_size_stride(primals_3994, (2, ), (1, ))
    assert_size_stride(primals_3995, (2, ), (1, ))
    assert_size_stride(primals_3996, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_3997, (4, ), (1, ))
    assert_size_stride(primals_3998, (4, ), (1, ))
    assert_size_stride(primals_3999, (4, ), (1, ))
    assert_size_stride(primals_4000, (4, ), (1, ))
    assert_size_stride(primals_4001, (4, ), (1, ))
    assert_size_stride(primals_4002, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4003, (2, ), (1, ))
    assert_size_stride(primals_4004, (2, ), (1, ))
    assert_size_stride(primals_4005, (2, ), (1, ))
    assert_size_stride(primals_4006, (2, ), (1, ))
    assert_size_stride(primals_4007, (2, ), (1, ))
    assert_size_stride(primals_4008, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4009, (2, ), (1, ))
    assert_size_stride(primals_4010, (2, ), (1, ))
    assert_size_stride(primals_4011, (2, ), (1, ))
    assert_size_stride(primals_4012, (2, ), (1, ))
    assert_size_stride(primals_4013, (2, ), (1, ))
    assert_size_stride(primals_4014, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4015, (4, ), (1, ))
    assert_size_stride(primals_4016, (4, ), (1, ))
    assert_size_stride(primals_4017, (4, ), (1, ))
    assert_size_stride(primals_4018, (4, ), (1, ))
    assert_size_stride(primals_4019, (4, ), (1, ))
    assert_size_stride(primals_4020, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4021, (2, ), (1, ))
    assert_size_stride(primals_4022, (2, ), (1, ))
    assert_size_stride(primals_4023, (2, ), (1, ))
    assert_size_stride(primals_4024, (2, ), (1, ))
    assert_size_stride(primals_4025, (2, ), (1, ))
    assert_size_stride(primals_4026, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4027, (2, ), (1, ))
    assert_size_stride(primals_4028, (2, ), (1, ))
    assert_size_stride(primals_4029, (2, ), (1, ))
    assert_size_stride(primals_4030, (2, ), (1, ))
    assert_size_stride(primals_4031, (2, ), (1, ))
    assert_size_stride(primals_4032, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4033, (4, ), (1, ))
    assert_size_stride(primals_4034, (4, ), (1, ))
    assert_size_stride(primals_4035, (4, ), (1, ))
    assert_size_stride(primals_4036, (4, ), (1, ))
    assert_size_stride(primals_4037, (4, ), (1, ))
    assert_size_stride(primals_4038, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4039, (2, ), (1, ))
    assert_size_stride(primals_4040, (2, ), (1, ))
    assert_size_stride(primals_4041, (2, ), (1, ))
    assert_size_stride(primals_4042, (2, ), (1, ))
    assert_size_stride(primals_4043, (2, ), (1, ))
    assert_size_stride(primals_4044, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4045, (2, ), (1, ))
    assert_size_stride(primals_4046, (2, ), (1, ))
    assert_size_stride(primals_4047, (2, ), (1, ))
    assert_size_stride(primals_4048, (2, ), (1, ))
    assert_size_stride(primals_4049, (2, ), (1, ))
    assert_size_stride(primals_4050, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4051, (4, ), (1, ))
    assert_size_stride(primals_4052, (4, ), (1, ))
    assert_size_stride(primals_4053, (4, ), (1, ))
    assert_size_stride(primals_4054, (4, ), (1, ))
    assert_size_stride(primals_4055, (4, ), (1, ))
    assert_size_stride(primals_4056, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4057, (2, ), (1, ))
    assert_size_stride(primals_4058, (2, ), (1, ))
    assert_size_stride(primals_4059, (2, ), (1, ))
    assert_size_stride(primals_4060, (2, ), (1, ))
    assert_size_stride(primals_4061, (2, ), (1, ))
    assert_size_stride(primals_4062, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4063, (2, ), (1, ))
    assert_size_stride(primals_4064, (2, ), (1, ))
    assert_size_stride(primals_4065, (2, ), (1, ))
    assert_size_stride(primals_4066, (2, ), (1, ))
    assert_size_stride(primals_4067, (2, ), (1, ))
    assert_size_stride(primals_4068, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4069, (4, ), (1, ))
    assert_size_stride(primals_4070, (4, ), (1, ))
    assert_size_stride(primals_4071, (4, ), (1, ))
    assert_size_stride(primals_4072, (4, ), (1, ))
    assert_size_stride(primals_4073, (4, ), (1, ))
    assert_size_stride(primals_4074, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4075, (2, ), (1, ))
    assert_size_stride(primals_4076, (2, ), (1, ))
    assert_size_stride(primals_4077, (2, ), (1, ))
    assert_size_stride(primals_4078, (2, ), (1, ))
    assert_size_stride(primals_4079, (2, ), (1, ))
    assert_size_stride(primals_4080, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4081, (2, ), (1, ))
    assert_size_stride(primals_4082, (2, ), (1, ))
    assert_size_stride(primals_4083, (2, ), (1, ))
    assert_size_stride(primals_4084, (2, ), (1, ))
    assert_size_stride(primals_4085, (2, ), (1, ))
    assert_size_stride(primals_4086, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4087, (4, ), (1, ))
    assert_size_stride(primals_4088, (4, ), (1, ))
    assert_size_stride(primals_4089, (4, ), (1, ))
    assert_size_stride(primals_4090, (4, ), (1, ))
    assert_size_stride(primals_4091, (4, ), (1, ))
    assert_size_stride(primals_4092, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4093, (2, ), (1, ))
    assert_size_stride(primals_4094, (2, ), (1, ))
    assert_size_stride(primals_4095, (2, ), (1, ))
    assert_size_stride(primals_4096, (2, ), (1, ))
    assert_size_stride(primals_4097, (2, ), (1, ))
    assert_size_stride(primals_4098, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4099, (2, ), (1, ))
    assert_size_stride(primals_4100, (2, ), (1, ))
    assert_size_stride(primals_4101, (2, ), (1, ))
    assert_size_stride(primals_4102, (2, ), (1, ))
    assert_size_stride(primals_4103, (2, ), (1, ))
    assert_size_stride(primals_4104, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4105, (4, ), (1, ))
    assert_size_stride(primals_4106, (4, ), (1, ))
    assert_size_stride(primals_4107, (4, ), (1, ))
    assert_size_stride(primals_4108, (4, ), (1, ))
    assert_size_stride(primals_4109, (4, ), (1, ))
    assert_size_stride(primals_4110, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4111, (2, ), (1, ))
    assert_size_stride(primals_4112, (2, ), (1, ))
    assert_size_stride(primals_4113, (2, ), (1, ))
    assert_size_stride(primals_4114, (2, ), (1, ))
    assert_size_stride(primals_4115, (2, ), (1, ))
    assert_size_stride(primals_4116, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4117, (2, ), (1, ))
    assert_size_stride(primals_4118, (2, ), (1, ))
    assert_size_stride(primals_4119, (2, ), (1, ))
    assert_size_stride(primals_4120, (2, ), (1, ))
    assert_size_stride(primals_4121, (2, ), (1, ))
    assert_size_stride(primals_4122, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4123, (4, ), (1, ))
    assert_size_stride(primals_4124, (4, ), (1, ))
    assert_size_stride(primals_4125, (4, ), (1, ))
    assert_size_stride(primals_4126, (4, ), (1, ))
    assert_size_stride(primals_4127, (4, ), (1, ))
    assert_size_stride(primals_4128, (2, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4129, (2, ), (1, ))
    assert_size_stride(primals_4130, (2, ), (1, ))
    assert_size_stride(primals_4131, (2, ), (1, ))
    assert_size_stride(primals_4132, (2, ), (1, ))
    assert_size_stride(primals_4133, (2, ), (1, ))
    assert_size_stride(primals_4134, (2, 2, 3, 3), (18, 9, 3, 1))
    assert_size_stride(primals_4135, (2, ), (1, ))
    assert_size_stride(primals_4136, (2, ), (1, ))
    assert_size_stride(primals_4137, (2, ), (1, ))
    assert_size_stride(primals_4138, (2, ), (1, ))
    assert_size_stride(primals_4139, (2, ), (1, ))
    assert_size_stride(primals_4140, (4, 2, 1, 1), (2, 1, 1, 1))
    assert_size_stride(primals_4141, (4, ), (1, ))
    assert_size_stride(primals_4142, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4143, (4, ), (1, ))
    assert_size_stride(primals_4144, (4, ), (1, ))
    assert_size_stride(primals_4145, (4, ), (1, ))
    assert_size_stride(primals_4146, (4, ), (1, ))
    assert_size_stride(primals_4147, (4, ), (1, ))
    assert_size_stride(primals_4148, (4, 4, 1, 1), (4, 1, 1, 1))
    assert_size_stride(primals_4149, (4, ), (1, ))
    with torch.cuda._DeviceGuard(0):
        torch.cuda.set_device(0)
        buf0 = empty_strided_cuda((64, 3, 7, 7), (147, 1, 21, 3), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_0.run(primals_1, buf0, 192, 49, grid=grid(192, 49), stream=stream0)
        del primals_1
        buf1 = empty_strided_cuda((4, 3, 64, 64), (12288, 1, 192, 3), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_1.run(primals_3, buf1, 12, 4096, grid=grid(12, 4096), stream=stream0)
        del primals_3
        buf2 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_2.run(primals_18, buf2, 4096, 9, grid=grid(4096, 9), stream=stream0)
        del primals_18
        buf3 = empty_strided_cuda((64, 64, 3, 3), (576, 1, 192, 64), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_2.run(primals_42, buf3, 4096, 9, grid=grid(4096, 9), stream=stream0)
        del primals_42
        buf4 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_60, buf4, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_60
        buf5 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_84, buf5, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_84
        buf6 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_102, buf6, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_102
        buf7 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_120, buf7, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_120
        buf8 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_138, buf8, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_138
        buf9 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_156, buf9, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_156
        buf10 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_174, buf10, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_174
        buf11 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_192, buf11, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_192
        buf12 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_210, buf12, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_210
        buf13 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_228, buf13, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_228
        buf14 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_246, buf14, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_246
        buf15 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_264, buf15, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_264
        buf16 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_282, buf16, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_282
        buf17 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_300, buf17, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_300
        buf18 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_318, buf18, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_318
        buf19 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_336, buf19, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_336
        buf20 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_354, buf20, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_354
        buf21 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_372, buf21, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_372
        buf22 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_390, buf22, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_390
        buf23 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_408, buf23, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_408
        buf24 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_426, buf24, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_426
        buf25 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_444, buf25, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_444
        buf26 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_462, buf26, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_462
        buf27 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_480, buf27, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_480
        buf28 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_498, buf28, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_498
        buf29 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_516, buf29, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_516
        buf30 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_534, buf30, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_534
        buf31 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_552, buf31, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_552
        buf32 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_570, buf32, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_570
        buf33 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_588, buf33, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_588
        buf34 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_606, buf34, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_606
        buf35 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_624, buf35, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_624
        buf36 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_642, buf36, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_642
        buf37 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_660, buf37, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_660
        buf38 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_678, buf38, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_678
        buf39 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_696, buf39, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_696
        buf40 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_714, buf40, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_714
        buf41 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_732, buf41, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_732
        buf42 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_750, buf42, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_750
        buf43 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_768, buf43, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_768
        buf44 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_786, buf44, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_786
        buf45 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_804, buf45, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_804
        buf46 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_822, buf46, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_822
        buf47 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_840, buf47, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_840
        buf48 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_858, buf48, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_858
        buf49 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_876, buf49, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_876
        buf50 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_894, buf50, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_894
        buf51 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_912, buf51, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_912
        buf52 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_930, buf52, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_930
        buf53 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_948, buf53, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_948
        buf54 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_966, buf54, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_966
        buf55 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_984, buf55, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_984
        buf56 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1002, buf56, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1002
        buf57 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1020, buf57, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1020
        buf58 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1038, buf58, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1038
        buf59 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1056, buf59, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1056
        buf60 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1074, buf60, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1074
        buf61 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1104, buf61, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1104
        buf62 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1122, buf62, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1122
        buf63 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1140, buf63, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1140
        buf64 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1158, buf64, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1158
        buf65 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1176, buf65, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1176
        buf66 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1194, buf66, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1194
        buf67 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1212, buf67, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1212
        buf68 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1230, buf68, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1230
        buf69 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1248, buf69, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1248
        buf70 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1266, buf70, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1266
        buf71 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1284, buf71, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1284
        buf72 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1302, buf72, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1302
        buf73 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1320, buf73, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1320
        buf74 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1338, buf74, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1338
        buf75 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1356, buf75, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1356
        buf76 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1374, buf76, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1374
        buf77 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1392, buf77, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1392
        buf78 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1410, buf78, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1410
        buf79 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1428, buf79, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1428
        buf80 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1446, buf80, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1446
        buf81 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1464, buf81, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1464
        buf82 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1482, buf82, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1482
        buf83 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1500, buf83, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1500
        buf84 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1518, buf84, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1518
        buf85 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1536, buf85, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1536
        buf86 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1554, buf86, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1554
        buf87 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1572, buf87, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1572
        buf88 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1590, buf88, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1590
        buf89 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1608, buf89, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1608
        buf90 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1626, buf90, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1626
        buf91 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1644, buf91, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1644
        buf92 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1662, buf92, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1662
        buf93 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1680, buf93, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1680
        buf94 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1698, buf94, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1698
        buf95 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1716, buf95, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1716
        buf96 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1734, buf96, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1734
        buf97 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1752, buf97, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1752
        buf98 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1770, buf98, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1770
        buf99 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1788, buf99, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1788
        buf100 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1806, buf100, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1806
        buf101 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1824, buf101, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1824
        buf102 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1842, buf102, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1842
        buf103 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1860, buf103, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1860
        buf104 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1878, buf104, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1878
        buf105 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1896, buf105, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1896
        buf106 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1914, buf106, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1914
        buf107 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1932, buf107, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1932
        buf108 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1950, buf108, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1950
        buf109 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1968, buf109, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1968
        buf110 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_1986, buf110, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_1986
        buf111 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2004, buf111, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2004
        buf112 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2022, buf112, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2022
        buf113 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2040, buf113, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2040
        buf114 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2058, buf114, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2058
        buf115 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2076, buf115, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2076
        buf116 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2094, buf116, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2094
        buf117 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2124, buf117, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2124
        buf118 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2142, buf118, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2142
        buf119 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2160, buf119, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2160
        buf120 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2178, buf120, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2178
        buf121 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2196, buf121, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2196
        buf122 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2214, buf122, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2214
        buf123 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2232, buf123, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2232
        buf124 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2250, buf124, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2250
        buf125 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2268, buf125, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2268
        buf126 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2286, buf126, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2286
        buf127 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2304, buf127, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2304
        buf128 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2322, buf128, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2322
        buf129 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2340, buf129, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2340
        buf130 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2358, buf130, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2358
        buf131 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2376, buf131, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2376
        buf132 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2394, buf132, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2394
        buf133 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2412, buf133, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2412
        buf134 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2430, buf134, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2430
        buf135 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2448, buf135, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2448
        buf136 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2466, buf136, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2466
        buf137 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2484, buf137, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2484
        buf138 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2502, buf138, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2502
        buf139 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2520, buf139, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2520
        buf140 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2538, buf140, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2538
        buf141 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2556, buf141, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2556
        buf142 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2574, buf142, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2574
        buf143 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2592, buf143, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2592
        buf144 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2610, buf144, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2610
        buf145 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2628, buf145, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2628
        buf146 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2646, buf146, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2646
        buf147 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2664, buf147, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2664
        buf148 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2682, buf148, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2682
        buf149 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2700, buf149, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2700
        buf150 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2718, buf150, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2718
        buf151 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2736, buf151, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2736
        buf152 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2754, buf152, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2754
        buf153 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2772, buf153, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2772
        buf154 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2790, buf154, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2790
        buf155 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2808, buf155, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2808
        buf156 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2826, buf156, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2826
        buf157 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2844, buf157, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2844
        buf158 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2862, buf158, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2862
        buf159 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2880, buf159, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2880
        buf160 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2898, buf160, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2898
        buf161 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2916, buf161, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2916
        buf162 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2934, buf162, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2934
        buf163 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2952, buf163, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2952
        buf164 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2970, buf164, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2970
        buf165 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_2988, buf165, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_2988
        buf166 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3006, buf166, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3006
        buf167 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3024, buf167, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3024
        buf168 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3042, buf168, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3042
        buf169 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3060, buf169, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3060
        buf170 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3078, buf170, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3078
        buf171 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3096, buf171, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3096
        buf172 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3114, buf172, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3114
        buf173 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3144, buf173, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3144
        buf174 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3162, buf174, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3162
        buf175 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3180, buf175, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3180
        buf176 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3198, buf176, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3198
        buf177 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3216, buf177, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3216
        buf178 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3234, buf178, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3234
        buf179 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3252, buf179, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3252
        buf180 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3270, buf180, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3270
        buf181 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3288, buf181, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3288
        buf182 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3306, buf182, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3306
        buf183 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3324, buf183, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3324
        buf184 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3342, buf184, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3342
        buf185 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3360, buf185, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3360
        buf186 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3378, buf186, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3378
        buf187 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3396, buf187, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3396
        buf188 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3414, buf188, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3414
        buf189 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3432, buf189, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3432
        buf190 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3450, buf190, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3450
        buf191 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3468, buf191, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3468
        buf192 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3486, buf192, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3486
        buf193 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3504, buf193, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3504
        buf194 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3522, buf194, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3522
        buf195 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3540, buf195, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3540
        buf196 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3558, buf196, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3558
        buf197 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3576, buf197, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3576
        buf198 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3594, buf198, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3594
        buf199 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3612, buf199, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3612
        buf200 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3630, buf200, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3630
        buf201 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3648, buf201, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3648
        buf202 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3666, buf202, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3666
        buf203 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3684, buf203, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3684
        buf204 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3702, buf204, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3702
        buf205 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3720, buf205, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3720
        buf206 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3738, buf206, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3738
        buf207 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3756, buf207, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3756
        buf208 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3774, buf208, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3774
        buf209 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3792, buf209, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3792
        buf210 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3810, buf210, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3810
        buf211 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3828, buf211, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3828
        buf212 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3846, buf212, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3846
        buf213 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3864, buf213, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3864
        buf214 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3882, buf214, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3882
        buf215 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3900, buf215, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3900
        buf216 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3918, buf216, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3918
        buf217 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3936, buf217, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3936
        buf218 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3954, buf218, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3954
        buf219 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3972, buf219, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3972
        buf220 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_3990, buf220, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_3990
        buf221 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4008, buf221, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4008
        buf222 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4026, buf222, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4026
        buf223 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4044, buf223, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4044
        buf224 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4062, buf224, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4062
        buf225 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4080, buf225, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4080
        buf226 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4098, buf226, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4098
        buf227 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4116, buf227, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4116
        buf228 = empty_strided_cuda((2, 2, 3, 3), (18, 1, 6, 2), torch.float32)
        # Unsorted Source Nodes: [], Original ATen: []
        stream0 = get_raw_stream(0)
        triton_poi_fused_3.run(primals_4134, buf228, 4, 9, grid=grid(4, 9), stream=stream0)
        del primals_4134
        # Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.convolution]
        buf229 = extern_kernels.convolution(buf1, buf0, stride=(2, 2), padding=(3, 3), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf229, (4, 64, 32, 32), (65536, 1, 2048, 64))
        buf230 = buf229; del buf229  # reuse
        buf232 = empty_strided_cuda((4, 64, 32, 32), (65536, 1, 2048, 64), torch.float32)
        buf240 = empty_strided_cuda((4, 64, 32, 32), (65536, 1, 2048, 64), torch.float32)
        # Topologically Sorted Source Nodes: [input_1, input_2, input_3, input_4, input_5, input_13, input_14], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_4.run(buf230, primals_2, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_26, primals_27, primals_28, primals_29, buf232, buf240, 262144, grid=grid(262144), stream=stream0)
        del primals_11
        del primals_2
        del primals_29
        # Topologically Sorted Source Nodes: [input_6], Original ATen: [aten.convolution]
        buf233 = extern_kernels.convolution(buf232, primals_12, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf233, (4, 64, 32, 32), (65536, 1, 2048, 64))
        buf234 = buf233; del buf233  # reuse
        buf235 = empty_strided_cuda((4, 64, 32, 32), (65536, 1, 2048, 64), torch.float32)
        # Topologically Sorted Source Nodes: [input_6, input_7, input_8], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_5.run(buf234, primals_13, primals_14, primals_15, primals_16, primals_17, buf235, 262144, grid=grid(262144), stream=stream0)
        del primals_13
        del primals_17
        # Topologically Sorted Source Nodes: [input_9], Original ATen: [aten.convolution]
        buf236 = extern_kernels.convolution(buf235, buf2, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf236, (4, 64, 32, 32), (65536, 1, 2048, 64))
        buf237 = buf236; del buf236  # reuse
        buf238 = empty_strided_cuda((4, 64, 32, 32), (65536, 1, 2048, 64), torch.float32)
        # Topologically Sorted Source Nodes: [input_9, input_10, input_11], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_5.run(buf237, primals_19, primals_20, primals_21, primals_22, primals_23, buf238, 262144, grid=grid(262144), stream=stream0)
        del primals_19
        del primals_23
        # Topologically Sorted Source Nodes: [input_12], Original ATen: [aten.convolution]
        buf239 = extern_kernels.convolution(buf238, primals_24, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf239, (4, 128, 32, 32), (131072, 1, 4096, 128))
        # Topologically Sorted Source Nodes: [input_15], Original ATen: [aten.convolution]
        buf241 = extern_kernels.convolution(buf240, primals_30, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf241, (4, 128, 32, 32), (131072, 1, 4096, 128))
        buf242 = buf239; del buf239  # reuse
        # Topologically Sorted Source Nodes: [input_12, input_15, input_16], Original ATen: [aten.convolution, aten.add]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_6.run(buf242, primals_25, buf241, primals_31, 524288, grid=grid(524288), stream=stream0)
        del buf241
        del primals_25
        del primals_31
        buf243 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.int8)
        buf244 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
        # Topologically Sorted Source Nodes: [input_17, input_18, input_19], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_7.run(buf242, primals_32, primals_33, primals_34, primals_35, buf243, buf244, 131072, grid=grid(131072), stream=stream0)
        del primals_35
        # Topologically Sorted Source Nodes: [input_20], Original ATen: [aten.convolution]
        buf245 = extern_kernels.convolution(buf244, primals_36, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf245, (4, 64, 16, 16), (16384, 1, 1024, 64))
        buf246 = buf245; del buf245  # reuse
        buf247 = empty_strided_cuda((4, 64, 16, 16), (16384, 1, 1024, 64), torch.float32)
        # Topologically Sorted Source Nodes: [input_20, input_21, input_22], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_8.run(buf246, primals_37, primals_38, primals_39, primals_40, primals_41, buf247, 65536, grid=grid(65536), stream=stream0)
        del primals_37
        del primals_41
        # Topologically Sorted Source Nodes: [input_23], Original ATen: [aten.convolution]
        buf248 = extern_kernels.convolution(buf247, buf3, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf248, (4, 64, 16, 16), (16384, 1, 1024, 64))
        buf249 = buf248; del buf248  # reuse
        buf250 = empty_strided_cuda((4, 64, 16, 16), (16384, 1, 1024, 64), torch.float32)
        # Topologically Sorted Source Nodes: [input_23, input_24, input_25], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_8.run(buf249, primals_43, primals_44, primals_45, primals_46, primals_47, buf250, 65536, grid=grid(65536), stream=stream0)
        del primals_43
        del primals_47
        # Topologically Sorted Source Nodes: [input_26], Original ATen: [aten.convolution]
        buf251 = extern_kernels.convolution(buf250, primals_48, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf251, (4, 128, 16, 16), (32768, 1, 2048, 128))
        buf252 = buf251; del buf251  # reuse
        buf253 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
        buf261 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
        # Topologically Sorted Source Nodes: [input_17, input_26, input_27, input_28, input_29, input_37, input_38], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_9.run(buf252, primals_49, buf242, primals_50, primals_51, primals_52, primals_53, primals_68, primals_69, primals_70, primals_71, buf253, buf261, 131072, grid=grid(131072), stream=stream0)
        del primals_49
        del primals_53
        del primals_71
        # Topologically Sorted Source Nodes: [input_30], Original ATen: [aten.convolution]
        buf254 = extern_kernels.convolution(buf253, primals_54, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf254, (4, 2, 16, 16), (512, 1, 32, 2))
        buf255 = buf254; del buf254  # reuse
        buf256 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_30, input_31, input_32], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf255, primals_55, primals_56, primals_57, primals_58, primals_59, buf256, 2048, grid=grid(2048), stream=stream0)
        del primals_55
        del primals_59
        # Topologically Sorted Source Nodes: [input_33], Original ATen: [aten.convolution]
        buf257 = extern_kernels.convolution(buf256, buf4, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf257, (4, 2, 16, 16), (512, 1, 32, 2))
        buf258 = buf257; del buf257  # reuse
        buf259 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_33, input_34, input_35], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf258, primals_61, primals_62, primals_63, primals_64, primals_65, buf259, 2048, grid=grid(2048), stream=stream0)
        del primals_61
        del primals_65
        # Topologically Sorted Source Nodes: [input_36], Original ATen: [aten.convolution]
        buf260 = extern_kernels.convolution(buf259, primals_66, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf260, (4, 4, 16, 16), (1024, 1, 64, 4))
        # Topologically Sorted Source Nodes: [input_39], Original ATen: [aten.convolution]
        buf262 = extern_kernels.convolution(buf261, primals_72, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf262, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf263 = buf260; del buf260  # reuse
        buf264 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_36, input_39, input_40, input_41, input_42], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_11.run(buf263, primals_67, buf262, primals_73, primals_74, primals_75, primals_76, primals_77, buf264, 4096, grid=grid(4096), stream=stream0)
        del primals_67
        del primals_73
        del primals_77
        # Topologically Sorted Source Nodes: [input_43], Original ATen: [aten.convolution]
        buf265 = extern_kernels.convolution(buf264, primals_78, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf265, (4, 2, 16, 16), (512, 1, 32, 2))
        buf266 = buf265; del buf265  # reuse
        buf267 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_43, input_44, input_45], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf266, primals_79, primals_80, primals_81, primals_82, primals_83, buf267, 2048, grid=grid(2048), stream=stream0)
        del primals_79
        del primals_83
        # Topologically Sorted Source Nodes: [input_46], Original ATen: [aten.convolution]
        buf268 = extern_kernels.convolution(buf267, buf5, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf268, (4, 2, 16, 16), (512, 1, 32, 2))
        buf269 = buf268; del buf268  # reuse
        buf270 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_46, input_47, input_48], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf269, primals_85, primals_86, primals_87, primals_88, primals_89, buf270, 2048, grid=grid(2048), stream=stream0)
        del primals_85
        del primals_89
        # Topologically Sorted Source Nodes: [input_49], Original ATen: [aten.convolution]
        buf271 = extern_kernels.convolution(buf270, primals_90, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf271, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf272 = buf262; del buf262  # reuse
        # Topologically Sorted Source Nodes: [input_49, up1, input_50, input_51], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf271, primals_91, buf263, primals_92, primals_93, primals_94, primals_95, buf272, 4096, grid=grid(4096), stream=stream0)
        del primals_95
        # Topologically Sorted Source Nodes: [input_52], Original ATen: [aten.convolution]
        buf273 = extern_kernels.convolution(buf272, primals_96, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf273, (4, 2, 16, 16), (512, 1, 32, 2))
        buf274 = buf273; del buf273  # reuse
        buf275 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_52, input_53, input_54], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf274, primals_97, primals_98, primals_99, primals_100, primals_101, buf275, 2048, grid=grid(2048), stream=stream0)
        del primals_101
        del primals_97
        # Topologically Sorted Source Nodes: [input_55], Original ATen: [aten.convolution]
        buf276 = extern_kernels.convolution(buf275, buf6, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf276, (4, 2, 16, 16), (512, 1, 32, 2))
        buf277 = buf276; del buf276  # reuse
        buf278 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_55, input_56, input_57], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf277, primals_103, primals_104, primals_105, primals_106, primals_107, buf278, 2048, grid=grid(2048), stream=stream0)
        del primals_103
        del primals_107
        # Topologically Sorted Source Nodes: [input_58], Original ATen: [aten.convolution]
        buf279 = extern_kernels.convolution(buf278, primals_108, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf279, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf280 = buf279; del buf279  # reuse
        buf281 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_49, up1, input_58, up1_1, input_59, input_60], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf280, primals_109, buf271, primals_91, buf263, primals_110, primals_111, primals_112, primals_113, buf281, 4096, grid=grid(4096), stream=stream0)
        del primals_109
        del primals_113
        # Topologically Sorted Source Nodes: [input_61], Original ATen: [aten.convolution]
        buf282 = extern_kernels.convolution(buf281, primals_114, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf282, (4, 2, 16, 16), (512, 1, 32, 2))
        buf283 = buf282; del buf282  # reuse
        buf284 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_61, input_62, input_63], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf283, primals_115, primals_116, primals_117, primals_118, primals_119, buf284, 2048, grid=grid(2048), stream=stream0)
        del primals_115
        del primals_119
        # Topologically Sorted Source Nodes: [input_64], Original ATen: [aten.convolution]
        buf285 = extern_kernels.convolution(buf284, buf7, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf285, (4, 2, 16, 16), (512, 1, 32, 2))
        buf286 = buf285; del buf285  # reuse
        buf287 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_64, input_65, input_66], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf286, primals_121, primals_122, primals_123, primals_124, primals_125, buf287, 2048, grid=grid(2048), stream=stream0)
        del primals_121
        del primals_125
        # Topologically Sorted Source Nodes: [input_67], Original ATen: [aten.convolution]
        buf288 = extern_kernels.convolution(buf287, primals_126, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf288, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf289 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_67, up1_2, input_68, input_69], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf288, primals_127, buf280, primals_128, primals_129, primals_130, primals_131, buf289, 4096, grid=grid(4096), stream=stream0)
        del primals_131
        # Topologically Sorted Source Nodes: [input_70], Original ATen: [aten.convolution]
        buf290 = extern_kernels.convolution(buf289, primals_132, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf290, (4, 2, 16, 16), (512, 1, 32, 2))
        buf291 = buf290; del buf290  # reuse
        buf292 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_70, input_71, input_72], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf291, primals_133, primals_134, primals_135, primals_136, primals_137, buf292, 2048, grid=grid(2048), stream=stream0)
        del primals_133
        del primals_137
        # Topologically Sorted Source Nodes: [input_73], Original ATen: [aten.convolution]
        buf293 = extern_kernels.convolution(buf292, buf8, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf293, (4, 2, 16, 16), (512, 1, 32, 2))
        buf294 = buf293; del buf293  # reuse
        buf295 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_73, input_74, input_75], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf294, primals_139, primals_140, primals_141, primals_142, primals_143, buf295, 2048, grid=grid(2048), stream=stream0)
        del primals_139
        del primals_143
        # Topologically Sorted Source Nodes: [input_76], Original ATen: [aten.convolution]
        buf296 = extern_kernels.convolution(buf295, primals_144, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf296, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf297 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.int8)
        buf298 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1, input_77, input_78], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14.run(buf263, primals_146, primals_147, primals_148, primals_149, buf297, buf298, 1024, grid=grid(1024), stream=stream0)
        del primals_149
        # Topologically Sorted Source Nodes: [input_79], Original ATen: [aten.convolution]
        buf299 = extern_kernels.convolution(buf298, primals_150, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf299, (4, 2, 8, 8), (128, 1, 16, 2))
        buf300 = buf299; del buf299  # reuse
        buf301 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_79, input_80, input_81], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf300, primals_151, primals_152, primals_153, primals_154, primals_155, buf301, 512, grid=grid(512), stream=stream0)
        del primals_151
        del primals_155
        # Topologically Sorted Source Nodes: [input_82], Original ATen: [aten.convolution]
        buf302 = extern_kernels.convolution(buf301, buf9, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf302, (4, 2, 8, 8), (128, 1, 16, 2))
        buf303 = buf302; del buf302  # reuse
        buf304 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_82, input_83, input_84], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf303, primals_157, primals_158, primals_159, primals_160, primals_161, buf304, 512, grid=grid(512), stream=stream0)
        del primals_157
        del primals_161
        # Topologically Sorted Source Nodes: [input_85], Original ATen: [aten.convolution]
        buf305 = extern_kernels.convolution(buf304, primals_162, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf305, (4, 4, 8, 8), (256, 1, 32, 4))
        buf306 = buf305; del buf305  # reuse
        buf307 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1, input_85, low1_1, input_86, input_87], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16.run(buf306, primals_163, buf263, primals_164, primals_165, primals_166, primals_167, buf307, 1024, grid=grid(1024), stream=stream0)
        del primals_163
        del primals_167
        # Topologically Sorted Source Nodes: [input_88], Original ATen: [aten.convolution]
        buf308 = extern_kernels.convolution(buf307, primals_168, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf308, (4, 2, 8, 8), (128, 1, 16, 2))
        buf309 = buf308; del buf308  # reuse
        buf310 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_88, input_89, input_90], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf309, primals_169, primals_170, primals_171, primals_172, primals_173, buf310, 512, grid=grid(512), stream=stream0)
        del primals_169
        del primals_173
        # Topologically Sorted Source Nodes: [input_91], Original ATen: [aten.convolution]
        buf311 = extern_kernels.convolution(buf310, buf10, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf311, (4, 2, 8, 8), (128, 1, 16, 2))
        buf312 = buf311; del buf311  # reuse
        buf313 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_91, input_92, input_93], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf312, primals_175, primals_176, primals_177, primals_178, primals_179, buf313, 512, grid=grid(512), stream=stream0)
        del primals_175
        del primals_179
        # Topologically Sorted Source Nodes: [input_94], Original ATen: [aten.convolution]
        buf314 = extern_kernels.convolution(buf313, primals_180, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf314, (4, 4, 8, 8), (256, 1, 32, 4))
        buf315 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_94, low1_2, input_95, input_96], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf314, primals_181, buf306, primals_182, primals_183, primals_184, primals_185, buf315, 1024, grid=grid(1024), stream=stream0)
        del primals_185
        # Topologically Sorted Source Nodes: [input_97], Original ATen: [aten.convolution]
        buf316 = extern_kernels.convolution(buf315, primals_186, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf316, (4, 2, 8, 8), (128, 1, 16, 2))
        buf317 = buf316; del buf316  # reuse
        buf318 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_97, input_98, input_99], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf317, primals_187, primals_188, primals_189, primals_190, primals_191, buf318, 512, grid=grid(512), stream=stream0)
        del primals_187
        del primals_191
        # Topologically Sorted Source Nodes: [input_100], Original ATen: [aten.convolution]
        buf319 = extern_kernels.convolution(buf318, buf11, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf319, (4, 2, 8, 8), (128, 1, 16, 2))
        buf320 = buf319; del buf319  # reuse
        buf321 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_100, input_101, input_102], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf320, primals_193, primals_194, primals_195, primals_196, primals_197, buf321, 512, grid=grid(512), stream=stream0)
        del primals_193
        del primals_197
        # Topologically Sorted Source Nodes: [input_103], Original ATen: [aten.convolution]
        buf322 = extern_kernels.convolution(buf321, primals_198, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf322, (4, 4, 8, 8), (256, 1, 32, 4))
        buf323 = buf322; del buf322  # reuse
        buf324 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2421 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_94, low1_2, input_103, low1_3, input_104, input_105], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18.run(buf323, primals_199, buf314, primals_181, buf306, primals_200, primals_201, primals_202, primals_203, buf324, buf2421, 1024, grid=grid(1024), stream=stream0)
        del primals_199
        del primals_200
        del primals_203
        # Topologically Sorted Source Nodes: [input_106], Original ATen: [aten.convolution]
        buf325 = extern_kernels.convolution(buf324, primals_204, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf325, (4, 2, 8, 8), (128, 1, 16, 2))
        buf326 = buf325; del buf325  # reuse
        buf327 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_106, input_107, input_108], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf326, primals_205, primals_206, primals_207, primals_208, primals_209, buf327, 512, grid=grid(512), stream=stream0)
        del primals_205
        del primals_209
        # Topologically Sorted Source Nodes: [input_109], Original ATen: [aten.convolution]
        buf328 = extern_kernels.convolution(buf327, buf12, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf328, (4, 2, 8, 8), (128, 1, 16, 2))
        buf329 = buf328; del buf328  # reuse
        buf330 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_109, input_110, input_111], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf329, primals_211, primals_212, primals_213, primals_214, primals_215, buf330, 512, grid=grid(512), stream=stream0)
        del primals_211
        del primals_215
        # Topologically Sorted Source Nodes: [input_112], Original ATen: [aten.convolution]
        buf331 = extern_kernels.convolution(buf330, primals_216, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf331, (4, 4, 8, 8), (256, 1, 32, 4))
        buf332 = buf331; del buf331  # reuse
        buf333 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_112, low1_4, input_113, input_114], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19.run(buf332, primals_217, buf323, primals_218, primals_219, primals_220, primals_221, buf333, 1024, grid=grid(1024), stream=stream0)
        del primals_217
        del primals_221
        # Topologically Sorted Source Nodes: [input_115], Original ATen: [aten.convolution]
        buf334 = extern_kernels.convolution(buf333, primals_222, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf334, (4, 2, 8, 8), (128, 1, 16, 2))
        buf335 = buf334; del buf334  # reuse
        buf336 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_115, input_116, input_117], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf335, primals_223, primals_224, primals_225, primals_226, primals_227, buf336, 512, grid=grid(512), stream=stream0)
        del primals_223
        del primals_227
        # Topologically Sorted Source Nodes: [input_118], Original ATen: [aten.convolution]
        buf337 = extern_kernels.convolution(buf336, buf13, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf337, (4, 2, 8, 8), (128, 1, 16, 2))
        buf338 = buf337; del buf337  # reuse
        buf339 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_118, input_119, input_120], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf338, primals_229, primals_230, primals_231, primals_232, primals_233, buf339, 512, grid=grid(512), stream=stream0)
        del primals_229
        del primals_233
        # Topologically Sorted Source Nodes: [input_121], Original ATen: [aten.convolution]
        buf340 = extern_kernels.convolution(buf339, primals_234, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf340, (4, 4, 8, 8), (256, 1, 32, 4))
        buf341 = buf323; del buf323  # reuse
        # Topologically Sorted Source Nodes: [input_121, up1_4, input_122, input_123], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf340, primals_235, buf332, primals_236, primals_237, primals_238, primals_239, buf341, 1024, grid=grid(1024), stream=stream0)
        del primals_239
        # Topologically Sorted Source Nodes: [input_124], Original ATen: [aten.convolution]
        buf342 = extern_kernels.convolution(buf341, primals_240, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf342, (4, 2, 8, 8), (128, 1, 16, 2))
        buf343 = buf342; del buf342  # reuse
        buf344 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_124, input_125, input_126], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf343, primals_241, primals_242, primals_243, primals_244, primals_245, buf344, 512, grid=grid(512), stream=stream0)
        del primals_241
        del primals_245
        # Topologically Sorted Source Nodes: [input_127], Original ATen: [aten.convolution]
        buf345 = extern_kernels.convolution(buf344, buf14, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf345, (4, 2, 8, 8), (128, 1, 16, 2))
        buf346 = buf345; del buf345  # reuse
        buf347 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_127, input_128, input_129], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf346, primals_247, primals_248, primals_249, primals_250, primals_251, buf347, 512, grid=grid(512), stream=stream0)
        del primals_247
        del primals_251
        # Topologically Sorted Source Nodes: [input_130], Original ATen: [aten.convolution]
        buf348 = extern_kernels.convolution(buf347, primals_252, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf348, (4, 4, 8, 8), (256, 1, 32, 4))
        buf349 = buf348; del buf348  # reuse
        buf350 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_121, up1_4, input_130, up1_5, input_131, input_132], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf349, primals_253, buf340, primals_235, buf332, primals_254, primals_255, primals_256, primals_257, buf350, 1024, grid=grid(1024), stream=stream0)
        del primals_253
        del primals_257
        # Topologically Sorted Source Nodes: [input_133], Original ATen: [aten.convolution]
        buf351 = extern_kernels.convolution(buf350, primals_258, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf351, (4, 2, 8, 8), (128, 1, 16, 2))
        buf352 = buf351; del buf351  # reuse
        buf353 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_133, input_134, input_135], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf352, primals_259, primals_260, primals_261, primals_262, primals_263, buf353, 512, grid=grid(512), stream=stream0)
        del primals_259
        del primals_263
        # Topologically Sorted Source Nodes: [input_136], Original ATen: [aten.convolution]
        buf354 = extern_kernels.convolution(buf353, buf15, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf354, (4, 2, 8, 8), (128, 1, 16, 2))
        buf355 = buf354; del buf354  # reuse
        buf356 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_136, input_137, input_138], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf355, primals_265, primals_266, primals_267, primals_268, primals_269, buf356, 512, grid=grid(512), stream=stream0)
        del primals_265
        del primals_269
        # Topologically Sorted Source Nodes: [input_139], Original ATen: [aten.convolution]
        buf357 = extern_kernels.convolution(buf356, primals_270, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf357, (4, 4, 8, 8), (256, 1, 32, 4))
        buf358 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_139, up1_6, input_140, input_141], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf357, primals_271, buf349, primals_272, primals_273, primals_274, primals_275, buf358, 1024, grid=grid(1024), stream=stream0)
        del primals_275
        # Topologically Sorted Source Nodes: [input_142], Original ATen: [aten.convolution]
        buf359 = extern_kernels.convolution(buf358, primals_276, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf359, (4, 2, 8, 8), (128, 1, 16, 2))
        buf360 = buf359; del buf359  # reuse
        buf361 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_142, input_143, input_144], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf360, primals_277, primals_278, primals_279, primals_280, primals_281, buf361, 512, grid=grid(512), stream=stream0)
        del primals_277
        del primals_281
        # Topologically Sorted Source Nodes: [input_145], Original ATen: [aten.convolution]
        buf362 = extern_kernels.convolution(buf361, buf16, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf362, (4, 2, 8, 8), (128, 1, 16, 2))
        buf363 = buf362; del buf362  # reuse
        buf364 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_145, input_146, input_147], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf363, primals_283, primals_284, primals_285, primals_286, primals_287, buf364, 512, grid=grid(512), stream=stream0)
        del primals_283
        del primals_287
        # Topologically Sorted Source Nodes: [input_148], Original ATen: [aten.convolution]
        buf365 = extern_kernels.convolution(buf364, primals_288, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf365, (4, 4, 8, 8), (256, 1, 32, 4))
        buf366 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.int8)
        buf367 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_5, input_149, input_150], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21.run(buf332, primals_290, primals_291, primals_292, primals_293, buf366, buf367, 256, grid=grid(256), stream=stream0)
        del primals_293
        # Topologically Sorted Source Nodes: [input_151], Original ATen: [aten.convolution]
        buf368 = extern_kernels.convolution(buf367, primals_294, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf368, (4, 2, 4, 4), (32, 1, 8, 2))
        buf369 = buf368; del buf368  # reuse
        buf370 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_151, input_152, input_153], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf369, primals_295, primals_296, primals_297, primals_298, primals_299, buf370, 128, grid=grid(128), stream=stream0)
        del primals_295
        del primals_299
        # Topologically Sorted Source Nodes: [input_154], Original ATen: [aten.convolution]
        buf371 = extern_kernels.convolution(buf370, buf17, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf371, (4, 2, 4, 4), (32, 1, 8, 2))
        buf372 = buf371; del buf371  # reuse
        buf373 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_154, input_155, input_156], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf372, primals_301, primals_302, primals_303, primals_304, primals_305, buf373, 128, grid=grid(128), stream=stream0)
        del primals_301
        del primals_305
        # Topologically Sorted Source Nodes: [input_157], Original ATen: [aten.convolution]
        buf374 = extern_kernels.convolution(buf373, primals_306, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf374, (4, 4, 4, 4), (64, 1, 16, 4))
        buf375 = buf374; del buf374  # reuse
        buf376 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_5, input_157, low1_6, input_158, input_159], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23.run(buf375, primals_307, buf332, primals_308, primals_309, primals_310, primals_311, buf376, 256, grid=grid(256), stream=stream0)
        del primals_307
        del primals_311
        # Topologically Sorted Source Nodes: [input_160], Original ATen: [aten.convolution]
        buf377 = extern_kernels.convolution(buf376, primals_312, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf377, (4, 2, 4, 4), (32, 1, 8, 2))
        buf378 = buf377; del buf377  # reuse
        buf379 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_160, input_161, input_162], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf378, primals_313, primals_314, primals_315, primals_316, primals_317, buf379, 128, grid=grid(128), stream=stream0)
        del primals_313
        del primals_317
        # Topologically Sorted Source Nodes: [input_163], Original ATen: [aten.convolution]
        buf380 = extern_kernels.convolution(buf379, buf18, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf380, (4, 2, 4, 4), (32, 1, 8, 2))
        buf381 = buf380; del buf380  # reuse
        buf382 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_163, input_164, input_165], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf381, primals_319, primals_320, primals_321, primals_322, primals_323, buf382, 128, grid=grid(128), stream=stream0)
        del primals_319
        del primals_323
        # Topologically Sorted Source Nodes: [input_166], Original ATen: [aten.convolution]
        buf383 = extern_kernels.convolution(buf382, primals_324, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf383, (4, 4, 4, 4), (64, 1, 16, 4))
        buf384 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_166, low1_7, input_167, input_168], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf383, primals_325, buf375, primals_326, primals_327, primals_328, primals_329, buf384, 256, grid=grid(256), stream=stream0)
        del primals_329
        # Topologically Sorted Source Nodes: [input_169], Original ATen: [aten.convolution]
        buf385 = extern_kernels.convolution(buf384, primals_330, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf385, (4, 2, 4, 4), (32, 1, 8, 2))
        buf386 = buf385; del buf385  # reuse
        buf387 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_169, input_170, input_171], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf386, primals_331, primals_332, primals_333, primals_334, primals_335, buf387, 128, grid=grid(128), stream=stream0)
        del primals_331
        del primals_335
        # Topologically Sorted Source Nodes: [input_172], Original ATen: [aten.convolution]
        buf388 = extern_kernels.convolution(buf387, buf19, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf388, (4, 2, 4, 4), (32, 1, 8, 2))
        buf389 = buf388; del buf388  # reuse
        buf390 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_172, input_173, input_174], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf389, primals_337, primals_338, primals_339, primals_340, primals_341, buf390, 128, grid=grid(128), stream=stream0)
        del primals_337
        del primals_341
        # Topologically Sorted Source Nodes: [input_175], Original ATen: [aten.convolution]
        buf391 = extern_kernels.convolution(buf390, primals_342, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf391, (4, 4, 4, 4), (64, 1, 16, 4))
        buf392 = buf391; del buf391  # reuse
        buf393 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        buf2414 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_166, low1_7, input_175, low1_8, input_176, input_177], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25.run(buf392, primals_343, buf383, primals_325, buf375, primals_344, primals_345, primals_346, primals_347, buf393, buf2414, 256, grid=grid(256), stream=stream0)
        del primals_343
        del primals_344
        del primals_347
        # Topologically Sorted Source Nodes: [input_178], Original ATen: [aten.convolution]
        buf394 = extern_kernels.convolution(buf393, primals_348, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf394, (4, 2, 4, 4), (32, 1, 8, 2))
        buf395 = buf394; del buf394  # reuse
        buf396 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_178, input_179, input_180], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf395, primals_349, primals_350, primals_351, primals_352, primals_353, buf396, 128, grid=grid(128), stream=stream0)
        del primals_349
        del primals_353
        # Topologically Sorted Source Nodes: [input_181], Original ATen: [aten.convolution]
        buf397 = extern_kernels.convolution(buf396, buf20, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf397, (4, 2, 4, 4), (32, 1, 8, 2))
        buf398 = buf397; del buf397  # reuse
        buf399 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_181, input_182, input_183], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf398, primals_355, primals_356, primals_357, primals_358, primals_359, buf399, 128, grid=grid(128), stream=stream0)
        del primals_355
        del primals_359
        # Topologically Sorted Source Nodes: [input_184], Original ATen: [aten.convolution]
        buf400 = extern_kernels.convolution(buf399, primals_360, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf400, (4, 4, 4, 4), (64, 1, 16, 4))
        buf401 = buf400; del buf400  # reuse
        buf402 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_184, low1_9, input_185, input_186], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26.run(buf401, primals_361, buf392, primals_362, primals_363, primals_364, primals_365, buf402, 256, grid=grid(256), stream=stream0)
        del primals_361
        del primals_365
        # Topologically Sorted Source Nodes: [input_187], Original ATen: [aten.convolution]
        buf403 = extern_kernels.convolution(buf402, primals_366, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf403, (4, 2, 4, 4), (32, 1, 8, 2))
        buf404 = buf403; del buf403  # reuse
        buf405 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_187, input_188, input_189], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf404, primals_367, primals_368, primals_369, primals_370, primals_371, buf405, 128, grid=grid(128), stream=stream0)
        del primals_367
        del primals_371
        # Topologically Sorted Source Nodes: [input_190], Original ATen: [aten.convolution]
        buf406 = extern_kernels.convolution(buf405, buf21, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf406, (4, 2, 4, 4), (32, 1, 8, 2))
        buf407 = buf406; del buf406  # reuse
        buf408 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_190, input_191, input_192], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf407, primals_373, primals_374, primals_375, primals_376, primals_377, buf408, 128, grid=grid(128), stream=stream0)
        del primals_373
        del primals_377
        # Topologically Sorted Source Nodes: [input_193], Original ATen: [aten.convolution]
        buf409 = extern_kernels.convolution(buf408, primals_378, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf409, (4, 4, 4, 4), (64, 1, 16, 4))
        buf410 = buf392; del buf392  # reuse
        # Topologically Sorted Source Nodes: [input_193, up1_8, input_194, input_195], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf409, primals_379, buf401, primals_380, primals_381, primals_382, primals_383, buf410, 256, grid=grid(256), stream=stream0)
        del primals_383
        # Topologically Sorted Source Nodes: [input_196], Original ATen: [aten.convolution]
        buf411 = extern_kernels.convolution(buf410, primals_384, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf411, (4, 2, 4, 4), (32, 1, 8, 2))
        buf412 = buf411; del buf411  # reuse
        buf413 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_196, input_197, input_198], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf412, primals_385, primals_386, primals_387, primals_388, primals_389, buf413, 128, grid=grid(128), stream=stream0)
        del primals_385
        del primals_389
        # Topologically Sorted Source Nodes: [input_199], Original ATen: [aten.convolution]
        buf414 = extern_kernels.convolution(buf413, buf22, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf414, (4, 2, 4, 4), (32, 1, 8, 2))
        buf415 = buf414; del buf414  # reuse
        buf416 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_199, input_200, input_201], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf415, primals_391, primals_392, primals_393, primals_394, primals_395, buf416, 128, grid=grid(128), stream=stream0)
        del primals_391
        del primals_395
        # Topologically Sorted Source Nodes: [input_202], Original ATen: [aten.convolution]
        buf417 = extern_kernels.convolution(buf416, primals_396, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf417, (4, 4, 4, 4), (64, 1, 16, 4))
        buf418 = buf417; del buf417  # reuse
        buf419 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_193, up1_8, input_202, up1_9, input_203, input_204], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf418, primals_397, buf409, primals_379, buf401, primals_398, primals_399, primals_400, primals_401, buf419, 256, grid=grid(256), stream=stream0)
        del primals_397
        del primals_401
        # Topologically Sorted Source Nodes: [input_205], Original ATen: [aten.convolution]
        buf420 = extern_kernels.convolution(buf419, primals_402, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf420, (4, 2, 4, 4), (32, 1, 8, 2))
        buf421 = buf420; del buf420  # reuse
        buf422 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_205, input_206, input_207], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf421, primals_403, primals_404, primals_405, primals_406, primals_407, buf422, 128, grid=grid(128), stream=stream0)
        del primals_403
        del primals_407
        # Topologically Sorted Source Nodes: [input_208], Original ATen: [aten.convolution]
        buf423 = extern_kernels.convolution(buf422, buf23, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf423, (4, 2, 4, 4), (32, 1, 8, 2))
        buf424 = buf423; del buf423  # reuse
        buf425 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_208, input_209, input_210], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf424, primals_409, primals_410, primals_411, primals_412, primals_413, buf425, 128, grid=grid(128), stream=stream0)
        del primals_409
        del primals_413
        # Topologically Sorted Source Nodes: [input_211], Original ATen: [aten.convolution]
        buf426 = extern_kernels.convolution(buf425, primals_414, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf426, (4, 4, 4, 4), (64, 1, 16, 4))
        buf427 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_211, up1_10, input_212, input_213], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf426, primals_415, buf418, primals_416, primals_417, primals_418, primals_419, buf427, 256, grid=grid(256), stream=stream0)
        del primals_419
        # Topologically Sorted Source Nodes: [input_214], Original ATen: [aten.convolution]
        buf428 = extern_kernels.convolution(buf427, primals_420, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf428, (4, 2, 4, 4), (32, 1, 8, 2))
        buf429 = buf428; del buf428  # reuse
        buf430 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_214, input_215, input_216], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf429, primals_421, primals_422, primals_423, primals_424, primals_425, buf430, 128, grid=grid(128), stream=stream0)
        del primals_421
        del primals_425
        # Topologically Sorted Source Nodes: [input_217], Original ATen: [aten.convolution]
        buf431 = extern_kernels.convolution(buf430, buf24, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf431, (4, 2, 4, 4), (32, 1, 8, 2))
        buf432 = buf431; del buf431  # reuse
        buf433 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_217, input_218, input_219], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf432, primals_427, primals_428, primals_429, primals_430, primals_431, buf433, 128, grid=grid(128), stream=stream0)
        del primals_427
        del primals_431
        # Topologically Sorted Source Nodes: [input_220], Original ATen: [aten.convolution]
        buf434 = extern_kernels.convolution(buf433, primals_432, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf434, (4, 4, 4, 4), (64, 1, 16, 4))
        buf435 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.int8)
        buf436 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_10, input_221, input_222], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28.run(buf401, primals_434, primals_435, primals_436, primals_437, buf435, buf436, 64, grid=grid(64), stream=stream0)
        del primals_437
        # Topologically Sorted Source Nodes: [input_223], Original ATen: [aten.convolution]
        buf437 = extern_kernels.convolution(buf436, primals_438, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf437, (4, 2, 2, 2), (8, 1, 4, 2))
        buf438 = buf437; del buf437  # reuse
        buf439 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_223, input_224, input_225], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf438, primals_439, primals_440, primals_441, primals_442, primals_443, buf439, 32, grid=grid(32), stream=stream0)
        del primals_439
        del primals_443
        # Topologically Sorted Source Nodes: [input_226], Original ATen: [aten.convolution]
        buf440 = extern_kernels.convolution(buf439, buf25, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf440, (4, 2, 2, 2), (8, 1, 4, 2))
        buf441 = buf440; del buf440  # reuse
        buf442 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_226, input_227, input_228], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf441, primals_445, primals_446, primals_447, primals_448, primals_449, buf442, 32, grid=grid(32), stream=stream0)
        del primals_445
        del primals_449
        # Topologically Sorted Source Nodes: [input_229], Original ATen: [aten.convolution]
        buf443 = extern_kernels.convolution(buf442, primals_450, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf443, (4, 4, 2, 2), (16, 1, 8, 4))
        buf444 = buf443; del buf443  # reuse
        buf445 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_10, input_229, low1_11, input_230, input_231], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30.run(buf444, primals_451, buf401, primals_452, primals_453, primals_454, primals_455, buf445, 64, grid=grid(64), stream=stream0)
        del primals_451
        del primals_455
        # Topologically Sorted Source Nodes: [input_232], Original ATen: [aten.convolution]
        buf446 = extern_kernels.convolution(buf445, primals_456, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf446, (4, 2, 2, 2), (8, 1, 4, 2))
        buf447 = buf446; del buf446  # reuse
        buf448 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_232, input_233, input_234], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf447, primals_457, primals_458, primals_459, primals_460, primals_461, buf448, 32, grid=grid(32), stream=stream0)
        del primals_457
        del primals_461
        # Topologically Sorted Source Nodes: [input_235], Original ATen: [aten.convolution]
        buf449 = extern_kernels.convolution(buf448, buf26, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf449, (4, 2, 2, 2), (8, 1, 4, 2))
        buf450 = buf449; del buf449  # reuse
        buf451 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_235, input_236, input_237], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf450, primals_463, primals_464, primals_465, primals_466, primals_467, buf451, 32, grid=grid(32), stream=stream0)
        del primals_463
        del primals_467
        # Topologically Sorted Source Nodes: [input_238], Original ATen: [aten.convolution]
        buf452 = extern_kernels.convolution(buf451, primals_468, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf452, (4, 4, 2, 2), (16, 1, 8, 4))
        buf453 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_238, low1_12, input_239, input_240], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf452, primals_469, buf444, primals_470, primals_471, primals_472, primals_473, buf453, 64, grid=grid(64), stream=stream0)
        del primals_473
        # Topologically Sorted Source Nodes: [input_241], Original ATen: [aten.convolution]
        buf454 = extern_kernels.convolution(buf453, primals_474, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf454, (4, 2, 2, 2), (8, 1, 4, 2))
        buf455 = buf454; del buf454  # reuse
        buf456 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_241, input_242, input_243], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf455, primals_475, primals_476, primals_477, primals_478, primals_479, buf456, 32, grid=grid(32), stream=stream0)
        del primals_475
        del primals_479
        # Topologically Sorted Source Nodes: [input_244], Original ATen: [aten.convolution]
        buf457 = extern_kernels.convolution(buf456, buf27, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf457, (4, 2, 2, 2), (8, 1, 4, 2))
        buf458 = buf457; del buf457  # reuse
        buf459 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_244, input_245, input_246], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf458, primals_481, primals_482, primals_483, primals_484, primals_485, buf459, 32, grid=grid(32), stream=stream0)
        del primals_481
        del primals_485
        # Topologically Sorted Source Nodes: [input_247], Original ATen: [aten.convolution]
        buf460 = extern_kernels.convolution(buf459, primals_486, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf460, (4, 4, 2, 2), (16, 1, 8, 4))
        buf461 = buf460; del buf460  # reuse
        buf462 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        buf2407 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_238, low1_12, input_247, low1_13, input_248, input_249], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32.run(buf461, primals_487, buf452, primals_469, buf444, primals_488, primals_489, primals_490, primals_491, buf462, buf2407, 64, grid=grid(64), stream=stream0)
        del primals_487
        del primals_488
        del primals_491
        # Topologically Sorted Source Nodes: [input_250], Original ATen: [aten.convolution]
        buf463 = extern_kernels.convolution(buf462, primals_492, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf463, (4, 2, 2, 2), (8, 1, 4, 2))
        buf464 = buf463; del buf463  # reuse
        buf465 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_250, input_251, input_252], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf464, primals_493, primals_494, primals_495, primals_496, primals_497, buf465, 32, grid=grid(32), stream=stream0)
        del primals_493
        del primals_497
        # Topologically Sorted Source Nodes: [input_253], Original ATen: [aten.convolution]
        buf466 = extern_kernels.convolution(buf465, buf28, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf466, (4, 2, 2, 2), (8, 1, 4, 2))
        buf467 = buf466; del buf466  # reuse
        buf468 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_253, input_254, input_255], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf467, primals_499, primals_500, primals_501, primals_502, primals_503, buf468, 32, grid=grid(32), stream=stream0)
        del primals_499
        del primals_503
        # Topologically Sorted Source Nodes: [input_256], Original ATen: [aten.convolution]
        buf469 = extern_kernels.convolution(buf468, primals_504, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf469, (4, 4, 2, 2), (16, 1, 8, 4))
        buf470 = buf469; del buf469  # reuse
        buf471 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_256, low1_14, input_257, input_258], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33.run(buf470, primals_505, buf461, primals_506, primals_507, primals_508, primals_509, buf471, 64, grid=grid(64), stream=stream0)
        del primals_505
        del primals_509
        # Topologically Sorted Source Nodes: [input_259], Original ATen: [aten.convolution]
        buf472 = extern_kernels.convolution(buf471, primals_510, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf472, (4, 2, 2, 2), (8, 1, 4, 2))
        buf473 = buf472; del buf472  # reuse
        buf474 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_259, input_260, input_261], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf473, primals_511, primals_512, primals_513, primals_514, primals_515, buf474, 32, grid=grid(32), stream=stream0)
        del primals_511
        del primals_515
        # Topologically Sorted Source Nodes: [input_262], Original ATen: [aten.convolution]
        buf475 = extern_kernels.convolution(buf474, buf29, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf475, (4, 2, 2, 2), (8, 1, 4, 2))
        buf476 = buf475; del buf475  # reuse
        buf477 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_262, input_263, input_264], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf476, primals_517, primals_518, primals_519, primals_520, primals_521, buf477, 32, grid=grid(32), stream=stream0)
        del primals_517
        del primals_521
        # Topologically Sorted Source Nodes: [input_265], Original ATen: [aten.convolution]
        buf478 = extern_kernels.convolution(buf477, primals_522, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf478, (4, 4, 2, 2), (16, 1, 8, 4))
        buf479 = buf461; del buf461  # reuse
        # Topologically Sorted Source Nodes: [input_265, up1_12, input_266, input_267], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf478, primals_523, buf470, primals_524, primals_525, primals_526, primals_527, buf479, 64, grid=grid(64), stream=stream0)
        del primals_527
        # Topologically Sorted Source Nodes: [input_268], Original ATen: [aten.convolution]
        buf480 = extern_kernels.convolution(buf479, primals_528, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf480, (4, 2, 2, 2), (8, 1, 4, 2))
        buf481 = buf480; del buf480  # reuse
        buf482 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_268, input_269, input_270], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf481, primals_529, primals_530, primals_531, primals_532, primals_533, buf482, 32, grid=grid(32), stream=stream0)
        del primals_529
        del primals_533
        # Topologically Sorted Source Nodes: [input_271], Original ATen: [aten.convolution]
        buf483 = extern_kernels.convolution(buf482, buf30, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf483, (4, 2, 2, 2), (8, 1, 4, 2))
        buf484 = buf483; del buf483  # reuse
        buf485 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_271, input_272, input_273], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf484, primals_535, primals_536, primals_537, primals_538, primals_539, buf485, 32, grid=grid(32), stream=stream0)
        del primals_535
        del primals_539
        # Topologically Sorted Source Nodes: [input_274], Original ATen: [aten.convolution]
        buf486 = extern_kernels.convolution(buf485, primals_540, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf486, (4, 4, 2, 2), (16, 1, 8, 4))
        buf487 = buf486; del buf486  # reuse
        buf488 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_265, up1_12, input_274, up1_13, input_275, input_276], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf487, primals_541, buf478, primals_523, buf470, primals_542, primals_543, primals_544, primals_545, buf488, 64, grid=grid(64), stream=stream0)
        del primals_541
        del primals_545
        # Topologically Sorted Source Nodes: [input_277], Original ATen: [aten.convolution]
        buf489 = extern_kernels.convolution(buf488, primals_546, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf489, (4, 2, 2, 2), (8, 1, 4, 2))
        buf490 = buf489; del buf489  # reuse
        buf491 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_277, input_278, input_279], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf490, primals_547, primals_548, primals_549, primals_550, primals_551, buf491, 32, grid=grid(32), stream=stream0)
        del primals_547
        del primals_551
        # Topologically Sorted Source Nodes: [input_280], Original ATen: [aten.convolution]
        buf492 = extern_kernels.convolution(buf491, buf31, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf492, (4, 2, 2, 2), (8, 1, 4, 2))
        buf493 = buf492; del buf492  # reuse
        buf494 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_280, input_281, input_282], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf493, primals_553, primals_554, primals_555, primals_556, primals_557, buf494, 32, grid=grid(32), stream=stream0)
        del primals_553
        del primals_557
        # Topologically Sorted Source Nodes: [input_283], Original ATen: [aten.convolution]
        buf495 = extern_kernels.convolution(buf494, primals_558, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf495, (4, 4, 2, 2), (16, 1, 8, 4))
        buf496 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_283, up1_14, input_284, input_285], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf495, primals_559, buf487, primals_560, primals_561, primals_562, primals_563, buf496, 64, grid=grid(64), stream=stream0)
        del primals_563
        # Topologically Sorted Source Nodes: [input_286], Original ATen: [aten.convolution]
        buf497 = extern_kernels.convolution(buf496, primals_564, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf497, (4, 2, 2, 2), (8, 1, 4, 2))
        buf498 = buf497; del buf497  # reuse
        buf499 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_286, input_287, input_288], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf498, primals_565, primals_566, primals_567, primals_568, primals_569, buf499, 32, grid=grid(32), stream=stream0)
        del primals_565
        del primals_569
        # Topologically Sorted Source Nodes: [input_289], Original ATen: [aten.convolution]
        buf500 = extern_kernels.convolution(buf499, buf32, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf500, (4, 2, 2, 2), (8, 1, 4, 2))
        buf501 = buf500; del buf500  # reuse
        buf502 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_289, input_290, input_291], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf501, primals_571, primals_572, primals_573, primals_574, primals_575, buf502, 32, grid=grid(32), stream=stream0)
        del primals_571
        del primals_575
        # Topologically Sorted Source Nodes: [input_292], Original ATen: [aten.convolution]
        buf503 = extern_kernels.convolution(buf502, primals_576, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf503, (4, 4, 2, 2), (16, 1, 8, 4))
        buf504 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.int8)
        buf505 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_15, input_293, input_294], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35.run(buf470, primals_578, primals_579, primals_580, primals_581, buf504, buf505, 16, grid=grid(16), stream=stream0)
        del primals_581
        # Topologically Sorted Source Nodes: [input_295], Original ATen: [aten.convolution]
        buf506 = extern_kernels.convolution(buf505, primals_582, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf506, (4, 2, 1, 1), (2, 1, 2, 2))
        buf507 = buf506; del buf506  # reuse
        buf508 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_295, input_296, input_297], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf507, primals_583, primals_584, primals_585, primals_586, primals_587, buf508, 8, grid=grid(8), stream=stream0)
        del primals_583
        del primals_587
        # Topologically Sorted Source Nodes: [input_298], Original ATen: [aten.convolution]
        buf509 = extern_kernels.convolution(buf508, buf33, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf509, (4, 2, 1, 1), (2, 1, 2, 2))
        buf510 = buf509; del buf509  # reuse
        buf511 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_298, input_299, input_300], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf510, primals_589, primals_590, primals_591, primals_592, primals_593, buf511, 8, grid=grid(8), stream=stream0)
        del primals_589
        del primals_593
        # Topologically Sorted Source Nodes: [input_301], Original ATen: [aten.convolution]
        buf512 = extern_kernels.convolution(buf511, primals_594, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf512, (4, 4, 1, 1), (4, 1, 4, 4))
        buf513 = reinterpret_tensor(buf512, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf512  # reuse
        buf514 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_15, input_301, low1_16, input_302, input_303], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37.run(buf513, primals_595, buf470, primals_596, primals_597, primals_598, primals_599, buf514, 16, grid=grid(16), stream=stream0)
        del primals_595
        del primals_599
        # Topologically Sorted Source Nodes: [input_304], Original ATen: [aten.convolution]
        buf515 = extern_kernels.convolution(buf514, primals_600, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf515, (4, 2, 1, 1), (2, 1, 2, 2))
        buf516 = buf515; del buf515  # reuse
        buf517 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_304, input_305, input_306], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf516, primals_601, primals_602, primals_603, primals_604, primals_605, buf517, 8, grid=grid(8), stream=stream0)
        del primals_601
        del primals_605
        # Topologically Sorted Source Nodes: [input_307], Original ATen: [aten.convolution]
        buf518 = extern_kernels.convolution(buf517, buf34, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf518, (4, 2, 1, 1), (2, 1, 2, 2))
        buf519 = buf518; del buf518  # reuse
        buf520 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_307, input_308, input_309], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf519, primals_607, primals_608, primals_609, primals_610, primals_611, buf520, 8, grid=grid(8), stream=stream0)
        del primals_607
        del primals_611
        # Topologically Sorted Source Nodes: [input_310], Original ATen: [aten.convolution]
        buf521 = extern_kernels.convolution(buf520, primals_612, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf521, (4, 4, 1, 1), (4, 1, 4, 4))
        buf522 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_310, low1_17, input_311, input_312], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf521, primals_613, buf513, primals_614, primals_615, primals_616, primals_617, buf522, 16, grid=grid(16), stream=stream0)
        del primals_617
        # Topologically Sorted Source Nodes: [input_313], Original ATen: [aten.convolution]
        buf523 = extern_kernels.convolution(buf522, primals_618, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf523, (4, 2, 1, 1), (2, 1, 2, 2))
        buf524 = buf523; del buf523  # reuse
        buf525 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_313, input_314, input_315], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf524, primals_619, primals_620, primals_621, primals_622, primals_623, buf525, 8, grid=grid(8), stream=stream0)
        del primals_619
        del primals_623
        # Topologically Sorted Source Nodes: [input_316], Original ATen: [aten.convolution]
        buf526 = extern_kernels.convolution(buf525, buf35, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf526, (4, 2, 1, 1), (2, 1, 2, 2))
        buf527 = buf526; del buf526  # reuse
        buf528 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_316, input_317, input_318], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf527, primals_625, primals_626, primals_627, primals_628, primals_629, buf528, 8, grid=grid(8), stream=stream0)
        del primals_625
        del primals_629
        # Topologically Sorted Source Nodes: [input_319], Original ATen: [aten.convolution]
        buf529 = extern_kernels.convolution(buf528, primals_630, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf529, (4, 4, 1, 1), (4, 1, 4, 4))
        buf530 = reinterpret_tensor(buf529, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf529  # reuse
        buf531 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_310, low1_17, input_319, low1_18, input_320, input_321], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf530, primals_631, buf521, primals_613, buf513, primals_632, primals_633, primals_634, primals_635, buf531, 16, grid=grid(16), stream=stream0)
        del primals_631
        del primals_635
        # Topologically Sorted Source Nodes: [input_322], Original ATen: [aten.convolution]
        buf532 = extern_kernels.convolution(buf531, primals_636, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf532, (4, 2, 1, 1), (2, 1, 2, 2))
        buf533 = buf532; del buf532  # reuse
        buf534 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_322, input_323, input_324], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf533, primals_637, primals_638, primals_639, primals_640, primals_641, buf534, 8, grid=grid(8), stream=stream0)
        del primals_637
        del primals_641
        # Topologically Sorted Source Nodes: [input_325], Original ATen: [aten.convolution]
        buf535 = extern_kernels.convolution(buf534, buf36, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf535, (4, 2, 1, 1), (2, 1, 2, 2))
        buf536 = buf535; del buf535  # reuse
        buf537 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_325, input_326, input_327], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf536, primals_643, primals_644, primals_645, primals_646, primals_647, buf537, 8, grid=grid(8), stream=stream0)
        del primals_643
        del primals_647
        # Topologically Sorted Source Nodes: [input_328], Original ATen: [aten.convolution]
        buf538 = extern_kernels.convolution(buf537, primals_648, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf538, (4, 4, 1, 1), (4, 1, 4, 4))
        buf539 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_328, low1_19, input_329, input_330], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf538, primals_649, buf530, primals_650, primals_651, primals_652, primals_653, buf539, 16, grid=grid(16), stream=stream0)
        del primals_653
        # Topologically Sorted Source Nodes: [input_331], Original ATen: [aten.convolution]
        buf540 = extern_kernels.convolution(buf539, primals_654, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf540, (4, 2, 1, 1), (2, 1, 2, 2))
        buf541 = buf540; del buf540  # reuse
        buf542 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_331, input_332, input_333], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf541, primals_655, primals_656, primals_657, primals_658, primals_659, buf542, 8, grid=grid(8), stream=stream0)
        del primals_655
        del primals_659
        # Topologically Sorted Source Nodes: [input_334], Original ATen: [aten.convolution]
        buf543 = extern_kernels.convolution(buf542, buf37, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf543, (4, 2, 1, 1), (2, 1, 2, 2))
        buf544 = buf543; del buf543  # reuse
        buf545 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_334, input_335, input_336], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf544, primals_661, primals_662, primals_663, primals_664, primals_665, buf545, 8, grid=grid(8), stream=stream0)
        del primals_661
        del primals_665
        # Topologically Sorted Source Nodes: [input_337], Original ATen: [aten.convolution]
        buf546 = extern_kernels.convolution(buf545, primals_666, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf546, (4, 4, 1, 1), (4, 1, 4, 4))
        buf547 = reinterpret_tensor(buf546, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf546  # reuse
        buf548 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_328, low1_19, input_337, low2, input_338, input_339], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf547, primals_667, buf538, primals_649, buf530, primals_668, primals_669, primals_670, primals_671, buf548, 16, grid=grid(16), stream=stream0)
        del primals_667
        del primals_671
        # Topologically Sorted Source Nodes: [input_340], Original ATen: [aten.convolution]
        buf549 = extern_kernels.convolution(buf548, primals_672, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf549, (4, 2, 1, 1), (2, 1, 2, 2))
        buf550 = buf549; del buf549  # reuse
        buf551 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_340, input_341, input_342], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf550, primals_673, primals_674, primals_675, primals_676, primals_677, buf551, 8, grid=grid(8), stream=stream0)
        del primals_673
        del primals_677
        # Topologically Sorted Source Nodes: [input_343], Original ATen: [aten.convolution]
        buf552 = extern_kernels.convolution(buf551, buf38, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf552, (4, 2, 1, 1), (2, 1, 2, 2))
        buf553 = buf552; del buf552  # reuse
        buf554 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_343, input_344, input_345], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf553, primals_679, primals_680, primals_681, primals_682, primals_683, buf554, 8, grid=grid(8), stream=stream0)
        del primals_679
        del primals_683
        # Topologically Sorted Source Nodes: [input_346], Original ATen: [aten.convolution]
        buf555 = extern_kernels.convolution(buf554, primals_684, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf555, (4, 4, 1, 1), (4, 1, 4, 4))
        buf556 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_346, low2_1, input_347, input_348], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf555, primals_685, buf547, primals_686, primals_687, primals_688, primals_689, buf556, 16, grid=grid(16), stream=stream0)
        del primals_689
        # Topologically Sorted Source Nodes: [input_349], Original ATen: [aten.convolution]
        buf557 = extern_kernels.convolution(buf556, primals_690, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf557, (4, 2, 1, 1), (2, 1, 2, 2))
        buf558 = buf557; del buf557  # reuse
        buf559 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_349, input_350, input_351], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf558, primals_691, primals_692, primals_693, primals_694, primals_695, buf559, 8, grid=grid(8), stream=stream0)
        del primals_691
        del primals_695
        # Topologically Sorted Source Nodes: [input_352], Original ATen: [aten.convolution]
        buf560 = extern_kernels.convolution(buf559, buf39, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf560, (4, 2, 1, 1), (2, 1, 2, 2))
        buf561 = buf560; del buf560  # reuse
        buf562 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_352, input_353, input_354], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf561, primals_697, primals_698, primals_699, primals_700, primals_701, buf562, 8, grid=grid(8), stream=stream0)
        del primals_697
        del primals_701
        # Topologically Sorted Source Nodes: [input_355], Original ATen: [aten.convolution]
        buf563 = extern_kernels.convolution(buf562, primals_702, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf563, (4, 4, 1, 1), (4, 1, 4, 4))
        buf564 = reinterpret_tensor(buf563, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf563  # reuse
        buf565 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_346, low2_1, input_355, low2_2, input_356, input_357], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf564, primals_703, buf555, primals_685, buf547, primals_704, primals_705, primals_706, primals_707, buf565, 16, grid=grid(16), stream=stream0)
        del primals_703
        del primals_707
        # Topologically Sorted Source Nodes: [input_358], Original ATen: [aten.convolution]
        buf566 = extern_kernels.convolution(buf565, primals_708, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf566, (4, 2, 1, 1), (2, 1, 2, 2))
        buf567 = buf566; del buf566  # reuse
        buf568 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_358, input_359, input_360], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf567, primals_709, primals_710, primals_711, primals_712, primals_713, buf568, 8, grid=grid(8), stream=stream0)
        del primals_709
        del primals_713
        # Topologically Sorted Source Nodes: [input_361], Original ATen: [aten.convolution]
        buf569 = extern_kernels.convolution(buf568, buf40, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf569, (4, 2, 1, 1), (2, 1, 2, 2))
        buf570 = buf569; del buf569  # reuse
        buf571 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_361, input_362, input_363], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf570, primals_715, primals_716, primals_717, primals_718, primals_719, buf571, 8, grid=grid(8), stream=stream0)
        del primals_715
        del primals_719
        # Topologically Sorted Source Nodes: [input_364], Original ATen: [aten.convolution]
        buf572 = extern_kernels.convolution(buf571, primals_720, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf572, (4, 4, 1, 1), (4, 1, 4, 4))
        buf573 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_364, low2_3, input_365, input_366], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf572, primals_721, buf564, primals_722, primals_723, primals_724, primals_725, buf573, 16, grid=grid(16), stream=stream0)
        del primals_725
        # Topologically Sorted Source Nodes: [input_367], Original ATen: [aten.convolution]
        buf574 = extern_kernels.convolution(buf573, primals_726, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf574, (4, 2, 1, 1), (2, 1, 2, 2))
        buf575 = buf574; del buf574  # reuse
        buf576 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_367, input_368, input_369], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf575, primals_727, primals_728, primals_729, primals_730, primals_731, buf576, 8, grid=grid(8), stream=stream0)
        del primals_727
        del primals_731
        # Topologically Sorted Source Nodes: [input_370], Original ATen: [aten.convolution]
        buf577 = extern_kernels.convolution(buf576, buf41, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf577, (4, 2, 1, 1), (2, 1, 2, 2))
        buf578 = buf577; del buf577  # reuse
        buf579 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_370, input_371, input_372], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf578, primals_733, primals_734, primals_735, primals_736, primals_737, buf579, 8, grid=grid(8), stream=stream0)
        del primals_733
        del primals_737
        # Topologically Sorted Source Nodes: [input_373], Original ATen: [aten.convolution]
        buf580 = extern_kernels.convolution(buf579, primals_738, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf580, (4, 4, 1, 1), (4, 1, 4, 4))
        buf581 = reinterpret_tensor(buf580, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf580  # reuse
        buf582 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_364, low2_3, input_373, low3, input_374, input_375], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf581, primals_739, buf572, primals_721, buf564, primals_740, primals_741, primals_742, primals_743, buf582, 16, grid=grid(16), stream=stream0)
        del primals_739
        del primals_743
        # Topologically Sorted Source Nodes: [input_376], Original ATen: [aten.convolution]
        buf583 = extern_kernels.convolution(buf582, primals_744, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf583, (4, 2, 1, 1), (2, 1, 2, 2))
        buf584 = buf583; del buf583  # reuse
        buf585 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_376, input_377, input_378], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf584, primals_745, primals_746, primals_747, primals_748, primals_749, buf585, 8, grid=grid(8), stream=stream0)
        del primals_745
        del primals_749
        # Topologically Sorted Source Nodes: [input_379], Original ATen: [aten.convolution]
        buf586 = extern_kernels.convolution(buf585, buf42, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf586, (4, 2, 1, 1), (2, 1, 2, 2))
        buf587 = buf586; del buf586  # reuse
        buf588 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_379, input_380, input_381], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf587, primals_751, primals_752, primals_753, primals_754, primals_755, buf588, 8, grid=grid(8), stream=stream0)
        del primals_751
        del primals_755
        # Topologically Sorted Source Nodes: [input_382], Original ATen: [aten.convolution]
        buf589 = extern_kernels.convolution(buf588, primals_756, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf589, (4, 4, 1, 1), (4, 1, 4, 4))
        buf590 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_382, low3_1, input_383, input_384], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf589, primals_757, buf581, primals_758, primals_759, primals_760, primals_761, buf590, 16, grid=grid(16), stream=stream0)
        del primals_761
        # Topologically Sorted Source Nodes: [input_385], Original ATen: [aten.convolution]
        buf591 = extern_kernels.convolution(buf590, primals_762, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf591, (4, 2, 1, 1), (2, 1, 2, 2))
        buf592 = buf591; del buf591  # reuse
        buf593 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_385, input_386, input_387], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf592, primals_763, primals_764, primals_765, primals_766, primals_767, buf593, 8, grid=grid(8), stream=stream0)
        del primals_763
        del primals_767
        # Topologically Sorted Source Nodes: [input_388], Original ATen: [aten.convolution]
        buf594 = extern_kernels.convolution(buf593, buf43, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf594, (4, 2, 1, 1), (2, 1, 2, 2))
        buf595 = buf594; del buf594  # reuse
        buf596 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_388, input_389, input_390], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf595, primals_769, primals_770, primals_771, primals_772, primals_773, buf596, 8, grid=grid(8), stream=stream0)
        del primals_769
        del primals_773
        # Topologically Sorted Source Nodes: [input_391], Original ATen: [aten.convolution]
        buf597 = extern_kernels.convolution(buf596, primals_774, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf597, (4, 4, 1, 1), (4, 1, 4, 4))
        buf598 = reinterpret_tensor(buf597, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf597  # reuse
        buf599 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        buf2392 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_382, low3_1, input_391, low3_2, input_392, input_393], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40.run(buf598, primals_775, buf589, primals_757, buf581, primals_776, primals_777, primals_778, primals_779, buf599, buf2392, 16, grid=grid(16), stream=stream0)
        del primals_775
        del primals_776
        del primals_779
        # Topologically Sorted Source Nodes: [input_394], Original ATen: [aten.convolution]
        buf600 = extern_kernels.convolution(buf599, primals_780, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf600, (4, 2, 1, 1), (2, 1, 2, 2))
        buf601 = buf600; del buf600  # reuse
        buf602 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_394, input_395, input_396], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf601, primals_781, primals_782, primals_783, primals_784, primals_785, buf602, 8, grid=grid(8), stream=stream0)
        del primals_781
        del primals_785
        # Topologically Sorted Source Nodes: [input_397], Original ATen: [aten.convolution]
        buf603 = extern_kernels.convolution(buf602, buf44, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf603, (4, 2, 1, 1), (2, 1, 2, 2))
        buf604 = buf603; del buf603  # reuse
        buf605 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_397, input_398, input_399], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf604, primals_787, primals_788, primals_789, primals_790, primals_791, buf605, 8, grid=grid(8), stream=stream0)
        del primals_787
        del primals_791
        # Topologically Sorted Source Nodes: [input_400], Original ATen: [aten.convolution]
        buf606 = extern_kernels.convolution(buf605, primals_792, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf606, (4, 4, 1, 1), (4, 1, 4, 4))
        buf607 = empty_strided_cuda((2, ), (1, ), torch.int64)
        # Topologically Sorted Source Nodes: [up2], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
        stream0 = get_raw_stream(0)
        triton_poi_fused__to_copy_add_arange_mul_41.run(buf607, 2, grid=grid(2), stream=stream0)
        buf608 = buf503; del buf503  # reuse
        buf609 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_283, up1_14, input_292, up1_15, input_400, low3_3, up2, low2_4, input_401, input_402], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42.run(buf608, primals_577, buf495, primals_559, buf487, buf607, buf606, primals_793, buf598, primals_794, primals_795, primals_796, primals_797, buf609, 64, grid=grid(64), stream=stream0)
        del primals_577
        del primals_793
        del primals_797
        # Topologically Sorted Source Nodes: [input_403], Original ATen: [aten.convolution]
        buf610 = extern_kernels.convolution(buf609, primals_798, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf610, (4, 2, 2, 2), (8, 1, 4, 2))
        buf611 = buf610; del buf610  # reuse
        buf612 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_403, input_404, input_405], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf611, primals_799, primals_800, primals_801, primals_802, primals_803, buf612, 32, grid=grid(32), stream=stream0)
        del primals_799
        del primals_803
        # Topologically Sorted Source Nodes: [input_406], Original ATen: [aten.convolution]
        buf613 = extern_kernels.convolution(buf612, buf45, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf613, (4, 2, 2, 2), (8, 1, 4, 2))
        buf614 = buf613; del buf613  # reuse
        buf615 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_406, input_407, input_408], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf614, primals_805, primals_806, primals_807, primals_808, primals_809, buf615, 32, grid=grid(32), stream=stream0)
        del primals_805
        del primals_809
        # Topologically Sorted Source Nodes: [input_409], Original ATen: [aten.convolution]
        buf616 = extern_kernels.convolution(buf615, primals_810, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf616, (4, 4, 2, 2), (16, 1, 8, 4))
        buf617 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_409, low3_4, input_410, input_411], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf616, primals_811, buf608, primals_812, primals_813, primals_814, primals_815, buf617, 64, grid=grid(64), stream=stream0)
        del primals_815
        # Topologically Sorted Source Nodes: [input_412], Original ATen: [aten.convolution]
        buf618 = extern_kernels.convolution(buf617, primals_816, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf618, (4, 2, 2, 2), (8, 1, 4, 2))
        buf619 = buf618; del buf618  # reuse
        buf620 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_412, input_413, input_414], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf619, primals_817, primals_818, primals_819, primals_820, primals_821, buf620, 32, grid=grid(32), stream=stream0)
        del primals_817
        del primals_821
        # Topologically Sorted Source Nodes: [input_415], Original ATen: [aten.convolution]
        buf621 = extern_kernels.convolution(buf620, buf46, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf621, (4, 2, 2, 2), (8, 1, 4, 2))
        buf622 = buf621; del buf621  # reuse
        buf623 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_415, input_416, input_417], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf622, primals_823, primals_824, primals_825, primals_826, primals_827, buf623, 32, grid=grid(32), stream=stream0)
        del primals_823
        del primals_827
        # Topologically Sorted Source Nodes: [input_418], Original ATen: [aten.convolution]
        buf624 = extern_kernels.convolution(buf623, primals_828, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf624, (4, 4, 2, 2), (16, 1, 8, 4))
        buf625 = buf624; del buf624  # reuse
        buf626 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_409, low3_4, input_418, low3_5, input_419, input_420], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf625, primals_829, buf616, primals_811, buf608, primals_830, primals_831, primals_832, primals_833, buf626, 64, grid=grid(64), stream=stream0)
        del primals_829
        del primals_833
        # Topologically Sorted Source Nodes: [input_421], Original ATen: [aten.convolution]
        buf627 = extern_kernels.convolution(buf626, primals_834, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf627, (4, 2, 2, 2), (8, 1, 4, 2))
        buf628 = buf627; del buf627  # reuse
        buf629 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_421, input_422, input_423], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf628, primals_835, primals_836, primals_837, primals_838, primals_839, buf629, 32, grid=grid(32), stream=stream0)
        del primals_835
        del primals_839
        # Topologically Sorted Source Nodes: [input_424], Original ATen: [aten.convolution]
        buf630 = extern_kernels.convolution(buf629, buf47, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf630, (4, 2, 2, 2), (8, 1, 4, 2))
        buf631 = buf630; del buf630  # reuse
        buf632 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_424, input_425, input_426], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf631, primals_841, primals_842, primals_843, primals_844, primals_845, buf632, 32, grid=grid(32), stream=stream0)
        del primals_841
        del primals_845
        # Topologically Sorted Source Nodes: [input_427], Original ATen: [aten.convolution]
        buf633 = extern_kernels.convolution(buf632, primals_846, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf633, (4, 4, 2, 2), (16, 1, 8, 4))
        buf634 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_427, low3_6, input_428, input_429], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf633, primals_847, buf625, primals_848, primals_849, primals_850, primals_851, buf634, 64, grid=grid(64), stream=stream0)
        del primals_851
        # Topologically Sorted Source Nodes: [input_430], Original ATen: [aten.convolution]
        buf635 = extern_kernels.convolution(buf634, primals_852, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf635, (4, 2, 2, 2), (8, 1, 4, 2))
        buf636 = buf635; del buf635  # reuse
        buf637 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_430, input_431, input_432], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf636, primals_853, primals_854, primals_855, primals_856, primals_857, buf637, 32, grid=grid(32), stream=stream0)
        del primals_853
        del primals_857
        # Topologically Sorted Source Nodes: [input_433], Original ATen: [aten.convolution]
        buf638 = extern_kernels.convolution(buf637, buf48, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf638, (4, 2, 2, 2), (8, 1, 4, 2))
        buf639 = buf638; del buf638  # reuse
        buf640 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_433, input_434, input_435], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf639, primals_859, primals_860, primals_861, primals_862, primals_863, buf640, 32, grid=grid(32), stream=stream0)
        del primals_859
        del primals_863
        # Topologically Sorted Source Nodes: [input_436], Original ATen: [aten.convolution]
        buf641 = extern_kernels.convolution(buf640, primals_864, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf641, (4, 4, 2, 2), (16, 1, 8, 4))
        buf642 = empty_strided_cuda((4, ), (1, ), torch.int64)
        # Topologically Sorted Source Nodes: [up2_1], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
        stream0 = get_raw_stream(0)
        triton_poi_fused__to_copy_add_arange_mul_43.run(buf642, 4, grid=grid(4), stream=stream0)
        buf643 = buf434; del buf434  # reuse
        buf644 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_211, up1_10, input_220, up1_11, input_427, low3_6, input_436, low3_7, up2_1, low2_5, input_437, input_438], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44.run(buf643, primals_433, buf426, primals_415, buf418, buf642, buf641, primals_865, buf633, primals_847, buf625, primals_866, primals_867, primals_868, primals_869, buf644, 256, grid=grid(256), stream=stream0)
        del primals_433
        del primals_865
        del primals_869
        # Topologically Sorted Source Nodes: [input_439], Original ATen: [aten.convolution]
        buf645 = extern_kernels.convolution(buf644, primals_870, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf645, (4, 2, 4, 4), (32, 1, 8, 2))
        buf646 = buf645; del buf645  # reuse
        buf647 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_439, input_440, input_441], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf646, primals_871, primals_872, primals_873, primals_874, primals_875, buf647, 128, grid=grid(128), stream=stream0)
        del primals_871
        del primals_875
        # Topologically Sorted Source Nodes: [input_442], Original ATen: [aten.convolution]
        buf648 = extern_kernels.convolution(buf647, buf49, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf648, (4, 2, 4, 4), (32, 1, 8, 2))
        buf649 = buf648; del buf648  # reuse
        buf650 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_442, input_443, input_444], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf649, primals_877, primals_878, primals_879, primals_880, primals_881, buf650, 128, grid=grid(128), stream=stream0)
        del primals_877
        del primals_881
        # Topologically Sorted Source Nodes: [input_445], Original ATen: [aten.convolution]
        buf651 = extern_kernels.convolution(buf650, primals_882, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf651, (4, 4, 4, 4), (64, 1, 16, 4))
        buf652 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_445, low3_8, input_446, input_447], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf651, primals_883, buf643, primals_884, primals_885, primals_886, primals_887, buf652, 256, grid=grid(256), stream=stream0)
        del primals_887
        # Topologically Sorted Source Nodes: [input_448], Original ATen: [aten.convolution]
        buf653 = extern_kernels.convolution(buf652, primals_888, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf653, (4, 2, 4, 4), (32, 1, 8, 2))
        buf654 = buf653; del buf653  # reuse
        buf655 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_448, input_449, input_450], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf654, primals_889, primals_890, primals_891, primals_892, primals_893, buf655, 128, grid=grid(128), stream=stream0)
        del primals_889
        del primals_893
        # Topologically Sorted Source Nodes: [input_451], Original ATen: [aten.convolution]
        buf656 = extern_kernels.convolution(buf655, buf50, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf656, (4, 2, 4, 4), (32, 1, 8, 2))
        buf657 = buf656; del buf656  # reuse
        buf658 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_451, input_452, input_453], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf657, primals_895, primals_896, primals_897, primals_898, primals_899, buf658, 128, grid=grid(128), stream=stream0)
        del primals_895
        del primals_899
        # Topologically Sorted Source Nodes: [input_454], Original ATen: [aten.convolution]
        buf659 = extern_kernels.convolution(buf658, primals_900, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf659, (4, 4, 4, 4), (64, 1, 16, 4))
        buf660 = buf659; del buf659  # reuse
        buf661 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_445, low3_8, input_454, low3_9, input_455, input_456], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf660, primals_901, buf651, primals_883, buf643, primals_902, primals_903, primals_904, primals_905, buf661, 256, grid=grid(256), stream=stream0)
        del primals_901
        del primals_905
        # Topologically Sorted Source Nodes: [input_457], Original ATen: [aten.convolution]
        buf662 = extern_kernels.convolution(buf661, primals_906, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf662, (4, 2, 4, 4), (32, 1, 8, 2))
        buf663 = buf662; del buf662  # reuse
        buf664 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_457, input_458, input_459], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf663, primals_907, primals_908, primals_909, primals_910, primals_911, buf664, 128, grid=grid(128), stream=stream0)
        del primals_907
        del primals_911
        # Topologically Sorted Source Nodes: [input_460], Original ATen: [aten.convolution]
        buf665 = extern_kernels.convolution(buf664, buf51, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf665, (4, 2, 4, 4), (32, 1, 8, 2))
        buf666 = buf665; del buf665  # reuse
        buf667 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_460, input_461, input_462], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf666, primals_913, primals_914, primals_915, primals_916, primals_917, buf667, 128, grid=grid(128), stream=stream0)
        del primals_913
        del primals_917
        # Topologically Sorted Source Nodes: [input_463], Original ATen: [aten.convolution]
        buf668 = extern_kernels.convolution(buf667, primals_918, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf668, (4, 4, 4, 4), (64, 1, 16, 4))
        buf669 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_463, low3_10, input_464, input_465], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf668, primals_919, buf660, primals_920, primals_921, primals_922, primals_923, buf669, 256, grid=grid(256), stream=stream0)
        del primals_923
        # Topologically Sorted Source Nodes: [input_466], Original ATen: [aten.convolution]
        buf670 = extern_kernels.convolution(buf669, primals_924, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf670, (4, 2, 4, 4), (32, 1, 8, 2))
        buf671 = buf670; del buf670  # reuse
        buf672 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_466, input_467, input_468], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf671, primals_925, primals_926, primals_927, primals_928, primals_929, buf672, 128, grid=grid(128), stream=stream0)
        del primals_925
        del primals_929
        # Topologically Sorted Source Nodes: [input_469], Original ATen: [aten.convolution]
        buf673 = extern_kernels.convolution(buf672, buf52, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf673, (4, 2, 4, 4), (32, 1, 8, 2))
        buf674 = buf673; del buf673  # reuse
        buf675 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_469, input_470, input_471], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf674, primals_931, primals_932, primals_933, primals_934, primals_935, buf675, 128, grid=grid(128), stream=stream0)
        del primals_931
        del primals_935
        # Topologically Sorted Source Nodes: [input_472], Original ATen: [aten.convolution]
        buf676 = extern_kernels.convolution(buf675, primals_936, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf676, (4, 4, 4, 4), (64, 1, 16, 4))
        buf677 = empty_strided_cuda((8, ), (1, ), torch.int64)
        # Topologically Sorted Source Nodes: [up2_2], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
        stream0 = get_raw_stream(0)
        triton_poi_fused__to_copy_add_arange_mul_45.run(buf677, 8, grid=grid(8), stream=stream0)
        buf678 = buf365; del buf365  # reuse
        buf679 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_139, up1_6, input_148, up1_7, input_463, low3_10, input_472, low3_11, up2_2, low2_6, input_473, input_474], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46.run(buf678, primals_289, buf357, primals_271, buf349, buf677, buf676, primals_937, buf668, primals_919, buf660, primals_938, primals_939, primals_940, primals_941, buf679, 1024, grid=grid(1024), stream=stream0)
        del primals_289
        del primals_937
        del primals_941
        # Topologically Sorted Source Nodes: [input_475], Original ATen: [aten.convolution]
        buf680 = extern_kernels.convolution(buf679, primals_942, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf680, (4, 2, 8, 8), (128, 1, 16, 2))
        buf681 = buf680; del buf680  # reuse
        buf682 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_475, input_476, input_477], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf681, primals_943, primals_944, primals_945, primals_946, primals_947, buf682, 512, grid=grid(512), stream=stream0)
        del primals_943
        del primals_947
        # Topologically Sorted Source Nodes: [input_478], Original ATen: [aten.convolution]
        buf683 = extern_kernels.convolution(buf682, buf53, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf683, (4, 2, 8, 8), (128, 1, 16, 2))
        buf684 = buf683; del buf683  # reuse
        buf685 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_478, input_479, input_480], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf684, primals_949, primals_950, primals_951, primals_952, primals_953, buf685, 512, grid=grid(512), stream=stream0)
        del primals_949
        del primals_953
        # Topologically Sorted Source Nodes: [input_481], Original ATen: [aten.convolution]
        buf686 = extern_kernels.convolution(buf685, primals_954, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf686, (4, 4, 8, 8), (256, 1, 32, 4))
        buf687 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_481, low3_12, input_482, input_483], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf686, primals_955, buf678, primals_956, primals_957, primals_958, primals_959, buf687, 1024, grid=grid(1024), stream=stream0)
        del primals_959
        # Topologically Sorted Source Nodes: [input_484], Original ATen: [aten.convolution]
        buf688 = extern_kernels.convolution(buf687, primals_960, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf688, (4, 2, 8, 8), (128, 1, 16, 2))
        buf689 = buf688; del buf688  # reuse
        buf690 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_484, input_485, input_486], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf689, primals_961, primals_962, primals_963, primals_964, primals_965, buf690, 512, grid=grid(512), stream=stream0)
        del primals_961
        del primals_965
        # Topologically Sorted Source Nodes: [input_487], Original ATen: [aten.convolution]
        buf691 = extern_kernels.convolution(buf690, buf54, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf691, (4, 2, 8, 8), (128, 1, 16, 2))
        buf692 = buf691; del buf691  # reuse
        buf693 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_487, input_488, input_489], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf692, primals_967, primals_968, primals_969, primals_970, primals_971, buf693, 512, grid=grid(512), stream=stream0)
        del primals_967
        del primals_971
        # Topologically Sorted Source Nodes: [input_490], Original ATen: [aten.convolution]
        buf694 = extern_kernels.convolution(buf693, primals_972, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf694, (4, 4, 8, 8), (256, 1, 32, 4))
        buf695 = buf694; del buf694  # reuse
        buf696 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_481, low3_12, input_490, low3_13, input_491, input_492], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf695, primals_973, buf686, primals_955, buf678, primals_974, primals_975, primals_976, primals_977, buf696, 1024, grid=grid(1024), stream=stream0)
        del primals_973
        del primals_977
        # Topologically Sorted Source Nodes: [input_493], Original ATen: [aten.convolution]
        buf697 = extern_kernels.convolution(buf696, primals_978, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf697, (4, 2, 8, 8), (128, 1, 16, 2))
        buf698 = buf697; del buf697  # reuse
        buf699 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_493, input_494, input_495], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf698, primals_979, primals_980, primals_981, primals_982, primals_983, buf699, 512, grid=grid(512), stream=stream0)
        del primals_979
        del primals_983
        # Topologically Sorted Source Nodes: [input_496], Original ATen: [aten.convolution]
        buf700 = extern_kernels.convolution(buf699, buf55, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf700, (4, 2, 8, 8), (128, 1, 16, 2))
        buf701 = buf700; del buf700  # reuse
        buf702 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_496, input_497, input_498], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf701, primals_985, primals_986, primals_987, primals_988, primals_989, buf702, 512, grid=grid(512), stream=stream0)
        del primals_985
        del primals_989
        # Topologically Sorted Source Nodes: [input_499], Original ATen: [aten.convolution]
        buf703 = extern_kernels.convolution(buf702, primals_990, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf703, (4, 4, 8, 8), (256, 1, 32, 4))
        buf704 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_499, low3_14, input_500, input_501], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf703, primals_991, buf695, primals_992, primals_993, primals_994, primals_995, buf704, 1024, grid=grid(1024), stream=stream0)
        del primals_995
        # Topologically Sorted Source Nodes: [input_502], Original ATen: [aten.convolution]
        buf705 = extern_kernels.convolution(buf704, primals_996, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf705, (4, 2, 8, 8), (128, 1, 16, 2))
        buf706 = buf705; del buf705  # reuse
        buf707 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_502, input_503, input_504], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf706, primals_997, primals_998, primals_999, primals_1000, primals_1001, buf707, 512, grid=grid(512), stream=stream0)
        del primals_1001
        del primals_997
        # Topologically Sorted Source Nodes: [input_505], Original ATen: [aten.convolution]
        buf708 = extern_kernels.convolution(buf707, buf56, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf708, (4, 2, 8, 8), (128, 1, 16, 2))
        buf709 = buf708; del buf708  # reuse
        buf710 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_505, input_506, input_507], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf709, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, buf710, 512, grid=grid(512), stream=stream0)
        del primals_1003
        del primals_1007
        # Topologically Sorted Source Nodes: [input_508], Original ATen: [aten.convolution]
        buf711 = extern_kernels.convolution(buf710, primals_1008, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf711, (4, 4, 8, 8), (256, 1, 32, 4))
        buf712 = empty_strided_cuda((16, ), (1, ), torch.int64)
        # Topologically Sorted Source Nodes: [up2_3], Original ATen: [aten.arange, aten.add, aten.mul, aten._to_copy]
        stream0 = get_raw_stream(0)
        triton_poi_fused__to_copy_add_arange_mul_47.run(buf712, 16, grid=grid(16), stream=stream0)
        buf713 = buf296; del buf296  # reuse
        buf714 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_67, up1_2, input_76, up1_3, input_499, low3_14, input_508, low3_15, up2_3, hg, input_509, input_510], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48.run(buf713, primals_145, buf288, primals_127, buf280, buf712, buf711, primals_1009, buf703, primals_991, buf695, primals_1010, primals_1011, primals_1012, primals_1013, buf714, 4096, grid=grid(4096), stream=stream0)
        del primals_1009
        del primals_1013
        del primals_145
        # Topologically Sorted Source Nodes: [input_511], Original ATen: [aten.convolution]
        buf715 = extern_kernels.convolution(buf714, primals_1014, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf715, (4, 2, 16, 16), (512, 1, 32, 2))
        buf716 = buf715; del buf715  # reuse
        buf717 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_511, input_512, input_513], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf716, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, buf717, 2048, grid=grid(2048), stream=stream0)
        del primals_1015
        del primals_1019
        # Topologically Sorted Source Nodes: [input_514], Original ATen: [aten.convolution]
        buf718 = extern_kernels.convolution(buf717, buf57, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf718, (4, 2, 16, 16), (512, 1, 32, 2))
        buf719 = buf718; del buf718  # reuse
        buf720 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_514, input_515, input_516], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf719, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, buf720, 2048, grid=grid(2048), stream=stream0)
        del primals_1021
        del primals_1025
        # Topologically Sorted Source Nodes: [input_517], Original ATen: [aten.convolution]
        buf721 = extern_kernels.convolution(buf720, primals_1026, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf721, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf722 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_517, ll, input_518, input_519], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf721, primals_1027, buf713, primals_1028, primals_1029, primals_1030, primals_1031, buf722, 4096, grid=grid(4096), stream=stream0)
        del primals_1031
        # Topologically Sorted Source Nodes: [input_520], Original ATen: [aten.convolution]
        buf723 = extern_kernels.convolution(buf722, primals_1032, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf723, (4, 2, 16, 16), (512, 1, 32, 2))
        buf724 = buf723; del buf723  # reuse
        buf725 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_520, input_521, input_522], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf724, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, buf725, 2048, grid=grid(2048), stream=stream0)
        del primals_1033
        del primals_1037
        # Topologically Sorted Source Nodes: [input_523], Original ATen: [aten.convolution]
        buf726 = extern_kernels.convolution(buf725, buf58, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf726, (4, 2, 16, 16), (512, 1, 32, 2))
        buf727 = buf726; del buf726  # reuse
        buf728 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_523, input_524, input_525], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf727, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, buf728, 2048, grid=grid(2048), stream=stream0)
        del primals_1039
        del primals_1043
        # Topologically Sorted Source Nodes: [input_526], Original ATen: [aten.convolution]
        buf729 = extern_kernels.convolution(buf728, primals_1044, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf729, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf730 = buf729; del buf729  # reuse
        buf731 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_517, ll, input_526, ll_1, input_527, input_528], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf730, primals_1045, buf721, primals_1027, buf713, primals_1046, primals_1047, primals_1048, primals_1049, buf731, 4096, grid=grid(4096), stream=stream0)
        del primals_1045
        del primals_1049
        # Topologically Sorted Source Nodes: [input_529], Original ATen: [aten.convolution]
        buf732 = extern_kernels.convolution(buf731, primals_1050, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf732, (4, 2, 16, 16), (512, 1, 32, 2))
        buf733 = buf732; del buf732  # reuse
        buf734 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_529, input_530, input_531], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf733, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, buf734, 2048, grid=grid(2048), stream=stream0)
        del primals_1051
        del primals_1055
        # Topologically Sorted Source Nodes: [input_532], Original ATen: [aten.convolution]
        buf735 = extern_kernels.convolution(buf734, buf59, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf735, (4, 2, 16, 16), (512, 1, 32, 2))
        buf736 = buf735; del buf735  # reuse
        buf737 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_532, input_533, input_534], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf736, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, buf737, 2048, grid=grid(2048), stream=stream0)
        del primals_1057
        del primals_1061
        # Topologically Sorted Source Nodes: [input_535], Original ATen: [aten.convolution]
        buf738 = extern_kernels.convolution(buf737, primals_1062, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf738, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf739 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_535, ll_2, input_536, input_537], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf738, primals_1063, buf730, primals_1064, primals_1065, primals_1066, primals_1067, buf739, 4096, grid=grid(4096), stream=stream0)
        del primals_1067
        # Topologically Sorted Source Nodes: [input_538], Original ATen: [aten.convolution]
        buf740 = extern_kernels.convolution(buf739, primals_1068, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf740, (4, 2, 16, 16), (512, 1, 32, 2))
        buf741 = buf740; del buf740  # reuse
        buf742 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_538, input_539, input_540], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf741, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, buf742, 2048, grid=grid(2048), stream=stream0)
        del primals_1069
        del primals_1073
        # Topologically Sorted Source Nodes: [input_541], Original ATen: [aten.convolution]
        buf743 = extern_kernels.convolution(buf742, buf60, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf743, (4, 2, 16, 16), (512, 1, 32, 2))
        buf744 = buf743; del buf743  # reuse
        buf745 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_541, input_542, input_543], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf744, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, buf745, 2048, grid=grid(2048), stream=stream0)
        del primals_1075
        del primals_1079
        # Topologically Sorted Source Nodes: [input_544], Original ATen: [aten.convolution]
        buf746 = extern_kernels.convolution(buf745, primals_1080, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf746, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf747 = buf746; del buf746  # reuse
        # Topologically Sorted Source Nodes: [input_535, ll_2, input_544, ll_3], Original ATen: [aten.convolution, aten.add]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_49.run(buf747, primals_1081, buf738, primals_1063, buf730, 4096, grid=grid(4096), stream=stream0)
        del primals_1081
        # Topologically Sorted Source Nodes: [input_545], Original ATen: [aten.convolution]
        buf748 = extern_kernels.convolution(buf747, primals_1082, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf748, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf749 = buf748; del buf748  # reuse
        buf750 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_545, input_546, input_547], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50.run(buf749, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, buf750, 4096, grid=grid(4096), stream=stream0)
        del primals_1083
        del primals_1087
        # Topologically Sorted Source Nodes: [tmpOut], Original ATen: [aten.convolution]
        buf751 = extern_kernels.convolution(buf750, primals_1088, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf751, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf752 = empty_strided_cuda((4, 4, 16, 16), (1024, 256, 16, 1), torch.float32)
        buf754 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [tmpOut, tmpOut_], Original ATen: [aten.convolution]
        stream0 = get_raw_stream(0)
        triton_poi_fused_convolution_51.run(buf751, primals_1089, buf752, buf754, 16, 256, grid=grid(16, 256), stream=stream0)
        del primals_1089
        # Topologically Sorted Source Nodes: [ll_], Original ATen: [aten.convolution]
        buf753 = extern_kernels.convolution(buf750, primals_1090, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf753, (4, 4, 16, 16), (1024, 1, 64, 4))
        # Topologically Sorted Source Nodes: [tmpOut_], Original ATen: [aten.convolution]
        buf755 = extern_kernels.convolution(buf754, primals_1092, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf755, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf756 = buf753; del buf753  # reuse
        buf757 = buf754; del buf754  # reuse
        # Topologically Sorted Source Nodes: [ll_, tmpOut_, add_63, x, input_548, input_549], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52.run(buf756, buf263, primals_1091, buf755, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, buf757, 4096, grid=grid(4096), stream=stream0)
        del primals_1091
        del primals_1093
        del primals_1097
        # Topologically Sorted Source Nodes: [input_550], Original ATen: [aten.convolution]
        buf758 = extern_kernels.convolution(buf757, primals_1098, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf758, (4, 2, 16, 16), (512, 1, 32, 2))
        buf759 = buf758; del buf758  # reuse
        buf760 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_550, input_551, input_552], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf759, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, buf760, 2048, grid=grid(2048), stream=stream0)
        del primals_1099
        del primals_1103
        # Topologically Sorted Source Nodes: [input_553], Original ATen: [aten.convolution]
        buf761 = extern_kernels.convolution(buf760, buf61, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf761, (4, 2, 16, 16), (512, 1, 32, 2))
        buf762 = buf761; del buf761  # reuse
        buf763 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_553, input_554, input_555], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf762, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, buf763, 2048, grid=grid(2048), stream=stream0)
        del primals_1105
        del primals_1109
        # Topologically Sorted Source Nodes: [input_556], Original ATen: [aten.convolution]
        buf764 = extern_kernels.convolution(buf763, primals_1110, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf764, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf765 = buf755; del buf755  # reuse
        # Topologically Sorted Source Nodes: [input_556, up1_16, input_557, input_558], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf764, primals_1111, buf756, primals_1112, primals_1113, primals_1114, primals_1115, buf765, 4096, grid=grid(4096), stream=stream0)
        del primals_1115
        # Topologically Sorted Source Nodes: [input_559], Original ATen: [aten.convolution]
        buf766 = extern_kernels.convolution(buf765, primals_1116, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf766, (4, 2, 16, 16), (512, 1, 32, 2))
        buf767 = buf766; del buf766  # reuse
        buf768 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_559, input_560, input_561], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf767, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121, buf768, 2048, grid=grid(2048), stream=stream0)
        del primals_1117
        del primals_1121
        # Topologically Sorted Source Nodes: [input_562], Original ATen: [aten.convolution]
        buf769 = extern_kernels.convolution(buf768, buf62, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf769, (4, 2, 16, 16), (512, 1, 32, 2))
        buf770 = buf769; del buf769  # reuse
        buf771 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_562, input_563, input_564], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf770, primals_1123, primals_1124, primals_1125, primals_1126, primals_1127, buf771, 2048, grid=grid(2048), stream=stream0)
        del primals_1123
        del primals_1127
        # Topologically Sorted Source Nodes: [input_565], Original ATen: [aten.convolution]
        buf772 = extern_kernels.convolution(buf771, primals_1128, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf772, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf773 = buf772; del buf772  # reuse
        buf774 = buf751; del buf751  # reuse
        # Topologically Sorted Source Nodes: [input_556, up1_16, input_565, up1_17, input_566, input_567], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf773, primals_1129, buf764, primals_1111, buf756, primals_1130, primals_1131, primals_1132, primals_1133, buf774, 4096, grid=grid(4096), stream=stream0)
        del primals_1129
        del primals_1133
        # Topologically Sorted Source Nodes: [input_568], Original ATen: [aten.convolution]
        buf775 = extern_kernels.convolution(buf774, primals_1134, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf775, (4, 2, 16, 16), (512, 1, 32, 2))
        buf776 = buf775; del buf775  # reuse
        buf777 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_568, input_569, input_570], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf776, primals_1135, primals_1136, primals_1137, primals_1138, primals_1139, buf777, 2048, grid=grid(2048), stream=stream0)
        del primals_1135
        del primals_1139
        # Topologically Sorted Source Nodes: [input_571], Original ATen: [aten.convolution]
        buf778 = extern_kernels.convolution(buf777, buf63, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf778, (4, 2, 16, 16), (512, 1, 32, 2))
        buf779 = buf778; del buf778  # reuse
        buf780 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_571, input_572, input_573], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf779, primals_1141, primals_1142, primals_1143, primals_1144, primals_1145, buf780, 2048, grid=grid(2048), stream=stream0)
        del primals_1141
        del primals_1145
        # Topologically Sorted Source Nodes: [input_574], Original ATen: [aten.convolution]
        buf781 = extern_kernels.convolution(buf780, primals_1146, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf781, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf782 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_574, up1_18, input_575, input_576], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf781, primals_1147, buf773, primals_1148, primals_1149, primals_1150, primals_1151, buf782, 4096, grid=grid(4096), stream=stream0)
        del primals_1151
        # Topologically Sorted Source Nodes: [input_577], Original ATen: [aten.convolution]
        buf783 = extern_kernels.convolution(buf782, primals_1152, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf783, (4, 2, 16, 16), (512, 1, 32, 2))
        buf784 = buf783; del buf783  # reuse
        buf785 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_577, input_578, input_579], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf784, primals_1153, primals_1154, primals_1155, primals_1156, primals_1157, buf785, 2048, grid=grid(2048), stream=stream0)
        del primals_1153
        del primals_1157
        # Topologically Sorted Source Nodes: [input_580], Original ATen: [aten.convolution]
        buf786 = extern_kernels.convolution(buf785, buf64, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf786, (4, 2, 16, 16), (512, 1, 32, 2))
        buf787 = buf786; del buf786  # reuse
        buf788 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_580, input_581, input_582], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf787, primals_1159, primals_1160, primals_1161, primals_1162, primals_1163, buf788, 2048, grid=grid(2048), stream=stream0)
        del primals_1159
        del primals_1163
        # Topologically Sorted Source Nodes: [input_583], Original ATen: [aten.convolution]
        buf789 = extern_kernels.convolution(buf788, primals_1164, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf789, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf790 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.int8)
        buf791 = buf711; del buf711  # reuse
        # Topologically Sorted Source Nodes: [low1_20, input_584, input_585], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14.run(buf756, primals_1166, primals_1167, primals_1168, primals_1169, buf790, buf791, 1024, grid=grid(1024), stream=stream0)
        del primals_1169
        # Topologically Sorted Source Nodes: [input_586], Original ATen: [aten.convolution]
        buf792 = extern_kernels.convolution(buf791, primals_1170, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf792, (4, 2, 8, 8), (128, 1, 16, 2))
        buf793 = buf792; del buf792  # reuse
        buf794 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_586, input_587, input_588], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf793, primals_1171, primals_1172, primals_1173, primals_1174, primals_1175, buf794, 512, grid=grid(512), stream=stream0)
        del primals_1171
        del primals_1175
        # Topologically Sorted Source Nodes: [input_589], Original ATen: [aten.convolution]
        buf795 = extern_kernels.convolution(buf794, buf65, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf795, (4, 2, 8, 8), (128, 1, 16, 2))
        buf796 = buf795; del buf795  # reuse
        buf797 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_589, input_590, input_591], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf796, primals_1177, primals_1178, primals_1179, primals_1180, primals_1181, buf797, 512, grid=grid(512), stream=stream0)
        del primals_1177
        del primals_1181
        # Topologically Sorted Source Nodes: [input_592], Original ATen: [aten.convolution]
        buf798 = extern_kernels.convolution(buf797, primals_1182, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf798, (4, 4, 8, 8), (256, 1, 32, 4))
        buf799 = buf798; del buf798  # reuse
        buf800 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_20, input_592, low1_21, input_593, input_594], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16.run(buf799, primals_1183, buf756, primals_1184, primals_1185, primals_1186, primals_1187, buf800, 1024, grid=grid(1024), stream=stream0)
        del primals_1183
        del primals_1187
        # Topologically Sorted Source Nodes: [input_595], Original ATen: [aten.convolution]
        buf801 = extern_kernels.convolution(buf800, primals_1188, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf801, (4, 2, 8, 8), (128, 1, 16, 2))
        buf802 = buf801; del buf801  # reuse
        buf803 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_595, input_596, input_597], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf802, primals_1189, primals_1190, primals_1191, primals_1192, primals_1193, buf803, 512, grid=grid(512), stream=stream0)
        del primals_1189
        del primals_1193
        # Topologically Sorted Source Nodes: [input_598], Original ATen: [aten.convolution]
        buf804 = extern_kernels.convolution(buf803, buf66, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf804, (4, 2, 8, 8), (128, 1, 16, 2))
        buf805 = buf804; del buf804  # reuse
        buf806 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_598, input_599, input_600], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf805, primals_1195, primals_1196, primals_1197, primals_1198, primals_1199, buf806, 512, grid=grid(512), stream=stream0)
        del primals_1195
        del primals_1199
        # Topologically Sorted Source Nodes: [input_601], Original ATen: [aten.convolution]
        buf807 = extern_kernels.convolution(buf806, primals_1200, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf807, (4, 4, 8, 8), (256, 1, 32, 4))
        buf808 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_601, low1_22, input_602, input_603], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf807, primals_1201, buf799, primals_1202, primals_1203, primals_1204, primals_1205, buf808, 1024, grid=grid(1024), stream=stream0)
        del primals_1205
        # Topologically Sorted Source Nodes: [input_604], Original ATen: [aten.convolution]
        buf809 = extern_kernels.convolution(buf808, primals_1206, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf809, (4, 2, 8, 8), (128, 1, 16, 2))
        buf810 = buf809; del buf809  # reuse
        buf811 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_604, input_605, input_606], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf810, primals_1207, primals_1208, primals_1209, primals_1210, primals_1211, buf811, 512, grid=grid(512), stream=stream0)
        del primals_1207
        del primals_1211
        # Topologically Sorted Source Nodes: [input_607], Original ATen: [aten.convolution]
        buf812 = extern_kernels.convolution(buf811, buf67, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf812, (4, 2, 8, 8), (128, 1, 16, 2))
        buf813 = buf812; del buf812  # reuse
        buf814 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_607, input_608, input_609], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf813, primals_1213, primals_1214, primals_1215, primals_1216, primals_1217, buf814, 512, grid=grid(512), stream=stream0)
        del primals_1213
        del primals_1217
        # Topologically Sorted Source Nodes: [input_610], Original ATen: [aten.convolution]
        buf815 = extern_kernels.convolution(buf814, primals_1218, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf815, (4, 4, 8, 8), (256, 1, 32, 4))
        buf816 = buf815; del buf815  # reuse
        buf817 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2369 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_601, low1_22, input_610, low1_23, input_611, input_612], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18.run(buf816, primals_1219, buf807, primals_1201, buf799, primals_1220, primals_1221, primals_1222, primals_1223, buf817, buf2369, 1024, grid=grid(1024), stream=stream0)
        del primals_1219
        del primals_1220
        del primals_1223
        # Topologically Sorted Source Nodes: [input_613], Original ATen: [aten.convolution]
        buf818 = extern_kernels.convolution(buf817, primals_1224, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf818, (4, 2, 8, 8), (128, 1, 16, 2))
        buf819 = buf818; del buf818  # reuse
        buf820 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_613, input_614, input_615], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf819, primals_1225, primals_1226, primals_1227, primals_1228, primals_1229, buf820, 512, grid=grid(512), stream=stream0)
        del primals_1225
        del primals_1229
        # Topologically Sorted Source Nodes: [input_616], Original ATen: [aten.convolution]
        buf821 = extern_kernels.convolution(buf820, buf68, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf821, (4, 2, 8, 8), (128, 1, 16, 2))
        buf822 = buf821; del buf821  # reuse
        buf823 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_616, input_617, input_618], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf822, primals_1231, primals_1232, primals_1233, primals_1234, primals_1235, buf823, 512, grid=grid(512), stream=stream0)
        del primals_1231
        del primals_1235
        # Topologically Sorted Source Nodes: [input_619], Original ATen: [aten.convolution]
        buf824 = extern_kernels.convolution(buf823, primals_1236, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf824, (4, 4, 8, 8), (256, 1, 32, 4))
        buf825 = buf824; del buf824  # reuse
        buf826 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_619, low1_24, input_620, input_621], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19.run(buf825, primals_1237, buf816, primals_1238, primals_1239, primals_1240, primals_1241, buf826, 1024, grid=grid(1024), stream=stream0)
        del primals_1237
        del primals_1241
        # Topologically Sorted Source Nodes: [input_622], Original ATen: [aten.convolution]
        buf827 = extern_kernels.convolution(buf826, primals_1242, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf827, (4, 2, 8, 8), (128, 1, 16, 2))
        buf828 = buf827; del buf827  # reuse
        buf829 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_622, input_623, input_624], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf828, primals_1243, primals_1244, primals_1245, primals_1246, primals_1247, buf829, 512, grid=grid(512), stream=stream0)
        del primals_1243
        del primals_1247
        # Topologically Sorted Source Nodes: [input_625], Original ATen: [aten.convolution]
        buf830 = extern_kernels.convolution(buf829, buf69, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf830, (4, 2, 8, 8), (128, 1, 16, 2))
        buf831 = buf830; del buf830  # reuse
        buf832 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_625, input_626, input_627], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf831, primals_1249, primals_1250, primals_1251, primals_1252, primals_1253, buf832, 512, grid=grid(512), stream=stream0)
        del primals_1249
        del primals_1253
        # Topologically Sorted Source Nodes: [input_628], Original ATen: [aten.convolution]
        buf833 = extern_kernels.convolution(buf832, primals_1254, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf833, (4, 4, 8, 8), (256, 1, 32, 4))
        buf834 = buf816; del buf816  # reuse
        # Topologically Sorted Source Nodes: [input_628, up1_20, input_629, input_630], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf833, primals_1255, buf825, primals_1256, primals_1257, primals_1258, primals_1259, buf834, 1024, grid=grid(1024), stream=stream0)
        del primals_1259
        # Topologically Sorted Source Nodes: [input_631], Original ATen: [aten.convolution]
        buf835 = extern_kernels.convolution(buf834, primals_1260, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf835, (4, 2, 8, 8), (128, 1, 16, 2))
        buf836 = buf835; del buf835  # reuse
        buf837 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_631, input_632, input_633], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf836, primals_1261, primals_1262, primals_1263, primals_1264, primals_1265, buf837, 512, grid=grid(512), stream=stream0)
        del primals_1261
        del primals_1265
        # Topologically Sorted Source Nodes: [input_634], Original ATen: [aten.convolution]
        buf838 = extern_kernels.convolution(buf837, buf70, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf838, (4, 2, 8, 8), (128, 1, 16, 2))
        buf839 = buf838; del buf838  # reuse
        buf840 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_634, input_635, input_636], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf839, primals_1267, primals_1268, primals_1269, primals_1270, primals_1271, buf840, 512, grid=grid(512), stream=stream0)
        del primals_1267
        del primals_1271
        # Topologically Sorted Source Nodes: [input_637], Original ATen: [aten.convolution]
        buf841 = extern_kernels.convolution(buf840, primals_1272, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf841, (4, 4, 8, 8), (256, 1, 32, 4))
        buf842 = buf841; del buf841  # reuse
        buf843 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_628, up1_20, input_637, up1_21, input_638, input_639], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf842, primals_1273, buf833, primals_1255, buf825, primals_1274, primals_1275, primals_1276, primals_1277, buf843, 1024, grid=grid(1024), stream=stream0)
        del primals_1273
        del primals_1277
        # Topologically Sorted Source Nodes: [input_640], Original ATen: [aten.convolution]
        buf844 = extern_kernels.convolution(buf843, primals_1278, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf844, (4, 2, 8, 8), (128, 1, 16, 2))
        buf845 = buf844; del buf844  # reuse
        buf846 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_640, input_641, input_642], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf845, primals_1279, primals_1280, primals_1281, primals_1282, primals_1283, buf846, 512, grid=grid(512), stream=stream0)
        del primals_1279
        del primals_1283
        # Topologically Sorted Source Nodes: [input_643], Original ATen: [aten.convolution]
        buf847 = extern_kernels.convolution(buf846, buf71, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf847, (4, 2, 8, 8), (128, 1, 16, 2))
        buf848 = buf847; del buf847  # reuse
        buf849 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_643, input_644, input_645], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf848, primals_1285, primals_1286, primals_1287, primals_1288, primals_1289, buf849, 512, grid=grid(512), stream=stream0)
        del primals_1285
        del primals_1289
        # Topologically Sorted Source Nodes: [input_646], Original ATen: [aten.convolution]
        buf850 = extern_kernels.convolution(buf849, primals_1290, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf850, (4, 4, 8, 8), (256, 1, 32, 4))
        buf851 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_646, up1_22, input_647, input_648], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf850, primals_1291, buf842, primals_1292, primals_1293, primals_1294, primals_1295, buf851, 1024, grid=grid(1024), stream=stream0)
        del primals_1295
        # Topologically Sorted Source Nodes: [input_649], Original ATen: [aten.convolution]
        buf852 = extern_kernels.convolution(buf851, primals_1296, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf852, (4, 2, 8, 8), (128, 1, 16, 2))
        buf853 = buf852; del buf852  # reuse
        buf854 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_649, input_650, input_651], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf853, primals_1297, primals_1298, primals_1299, primals_1300, primals_1301, buf854, 512, grid=grid(512), stream=stream0)
        del primals_1297
        del primals_1301
        # Topologically Sorted Source Nodes: [input_652], Original ATen: [aten.convolution]
        buf855 = extern_kernels.convolution(buf854, buf72, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf855, (4, 2, 8, 8), (128, 1, 16, 2))
        buf856 = buf855; del buf855  # reuse
        buf857 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_652, input_653, input_654], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf856, primals_1303, primals_1304, primals_1305, primals_1306, primals_1307, buf857, 512, grid=grid(512), stream=stream0)
        del primals_1303
        del primals_1307
        # Topologically Sorted Source Nodes: [input_655], Original ATen: [aten.convolution]
        buf858 = extern_kernels.convolution(buf857, primals_1308, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf858, (4, 4, 8, 8), (256, 1, 32, 4))
        buf859 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.int8)
        buf860 = buf676; del buf676  # reuse
        # Topologically Sorted Source Nodes: [low1_25, input_656, input_657], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21.run(buf825, primals_1310, primals_1311, primals_1312, primals_1313, buf859, buf860, 256, grid=grid(256), stream=stream0)
        del primals_1313
        # Topologically Sorted Source Nodes: [input_658], Original ATen: [aten.convolution]
        buf861 = extern_kernels.convolution(buf860, primals_1314, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf861, (4, 2, 4, 4), (32, 1, 8, 2))
        buf862 = buf861; del buf861  # reuse
        buf863 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_658, input_659, input_660], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf862, primals_1315, primals_1316, primals_1317, primals_1318, primals_1319, buf863, 128, grid=grid(128), stream=stream0)
        del primals_1315
        del primals_1319
        # Topologically Sorted Source Nodes: [input_661], Original ATen: [aten.convolution]
        buf864 = extern_kernels.convolution(buf863, buf73, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf864, (4, 2, 4, 4), (32, 1, 8, 2))
        buf865 = buf864; del buf864  # reuse
        buf866 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_661, input_662, input_663], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf865, primals_1321, primals_1322, primals_1323, primals_1324, primals_1325, buf866, 128, grid=grid(128), stream=stream0)
        del primals_1321
        del primals_1325
        # Topologically Sorted Source Nodes: [input_664], Original ATen: [aten.convolution]
        buf867 = extern_kernels.convolution(buf866, primals_1326, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf867, (4, 4, 4, 4), (64, 1, 16, 4))
        buf868 = buf867; del buf867  # reuse
        buf869 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_25, input_664, low1_26, input_665, input_666], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23.run(buf868, primals_1327, buf825, primals_1328, primals_1329, primals_1330, primals_1331, buf869, 256, grid=grid(256), stream=stream0)
        del primals_1327
        del primals_1331
        # Topologically Sorted Source Nodes: [input_667], Original ATen: [aten.convolution]
        buf870 = extern_kernels.convolution(buf869, primals_1332, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf870, (4, 2, 4, 4), (32, 1, 8, 2))
        buf871 = buf870; del buf870  # reuse
        buf872 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_667, input_668, input_669], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf871, primals_1333, primals_1334, primals_1335, primals_1336, primals_1337, buf872, 128, grid=grid(128), stream=stream0)
        del primals_1333
        del primals_1337
        # Topologically Sorted Source Nodes: [input_670], Original ATen: [aten.convolution]
        buf873 = extern_kernels.convolution(buf872, buf74, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf873, (4, 2, 4, 4), (32, 1, 8, 2))
        buf874 = buf873; del buf873  # reuse
        buf875 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_670, input_671, input_672], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf874, primals_1339, primals_1340, primals_1341, primals_1342, primals_1343, buf875, 128, grid=grid(128), stream=stream0)
        del primals_1339
        del primals_1343
        # Topologically Sorted Source Nodes: [input_673], Original ATen: [aten.convolution]
        buf876 = extern_kernels.convolution(buf875, primals_1344, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf876, (4, 4, 4, 4), (64, 1, 16, 4))
        buf877 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_673, low1_27, input_674, input_675], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf876, primals_1345, buf868, primals_1346, primals_1347, primals_1348, primals_1349, buf877, 256, grid=grid(256), stream=stream0)
        del primals_1349
        # Topologically Sorted Source Nodes: [input_676], Original ATen: [aten.convolution]
        buf878 = extern_kernels.convolution(buf877, primals_1350, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf878, (4, 2, 4, 4), (32, 1, 8, 2))
        buf879 = buf878; del buf878  # reuse
        buf880 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_676, input_677, input_678], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf879, primals_1351, primals_1352, primals_1353, primals_1354, primals_1355, buf880, 128, grid=grid(128), stream=stream0)
        del primals_1351
        del primals_1355
        # Topologically Sorted Source Nodes: [input_679], Original ATen: [aten.convolution]
        buf881 = extern_kernels.convolution(buf880, buf75, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf881, (4, 2, 4, 4), (32, 1, 8, 2))
        buf882 = buf881; del buf881  # reuse
        buf883 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_679, input_680, input_681], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf882, primals_1357, primals_1358, primals_1359, primals_1360, primals_1361, buf883, 128, grid=grid(128), stream=stream0)
        del primals_1357
        del primals_1361
        # Topologically Sorted Source Nodes: [input_682], Original ATen: [aten.convolution]
        buf884 = extern_kernels.convolution(buf883, primals_1362, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf884, (4, 4, 4, 4), (64, 1, 16, 4))
        buf885 = buf884; del buf884  # reuse
        buf886 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        buf2362 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_673, low1_27, input_682, low1_28, input_683, input_684], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25.run(buf885, primals_1363, buf876, primals_1345, buf868, primals_1364, primals_1365, primals_1366, primals_1367, buf886, buf2362, 256, grid=grid(256), stream=stream0)
        del primals_1363
        del primals_1364
        del primals_1367
        # Topologically Sorted Source Nodes: [input_685], Original ATen: [aten.convolution]
        buf887 = extern_kernels.convolution(buf886, primals_1368, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf887, (4, 2, 4, 4), (32, 1, 8, 2))
        buf888 = buf887; del buf887  # reuse
        buf889 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_685, input_686, input_687], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf888, primals_1369, primals_1370, primals_1371, primals_1372, primals_1373, buf889, 128, grid=grid(128), stream=stream0)
        del primals_1369
        del primals_1373
        # Topologically Sorted Source Nodes: [input_688], Original ATen: [aten.convolution]
        buf890 = extern_kernels.convolution(buf889, buf76, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf890, (4, 2, 4, 4), (32, 1, 8, 2))
        buf891 = buf890; del buf890  # reuse
        buf892 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_688, input_689, input_690], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf891, primals_1375, primals_1376, primals_1377, primals_1378, primals_1379, buf892, 128, grid=grid(128), stream=stream0)
        del primals_1375
        del primals_1379
        # Topologically Sorted Source Nodes: [input_691], Original ATen: [aten.convolution]
        buf893 = extern_kernels.convolution(buf892, primals_1380, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf893, (4, 4, 4, 4), (64, 1, 16, 4))
        buf894 = buf893; del buf893  # reuse
        buf895 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_691, low1_29, input_692, input_693], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26.run(buf894, primals_1381, buf885, primals_1382, primals_1383, primals_1384, primals_1385, buf895, 256, grid=grid(256), stream=stream0)
        del primals_1381
        del primals_1385
        # Topologically Sorted Source Nodes: [input_694], Original ATen: [aten.convolution]
        buf896 = extern_kernels.convolution(buf895, primals_1386, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf896, (4, 2, 4, 4), (32, 1, 8, 2))
        buf897 = buf896; del buf896  # reuse
        buf898 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_694, input_695, input_696], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf897, primals_1387, primals_1388, primals_1389, primals_1390, primals_1391, buf898, 128, grid=grid(128), stream=stream0)
        del primals_1387
        del primals_1391
        # Topologically Sorted Source Nodes: [input_697], Original ATen: [aten.convolution]
        buf899 = extern_kernels.convolution(buf898, buf77, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf899, (4, 2, 4, 4), (32, 1, 8, 2))
        buf900 = buf899; del buf899  # reuse
        buf901 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_697, input_698, input_699], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf900, primals_1393, primals_1394, primals_1395, primals_1396, primals_1397, buf901, 128, grid=grid(128), stream=stream0)
        del primals_1393
        del primals_1397
        # Topologically Sorted Source Nodes: [input_700], Original ATen: [aten.convolution]
        buf902 = extern_kernels.convolution(buf901, primals_1398, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf902, (4, 4, 4, 4), (64, 1, 16, 4))
        buf903 = buf885; del buf885  # reuse
        # Topologically Sorted Source Nodes: [input_700, up1_24, input_701, input_702], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf902, primals_1399, buf894, primals_1400, primals_1401, primals_1402, primals_1403, buf903, 256, grid=grid(256), stream=stream0)
        del primals_1403
        # Topologically Sorted Source Nodes: [input_703], Original ATen: [aten.convolution]
        buf904 = extern_kernels.convolution(buf903, primals_1404, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf904, (4, 2, 4, 4), (32, 1, 8, 2))
        buf905 = buf904; del buf904  # reuse
        buf906 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_703, input_704, input_705], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf905, primals_1405, primals_1406, primals_1407, primals_1408, primals_1409, buf906, 128, grid=grid(128), stream=stream0)
        del primals_1405
        del primals_1409
        # Topologically Sorted Source Nodes: [input_706], Original ATen: [aten.convolution]
        buf907 = extern_kernels.convolution(buf906, buf78, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf907, (4, 2, 4, 4), (32, 1, 8, 2))
        buf908 = buf907; del buf907  # reuse
        buf909 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_706, input_707, input_708], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf908, primals_1411, primals_1412, primals_1413, primals_1414, primals_1415, buf909, 128, grid=grid(128), stream=stream0)
        del primals_1411
        del primals_1415
        # Topologically Sorted Source Nodes: [input_709], Original ATen: [aten.convolution]
        buf910 = extern_kernels.convolution(buf909, primals_1416, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf910, (4, 4, 4, 4), (64, 1, 16, 4))
        buf911 = buf910; del buf910  # reuse
        buf912 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_700, up1_24, input_709, up1_25, input_710, input_711], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf911, primals_1417, buf902, primals_1399, buf894, primals_1418, primals_1419, primals_1420, primals_1421, buf912, 256, grid=grid(256), stream=stream0)
        del primals_1417
        del primals_1421
        # Topologically Sorted Source Nodes: [input_712], Original ATen: [aten.convolution]
        buf913 = extern_kernels.convolution(buf912, primals_1422, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf913, (4, 2, 4, 4), (32, 1, 8, 2))
        buf914 = buf913; del buf913  # reuse
        buf915 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_712, input_713, input_714], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf914, primals_1423, primals_1424, primals_1425, primals_1426, primals_1427, buf915, 128, grid=grid(128), stream=stream0)
        del primals_1423
        del primals_1427
        # Topologically Sorted Source Nodes: [input_715], Original ATen: [aten.convolution]
        buf916 = extern_kernels.convolution(buf915, buf79, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf916, (4, 2, 4, 4), (32, 1, 8, 2))
        buf917 = buf916; del buf916  # reuse
        buf918 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_715, input_716, input_717], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf917, primals_1429, primals_1430, primals_1431, primals_1432, primals_1433, buf918, 128, grid=grid(128), stream=stream0)
        del primals_1429
        del primals_1433
        # Topologically Sorted Source Nodes: [input_718], Original ATen: [aten.convolution]
        buf919 = extern_kernels.convolution(buf918, primals_1434, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf919, (4, 4, 4, 4), (64, 1, 16, 4))
        buf920 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_718, up1_26, input_719, input_720], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf919, primals_1435, buf911, primals_1436, primals_1437, primals_1438, primals_1439, buf920, 256, grid=grid(256), stream=stream0)
        del primals_1439
        # Topologically Sorted Source Nodes: [input_721], Original ATen: [aten.convolution]
        buf921 = extern_kernels.convolution(buf920, primals_1440, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf921, (4, 2, 4, 4), (32, 1, 8, 2))
        buf922 = buf921; del buf921  # reuse
        buf923 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_721, input_722, input_723], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf922, primals_1441, primals_1442, primals_1443, primals_1444, primals_1445, buf923, 128, grid=grid(128), stream=stream0)
        del primals_1441
        del primals_1445
        # Topologically Sorted Source Nodes: [input_724], Original ATen: [aten.convolution]
        buf924 = extern_kernels.convolution(buf923, buf80, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf924, (4, 2, 4, 4), (32, 1, 8, 2))
        buf925 = buf924; del buf924  # reuse
        buf926 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_724, input_725, input_726], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf925, primals_1447, primals_1448, primals_1449, primals_1450, primals_1451, buf926, 128, grid=grid(128), stream=stream0)
        del primals_1447
        del primals_1451
        # Topologically Sorted Source Nodes: [input_727], Original ATen: [aten.convolution]
        buf927 = extern_kernels.convolution(buf926, primals_1452, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf927, (4, 4, 4, 4), (64, 1, 16, 4))
        buf928 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.int8)
        buf929 = buf641; del buf641  # reuse
        # Topologically Sorted Source Nodes: [low1_30, input_728, input_729], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28.run(buf894, primals_1454, primals_1455, primals_1456, primals_1457, buf928, buf929, 64, grid=grid(64), stream=stream0)
        del primals_1457
        # Topologically Sorted Source Nodes: [input_730], Original ATen: [aten.convolution]
        buf930 = extern_kernels.convolution(buf929, primals_1458, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf930, (4, 2, 2, 2), (8, 1, 4, 2))
        buf931 = buf930; del buf930  # reuse
        buf932 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_730, input_731, input_732], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf931, primals_1459, primals_1460, primals_1461, primals_1462, primals_1463, buf932, 32, grid=grid(32), stream=stream0)
        del primals_1459
        del primals_1463
        # Topologically Sorted Source Nodes: [input_733], Original ATen: [aten.convolution]
        buf933 = extern_kernels.convolution(buf932, buf81, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf933, (4, 2, 2, 2), (8, 1, 4, 2))
        buf934 = buf933; del buf933  # reuse
        buf935 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_733, input_734, input_735], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf934, primals_1465, primals_1466, primals_1467, primals_1468, primals_1469, buf935, 32, grid=grid(32), stream=stream0)
        del primals_1465
        del primals_1469
        # Topologically Sorted Source Nodes: [input_736], Original ATen: [aten.convolution]
        buf936 = extern_kernels.convolution(buf935, primals_1470, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf936, (4, 4, 2, 2), (16, 1, 8, 4))
        buf937 = buf936; del buf936  # reuse
        buf938 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_30, input_736, low1_31, input_737, input_738], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30.run(buf937, primals_1471, buf894, primals_1472, primals_1473, primals_1474, primals_1475, buf938, 64, grid=grid(64), stream=stream0)
        del primals_1471
        del primals_1475
        # Topologically Sorted Source Nodes: [input_739], Original ATen: [aten.convolution]
        buf939 = extern_kernels.convolution(buf938, primals_1476, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf939, (4, 2, 2, 2), (8, 1, 4, 2))
        buf940 = buf939; del buf939  # reuse
        buf941 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_739, input_740, input_741], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf940, primals_1477, primals_1478, primals_1479, primals_1480, primals_1481, buf941, 32, grid=grid(32), stream=stream0)
        del primals_1477
        del primals_1481
        # Topologically Sorted Source Nodes: [input_742], Original ATen: [aten.convolution]
        buf942 = extern_kernels.convolution(buf941, buf82, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf942, (4, 2, 2, 2), (8, 1, 4, 2))
        buf943 = buf942; del buf942  # reuse
        buf944 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_742, input_743, input_744], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf943, primals_1483, primals_1484, primals_1485, primals_1486, primals_1487, buf944, 32, grid=grid(32), stream=stream0)
        del primals_1483
        del primals_1487
        # Topologically Sorted Source Nodes: [input_745], Original ATen: [aten.convolution]
        buf945 = extern_kernels.convolution(buf944, primals_1488, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf945, (4, 4, 2, 2), (16, 1, 8, 4))
        buf946 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_745, low1_32, input_746, input_747], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf945, primals_1489, buf937, primals_1490, primals_1491, primals_1492, primals_1493, buf946, 64, grid=grid(64), stream=stream0)
        del primals_1493
        # Topologically Sorted Source Nodes: [input_748], Original ATen: [aten.convolution]
        buf947 = extern_kernels.convolution(buf946, primals_1494, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf947, (4, 2, 2, 2), (8, 1, 4, 2))
        buf948 = buf947; del buf947  # reuse
        buf949 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_748, input_749, input_750], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf948, primals_1495, primals_1496, primals_1497, primals_1498, primals_1499, buf949, 32, grid=grid(32), stream=stream0)
        del primals_1495
        del primals_1499
        # Topologically Sorted Source Nodes: [input_751], Original ATen: [aten.convolution]
        buf950 = extern_kernels.convolution(buf949, buf83, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf950, (4, 2, 2, 2), (8, 1, 4, 2))
        buf951 = buf950; del buf950  # reuse
        buf952 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_751, input_752, input_753], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf951, primals_1501, primals_1502, primals_1503, primals_1504, primals_1505, buf952, 32, grid=grid(32), stream=stream0)
        del primals_1501
        del primals_1505
        # Topologically Sorted Source Nodes: [input_754], Original ATen: [aten.convolution]
        buf953 = extern_kernels.convolution(buf952, primals_1506, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf953, (4, 4, 2, 2), (16, 1, 8, 4))
        buf954 = buf953; del buf953  # reuse
        buf955 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        buf2355 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_745, low1_32, input_754, low1_33, input_755, input_756], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32.run(buf954, primals_1507, buf945, primals_1489, buf937, primals_1508, primals_1509, primals_1510, primals_1511, buf955, buf2355, 64, grid=grid(64), stream=stream0)
        del primals_1507
        del primals_1508
        del primals_1511
        # Topologically Sorted Source Nodes: [input_757], Original ATen: [aten.convolution]
        buf956 = extern_kernels.convolution(buf955, primals_1512, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf956, (4, 2, 2, 2), (8, 1, 4, 2))
        buf957 = buf956; del buf956  # reuse
        buf958 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_757, input_758, input_759], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf957, primals_1513, primals_1514, primals_1515, primals_1516, primals_1517, buf958, 32, grid=grid(32), stream=stream0)
        del primals_1513
        del primals_1517
        # Topologically Sorted Source Nodes: [input_760], Original ATen: [aten.convolution]
        buf959 = extern_kernels.convolution(buf958, buf84, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf959, (4, 2, 2, 2), (8, 1, 4, 2))
        buf960 = buf959; del buf959  # reuse
        buf961 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_760, input_761, input_762], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf960, primals_1519, primals_1520, primals_1521, primals_1522, primals_1523, buf961, 32, grid=grid(32), stream=stream0)
        del primals_1519
        del primals_1523
        # Topologically Sorted Source Nodes: [input_763], Original ATen: [aten.convolution]
        buf962 = extern_kernels.convolution(buf961, primals_1524, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf962, (4, 4, 2, 2), (16, 1, 8, 4))
        buf963 = buf962; del buf962  # reuse
        buf964 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_763, low1_34, input_764, input_765], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33.run(buf963, primals_1525, buf954, primals_1526, primals_1527, primals_1528, primals_1529, buf964, 64, grid=grid(64), stream=stream0)
        del primals_1525
        del primals_1529
        # Topologically Sorted Source Nodes: [input_766], Original ATen: [aten.convolution]
        buf965 = extern_kernels.convolution(buf964, primals_1530, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf965, (4, 2, 2, 2), (8, 1, 4, 2))
        buf966 = buf965; del buf965  # reuse
        buf967 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_766, input_767, input_768], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf966, primals_1531, primals_1532, primals_1533, primals_1534, primals_1535, buf967, 32, grid=grid(32), stream=stream0)
        del primals_1531
        del primals_1535
        # Topologically Sorted Source Nodes: [input_769], Original ATen: [aten.convolution]
        buf968 = extern_kernels.convolution(buf967, buf85, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf968, (4, 2, 2, 2), (8, 1, 4, 2))
        buf969 = buf968; del buf968  # reuse
        buf970 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_769, input_770, input_771], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf969, primals_1537, primals_1538, primals_1539, primals_1540, primals_1541, buf970, 32, grid=grid(32), stream=stream0)
        del primals_1537
        del primals_1541
        # Topologically Sorted Source Nodes: [input_772], Original ATen: [aten.convolution]
        buf971 = extern_kernels.convolution(buf970, primals_1542, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf971, (4, 4, 2, 2), (16, 1, 8, 4))
        buf972 = buf954; del buf954  # reuse
        # Topologically Sorted Source Nodes: [input_772, up1_28, input_773, input_774], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf971, primals_1543, buf963, primals_1544, primals_1545, primals_1546, primals_1547, buf972, 64, grid=grid(64), stream=stream0)
        del primals_1547
        # Topologically Sorted Source Nodes: [input_775], Original ATen: [aten.convolution]
        buf973 = extern_kernels.convolution(buf972, primals_1548, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf973, (4, 2, 2, 2), (8, 1, 4, 2))
        buf974 = buf973; del buf973  # reuse
        buf975 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_775, input_776, input_777], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf974, primals_1549, primals_1550, primals_1551, primals_1552, primals_1553, buf975, 32, grid=grid(32), stream=stream0)
        del primals_1549
        del primals_1553
        # Topologically Sorted Source Nodes: [input_778], Original ATen: [aten.convolution]
        buf976 = extern_kernels.convolution(buf975, buf86, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf976, (4, 2, 2, 2), (8, 1, 4, 2))
        buf977 = buf976; del buf976  # reuse
        buf978 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_778, input_779, input_780], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf977, primals_1555, primals_1556, primals_1557, primals_1558, primals_1559, buf978, 32, grid=grid(32), stream=stream0)
        del primals_1555
        del primals_1559
        # Topologically Sorted Source Nodes: [input_781], Original ATen: [aten.convolution]
        buf979 = extern_kernels.convolution(buf978, primals_1560, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf979, (4, 4, 2, 2), (16, 1, 8, 4))
        buf980 = buf979; del buf979  # reuse
        buf981 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_772, up1_28, input_781, up1_29, input_782, input_783], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf980, primals_1561, buf971, primals_1543, buf963, primals_1562, primals_1563, primals_1564, primals_1565, buf981, 64, grid=grid(64), stream=stream0)
        del primals_1561
        del primals_1565
        # Topologically Sorted Source Nodes: [input_784], Original ATen: [aten.convolution]
        buf982 = extern_kernels.convolution(buf981, primals_1566, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf982, (4, 2, 2, 2), (8, 1, 4, 2))
        buf983 = buf982; del buf982  # reuse
        buf984 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_784, input_785, input_786], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf983, primals_1567, primals_1568, primals_1569, primals_1570, primals_1571, buf984, 32, grid=grid(32), stream=stream0)
        del primals_1567
        del primals_1571
        # Topologically Sorted Source Nodes: [input_787], Original ATen: [aten.convolution]
        buf985 = extern_kernels.convolution(buf984, buf87, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf985, (4, 2, 2, 2), (8, 1, 4, 2))
        buf986 = buf985; del buf985  # reuse
        buf987 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_787, input_788, input_789], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf986, primals_1573, primals_1574, primals_1575, primals_1576, primals_1577, buf987, 32, grid=grid(32), stream=stream0)
        del primals_1573
        del primals_1577
        # Topologically Sorted Source Nodes: [input_790], Original ATen: [aten.convolution]
        buf988 = extern_kernels.convolution(buf987, primals_1578, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf988, (4, 4, 2, 2), (16, 1, 8, 4))
        buf989 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_790, up1_30, input_791, input_792], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf988, primals_1579, buf980, primals_1580, primals_1581, primals_1582, primals_1583, buf989, 64, grid=grid(64), stream=stream0)
        del primals_1583
        # Topologically Sorted Source Nodes: [input_793], Original ATen: [aten.convolution]
        buf990 = extern_kernels.convolution(buf989, primals_1584, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf990, (4, 2, 2, 2), (8, 1, 4, 2))
        buf991 = buf990; del buf990  # reuse
        buf992 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_793, input_794, input_795], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf991, primals_1585, primals_1586, primals_1587, primals_1588, primals_1589, buf992, 32, grid=grid(32), stream=stream0)
        del primals_1585
        del primals_1589
        # Topologically Sorted Source Nodes: [input_796], Original ATen: [aten.convolution]
        buf993 = extern_kernels.convolution(buf992, buf88, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf993, (4, 2, 2, 2), (8, 1, 4, 2))
        buf994 = buf993; del buf993  # reuse
        buf995 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_796, input_797, input_798], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf994, primals_1591, primals_1592, primals_1593, primals_1594, primals_1595, buf995, 32, grid=grid(32), stream=stream0)
        del primals_1591
        del primals_1595
        # Topologically Sorted Source Nodes: [input_799], Original ATen: [aten.convolution]
        buf996 = extern_kernels.convolution(buf995, primals_1596, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf996, (4, 4, 2, 2), (16, 1, 8, 4))
        buf997 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.int8)
        buf998 = buf606; del buf606  # reuse
        # Topologically Sorted Source Nodes: [low1_35, input_800, input_801], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35.run(buf963, primals_1598, primals_1599, primals_1600, primals_1601, buf997, buf998, 16, grid=grid(16), stream=stream0)
        del primals_1601
        # Topologically Sorted Source Nodes: [input_802], Original ATen: [aten.convolution]
        buf999 = extern_kernels.convolution(buf998, primals_1602, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf999, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1000 = buf999; del buf999  # reuse
        buf1001 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_802, input_803, input_804], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1000, primals_1603, primals_1604, primals_1605, primals_1606, primals_1607, buf1001, 8, grid=grid(8), stream=stream0)
        del primals_1603
        del primals_1607
        # Topologically Sorted Source Nodes: [input_805], Original ATen: [aten.convolution]
        buf1002 = extern_kernels.convolution(buf1001, buf89, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1002, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1003 = buf1002; del buf1002  # reuse
        buf1004 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_805, input_806, input_807], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1003, primals_1609, primals_1610, primals_1611, primals_1612, primals_1613, buf1004, 8, grid=grid(8), stream=stream0)
        del primals_1609
        del primals_1613
        # Topologically Sorted Source Nodes: [input_808], Original ATen: [aten.convolution]
        buf1005 = extern_kernels.convolution(buf1004, primals_1614, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1005, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1006 = reinterpret_tensor(buf1005, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1005  # reuse
        buf1007 = reinterpret_tensor(buf598, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf598  # reuse
        # Topologically Sorted Source Nodes: [low1_35, input_808, low1_36, input_809, input_810], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37.run(buf1006, primals_1615, buf963, primals_1616, primals_1617, primals_1618, primals_1619, buf1007, 16, grid=grid(16), stream=stream0)
        del primals_1615
        del primals_1619
        # Topologically Sorted Source Nodes: [input_811], Original ATen: [aten.convolution]
        buf1008 = extern_kernels.convolution(buf1007, primals_1620, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1008, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1009 = buf1008; del buf1008  # reuse
        buf1010 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_811, input_812, input_813], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1009, primals_1621, primals_1622, primals_1623, primals_1624, primals_1625, buf1010, 8, grid=grid(8), stream=stream0)
        del primals_1621
        del primals_1625
        # Topologically Sorted Source Nodes: [input_814], Original ATen: [aten.convolution]
        buf1011 = extern_kernels.convolution(buf1010, buf90, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1011, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1012 = buf1011; del buf1011  # reuse
        buf1013 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_814, input_815, input_816], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1012, primals_1627, primals_1628, primals_1629, primals_1630, primals_1631, buf1013, 8, grid=grid(8), stream=stream0)
        del primals_1627
        del primals_1631
        # Topologically Sorted Source Nodes: [input_817], Original ATen: [aten.convolution]
        buf1014 = extern_kernels.convolution(buf1013, primals_1632, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1014, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1015 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_817, low1_37, input_818, input_819], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1014, primals_1633, buf1006, primals_1634, primals_1635, primals_1636, primals_1637, buf1015, 16, grid=grid(16), stream=stream0)
        del primals_1637
        # Topologically Sorted Source Nodes: [input_820], Original ATen: [aten.convolution]
        buf1016 = extern_kernels.convolution(buf1015, primals_1638, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1016, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1017 = buf1016; del buf1016  # reuse
        buf1018 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_820, input_821, input_822], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1017, primals_1639, primals_1640, primals_1641, primals_1642, primals_1643, buf1018, 8, grid=grid(8), stream=stream0)
        del primals_1639
        del primals_1643
        # Topologically Sorted Source Nodes: [input_823], Original ATen: [aten.convolution]
        buf1019 = extern_kernels.convolution(buf1018, buf91, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1019, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1020 = buf1019; del buf1019  # reuse
        buf1021 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_823, input_824, input_825], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1020, primals_1645, primals_1646, primals_1647, primals_1648, primals_1649, buf1021, 8, grid=grid(8), stream=stream0)
        del primals_1645
        del primals_1649
        # Topologically Sorted Source Nodes: [input_826], Original ATen: [aten.convolution]
        buf1022 = extern_kernels.convolution(buf1021, primals_1650, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1022, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1023 = reinterpret_tensor(buf1022, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1022  # reuse
        buf1024 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_817, low1_37, input_826, low1_38, input_827, input_828], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1023, primals_1651, buf1014, primals_1633, buf1006, primals_1652, primals_1653, primals_1654, primals_1655, buf1024, 16, grid=grid(16), stream=stream0)
        del primals_1651
        del primals_1655
        # Topologically Sorted Source Nodes: [input_829], Original ATen: [aten.convolution]
        buf1025 = extern_kernels.convolution(buf1024, primals_1656, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1025, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1026 = buf1025; del buf1025  # reuse
        buf1027 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_829, input_830, input_831], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1026, primals_1657, primals_1658, primals_1659, primals_1660, primals_1661, buf1027, 8, grid=grid(8), stream=stream0)
        del primals_1657
        del primals_1661
        # Topologically Sorted Source Nodes: [input_832], Original ATen: [aten.convolution]
        buf1028 = extern_kernels.convolution(buf1027, buf92, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1028, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1029 = buf1028; del buf1028  # reuse
        buf1030 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_832, input_833, input_834], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1029, primals_1663, primals_1664, primals_1665, primals_1666, primals_1667, buf1030, 8, grid=grid(8), stream=stream0)
        del primals_1663
        del primals_1667
        # Topologically Sorted Source Nodes: [input_835], Original ATen: [aten.convolution]
        buf1031 = extern_kernels.convolution(buf1030, primals_1668, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1031, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1032 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_835, low1_39, input_836, input_837], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1031, primals_1669, buf1023, primals_1670, primals_1671, primals_1672, primals_1673, buf1032, 16, grid=grid(16), stream=stream0)
        del primals_1673
        # Topologically Sorted Source Nodes: [input_838], Original ATen: [aten.convolution]
        buf1033 = extern_kernels.convolution(buf1032, primals_1674, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1033, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1034 = buf1033; del buf1033  # reuse
        buf1035 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_838, input_839, input_840], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1034, primals_1675, primals_1676, primals_1677, primals_1678, primals_1679, buf1035, 8, grid=grid(8), stream=stream0)
        del primals_1675
        del primals_1679
        # Topologically Sorted Source Nodes: [input_841], Original ATen: [aten.convolution]
        buf1036 = extern_kernels.convolution(buf1035, buf93, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1036, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1037 = buf1036; del buf1036  # reuse
        buf1038 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_841, input_842, input_843], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1037, primals_1681, primals_1682, primals_1683, primals_1684, primals_1685, buf1038, 8, grid=grid(8), stream=stream0)
        del primals_1681
        del primals_1685
        # Topologically Sorted Source Nodes: [input_844], Original ATen: [aten.convolution]
        buf1039 = extern_kernels.convolution(buf1038, primals_1686, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1039, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1040 = reinterpret_tensor(buf1039, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1039  # reuse
        buf1041 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_835, low1_39, input_844, low2_7, input_845, input_846], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1040, primals_1687, buf1031, primals_1669, buf1023, primals_1688, primals_1689, primals_1690, primals_1691, buf1041, 16, grid=grid(16), stream=stream0)
        del primals_1687
        del primals_1691
        # Topologically Sorted Source Nodes: [input_847], Original ATen: [aten.convolution]
        buf1042 = extern_kernels.convolution(buf1041, primals_1692, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1042, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1043 = buf1042; del buf1042  # reuse
        buf1044 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_847, input_848, input_849], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1043, primals_1693, primals_1694, primals_1695, primals_1696, primals_1697, buf1044, 8, grid=grid(8), stream=stream0)
        del primals_1693
        del primals_1697
        # Topologically Sorted Source Nodes: [input_850], Original ATen: [aten.convolution]
        buf1045 = extern_kernels.convolution(buf1044, buf94, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1045, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1046 = buf1045; del buf1045  # reuse
        buf1047 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_850, input_851, input_852], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1046, primals_1699, primals_1700, primals_1701, primals_1702, primals_1703, buf1047, 8, grid=grid(8), stream=stream0)
        del primals_1699
        del primals_1703
        # Topologically Sorted Source Nodes: [input_853], Original ATen: [aten.convolution]
        buf1048 = extern_kernels.convolution(buf1047, primals_1704, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1048, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1049 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_853, low2_8, input_854, input_855], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1048, primals_1705, buf1040, primals_1706, primals_1707, primals_1708, primals_1709, buf1049, 16, grid=grid(16), stream=stream0)
        del primals_1709
        # Topologically Sorted Source Nodes: [input_856], Original ATen: [aten.convolution]
        buf1050 = extern_kernels.convolution(buf1049, primals_1710, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1050, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1051 = buf1050; del buf1050  # reuse
        buf1052 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_856, input_857, input_858], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1051, primals_1711, primals_1712, primals_1713, primals_1714, primals_1715, buf1052, 8, grid=grid(8), stream=stream0)
        del primals_1711
        del primals_1715
        # Topologically Sorted Source Nodes: [input_859], Original ATen: [aten.convolution]
        buf1053 = extern_kernels.convolution(buf1052, buf95, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1053, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1054 = buf1053; del buf1053  # reuse
        buf1055 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_859, input_860, input_861], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1054, primals_1717, primals_1718, primals_1719, primals_1720, primals_1721, buf1055, 8, grid=grid(8), stream=stream0)
        del primals_1717
        del primals_1721
        # Topologically Sorted Source Nodes: [input_862], Original ATen: [aten.convolution]
        buf1056 = extern_kernels.convolution(buf1055, primals_1722, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1056, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1057 = reinterpret_tensor(buf1056, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1056  # reuse
        buf1058 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_853, low2_8, input_862, low2_9, input_863, input_864], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1057, primals_1723, buf1048, primals_1705, buf1040, primals_1724, primals_1725, primals_1726, primals_1727, buf1058, 16, grid=grid(16), stream=stream0)
        del primals_1723
        del primals_1727
        # Topologically Sorted Source Nodes: [input_865], Original ATen: [aten.convolution]
        buf1059 = extern_kernels.convolution(buf1058, primals_1728, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1059, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1060 = buf1059; del buf1059  # reuse
        buf1061 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_865, input_866, input_867], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1060, primals_1729, primals_1730, primals_1731, primals_1732, primals_1733, buf1061, 8, grid=grid(8), stream=stream0)
        del primals_1729
        del primals_1733
        # Topologically Sorted Source Nodes: [input_868], Original ATen: [aten.convolution]
        buf1062 = extern_kernels.convolution(buf1061, buf96, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1062, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1063 = buf1062; del buf1062  # reuse
        buf1064 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_868, input_869, input_870], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1063, primals_1735, primals_1736, primals_1737, primals_1738, primals_1739, buf1064, 8, grid=grid(8), stream=stream0)
        del primals_1735
        del primals_1739
        # Topologically Sorted Source Nodes: [input_871], Original ATen: [aten.convolution]
        buf1065 = extern_kernels.convolution(buf1064, primals_1740, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1065, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1066 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_871, low2_10, input_872, input_873], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1065, primals_1741, buf1057, primals_1742, primals_1743, primals_1744, primals_1745, buf1066, 16, grid=grid(16), stream=stream0)
        del primals_1745
        # Topologically Sorted Source Nodes: [input_874], Original ATen: [aten.convolution]
        buf1067 = extern_kernels.convolution(buf1066, primals_1746, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1067, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1068 = buf1067; del buf1067  # reuse
        buf1069 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_874, input_875, input_876], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1068, primals_1747, primals_1748, primals_1749, primals_1750, primals_1751, buf1069, 8, grid=grid(8), stream=stream0)
        del primals_1747
        del primals_1751
        # Topologically Sorted Source Nodes: [input_877], Original ATen: [aten.convolution]
        buf1070 = extern_kernels.convolution(buf1069, buf97, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1070, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1071 = buf1070; del buf1070  # reuse
        buf1072 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_877, input_878, input_879], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1071, primals_1753, primals_1754, primals_1755, primals_1756, primals_1757, buf1072, 8, grid=grid(8), stream=stream0)
        del primals_1753
        del primals_1757
        # Topologically Sorted Source Nodes: [input_880], Original ATen: [aten.convolution]
        buf1073 = extern_kernels.convolution(buf1072, primals_1758, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1073, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1074 = reinterpret_tensor(buf1073, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1073  # reuse
        buf1075 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_871, low2_10, input_880, low3_16, input_881, input_882], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1074, primals_1759, buf1065, primals_1741, buf1057, primals_1760, primals_1761, primals_1762, primals_1763, buf1075, 16, grid=grid(16), stream=stream0)
        del primals_1759
        del primals_1763
        # Topologically Sorted Source Nodes: [input_883], Original ATen: [aten.convolution]
        buf1076 = extern_kernels.convolution(buf1075, primals_1764, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1076, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1077 = buf1076; del buf1076  # reuse
        buf1078 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_883, input_884, input_885], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1077, primals_1765, primals_1766, primals_1767, primals_1768, primals_1769, buf1078, 8, grid=grid(8), stream=stream0)
        del primals_1765
        del primals_1769
        # Topologically Sorted Source Nodes: [input_886], Original ATen: [aten.convolution]
        buf1079 = extern_kernels.convolution(buf1078, buf98, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1079, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1080 = buf1079; del buf1079  # reuse
        buf1081 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_886, input_887, input_888], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1080, primals_1771, primals_1772, primals_1773, primals_1774, primals_1775, buf1081, 8, grid=grid(8), stream=stream0)
        del primals_1771
        del primals_1775
        # Topologically Sorted Source Nodes: [input_889], Original ATen: [aten.convolution]
        buf1082 = extern_kernels.convolution(buf1081, primals_1776, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1082, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1083 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_889, low3_17, input_890, input_891], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1082, primals_1777, buf1074, primals_1778, primals_1779, primals_1780, primals_1781, buf1083, 16, grid=grid(16), stream=stream0)
        del primals_1781
        # Topologically Sorted Source Nodes: [input_892], Original ATen: [aten.convolution]
        buf1084 = extern_kernels.convolution(buf1083, primals_1782, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1084, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1085 = buf1084; del buf1084  # reuse
        buf1086 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_892, input_893, input_894], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1085, primals_1783, primals_1784, primals_1785, primals_1786, primals_1787, buf1086, 8, grid=grid(8), stream=stream0)
        del primals_1783
        del primals_1787
        # Topologically Sorted Source Nodes: [input_895], Original ATen: [aten.convolution]
        buf1087 = extern_kernels.convolution(buf1086, buf99, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1087, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1088 = buf1087; del buf1087  # reuse
        buf1089 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_895, input_896, input_897], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1088, primals_1789, primals_1790, primals_1791, primals_1792, primals_1793, buf1089, 8, grid=grid(8), stream=stream0)
        del primals_1789
        del primals_1793
        # Topologically Sorted Source Nodes: [input_898], Original ATen: [aten.convolution]
        buf1090 = extern_kernels.convolution(buf1089, primals_1794, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1090, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1091 = reinterpret_tensor(buf1090, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1090  # reuse
        buf1092 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        buf2340 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_889, low3_17, input_898, low3_18, input_899, input_900], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40.run(buf1091, primals_1795, buf1082, primals_1777, buf1074, primals_1796, primals_1797, primals_1798, primals_1799, buf1092, buf2340, 16, grid=grid(16), stream=stream0)
        del primals_1795
        del primals_1796
        del primals_1799
        # Topologically Sorted Source Nodes: [input_901], Original ATen: [aten.convolution]
        buf1093 = extern_kernels.convolution(buf1092, primals_1800, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1093, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1094 = buf1093; del buf1093  # reuse
        buf1095 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_901, input_902, input_903], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1094, primals_1801, primals_1802, primals_1803, primals_1804, primals_1805, buf1095, 8, grid=grid(8), stream=stream0)
        del primals_1801
        del primals_1805
        # Topologically Sorted Source Nodes: [input_904], Original ATen: [aten.convolution]
        buf1096 = extern_kernels.convolution(buf1095, buf100, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1096, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1097 = buf1096; del buf1096  # reuse
        buf1098 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_904, input_905, input_906], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1097, primals_1807, primals_1808, primals_1809, primals_1810, primals_1811, buf1098, 8, grid=grid(8), stream=stream0)
        del primals_1807
        del primals_1811
        # Topologically Sorted Source Nodes: [input_907], Original ATen: [aten.convolution]
        buf1099 = extern_kernels.convolution(buf1098, primals_1812, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1099, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1100 = buf996; del buf996  # reuse
        buf1101 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_790, up1_30, input_799, up1_31, input_907, low3_19, up2_4, low2_11, input_908, input_909], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42.run(buf1100, primals_1597, buf988, primals_1579, buf980, buf607, buf1099, primals_1813, buf1091, primals_1814, primals_1815, primals_1816, primals_1817, buf1101, 64, grid=grid(64), stream=stream0)
        del primals_1597
        del primals_1813
        del primals_1817
        # Topologically Sorted Source Nodes: [input_910], Original ATen: [aten.convolution]
        buf1102 = extern_kernels.convolution(buf1101, primals_1818, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1102, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1103 = buf1102; del buf1102  # reuse
        buf1104 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_910, input_911, input_912], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1103, primals_1819, primals_1820, primals_1821, primals_1822, primals_1823, buf1104, 32, grid=grid(32), stream=stream0)
        del primals_1819
        del primals_1823
        # Topologically Sorted Source Nodes: [input_913], Original ATen: [aten.convolution]
        buf1105 = extern_kernels.convolution(buf1104, buf101, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1105, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1106 = buf1105; del buf1105  # reuse
        buf1107 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_913, input_914, input_915], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1106, primals_1825, primals_1826, primals_1827, primals_1828, primals_1829, buf1107, 32, grid=grid(32), stream=stream0)
        del primals_1825
        del primals_1829
        # Topologically Sorted Source Nodes: [input_916], Original ATen: [aten.convolution]
        buf1108 = extern_kernels.convolution(buf1107, primals_1830, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1108, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1109 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_916, low3_20, input_917, input_918], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1108, primals_1831, buf1100, primals_1832, primals_1833, primals_1834, primals_1835, buf1109, 64, grid=grid(64), stream=stream0)
        del primals_1835
        # Topologically Sorted Source Nodes: [input_919], Original ATen: [aten.convolution]
        buf1110 = extern_kernels.convolution(buf1109, primals_1836, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1110, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1111 = buf1110; del buf1110  # reuse
        buf1112 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_919, input_920, input_921], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1111, primals_1837, primals_1838, primals_1839, primals_1840, primals_1841, buf1112, 32, grid=grid(32), stream=stream0)
        del primals_1837
        del primals_1841
        # Topologically Sorted Source Nodes: [input_922], Original ATen: [aten.convolution]
        buf1113 = extern_kernels.convolution(buf1112, buf102, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1113, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1114 = buf1113; del buf1113  # reuse
        buf1115 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_922, input_923, input_924], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1114, primals_1843, primals_1844, primals_1845, primals_1846, primals_1847, buf1115, 32, grid=grid(32), stream=stream0)
        del primals_1843
        del primals_1847
        # Topologically Sorted Source Nodes: [input_925], Original ATen: [aten.convolution]
        buf1116 = extern_kernels.convolution(buf1115, primals_1848, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1116, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1117 = buf1116; del buf1116  # reuse
        buf1118 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_916, low3_20, input_925, low3_21, input_926, input_927], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf1117, primals_1849, buf1108, primals_1831, buf1100, primals_1850, primals_1851, primals_1852, primals_1853, buf1118, 64, grid=grid(64), stream=stream0)
        del primals_1849
        del primals_1853
        # Topologically Sorted Source Nodes: [input_928], Original ATen: [aten.convolution]
        buf1119 = extern_kernels.convolution(buf1118, primals_1854, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1119, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1120 = buf1119; del buf1119  # reuse
        buf1121 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_928, input_929, input_930], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1120, primals_1855, primals_1856, primals_1857, primals_1858, primals_1859, buf1121, 32, grid=grid(32), stream=stream0)
        del primals_1855
        del primals_1859
        # Topologically Sorted Source Nodes: [input_931], Original ATen: [aten.convolution]
        buf1122 = extern_kernels.convolution(buf1121, buf103, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1122, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1123 = buf1122; del buf1122  # reuse
        buf1124 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_931, input_932, input_933], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1123, primals_1861, primals_1862, primals_1863, primals_1864, primals_1865, buf1124, 32, grid=grid(32), stream=stream0)
        del primals_1861
        del primals_1865
        # Topologically Sorted Source Nodes: [input_934], Original ATen: [aten.convolution]
        buf1125 = extern_kernels.convolution(buf1124, primals_1866, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1125, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1126 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_934, low3_22, input_935, input_936], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1125, primals_1867, buf1117, primals_1868, primals_1869, primals_1870, primals_1871, buf1126, 64, grid=grid(64), stream=stream0)
        del primals_1871
        # Topologically Sorted Source Nodes: [input_937], Original ATen: [aten.convolution]
        buf1127 = extern_kernels.convolution(buf1126, primals_1872, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1127, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1128 = buf1127; del buf1127  # reuse
        buf1129 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_937, input_938, input_939], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1128, primals_1873, primals_1874, primals_1875, primals_1876, primals_1877, buf1129, 32, grid=grid(32), stream=stream0)
        del primals_1873
        del primals_1877
        # Topologically Sorted Source Nodes: [input_940], Original ATen: [aten.convolution]
        buf1130 = extern_kernels.convolution(buf1129, buf104, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1130, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1131 = buf1130; del buf1130  # reuse
        buf1132 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_940, input_941, input_942], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1131, primals_1879, primals_1880, primals_1881, primals_1882, primals_1883, buf1132, 32, grid=grid(32), stream=stream0)
        del primals_1879
        del primals_1883
        # Topologically Sorted Source Nodes: [input_943], Original ATen: [aten.convolution]
        buf1133 = extern_kernels.convolution(buf1132, primals_1884, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1133, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1134 = buf927; del buf927  # reuse
        buf1135 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_718, up1_26, input_727, up1_27, input_934, low3_22, input_943, low3_23, up2_5, low2_12, input_944, input_945], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44.run(buf1134, primals_1453, buf919, primals_1435, buf911, buf642, buf1133, primals_1885, buf1125, primals_1867, buf1117, primals_1886, primals_1887, primals_1888, primals_1889, buf1135, 256, grid=grid(256), stream=stream0)
        del primals_1453
        del primals_1885
        del primals_1889
        # Topologically Sorted Source Nodes: [input_946], Original ATen: [aten.convolution]
        buf1136 = extern_kernels.convolution(buf1135, primals_1890, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1136, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1137 = buf1136; del buf1136  # reuse
        buf1138 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_946, input_947, input_948], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1137, primals_1891, primals_1892, primals_1893, primals_1894, primals_1895, buf1138, 128, grid=grid(128), stream=stream0)
        del primals_1891
        del primals_1895
        # Topologically Sorted Source Nodes: [input_949], Original ATen: [aten.convolution]
        buf1139 = extern_kernels.convolution(buf1138, buf105, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1139, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1140 = buf1139; del buf1139  # reuse
        buf1141 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_949, input_950, input_951], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1140, primals_1897, primals_1898, primals_1899, primals_1900, primals_1901, buf1141, 128, grid=grid(128), stream=stream0)
        del primals_1897
        del primals_1901
        # Topologically Sorted Source Nodes: [input_952], Original ATen: [aten.convolution]
        buf1142 = extern_kernels.convolution(buf1141, primals_1902, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1142, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1143 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_952, low3_24, input_953, input_954], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1142, primals_1903, buf1134, primals_1904, primals_1905, primals_1906, primals_1907, buf1143, 256, grid=grid(256), stream=stream0)
        del primals_1907
        # Topologically Sorted Source Nodes: [input_955], Original ATen: [aten.convolution]
        buf1144 = extern_kernels.convolution(buf1143, primals_1908, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1144, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1145 = buf1144; del buf1144  # reuse
        buf1146 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_955, input_956, input_957], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1145, primals_1909, primals_1910, primals_1911, primals_1912, primals_1913, buf1146, 128, grid=grid(128), stream=stream0)
        del primals_1909
        del primals_1913
        # Topologically Sorted Source Nodes: [input_958], Original ATen: [aten.convolution]
        buf1147 = extern_kernels.convolution(buf1146, buf106, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1147, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1148 = buf1147; del buf1147  # reuse
        buf1149 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_958, input_959, input_960], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1148, primals_1915, primals_1916, primals_1917, primals_1918, primals_1919, buf1149, 128, grid=grid(128), stream=stream0)
        del primals_1915
        del primals_1919
        # Topologically Sorted Source Nodes: [input_961], Original ATen: [aten.convolution]
        buf1150 = extern_kernels.convolution(buf1149, primals_1920, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1150, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1151 = buf1150; del buf1150  # reuse
        buf1152 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_952, low3_24, input_961, low3_25, input_962, input_963], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf1151, primals_1921, buf1142, primals_1903, buf1134, primals_1922, primals_1923, primals_1924, primals_1925, buf1152, 256, grid=grid(256), stream=stream0)
        del primals_1921
        del primals_1925
        # Topologically Sorted Source Nodes: [input_964], Original ATen: [aten.convolution]
        buf1153 = extern_kernels.convolution(buf1152, primals_1926, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1153, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1154 = buf1153; del buf1153  # reuse
        buf1155 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_964, input_965, input_966], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1154, primals_1927, primals_1928, primals_1929, primals_1930, primals_1931, buf1155, 128, grid=grid(128), stream=stream0)
        del primals_1927
        del primals_1931
        # Topologically Sorted Source Nodes: [input_967], Original ATen: [aten.convolution]
        buf1156 = extern_kernels.convolution(buf1155, buf107, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1156, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1157 = buf1156; del buf1156  # reuse
        buf1158 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_967, input_968, input_969], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1157, primals_1933, primals_1934, primals_1935, primals_1936, primals_1937, buf1158, 128, grid=grid(128), stream=stream0)
        del primals_1933
        del primals_1937
        # Topologically Sorted Source Nodes: [input_970], Original ATen: [aten.convolution]
        buf1159 = extern_kernels.convolution(buf1158, primals_1938, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1159, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1160 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_970, low3_26, input_971, input_972], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1159, primals_1939, buf1151, primals_1940, primals_1941, primals_1942, primals_1943, buf1160, 256, grid=grid(256), stream=stream0)
        del primals_1943
        # Topologically Sorted Source Nodes: [input_973], Original ATen: [aten.convolution]
        buf1161 = extern_kernels.convolution(buf1160, primals_1944, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1161, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1162 = buf1161; del buf1161  # reuse
        buf1163 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_973, input_974, input_975], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1162, primals_1945, primals_1946, primals_1947, primals_1948, primals_1949, buf1163, 128, grid=grid(128), stream=stream0)
        del primals_1945
        del primals_1949
        # Topologically Sorted Source Nodes: [input_976], Original ATen: [aten.convolution]
        buf1164 = extern_kernels.convolution(buf1163, buf108, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1164, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1165 = buf1164; del buf1164  # reuse
        buf1166 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_976, input_977, input_978], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1165, primals_1951, primals_1952, primals_1953, primals_1954, primals_1955, buf1166, 128, grid=grid(128), stream=stream0)
        del primals_1951
        del primals_1955
        # Topologically Sorted Source Nodes: [input_979], Original ATen: [aten.convolution]
        buf1167 = extern_kernels.convolution(buf1166, primals_1956, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1167, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1168 = buf858; del buf858  # reuse
        buf1169 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_646, up1_22, input_655, up1_23, input_970, low3_26, input_979, low3_27, up2_6, low2_13, input_980, input_981], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46.run(buf1168, primals_1309, buf850, primals_1291, buf842, buf677, buf1167, primals_1957, buf1159, primals_1939, buf1151, primals_1958, primals_1959, primals_1960, primals_1961, buf1169, 1024, grid=grid(1024), stream=stream0)
        del primals_1309
        del primals_1957
        del primals_1961
        # Topologically Sorted Source Nodes: [input_982], Original ATen: [aten.convolution]
        buf1170 = extern_kernels.convolution(buf1169, primals_1962, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1170, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1171 = buf1170; del buf1170  # reuse
        buf1172 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_982, input_983, input_984], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1171, primals_1963, primals_1964, primals_1965, primals_1966, primals_1967, buf1172, 512, grid=grid(512), stream=stream0)
        del primals_1963
        del primals_1967
        # Topologically Sorted Source Nodes: [input_985], Original ATen: [aten.convolution]
        buf1173 = extern_kernels.convolution(buf1172, buf109, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1173, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1174 = buf1173; del buf1173  # reuse
        buf1175 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_985, input_986, input_987], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1174, primals_1969, primals_1970, primals_1971, primals_1972, primals_1973, buf1175, 512, grid=grid(512), stream=stream0)
        del primals_1969
        del primals_1973
        # Topologically Sorted Source Nodes: [input_988], Original ATen: [aten.convolution]
        buf1176 = extern_kernels.convolution(buf1175, primals_1974, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1176, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1177 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_988, low3_28, input_989, input_990], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1176, primals_1975, buf1168, primals_1976, primals_1977, primals_1978, primals_1979, buf1177, 1024, grid=grid(1024), stream=stream0)
        del primals_1979
        # Topologically Sorted Source Nodes: [input_991], Original ATen: [aten.convolution]
        buf1178 = extern_kernels.convolution(buf1177, primals_1980, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1178, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1179 = buf1178; del buf1178  # reuse
        buf1180 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_991, input_992, input_993], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1179, primals_1981, primals_1982, primals_1983, primals_1984, primals_1985, buf1180, 512, grid=grid(512), stream=stream0)
        del primals_1981
        del primals_1985
        # Topologically Sorted Source Nodes: [input_994], Original ATen: [aten.convolution]
        buf1181 = extern_kernels.convolution(buf1180, buf110, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1181, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1182 = buf1181; del buf1181  # reuse
        buf1183 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_994, input_995, input_996], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1182, primals_1987, primals_1988, primals_1989, primals_1990, primals_1991, buf1183, 512, grid=grid(512), stream=stream0)
        del primals_1987
        del primals_1991
        # Topologically Sorted Source Nodes: [input_997], Original ATen: [aten.convolution]
        buf1184 = extern_kernels.convolution(buf1183, primals_1992, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1184, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1185 = buf1184; del buf1184  # reuse
        buf1186 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_988, low3_28, input_997, low3_29, input_998, input_999], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf1185, primals_1993, buf1176, primals_1975, buf1168, primals_1994, primals_1995, primals_1996, primals_1997, buf1186, 1024, grid=grid(1024), stream=stream0)
        del primals_1993
        del primals_1997
        # Topologically Sorted Source Nodes: [input_1000], Original ATen: [aten.convolution]
        buf1187 = extern_kernels.convolution(buf1186, primals_1998, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1187, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1188 = buf1187; del buf1187  # reuse
        buf1189 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1000, input_1001, input_1002], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1188, primals_1999, primals_2000, primals_2001, primals_2002, primals_2003, buf1189, 512, grid=grid(512), stream=stream0)
        del primals_1999
        del primals_2003
        # Topologically Sorted Source Nodes: [input_1003], Original ATen: [aten.convolution]
        buf1190 = extern_kernels.convolution(buf1189, buf111, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1190, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1191 = buf1190; del buf1190  # reuse
        buf1192 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1003, input_1004, input_1005], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1191, primals_2005, primals_2006, primals_2007, primals_2008, primals_2009, buf1192, 512, grid=grid(512), stream=stream0)
        del primals_2005
        del primals_2009
        # Topologically Sorted Source Nodes: [input_1006], Original ATen: [aten.convolution]
        buf1193 = extern_kernels.convolution(buf1192, primals_2010, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1193, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1194 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1006, low3_30, input_1007, input_1008], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1193, primals_2011, buf1185, primals_2012, primals_2013, primals_2014, primals_2015, buf1194, 1024, grid=grid(1024), stream=stream0)
        del primals_2015
        # Topologically Sorted Source Nodes: [input_1009], Original ATen: [aten.convolution]
        buf1195 = extern_kernels.convolution(buf1194, primals_2016, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1195, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1196 = buf1195; del buf1195  # reuse
        buf1197 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1009, input_1010, input_1011], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1196, primals_2017, primals_2018, primals_2019, primals_2020, primals_2021, buf1197, 512, grid=grid(512), stream=stream0)
        del primals_2017
        del primals_2021
        # Topologically Sorted Source Nodes: [input_1012], Original ATen: [aten.convolution]
        buf1198 = extern_kernels.convolution(buf1197, buf112, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1198, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1199 = buf1198; del buf1198  # reuse
        buf1200 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1012, input_1013, input_1014], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1199, primals_2023, primals_2024, primals_2025, primals_2026, primals_2027, buf1200, 512, grid=grid(512), stream=stream0)
        del primals_2023
        del primals_2027
        # Topologically Sorted Source Nodes: [input_1015], Original ATen: [aten.convolution]
        buf1201 = extern_kernels.convolution(buf1200, primals_2028, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1201, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1202 = buf789; del buf789  # reuse
        buf1203 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_574, up1_18, input_583, up1_19, input_1006, low3_30, input_1015, low3_31, up2_7, hg_1, input_1016, input_1017], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48.run(buf1202, primals_1165, buf781, primals_1147, buf773, buf712, buf1201, primals_2029, buf1193, primals_2011, buf1185, primals_2030, primals_2031, primals_2032, primals_2033, buf1203, 4096, grid=grid(4096), stream=stream0)
        del primals_1165
        del primals_2029
        del primals_2033
        # Topologically Sorted Source Nodes: [input_1018], Original ATen: [aten.convolution]
        buf1204 = extern_kernels.convolution(buf1203, primals_2034, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1204, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1205 = buf1204; del buf1204  # reuse
        buf1206 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1018, input_1019, input_1020], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1205, primals_2035, primals_2036, primals_2037, primals_2038, primals_2039, buf1206, 2048, grid=grid(2048), stream=stream0)
        del primals_2035
        del primals_2039
        # Topologically Sorted Source Nodes: [input_1021], Original ATen: [aten.convolution]
        buf1207 = extern_kernels.convolution(buf1206, buf113, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1207, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1208 = buf1207; del buf1207  # reuse
        buf1209 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1021, input_1022, input_1023], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1208, primals_2041, primals_2042, primals_2043, primals_2044, primals_2045, buf1209, 2048, grid=grid(2048), stream=stream0)
        del primals_2041
        del primals_2045
        # Topologically Sorted Source Nodes: [input_1024], Original ATen: [aten.convolution]
        buf1210 = extern_kernels.convolution(buf1209, primals_2046, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1210, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1211 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1024, ll_4, input_1025, input_1026], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1210, primals_2047, buf1202, primals_2048, primals_2049, primals_2050, primals_2051, buf1211, 4096, grid=grid(4096), stream=stream0)
        del primals_2051
        # Topologically Sorted Source Nodes: [input_1027], Original ATen: [aten.convolution]
        buf1212 = extern_kernels.convolution(buf1211, primals_2052, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1212, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1213 = buf1212; del buf1212  # reuse
        buf1214 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1027, input_1028, input_1029], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1213, primals_2053, primals_2054, primals_2055, primals_2056, primals_2057, buf1214, 2048, grid=grid(2048), stream=stream0)
        del primals_2053
        del primals_2057
        # Topologically Sorted Source Nodes: [input_1030], Original ATen: [aten.convolution]
        buf1215 = extern_kernels.convolution(buf1214, buf114, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1215, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1216 = buf1215; del buf1215  # reuse
        buf1217 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1030, input_1031, input_1032], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1216, primals_2059, primals_2060, primals_2061, primals_2062, primals_2063, buf1217, 2048, grid=grid(2048), stream=stream0)
        del primals_2059
        del primals_2063
        # Topologically Sorted Source Nodes: [input_1033], Original ATen: [aten.convolution]
        buf1218 = extern_kernels.convolution(buf1217, primals_2064, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1218, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1219 = buf1218; del buf1218  # reuse
        buf1220 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1024, ll_4, input_1033, ll_5, input_1034, input_1035], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf1219, primals_2065, buf1210, primals_2047, buf1202, primals_2066, primals_2067, primals_2068, primals_2069, buf1220, 4096, grid=grid(4096), stream=stream0)
        del primals_2065
        del primals_2069
        # Topologically Sorted Source Nodes: [input_1036], Original ATen: [aten.convolution]
        buf1221 = extern_kernels.convolution(buf1220, primals_2070, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1221, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1222 = buf1221; del buf1221  # reuse
        buf1223 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1036, input_1037, input_1038], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1222, primals_2071, primals_2072, primals_2073, primals_2074, primals_2075, buf1223, 2048, grid=grid(2048), stream=stream0)
        del primals_2071
        del primals_2075
        # Topologically Sorted Source Nodes: [input_1039], Original ATen: [aten.convolution]
        buf1224 = extern_kernels.convolution(buf1223, buf115, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1224, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1225 = buf1224; del buf1224  # reuse
        buf1226 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1039, input_1040, input_1041], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1225, primals_2077, primals_2078, primals_2079, primals_2080, primals_2081, buf1226, 2048, grid=grid(2048), stream=stream0)
        del primals_2077
        del primals_2081
        # Topologically Sorted Source Nodes: [input_1042], Original ATen: [aten.convolution]
        buf1227 = extern_kernels.convolution(buf1226, primals_2082, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1227, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1228 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1042, ll_6, input_1043, input_1044], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1227, primals_2083, buf1219, primals_2084, primals_2085, primals_2086, primals_2087, buf1228, 4096, grid=grid(4096), stream=stream0)
        del primals_2087
        # Topologically Sorted Source Nodes: [input_1045], Original ATen: [aten.convolution]
        buf1229 = extern_kernels.convolution(buf1228, primals_2088, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1229, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1230 = buf1229; del buf1229  # reuse
        buf1231 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1045, input_1046, input_1047], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1230, primals_2089, primals_2090, primals_2091, primals_2092, primals_2093, buf1231, 2048, grid=grid(2048), stream=stream0)
        del primals_2089
        del primals_2093
        # Topologically Sorted Source Nodes: [input_1048], Original ATen: [aten.convolution]
        buf1232 = extern_kernels.convolution(buf1231, buf116, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1232, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1233 = buf1232; del buf1232  # reuse
        buf1234 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1048, input_1049, input_1050], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1233, primals_2095, primals_2096, primals_2097, primals_2098, primals_2099, buf1234, 2048, grid=grid(2048), stream=stream0)
        del primals_2095
        del primals_2099
        # Topologically Sorted Source Nodes: [input_1051], Original ATen: [aten.convolution]
        buf1235 = extern_kernels.convolution(buf1234, primals_2100, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1235, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1236 = buf1235; del buf1235  # reuse
        # Topologically Sorted Source Nodes: [input_1042, ll_6, input_1051, ll_7], Original ATen: [aten.convolution, aten.add]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_49.run(buf1236, primals_2101, buf1227, primals_2083, buf1219, 4096, grid=grid(4096), stream=stream0)
        del primals_2101
        # Topologically Sorted Source Nodes: [input_1052], Original ATen: [aten.convolution]
        buf1237 = extern_kernels.convolution(buf1236, primals_2102, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1237, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1238 = buf1237; del buf1237  # reuse
        buf1239 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1052, input_1053, input_1054], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50.run(buf1238, primals_2103, primals_2104, primals_2105, primals_2106, primals_2107, buf1239, 4096, grid=grid(4096), stream=stream0)
        del primals_2103
        del primals_2107
        # Topologically Sorted Source Nodes: [tmpOut_1], Original ATen: [aten.convolution]
        buf1240 = extern_kernels.convolution(buf1239, primals_2108, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1240, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1241 = empty_strided_cuda((4, 4, 16, 16), (1024, 256, 16, 1), torch.float32)
        buf1243 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [tmpOut_1, tmpOut__1], Original ATen: [aten.convolution]
        stream0 = get_raw_stream(0)
        triton_poi_fused_convolution_51.run(buf1240, primals_2109, buf1241, buf1243, 16, 256, grid=grid(16, 256), stream=stream0)
        del primals_2109
        # Topologically Sorted Source Nodes: [ll__1], Original ATen: [aten.convolution]
        buf1242 = extern_kernels.convolution(buf1239, primals_2110, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1242, (4, 4, 16, 16), (1024, 1, 64, 4))
        # Topologically Sorted Source Nodes: [tmpOut__1], Original ATen: [aten.convolution]
        buf1244 = extern_kernels.convolution(buf1243, primals_2112, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1244, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1245 = buf1242; del buf1242  # reuse
        buf1246 = buf1243; del buf1243  # reuse
        # Topologically Sorted Source Nodes: [ll__1, tmpOut__1, add_125, x_1, input_1055, input_1056], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52.run(buf1245, buf756, primals_2111, buf1244, primals_2113, primals_2114, primals_2115, primals_2116, primals_2117, buf1246, 4096, grid=grid(4096), stream=stream0)
        del primals_2111
        del primals_2113
        del primals_2117
        # Topologically Sorted Source Nodes: [input_1057], Original ATen: [aten.convolution]
        buf1247 = extern_kernels.convolution(buf1246, primals_2118, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1247, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1248 = buf1247; del buf1247  # reuse
        buf1249 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1057, input_1058, input_1059], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1248, primals_2119, primals_2120, primals_2121, primals_2122, primals_2123, buf1249, 2048, grid=grid(2048), stream=stream0)
        del primals_2119
        del primals_2123
        # Topologically Sorted Source Nodes: [input_1060], Original ATen: [aten.convolution]
        buf1250 = extern_kernels.convolution(buf1249, buf117, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1250, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1251 = buf1250; del buf1250  # reuse
        buf1252 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1060, input_1061, input_1062], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1251, primals_2125, primals_2126, primals_2127, primals_2128, primals_2129, buf1252, 2048, grid=grid(2048), stream=stream0)
        del primals_2125
        del primals_2129
        # Topologically Sorted Source Nodes: [input_1063], Original ATen: [aten.convolution]
        buf1253 = extern_kernels.convolution(buf1252, primals_2130, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1253, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1254 = buf1244; del buf1244  # reuse
        # Topologically Sorted Source Nodes: [input_1063, up1_32, input_1064, input_1065], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1253, primals_2131, buf1245, primals_2132, primals_2133, primals_2134, primals_2135, buf1254, 4096, grid=grid(4096), stream=stream0)
        del primals_2135
        # Topologically Sorted Source Nodes: [input_1066], Original ATen: [aten.convolution]
        buf1255 = extern_kernels.convolution(buf1254, primals_2136, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1255, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1256 = buf1255; del buf1255  # reuse
        buf1257 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1066, input_1067, input_1068], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1256, primals_2137, primals_2138, primals_2139, primals_2140, primals_2141, buf1257, 2048, grid=grid(2048), stream=stream0)
        del primals_2137
        del primals_2141
        # Topologically Sorted Source Nodes: [input_1069], Original ATen: [aten.convolution]
        buf1258 = extern_kernels.convolution(buf1257, buf118, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1258, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1259 = buf1258; del buf1258  # reuse
        buf1260 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1069, input_1070, input_1071], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1259, primals_2143, primals_2144, primals_2145, primals_2146, primals_2147, buf1260, 2048, grid=grid(2048), stream=stream0)
        del primals_2143
        del primals_2147
        # Topologically Sorted Source Nodes: [input_1072], Original ATen: [aten.convolution]
        buf1261 = extern_kernels.convolution(buf1260, primals_2148, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1261, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1262 = buf1261; del buf1261  # reuse
        buf1263 = buf1240; del buf1240  # reuse
        # Topologically Sorted Source Nodes: [input_1063, up1_32, input_1072, up1_33, input_1073, input_1074], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf1262, primals_2149, buf1253, primals_2131, buf1245, primals_2150, primals_2151, primals_2152, primals_2153, buf1263, 4096, grid=grid(4096), stream=stream0)
        del primals_2149
        del primals_2153
        # Topologically Sorted Source Nodes: [input_1075], Original ATen: [aten.convolution]
        buf1264 = extern_kernels.convolution(buf1263, primals_2154, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1264, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1265 = buf1264; del buf1264  # reuse
        buf1266 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1075, input_1076, input_1077], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1265, primals_2155, primals_2156, primals_2157, primals_2158, primals_2159, buf1266, 2048, grid=grid(2048), stream=stream0)
        del primals_2155
        del primals_2159
        # Topologically Sorted Source Nodes: [input_1078], Original ATen: [aten.convolution]
        buf1267 = extern_kernels.convolution(buf1266, buf119, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1267, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1268 = buf1267; del buf1267  # reuse
        buf1269 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1078, input_1079, input_1080], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1268, primals_2161, primals_2162, primals_2163, primals_2164, primals_2165, buf1269, 2048, grid=grid(2048), stream=stream0)
        del primals_2161
        del primals_2165
        # Topologically Sorted Source Nodes: [input_1081], Original ATen: [aten.convolution]
        buf1270 = extern_kernels.convolution(buf1269, primals_2166, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1270, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1271 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1081, up1_34, input_1082, input_1083], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1270, primals_2167, buf1262, primals_2168, primals_2169, primals_2170, primals_2171, buf1271, 4096, grid=grid(4096), stream=stream0)
        del primals_2171
        # Topologically Sorted Source Nodes: [input_1084], Original ATen: [aten.convolution]
        buf1272 = extern_kernels.convolution(buf1271, primals_2172, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1272, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1273 = buf1272; del buf1272  # reuse
        buf1274 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1084, input_1085, input_1086], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1273, primals_2173, primals_2174, primals_2175, primals_2176, primals_2177, buf1274, 2048, grid=grid(2048), stream=stream0)
        del primals_2173
        del primals_2177
        # Topologically Sorted Source Nodes: [input_1087], Original ATen: [aten.convolution]
        buf1275 = extern_kernels.convolution(buf1274, buf120, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1275, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1276 = buf1275; del buf1275  # reuse
        buf1277 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1087, input_1088, input_1089], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1276, primals_2179, primals_2180, primals_2181, primals_2182, primals_2183, buf1277, 2048, grid=grid(2048), stream=stream0)
        del primals_2179
        del primals_2183
        # Topologically Sorted Source Nodes: [input_1090], Original ATen: [aten.convolution]
        buf1278 = extern_kernels.convolution(buf1277, primals_2184, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1278, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1279 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.int8)
        buf1280 = buf1201; del buf1201  # reuse
        # Topologically Sorted Source Nodes: [low1_40, input_1091, input_1092], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14.run(buf1245, primals_2186, primals_2187, primals_2188, primals_2189, buf1279, buf1280, 1024, grid=grid(1024), stream=stream0)
        del primals_2189
        # Topologically Sorted Source Nodes: [input_1093], Original ATen: [aten.convolution]
        buf1281 = extern_kernels.convolution(buf1280, primals_2190, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1281, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1282 = buf1281; del buf1281  # reuse
        buf1283 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1093, input_1094, input_1095], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1282, primals_2191, primals_2192, primals_2193, primals_2194, primals_2195, buf1283, 512, grid=grid(512), stream=stream0)
        del primals_2191
        del primals_2195
        # Topologically Sorted Source Nodes: [input_1096], Original ATen: [aten.convolution]
        buf1284 = extern_kernels.convolution(buf1283, buf121, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1284, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1285 = buf1284; del buf1284  # reuse
        buf1286 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1096, input_1097, input_1098], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1285, primals_2197, primals_2198, primals_2199, primals_2200, primals_2201, buf1286, 512, grid=grid(512), stream=stream0)
        del primals_2197
        del primals_2201
        # Topologically Sorted Source Nodes: [input_1099], Original ATen: [aten.convolution]
        buf1287 = extern_kernels.convolution(buf1286, primals_2202, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1287, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1288 = buf1287; del buf1287  # reuse
        buf1289 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_40, input_1099, low1_41, input_1100, input_1101], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16.run(buf1288, primals_2203, buf1245, primals_2204, primals_2205, primals_2206, primals_2207, buf1289, 1024, grid=grid(1024), stream=stream0)
        del primals_2203
        del primals_2207
        # Topologically Sorted Source Nodes: [input_1102], Original ATen: [aten.convolution]
        buf1290 = extern_kernels.convolution(buf1289, primals_2208, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1290, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1291 = buf1290; del buf1290  # reuse
        buf1292 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1102, input_1103, input_1104], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1291, primals_2209, primals_2210, primals_2211, primals_2212, primals_2213, buf1292, 512, grid=grid(512), stream=stream0)
        del primals_2209
        del primals_2213
        # Topologically Sorted Source Nodes: [input_1105], Original ATen: [aten.convolution]
        buf1293 = extern_kernels.convolution(buf1292, buf122, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1293, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1294 = buf1293; del buf1293  # reuse
        buf1295 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1105, input_1106, input_1107], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1294, primals_2215, primals_2216, primals_2217, primals_2218, primals_2219, buf1295, 512, grid=grid(512), stream=stream0)
        del primals_2215
        del primals_2219
        # Topologically Sorted Source Nodes: [input_1108], Original ATen: [aten.convolution]
        buf1296 = extern_kernels.convolution(buf1295, primals_2220, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1296, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1297 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1108, low1_42, input_1109, input_1110], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1296, primals_2221, buf1288, primals_2222, primals_2223, primals_2224, primals_2225, buf1297, 1024, grid=grid(1024), stream=stream0)
        del primals_2225
        # Topologically Sorted Source Nodes: [input_1111], Original ATen: [aten.convolution]
        buf1298 = extern_kernels.convolution(buf1297, primals_2226, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1298, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1299 = buf1298; del buf1298  # reuse
        buf1300 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1111, input_1112, input_1113], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1299, primals_2227, primals_2228, primals_2229, primals_2230, primals_2231, buf1300, 512, grid=grid(512), stream=stream0)
        del primals_2227
        del primals_2231
        # Topologically Sorted Source Nodes: [input_1114], Original ATen: [aten.convolution]
        buf1301 = extern_kernels.convolution(buf1300, buf123, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1301, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1302 = buf1301; del buf1301  # reuse
        buf1303 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1114, input_1115, input_1116], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1302, primals_2233, primals_2234, primals_2235, primals_2236, primals_2237, buf1303, 512, grid=grid(512), stream=stream0)
        del primals_2233
        del primals_2237
        # Topologically Sorted Source Nodes: [input_1117], Original ATen: [aten.convolution]
        buf1304 = extern_kernels.convolution(buf1303, primals_2238, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1304, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1305 = buf1304; del buf1304  # reuse
        buf1306 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2317 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1108, low1_42, input_1117, low1_43, input_1118, input_1119], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18.run(buf1305, primals_2239, buf1296, primals_2221, buf1288, primals_2240, primals_2241, primals_2242, primals_2243, buf1306, buf2317, 1024, grid=grid(1024), stream=stream0)
        del primals_2239
        del primals_2240
        del primals_2243
        # Topologically Sorted Source Nodes: [input_1120], Original ATen: [aten.convolution]
        buf1307 = extern_kernels.convolution(buf1306, primals_2244, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1307, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1308 = buf1307; del buf1307  # reuse
        buf1309 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1120, input_1121, input_1122], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1308, primals_2245, primals_2246, primals_2247, primals_2248, primals_2249, buf1309, 512, grid=grid(512), stream=stream0)
        del primals_2245
        del primals_2249
        # Topologically Sorted Source Nodes: [input_1123], Original ATen: [aten.convolution]
        buf1310 = extern_kernels.convolution(buf1309, buf124, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1310, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1311 = buf1310; del buf1310  # reuse
        buf1312 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1123, input_1124, input_1125], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1311, primals_2251, primals_2252, primals_2253, primals_2254, primals_2255, buf1312, 512, grid=grid(512), stream=stream0)
        del primals_2251
        del primals_2255
        # Topologically Sorted Source Nodes: [input_1126], Original ATen: [aten.convolution]
        buf1313 = extern_kernels.convolution(buf1312, primals_2256, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1313, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1314 = buf1313; del buf1313  # reuse
        buf1315 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1126, low1_44, input_1127, input_1128], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19.run(buf1314, primals_2257, buf1305, primals_2258, primals_2259, primals_2260, primals_2261, buf1315, 1024, grid=grid(1024), stream=stream0)
        del primals_2257
        del primals_2261
        # Topologically Sorted Source Nodes: [input_1129], Original ATen: [aten.convolution]
        buf1316 = extern_kernels.convolution(buf1315, primals_2262, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1316, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1317 = buf1316; del buf1316  # reuse
        buf1318 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1129, input_1130, input_1131], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1317, primals_2263, primals_2264, primals_2265, primals_2266, primals_2267, buf1318, 512, grid=grid(512), stream=stream0)
        del primals_2263
        del primals_2267
        # Topologically Sorted Source Nodes: [input_1132], Original ATen: [aten.convolution]
        buf1319 = extern_kernels.convolution(buf1318, buf125, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1319, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1320 = buf1319; del buf1319  # reuse
        buf1321 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1132, input_1133, input_1134], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1320, primals_2269, primals_2270, primals_2271, primals_2272, primals_2273, buf1321, 512, grid=grid(512), stream=stream0)
        del primals_2269
        del primals_2273
        # Topologically Sorted Source Nodes: [input_1135], Original ATen: [aten.convolution]
        buf1322 = extern_kernels.convolution(buf1321, primals_2274, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1322, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1323 = buf1305; del buf1305  # reuse
        # Topologically Sorted Source Nodes: [input_1135, up1_36, input_1136, input_1137], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1322, primals_2275, buf1314, primals_2276, primals_2277, primals_2278, primals_2279, buf1323, 1024, grid=grid(1024), stream=stream0)
        del primals_2279
        # Topologically Sorted Source Nodes: [input_1138], Original ATen: [aten.convolution]
        buf1324 = extern_kernels.convolution(buf1323, primals_2280, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1324, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1325 = buf1324; del buf1324  # reuse
        buf1326 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1138, input_1139, input_1140], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1325, primals_2281, primals_2282, primals_2283, primals_2284, primals_2285, buf1326, 512, grid=grid(512), stream=stream0)
        del primals_2281
        del primals_2285
        # Topologically Sorted Source Nodes: [input_1141], Original ATen: [aten.convolution]
        buf1327 = extern_kernels.convolution(buf1326, buf126, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1327, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1328 = buf1327; del buf1327  # reuse
        buf1329 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1141, input_1142, input_1143], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1328, primals_2287, primals_2288, primals_2289, primals_2290, primals_2291, buf1329, 512, grid=grid(512), stream=stream0)
        del primals_2287
        del primals_2291
        # Topologically Sorted Source Nodes: [input_1144], Original ATen: [aten.convolution]
        buf1330 = extern_kernels.convolution(buf1329, primals_2292, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1330, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1331 = buf1330; del buf1330  # reuse
        buf1332 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1135, up1_36, input_1144, up1_37, input_1145, input_1146], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf1331, primals_2293, buf1322, primals_2275, buf1314, primals_2294, primals_2295, primals_2296, primals_2297, buf1332, 1024, grid=grid(1024), stream=stream0)
        del primals_2293
        del primals_2297
        # Topologically Sorted Source Nodes: [input_1147], Original ATen: [aten.convolution]
        buf1333 = extern_kernels.convolution(buf1332, primals_2298, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1333, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1334 = buf1333; del buf1333  # reuse
        buf1335 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1147, input_1148, input_1149], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1334, primals_2299, primals_2300, primals_2301, primals_2302, primals_2303, buf1335, 512, grid=grid(512), stream=stream0)
        del primals_2299
        del primals_2303
        # Topologically Sorted Source Nodes: [input_1150], Original ATen: [aten.convolution]
        buf1336 = extern_kernels.convolution(buf1335, buf127, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1336, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1337 = buf1336; del buf1336  # reuse
        buf1338 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1150, input_1151, input_1152], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1337, primals_2305, primals_2306, primals_2307, primals_2308, primals_2309, buf1338, 512, grid=grid(512), stream=stream0)
        del primals_2305
        del primals_2309
        # Topologically Sorted Source Nodes: [input_1153], Original ATen: [aten.convolution]
        buf1339 = extern_kernels.convolution(buf1338, primals_2310, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1339, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1340 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1153, up1_38, input_1154, input_1155], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1339, primals_2311, buf1331, primals_2312, primals_2313, primals_2314, primals_2315, buf1340, 1024, grid=grid(1024), stream=stream0)
        del primals_2315
        # Topologically Sorted Source Nodes: [input_1156], Original ATen: [aten.convolution]
        buf1341 = extern_kernels.convolution(buf1340, primals_2316, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1341, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1342 = buf1341; del buf1341  # reuse
        buf1343 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1156, input_1157, input_1158], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1342, primals_2317, primals_2318, primals_2319, primals_2320, primals_2321, buf1343, 512, grid=grid(512), stream=stream0)
        del primals_2317
        del primals_2321
        # Topologically Sorted Source Nodes: [input_1159], Original ATen: [aten.convolution]
        buf1344 = extern_kernels.convolution(buf1343, buf128, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1344, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1345 = buf1344; del buf1344  # reuse
        buf1346 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1159, input_1160, input_1161], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1345, primals_2323, primals_2324, primals_2325, primals_2326, primals_2327, buf1346, 512, grid=grid(512), stream=stream0)
        del primals_2323
        del primals_2327
        # Topologically Sorted Source Nodes: [input_1162], Original ATen: [aten.convolution]
        buf1347 = extern_kernels.convolution(buf1346, primals_2328, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1347, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1348 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.int8)
        buf1349 = buf1167; del buf1167  # reuse
        # Topologically Sorted Source Nodes: [low1_45, input_1163, input_1164], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21.run(buf1314, primals_2330, primals_2331, primals_2332, primals_2333, buf1348, buf1349, 256, grid=grid(256), stream=stream0)
        del primals_2333
        # Topologically Sorted Source Nodes: [input_1165], Original ATen: [aten.convolution]
        buf1350 = extern_kernels.convolution(buf1349, primals_2334, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1350, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1351 = buf1350; del buf1350  # reuse
        buf1352 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1165, input_1166, input_1167], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1351, primals_2335, primals_2336, primals_2337, primals_2338, primals_2339, buf1352, 128, grid=grid(128), stream=stream0)
        del primals_2335
        del primals_2339
        # Topologically Sorted Source Nodes: [input_1168], Original ATen: [aten.convolution]
        buf1353 = extern_kernels.convolution(buf1352, buf129, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1353, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1354 = buf1353; del buf1353  # reuse
        buf1355 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1168, input_1169, input_1170], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1354, primals_2341, primals_2342, primals_2343, primals_2344, primals_2345, buf1355, 128, grid=grid(128), stream=stream0)
        del primals_2341
        del primals_2345
        # Topologically Sorted Source Nodes: [input_1171], Original ATen: [aten.convolution]
        buf1356 = extern_kernels.convolution(buf1355, primals_2346, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1356, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1357 = buf1356; del buf1356  # reuse
        buf1358 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_45, input_1171, low1_46, input_1172, input_1173], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23.run(buf1357, primals_2347, buf1314, primals_2348, primals_2349, primals_2350, primals_2351, buf1358, 256, grid=grid(256), stream=stream0)
        del primals_2347
        del primals_2351
        # Topologically Sorted Source Nodes: [input_1174], Original ATen: [aten.convolution]
        buf1359 = extern_kernels.convolution(buf1358, primals_2352, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1359, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1360 = buf1359; del buf1359  # reuse
        buf1361 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1174, input_1175, input_1176], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1360, primals_2353, primals_2354, primals_2355, primals_2356, primals_2357, buf1361, 128, grid=grid(128), stream=stream0)
        del primals_2353
        del primals_2357
        # Topologically Sorted Source Nodes: [input_1177], Original ATen: [aten.convolution]
        buf1362 = extern_kernels.convolution(buf1361, buf130, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1362, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1363 = buf1362; del buf1362  # reuse
        buf1364 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1177, input_1178, input_1179], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1363, primals_2359, primals_2360, primals_2361, primals_2362, primals_2363, buf1364, 128, grid=grid(128), stream=stream0)
        del primals_2359
        del primals_2363
        # Topologically Sorted Source Nodes: [input_1180], Original ATen: [aten.convolution]
        buf1365 = extern_kernels.convolution(buf1364, primals_2364, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1365, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1366 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1180, low1_47, input_1181, input_1182], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1365, primals_2365, buf1357, primals_2366, primals_2367, primals_2368, primals_2369, buf1366, 256, grid=grid(256), stream=stream0)
        del primals_2369
        # Topologically Sorted Source Nodes: [input_1183], Original ATen: [aten.convolution]
        buf1367 = extern_kernels.convolution(buf1366, primals_2370, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1367, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1368 = buf1367; del buf1367  # reuse
        buf1369 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1183, input_1184, input_1185], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1368, primals_2371, primals_2372, primals_2373, primals_2374, primals_2375, buf1369, 128, grid=grid(128), stream=stream0)
        del primals_2371
        del primals_2375
        # Topologically Sorted Source Nodes: [input_1186], Original ATen: [aten.convolution]
        buf1370 = extern_kernels.convolution(buf1369, buf131, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1370, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1371 = buf1370; del buf1370  # reuse
        buf1372 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1186, input_1187, input_1188], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1371, primals_2377, primals_2378, primals_2379, primals_2380, primals_2381, buf1372, 128, grid=grid(128), stream=stream0)
        del primals_2377
        del primals_2381
        # Topologically Sorted Source Nodes: [input_1189], Original ATen: [aten.convolution]
        buf1373 = extern_kernels.convolution(buf1372, primals_2382, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1373, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1374 = buf1373; del buf1373  # reuse
        buf1375 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        buf2310 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1180, low1_47, input_1189, low1_48, input_1190, input_1191], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25.run(buf1374, primals_2383, buf1365, primals_2365, buf1357, primals_2384, primals_2385, primals_2386, primals_2387, buf1375, buf2310, 256, grid=grid(256), stream=stream0)
        del primals_2383
        del primals_2384
        del primals_2387
        # Topologically Sorted Source Nodes: [input_1192], Original ATen: [aten.convolution]
        buf1376 = extern_kernels.convolution(buf1375, primals_2388, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1376, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1377 = buf1376; del buf1376  # reuse
        buf1378 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1192, input_1193, input_1194], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1377, primals_2389, primals_2390, primals_2391, primals_2392, primals_2393, buf1378, 128, grid=grid(128), stream=stream0)
        del primals_2389
        del primals_2393
        # Topologically Sorted Source Nodes: [input_1195], Original ATen: [aten.convolution]
        buf1379 = extern_kernels.convolution(buf1378, buf132, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1379, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1380 = buf1379; del buf1379  # reuse
        buf1381 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1195, input_1196, input_1197], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1380, primals_2395, primals_2396, primals_2397, primals_2398, primals_2399, buf1381, 128, grid=grid(128), stream=stream0)
        del primals_2395
        del primals_2399
        # Topologically Sorted Source Nodes: [input_1198], Original ATen: [aten.convolution]
        buf1382 = extern_kernels.convolution(buf1381, primals_2400, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1382, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1383 = buf1382; del buf1382  # reuse
        buf1384 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1198, low1_49, input_1199, input_1200], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26.run(buf1383, primals_2401, buf1374, primals_2402, primals_2403, primals_2404, primals_2405, buf1384, 256, grid=grid(256), stream=stream0)
        del primals_2401
        del primals_2405
        # Topologically Sorted Source Nodes: [input_1201], Original ATen: [aten.convolution]
        buf1385 = extern_kernels.convolution(buf1384, primals_2406, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1385, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1386 = buf1385; del buf1385  # reuse
        buf1387 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1201, input_1202, input_1203], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1386, primals_2407, primals_2408, primals_2409, primals_2410, primals_2411, buf1387, 128, grid=grid(128), stream=stream0)
        del primals_2407
        del primals_2411
        # Topologically Sorted Source Nodes: [input_1204], Original ATen: [aten.convolution]
        buf1388 = extern_kernels.convolution(buf1387, buf133, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1388, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1389 = buf1388; del buf1388  # reuse
        buf1390 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1204, input_1205, input_1206], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1389, primals_2413, primals_2414, primals_2415, primals_2416, primals_2417, buf1390, 128, grid=grid(128), stream=stream0)
        del primals_2413
        del primals_2417
        # Topologically Sorted Source Nodes: [input_1207], Original ATen: [aten.convolution]
        buf1391 = extern_kernels.convolution(buf1390, primals_2418, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1391, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1392 = buf1374; del buf1374  # reuse
        # Topologically Sorted Source Nodes: [input_1207, up1_40, input_1208, input_1209], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1391, primals_2419, buf1383, primals_2420, primals_2421, primals_2422, primals_2423, buf1392, 256, grid=grid(256), stream=stream0)
        del primals_2423
        # Topologically Sorted Source Nodes: [input_1210], Original ATen: [aten.convolution]
        buf1393 = extern_kernels.convolution(buf1392, primals_2424, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1393, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1394 = buf1393; del buf1393  # reuse
        buf1395 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1210, input_1211, input_1212], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1394, primals_2425, primals_2426, primals_2427, primals_2428, primals_2429, buf1395, 128, grid=grid(128), stream=stream0)
        del primals_2425
        del primals_2429
        # Topologically Sorted Source Nodes: [input_1213], Original ATen: [aten.convolution]
        buf1396 = extern_kernels.convolution(buf1395, buf134, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1396, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1397 = buf1396; del buf1396  # reuse
        buf1398 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1213, input_1214, input_1215], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1397, primals_2431, primals_2432, primals_2433, primals_2434, primals_2435, buf1398, 128, grid=grid(128), stream=stream0)
        del primals_2431
        del primals_2435
        # Topologically Sorted Source Nodes: [input_1216], Original ATen: [aten.convolution]
        buf1399 = extern_kernels.convolution(buf1398, primals_2436, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1399, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1400 = buf1399; del buf1399  # reuse
        buf1401 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1207, up1_40, input_1216, up1_41, input_1217, input_1218], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf1400, primals_2437, buf1391, primals_2419, buf1383, primals_2438, primals_2439, primals_2440, primals_2441, buf1401, 256, grid=grid(256), stream=stream0)
        del primals_2437
        del primals_2441
        # Topologically Sorted Source Nodes: [input_1219], Original ATen: [aten.convolution]
        buf1402 = extern_kernels.convolution(buf1401, primals_2442, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1402, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1403 = buf1402; del buf1402  # reuse
        buf1404 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1219, input_1220, input_1221], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1403, primals_2443, primals_2444, primals_2445, primals_2446, primals_2447, buf1404, 128, grid=grid(128), stream=stream0)
        del primals_2443
        del primals_2447
        # Topologically Sorted Source Nodes: [input_1222], Original ATen: [aten.convolution]
        buf1405 = extern_kernels.convolution(buf1404, buf135, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1405, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1406 = buf1405; del buf1405  # reuse
        buf1407 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1222, input_1223, input_1224], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1406, primals_2449, primals_2450, primals_2451, primals_2452, primals_2453, buf1407, 128, grid=grid(128), stream=stream0)
        del primals_2449
        del primals_2453
        # Topologically Sorted Source Nodes: [input_1225], Original ATen: [aten.convolution]
        buf1408 = extern_kernels.convolution(buf1407, primals_2454, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1408, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1409 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1225, up1_42, input_1226, input_1227], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1408, primals_2455, buf1400, primals_2456, primals_2457, primals_2458, primals_2459, buf1409, 256, grid=grid(256), stream=stream0)
        del primals_2459
        # Topologically Sorted Source Nodes: [input_1228], Original ATen: [aten.convolution]
        buf1410 = extern_kernels.convolution(buf1409, primals_2460, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1410, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1411 = buf1410; del buf1410  # reuse
        buf1412 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1228, input_1229, input_1230], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1411, primals_2461, primals_2462, primals_2463, primals_2464, primals_2465, buf1412, 128, grid=grid(128), stream=stream0)
        del primals_2461
        del primals_2465
        # Topologically Sorted Source Nodes: [input_1231], Original ATen: [aten.convolution]
        buf1413 = extern_kernels.convolution(buf1412, buf136, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1413, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1414 = buf1413; del buf1413  # reuse
        buf1415 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1231, input_1232, input_1233], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1414, primals_2467, primals_2468, primals_2469, primals_2470, primals_2471, buf1415, 128, grid=grid(128), stream=stream0)
        del primals_2467
        del primals_2471
        # Topologically Sorted Source Nodes: [input_1234], Original ATen: [aten.convolution]
        buf1416 = extern_kernels.convolution(buf1415, primals_2472, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1416, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1417 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.int8)
        buf1418 = buf1133; del buf1133  # reuse
        # Topologically Sorted Source Nodes: [low1_50, input_1235, input_1236], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28.run(buf1383, primals_2474, primals_2475, primals_2476, primals_2477, buf1417, buf1418, 64, grid=grid(64), stream=stream0)
        del primals_2477
        # Topologically Sorted Source Nodes: [input_1237], Original ATen: [aten.convolution]
        buf1419 = extern_kernels.convolution(buf1418, primals_2478, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1419, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1420 = buf1419; del buf1419  # reuse
        buf1421 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1237, input_1238, input_1239], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1420, primals_2479, primals_2480, primals_2481, primals_2482, primals_2483, buf1421, 32, grid=grid(32), stream=stream0)
        del primals_2479
        del primals_2483
        # Topologically Sorted Source Nodes: [input_1240], Original ATen: [aten.convolution]
        buf1422 = extern_kernels.convolution(buf1421, buf137, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1422, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1423 = buf1422; del buf1422  # reuse
        buf1424 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1240, input_1241, input_1242], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1423, primals_2485, primals_2486, primals_2487, primals_2488, primals_2489, buf1424, 32, grid=grid(32), stream=stream0)
        del primals_2485
        del primals_2489
        # Topologically Sorted Source Nodes: [input_1243], Original ATen: [aten.convolution]
        buf1425 = extern_kernels.convolution(buf1424, primals_2490, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1425, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1426 = buf1425; del buf1425  # reuse
        buf1427 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_50, input_1243, low1_51, input_1244, input_1245], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30.run(buf1426, primals_2491, buf1383, primals_2492, primals_2493, primals_2494, primals_2495, buf1427, 64, grid=grid(64), stream=stream0)
        del primals_2491
        del primals_2495
        # Topologically Sorted Source Nodes: [input_1246], Original ATen: [aten.convolution]
        buf1428 = extern_kernels.convolution(buf1427, primals_2496, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1428, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1429 = buf1428; del buf1428  # reuse
        buf1430 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1246, input_1247, input_1248], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1429, primals_2497, primals_2498, primals_2499, primals_2500, primals_2501, buf1430, 32, grid=grid(32), stream=stream0)
        del primals_2497
        del primals_2501
        # Topologically Sorted Source Nodes: [input_1249], Original ATen: [aten.convolution]
        buf1431 = extern_kernels.convolution(buf1430, buf138, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1431, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1432 = buf1431; del buf1431  # reuse
        buf1433 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1249, input_1250, input_1251], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1432, primals_2503, primals_2504, primals_2505, primals_2506, primals_2507, buf1433, 32, grid=grid(32), stream=stream0)
        del primals_2503
        del primals_2507
        # Topologically Sorted Source Nodes: [input_1252], Original ATen: [aten.convolution]
        buf1434 = extern_kernels.convolution(buf1433, primals_2508, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1434, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1435 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1252, low1_52, input_1253, input_1254], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1434, primals_2509, buf1426, primals_2510, primals_2511, primals_2512, primals_2513, buf1435, 64, grid=grid(64), stream=stream0)
        del primals_2513
        # Topologically Sorted Source Nodes: [input_1255], Original ATen: [aten.convolution]
        buf1436 = extern_kernels.convolution(buf1435, primals_2514, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1436, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1437 = buf1436; del buf1436  # reuse
        buf1438 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1255, input_1256, input_1257], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1437, primals_2515, primals_2516, primals_2517, primals_2518, primals_2519, buf1438, 32, grid=grid(32), stream=stream0)
        del primals_2515
        del primals_2519
        # Topologically Sorted Source Nodes: [input_1258], Original ATen: [aten.convolution]
        buf1439 = extern_kernels.convolution(buf1438, buf139, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1439, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1440 = buf1439; del buf1439  # reuse
        buf1441 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1258, input_1259, input_1260], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1440, primals_2521, primals_2522, primals_2523, primals_2524, primals_2525, buf1441, 32, grid=grid(32), stream=stream0)
        del primals_2521
        del primals_2525
        # Topologically Sorted Source Nodes: [input_1261], Original ATen: [aten.convolution]
        buf1442 = extern_kernels.convolution(buf1441, primals_2526, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1442, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1443 = buf1442; del buf1442  # reuse
        buf1444 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        buf2303 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1252, low1_52, input_1261, low1_53, input_1262, input_1263], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32.run(buf1443, primals_2527, buf1434, primals_2509, buf1426, primals_2528, primals_2529, primals_2530, primals_2531, buf1444, buf2303, 64, grid=grid(64), stream=stream0)
        del primals_2527
        del primals_2528
        del primals_2531
        # Topologically Sorted Source Nodes: [input_1264], Original ATen: [aten.convolution]
        buf1445 = extern_kernels.convolution(buf1444, primals_2532, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1445, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1446 = buf1445; del buf1445  # reuse
        buf1447 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1264, input_1265, input_1266], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1446, primals_2533, primals_2534, primals_2535, primals_2536, primals_2537, buf1447, 32, grid=grid(32), stream=stream0)
        del primals_2533
        del primals_2537
        # Topologically Sorted Source Nodes: [input_1267], Original ATen: [aten.convolution]
        buf1448 = extern_kernels.convolution(buf1447, buf140, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1448, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1449 = buf1448; del buf1448  # reuse
        buf1450 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1267, input_1268, input_1269], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1449, primals_2539, primals_2540, primals_2541, primals_2542, primals_2543, buf1450, 32, grid=grid(32), stream=stream0)
        del primals_2539
        del primals_2543
        # Topologically Sorted Source Nodes: [input_1270], Original ATen: [aten.convolution]
        buf1451 = extern_kernels.convolution(buf1450, primals_2544, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1451, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1452 = buf1451; del buf1451  # reuse
        buf1453 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1270, low1_54, input_1271, input_1272], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33.run(buf1452, primals_2545, buf1443, primals_2546, primals_2547, primals_2548, primals_2549, buf1453, 64, grid=grid(64), stream=stream0)
        del primals_2545
        del primals_2549
        # Topologically Sorted Source Nodes: [input_1273], Original ATen: [aten.convolution]
        buf1454 = extern_kernels.convolution(buf1453, primals_2550, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1454, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1455 = buf1454; del buf1454  # reuse
        buf1456 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1273, input_1274, input_1275], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1455, primals_2551, primals_2552, primals_2553, primals_2554, primals_2555, buf1456, 32, grid=grid(32), stream=stream0)
        del primals_2551
        del primals_2555
        # Topologically Sorted Source Nodes: [input_1276], Original ATen: [aten.convolution]
        buf1457 = extern_kernels.convolution(buf1456, buf141, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1457, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1458 = buf1457; del buf1457  # reuse
        buf1459 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1276, input_1277, input_1278], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1458, primals_2557, primals_2558, primals_2559, primals_2560, primals_2561, buf1459, 32, grid=grid(32), stream=stream0)
        del primals_2557
        del primals_2561
        # Topologically Sorted Source Nodes: [input_1279], Original ATen: [aten.convolution]
        buf1460 = extern_kernels.convolution(buf1459, primals_2562, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1460, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1461 = buf1443; del buf1443  # reuse
        # Topologically Sorted Source Nodes: [input_1279, up1_44, input_1280, input_1281], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1460, primals_2563, buf1452, primals_2564, primals_2565, primals_2566, primals_2567, buf1461, 64, grid=grid(64), stream=stream0)
        del primals_2567
        # Topologically Sorted Source Nodes: [input_1282], Original ATen: [aten.convolution]
        buf1462 = extern_kernels.convolution(buf1461, primals_2568, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1462, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1463 = buf1462; del buf1462  # reuse
        buf1464 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1282, input_1283, input_1284], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1463, primals_2569, primals_2570, primals_2571, primals_2572, primals_2573, buf1464, 32, grid=grid(32), stream=stream0)
        del primals_2569
        del primals_2573
        # Topologically Sorted Source Nodes: [input_1285], Original ATen: [aten.convolution]
        buf1465 = extern_kernels.convolution(buf1464, buf142, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1465, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1466 = buf1465; del buf1465  # reuse
        buf1467 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1285, input_1286, input_1287], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1466, primals_2575, primals_2576, primals_2577, primals_2578, primals_2579, buf1467, 32, grid=grid(32), stream=stream0)
        del primals_2575
        del primals_2579
        # Topologically Sorted Source Nodes: [input_1288], Original ATen: [aten.convolution]
        buf1468 = extern_kernels.convolution(buf1467, primals_2580, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1468, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1469 = buf1468; del buf1468  # reuse
        buf1470 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1279, up1_44, input_1288, up1_45, input_1289, input_1290], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf1469, primals_2581, buf1460, primals_2563, buf1452, primals_2582, primals_2583, primals_2584, primals_2585, buf1470, 64, grid=grid(64), stream=stream0)
        del primals_2581
        del primals_2585
        # Topologically Sorted Source Nodes: [input_1291], Original ATen: [aten.convolution]
        buf1471 = extern_kernels.convolution(buf1470, primals_2586, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1471, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1472 = buf1471; del buf1471  # reuse
        buf1473 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1291, input_1292, input_1293], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1472, primals_2587, primals_2588, primals_2589, primals_2590, primals_2591, buf1473, 32, grid=grid(32), stream=stream0)
        del primals_2587
        del primals_2591
        # Topologically Sorted Source Nodes: [input_1294], Original ATen: [aten.convolution]
        buf1474 = extern_kernels.convolution(buf1473, buf143, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1474, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1475 = buf1474; del buf1474  # reuse
        buf1476 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1294, input_1295, input_1296], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1475, primals_2593, primals_2594, primals_2595, primals_2596, primals_2597, buf1476, 32, grid=grid(32), stream=stream0)
        del primals_2593
        del primals_2597
        # Topologically Sorted Source Nodes: [input_1297], Original ATen: [aten.convolution]
        buf1477 = extern_kernels.convolution(buf1476, primals_2598, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1477, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1478 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1297, up1_46, input_1298, input_1299], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1477, primals_2599, buf1469, primals_2600, primals_2601, primals_2602, primals_2603, buf1478, 64, grid=grid(64), stream=stream0)
        del primals_2603
        # Topologically Sorted Source Nodes: [input_1300], Original ATen: [aten.convolution]
        buf1479 = extern_kernels.convolution(buf1478, primals_2604, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1479, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1480 = buf1479; del buf1479  # reuse
        buf1481 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1300, input_1301, input_1302], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1480, primals_2605, primals_2606, primals_2607, primals_2608, primals_2609, buf1481, 32, grid=grid(32), stream=stream0)
        del primals_2605
        del primals_2609
        # Topologically Sorted Source Nodes: [input_1303], Original ATen: [aten.convolution]
        buf1482 = extern_kernels.convolution(buf1481, buf144, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1482, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1483 = buf1482; del buf1482  # reuse
        buf1484 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1303, input_1304, input_1305], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1483, primals_2611, primals_2612, primals_2613, primals_2614, primals_2615, buf1484, 32, grid=grid(32), stream=stream0)
        del primals_2611
        del primals_2615
        # Topologically Sorted Source Nodes: [input_1306], Original ATen: [aten.convolution]
        buf1485 = extern_kernels.convolution(buf1484, primals_2616, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1485, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1486 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.int8)
        buf1487 = buf1099; del buf1099  # reuse
        # Topologically Sorted Source Nodes: [low1_55, input_1307, input_1308], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35.run(buf1452, primals_2618, primals_2619, primals_2620, primals_2621, buf1486, buf1487, 16, grid=grid(16), stream=stream0)
        del primals_2621
        # Topologically Sorted Source Nodes: [input_1309], Original ATen: [aten.convolution]
        buf1488 = extern_kernels.convolution(buf1487, primals_2622, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1488, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1489 = buf1488; del buf1488  # reuse
        buf1490 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1309, input_1310, input_1311], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1489, primals_2623, primals_2624, primals_2625, primals_2626, primals_2627, buf1490, 8, grid=grid(8), stream=stream0)
        del primals_2623
        del primals_2627
        # Topologically Sorted Source Nodes: [input_1312], Original ATen: [aten.convolution]
        buf1491 = extern_kernels.convolution(buf1490, buf145, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1491, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1492 = buf1491; del buf1491  # reuse
        buf1493 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1312, input_1313, input_1314], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1492, primals_2629, primals_2630, primals_2631, primals_2632, primals_2633, buf1493, 8, grid=grid(8), stream=stream0)
        del primals_2629
        del primals_2633
        # Topologically Sorted Source Nodes: [input_1315], Original ATen: [aten.convolution]
        buf1494 = extern_kernels.convolution(buf1493, primals_2634, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1494, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1495 = reinterpret_tensor(buf1494, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1494  # reuse
        buf1496 = reinterpret_tensor(buf1091, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1091  # reuse
        # Topologically Sorted Source Nodes: [low1_55, input_1315, low1_56, input_1316, input_1317], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37.run(buf1495, primals_2635, buf1452, primals_2636, primals_2637, primals_2638, primals_2639, buf1496, 16, grid=grid(16), stream=stream0)
        del primals_2635
        del primals_2639
        # Topologically Sorted Source Nodes: [input_1318], Original ATen: [aten.convolution]
        buf1497 = extern_kernels.convolution(buf1496, primals_2640, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1497, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1498 = buf1497; del buf1497  # reuse
        buf1499 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1318, input_1319, input_1320], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1498, primals_2641, primals_2642, primals_2643, primals_2644, primals_2645, buf1499, 8, grid=grid(8), stream=stream0)
        del primals_2641
        del primals_2645
        # Topologically Sorted Source Nodes: [input_1321], Original ATen: [aten.convolution]
        buf1500 = extern_kernels.convolution(buf1499, buf146, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1500, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1501 = buf1500; del buf1500  # reuse
        buf1502 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1321, input_1322, input_1323], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1501, primals_2647, primals_2648, primals_2649, primals_2650, primals_2651, buf1502, 8, grid=grid(8), stream=stream0)
        del primals_2647
        del primals_2651
        # Topologically Sorted Source Nodes: [input_1324], Original ATen: [aten.convolution]
        buf1503 = extern_kernels.convolution(buf1502, primals_2652, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1503, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1504 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1324, low1_57, input_1325, input_1326], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1503, primals_2653, buf1495, primals_2654, primals_2655, primals_2656, primals_2657, buf1504, 16, grid=grid(16), stream=stream0)
        del primals_2657
        # Topologically Sorted Source Nodes: [input_1327], Original ATen: [aten.convolution]
        buf1505 = extern_kernels.convolution(buf1504, primals_2658, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1505, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1506 = buf1505; del buf1505  # reuse
        buf1507 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1327, input_1328, input_1329], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1506, primals_2659, primals_2660, primals_2661, primals_2662, primals_2663, buf1507, 8, grid=grid(8), stream=stream0)
        del primals_2659
        del primals_2663
        # Topologically Sorted Source Nodes: [input_1330], Original ATen: [aten.convolution]
        buf1508 = extern_kernels.convolution(buf1507, buf147, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1508, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1509 = buf1508; del buf1508  # reuse
        buf1510 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1330, input_1331, input_1332], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1509, primals_2665, primals_2666, primals_2667, primals_2668, primals_2669, buf1510, 8, grid=grid(8), stream=stream0)
        del primals_2665
        del primals_2669
        # Topologically Sorted Source Nodes: [input_1333], Original ATen: [aten.convolution]
        buf1511 = extern_kernels.convolution(buf1510, primals_2670, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1511, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1512 = reinterpret_tensor(buf1511, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1511  # reuse
        buf1513 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1324, low1_57, input_1333, low1_58, input_1334, input_1335], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1512, primals_2671, buf1503, primals_2653, buf1495, primals_2672, primals_2673, primals_2674, primals_2675, buf1513, 16, grid=grid(16), stream=stream0)
        del primals_2671
        del primals_2675
        # Topologically Sorted Source Nodes: [input_1336], Original ATen: [aten.convolution]
        buf1514 = extern_kernels.convolution(buf1513, primals_2676, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1514, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1515 = buf1514; del buf1514  # reuse
        buf1516 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1336, input_1337, input_1338], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1515, primals_2677, primals_2678, primals_2679, primals_2680, primals_2681, buf1516, 8, grid=grid(8), stream=stream0)
        del primals_2677
        del primals_2681
        # Topologically Sorted Source Nodes: [input_1339], Original ATen: [aten.convolution]
        buf1517 = extern_kernels.convolution(buf1516, buf148, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1517, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1518 = buf1517; del buf1517  # reuse
        buf1519 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1339, input_1340, input_1341], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1518, primals_2683, primals_2684, primals_2685, primals_2686, primals_2687, buf1519, 8, grid=grid(8), stream=stream0)
        del primals_2683
        del primals_2687
        # Topologically Sorted Source Nodes: [input_1342], Original ATen: [aten.convolution]
        buf1520 = extern_kernels.convolution(buf1519, primals_2688, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1520, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1521 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1342, low1_59, input_1343, input_1344], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1520, primals_2689, buf1512, primals_2690, primals_2691, primals_2692, primals_2693, buf1521, 16, grid=grid(16), stream=stream0)
        del primals_2693
        # Topologically Sorted Source Nodes: [input_1345], Original ATen: [aten.convolution]
        buf1522 = extern_kernels.convolution(buf1521, primals_2694, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1522, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1523 = buf1522; del buf1522  # reuse
        buf1524 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1345, input_1346, input_1347], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1523, primals_2695, primals_2696, primals_2697, primals_2698, primals_2699, buf1524, 8, grid=grid(8), stream=stream0)
        del primals_2695
        del primals_2699
        # Topologically Sorted Source Nodes: [input_1348], Original ATen: [aten.convolution]
        buf1525 = extern_kernels.convolution(buf1524, buf149, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1525, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1526 = buf1525; del buf1525  # reuse
        buf1527 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1348, input_1349, input_1350], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1526, primals_2701, primals_2702, primals_2703, primals_2704, primals_2705, buf1527, 8, grid=grid(8), stream=stream0)
        del primals_2701
        del primals_2705
        # Topologically Sorted Source Nodes: [input_1351], Original ATen: [aten.convolution]
        buf1528 = extern_kernels.convolution(buf1527, primals_2706, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1528, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1529 = reinterpret_tensor(buf1528, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1528  # reuse
        buf1530 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1342, low1_59, input_1351, low2_14, input_1352, input_1353], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1529, primals_2707, buf1520, primals_2689, buf1512, primals_2708, primals_2709, primals_2710, primals_2711, buf1530, 16, grid=grid(16), stream=stream0)
        del primals_2707
        del primals_2711
        # Topologically Sorted Source Nodes: [input_1354], Original ATen: [aten.convolution]
        buf1531 = extern_kernels.convolution(buf1530, primals_2712, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1531, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1532 = buf1531; del buf1531  # reuse
        buf1533 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1354, input_1355, input_1356], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1532, primals_2713, primals_2714, primals_2715, primals_2716, primals_2717, buf1533, 8, grid=grid(8), stream=stream0)
        del primals_2713
        del primals_2717
        # Topologically Sorted Source Nodes: [input_1357], Original ATen: [aten.convolution]
        buf1534 = extern_kernels.convolution(buf1533, buf150, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1534, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1535 = buf1534; del buf1534  # reuse
        buf1536 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1357, input_1358, input_1359], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1535, primals_2719, primals_2720, primals_2721, primals_2722, primals_2723, buf1536, 8, grid=grid(8), stream=stream0)
        del primals_2719
        del primals_2723
        # Topologically Sorted Source Nodes: [input_1360], Original ATen: [aten.convolution]
        buf1537 = extern_kernels.convolution(buf1536, primals_2724, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1537, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1538 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1360, low2_15, input_1361, input_1362], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1537, primals_2725, buf1529, primals_2726, primals_2727, primals_2728, primals_2729, buf1538, 16, grid=grid(16), stream=stream0)
        del primals_2729
        # Topologically Sorted Source Nodes: [input_1363], Original ATen: [aten.convolution]
        buf1539 = extern_kernels.convolution(buf1538, primals_2730, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1539, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1540 = buf1539; del buf1539  # reuse
        buf1541 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1363, input_1364, input_1365], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1540, primals_2731, primals_2732, primals_2733, primals_2734, primals_2735, buf1541, 8, grid=grid(8), stream=stream0)
        del primals_2731
        del primals_2735
        # Topologically Sorted Source Nodes: [input_1366], Original ATen: [aten.convolution]
        buf1542 = extern_kernels.convolution(buf1541, buf151, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1542, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1543 = buf1542; del buf1542  # reuse
        buf1544 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1366, input_1367, input_1368], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1543, primals_2737, primals_2738, primals_2739, primals_2740, primals_2741, buf1544, 8, grid=grid(8), stream=stream0)
        del primals_2737
        del primals_2741
        # Topologically Sorted Source Nodes: [input_1369], Original ATen: [aten.convolution]
        buf1545 = extern_kernels.convolution(buf1544, primals_2742, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1545, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1546 = reinterpret_tensor(buf1545, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1545  # reuse
        buf1547 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1360, low2_15, input_1369, low2_16, input_1370, input_1371], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1546, primals_2743, buf1537, primals_2725, buf1529, primals_2744, primals_2745, primals_2746, primals_2747, buf1547, 16, grid=grid(16), stream=stream0)
        del primals_2743
        del primals_2747
        # Topologically Sorted Source Nodes: [input_1372], Original ATen: [aten.convolution]
        buf1548 = extern_kernels.convolution(buf1547, primals_2748, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1548, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1549 = buf1548; del buf1548  # reuse
        buf1550 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1372, input_1373, input_1374], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1549, primals_2749, primals_2750, primals_2751, primals_2752, primals_2753, buf1550, 8, grid=grid(8), stream=stream0)
        del primals_2749
        del primals_2753
        # Topologically Sorted Source Nodes: [input_1375], Original ATen: [aten.convolution]
        buf1551 = extern_kernels.convolution(buf1550, buf152, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1551, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1552 = buf1551; del buf1551  # reuse
        buf1553 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1375, input_1376, input_1377], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1552, primals_2755, primals_2756, primals_2757, primals_2758, primals_2759, buf1553, 8, grid=grid(8), stream=stream0)
        del primals_2755
        del primals_2759
        # Topologically Sorted Source Nodes: [input_1378], Original ATen: [aten.convolution]
        buf1554 = extern_kernels.convolution(buf1553, primals_2760, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1554, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1555 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1378, low2_17, input_1379, input_1380], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1554, primals_2761, buf1546, primals_2762, primals_2763, primals_2764, primals_2765, buf1555, 16, grid=grid(16), stream=stream0)
        del primals_2765
        # Topologically Sorted Source Nodes: [input_1381], Original ATen: [aten.convolution]
        buf1556 = extern_kernels.convolution(buf1555, primals_2766, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1556, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1557 = buf1556; del buf1556  # reuse
        buf1558 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1381, input_1382, input_1383], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1557, primals_2767, primals_2768, primals_2769, primals_2770, primals_2771, buf1558, 8, grid=grid(8), stream=stream0)
        del primals_2767
        del primals_2771
        # Topologically Sorted Source Nodes: [input_1384], Original ATen: [aten.convolution]
        buf1559 = extern_kernels.convolution(buf1558, buf153, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1559, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1560 = buf1559; del buf1559  # reuse
        buf1561 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1384, input_1385, input_1386], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1560, primals_2773, primals_2774, primals_2775, primals_2776, primals_2777, buf1561, 8, grid=grid(8), stream=stream0)
        del primals_2773
        del primals_2777
        # Topologically Sorted Source Nodes: [input_1387], Original ATen: [aten.convolution]
        buf1562 = extern_kernels.convolution(buf1561, primals_2778, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1562, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1563 = reinterpret_tensor(buf1562, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1562  # reuse
        buf1564 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1378, low2_17, input_1387, low3_32, input_1388, input_1389], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf1563, primals_2779, buf1554, primals_2761, buf1546, primals_2780, primals_2781, primals_2782, primals_2783, buf1564, 16, grid=grid(16), stream=stream0)
        del primals_2779
        del primals_2783
        # Topologically Sorted Source Nodes: [input_1390], Original ATen: [aten.convolution]
        buf1565 = extern_kernels.convolution(buf1564, primals_2784, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1565, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1566 = buf1565; del buf1565  # reuse
        buf1567 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1390, input_1391, input_1392], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1566, primals_2785, primals_2786, primals_2787, primals_2788, primals_2789, buf1567, 8, grid=grid(8), stream=stream0)
        del primals_2785
        del primals_2789
        # Topologically Sorted Source Nodes: [input_1393], Original ATen: [aten.convolution]
        buf1568 = extern_kernels.convolution(buf1567, buf154, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1568, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1569 = buf1568; del buf1568  # reuse
        buf1570 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1393, input_1394, input_1395], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1569, primals_2791, primals_2792, primals_2793, primals_2794, primals_2795, buf1570, 8, grid=grid(8), stream=stream0)
        del primals_2791
        del primals_2795
        # Topologically Sorted Source Nodes: [input_1396], Original ATen: [aten.convolution]
        buf1571 = extern_kernels.convolution(buf1570, primals_2796, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1571, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1572 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1396, low3_33, input_1397, input_1398], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1571, primals_2797, buf1563, primals_2798, primals_2799, primals_2800, primals_2801, buf1572, 16, grid=grid(16), stream=stream0)
        del primals_2801
        # Topologically Sorted Source Nodes: [input_1399], Original ATen: [aten.convolution]
        buf1573 = extern_kernels.convolution(buf1572, primals_2802, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1573, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1574 = buf1573; del buf1573  # reuse
        buf1575 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1399, input_1400, input_1401], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1574, primals_2803, primals_2804, primals_2805, primals_2806, primals_2807, buf1575, 8, grid=grid(8), stream=stream0)
        del primals_2803
        del primals_2807
        # Topologically Sorted Source Nodes: [input_1402], Original ATen: [aten.convolution]
        buf1576 = extern_kernels.convolution(buf1575, buf155, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1576, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1577 = buf1576; del buf1576  # reuse
        buf1578 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1402, input_1403, input_1404], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1577, primals_2809, primals_2810, primals_2811, primals_2812, primals_2813, buf1578, 8, grid=grid(8), stream=stream0)
        del primals_2809
        del primals_2813
        # Topologically Sorted Source Nodes: [input_1405], Original ATen: [aten.convolution]
        buf1579 = extern_kernels.convolution(buf1578, primals_2814, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1579, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1580 = reinterpret_tensor(buf1579, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1579  # reuse
        buf1581 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        buf2288 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1396, low3_33, input_1405, low3_34, input_1406, input_1407], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40.run(buf1580, primals_2815, buf1571, primals_2797, buf1563, primals_2816, primals_2817, primals_2818, primals_2819, buf1581, buf2288, 16, grid=grid(16), stream=stream0)
        del primals_2815
        del primals_2816
        del primals_2819
        # Topologically Sorted Source Nodes: [input_1408], Original ATen: [aten.convolution]
        buf1582 = extern_kernels.convolution(buf1581, primals_2820, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1582, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1583 = buf1582; del buf1582  # reuse
        buf1584 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1408, input_1409, input_1410], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1583, primals_2821, primals_2822, primals_2823, primals_2824, primals_2825, buf1584, 8, grid=grid(8), stream=stream0)
        del primals_2821
        del primals_2825
        # Topologically Sorted Source Nodes: [input_1411], Original ATen: [aten.convolution]
        buf1585 = extern_kernels.convolution(buf1584, buf156, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1585, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1586 = buf1585; del buf1585  # reuse
        buf1587 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1411, input_1412, input_1413], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1586, primals_2827, primals_2828, primals_2829, primals_2830, primals_2831, buf1587, 8, grid=grid(8), stream=stream0)
        del primals_2827
        del primals_2831
        # Topologically Sorted Source Nodes: [input_1414], Original ATen: [aten.convolution]
        buf1588 = extern_kernels.convolution(buf1587, primals_2832, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1588, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1589 = buf1485; del buf1485  # reuse
        buf1590 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1297, up1_46, input_1306, up1_47, input_1414, low3_35, up2_8, low2_18, input_1415, input_1416], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42.run(buf1589, primals_2617, buf1477, primals_2599, buf1469, buf607, buf1588, primals_2833, buf1580, primals_2834, primals_2835, primals_2836, primals_2837, buf1590, 64, grid=grid(64), stream=stream0)
        del primals_2617
        del primals_2833
        del primals_2837
        # Topologically Sorted Source Nodes: [input_1417], Original ATen: [aten.convolution]
        buf1591 = extern_kernels.convolution(buf1590, primals_2838, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1591, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1592 = buf1591; del buf1591  # reuse
        buf1593 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1417, input_1418, input_1419], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1592, primals_2839, primals_2840, primals_2841, primals_2842, primals_2843, buf1593, 32, grid=grid(32), stream=stream0)
        del primals_2839
        del primals_2843
        # Topologically Sorted Source Nodes: [input_1420], Original ATen: [aten.convolution]
        buf1594 = extern_kernels.convolution(buf1593, buf157, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1594, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1595 = buf1594; del buf1594  # reuse
        buf1596 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1420, input_1421, input_1422], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1595, primals_2845, primals_2846, primals_2847, primals_2848, primals_2849, buf1596, 32, grid=grid(32), stream=stream0)
        del primals_2845
        del primals_2849
        # Topologically Sorted Source Nodes: [input_1423], Original ATen: [aten.convolution]
        buf1597 = extern_kernels.convolution(buf1596, primals_2850, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1597, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1598 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1423, low3_36, input_1424, input_1425], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1597, primals_2851, buf1589, primals_2852, primals_2853, primals_2854, primals_2855, buf1598, 64, grid=grid(64), stream=stream0)
        del primals_2855
        # Topologically Sorted Source Nodes: [input_1426], Original ATen: [aten.convolution]
        buf1599 = extern_kernels.convolution(buf1598, primals_2856, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1599, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1600 = buf1599; del buf1599  # reuse
        buf1601 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1426, input_1427, input_1428], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1600, primals_2857, primals_2858, primals_2859, primals_2860, primals_2861, buf1601, 32, grid=grid(32), stream=stream0)
        del primals_2857
        del primals_2861
        # Topologically Sorted Source Nodes: [input_1429], Original ATen: [aten.convolution]
        buf1602 = extern_kernels.convolution(buf1601, buf158, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1602, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1603 = buf1602; del buf1602  # reuse
        buf1604 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1429, input_1430, input_1431], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1603, primals_2863, primals_2864, primals_2865, primals_2866, primals_2867, buf1604, 32, grid=grid(32), stream=stream0)
        del primals_2863
        del primals_2867
        # Topologically Sorted Source Nodes: [input_1432], Original ATen: [aten.convolution]
        buf1605 = extern_kernels.convolution(buf1604, primals_2868, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1605, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1606 = buf1605; del buf1605  # reuse
        buf1607 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1423, low3_36, input_1432, low3_37, input_1433, input_1434], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf1606, primals_2869, buf1597, primals_2851, buf1589, primals_2870, primals_2871, primals_2872, primals_2873, buf1607, 64, grid=grid(64), stream=stream0)
        del primals_2869
        del primals_2873
        # Topologically Sorted Source Nodes: [input_1435], Original ATen: [aten.convolution]
        buf1608 = extern_kernels.convolution(buf1607, primals_2874, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1608, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1609 = buf1608; del buf1608  # reuse
        buf1610 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1435, input_1436, input_1437], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1609, primals_2875, primals_2876, primals_2877, primals_2878, primals_2879, buf1610, 32, grid=grid(32), stream=stream0)
        del primals_2875
        del primals_2879
        # Topologically Sorted Source Nodes: [input_1438], Original ATen: [aten.convolution]
        buf1611 = extern_kernels.convolution(buf1610, buf159, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1611, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1612 = buf1611; del buf1611  # reuse
        buf1613 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1438, input_1439, input_1440], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1612, primals_2881, primals_2882, primals_2883, primals_2884, primals_2885, buf1613, 32, grid=grid(32), stream=stream0)
        del primals_2881
        del primals_2885
        # Topologically Sorted Source Nodes: [input_1441], Original ATen: [aten.convolution]
        buf1614 = extern_kernels.convolution(buf1613, primals_2886, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1614, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1615 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1441, low3_38, input_1442, input_1443], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1614, primals_2887, buf1606, primals_2888, primals_2889, primals_2890, primals_2891, buf1615, 64, grid=grid(64), stream=stream0)
        del primals_2891
        # Topologically Sorted Source Nodes: [input_1444], Original ATen: [aten.convolution]
        buf1616 = extern_kernels.convolution(buf1615, primals_2892, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1616, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1617 = buf1616; del buf1616  # reuse
        buf1618 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1444, input_1445, input_1446], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1617, primals_2893, primals_2894, primals_2895, primals_2896, primals_2897, buf1618, 32, grid=grid(32), stream=stream0)
        del primals_2893
        del primals_2897
        # Topologically Sorted Source Nodes: [input_1447], Original ATen: [aten.convolution]
        buf1619 = extern_kernels.convolution(buf1618, buf160, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1619, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1620 = buf1619; del buf1619  # reuse
        buf1621 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1447, input_1448, input_1449], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1620, primals_2899, primals_2900, primals_2901, primals_2902, primals_2903, buf1621, 32, grid=grid(32), stream=stream0)
        del primals_2899
        del primals_2903
        # Topologically Sorted Source Nodes: [input_1450], Original ATen: [aten.convolution]
        buf1622 = extern_kernels.convolution(buf1621, primals_2904, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1622, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1623 = buf1416; del buf1416  # reuse
        buf1624 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1225, up1_42, input_1234, up1_43, input_1441, low3_38, input_1450, low3_39, up2_9, low2_19, input_1451, input_1452], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44.run(buf1623, primals_2473, buf1408, primals_2455, buf1400, buf642, buf1622, primals_2905, buf1614, primals_2887, buf1606, primals_2906, primals_2907, primals_2908, primals_2909, buf1624, 256, grid=grid(256), stream=stream0)
        del primals_2473
        del primals_2905
        del primals_2909
        # Topologically Sorted Source Nodes: [input_1453], Original ATen: [aten.convolution]
        buf1625 = extern_kernels.convolution(buf1624, primals_2910, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1625, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1626 = buf1625; del buf1625  # reuse
        buf1627 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1453, input_1454, input_1455], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1626, primals_2911, primals_2912, primals_2913, primals_2914, primals_2915, buf1627, 128, grid=grid(128), stream=stream0)
        del primals_2911
        del primals_2915
        # Topologically Sorted Source Nodes: [input_1456], Original ATen: [aten.convolution]
        buf1628 = extern_kernels.convolution(buf1627, buf161, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1628, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1629 = buf1628; del buf1628  # reuse
        buf1630 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1456, input_1457, input_1458], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1629, primals_2917, primals_2918, primals_2919, primals_2920, primals_2921, buf1630, 128, grid=grid(128), stream=stream0)
        del primals_2917
        del primals_2921
        # Topologically Sorted Source Nodes: [input_1459], Original ATen: [aten.convolution]
        buf1631 = extern_kernels.convolution(buf1630, primals_2922, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1631, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1632 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1459, low3_40, input_1460, input_1461], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1631, primals_2923, buf1623, primals_2924, primals_2925, primals_2926, primals_2927, buf1632, 256, grid=grid(256), stream=stream0)
        del primals_2927
        # Topologically Sorted Source Nodes: [input_1462], Original ATen: [aten.convolution]
        buf1633 = extern_kernels.convolution(buf1632, primals_2928, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1633, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1634 = buf1633; del buf1633  # reuse
        buf1635 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1462, input_1463, input_1464], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1634, primals_2929, primals_2930, primals_2931, primals_2932, primals_2933, buf1635, 128, grid=grid(128), stream=stream0)
        del primals_2929
        del primals_2933
        # Topologically Sorted Source Nodes: [input_1465], Original ATen: [aten.convolution]
        buf1636 = extern_kernels.convolution(buf1635, buf162, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1636, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1637 = buf1636; del buf1636  # reuse
        buf1638 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1465, input_1466, input_1467], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1637, primals_2935, primals_2936, primals_2937, primals_2938, primals_2939, buf1638, 128, grid=grid(128), stream=stream0)
        del primals_2935
        del primals_2939
        # Topologically Sorted Source Nodes: [input_1468], Original ATen: [aten.convolution]
        buf1639 = extern_kernels.convolution(buf1638, primals_2940, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1639, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1640 = buf1639; del buf1639  # reuse
        buf1641 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1459, low3_40, input_1468, low3_41, input_1469, input_1470], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf1640, primals_2941, buf1631, primals_2923, buf1623, primals_2942, primals_2943, primals_2944, primals_2945, buf1641, 256, grid=grid(256), stream=stream0)
        del primals_2941
        del primals_2945
        # Topologically Sorted Source Nodes: [input_1471], Original ATen: [aten.convolution]
        buf1642 = extern_kernels.convolution(buf1641, primals_2946, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1642, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1643 = buf1642; del buf1642  # reuse
        buf1644 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1471, input_1472, input_1473], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1643, primals_2947, primals_2948, primals_2949, primals_2950, primals_2951, buf1644, 128, grid=grid(128), stream=stream0)
        del primals_2947
        del primals_2951
        # Topologically Sorted Source Nodes: [input_1474], Original ATen: [aten.convolution]
        buf1645 = extern_kernels.convolution(buf1644, buf163, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1645, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1646 = buf1645; del buf1645  # reuse
        buf1647 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1474, input_1475, input_1476], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1646, primals_2953, primals_2954, primals_2955, primals_2956, primals_2957, buf1647, 128, grid=grid(128), stream=stream0)
        del primals_2953
        del primals_2957
        # Topologically Sorted Source Nodes: [input_1477], Original ATen: [aten.convolution]
        buf1648 = extern_kernels.convolution(buf1647, primals_2958, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1648, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1649 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1477, low3_42, input_1478, input_1479], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1648, primals_2959, buf1640, primals_2960, primals_2961, primals_2962, primals_2963, buf1649, 256, grid=grid(256), stream=stream0)
        del primals_2963
        # Topologically Sorted Source Nodes: [input_1480], Original ATen: [aten.convolution]
        buf1650 = extern_kernels.convolution(buf1649, primals_2964, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1650, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1651 = buf1650; del buf1650  # reuse
        buf1652 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1480, input_1481, input_1482], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1651, primals_2965, primals_2966, primals_2967, primals_2968, primals_2969, buf1652, 128, grid=grid(128), stream=stream0)
        del primals_2965
        del primals_2969
        # Topologically Sorted Source Nodes: [input_1483], Original ATen: [aten.convolution]
        buf1653 = extern_kernels.convolution(buf1652, buf164, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1653, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1654 = buf1653; del buf1653  # reuse
        buf1655 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1483, input_1484, input_1485], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1654, primals_2971, primals_2972, primals_2973, primals_2974, primals_2975, buf1655, 128, grid=grid(128), stream=stream0)
        del primals_2971
        del primals_2975
        # Topologically Sorted Source Nodes: [input_1486], Original ATen: [aten.convolution]
        buf1656 = extern_kernels.convolution(buf1655, primals_2976, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1656, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1657 = buf1347; del buf1347  # reuse
        buf1658 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1153, up1_38, input_1162, up1_39, input_1477, low3_42, input_1486, low3_43, up2_10, low2_20, input_1487, input_1488], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46.run(buf1657, primals_2329, buf1339, primals_2311, buf1331, buf677, buf1656, primals_2977, buf1648, primals_2959, buf1640, primals_2978, primals_2979, primals_2980, primals_2981, buf1658, 1024, grid=grid(1024), stream=stream0)
        del primals_2329
        del primals_2977
        del primals_2981
        # Topologically Sorted Source Nodes: [input_1489], Original ATen: [aten.convolution]
        buf1659 = extern_kernels.convolution(buf1658, primals_2982, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1659, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1660 = buf1659; del buf1659  # reuse
        buf1661 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1489, input_1490, input_1491], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1660, primals_2983, primals_2984, primals_2985, primals_2986, primals_2987, buf1661, 512, grid=grid(512), stream=stream0)
        del primals_2983
        del primals_2987
        # Topologically Sorted Source Nodes: [input_1492], Original ATen: [aten.convolution]
        buf1662 = extern_kernels.convolution(buf1661, buf165, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1662, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1663 = buf1662; del buf1662  # reuse
        buf1664 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1492, input_1493, input_1494], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1663, primals_2989, primals_2990, primals_2991, primals_2992, primals_2993, buf1664, 512, grid=grid(512), stream=stream0)
        del primals_2989
        del primals_2993
        # Topologically Sorted Source Nodes: [input_1495], Original ATen: [aten.convolution]
        buf1665 = extern_kernels.convolution(buf1664, primals_2994, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1665, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1666 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1495, low3_44, input_1496, input_1497], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1665, primals_2995, buf1657, primals_2996, primals_2997, primals_2998, primals_2999, buf1666, 1024, grid=grid(1024), stream=stream0)
        del primals_2999
        # Topologically Sorted Source Nodes: [input_1498], Original ATen: [aten.convolution]
        buf1667 = extern_kernels.convolution(buf1666, primals_3000, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1667, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1668 = buf1667; del buf1667  # reuse
        buf1669 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1498, input_1499, input_1500], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1668, primals_3001, primals_3002, primals_3003, primals_3004, primals_3005, buf1669, 512, grid=grid(512), stream=stream0)
        del primals_3001
        del primals_3005
        # Topologically Sorted Source Nodes: [input_1501], Original ATen: [aten.convolution]
        buf1670 = extern_kernels.convolution(buf1669, buf166, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1670, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1671 = buf1670; del buf1670  # reuse
        buf1672 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1501, input_1502, input_1503], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1671, primals_3007, primals_3008, primals_3009, primals_3010, primals_3011, buf1672, 512, grid=grid(512), stream=stream0)
        del primals_3007
        del primals_3011
        # Topologically Sorted Source Nodes: [input_1504], Original ATen: [aten.convolution]
        buf1673 = extern_kernels.convolution(buf1672, primals_3012, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1673, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1674 = buf1673; del buf1673  # reuse
        buf1675 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1495, low3_44, input_1504, low3_45, input_1505, input_1506], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf1674, primals_3013, buf1665, primals_2995, buf1657, primals_3014, primals_3015, primals_3016, primals_3017, buf1675, 1024, grid=grid(1024), stream=stream0)
        del primals_3013
        del primals_3017
        # Topologically Sorted Source Nodes: [input_1507], Original ATen: [aten.convolution]
        buf1676 = extern_kernels.convolution(buf1675, primals_3018, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1676, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1677 = buf1676; del buf1676  # reuse
        buf1678 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1507, input_1508, input_1509], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1677, primals_3019, primals_3020, primals_3021, primals_3022, primals_3023, buf1678, 512, grid=grid(512), stream=stream0)
        del primals_3019
        del primals_3023
        # Topologically Sorted Source Nodes: [input_1510], Original ATen: [aten.convolution]
        buf1679 = extern_kernels.convolution(buf1678, buf167, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1679, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1680 = buf1679; del buf1679  # reuse
        buf1681 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1510, input_1511, input_1512], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1680, primals_3025, primals_3026, primals_3027, primals_3028, primals_3029, buf1681, 512, grid=grid(512), stream=stream0)
        del primals_3025
        del primals_3029
        # Topologically Sorted Source Nodes: [input_1513], Original ATen: [aten.convolution]
        buf1682 = extern_kernels.convolution(buf1681, primals_3030, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1682, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1683 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1513, low3_46, input_1514, input_1515], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1682, primals_3031, buf1674, primals_3032, primals_3033, primals_3034, primals_3035, buf1683, 1024, grid=grid(1024), stream=stream0)
        del primals_3035
        # Topologically Sorted Source Nodes: [input_1516], Original ATen: [aten.convolution]
        buf1684 = extern_kernels.convolution(buf1683, primals_3036, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1684, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1685 = buf1684; del buf1684  # reuse
        buf1686 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1516, input_1517, input_1518], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1685, primals_3037, primals_3038, primals_3039, primals_3040, primals_3041, buf1686, 512, grid=grid(512), stream=stream0)
        del primals_3037
        del primals_3041
        # Topologically Sorted Source Nodes: [input_1519], Original ATen: [aten.convolution]
        buf1687 = extern_kernels.convolution(buf1686, buf168, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1687, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1688 = buf1687; del buf1687  # reuse
        buf1689 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1519, input_1520, input_1521], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1688, primals_3043, primals_3044, primals_3045, primals_3046, primals_3047, buf1689, 512, grid=grid(512), stream=stream0)
        del primals_3043
        del primals_3047
        # Topologically Sorted Source Nodes: [input_1522], Original ATen: [aten.convolution]
        buf1690 = extern_kernels.convolution(buf1689, primals_3048, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1690, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1691 = buf1278; del buf1278  # reuse
        buf1692 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1081, up1_34, input_1090, up1_35, input_1513, low3_46, input_1522, low3_47, up2_11, hg_2, input_1523, input_1524], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_48.run(buf1691, primals_2185, buf1270, primals_2167, buf1262, buf712, buf1690, primals_3049, buf1682, primals_3031, buf1674, primals_3050, primals_3051, primals_3052, primals_3053, buf1692, 4096, grid=grid(4096), stream=stream0)
        del primals_2185
        del primals_3049
        del primals_3053
        # Topologically Sorted Source Nodes: [input_1525], Original ATen: [aten.convolution]
        buf1693 = extern_kernels.convolution(buf1692, primals_3054, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1693, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1694 = buf1693; del buf1693  # reuse
        buf1695 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1525, input_1526, input_1527], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1694, primals_3055, primals_3056, primals_3057, primals_3058, primals_3059, buf1695, 2048, grid=grid(2048), stream=stream0)
        del primals_3055
        del primals_3059
        # Topologically Sorted Source Nodes: [input_1528], Original ATen: [aten.convolution]
        buf1696 = extern_kernels.convolution(buf1695, buf169, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1696, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1697 = buf1696; del buf1696  # reuse
        buf1698 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1528, input_1529, input_1530], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1697, primals_3061, primals_3062, primals_3063, primals_3064, primals_3065, buf1698, 2048, grid=grid(2048), stream=stream0)
        del primals_3061
        del primals_3065
        # Topologically Sorted Source Nodes: [input_1531], Original ATen: [aten.convolution]
        buf1699 = extern_kernels.convolution(buf1698, primals_3066, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1699, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1700 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1531, ll_8, input_1532, input_1533], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1699, primals_3067, buf1691, primals_3068, primals_3069, primals_3070, primals_3071, buf1700, 4096, grid=grid(4096), stream=stream0)
        del primals_3071
        # Topologically Sorted Source Nodes: [input_1534], Original ATen: [aten.convolution]
        buf1701 = extern_kernels.convolution(buf1700, primals_3072, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1701, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1702 = buf1701; del buf1701  # reuse
        buf1703 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1534, input_1535, input_1536], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1702, primals_3073, primals_3074, primals_3075, primals_3076, primals_3077, buf1703, 2048, grid=grid(2048), stream=stream0)
        del primals_3073
        del primals_3077
        # Topologically Sorted Source Nodes: [input_1537], Original ATen: [aten.convolution]
        buf1704 = extern_kernels.convolution(buf1703, buf170, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1704, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1705 = buf1704; del buf1704  # reuse
        buf1706 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1537, input_1538, input_1539], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1705, primals_3079, primals_3080, primals_3081, primals_3082, primals_3083, buf1706, 2048, grid=grid(2048), stream=stream0)
        del primals_3079
        del primals_3083
        # Topologically Sorted Source Nodes: [input_1540], Original ATen: [aten.convolution]
        buf1707 = extern_kernels.convolution(buf1706, primals_3084, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1707, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1708 = buf1707; del buf1707  # reuse
        buf1709 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1531, ll_8, input_1540, ll_9, input_1541, input_1542], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf1708, primals_3085, buf1699, primals_3067, buf1691, primals_3086, primals_3087, primals_3088, primals_3089, buf1709, 4096, grid=grid(4096), stream=stream0)
        del primals_3085
        del primals_3089
        # Topologically Sorted Source Nodes: [input_1543], Original ATen: [aten.convolution]
        buf1710 = extern_kernels.convolution(buf1709, primals_3090, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1710, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1711 = buf1710; del buf1710  # reuse
        buf1712 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1543, input_1544, input_1545], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1711, primals_3091, primals_3092, primals_3093, primals_3094, primals_3095, buf1712, 2048, grid=grid(2048), stream=stream0)
        del primals_3091
        del primals_3095
        # Topologically Sorted Source Nodes: [input_1546], Original ATen: [aten.convolution]
        buf1713 = extern_kernels.convolution(buf1712, buf171, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1713, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1714 = buf1713; del buf1713  # reuse
        buf1715 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1546, input_1547, input_1548], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1714, primals_3097, primals_3098, primals_3099, primals_3100, primals_3101, buf1715, 2048, grid=grid(2048), stream=stream0)
        del primals_3097
        del primals_3101
        # Topologically Sorted Source Nodes: [input_1549], Original ATen: [aten.convolution]
        buf1716 = extern_kernels.convolution(buf1715, primals_3102, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1716, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1717 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1549, ll_10, input_1550, input_1551], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1716, primals_3103, buf1708, primals_3104, primals_3105, primals_3106, primals_3107, buf1717, 4096, grid=grid(4096), stream=stream0)
        del primals_3107
        # Topologically Sorted Source Nodes: [input_1552], Original ATen: [aten.convolution]
        buf1718 = extern_kernels.convolution(buf1717, primals_3108, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1718, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1719 = buf1718; del buf1718  # reuse
        buf1720 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1552, input_1553, input_1554], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1719, primals_3109, primals_3110, primals_3111, primals_3112, primals_3113, buf1720, 2048, grid=grid(2048), stream=stream0)
        del primals_3109
        del primals_3113
        # Topologically Sorted Source Nodes: [input_1555], Original ATen: [aten.convolution]
        buf1721 = extern_kernels.convolution(buf1720, buf172, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1721, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1722 = buf1721; del buf1721  # reuse
        buf1723 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1555, input_1556, input_1557], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1722, primals_3115, primals_3116, primals_3117, primals_3118, primals_3119, buf1723, 2048, grid=grid(2048), stream=stream0)
        del primals_3115
        del primals_3119
        # Topologically Sorted Source Nodes: [input_1558], Original ATen: [aten.convolution]
        buf1724 = extern_kernels.convolution(buf1723, primals_3120, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1724, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1725 = buf1724; del buf1724  # reuse
        # Topologically Sorted Source Nodes: [input_1549, ll_10, input_1558, ll_11], Original ATen: [aten.convolution, aten.add]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_49.run(buf1725, primals_3121, buf1716, primals_3103, buf1708, 4096, grid=grid(4096), stream=stream0)
        del primals_3121
        # Topologically Sorted Source Nodes: [input_1559], Original ATen: [aten.convolution]
        buf1726 = extern_kernels.convolution(buf1725, primals_3122, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1726, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1727 = buf1726; del buf1726  # reuse
        buf1728 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1559, input_1560, input_1561], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50.run(buf1727, primals_3123, primals_3124, primals_3125, primals_3126, primals_3127, buf1728, 4096, grid=grid(4096), stream=stream0)
        del primals_3123
        del primals_3127
        # Topologically Sorted Source Nodes: [tmpOut_2], Original ATen: [aten.convolution]
        buf1729 = extern_kernels.convolution(buf1728, primals_3128, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1729, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1730 = empty_strided_cuda((4, 4, 16, 16), (1024, 256, 16, 1), torch.float32)
        buf1732 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [tmpOut_2, tmpOut__2], Original ATen: [aten.convolution]
        stream0 = get_raw_stream(0)
        triton_poi_fused_convolution_51.run(buf1729, primals_3129, buf1730, buf1732, 16, 256, grid=grid(16, 256), stream=stream0)
        del primals_3129
        # Topologically Sorted Source Nodes: [ll__2], Original ATen: [aten.convolution]
        buf1731 = extern_kernels.convolution(buf1728, primals_3130, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1731, (4, 4, 16, 16), (1024, 1, 64, 4))
        # Topologically Sorted Source Nodes: [tmpOut__2], Original ATen: [aten.convolution]
        buf1733 = extern_kernels.convolution(buf1732, primals_3132, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1733, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1734 = buf1731; del buf1731  # reuse
        buf1735 = buf1732; del buf1732  # reuse
        # Topologically Sorted Source Nodes: [ll__2, tmpOut__2, add_187, x_2, input_1562, input_1563], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_52.run(buf1734, buf1245, primals_3131, buf1733, primals_3133, primals_3134, primals_3135, primals_3136, primals_3137, buf1735, 4096, grid=grid(4096), stream=stream0)
        del primals_3131
        del primals_3133
        del primals_3137
        # Topologically Sorted Source Nodes: [input_1564], Original ATen: [aten.convolution]
        buf1736 = extern_kernels.convolution(buf1735, primals_3138, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1736, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1737 = buf1736; del buf1736  # reuse
        buf1738 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1564, input_1565, input_1566], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1737, primals_3139, primals_3140, primals_3141, primals_3142, primals_3143, buf1738, 2048, grid=grid(2048), stream=stream0)
        del primals_3139
        del primals_3143
        # Topologically Sorted Source Nodes: [input_1567], Original ATen: [aten.convolution]
        buf1739 = extern_kernels.convolution(buf1738, buf173, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1739, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1740 = buf1739; del buf1739  # reuse
        buf1741 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1567, input_1568, input_1569], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1740, primals_3145, primals_3146, primals_3147, primals_3148, primals_3149, buf1741, 2048, grid=grid(2048), stream=stream0)
        del primals_3145
        del primals_3149
        # Topologically Sorted Source Nodes: [input_1570], Original ATen: [aten.convolution]
        buf1742 = extern_kernels.convolution(buf1741, primals_3150, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1742, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1743 = buf1733; del buf1733  # reuse
        # Topologically Sorted Source Nodes: [input_1570, up1_48, input_1571, input_1572], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1742, primals_3151, buf1734, primals_3152, primals_3153, primals_3154, primals_3155, buf1743, 4096, grid=grid(4096), stream=stream0)
        del primals_3155
        # Topologically Sorted Source Nodes: [input_1573], Original ATen: [aten.convolution]
        buf1744 = extern_kernels.convolution(buf1743, primals_3156, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1744, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1745 = buf1744; del buf1744  # reuse
        buf1746 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1573, input_1574, input_1575], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1745, primals_3157, primals_3158, primals_3159, primals_3160, primals_3161, buf1746, 2048, grid=grid(2048), stream=stream0)
        del primals_3157
        del primals_3161
        # Topologically Sorted Source Nodes: [input_1576], Original ATen: [aten.convolution]
        buf1747 = extern_kernels.convolution(buf1746, buf174, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1747, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1748 = buf1747; del buf1747  # reuse
        buf1749 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1576, input_1577, input_1578], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1748, primals_3163, primals_3164, primals_3165, primals_3166, primals_3167, buf1749, 2048, grid=grid(2048), stream=stream0)
        del primals_3163
        del primals_3167
        # Topologically Sorted Source Nodes: [input_1579], Original ATen: [aten.convolution]
        buf1750 = extern_kernels.convolution(buf1749, primals_3168, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1750, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1751 = buf1750; del buf1750  # reuse
        buf1752 = buf1729; del buf1729  # reuse
        # Topologically Sorted Source Nodes: [input_1570, up1_48, input_1579, up1_49, input_1580, input_1581], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_13.run(buf1751, primals_3169, buf1742, primals_3151, buf1734, primals_3170, primals_3171, primals_3172, primals_3173, buf1752, 4096, grid=grid(4096), stream=stream0)
        del primals_3169
        del primals_3173
        # Topologically Sorted Source Nodes: [input_1582], Original ATen: [aten.convolution]
        buf1753 = extern_kernels.convolution(buf1752, primals_3174, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1753, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1754 = buf1753; del buf1753  # reuse
        buf1755 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1582, input_1583, input_1584], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1754, primals_3175, primals_3176, primals_3177, primals_3178, primals_3179, buf1755, 2048, grid=grid(2048), stream=stream0)
        del primals_3175
        del primals_3179
        # Topologically Sorted Source Nodes: [input_1585], Original ATen: [aten.convolution]
        buf1756 = extern_kernels.convolution(buf1755, buf175, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1756, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1757 = buf1756; del buf1756  # reuse
        buf1758 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1585, input_1586, input_1587], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1757, primals_3181, primals_3182, primals_3183, primals_3184, primals_3185, buf1758, 2048, grid=grid(2048), stream=stream0)
        del primals_3181
        del primals_3185
        # Topologically Sorted Source Nodes: [input_1588], Original ATen: [aten.convolution]
        buf1759 = extern_kernels.convolution(buf1758, primals_3186, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1759, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1760 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1588, up1_50, input_1589, input_1590], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_12.run(buf1759, primals_3187, buf1751, primals_3188, primals_3189, primals_3190, primals_3191, buf1760, 4096, grid=grid(4096), stream=stream0)
        del primals_3191
        # Topologically Sorted Source Nodes: [input_1591], Original ATen: [aten.convolution]
        buf1761 = extern_kernels.convolution(buf1760, primals_3192, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1761, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1762 = buf1761; del buf1761  # reuse
        buf1763 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1591, input_1592, input_1593], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1762, primals_3193, primals_3194, primals_3195, primals_3196, primals_3197, buf1763, 2048, grid=grid(2048), stream=stream0)
        del primals_3193
        del primals_3197
        # Topologically Sorted Source Nodes: [input_1594], Original ATen: [aten.convolution]
        buf1764 = extern_kernels.convolution(buf1763, buf176, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1764, (4, 2, 16, 16), (512, 1, 32, 2))
        buf1765 = buf1764; del buf1764  # reuse
        buf1766 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1594, input_1595, input_1596], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf1765, primals_3199, primals_3200, primals_3201, primals_3202, primals_3203, buf1766, 2048, grid=grid(2048), stream=stream0)
        del primals_3199
        del primals_3203
        # Topologically Sorted Source Nodes: [input_1597], Original ATen: [aten.convolution]
        buf1767 = extern_kernels.convolution(buf1766, primals_3204, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1767, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf1768 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.int8)
        buf1769 = buf1690; del buf1690  # reuse
        # Topologically Sorted Source Nodes: [low1_60, input_1598, input_1599], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_14.run(buf1734, primals_3206, primals_3207, primals_3208, primals_3209, buf1768, buf1769, 1024, grid=grid(1024), stream=stream0)
        del primals_3209
        # Topologically Sorted Source Nodes: [input_1600], Original ATen: [aten.convolution]
        buf1770 = extern_kernels.convolution(buf1769, primals_3210, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1770, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1771 = buf1770; del buf1770  # reuse
        buf1772 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1600, input_1601, input_1602], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1771, primals_3211, primals_3212, primals_3213, primals_3214, primals_3215, buf1772, 512, grid=grid(512), stream=stream0)
        del primals_3211
        del primals_3215
        # Topologically Sorted Source Nodes: [input_1603], Original ATen: [aten.convolution]
        buf1773 = extern_kernels.convolution(buf1772, buf177, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1773, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1774 = buf1773; del buf1773  # reuse
        buf1775 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1603, input_1604, input_1605], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1774, primals_3217, primals_3218, primals_3219, primals_3220, primals_3221, buf1775, 512, grid=grid(512), stream=stream0)
        del primals_3217
        del primals_3221
        # Topologically Sorted Source Nodes: [input_1606], Original ATen: [aten.convolution]
        buf1776 = extern_kernels.convolution(buf1775, primals_3222, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1776, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1777 = buf1776; del buf1776  # reuse
        buf1778 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_60, input_1606, low1_61, input_1607, input_1608], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_16.run(buf1777, primals_3223, buf1734, primals_3224, primals_3225, primals_3226, primals_3227, buf1778, 1024, grid=grid(1024), stream=stream0)
        del primals_3223
        del primals_3227
        # Topologically Sorted Source Nodes: [input_1609], Original ATen: [aten.convolution]
        buf1779 = extern_kernels.convolution(buf1778, primals_3228, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1779, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1780 = buf1779; del buf1779  # reuse
        buf1781 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1609, input_1610, input_1611], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1780, primals_3229, primals_3230, primals_3231, primals_3232, primals_3233, buf1781, 512, grid=grid(512), stream=stream0)
        del primals_3229
        del primals_3233
        # Topologically Sorted Source Nodes: [input_1612], Original ATen: [aten.convolution]
        buf1782 = extern_kernels.convolution(buf1781, buf178, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1782, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1783 = buf1782; del buf1782  # reuse
        buf1784 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1612, input_1613, input_1614], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1783, primals_3235, primals_3236, primals_3237, primals_3238, primals_3239, buf1784, 512, grid=grid(512), stream=stream0)
        del primals_3235
        del primals_3239
        # Topologically Sorted Source Nodes: [input_1615], Original ATen: [aten.convolution]
        buf1785 = extern_kernels.convolution(buf1784, primals_3240, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1785, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1786 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1615, low1_62, input_1616, input_1617], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1785, primals_3241, buf1777, primals_3242, primals_3243, primals_3244, primals_3245, buf1786, 1024, grid=grid(1024), stream=stream0)
        del primals_3245
        # Topologically Sorted Source Nodes: [input_1618], Original ATen: [aten.convolution]
        buf1787 = extern_kernels.convolution(buf1786, primals_3246, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1787, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1788 = buf1787; del buf1787  # reuse
        buf1789 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1618, input_1619, input_1620], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1788, primals_3247, primals_3248, primals_3249, primals_3250, primals_3251, buf1789, 512, grid=grid(512), stream=stream0)
        del primals_3247
        del primals_3251
        # Topologically Sorted Source Nodes: [input_1621], Original ATen: [aten.convolution]
        buf1790 = extern_kernels.convolution(buf1789, buf179, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1790, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1791 = buf1790; del buf1790  # reuse
        buf1792 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1621, input_1622, input_1623], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1791, primals_3253, primals_3254, primals_3255, primals_3256, primals_3257, buf1792, 512, grid=grid(512), stream=stream0)
        del primals_3253
        del primals_3257
        # Topologically Sorted Source Nodes: [input_1624], Original ATen: [aten.convolution]
        buf1793 = extern_kernels.convolution(buf1792, primals_3258, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1793, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1794 = buf1793; del buf1793  # reuse
        buf1795 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2265 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1615, low1_62, input_1624, low1_63, input_1625, input_1626], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_18.run(buf1794, primals_3259, buf1785, primals_3241, buf1777, primals_3260, primals_3261, primals_3262, primals_3263, buf1795, buf2265, 1024, grid=grid(1024), stream=stream0)
        del primals_3259
        del primals_3260
        del primals_3263
        # Topologically Sorted Source Nodes: [input_1627], Original ATen: [aten.convolution]
        buf1796 = extern_kernels.convolution(buf1795, primals_3264, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1796, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1797 = buf1796; del buf1796  # reuse
        buf1798 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1627, input_1628, input_1629], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1797, primals_3265, primals_3266, primals_3267, primals_3268, primals_3269, buf1798, 512, grid=grid(512), stream=stream0)
        del primals_3265
        del primals_3269
        # Topologically Sorted Source Nodes: [input_1630], Original ATen: [aten.convolution]
        buf1799 = extern_kernels.convolution(buf1798, buf180, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1799, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1800 = buf1799; del buf1799  # reuse
        buf1801 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1630, input_1631, input_1632], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1800, primals_3271, primals_3272, primals_3273, primals_3274, primals_3275, buf1801, 512, grid=grid(512), stream=stream0)
        del primals_3271
        del primals_3275
        # Topologically Sorted Source Nodes: [input_1633], Original ATen: [aten.convolution]
        buf1802 = extern_kernels.convolution(buf1801, primals_3276, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1802, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1803 = buf1802; del buf1802  # reuse
        buf1804 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1633, low1_64, input_1634, input_1635], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_19.run(buf1803, primals_3277, buf1794, primals_3278, primals_3279, primals_3280, primals_3281, buf1804, 1024, grid=grid(1024), stream=stream0)
        del primals_3277
        del primals_3281
        # Topologically Sorted Source Nodes: [input_1636], Original ATen: [aten.convolution]
        buf1805 = extern_kernels.convolution(buf1804, primals_3282, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1805, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1806 = buf1805; del buf1805  # reuse
        buf1807 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1636, input_1637, input_1638], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1806, primals_3283, primals_3284, primals_3285, primals_3286, primals_3287, buf1807, 512, grid=grid(512), stream=stream0)
        del primals_3283
        del primals_3287
        # Topologically Sorted Source Nodes: [input_1639], Original ATen: [aten.convolution]
        buf1808 = extern_kernels.convolution(buf1807, buf181, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1808, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1809 = buf1808; del buf1808  # reuse
        buf1810 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1639, input_1640, input_1641], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1809, primals_3289, primals_3290, primals_3291, primals_3292, primals_3293, buf1810, 512, grid=grid(512), stream=stream0)
        del primals_3289
        del primals_3293
        # Topologically Sorted Source Nodes: [input_1642], Original ATen: [aten.convolution]
        buf1811 = extern_kernels.convolution(buf1810, primals_3294, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1811, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1812 = buf1794; del buf1794  # reuse
        # Topologically Sorted Source Nodes: [input_1642, up1_52, input_1643, input_1644], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1811, primals_3295, buf1803, primals_3296, primals_3297, primals_3298, primals_3299, buf1812, 1024, grid=grid(1024), stream=stream0)
        del primals_3299
        # Topologically Sorted Source Nodes: [input_1645], Original ATen: [aten.convolution]
        buf1813 = extern_kernels.convolution(buf1812, primals_3300, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1813, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1814 = buf1813; del buf1813  # reuse
        buf1815 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1645, input_1646, input_1647], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1814, primals_3301, primals_3302, primals_3303, primals_3304, primals_3305, buf1815, 512, grid=grid(512), stream=stream0)
        del primals_3301
        del primals_3305
        # Topologically Sorted Source Nodes: [input_1648], Original ATen: [aten.convolution]
        buf1816 = extern_kernels.convolution(buf1815, buf182, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1816, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1817 = buf1816; del buf1816  # reuse
        buf1818 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1648, input_1649, input_1650], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1817, primals_3307, primals_3308, primals_3309, primals_3310, primals_3311, buf1818, 512, grid=grid(512), stream=stream0)
        del primals_3307
        del primals_3311
        # Topologically Sorted Source Nodes: [input_1651], Original ATen: [aten.convolution]
        buf1819 = extern_kernels.convolution(buf1818, primals_3312, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1819, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1820 = buf1819; del buf1819  # reuse
        buf1821 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1642, up1_52, input_1651, up1_53, input_1652, input_1653], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_20.run(buf1820, primals_3313, buf1811, primals_3295, buf1803, primals_3314, primals_3315, primals_3316, primals_3317, buf1821, 1024, grid=grid(1024), stream=stream0)
        del primals_3313
        del primals_3317
        # Topologically Sorted Source Nodes: [input_1654], Original ATen: [aten.convolution]
        buf1822 = extern_kernels.convolution(buf1821, primals_3318, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1822, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1823 = buf1822; del buf1822  # reuse
        buf1824 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1654, input_1655, input_1656], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1823, primals_3319, primals_3320, primals_3321, primals_3322, primals_3323, buf1824, 512, grid=grid(512), stream=stream0)
        del primals_3319
        del primals_3323
        # Topologically Sorted Source Nodes: [input_1657], Original ATen: [aten.convolution]
        buf1825 = extern_kernels.convolution(buf1824, buf183, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1825, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1826 = buf1825; del buf1825  # reuse
        buf1827 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1657, input_1658, input_1659], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1826, primals_3325, primals_3326, primals_3327, primals_3328, primals_3329, buf1827, 512, grid=grid(512), stream=stream0)
        del primals_3325
        del primals_3329
        # Topologically Sorted Source Nodes: [input_1660], Original ATen: [aten.convolution]
        buf1828 = extern_kernels.convolution(buf1827, primals_3330, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1828, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1829 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1660, up1_54, input_1661, input_1662], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf1828, primals_3331, buf1820, primals_3332, primals_3333, primals_3334, primals_3335, buf1829, 1024, grid=grid(1024), stream=stream0)
        del primals_3335
        # Topologically Sorted Source Nodes: [input_1663], Original ATen: [aten.convolution]
        buf1830 = extern_kernels.convolution(buf1829, primals_3336, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1830, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1831 = buf1830; del buf1830  # reuse
        buf1832 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1663, input_1664, input_1665], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1831, primals_3337, primals_3338, primals_3339, primals_3340, primals_3341, buf1832, 512, grid=grid(512), stream=stream0)
        del primals_3337
        del primals_3341
        # Topologically Sorted Source Nodes: [input_1666], Original ATen: [aten.convolution]
        buf1833 = extern_kernels.convolution(buf1832, buf184, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1833, (4, 2, 8, 8), (128, 1, 16, 2))
        buf1834 = buf1833; del buf1833  # reuse
        buf1835 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1666, input_1667, input_1668], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf1834, primals_3343, primals_3344, primals_3345, primals_3346, primals_3347, buf1835, 512, grid=grid(512), stream=stream0)
        del primals_3343
        del primals_3347
        # Topologically Sorted Source Nodes: [input_1669], Original ATen: [aten.convolution]
        buf1836 = extern_kernels.convolution(buf1835, primals_3348, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1836, (4, 4, 8, 8), (256, 1, 32, 4))
        buf1837 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.int8)
        buf1838 = buf1656; del buf1656  # reuse
        # Topologically Sorted Source Nodes: [low1_65, input_1670, input_1671], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_21.run(buf1803, primals_3350, primals_3351, primals_3352, primals_3353, buf1837, buf1838, 256, grid=grid(256), stream=stream0)
        del primals_3353
        # Topologically Sorted Source Nodes: [input_1672], Original ATen: [aten.convolution]
        buf1839 = extern_kernels.convolution(buf1838, primals_3354, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1839, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1840 = buf1839; del buf1839  # reuse
        buf1841 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1672, input_1673, input_1674], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1840, primals_3355, primals_3356, primals_3357, primals_3358, primals_3359, buf1841, 128, grid=grid(128), stream=stream0)
        del primals_3355
        del primals_3359
        # Topologically Sorted Source Nodes: [input_1675], Original ATen: [aten.convolution]
        buf1842 = extern_kernels.convolution(buf1841, buf185, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1842, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1843 = buf1842; del buf1842  # reuse
        buf1844 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1675, input_1676, input_1677], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1843, primals_3361, primals_3362, primals_3363, primals_3364, primals_3365, buf1844, 128, grid=grid(128), stream=stream0)
        del primals_3361
        del primals_3365
        # Topologically Sorted Source Nodes: [input_1678], Original ATen: [aten.convolution]
        buf1845 = extern_kernels.convolution(buf1844, primals_3366, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1845, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1846 = buf1845; del buf1845  # reuse
        buf1847 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_65, input_1678, low1_66, input_1679, input_1680], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_23.run(buf1846, primals_3367, buf1803, primals_3368, primals_3369, primals_3370, primals_3371, buf1847, 256, grid=grid(256), stream=stream0)
        del primals_3367
        del primals_3371
        # Topologically Sorted Source Nodes: [input_1681], Original ATen: [aten.convolution]
        buf1848 = extern_kernels.convolution(buf1847, primals_3372, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1848, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1849 = buf1848; del buf1848  # reuse
        buf1850 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1681, input_1682, input_1683], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1849, primals_3373, primals_3374, primals_3375, primals_3376, primals_3377, buf1850, 128, grid=grid(128), stream=stream0)
        del primals_3373
        del primals_3377
        # Topologically Sorted Source Nodes: [input_1684], Original ATen: [aten.convolution]
        buf1851 = extern_kernels.convolution(buf1850, buf186, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1851, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1852 = buf1851; del buf1851  # reuse
        buf1853 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1684, input_1685, input_1686], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1852, primals_3379, primals_3380, primals_3381, primals_3382, primals_3383, buf1853, 128, grid=grid(128), stream=stream0)
        del primals_3379
        del primals_3383
        # Topologically Sorted Source Nodes: [input_1687], Original ATen: [aten.convolution]
        buf1854 = extern_kernels.convolution(buf1853, primals_3384, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1854, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1855 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1687, low1_67, input_1688, input_1689], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1854, primals_3385, buf1846, primals_3386, primals_3387, primals_3388, primals_3389, buf1855, 256, grid=grid(256), stream=stream0)
        del primals_3389
        # Topologically Sorted Source Nodes: [input_1690], Original ATen: [aten.convolution]
        buf1856 = extern_kernels.convolution(buf1855, primals_3390, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1856, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1857 = buf1856; del buf1856  # reuse
        buf1858 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1690, input_1691, input_1692], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1857, primals_3391, primals_3392, primals_3393, primals_3394, primals_3395, buf1858, 128, grid=grid(128), stream=stream0)
        del primals_3391
        del primals_3395
        # Topologically Sorted Source Nodes: [input_1693], Original ATen: [aten.convolution]
        buf1859 = extern_kernels.convolution(buf1858, buf187, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1859, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1860 = buf1859; del buf1859  # reuse
        buf1861 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1693, input_1694, input_1695], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1860, primals_3397, primals_3398, primals_3399, primals_3400, primals_3401, buf1861, 128, grid=grid(128), stream=stream0)
        del primals_3397
        del primals_3401
        # Topologically Sorted Source Nodes: [input_1696], Original ATen: [aten.convolution]
        buf1862 = extern_kernels.convolution(buf1861, primals_3402, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1862, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1863 = buf1862; del buf1862  # reuse
        buf1864 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        buf2258 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1687, low1_67, input_1696, low1_68, input_1697, input_1698], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_25.run(buf1863, primals_3403, buf1854, primals_3385, buf1846, primals_3404, primals_3405, primals_3406, primals_3407, buf1864, buf2258, 256, grid=grid(256), stream=stream0)
        del primals_3403
        del primals_3404
        del primals_3407
        # Topologically Sorted Source Nodes: [input_1699], Original ATen: [aten.convolution]
        buf1865 = extern_kernels.convolution(buf1864, primals_3408, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1865, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1866 = buf1865; del buf1865  # reuse
        buf1867 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1699, input_1700, input_1701], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1866, primals_3409, primals_3410, primals_3411, primals_3412, primals_3413, buf1867, 128, grid=grid(128), stream=stream0)
        del primals_3409
        del primals_3413
        # Topologically Sorted Source Nodes: [input_1702], Original ATen: [aten.convolution]
        buf1868 = extern_kernels.convolution(buf1867, buf188, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1868, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1869 = buf1868; del buf1868  # reuse
        buf1870 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1702, input_1703, input_1704], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1869, primals_3415, primals_3416, primals_3417, primals_3418, primals_3419, buf1870, 128, grid=grid(128), stream=stream0)
        del primals_3415
        del primals_3419
        # Topologically Sorted Source Nodes: [input_1705], Original ATen: [aten.convolution]
        buf1871 = extern_kernels.convolution(buf1870, primals_3420, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1871, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1872 = buf1871; del buf1871  # reuse
        buf1873 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1705, low1_69, input_1706, input_1707], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_26.run(buf1872, primals_3421, buf1863, primals_3422, primals_3423, primals_3424, primals_3425, buf1873, 256, grid=grid(256), stream=stream0)
        del primals_3421
        del primals_3425
        # Topologically Sorted Source Nodes: [input_1708], Original ATen: [aten.convolution]
        buf1874 = extern_kernels.convolution(buf1873, primals_3426, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1874, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1875 = buf1874; del buf1874  # reuse
        buf1876 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1708, input_1709, input_1710], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1875, primals_3427, primals_3428, primals_3429, primals_3430, primals_3431, buf1876, 128, grid=grid(128), stream=stream0)
        del primals_3427
        del primals_3431
        # Topologically Sorted Source Nodes: [input_1711], Original ATen: [aten.convolution]
        buf1877 = extern_kernels.convolution(buf1876, buf189, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1877, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1878 = buf1877; del buf1877  # reuse
        buf1879 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1711, input_1712, input_1713], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1878, primals_3433, primals_3434, primals_3435, primals_3436, primals_3437, buf1879, 128, grid=grid(128), stream=stream0)
        del primals_3433
        del primals_3437
        # Topologically Sorted Source Nodes: [input_1714], Original ATen: [aten.convolution]
        buf1880 = extern_kernels.convolution(buf1879, primals_3438, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1880, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1881 = buf1863; del buf1863  # reuse
        # Topologically Sorted Source Nodes: [input_1714, up1_56, input_1715, input_1716], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1880, primals_3439, buf1872, primals_3440, primals_3441, primals_3442, primals_3443, buf1881, 256, grid=grid(256), stream=stream0)
        del primals_3443
        # Topologically Sorted Source Nodes: [input_1717], Original ATen: [aten.convolution]
        buf1882 = extern_kernels.convolution(buf1881, primals_3444, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1882, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1883 = buf1882; del buf1882  # reuse
        buf1884 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1717, input_1718, input_1719], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1883, primals_3445, primals_3446, primals_3447, primals_3448, primals_3449, buf1884, 128, grid=grid(128), stream=stream0)
        del primals_3445
        del primals_3449
        # Topologically Sorted Source Nodes: [input_1720], Original ATen: [aten.convolution]
        buf1885 = extern_kernels.convolution(buf1884, buf190, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1885, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1886 = buf1885; del buf1885  # reuse
        buf1887 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1720, input_1721, input_1722], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1886, primals_3451, primals_3452, primals_3453, primals_3454, primals_3455, buf1887, 128, grid=grid(128), stream=stream0)
        del primals_3451
        del primals_3455
        # Topologically Sorted Source Nodes: [input_1723], Original ATen: [aten.convolution]
        buf1888 = extern_kernels.convolution(buf1887, primals_3456, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1888, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1889 = buf1888; del buf1888  # reuse
        buf1890 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1714, up1_56, input_1723, up1_57, input_1724, input_1725], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf1889, primals_3457, buf1880, primals_3439, buf1872, primals_3458, primals_3459, primals_3460, primals_3461, buf1890, 256, grid=grid(256), stream=stream0)
        del primals_3457
        del primals_3461
        # Topologically Sorted Source Nodes: [input_1726], Original ATen: [aten.convolution]
        buf1891 = extern_kernels.convolution(buf1890, primals_3462, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1891, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1892 = buf1891; del buf1891  # reuse
        buf1893 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1726, input_1727, input_1728], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1892, primals_3463, primals_3464, primals_3465, primals_3466, primals_3467, buf1893, 128, grid=grid(128), stream=stream0)
        del primals_3463
        del primals_3467
        # Topologically Sorted Source Nodes: [input_1729], Original ATen: [aten.convolution]
        buf1894 = extern_kernels.convolution(buf1893, buf191, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1894, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1895 = buf1894; del buf1894  # reuse
        buf1896 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1729, input_1730, input_1731], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1895, primals_3469, primals_3470, primals_3471, primals_3472, primals_3473, buf1896, 128, grid=grid(128), stream=stream0)
        del primals_3469
        del primals_3473
        # Topologically Sorted Source Nodes: [input_1732], Original ATen: [aten.convolution]
        buf1897 = extern_kernels.convolution(buf1896, primals_3474, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1897, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1898 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1732, up1_58, input_1733, input_1734], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf1897, primals_3475, buf1889, primals_3476, primals_3477, primals_3478, primals_3479, buf1898, 256, grid=grid(256), stream=stream0)
        del primals_3479
        # Topologically Sorted Source Nodes: [input_1735], Original ATen: [aten.convolution]
        buf1899 = extern_kernels.convolution(buf1898, primals_3480, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1899, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1900 = buf1899; del buf1899  # reuse
        buf1901 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1735, input_1736, input_1737], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1900, primals_3481, primals_3482, primals_3483, primals_3484, primals_3485, buf1901, 128, grid=grid(128), stream=stream0)
        del primals_3481
        del primals_3485
        # Topologically Sorted Source Nodes: [input_1738], Original ATen: [aten.convolution]
        buf1902 = extern_kernels.convolution(buf1901, buf192, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1902, (4, 2, 4, 4), (32, 1, 8, 2))
        buf1903 = buf1902; del buf1902  # reuse
        buf1904 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1738, input_1739, input_1740], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf1903, primals_3487, primals_3488, primals_3489, primals_3490, primals_3491, buf1904, 128, grid=grid(128), stream=stream0)
        del primals_3487
        del primals_3491
        # Topologically Sorted Source Nodes: [input_1741], Original ATen: [aten.convolution]
        buf1905 = extern_kernels.convolution(buf1904, primals_3492, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1905, (4, 4, 4, 4), (64, 1, 16, 4))
        buf1906 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.int8)
        buf1907 = buf1622; del buf1622  # reuse
        # Topologically Sorted Source Nodes: [low1_70, input_1742, input_1743], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_28.run(buf1872, primals_3494, primals_3495, primals_3496, primals_3497, buf1906, buf1907, 64, grid=grid(64), stream=stream0)
        del primals_3497
        # Topologically Sorted Source Nodes: [input_1744], Original ATen: [aten.convolution]
        buf1908 = extern_kernels.convolution(buf1907, primals_3498, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1908, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1909 = buf1908; del buf1908  # reuse
        buf1910 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1744, input_1745, input_1746], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1909, primals_3499, primals_3500, primals_3501, primals_3502, primals_3503, buf1910, 32, grid=grid(32), stream=stream0)
        del primals_3499
        del primals_3503
        # Topologically Sorted Source Nodes: [input_1747], Original ATen: [aten.convolution]
        buf1911 = extern_kernels.convolution(buf1910, buf193, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1911, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1912 = buf1911; del buf1911  # reuse
        buf1913 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1747, input_1748, input_1749], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1912, primals_3505, primals_3506, primals_3507, primals_3508, primals_3509, buf1913, 32, grid=grid(32), stream=stream0)
        del primals_3505
        del primals_3509
        # Topologically Sorted Source Nodes: [input_1750], Original ATen: [aten.convolution]
        buf1914 = extern_kernels.convolution(buf1913, primals_3510, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1914, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1915 = buf1914; del buf1914  # reuse
        buf1916 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [low1_70, input_1750, low1_71, input_1751, input_1752], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_30.run(buf1915, primals_3511, buf1872, primals_3512, primals_3513, primals_3514, primals_3515, buf1916, 64, grid=grid(64), stream=stream0)
        del primals_3511
        del primals_3515
        # Topologically Sorted Source Nodes: [input_1753], Original ATen: [aten.convolution]
        buf1917 = extern_kernels.convolution(buf1916, primals_3516, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1917, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1918 = buf1917; del buf1917  # reuse
        buf1919 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1753, input_1754, input_1755], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1918, primals_3517, primals_3518, primals_3519, primals_3520, primals_3521, buf1919, 32, grid=grid(32), stream=stream0)
        del primals_3517
        del primals_3521
        # Topologically Sorted Source Nodes: [input_1756], Original ATen: [aten.convolution]
        buf1920 = extern_kernels.convolution(buf1919, buf194, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1920, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1921 = buf1920; del buf1920  # reuse
        buf1922 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1756, input_1757, input_1758], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1921, primals_3523, primals_3524, primals_3525, primals_3526, primals_3527, buf1922, 32, grid=grid(32), stream=stream0)
        del primals_3523
        del primals_3527
        # Topologically Sorted Source Nodes: [input_1759], Original ATen: [aten.convolution]
        buf1923 = extern_kernels.convolution(buf1922, primals_3528, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1923, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1924 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1759, low1_72, input_1760, input_1761], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1923, primals_3529, buf1915, primals_3530, primals_3531, primals_3532, primals_3533, buf1924, 64, grid=grid(64), stream=stream0)
        del primals_3533
        # Topologically Sorted Source Nodes: [input_1762], Original ATen: [aten.convolution]
        buf1925 = extern_kernels.convolution(buf1924, primals_3534, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1925, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1926 = buf1925; del buf1925  # reuse
        buf1927 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1762, input_1763, input_1764], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1926, primals_3535, primals_3536, primals_3537, primals_3538, primals_3539, buf1927, 32, grid=grid(32), stream=stream0)
        del primals_3535
        del primals_3539
        # Topologically Sorted Source Nodes: [input_1765], Original ATen: [aten.convolution]
        buf1928 = extern_kernels.convolution(buf1927, buf195, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1928, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1929 = buf1928; del buf1928  # reuse
        buf1930 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1765, input_1766, input_1767], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1929, primals_3541, primals_3542, primals_3543, primals_3544, primals_3545, buf1930, 32, grid=grid(32), stream=stream0)
        del primals_3541
        del primals_3545
        # Topologically Sorted Source Nodes: [input_1768], Original ATen: [aten.convolution]
        buf1931 = extern_kernels.convolution(buf1930, primals_3546, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1931, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1932 = buf1931; del buf1931  # reuse
        buf1933 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        buf2251 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1759, low1_72, input_1768, low1_73, input_1769, input_1770], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_32.run(buf1932, primals_3547, buf1923, primals_3529, buf1915, primals_3548, primals_3549, primals_3550, primals_3551, buf1933, buf2251, 64, grid=grid(64), stream=stream0)
        del primals_3547
        del primals_3548
        del primals_3551
        # Topologically Sorted Source Nodes: [input_1771], Original ATen: [aten.convolution]
        buf1934 = extern_kernels.convolution(buf1933, primals_3552, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1934, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1935 = buf1934; del buf1934  # reuse
        buf1936 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1771, input_1772, input_1773], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1935, primals_3553, primals_3554, primals_3555, primals_3556, primals_3557, buf1936, 32, grid=grid(32), stream=stream0)
        del primals_3553
        del primals_3557
        # Topologically Sorted Source Nodes: [input_1774], Original ATen: [aten.convolution]
        buf1937 = extern_kernels.convolution(buf1936, buf196, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1937, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1938 = buf1937; del buf1937  # reuse
        buf1939 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1774, input_1775, input_1776], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1938, primals_3559, primals_3560, primals_3561, primals_3562, primals_3563, buf1939, 32, grid=grid(32), stream=stream0)
        del primals_3559
        del primals_3563
        # Topologically Sorted Source Nodes: [input_1777], Original ATen: [aten.convolution]
        buf1940 = extern_kernels.convolution(buf1939, primals_3564, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1940, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1941 = buf1940; del buf1940  # reuse
        buf1942 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1777, low1_74, input_1778, input_1779], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_33.run(buf1941, primals_3565, buf1932, primals_3566, primals_3567, primals_3568, primals_3569, buf1942, 64, grid=grid(64), stream=stream0)
        del primals_3565
        del primals_3569
        # Topologically Sorted Source Nodes: [input_1780], Original ATen: [aten.convolution]
        buf1943 = extern_kernels.convolution(buf1942, primals_3570, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1943, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1944 = buf1943; del buf1943  # reuse
        buf1945 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1780, input_1781, input_1782], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1944, primals_3571, primals_3572, primals_3573, primals_3574, primals_3575, buf1945, 32, grid=grid(32), stream=stream0)
        del primals_3571
        del primals_3575
        # Topologically Sorted Source Nodes: [input_1783], Original ATen: [aten.convolution]
        buf1946 = extern_kernels.convolution(buf1945, buf197, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1946, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1947 = buf1946; del buf1946  # reuse
        buf1948 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1783, input_1784, input_1785], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1947, primals_3577, primals_3578, primals_3579, primals_3580, primals_3581, buf1948, 32, grid=grid(32), stream=stream0)
        del primals_3577
        del primals_3581
        # Topologically Sorted Source Nodes: [input_1786], Original ATen: [aten.convolution]
        buf1949 = extern_kernels.convolution(buf1948, primals_3582, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1949, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1950 = buf1932; del buf1932  # reuse
        # Topologically Sorted Source Nodes: [input_1786, up1_60, input_1787, input_1788], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1949, primals_3583, buf1941, primals_3584, primals_3585, primals_3586, primals_3587, buf1950, 64, grid=grid(64), stream=stream0)
        del primals_3587
        # Topologically Sorted Source Nodes: [input_1789], Original ATen: [aten.convolution]
        buf1951 = extern_kernels.convolution(buf1950, primals_3588, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1951, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1952 = buf1951; del buf1951  # reuse
        buf1953 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1789, input_1790, input_1791], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1952, primals_3589, primals_3590, primals_3591, primals_3592, primals_3593, buf1953, 32, grid=grid(32), stream=stream0)
        del primals_3589
        del primals_3593
        # Topologically Sorted Source Nodes: [input_1792], Original ATen: [aten.convolution]
        buf1954 = extern_kernels.convolution(buf1953, buf198, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1954, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1955 = buf1954; del buf1954  # reuse
        buf1956 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1792, input_1793, input_1794], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1955, primals_3595, primals_3596, primals_3597, primals_3598, primals_3599, buf1956, 32, grid=grid(32), stream=stream0)
        del primals_3595
        del primals_3599
        # Topologically Sorted Source Nodes: [input_1795], Original ATen: [aten.convolution]
        buf1957 = extern_kernels.convolution(buf1956, primals_3600, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1957, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1958 = buf1957; del buf1957  # reuse
        buf1959 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1786, up1_60, input_1795, up1_61, input_1796, input_1797], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf1958, primals_3601, buf1949, primals_3583, buf1941, primals_3602, primals_3603, primals_3604, primals_3605, buf1959, 64, grid=grid(64), stream=stream0)
        del primals_3601
        del primals_3605
        # Topologically Sorted Source Nodes: [input_1798], Original ATen: [aten.convolution]
        buf1960 = extern_kernels.convolution(buf1959, primals_3606, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1960, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1961 = buf1960; del buf1960  # reuse
        buf1962 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1798, input_1799, input_1800], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1961, primals_3607, primals_3608, primals_3609, primals_3610, primals_3611, buf1962, 32, grid=grid(32), stream=stream0)
        del primals_3607
        del primals_3611
        # Topologically Sorted Source Nodes: [input_1801], Original ATen: [aten.convolution]
        buf1963 = extern_kernels.convolution(buf1962, buf199, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1963, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1964 = buf1963; del buf1963  # reuse
        buf1965 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1801, input_1802, input_1803], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1964, primals_3613, primals_3614, primals_3615, primals_3616, primals_3617, buf1965, 32, grid=grid(32), stream=stream0)
        del primals_3613
        del primals_3617
        # Topologically Sorted Source Nodes: [input_1804], Original ATen: [aten.convolution]
        buf1966 = extern_kernels.convolution(buf1965, primals_3618, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1966, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1967 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1804, up1_62, input_1805, input_1806], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf1966, primals_3619, buf1958, primals_3620, primals_3621, primals_3622, primals_3623, buf1967, 64, grid=grid(64), stream=stream0)
        del primals_3623
        # Topologically Sorted Source Nodes: [input_1807], Original ATen: [aten.convolution]
        buf1968 = extern_kernels.convolution(buf1967, primals_3624, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1968, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1969 = buf1968; del buf1968  # reuse
        buf1970 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1807, input_1808, input_1809], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1969, primals_3625, primals_3626, primals_3627, primals_3628, primals_3629, buf1970, 32, grid=grid(32), stream=stream0)
        del primals_3625
        del primals_3629
        # Topologically Sorted Source Nodes: [input_1810], Original ATen: [aten.convolution]
        buf1971 = extern_kernels.convolution(buf1970, buf200, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1971, (4, 2, 2, 2), (8, 1, 4, 2))
        buf1972 = buf1971; del buf1971  # reuse
        buf1973 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1810, input_1811, input_1812], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf1972, primals_3631, primals_3632, primals_3633, primals_3634, primals_3635, buf1973, 32, grid=grid(32), stream=stream0)
        del primals_3631
        del primals_3635
        # Topologically Sorted Source Nodes: [input_1813], Original ATen: [aten.convolution]
        buf1974 = extern_kernels.convolution(buf1973, primals_3636, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1974, (4, 4, 2, 2), (16, 1, 8, 4))
        buf1975 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.int8)
        buf1976 = buf1588; del buf1588  # reuse
        # Topologically Sorted Source Nodes: [low1_75, input_1814, input_1815], Original ATen: [aten.max_pool2d_with_indices, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_max_pool2d_with_indices_relu_35.run(buf1941, primals_3638, primals_3639, primals_3640, primals_3641, buf1975, buf1976, 16, grid=grid(16), stream=stream0)
        del primals_3641
        # Topologically Sorted Source Nodes: [input_1816], Original ATen: [aten.convolution]
        buf1977 = extern_kernels.convolution(buf1976, primals_3642, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1977, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1978 = buf1977; del buf1977  # reuse
        buf1979 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1816, input_1817, input_1818], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1978, primals_3643, primals_3644, primals_3645, primals_3646, primals_3647, buf1979, 8, grid=grid(8), stream=stream0)
        del primals_3643
        del primals_3647
        # Topologically Sorted Source Nodes: [input_1819], Original ATen: [aten.convolution]
        buf1980 = extern_kernels.convolution(buf1979, buf201, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1980, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1981 = buf1980; del buf1980  # reuse
        buf1982 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1819, input_1820, input_1821], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1981, primals_3649, primals_3650, primals_3651, primals_3652, primals_3653, buf1982, 8, grid=grid(8), stream=stream0)
        del primals_3649
        del primals_3653
        # Topologically Sorted Source Nodes: [input_1822], Original ATen: [aten.convolution]
        buf1983 = extern_kernels.convolution(buf1982, primals_3654, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1983, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1984 = reinterpret_tensor(buf1983, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf1983  # reuse
        buf1985 = reinterpret_tensor(buf1580, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1580  # reuse
        # Topologically Sorted Source Nodes: [low1_75, input_1822, low1_76, input_1823, input_1824], Original ATen: [aten.max_pool2d_with_indices, aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_37.run(buf1984, primals_3655, buf1941, primals_3656, primals_3657, primals_3658, primals_3659, buf1985, 16, grid=grid(16), stream=stream0)
        del primals_3655
        del primals_3659
        # Topologically Sorted Source Nodes: [input_1825], Original ATen: [aten.convolution]
        buf1986 = extern_kernels.convolution(buf1985, primals_3660, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1986, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1987 = buf1986; del buf1986  # reuse
        buf1988 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1825, input_1826, input_1827], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1987, primals_3661, primals_3662, primals_3663, primals_3664, primals_3665, buf1988, 8, grid=grid(8), stream=stream0)
        del primals_3661
        del primals_3665
        # Topologically Sorted Source Nodes: [input_1828], Original ATen: [aten.convolution]
        buf1989 = extern_kernels.convolution(buf1988, buf202, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1989, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1990 = buf1989; del buf1989  # reuse
        buf1991 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1828, input_1829, input_1830], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1990, primals_3667, primals_3668, primals_3669, primals_3670, primals_3671, buf1991, 8, grid=grid(8), stream=stream0)
        del primals_3667
        del primals_3671
        # Topologically Sorted Source Nodes: [input_1831], Original ATen: [aten.convolution]
        buf1992 = extern_kernels.convolution(buf1991, primals_3672, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1992, (4, 4, 1, 1), (4, 1, 4, 4))
        buf1993 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1831, low1_77, input_1832, input_1833], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf1992, primals_3673, buf1984, primals_3674, primals_3675, primals_3676, primals_3677, buf1993, 16, grid=grid(16), stream=stream0)
        del primals_3677
        # Topologically Sorted Source Nodes: [input_1834], Original ATen: [aten.convolution]
        buf1994 = extern_kernels.convolution(buf1993, primals_3678, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1994, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1995 = buf1994; del buf1994  # reuse
        buf1996 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1834, input_1835, input_1836], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1995, primals_3679, primals_3680, primals_3681, primals_3682, primals_3683, buf1996, 8, grid=grid(8), stream=stream0)
        del primals_3679
        del primals_3683
        # Topologically Sorted Source Nodes: [input_1837], Original ATen: [aten.convolution]
        buf1997 = extern_kernels.convolution(buf1996, buf203, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf1997, (4, 2, 1, 1), (2, 1, 2, 2))
        buf1998 = buf1997; del buf1997  # reuse
        buf1999 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1837, input_1838, input_1839], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf1998, primals_3685, primals_3686, primals_3687, primals_3688, primals_3689, buf1999, 8, grid=grid(8), stream=stream0)
        del primals_3685
        del primals_3689
        # Topologically Sorted Source Nodes: [input_1840], Original ATen: [aten.convolution]
        buf2000 = extern_kernels.convolution(buf1999, primals_3690, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2000, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2001 = reinterpret_tensor(buf2000, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf2000  # reuse
        buf2002 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1831, low1_77, input_1840, low1_78, input_1841, input_1842], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf2001, primals_3691, buf1992, primals_3673, buf1984, primals_3692, primals_3693, primals_3694, primals_3695, buf2002, 16, grid=grid(16), stream=stream0)
        del primals_3691
        del primals_3695
        # Topologically Sorted Source Nodes: [input_1843], Original ATen: [aten.convolution]
        buf2003 = extern_kernels.convolution(buf2002, primals_3696, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2003, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2004 = buf2003; del buf2003  # reuse
        buf2005 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1843, input_1844, input_1845], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2004, primals_3697, primals_3698, primals_3699, primals_3700, primals_3701, buf2005, 8, grid=grid(8), stream=stream0)
        del primals_3697
        del primals_3701
        # Topologically Sorted Source Nodes: [input_1846], Original ATen: [aten.convolution]
        buf2006 = extern_kernels.convolution(buf2005, buf204, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2006, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2007 = buf2006; del buf2006  # reuse
        buf2008 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1846, input_1847, input_1848], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2007, primals_3703, primals_3704, primals_3705, primals_3706, primals_3707, buf2008, 8, grid=grid(8), stream=stream0)
        del primals_3703
        del primals_3707
        # Topologically Sorted Source Nodes: [input_1849], Original ATen: [aten.convolution]
        buf2009 = extern_kernels.convolution(buf2008, primals_3708, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2009, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2010 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1849, low1_79, input_1850, input_1851], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf2009, primals_3709, buf2001, primals_3710, primals_3711, primals_3712, primals_3713, buf2010, 16, grid=grid(16), stream=stream0)
        del primals_3713
        # Topologically Sorted Source Nodes: [input_1852], Original ATen: [aten.convolution]
        buf2011 = extern_kernels.convolution(buf2010, primals_3714, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2011, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2012 = buf2011; del buf2011  # reuse
        buf2013 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1852, input_1853, input_1854], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2012, primals_3715, primals_3716, primals_3717, primals_3718, primals_3719, buf2013, 8, grid=grid(8), stream=stream0)
        del primals_3715
        del primals_3719
        # Topologically Sorted Source Nodes: [input_1855], Original ATen: [aten.convolution]
        buf2014 = extern_kernels.convolution(buf2013, buf205, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2014, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2015 = buf2014; del buf2014  # reuse
        buf2016 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1855, input_1856, input_1857], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2015, primals_3721, primals_3722, primals_3723, primals_3724, primals_3725, buf2016, 8, grid=grid(8), stream=stream0)
        del primals_3721
        del primals_3725
        # Topologically Sorted Source Nodes: [input_1858], Original ATen: [aten.convolution]
        buf2017 = extern_kernels.convolution(buf2016, primals_3726, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2017, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2018 = reinterpret_tensor(buf2017, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf2017  # reuse
        buf2019 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1849, low1_79, input_1858, low2_21, input_1859, input_1860], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf2018, primals_3727, buf2009, primals_3709, buf2001, primals_3728, primals_3729, primals_3730, primals_3731, buf2019, 16, grid=grid(16), stream=stream0)
        del primals_3727
        del primals_3731
        # Topologically Sorted Source Nodes: [input_1861], Original ATen: [aten.convolution]
        buf2020 = extern_kernels.convolution(buf2019, primals_3732, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2020, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2021 = buf2020; del buf2020  # reuse
        buf2022 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1861, input_1862, input_1863], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2021, primals_3733, primals_3734, primals_3735, primals_3736, primals_3737, buf2022, 8, grid=grid(8), stream=stream0)
        del primals_3733
        del primals_3737
        # Topologically Sorted Source Nodes: [input_1864], Original ATen: [aten.convolution]
        buf2023 = extern_kernels.convolution(buf2022, buf206, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2023, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2024 = buf2023; del buf2023  # reuse
        buf2025 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1864, input_1865, input_1866], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2024, primals_3739, primals_3740, primals_3741, primals_3742, primals_3743, buf2025, 8, grid=grid(8), stream=stream0)
        del primals_3739
        del primals_3743
        # Topologically Sorted Source Nodes: [input_1867], Original ATen: [aten.convolution]
        buf2026 = extern_kernels.convolution(buf2025, primals_3744, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2026, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2027 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1867, low2_22, input_1868, input_1869], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf2026, primals_3745, buf2018, primals_3746, primals_3747, primals_3748, primals_3749, buf2027, 16, grid=grid(16), stream=stream0)
        del primals_3749
        # Topologically Sorted Source Nodes: [input_1870], Original ATen: [aten.convolution]
        buf2028 = extern_kernels.convolution(buf2027, primals_3750, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2028, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2029 = buf2028; del buf2028  # reuse
        buf2030 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1870, input_1871, input_1872], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2029, primals_3751, primals_3752, primals_3753, primals_3754, primals_3755, buf2030, 8, grid=grid(8), stream=stream0)
        del primals_3751
        del primals_3755
        # Topologically Sorted Source Nodes: [input_1873], Original ATen: [aten.convolution]
        buf2031 = extern_kernels.convolution(buf2030, buf207, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2031, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2032 = buf2031; del buf2031  # reuse
        buf2033 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1873, input_1874, input_1875], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2032, primals_3757, primals_3758, primals_3759, primals_3760, primals_3761, buf2033, 8, grid=grid(8), stream=stream0)
        del primals_3757
        del primals_3761
        # Topologically Sorted Source Nodes: [input_1876], Original ATen: [aten.convolution]
        buf2034 = extern_kernels.convolution(buf2033, primals_3762, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2034, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2035 = reinterpret_tensor(buf2034, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf2034  # reuse
        buf2036 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1867, low2_22, input_1876, low2_23, input_1877, input_1878], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf2035, primals_3763, buf2026, primals_3745, buf2018, primals_3764, primals_3765, primals_3766, primals_3767, buf2036, 16, grid=grid(16), stream=stream0)
        del primals_3763
        del primals_3767
        # Topologically Sorted Source Nodes: [input_1879], Original ATen: [aten.convolution]
        buf2037 = extern_kernels.convolution(buf2036, primals_3768, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2037, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2038 = buf2037; del buf2037  # reuse
        buf2039 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1879, input_1880, input_1881], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2038, primals_3769, primals_3770, primals_3771, primals_3772, primals_3773, buf2039, 8, grid=grid(8), stream=stream0)
        del primals_3769
        del primals_3773
        # Topologically Sorted Source Nodes: [input_1882], Original ATen: [aten.convolution]
        buf2040 = extern_kernels.convolution(buf2039, buf208, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2040, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2041 = buf2040; del buf2040  # reuse
        buf2042 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1882, input_1883, input_1884], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2041, primals_3775, primals_3776, primals_3777, primals_3778, primals_3779, buf2042, 8, grid=grid(8), stream=stream0)
        del primals_3775
        del primals_3779
        # Topologically Sorted Source Nodes: [input_1885], Original ATen: [aten.convolution]
        buf2043 = extern_kernels.convolution(buf2042, primals_3780, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2043, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2044 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1885, low2_24, input_1886, input_1887], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf2043, primals_3781, buf2035, primals_3782, primals_3783, primals_3784, primals_3785, buf2044, 16, grid=grid(16), stream=stream0)
        del primals_3785
        # Topologically Sorted Source Nodes: [input_1888], Original ATen: [aten.convolution]
        buf2045 = extern_kernels.convolution(buf2044, primals_3786, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2045, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2046 = buf2045; del buf2045  # reuse
        buf2047 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1888, input_1889, input_1890], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2046, primals_3787, primals_3788, primals_3789, primals_3790, primals_3791, buf2047, 8, grid=grid(8), stream=stream0)
        del primals_3787
        del primals_3791
        # Topologically Sorted Source Nodes: [input_1891], Original ATen: [aten.convolution]
        buf2048 = extern_kernels.convolution(buf2047, buf209, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2048, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2049 = buf2048; del buf2048  # reuse
        buf2050 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1891, input_1892, input_1893], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2049, primals_3793, primals_3794, primals_3795, primals_3796, primals_3797, buf2050, 8, grid=grid(8), stream=stream0)
        del primals_3793
        del primals_3797
        # Topologically Sorted Source Nodes: [input_1894], Original ATen: [aten.convolution]
        buf2051 = extern_kernels.convolution(buf2050, primals_3798, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2051, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2052 = reinterpret_tensor(buf2051, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf2051  # reuse
        buf2053 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1885, low2_24, input_1894, low3_48, input_1895, input_1896], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_39.run(buf2052, primals_3799, buf2043, primals_3781, buf2035, primals_3800, primals_3801, primals_3802, primals_3803, buf2053, 16, grid=grid(16), stream=stream0)
        del primals_3799
        del primals_3803
        # Topologically Sorted Source Nodes: [input_1897], Original ATen: [aten.convolution]
        buf2054 = extern_kernels.convolution(buf2053, primals_3804, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2054, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2055 = buf2054; del buf2054  # reuse
        buf2056 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1897, input_1898, input_1899], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2055, primals_3805, primals_3806, primals_3807, primals_3808, primals_3809, buf2056, 8, grid=grid(8), stream=stream0)
        del primals_3805
        del primals_3809
        # Topologically Sorted Source Nodes: [input_1900], Original ATen: [aten.convolution]
        buf2057 = extern_kernels.convolution(buf2056, buf210, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2057, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2058 = buf2057; del buf2057  # reuse
        buf2059 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1900, input_1901, input_1902], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2058, primals_3811, primals_3812, primals_3813, primals_3814, primals_3815, buf2059, 8, grid=grid(8), stream=stream0)
        del primals_3811
        del primals_3815
        # Topologically Sorted Source Nodes: [input_1903], Original ATen: [aten.convolution]
        buf2060 = extern_kernels.convolution(buf2059, primals_3816, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2060, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2061 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1903, low3_49, input_1904, input_1905], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_38.run(buf2060, primals_3817, buf2052, primals_3818, primals_3819, primals_3820, primals_3821, buf2061, 16, grid=grid(16), stream=stream0)
        del primals_3821
        # Topologically Sorted Source Nodes: [input_1906], Original ATen: [aten.convolution]
        buf2062 = extern_kernels.convolution(buf2061, primals_3822, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2062, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2063 = buf2062; del buf2062  # reuse
        buf2064 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1906, input_1907, input_1908], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2063, primals_3823, primals_3824, primals_3825, primals_3826, primals_3827, buf2064, 8, grid=grid(8), stream=stream0)
        del primals_3823
        del primals_3827
        # Topologically Sorted Source Nodes: [input_1909], Original ATen: [aten.convolution]
        buf2065 = extern_kernels.convolution(buf2064, buf211, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2065, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2066 = buf2065; del buf2065  # reuse
        buf2067 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1909, input_1910, input_1911], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2066, primals_3829, primals_3830, primals_3831, primals_3832, primals_3833, buf2067, 8, grid=grid(8), stream=stream0)
        del primals_3829
        del primals_3833
        # Topologically Sorted Source Nodes: [input_1912], Original ATen: [aten.convolution]
        buf2068 = extern_kernels.convolution(buf2067, primals_3834, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2068, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2069 = reinterpret_tensor(buf2068, (4, 4, 1, 1), (4, 1, 16, 16), 0); del buf2068  # reuse
        buf2070 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        buf2236 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1903, low3_49, input_1912, low3_50, input_1913, input_1914], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_40.run(buf2069, primals_3835, buf2060, primals_3817, buf2052, primals_3836, primals_3837, primals_3838, primals_3839, buf2070, buf2236, 16, grid=grid(16), stream=stream0)
        del primals_3835
        del primals_3836
        del primals_3839
        # Topologically Sorted Source Nodes: [input_1915], Original ATen: [aten.convolution]
        buf2071 = extern_kernels.convolution(buf2070, primals_3840, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2071, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2072 = buf2071; del buf2071  # reuse
        buf2073 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1915, input_1916, input_1917], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2072, primals_3841, primals_3842, primals_3843, primals_3844, primals_3845, buf2073, 8, grid=grid(8), stream=stream0)
        del primals_3841
        del primals_3845
        # Topologically Sorted Source Nodes: [input_1918], Original ATen: [aten.convolution]
        buf2074 = extern_kernels.convolution(buf2073, buf212, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2074, (4, 2, 1, 1), (2, 1, 2, 2))
        buf2075 = buf2074; del buf2074  # reuse
        buf2076 = empty_strided_cuda((4, 2, 1, 1), (2, 1, 2, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1918, input_1919, input_1920], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_36.run(buf2075, primals_3847, primals_3848, primals_3849, primals_3850, primals_3851, buf2076, 8, grid=grid(8), stream=stream0)
        del primals_3847
        del primals_3851
        # Topologically Sorted Source Nodes: [input_1921], Original ATen: [aten.convolution]
        buf2077 = extern_kernels.convolution(buf2076, primals_3852, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2077, (4, 4, 1, 1), (4, 1, 4, 4))
        buf2078 = buf1974; del buf1974  # reuse
        buf2079 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1804, up1_62, input_1813, up1_63, input_1921, low3_51, up2_12, low2_25, input_1922, input_1923], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_42.run(buf2078, primals_3637, buf1966, primals_3619, buf1958, buf607, buf2077, primals_3853, buf2069, primals_3854, primals_3855, primals_3856, primals_3857, buf2079, 64, grid=grid(64), stream=stream0)
        del primals_3637
        del primals_3853
        del primals_3857
        # Topologically Sorted Source Nodes: [input_1924], Original ATen: [aten.convolution]
        buf2080 = extern_kernels.convolution(buf2079, primals_3858, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2080, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2081 = buf2080; del buf2080  # reuse
        buf2082 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1924, input_1925, input_1926], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2081, primals_3859, primals_3860, primals_3861, primals_3862, primals_3863, buf2082, 32, grid=grid(32), stream=stream0)
        del primals_3859
        del primals_3863
        # Topologically Sorted Source Nodes: [input_1927], Original ATen: [aten.convolution]
        buf2083 = extern_kernels.convolution(buf2082, buf213, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2083, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2084 = buf2083; del buf2083  # reuse
        buf2085 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1927, input_1928, input_1929], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2084, primals_3865, primals_3866, primals_3867, primals_3868, primals_3869, buf2085, 32, grid=grid(32), stream=stream0)
        del primals_3865
        del primals_3869
        # Topologically Sorted Source Nodes: [input_1930], Original ATen: [aten.convolution]
        buf2086 = extern_kernels.convolution(buf2085, primals_3870, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2086, (4, 4, 2, 2), (16, 1, 8, 4))
        buf2087 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1930, low3_52, input_1931, input_1932], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf2086, primals_3871, buf2078, primals_3872, primals_3873, primals_3874, primals_3875, buf2087, 64, grid=grid(64), stream=stream0)
        del primals_3875
        # Topologically Sorted Source Nodes: [input_1933], Original ATen: [aten.convolution]
        buf2088 = extern_kernels.convolution(buf2087, primals_3876, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2088, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2089 = buf2088; del buf2088  # reuse
        buf2090 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1933, input_1934, input_1935], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2089, primals_3877, primals_3878, primals_3879, primals_3880, primals_3881, buf2090, 32, grid=grid(32), stream=stream0)
        del primals_3877
        del primals_3881
        # Topologically Sorted Source Nodes: [input_1936], Original ATen: [aten.convolution]
        buf2091 = extern_kernels.convolution(buf2090, buf214, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2091, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2092 = buf2091; del buf2091  # reuse
        buf2093 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1936, input_1937, input_1938], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2092, primals_3883, primals_3884, primals_3885, primals_3886, primals_3887, buf2093, 32, grid=grid(32), stream=stream0)
        del primals_3883
        del primals_3887
        # Topologically Sorted Source Nodes: [input_1939], Original ATen: [aten.convolution]
        buf2094 = extern_kernels.convolution(buf2093, primals_3888, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2094, (4, 4, 2, 2), (16, 1, 8, 4))
        buf2095 = buf2094; del buf2094  # reuse
        buf2096 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1930, low3_52, input_1939, low3_53, input_1940, input_1941], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_34.run(buf2095, primals_3889, buf2086, primals_3871, buf2078, primals_3890, primals_3891, primals_3892, primals_3893, buf2096, 64, grid=grid(64), stream=stream0)
        del primals_3889
        del primals_3893
        # Topologically Sorted Source Nodes: [input_1942], Original ATen: [aten.convolution]
        buf2097 = extern_kernels.convolution(buf2096, primals_3894, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2097, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2098 = buf2097; del buf2097  # reuse
        buf2099 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1942, input_1943, input_1944], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2098, primals_3895, primals_3896, primals_3897, primals_3898, primals_3899, buf2099, 32, grid=grid(32), stream=stream0)
        del primals_3895
        del primals_3899
        # Topologically Sorted Source Nodes: [input_1945], Original ATen: [aten.convolution]
        buf2100 = extern_kernels.convolution(buf2099, buf215, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2100, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2101 = buf2100; del buf2100  # reuse
        buf2102 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1945, input_1946, input_1947], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2101, primals_3901, primals_3902, primals_3903, primals_3904, primals_3905, buf2102, 32, grid=grid(32), stream=stream0)
        del primals_3901
        del primals_3905
        # Topologically Sorted Source Nodes: [input_1948], Original ATen: [aten.convolution]
        buf2103 = extern_kernels.convolution(buf2102, primals_3906, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2103, (4, 4, 2, 2), (16, 1, 8, 4))
        buf2104 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1948, low3_54, input_1949, input_1950], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_31.run(buf2103, primals_3907, buf2095, primals_3908, primals_3909, primals_3910, primals_3911, buf2104, 64, grid=grid(64), stream=stream0)
        del primals_3911
        # Topologically Sorted Source Nodes: [input_1951], Original ATen: [aten.convolution]
        buf2105 = extern_kernels.convolution(buf2104, primals_3912, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2105, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2106 = buf2105; del buf2105  # reuse
        buf2107 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1951, input_1952, input_1953], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2106, primals_3913, primals_3914, primals_3915, primals_3916, primals_3917, buf2107, 32, grid=grid(32), stream=stream0)
        del primals_3913
        del primals_3917
        # Topologically Sorted Source Nodes: [input_1954], Original ATen: [aten.convolution]
        buf2108 = extern_kernels.convolution(buf2107, buf216, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2108, (4, 2, 2, 2), (8, 1, 4, 2))
        buf2109 = buf2108; del buf2108  # reuse
        buf2110 = empty_strided_cuda((4, 2, 2, 2), (8, 1, 4, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1954, input_1955, input_1956], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_29.run(buf2109, primals_3919, primals_3920, primals_3921, primals_3922, primals_3923, buf2110, 32, grid=grid(32), stream=stream0)
        del primals_3919
        del primals_3923
        # Topologically Sorted Source Nodes: [input_1957], Original ATen: [aten.convolution]
        buf2111 = extern_kernels.convolution(buf2110, primals_3924, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2111, (4, 4, 2, 2), (16, 1, 8, 4))
        buf2112 = buf1905; del buf1905  # reuse
        buf2113 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1732, up1_58, input_1741, up1_59, input_1948, low3_54, input_1957, low3_55, up2_13, low2_26, input_1958, input_1959], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_44.run(buf2112, primals_3493, buf1897, primals_3475, buf1889, buf642, buf2111, primals_3925, buf2103, primals_3907, buf2095, primals_3926, primals_3927, primals_3928, primals_3929, buf2113, 256, grid=grid(256), stream=stream0)
        del primals_3493
        del primals_3925
        del primals_3929
        # Topologically Sorted Source Nodes: [input_1960], Original ATen: [aten.convolution]
        buf2114 = extern_kernels.convolution(buf2113, primals_3930, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2114, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2115 = buf2114; del buf2114  # reuse
        buf2116 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1960, input_1961, input_1962], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2115, primals_3931, primals_3932, primals_3933, primals_3934, primals_3935, buf2116, 128, grid=grid(128), stream=stream0)
        del primals_3931
        del primals_3935
        # Topologically Sorted Source Nodes: [input_1963], Original ATen: [aten.convolution]
        buf2117 = extern_kernels.convolution(buf2116, buf217, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2117, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2118 = buf2117; del buf2117  # reuse
        buf2119 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1963, input_1964, input_1965], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2118, primals_3937, primals_3938, primals_3939, primals_3940, primals_3941, buf2119, 128, grid=grid(128), stream=stream0)
        del primals_3937
        del primals_3941
        # Topologically Sorted Source Nodes: [input_1966], Original ATen: [aten.convolution]
        buf2120 = extern_kernels.convolution(buf2119, primals_3942, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2120, (4, 4, 4, 4), (64, 1, 16, 4))
        buf2121 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1966, low3_56, input_1967, input_1968], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf2120, primals_3943, buf2112, primals_3944, primals_3945, primals_3946, primals_3947, buf2121, 256, grid=grid(256), stream=stream0)
        del primals_3947
        # Topologically Sorted Source Nodes: [input_1969], Original ATen: [aten.convolution]
        buf2122 = extern_kernels.convolution(buf2121, primals_3948, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2122, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2123 = buf2122; del buf2122  # reuse
        buf2124 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1969, input_1970, input_1971], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2123, primals_3949, primals_3950, primals_3951, primals_3952, primals_3953, buf2124, 128, grid=grid(128), stream=stream0)
        del primals_3949
        del primals_3953
        # Topologically Sorted Source Nodes: [input_1972], Original ATen: [aten.convolution]
        buf2125 = extern_kernels.convolution(buf2124, buf218, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2125, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2126 = buf2125; del buf2125  # reuse
        buf2127 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1972, input_1973, input_1974], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2126, primals_3955, primals_3956, primals_3957, primals_3958, primals_3959, buf2127, 128, grid=grid(128), stream=stream0)
        del primals_3955
        del primals_3959
        # Topologically Sorted Source Nodes: [input_1975], Original ATen: [aten.convolution]
        buf2128 = extern_kernels.convolution(buf2127, primals_3960, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2128, (4, 4, 4, 4), (64, 1, 16, 4))
        buf2129 = buf2128; del buf2128  # reuse
        buf2130 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1966, low3_56, input_1975, low3_57, input_1976, input_1977], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_27.run(buf2129, primals_3961, buf2120, primals_3943, buf2112, primals_3962, primals_3963, primals_3964, primals_3965, buf2130, 256, grid=grid(256), stream=stream0)
        del primals_3961
        del primals_3965
        # Topologically Sorted Source Nodes: [input_1978], Original ATen: [aten.convolution]
        buf2131 = extern_kernels.convolution(buf2130, primals_3966, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2131, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2132 = buf2131; del buf2131  # reuse
        buf2133 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1978, input_1979, input_1980], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2132, primals_3967, primals_3968, primals_3969, primals_3970, primals_3971, buf2133, 128, grid=grid(128), stream=stream0)
        del primals_3967
        del primals_3971
        # Topologically Sorted Source Nodes: [input_1981], Original ATen: [aten.convolution]
        buf2134 = extern_kernels.convolution(buf2133, buf219, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2134, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2135 = buf2134; del buf2134  # reuse
        buf2136 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1981, input_1982, input_1983], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2135, primals_3973, primals_3974, primals_3975, primals_3976, primals_3977, buf2136, 128, grid=grid(128), stream=stream0)
        del primals_3973
        del primals_3977
        # Topologically Sorted Source Nodes: [input_1984], Original ATen: [aten.convolution]
        buf2137 = extern_kernels.convolution(buf2136, primals_3978, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2137, (4, 4, 4, 4), (64, 1, 16, 4))
        buf2138 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1984, low3_58, input_1985, input_1986], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_24.run(buf2137, primals_3979, buf2129, primals_3980, primals_3981, primals_3982, primals_3983, buf2138, 256, grid=grid(256), stream=stream0)
        del primals_3983
        # Topologically Sorted Source Nodes: [input_1987], Original ATen: [aten.convolution]
        buf2139 = extern_kernels.convolution(buf2138, primals_3984, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2139, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2140 = buf2139; del buf2139  # reuse
        buf2141 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1987, input_1988, input_1989], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2140, primals_3985, primals_3986, primals_3987, primals_3988, primals_3989, buf2141, 128, grid=grid(128), stream=stream0)
        del primals_3985
        del primals_3989
        # Topologically Sorted Source Nodes: [input_1990], Original ATen: [aten.convolution]
        buf2142 = extern_kernels.convolution(buf2141, buf220, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2142, (4, 2, 4, 4), (32, 1, 8, 2))
        buf2143 = buf2142; del buf2142  # reuse
        buf2144 = empty_strided_cuda((4, 2, 4, 4), (32, 1, 8, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1990, input_1991, input_1992], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_22.run(buf2143, primals_3991, primals_3992, primals_3993, primals_3994, primals_3995, buf2144, 128, grid=grid(128), stream=stream0)
        del primals_3991
        del primals_3995
        # Topologically Sorted Source Nodes: [input_1993], Original ATen: [aten.convolution]
        buf2145 = extern_kernels.convolution(buf2144, primals_3996, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2145, (4, 4, 4, 4), (64, 1, 16, 4))
        buf2146 = buf1836; del buf1836  # reuse
        buf2147 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1660, up1_54, input_1669, up1_55, input_1984, low3_58, input_1993, low3_59, up2_14, low2_27, input_1994, input_1995], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_46.run(buf2146, primals_3349, buf1828, primals_3331, buf1820, buf677, buf2145, primals_3997, buf2137, primals_3979, buf2129, primals_3998, primals_3999, primals_4000, primals_4001, buf2147, 1024, grid=grid(1024), stream=stream0)
        del primals_3349
        del primals_3997
        del primals_4001
        # Topologically Sorted Source Nodes: [input_1996], Original ATen: [aten.convolution]
        buf2148 = extern_kernels.convolution(buf2147, primals_4002, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2148, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2149 = buf2148; del buf2148  # reuse
        buf2150 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1996, input_1997, input_1998], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2149, primals_4003, primals_4004, primals_4005, primals_4006, primals_4007, buf2150, 512, grid=grid(512), stream=stream0)
        del primals_4003
        del primals_4007
        # Topologically Sorted Source Nodes: [input_1999], Original ATen: [aten.convolution]
        buf2151 = extern_kernels.convolution(buf2150, buf221, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2151, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2152 = buf2151; del buf2151  # reuse
        buf2153 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_1999, input_2000, input_2001], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2152, primals_4009, primals_4010, primals_4011, primals_4012, primals_4013, buf2153, 512, grid=grid(512), stream=stream0)
        del primals_4009
        del primals_4013
        # Topologically Sorted Source Nodes: [input_2002], Original ATen: [aten.convolution]
        buf2154 = extern_kernels.convolution(buf2153, primals_4014, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2154, (4, 4, 8, 8), (256, 1, 32, 4))
        buf2155 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_2002, low3_60, input_2003, input_2004], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_17.run(buf2154, primals_4015, buf2146, primals_4016, primals_4017, primals_4018, primals_4019, buf2155, 1024, grid=grid(1024), stream=stream0)
        del primals_4019
        # Topologically Sorted Source Nodes: [input_2005], Original ATen: [aten.convolution]
        buf2156 = extern_kernels.convolution(buf2155, primals_4020, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2156, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2157 = buf2156; del buf2156  # reuse
        buf2158 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2005, input_2006, input_2007], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2157, primals_4021, primals_4022, primals_4023, primals_4024, primals_4025, buf2158, 512, grid=grid(512), stream=stream0)
        del primals_4021
        del primals_4025
        # Topologically Sorted Source Nodes: [input_2008], Original ATen: [aten.convolution]
        buf2159 = extern_kernels.convolution(buf2158, buf222, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2159, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2160 = buf2159; del buf2159  # reuse
        buf2161 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2008, input_2009, input_2010], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2160, primals_4027, primals_4028, primals_4029, primals_4030, primals_4031, buf2161, 512, grid=grid(512), stream=stream0)
        del primals_4027
        del primals_4031
        # Topologically Sorted Source Nodes: [input_2011], Original ATen: [aten.convolution]
        buf2162 = extern_kernels.convolution(buf2161, primals_4032, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2162, (4, 4, 8, 8), (256, 1, 32, 4))
        buf2163 = buf2162; del buf2162  # reuse
        buf2226 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2227 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2164 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        buf2225 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_2002, low3_60, input_2011, low3_61, input_2012, input_2013], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_53.run(buf2163, primals_4033, buf2154, primals_4015, buf2146, primals_4016, primals_3998, primals_4034, primals_4035, primals_4036, primals_4037, buf2226, buf2227, buf2164, buf2225, 1024, grid=grid(1024), stream=stream0)
        del primals_3998
        del primals_4015
        del primals_4016
        del primals_4033
        del primals_4034
        del primals_4037
        # Topologically Sorted Source Nodes: [input_2014], Original ATen: [aten.convolution]
        buf2165 = extern_kernels.convolution(buf2164, primals_4038, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2165, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2166 = buf2165; del buf2165  # reuse
        buf2167 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2014, input_2015, input_2016], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2166, primals_4039, primals_4040, primals_4041, primals_4042, primals_4043, buf2167, 512, grid=grid(512), stream=stream0)
        del primals_4039
        del primals_4043
        # Topologically Sorted Source Nodes: [input_2017], Original ATen: [aten.convolution]
        buf2168 = extern_kernels.convolution(buf2167, buf223, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2168, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2169 = buf2168; del buf2168  # reuse
        buf2170 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2017, input_2018, input_2019], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2169, primals_4045, primals_4046, primals_4047, primals_4048, primals_4049, buf2170, 512, grid=grid(512), stream=stream0)
        del primals_4045
        del primals_4049
        # Topologically Sorted Source Nodes: [input_2020], Original ATen: [aten.convolution]
        buf2171 = extern_kernels.convolution(buf2170, primals_4050, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2171, (4, 4, 8, 8), (256, 1, 32, 4))
        buf2172 = buf2154; del buf2154  # reuse
        buf2224 = buf2146; del buf2146  # reuse
        # Topologically Sorted Source Nodes: [input_2020, low3_62, input_2021, input_2022], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_54.run(buf2171, primals_4051, buf2163, primals_4052, primals_4053, primals_4054, primals_4055, buf2172, buf2224, 1024, grid=grid(1024), stream=stream0)
        del primals_4052
        del primals_4055
        # Topologically Sorted Source Nodes: [input_2023], Original ATen: [aten.convolution]
        buf2173 = extern_kernels.convolution(buf2172, primals_4056, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2173, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2174 = buf2173; del buf2173  # reuse
        buf2175 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2023, input_2024, input_2025], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2174, primals_4057, primals_4058, primals_4059, primals_4060, primals_4061, buf2175, 512, grid=grid(512), stream=stream0)
        del primals_4057
        del primals_4061
        # Topologically Sorted Source Nodes: [input_2026], Original ATen: [aten.convolution]
        buf2176 = extern_kernels.convolution(buf2175, buf224, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2176, (4, 2, 8, 8), (128, 1, 16, 2))
        buf2177 = buf2176; del buf2176  # reuse
        buf2178 = empty_strided_cuda((4, 2, 8, 8), (128, 1, 16, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2026, input_2027, input_2028], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_15.run(buf2177, primals_4063, primals_4064, primals_4065, primals_4066, primals_4067, buf2178, 512, grid=grid(512), stream=stream0)
        del primals_4063
        del primals_4067
        # Topologically Sorted Source Nodes: [input_2029], Original ATen: [aten.convolution]
        buf2179 = extern_kernels.convolution(buf2178, primals_4068, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2179, (4, 4, 8, 8), (256, 1, 32, 4))
        buf2180 = buf1767; del buf1767  # reuse
        buf2181 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        buf2223 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1588, up1_50, input_1597, up1_51, input_2020, low3_62, input_2029, low3_63, up2_15, hg_3, input_2030, input_2031], Original ATen: [aten.convolution, aten.add, aten._unsafe_index, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_native_batch_norm_backward_relu_55.run(buf2180, primals_3205, buf1759, primals_3187, buf1751, buf712, buf2179, primals_4069, buf2171, primals_4051, buf2163, primals_4070, primals_4071, primals_4072, primals_4073, buf2181, buf2223, 4096, grid=grid(4096), stream=stream0)
        del primals_3205
        del primals_4051
        del primals_4069
        del primals_4070
        del primals_4073
        # Topologically Sorted Source Nodes: [input_2032], Original ATen: [aten.convolution]
        buf2182 = extern_kernels.convolution(buf2181, primals_4074, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2182, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2183 = buf2182; del buf2182  # reuse
        buf2184 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2032, input_2033, input_2034], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2183, primals_4075, primals_4076, primals_4077, primals_4078, primals_4079, buf2184, 2048, grid=grid(2048), stream=stream0)
        del primals_4075
        del primals_4079
        # Topologically Sorted Source Nodes: [input_2035], Original ATen: [aten.convolution]
        buf2185 = extern_kernels.convolution(buf2184, buf225, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2185, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2186 = buf2185; del buf2185  # reuse
        buf2187 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2035, input_2036, input_2037], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2186, primals_4081, primals_4082, primals_4083, primals_4084, primals_4085, buf2187, 2048, grid=grid(2048), stream=stream0)
        del primals_4081
        del primals_4085
        # Topologically Sorted Source Nodes: [input_2038], Original ATen: [aten.convolution]
        buf2188 = extern_kernels.convolution(buf2187, primals_4086, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2188, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf2189 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        buf2222 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_2038, ll_12, input_2039, input_2040], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_56.run(buf2188, primals_4087, buf2180, primals_4088, primals_4089, primals_4090, primals_4091, buf2189, buf2222, 4096, grid=grid(4096), stream=stream0)
        del primals_4088
        del primals_4091
        # Topologically Sorted Source Nodes: [input_2041], Original ATen: [aten.convolution]
        buf2190 = extern_kernels.convolution(buf2189, primals_4092, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2190, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2191 = buf2190; del buf2190  # reuse
        buf2192 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2041, input_2042, input_2043], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2191, primals_4093, primals_4094, primals_4095, primals_4096, primals_4097, buf2192, 2048, grid=grid(2048), stream=stream0)
        del primals_4093
        del primals_4097
        # Topologically Sorted Source Nodes: [input_2044], Original ATen: [aten.convolution]
        buf2193 = extern_kernels.convolution(buf2192, buf226, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2193, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2194 = buf2193; del buf2193  # reuse
        buf2195 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2044, input_2045, input_2046], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2194, primals_4099, primals_4100, primals_4101, primals_4102, primals_4103, buf2195, 2048, grid=grid(2048), stream=stream0)
        del primals_4099
        del primals_4103
        # Topologically Sorted Source Nodes: [input_2047], Original ATen: [aten.convolution]
        buf2196 = extern_kernels.convolution(buf2195, primals_4104, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2196, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf2197 = buf2196; del buf2196  # reuse
        buf2198 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        buf2221 = empty_strided_cuda((4, 4, 16, 16), (1024, 1, 64, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_2038, ll_12, input_2047, ll_13, input_2048, input_2049], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_57.run(buf2197, primals_4105, buf2188, primals_4087, buf2180, primals_4106, primals_4107, primals_4108, primals_4109, buf2198, buf2221, 4096, grid=grid(4096), stream=stream0)
        del primals_4087
        del primals_4105
        del primals_4106
        del primals_4109
        # Topologically Sorted Source Nodes: [input_2050], Original ATen: [aten.convolution]
        buf2199 = extern_kernels.convolution(buf2198, primals_4110, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2199, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2200 = buf2199; del buf2199  # reuse
        buf2201 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2050, input_2051, input_2052], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2200, primals_4111, primals_4112, primals_4113, primals_4114, primals_4115, buf2201, 2048, grid=grid(2048), stream=stream0)
        del primals_4111
        del primals_4115
        # Topologically Sorted Source Nodes: [input_2053], Original ATen: [aten.convolution]
        buf2202 = extern_kernels.convolution(buf2201, buf227, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2202, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2203 = buf2202; del buf2202  # reuse
        buf2204 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2053, input_2054, input_2055], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2203, primals_4117, primals_4118, primals_4119, primals_4120, primals_4121, buf2204, 2048, grid=grid(2048), stream=stream0)
        del primals_4117
        del primals_4121
        # Topologically Sorted Source Nodes: [input_2056], Original ATen: [aten.convolution]
        buf2205 = extern_kernels.convolution(buf2204, primals_4122, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2205, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf2206 = buf2188; del buf2188  # reuse
        buf2220 = buf2180; del buf2180  # reuse
        # Topologically Sorted Source Nodes: [input_2056, ll_14, input_2057, input_2058], Original ATen: [aten.convolution, aten.add, aten._native_batch_norm_legit_no_training, aten.relu, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_native_batch_norm_backward_relu_56.run(buf2205, primals_4123, buf2197, primals_4124, primals_4125, primals_4126, primals_4127, buf2206, buf2220, 4096, grid=grid(4096), stream=stream0)
        del primals_4124
        del primals_4127
        # Topologically Sorted Source Nodes: [input_2059], Original ATen: [aten.convolution]
        buf2207 = extern_kernels.convolution(buf2206, primals_4128, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2207, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2208 = buf2207; del buf2207  # reuse
        buf2209 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2059, input_2060, input_2061], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2208, primals_4129, primals_4130, primals_4131, primals_4132, primals_4133, buf2209, 2048, grid=grid(2048), stream=stream0)
        del primals_4129
        del primals_4133
        # Topologically Sorted Source Nodes: [input_2062], Original ATen: [aten.convolution]
        buf2210 = extern_kernels.convolution(buf2209, buf228, stride=(1, 1), padding=(1, 1), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2210, (4, 2, 16, 16), (512, 1, 32, 2))
        buf2211 = buf2210; del buf2210  # reuse
        buf2212 = empty_strided_cuda((4, 2, 16, 16), (512, 1, 32, 2), torch.float32)
        # Topologically Sorted Source Nodes: [input_2062, input_2063, input_2064], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_10.run(buf2211, primals_4135, primals_4136, primals_4137, primals_4138, primals_4139, buf2212, 2048, grid=grid(2048), stream=stream0)
        del primals_4135
        del primals_4139
        # Topologically Sorted Source Nodes: [input_2065], Original ATen: [aten.convolution]
        buf2213 = extern_kernels.convolution(buf2212, primals_4140, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2213, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf2214 = buf2213; del buf2213  # reuse
        # Topologically Sorted Source Nodes: [input_2056, ll_14, input_2065, ll_15], Original ATen: [aten.convolution, aten.add]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_49.run(buf2214, primals_4141, buf2205, primals_4123, buf2197, 4096, grid=grid(4096), stream=stream0)
        del primals_4123
        del primals_4141
        # Topologically Sorted Source Nodes: [input_2066], Original ATen: [aten.convolution]
        buf2215 = extern_kernels.convolution(buf2214, primals_4142, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2215, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf2216 = buf2215; del buf2215  # reuse
        buf2217 = buf2205; del buf2205  # reuse
        # Topologically Sorted Source Nodes: [input_2066, input_2067, input_2068], Original ATen: [aten.convolution, aten._native_batch_norm_legit_no_training, aten.relu]
        stream0 = get_raw_stream(0)
        triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_50.run(buf2216, primals_4143, primals_4144, primals_4145, primals_4146, primals_4147, buf2217, 4096, grid=grid(4096), stream=stream0)
        del primals_4143
        del primals_4147
        # Topologically Sorted Source Nodes: [tmpOut_3], Original ATen: [aten.convolution]
        buf2218 = extern_kernels.convolution(buf2217, primals_4148, stride=(1, 1), padding=(0, 0), dilation=(1, 1), transposed=False, output_padding=(0, 0), groups=1, bias=None)
        assert_size_stride(buf2218, (4, 4, 16, 16), (1024, 1, 64, 4))
        buf2219 = reinterpret_tensor(buf2197, (4, 4, 16, 16), (1024, 256, 16, 1), 0); del buf2197  # reuse
        # Topologically Sorted Source Nodes: [tmpOut_3], Original ATen: [aten.convolution]
        stream0 = get_raw_stream(0)
        triton_poi_fused_convolution_58.run(buf2218, primals_4149, buf2219, 16, 256, grid=grid(16, 256), stream=stream0)
        del primals_4149
        buf2228 = buf2137; del buf2137  # reuse
        buf2229 = buf2145; del buf2145  # reuse
        # Topologically Sorted Source Nodes: [input_1984, low3_58], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2228, primals_3979, buf2129, primals_3980, primals_3962, buf2229, 256, grid=grid(256), stream=stream0)
        del primals_3962
        del primals_3979
        del primals_3980
        buf2230 = buf2120; del buf2120  # reuse
        buf2231 = buf2129; del buf2129  # reuse
        # Topologically Sorted Source Nodes: [input_1966, low3_56], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2230, primals_3943, buf2112, primals_3944, primals_3926, buf2231, 256, grid=grid(256), stream=stream0)
        del primals_3926
        del primals_3943
        del primals_3944
        buf2232 = buf2103; del buf2103  # reuse
        buf2233 = buf2111; del buf2111  # reuse
        # Topologically Sorted Source Nodes: [input_1948, low3_54], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2232, primals_3907, buf2095, primals_3908, primals_3890, buf2233, 64, grid=grid(64), stream=stream0)
        del primals_3890
        del primals_3907
        del primals_3908
        buf2234 = buf2086; del buf2086  # reuse
        buf2235 = buf2095; del buf2095  # reuse
        # Topologically Sorted Source Nodes: [input_1930, low3_52], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2234, primals_3871, buf2078, primals_3872, primals_3854, buf2235, 64, grid=grid(64), stream=stream0)
        del primals_3854
        del primals_3871
        del primals_3872
        buf2237 = buf2060; del buf2060  # reuse
        buf2238 = buf2077; del buf2077  # reuse
        # Topologically Sorted Source Nodes: [input_1903, low3_49], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2237, primals_3817, buf2052, primals_3818, primals_3800, buf2238, 16, grid=grid(16), stream=stream0)
        del primals_3800
        del primals_3817
        del primals_3818
        buf2239 = buf2043; del buf2043  # reuse
        buf2240 = reinterpret_tensor(buf2052, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf2052  # reuse
        # Topologically Sorted Source Nodes: [input_1885, low2_24], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2239, primals_3781, buf2035, primals_3782, primals_3764, buf2240, 16, grid=grid(16), stream=stream0)
        del primals_3764
        del primals_3781
        del primals_3782
        buf2241 = buf2026; del buf2026  # reuse
        buf2242 = reinterpret_tensor(buf2035, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf2035  # reuse
        # Topologically Sorted Source Nodes: [input_1867, low2_22], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2241, primals_3745, buf2018, primals_3746, primals_3728, buf2242, 16, grid=grid(16), stream=stream0)
        del primals_3728
        del primals_3745
        del primals_3746
        buf2243 = buf2009; del buf2009  # reuse
        buf2244 = reinterpret_tensor(buf2018, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf2018  # reuse
        # Topologically Sorted Source Nodes: [input_1849, low1_79], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2243, primals_3709, buf2001, primals_3710, primals_3692, buf2244, 16, grid=grid(16), stream=stream0)
        del primals_3692
        del primals_3709
        del primals_3710
        buf2245 = buf1992; del buf1992  # reuse
        buf2246 = reinterpret_tensor(buf2001, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf2001  # reuse
        # Topologically Sorted Source Nodes: [input_1831, low1_77], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2245, primals_3673, buf1984, primals_3674, primals_3656, buf2246, 16, grid=grid(16), stream=stream0)
        del primals_3656
        del primals_3673
        del primals_3674
        buf2247 = reinterpret_tensor(buf1984, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1984  # reuse
        # Topologically Sorted Source Nodes: [low1_75], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62.run(buf1941, primals_3638, buf2247, 16, grid=grid(16), stream=stream0)
        del primals_3638
        buf2248 = buf1966; del buf1966  # reuse
        buf2249 = buf2078; del buf2078  # reuse
        # Topologically Sorted Source Nodes: [input_1804, up1_62], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2248, primals_3619, buf1958, primals_3620, primals_3602, buf2249, 64, grid=grid(64), stream=stream0)
        del primals_3602
        del primals_3619
        del primals_3620
        buf2250 = buf1949; del buf1949  # reuse
        # Topologically Sorted Source Nodes: [input_1786, up1_60], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_63.run(buf2250, primals_3583, buf1941, primals_3584, 64, grid=grid(64), stream=stream0)
        del primals_3583
        del primals_3584
        buf2252 = buf1923; del buf1923  # reuse
        buf2253 = buf1958; del buf1958  # reuse
        # Topologically Sorted Source Nodes: [input_1759, low1_72], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2252, primals_3529, buf1915, primals_3530, primals_3512, buf2253, 64, grid=grid(64), stream=stream0)
        del primals_3512
        del primals_3529
        del primals_3530
        buf2254 = buf1915; del buf1915  # reuse
        # Topologically Sorted Source Nodes: [low1_70], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64.run(buf1872, primals_3494, buf2254, 64, grid=grid(64), stream=stream0)
        del primals_3494
        buf2255 = buf1897; del buf1897  # reuse
        buf2256 = buf2112; del buf2112  # reuse
        # Topologically Sorted Source Nodes: [input_1732, up1_58], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2255, primals_3475, buf1889, primals_3476, primals_3458, buf2256, 256, grid=grid(256), stream=stream0)
        del primals_3458
        del primals_3475
        del primals_3476
        buf2257 = buf1880; del buf1880  # reuse
        # Topologically Sorted Source Nodes: [input_1714, up1_56], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_65.run(buf2257, primals_3439, buf1872, primals_3440, 256, grid=grid(256), stream=stream0)
        del primals_3439
        del primals_3440
        buf2259 = buf1854; del buf1854  # reuse
        buf2260 = buf1889; del buf1889  # reuse
        # Topologically Sorted Source Nodes: [input_1687, low1_67], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2259, primals_3385, buf1846, primals_3386, primals_3368, buf2260, 256, grid=grid(256), stream=stream0)
        del primals_3368
        del primals_3385
        del primals_3386
        buf2261 = buf1846; del buf1846  # reuse
        # Topologically Sorted Source Nodes: [low1_65], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66.run(buf1803, primals_3350, buf2261, 256, grid=grid(256), stream=stream0)
        del primals_3350
        buf2262 = buf1828; del buf1828  # reuse
        buf2263 = buf2179; del buf2179  # reuse
        # Topologically Sorted Source Nodes: [input_1660, up1_54], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2262, primals_3331, buf1820, primals_3332, primals_3314, buf2263, 1024, grid=grid(1024), stream=stream0)
        del primals_3314
        del primals_3331
        del primals_3332
        buf2264 = buf1811; del buf1811  # reuse
        # Topologically Sorted Source Nodes: [input_1642, up1_52], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_68.run(buf2264, primals_3295, buf1803, primals_3296, 1024, grid=grid(1024), stream=stream0)
        del primals_3295
        del primals_3296
        buf2266 = buf1785; del buf1785  # reuse
        buf2267 = buf1820; del buf1820  # reuse
        # Topologically Sorted Source Nodes: [input_1615, low1_62], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2266, primals_3241, buf1777, primals_3242, primals_3224, buf2267, 1024, grid=grid(1024), stream=stream0)
        del primals_3224
        del primals_3241
        del primals_3242
        buf2268 = buf1777; del buf1777  # reuse
        # Topologically Sorted Source Nodes: [low1_60], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69.run(buf1734, primals_3206, buf2268, 1024, grid=grid(1024), stream=stream0)
        del primals_3206
        buf2269 = buf1759; del buf1759  # reuse
        buf2270 = buf2218; del buf2218  # reuse
        # Topologically Sorted Source Nodes: [input_1588, up1_50], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2269, primals_3187, buf1751, primals_3188, primals_3170, buf2270, 4096, grid=grid(4096), stream=stream0)
        del primals_3170
        del primals_3187
        del primals_3188
        buf2271 = buf1742; del buf1742  # reuse
        # Topologically Sorted Source Nodes: [input_1570, up1_48], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_71.run(buf2271, primals_3151, buf1734, primals_3152, 4096, grid=grid(4096), stream=stream0)
        del primals_3151
        del primals_3152
        buf2272 = buf1716; del buf1716  # reuse
        buf2273 = buf1751; del buf1751  # reuse
        # Topologically Sorted Source Nodes: [input_1549, ll_10], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2272, primals_3103, buf1708, primals_3104, primals_3086, buf2273, 4096, grid=grid(4096), stream=stream0)
        del primals_3086
        del primals_3103
        del primals_3104
        buf2274 = buf1699; del buf1699  # reuse
        buf2275 = buf1708; del buf1708  # reuse
        # Topologically Sorted Source Nodes: [input_1531, ll_8], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2274, primals_3067, buf1691, primals_3068, primals_3050, buf2275, 4096, grid=grid(4096), stream=stream0)
        del primals_3050
        del primals_3067
        del primals_3068
        buf2276 = buf1682; del buf1682  # reuse
        buf2277 = buf2171; del buf2171  # reuse
        # Topologically Sorted Source Nodes: [input_1513, low3_46], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2276, primals_3031, buf1674, primals_3032, primals_3014, buf2277, 1024, grid=grid(1024), stream=stream0)
        del primals_3014
        del primals_3031
        del primals_3032
        buf2278 = buf1665; del buf1665  # reuse
        buf2279 = buf1674; del buf1674  # reuse
        # Topologically Sorted Source Nodes: [input_1495, low3_44], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2278, primals_2995, buf1657, primals_2996, primals_2978, buf2279, 1024, grid=grid(1024), stream=stream0)
        del primals_2978
        del primals_2995
        del primals_2996
        buf2280 = buf1648; del buf1648  # reuse
        buf2281 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1477, low3_42], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2280, primals_2959, buf1640, primals_2960, primals_2942, buf2281, 256, grid=grid(256), stream=stream0)
        del primals_2942
        del primals_2959
        del primals_2960
        buf2282 = buf1631; del buf1631  # reuse
        buf2283 = buf1640; del buf1640  # reuse
        # Topologically Sorted Source Nodes: [input_1459, low3_40], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2282, primals_2923, buf1623, primals_2924, primals_2906, buf2283, 256, grid=grid(256), stream=stream0)
        del primals_2906
        del primals_2923
        del primals_2924
        buf2284 = buf1614; del buf1614  # reuse
        buf2285 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_1441, low3_38], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2284, primals_2887, buf1606, primals_2888, primals_2870, buf2285, 64, grid=grid(64), stream=stream0)
        del primals_2870
        del primals_2887
        del primals_2888
        buf2286 = buf1597; del buf1597  # reuse
        buf2287 = buf1606; del buf1606  # reuse
        # Topologically Sorted Source Nodes: [input_1423, low3_36], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2286, primals_2851, buf1589, primals_2852, primals_2834, buf2287, 64, grid=grid(64), stream=stream0)
        del primals_2834
        del primals_2851
        del primals_2852
        buf2289 = buf1571; del buf1571  # reuse
        buf2290 = reinterpret_tensor(buf2069, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf2069  # reuse
        # Topologically Sorted Source Nodes: [input_1396, low3_33], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2289, primals_2797, buf1563, primals_2798, primals_2780, buf2290, 16, grid=grid(16), stream=stream0)
        del primals_2780
        del primals_2797
        del primals_2798
        buf2291 = buf1554; del buf1554  # reuse
        buf2292 = reinterpret_tensor(buf1563, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1563  # reuse
        # Topologically Sorted Source Nodes: [input_1378, low2_17], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2291, primals_2761, buf1546, primals_2762, primals_2744, buf2292, 16, grid=grid(16), stream=stream0)
        del primals_2744
        del primals_2761
        del primals_2762
        buf2293 = buf1537; del buf1537  # reuse
        buf2294 = reinterpret_tensor(buf1546, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1546  # reuse
        # Topologically Sorted Source Nodes: [input_1360, low2_15], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2293, primals_2725, buf1529, primals_2726, primals_2708, buf2294, 16, grid=grid(16), stream=stream0)
        del primals_2708
        del primals_2725
        del primals_2726
        buf2295 = buf1520; del buf1520  # reuse
        buf2296 = reinterpret_tensor(buf1529, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1529  # reuse
        # Topologically Sorted Source Nodes: [input_1342, low1_59], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2295, primals_2689, buf1512, primals_2690, primals_2672, buf2296, 16, grid=grid(16), stream=stream0)
        del primals_2672
        del primals_2689
        del primals_2690
        buf2297 = buf1503; del buf1503  # reuse
        buf2298 = reinterpret_tensor(buf1512, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1512  # reuse
        # Topologically Sorted Source Nodes: [input_1324, low1_57], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2297, primals_2653, buf1495, primals_2654, primals_2636, buf2298, 16, grid=grid(16), stream=stream0)
        del primals_2636
        del primals_2653
        del primals_2654
        buf2299 = reinterpret_tensor(buf1495, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1495  # reuse
        # Topologically Sorted Source Nodes: [low1_55], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62.run(buf1452, primals_2618, buf2299, 16, grid=grid(16), stream=stream0)
        del primals_2618
        buf2300 = buf1477; del buf1477  # reuse
        buf2301 = buf1589; del buf1589  # reuse
        # Topologically Sorted Source Nodes: [input_1297, up1_46], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2300, primals_2599, buf1469, primals_2600, primals_2582, buf2301, 64, grid=grid(64), stream=stream0)
        del primals_2582
        del primals_2599
        del primals_2600
        buf2302 = buf1460; del buf1460  # reuse
        # Topologically Sorted Source Nodes: [input_1279, up1_44], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_63.run(buf2302, primals_2563, buf1452, primals_2564, 64, grid=grid(64), stream=stream0)
        del primals_2563
        del primals_2564
        buf2304 = buf1434; del buf1434  # reuse
        buf2305 = buf1469; del buf1469  # reuse
        # Topologically Sorted Source Nodes: [input_1252, low1_52], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2304, primals_2509, buf1426, primals_2510, primals_2492, buf2305, 64, grid=grid(64), stream=stream0)
        del primals_2492
        del primals_2509
        del primals_2510
        buf2306 = buf1426; del buf1426  # reuse
        # Topologically Sorted Source Nodes: [low1_50], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64.run(buf1383, primals_2474, buf2306, 64, grid=grid(64), stream=stream0)
        del primals_2474
        buf2307 = buf1408; del buf1408  # reuse
        buf2308 = buf1623; del buf1623  # reuse
        # Topologically Sorted Source Nodes: [input_1225, up1_42], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2307, primals_2455, buf1400, primals_2456, primals_2438, buf2308, 256, grid=grid(256), stream=stream0)
        del primals_2438
        del primals_2455
        del primals_2456
        buf2309 = buf1391; del buf1391  # reuse
        # Topologically Sorted Source Nodes: [input_1207, up1_40], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_65.run(buf2309, primals_2419, buf1383, primals_2420, 256, grid=grid(256), stream=stream0)
        del primals_2419
        del primals_2420
        buf2311 = buf1365; del buf1365  # reuse
        buf2312 = buf1400; del buf1400  # reuse
        # Topologically Sorted Source Nodes: [input_1180, low1_47], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2311, primals_2365, buf1357, primals_2366, primals_2348, buf2312, 256, grid=grid(256), stream=stream0)
        del primals_2348
        del primals_2365
        del primals_2366
        buf2313 = buf1357; del buf1357  # reuse
        # Topologically Sorted Source Nodes: [low1_45], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66.run(buf1314, primals_2330, buf2313, 256, grid=grid(256), stream=stream0)
        del primals_2330
        buf2314 = buf1339; del buf1339  # reuse
        buf2315 = buf1657; del buf1657  # reuse
        # Topologically Sorted Source Nodes: [input_1153, up1_38], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2314, primals_2311, buf1331, primals_2312, primals_2294, buf2315, 1024, grid=grid(1024), stream=stream0)
        del primals_2294
        del primals_2311
        del primals_2312
        buf2316 = buf1322; del buf1322  # reuse
        # Topologically Sorted Source Nodes: [input_1135, up1_36], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_68.run(buf2316, primals_2275, buf1314, primals_2276, 1024, grid=grid(1024), stream=stream0)
        del primals_2275
        del primals_2276
        buf2318 = buf1296; del buf1296  # reuse
        buf2319 = buf1331; del buf1331  # reuse
        # Topologically Sorted Source Nodes: [input_1108, low1_42], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2318, primals_2221, buf1288, primals_2222, primals_2204, buf2319, 1024, grid=grid(1024), stream=stream0)
        del primals_2204
        del primals_2221
        del primals_2222
        buf2320 = buf1288; del buf1288  # reuse
        # Topologically Sorted Source Nodes: [low1_40], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69.run(buf1245, primals_2186, buf2320, 1024, grid=grid(1024), stream=stream0)
        del primals_2186
        buf2321 = buf1270; del buf1270  # reuse
        buf2322 = buf1691; del buf1691  # reuse
        # Topologically Sorted Source Nodes: [input_1081, up1_34], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2321, primals_2167, buf1262, primals_2168, primals_2150, buf2322, 4096, grid=grid(4096), stream=stream0)
        del primals_2150
        del primals_2167
        del primals_2168
        buf2323 = buf1253; del buf1253  # reuse
        # Topologically Sorted Source Nodes: [input_1063, up1_32], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_71.run(buf2323, primals_2131, buf1245, primals_2132, 4096, grid=grid(4096), stream=stream0)
        del primals_2131
        del primals_2132
        buf2324 = buf1227; del buf1227  # reuse
        buf2325 = buf1262; del buf1262  # reuse
        # Topologically Sorted Source Nodes: [input_1042, ll_6], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2324, primals_2083, buf1219, primals_2084, primals_2066, buf2325, 4096, grid=grid(4096), stream=stream0)
        del primals_2066
        del primals_2083
        del primals_2084
        buf2326 = buf1210; del buf1210  # reuse
        buf2327 = buf1219; del buf1219  # reuse
        # Topologically Sorted Source Nodes: [input_1024, ll_4], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2326, primals_2047, buf1202, primals_2048, primals_2030, buf2327, 4096, grid=grid(4096), stream=stream0)
        del primals_2030
        del primals_2047
        del primals_2048
        buf2328 = buf1193; del buf1193  # reuse
        buf2329 = buf2163; del buf2163  # reuse
        # Topologically Sorted Source Nodes: [input_1006, low3_30], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2328, primals_2011, buf1185, primals_2012, primals_1994, buf2329, 1024, grid=grid(1024), stream=stream0)
        del primals_1994
        del primals_2011
        del primals_2012
        buf2330 = buf1176; del buf1176  # reuse
        buf2331 = buf1185; del buf1185  # reuse
        # Topologically Sorted Source Nodes: [input_988, low3_28], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2330, primals_1975, buf1168, primals_1976, primals_1958, buf2331, 1024, grid=grid(1024), stream=stream0)
        del primals_1958
        del primals_1975
        del primals_1976
        buf2332 = buf1159; del buf1159  # reuse
        buf2333 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_970, low3_26], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2332, primals_1939, buf1151, primals_1940, primals_1922, buf2333, 256, grid=grid(256), stream=stream0)
        del primals_1922
        del primals_1939
        del primals_1940
        buf2334 = buf1142; del buf1142  # reuse
        buf2335 = buf1151; del buf1151  # reuse
        # Topologically Sorted Source Nodes: [input_952, low3_24], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2334, primals_1903, buf1134, primals_1904, primals_1886, buf2335, 256, grid=grid(256), stream=stream0)
        del primals_1886
        del primals_1903
        del primals_1904
        buf2336 = buf1125; del buf1125  # reuse
        buf2337 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_934, low3_22], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2336, primals_1867, buf1117, primals_1868, primals_1850, buf2337, 64, grid=grid(64), stream=stream0)
        del primals_1850
        del primals_1867
        del primals_1868
        buf2338 = buf1108; del buf1108  # reuse
        buf2339 = buf1117; del buf1117  # reuse
        # Topologically Sorted Source Nodes: [input_916, low3_20], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2338, primals_1831, buf1100, primals_1832, primals_1814, buf2339, 64, grid=grid(64), stream=stream0)
        del primals_1814
        del primals_1831
        del primals_1832
        buf2341 = buf1082; del buf1082  # reuse
        buf2342 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_889, low3_17], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2341, primals_1777, buf1074, primals_1778, primals_1760, buf2342, 16, grid=grid(16), stream=stream0)
        del primals_1760
        del primals_1777
        del primals_1778
        buf2343 = buf1065; del buf1065  # reuse
        buf2344 = reinterpret_tensor(buf1074, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1074  # reuse
        # Topologically Sorted Source Nodes: [input_871, low2_10], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2343, primals_1741, buf1057, primals_1742, primals_1724, buf2344, 16, grid=grid(16), stream=stream0)
        del primals_1724
        del primals_1741
        del primals_1742
        buf2345 = buf1048; del buf1048  # reuse
        buf2346 = reinterpret_tensor(buf1057, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1057  # reuse
        # Topologically Sorted Source Nodes: [input_853, low2_8], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2345, primals_1705, buf1040, primals_1706, primals_1688, buf2346, 16, grid=grid(16), stream=stream0)
        del primals_1688
        del primals_1705
        del primals_1706
        buf2347 = buf1031; del buf1031  # reuse
        buf2348 = reinterpret_tensor(buf1040, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1040  # reuse
        # Topologically Sorted Source Nodes: [input_835, low1_39], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2347, primals_1669, buf1023, primals_1670, primals_1652, buf2348, 16, grid=grid(16), stream=stream0)
        del primals_1652
        del primals_1669
        del primals_1670
        buf2349 = buf1014; del buf1014  # reuse
        buf2350 = reinterpret_tensor(buf1023, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1023  # reuse
        # Topologically Sorted Source Nodes: [input_817, low1_37], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2349, primals_1633, buf1006, primals_1634, primals_1616, buf2350, 16, grid=grid(16), stream=stream0)
        del primals_1616
        del primals_1633
        del primals_1634
        buf2351 = reinterpret_tensor(buf1006, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf1006  # reuse
        # Topologically Sorted Source Nodes: [low1_35], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62.run(buf963, primals_1598, buf2351, 16, grid=grid(16), stream=stream0)
        del primals_1598
        buf2352 = buf988; del buf988  # reuse
        buf2353 = buf1100; del buf1100  # reuse
        # Topologically Sorted Source Nodes: [input_790, up1_30], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2352, primals_1579, buf980, primals_1580, primals_1562, buf2353, 64, grid=grid(64), stream=stream0)
        del primals_1562
        del primals_1579
        del primals_1580
        buf2354 = buf971; del buf971  # reuse
        # Topologically Sorted Source Nodes: [input_772, up1_28], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_63.run(buf2354, primals_1543, buf963, primals_1544, 64, grid=grid(64), stream=stream0)
        del primals_1543
        del primals_1544
        buf2356 = buf945; del buf945  # reuse
        buf2357 = buf980; del buf980  # reuse
        # Topologically Sorted Source Nodes: [input_745, low1_32], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2356, primals_1489, buf937, primals_1490, primals_1472, buf2357, 64, grid=grid(64), stream=stream0)
        del primals_1472
        del primals_1489
        del primals_1490
        buf2358 = buf937; del buf937  # reuse
        # Topologically Sorted Source Nodes: [low1_30], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64.run(buf894, primals_1454, buf2358, 64, grid=grid(64), stream=stream0)
        del primals_1454
        buf2359 = buf919; del buf919  # reuse
        buf2360 = buf1134; del buf1134  # reuse
        # Topologically Sorted Source Nodes: [input_718, up1_26], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2359, primals_1435, buf911, primals_1436, primals_1418, buf2360, 256, grid=grid(256), stream=stream0)
        del primals_1418
        del primals_1435
        del primals_1436
        buf2361 = buf902; del buf902  # reuse
        # Topologically Sorted Source Nodes: [input_700, up1_24], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_65.run(buf2361, primals_1399, buf894, primals_1400, 256, grid=grid(256), stream=stream0)
        del primals_1399
        del primals_1400
        buf2363 = buf876; del buf876  # reuse
        buf2364 = buf911; del buf911  # reuse
        # Topologically Sorted Source Nodes: [input_673, low1_27], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2363, primals_1345, buf868, primals_1346, primals_1328, buf2364, 256, grid=grid(256), stream=stream0)
        del primals_1328
        del primals_1345
        del primals_1346
        buf2365 = buf868; del buf868  # reuse
        # Topologically Sorted Source Nodes: [low1_25], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66.run(buf825, primals_1310, buf2365, 256, grid=grid(256), stream=stream0)
        del primals_1310
        buf2366 = buf850; del buf850  # reuse
        buf2367 = buf1168; del buf1168  # reuse
        # Topologically Sorted Source Nodes: [input_646, up1_22], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2366, primals_1291, buf842, primals_1292, primals_1274, buf2367, 1024, grid=grid(1024), stream=stream0)
        del primals_1274
        del primals_1291
        del primals_1292
        buf2368 = buf833; del buf833  # reuse
        # Topologically Sorted Source Nodes: [input_628, up1_20], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_68.run(buf2368, primals_1255, buf825, primals_1256, 1024, grid=grid(1024), stream=stream0)
        del primals_1255
        del primals_1256
        buf2370 = buf807; del buf807  # reuse
        buf2371 = buf842; del buf842  # reuse
        # Topologically Sorted Source Nodes: [input_601, low1_22], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2370, primals_1201, buf799, primals_1202, primals_1184, buf2371, 1024, grid=grid(1024), stream=stream0)
        del primals_1184
        del primals_1201
        del primals_1202
        buf2372 = buf799; del buf799  # reuse
        # Topologically Sorted Source Nodes: [low1_20], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69.run(buf756, primals_1166, buf2372, 1024, grid=grid(1024), stream=stream0)
        del primals_1166
        buf2373 = buf781; del buf781  # reuse
        buf2374 = buf1202; del buf1202  # reuse
        # Topologically Sorted Source Nodes: [input_574, up1_18], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2373, primals_1147, buf773, primals_1148, primals_1130, buf2374, 4096, grid=grid(4096), stream=stream0)
        del primals_1130
        del primals_1147
        del primals_1148
        buf2375 = buf764; del buf764  # reuse
        # Topologically Sorted Source Nodes: [input_556, up1_16], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_71.run(buf2375, primals_1111, buf756, primals_1112, 4096, grid=grid(4096), stream=stream0)
        del primals_1111
        del primals_1112
        buf2376 = buf738; del buf738  # reuse
        buf2377 = buf773; del buf773  # reuse
        # Topologically Sorted Source Nodes: [input_535, ll_2], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2376, primals_1063, buf730, primals_1064, primals_1046, buf2377, 4096, grid=grid(4096), stream=stream0)
        del primals_1046
        del primals_1063
        del primals_1064
        buf2378 = buf721; del buf721  # reuse
        buf2379 = buf730; del buf730  # reuse
        # Topologically Sorted Source Nodes: [input_517, ll], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2378, primals_1027, buf713, primals_1028, primals_1010, buf2379, 4096, grid=grid(4096), stream=stream0)
        del primals_1010
        del primals_1027
        del primals_1028
        buf2380 = buf703; del buf703  # reuse
        buf2381 = empty_strided_cuda((4, 4, 8, 8), (256, 1, 32, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_499, low3_14], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2380, primals_991, buf695, primals_992, primals_974, buf2381, 1024, grid=grid(1024), stream=stream0)
        del primals_974
        del primals_991
        del primals_992
        buf2382 = buf686; del buf686  # reuse
        buf2383 = buf695; del buf695  # reuse
        # Topologically Sorted Source Nodes: [input_481, low3_12], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2382, primals_955, buf678, primals_956, primals_938, buf2383, 1024, grid=grid(1024), stream=stream0)
        del primals_938
        del primals_955
        del primals_956
        buf2384 = buf668; del buf668  # reuse
        buf2385 = empty_strided_cuda((4, 4, 4, 4), (64, 1, 16, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_463, low3_10], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2384, primals_919, buf660, primals_920, primals_902, buf2385, 256, grid=grid(256), stream=stream0)
        del primals_902
        del primals_919
        del primals_920
        buf2386 = buf651; del buf651  # reuse
        buf2387 = buf660; del buf660  # reuse
        # Topologically Sorted Source Nodes: [input_445, low3_8], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2386, primals_883, buf643, primals_884, primals_866, buf2387, 256, grid=grid(256), stream=stream0)
        del primals_866
        del primals_883
        del primals_884
        buf2388 = buf633; del buf633  # reuse
        buf2389 = empty_strided_cuda((4, 4, 2, 2), (16, 1, 8, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_427, low3_6], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2388, primals_847, buf625, primals_848, primals_830, buf2389, 64, grid=grid(64), stream=stream0)
        del primals_830
        del primals_847
        del primals_848
        buf2390 = buf616; del buf616  # reuse
        buf2391 = buf625; del buf625  # reuse
        # Topologically Sorted Source Nodes: [input_409, low3_4], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2390, primals_811, buf608, primals_812, primals_794, buf2391, 64, grid=grid(64), stream=stream0)
        del primals_794
        del primals_811
        del primals_812
        buf2393 = buf589; del buf589  # reuse
        buf2394 = empty_strided_cuda((4, 4, 1, 1), (4, 1, 4, 4), torch.float32)
        # Topologically Sorted Source Nodes: [input_382, low3_1], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2393, primals_757, buf581, primals_758, primals_740, buf2394, 16, grid=grid(16), stream=stream0)
        del primals_740
        del primals_757
        del primals_758
        buf2395 = buf572; del buf572  # reuse
        buf2396 = reinterpret_tensor(buf581, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf581  # reuse
        # Topologically Sorted Source Nodes: [input_364, low2_3], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2395, primals_721, buf564, primals_722, primals_704, buf2396, 16, grid=grid(16), stream=stream0)
        del primals_704
        del primals_721
        del primals_722
        buf2397 = buf555; del buf555  # reuse
        buf2398 = reinterpret_tensor(buf564, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf564  # reuse
        # Topologically Sorted Source Nodes: [input_346, low2_1], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2397, primals_685, buf547, primals_686, primals_668, buf2398, 16, grid=grid(16), stream=stream0)
        del primals_668
        del primals_685
        del primals_686
        buf2399 = buf538; del buf538  # reuse
        buf2400 = reinterpret_tensor(buf547, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf547  # reuse
        # Topologically Sorted Source Nodes: [input_328, low1_19], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2399, primals_649, buf530, primals_650, primals_632, buf2400, 16, grid=grid(16), stream=stream0)
        del primals_632
        del primals_649
        del primals_650
        buf2401 = buf521; del buf521  # reuse
        buf2402 = reinterpret_tensor(buf530, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf530  # reuse
        # Topologically Sorted Source Nodes: [input_310, low1_17], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_61.run(buf2401, primals_613, buf513, primals_614, primals_596, buf2402, 16, grid=grid(16), stream=stream0)
        del primals_596
        del primals_613
        del primals_614
        buf2403 = reinterpret_tensor(buf513, (4, 4, 1, 1), (4, 1, 4, 4), 0); del buf513  # reuse
        # Topologically Sorted Source Nodes: [low1_15], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_62.run(buf470, primals_578, buf2403, 16, grid=grid(16), stream=stream0)
        del primals_578
        buf2404 = buf495; del buf495  # reuse
        buf2405 = buf608; del buf608  # reuse
        # Topologically Sorted Source Nodes: [input_283, up1_14], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2404, primals_559, buf487, primals_560, primals_542, buf2405, 64, grid=grid(64), stream=stream0)
        del primals_542
        del primals_559
        del primals_560
        buf2406 = buf478; del buf478  # reuse
        # Topologically Sorted Source Nodes: [input_265, up1_12], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_63.run(buf2406, primals_523, buf470, primals_524, 64, grid=grid(64), stream=stream0)
        del primals_523
        del primals_524
        buf2408 = buf452; del buf452  # reuse
        buf2409 = buf487; del buf487  # reuse
        # Topologically Sorted Source Nodes: [input_238, low1_12], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_60.run(buf2408, primals_469, buf444, primals_470, primals_452, buf2409, 64, grid=grid(64), stream=stream0)
        del primals_452
        del primals_469
        del primals_470
        buf2410 = buf444; del buf444  # reuse
        # Topologically Sorted Source Nodes: [low1_10], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_64.run(buf401, primals_434, buf2410, 64, grid=grid(64), stream=stream0)
        del primals_434
        buf2411 = buf426; del buf426  # reuse
        buf2412 = buf643; del buf643  # reuse
        # Topologically Sorted Source Nodes: [input_211, up1_10], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2411, primals_415, buf418, primals_416, primals_398, buf2412, 256, grid=grid(256), stream=stream0)
        del primals_398
        del primals_415
        del primals_416
        buf2413 = buf409; del buf409  # reuse
        # Topologically Sorted Source Nodes: [input_193, up1_8], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_65.run(buf2413, primals_379, buf401, primals_380, 256, grid=grid(256), stream=stream0)
        del primals_379
        del primals_380
        buf2415 = buf383; del buf383  # reuse
        buf2416 = buf418; del buf418  # reuse
        # Topologically Sorted Source Nodes: [input_166, low1_7], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_59.run(buf2415, primals_325, buf375, primals_326, primals_308, buf2416, 256, grid=grid(256), stream=stream0)
        del primals_308
        del primals_325
        del primals_326
        buf2417 = buf375; del buf375  # reuse
        # Topologically Sorted Source Nodes: [low1_5], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_66.run(buf332, primals_290, buf2417, 256, grid=grid(256), stream=stream0)
        del primals_290
        buf2418 = buf357; del buf357  # reuse
        buf2419 = buf678; del buf678  # reuse
        # Topologically Sorted Source Nodes: [input_139, up1_6], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2418, primals_271, buf349, primals_272, primals_254, buf2419, 1024, grid=grid(1024), stream=stream0)
        del primals_254
        del primals_271
        del primals_272
        buf2420 = buf340; del buf340  # reuse
        # Topologically Sorted Source Nodes: [input_121, up1_4], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_68.run(buf2420, primals_235, buf332, primals_236, 1024, grid=grid(1024), stream=stream0)
        del primals_235
        del primals_236
        buf2422 = buf314; del buf314  # reuse
        buf2423 = buf349; del buf349  # reuse
        # Topologically Sorted Source Nodes: [input_94, low1_2], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_67.run(buf2422, primals_181, buf306, primals_182, primals_164, buf2423, 1024, grid=grid(1024), stream=stream0)
        del primals_164
        del primals_181
        del primals_182
        buf2424 = buf306; del buf306  # reuse
        # Topologically Sorted Source Nodes: [low1], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_69.run(buf263, primals_146, buf2424, 1024, grid=grid(1024), stream=stream0)
        del primals_146
        buf2425 = buf288; del buf288  # reuse
        buf2426 = buf713; del buf713  # reuse
        # Topologically Sorted Source Nodes: [input_67, up1_2], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_70.run(buf2425, primals_127, buf280, primals_128, primals_110, buf2426, 4096, grid=grid(4096), stream=stream0)
        del buf280
        del primals_110
        del primals_127
        del primals_128
        buf2427 = buf271; del buf271  # reuse
        # Topologically Sorted Source Nodes: [input_49, up1], Original ATen: [aten.convolution, aten.add, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_add_convolution_native_batch_norm_backward_71.run(buf2427, primals_91, buf263, primals_92, 4096, grid=grid(4096), stream=stream0)
        del primals_91
        del primals_92
        buf2428 = empty_strided_cuda((4, 128, 16, 16), (32768, 1, 2048, 128), torch.float32)
        # Topologically Sorted Source Nodes: [input_17], Original ATen: [aten.max_pool2d_with_indices, aten.native_batch_norm_backward]
        stream0 = get_raw_stream(0)
        triton_poi_fused_max_pool2d_with_indices_native_batch_norm_backward_72.run(buf242, primals_32, buf2428, 131072, grid=grid(131072), stream=stream0)
        del primals_32
    return (buf752, buf1241, buf1730, buf2219, buf0, buf1, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_12, primals_14, primals_15, primals_16, buf2, primals_20, primals_21, primals_22, primals_24, primals_26, primals_27, primals_28, primals_30, primals_33, primals_34, primals_36, primals_38, primals_39, primals_40, buf3, primals_44, primals_45, primals_46, primals_48, primals_50, primals_51, primals_52, primals_54, primals_56, primals_57, primals_58, buf4, primals_62, primals_63, primals_64, primals_66, primals_68, primals_69, primals_70, primals_72, primals_74, primals_75, primals_76, primals_78, primals_80, primals_81, primals_82, buf5, primals_86, primals_87, primals_88, primals_90, primals_93, primals_94, primals_96, primals_98, primals_99, primals_100, buf6, primals_104, primals_105, primals_106, primals_108, primals_111, primals_112, primals_114, primals_116, primals_117, primals_118, buf7, primals_122, primals_123, primals_124, primals_126, primals_129, primals_130, primals_132, primals_134, primals_135, primals_136, buf8, primals_140, primals_141, primals_142, primals_144, primals_147, primals_148, primals_150, primals_152, primals_153, primals_154, buf9, primals_158, primals_159, primals_160, primals_162, primals_165, primals_166, primals_168, primals_170, primals_171, primals_172, buf10, primals_176, primals_177, primals_178, primals_180, primals_183, primals_184, primals_186, primals_188, primals_189, primals_190, buf11, primals_194, primals_195, primals_196, primals_198, primals_201, primals_202, primals_204, primals_206, primals_207, primals_208, buf12, primals_212, primals_213, primals_214, primals_216, primals_218, primals_219, primals_220, primals_222, primals_224, primals_225, primals_226, buf13, primals_230, primals_231, primals_232, primals_234, primals_237, primals_238, primals_240, primals_242, primals_243, primals_244, buf14, primals_248, primals_249, primals_250, primals_252, primals_255, primals_256, primals_258, primals_260, primals_261, primals_262, buf15, primals_266, primals_267, primals_268, primals_270, primals_273, primals_274, primals_276, primals_278, primals_279, primals_280, buf16, primals_284, primals_285, primals_286, primals_288, primals_291, primals_292, primals_294, primals_296, primals_297, primals_298, buf17, primals_302, primals_303, primals_304, primals_306, primals_309, primals_310, primals_312, primals_314, primals_315, primals_316, buf18, primals_320, primals_321, primals_322, primals_324, primals_327, primals_328, primals_330, primals_332, primals_333, primals_334, buf19, primals_338, primals_339, primals_340, primals_342, primals_345, primals_346, primals_348, primals_350, primals_351, primals_352, buf20, primals_356, primals_357, primals_358, primals_360, primals_362, primals_363, primals_364, primals_366, primals_368, primals_369, primals_370, buf21, primals_374, primals_375, primals_376, primals_378, primals_381, primals_382, primals_384, primals_386, primals_387, primals_388, buf22, primals_392, primals_393, primals_394, primals_396, primals_399, primals_400, primals_402, primals_404, primals_405, primals_406, buf23, primals_410, primals_411, primals_412, primals_414, primals_417, primals_418, primals_420, primals_422, primals_423, primals_424, buf24, primals_428, primals_429, primals_430, primals_432, primals_435, primals_436, primals_438, primals_440, primals_441, primals_442, buf25, primals_446, primals_447, primals_448, primals_450, primals_453, primals_454, primals_456, primals_458, primals_459, primals_460, buf26, primals_464, primals_465, primals_466, primals_468, primals_471, primals_472, primals_474, primals_476, primals_477, primals_478, buf27, primals_482, primals_483, primals_484, primals_486, primals_489, primals_490, primals_492, primals_494, primals_495, primals_496, buf28, primals_500, primals_501, primals_502, primals_504, primals_506, primals_507, primals_508, primals_510, primals_512, primals_513, primals_514, buf29, primals_518, primals_519, primals_520, primals_522, primals_525, primals_526, primals_528, primals_530, primals_531, primals_532, buf30, primals_536, primals_537, primals_538, primals_540, primals_543, primals_544, primals_546, primals_548, primals_549, primals_550, buf31, primals_554, primals_555, primals_556, primals_558, primals_561, primals_562, primals_564, primals_566, primals_567, primals_568, buf32, primals_572, primals_573, primals_574, primals_576, primals_579, primals_580, primals_582, primals_584, primals_585, primals_586, buf33, primals_590, primals_591, primals_592, primals_594, primals_597, primals_598, primals_600, primals_602, primals_603, primals_604, buf34, primals_608, primals_609, primals_610, primals_612, primals_615, primals_616, primals_618, primals_620, primals_621, primals_622, buf35, primals_626, primals_627, primals_628, primals_630, primals_633, primals_634, primals_636, primals_638, primals_639, primals_640, buf36, primals_644, primals_645, primals_646, primals_648, primals_651, primals_652, primals_654, primals_656, primals_657, primals_658, buf37, primals_662, primals_663, primals_664, primals_666, primals_669, primals_670, primals_672, primals_674, primals_675, primals_676, buf38, primals_680, primals_681, primals_682, primals_684, primals_687, primals_688, primals_690, primals_692, primals_693, primals_694, buf39, primals_698, primals_699, primals_700, primals_702, primals_705, primals_706, primals_708, primals_710, primals_711, primals_712, buf40, primals_716, primals_717, primals_718, primals_720, primals_723, primals_724, primals_726, primals_728, primals_729, primals_730, buf41, primals_734, primals_735, primals_736, primals_738, primals_741, primals_742, primals_744, primals_746, primals_747, primals_748, buf42, primals_752, primals_753, primals_754, primals_756, primals_759, primals_760, primals_762, primals_764, primals_765, primals_766, buf43, primals_770, primals_771, primals_772, primals_774, primals_777, primals_778, primals_780, primals_782, primals_783, primals_784, buf44, primals_788, primals_789, primals_790, primals_792, primals_795, primals_796, primals_798, primals_800, primals_801, primals_802, buf45, primals_806, primals_807, primals_808, primals_810, primals_813, primals_814, primals_816, primals_818, primals_819, primals_820, buf46, primals_824, primals_825, primals_826, primals_828, primals_831, primals_832, primals_834, primals_836, primals_837, primals_838, buf47, primals_842, primals_843, primals_844, primals_846, primals_849, primals_850, primals_852, primals_854, primals_855, primals_856, buf48, primals_860, primals_861, primals_862, primals_864, primals_867, primals_868, primals_870, primals_872, primals_873, primals_874, buf49, primals_878, primals_879, primals_880, primals_882, primals_885, primals_886, primals_888, primals_890, primals_891, primals_892, buf50, primals_896, primals_897, primals_898, primals_900, primals_903, primals_904, primals_906, primals_908, primals_909, primals_910, buf51, primals_914, primals_915, primals_916, primals_918, primals_921, primals_922, primals_924, primals_926, primals_927, primals_928, buf52, primals_932, primals_933, primals_934, primals_936, primals_939, primals_940, primals_942, primals_944, primals_945, primals_946, buf53, primals_950, primals_951, primals_952, primals_954, primals_957, primals_958, primals_960, primals_962, primals_963, primals_964, buf54, primals_968, primals_969, primals_970, primals_972, primals_975, primals_976, primals_978, primals_980, primals_981, primals_982, buf55, primals_986, primals_987, primals_988, primals_990, primals_993, primals_994, primals_996, primals_998, primals_999, primals_1000, buf56, primals_1004, primals_1005, primals_1006, primals_1008, primals_1011, primals_1012, primals_1014, primals_1016, primals_1017, primals_1018, buf57, primals_1022, primals_1023, primals_1024, primals_1026, primals_1029, primals_1030, primals_1032, primals_1034, primals_1035, primals_1036, buf58, primals_1040, primals_1041, primals_1042, primals_1044, primals_1047, primals_1048, primals_1050, primals_1052, primals_1053, primals_1054, buf59, primals_1058, primals_1059, primals_1060, primals_1062, primals_1065, primals_1066, primals_1068, primals_1070, primals_1071, primals_1072, buf60, primals_1076, primals_1077, primals_1078, primals_1080, primals_1082, primals_1084, primals_1085, primals_1086, primals_1088, primals_1090, primals_1092, primals_1094, primals_1095, primals_1096, primals_1098, primals_1100, primals_1101, primals_1102, buf61, primals_1106, primals_1107, primals_1108, primals_1110, primals_1113, primals_1114, primals_1116, primals_1118, primals_1119, primals_1120, buf62, primals_1124, primals_1125, primals_1126, primals_1128, primals_1131, primals_1132, primals_1134, primals_1136, primals_1137, primals_1138, buf63, primals_1142, primals_1143, primals_1144, primals_1146, primals_1149, primals_1150, primals_1152, primals_1154, primals_1155, primals_1156, buf64, primals_1160, primals_1161, primals_1162, primals_1164, primals_1167, primals_1168, primals_1170, primals_1172, primals_1173, primals_1174, buf65, primals_1178, primals_1179, primals_1180, primals_1182, primals_1185, primals_1186, primals_1188, primals_1190, primals_1191, primals_1192, buf66, primals_1196, primals_1197, primals_1198, primals_1200, primals_1203, primals_1204, primals_1206, primals_1208, primals_1209, primals_1210, buf67, primals_1214, primals_1215, primals_1216, primals_1218, primals_1221, primals_1222, primals_1224, primals_1226, primals_1227, primals_1228, buf68, primals_1232, primals_1233, primals_1234, primals_1236, primals_1238, primals_1239, primals_1240, primals_1242, primals_1244, primals_1245, primals_1246, buf69, primals_1250, primals_1251, primals_1252, primals_1254, primals_1257, primals_1258, primals_1260, primals_1262, primals_1263, primals_1264, buf70, primals_1268, primals_1269, primals_1270, primals_1272, primals_1275, primals_1276, primals_1278, primals_1280, primals_1281, primals_1282, buf71, primals_1286, primals_1287, primals_1288, primals_1290, primals_1293, primals_1294, primals_1296, primals_1298, primals_1299, primals_1300, buf72, primals_1304, primals_1305, primals_1306, primals_1308, primals_1311, primals_1312, primals_1314, primals_1316, primals_1317, primals_1318, buf73, primals_1322, primals_1323, primals_1324, primals_1326, primals_1329, primals_1330, primals_1332, primals_1334, primals_1335, primals_1336, buf74, primals_1340, primals_1341, primals_1342, primals_1344, primals_1347, primals_1348, primals_1350, primals_1352, primals_1353, primals_1354, buf75, primals_1358, primals_1359, primals_1360, primals_1362, primals_1365, primals_1366, primals_1368, primals_1370, primals_1371, primals_1372, buf76, primals_1376, primals_1377, primals_1378, primals_1380, primals_1382, primals_1383, primals_1384, primals_1386, primals_1388, primals_1389, primals_1390, buf77, primals_1394, primals_1395, primals_1396, primals_1398, primals_1401, primals_1402, primals_1404, primals_1406, primals_1407, primals_1408, buf78, primals_1412, primals_1413, primals_1414, primals_1416, primals_1419, primals_1420, primals_1422, primals_1424, primals_1425, primals_1426, buf79, primals_1430, primals_1431, primals_1432, primals_1434, primals_1437, primals_1438, primals_1440, primals_1442, primals_1443, primals_1444, buf80, primals_1448, primals_1449, primals_1450, primals_1452, primals_1455, primals_1456, primals_1458, primals_1460, primals_1461, primals_1462, buf81, primals_1466, primals_1467, primals_1468, primals_1470, primals_1473, primals_1474, primals_1476, primals_1478, primals_1479, primals_1480, buf82, primals_1484, primals_1485, primals_1486, primals_1488, primals_1491, primals_1492, primals_1494, primals_1496, primals_1497, primals_1498, buf83, primals_1502, primals_1503, primals_1504, primals_1506, primals_1509, primals_1510, primals_1512, primals_1514, primals_1515, primals_1516, buf84, primals_1520, primals_1521, primals_1522, primals_1524, primals_1526, primals_1527, primals_1528, primals_1530, primals_1532, primals_1533, primals_1534, buf85, primals_1538, primals_1539, primals_1540, primals_1542, primals_1545, primals_1546, primals_1548, primals_1550, primals_1551, primals_1552, buf86, primals_1556, primals_1557, primals_1558, primals_1560, primals_1563, primals_1564, primals_1566, primals_1568, primals_1569, primals_1570, buf87, primals_1574, primals_1575, primals_1576, primals_1578, primals_1581, primals_1582, primals_1584, primals_1586, primals_1587, primals_1588, buf88, primals_1592, primals_1593, primals_1594, primals_1596, primals_1599, primals_1600, primals_1602, primals_1604, primals_1605, primals_1606, buf89, primals_1610, primals_1611, primals_1612, primals_1614, primals_1617, primals_1618, primals_1620, primals_1622, primals_1623, primals_1624, buf90, primals_1628, primals_1629, primals_1630, primals_1632, primals_1635, primals_1636, primals_1638, primals_1640, primals_1641, primals_1642, buf91, primals_1646, primals_1647, primals_1648, primals_1650, primals_1653, primals_1654, primals_1656, primals_1658, primals_1659, primals_1660, buf92, primals_1664, primals_1665, primals_1666, primals_1668, primals_1671, primals_1672, primals_1674, primals_1676, primals_1677, primals_1678, buf93, primals_1682, primals_1683, primals_1684, primals_1686, primals_1689, primals_1690, primals_1692, primals_1694, primals_1695, primals_1696, buf94, primals_1700, primals_1701, primals_1702, primals_1704, primals_1707, primals_1708, primals_1710, primals_1712, primals_1713, primals_1714, buf95, primals_1718, primals_1719, primals_1720, primals_1722, primals_1725, primals_1726, primals_1728, primals_1730, primals_1731, primals_1732, buf96, primals_1736, primals_1737, primals_1738, primals_1740, primals_1743, primals_1744, primals_1746, primals_1748, primals_1749, primals_1750, buf97, primals_1754, primals_1755, primals_1756, primals_1758, primals_1761, primals_1762, primals_1764, primals_1766, primals_1767, primals_1768, buf98, primals_1772, primals_1773, primals_1774, primals_1776, primals_1779, primals_1780, primals_1782, primals_1784, primals_1785, primals_1786, buf99, primals_1790, primals_1791, primals_1792, primals_1794, primals_1797, primals_1798, primals_1800, primals_1802, primals_1803, primals_1804, buf100, primals_1808, primals_1809, primals_1810, primals_1812, primals_1815, primals_1816, primals_1818, primals_1820, primals_1821, primals_1822, buf101, primals_1826, primals_1827, primals_1828, primals_1830, primals_1833, primals_1834, primals_1836, primals_1838, primals_1839, primals_1840, buf102, primals_1844, primals_1845, primals_1846, primals_1848, primals_1851, primals_1852, primals_1854, primals_1856, primals_1857, primals_1858, buf103, primals_1862, primals_1863, primals_1864, primals_1866, primals_1869, primals_1870, primals_1872, primals_1874, primals_1875, primals_1876, buf104, primals_1880, primals_1881, primals_1882, primals_1884, primals_1887, primals_1888, primals_1890, primals_1892, primals_1893, primals_1894, buf105, primals_1898, primals_1899, primals_1900, primals_1902, primals_1905, primals_1906, primals_1908, primals_1910, primals_1911, primals_1912, buf106, primals_1916, primals_1917, primals_1918, primals_1920, primals_1923, primals_1924, primals_1926, primals_1928, primals_1929, primals_1930, buf107, primals_1934, primals_1935, primals_1936, primals_1938, primals_1941, primals_1942, primals_1944, primals_1946, primals_1947, primals_1948, buf108, primals_1952, primals_1953, primals_1954, primals_1956, primals_1959, primals_1960, primals_1962, primals_1964, primals_1965, primals_1966, buf109, primals_1970, primals_1971, primals_1972, primals_1974, primals_1977, primals_1978, primals_1980, primals_1982, primals_1983, primals_1984, buf110, primals_1988, primals_1989, primals_1990, primals_1992, primals_1995, primals_1996, primals_1998, primals_2000, primals_2001, primals_2002, buf111, primals_2006, primals_2007, primals_2008, primals_2010, primals_2013, primals_2014, primals_2016, primals_2018, primals_2019, primals_2020, buf112, primals_2024, primals_2025, primals_2026, primals_2028, primals_2031, primals_2032, primals_2034, primals_2036, primals_2037, primals_2038, buf113, primals_2042, primals_2043, primals_2044, primals_2046, primals_2049, primals_2050, primals_2052, primals_2054, primals_2055, primals_2056, buf114, primals_2060, primals_2061, primals_2062, primals_2064, primals_2067, primals_2068, primals_2070, primals_2072, primals_2073, primals_2074, buf115, primals_2078, primals_2079, primals_2080, primals_2082, primals_2085, primals_2086, primals_2088, primals_2090, primals_2091, primals_2092, buf116, primals_2096, primals_2097, primals_2098, primals_2100, primals_2102, primals_2104, primals_2105, primals_2106, primals_2108, primals_2110, primals_2112, primals_2114, primals_2115, primals_2116, primals_2118, primals_2120, primals_2121, primals_2122, buf117, primals_2126, primals_2127, primals_2128, primals_2130, primals_2133, primals_2134, primals_2136, primals_2138, primals_2139, primals_2140, buf118, primals_2144, primals_2145, primals_2146, primals_2148, primals_2151, primals_2152, primals_2154, primals_2156, primals_2157, primals_2158, buf119, primals_2162, primals_2163, primals_2164, primals_2166, primals_2169, primals_2170, primals_2172, primals_2174, primals_2175, primals_2176, buf120, primals_2180, primals_2181, primals_2182, primals_2184, primals_2187, primals_2188, primals_2190, primals_2192, primals_2193, primals_2194, buf121, primals_2198, primals_2199, primals_2200, primals_2202, primals_2205, primals_2206, primals_2208, primals_2210, primals_2211, primals_2212, buf122, primals_2216, primals_2217, primals_2218, primals_2220, primals_2223, primals_2224, primals_2226, primals_2228, primals_2229, primals_2230, buf123, primals_2234, primals_2235, primals_2236, primals_2238, primals_2241, primals_2242, primals_2244, primals_2246, primals_2247, primals_2248, buf124, primals_2252, primals_2253, primals_2254, primals_2256, primals_2258, primals_2259, primals_2260, primals_2262, primals_2264, primals_2265, primals_2266, buf125, primals_2270, primals_2271, primals_2272, primals_2274, primals_2277, primals_2278, primals_2280, primals_2282, primals_2283, primals_2284, buf126, primals_2288, primals_2289, primals_2290, primals_2292, primals_2295, primals_2296, primals_2298, primals_2300, primals_2301, primals_2302, buf127, primals_2306, primals_2307, primals_2308, primals_2310, primals_2313, primals_2314, primals_2316, primals_2318, primals_2319, primals_2320, buf128, primals_2324, primals_2325, primals_2326, primals_2328, primals_2331, primals_2332, primals_2334, primals_2336, primals_2337, primals_2338, buf129, primals_2342, primals_2343, primals_2344, primals_2346, primals_2349, primals_2350, primals_2352, primals_2354, primals_2355, primals_2356, buf130, primals_2360, primals_2361, primals_2362, primals_2364, primals_2367, primals_2368, primals_2370, primals_2372, primals_2373, primals_2374, buf131, primals_2378, primals_2379, primals_2380, primals_2382, primals_2385, primals_2386, primals_2388, primals_2390, primals_2391, primals_2392, buf132, primals_2396, primals_2397, primals_2398, primals_2400, primals_2402, primals_2403, primals_2404, primals_2406, primals_2408, primals_2409, primals_2410, buf133, primals_2414, primals_2415, primals_2416, primals_2418, primals_2421, primals_2422, primals_2424, primals_2426, primals_2427, primals_2428, buf134, primals_2432, primals_2433, primals_2434, primals_2436, primals_2439, primals_2440, primals_2442, primals_2444, primals_2445, primals_2446, buf135, primals_2450, primals_2451, primals_2452, primals_2454, primals_2457, primals_2458, primals_2460, primals_2462, primals_2463, primals_2464, buf136, primals_2468, primals_2469, primals_2470, primals_2472, primals_2475, primals_2476, primals_2478, primals_2480, primals_2481, primals_2482, buf137, primals_2486, primals_2487, primals_2488, primals_2490, primals_2493, primals_2494, primals_2496, primals_2498, primals_2499, primals_2500, buf138, primals_2504, primals_2505, primals_2506, primals_2508, primals_2511, primals_2512, primals_2514, primals_2516, primals_2517, primals_2518, buf139, primals_2522, primals_2523, primals_2524, primals_2526, primals_2529, primals_2530, primals_2532, primals_2534, primals_2535, primals_2536, buf140, primals_2540, primals_2541, primals_2542, primals_2544, primals_2546, primals_2547, primals_2548, primals_2550, primals_2552, primals_2553, primals_2554, buf141, primals_2558, primals_2559, primals_2560, primals_2562, primals_2565, primals_2566, primals_2568, primals_2570, primals_2571, primals_2572, buf142, primals_2576, primals_2577, primals_2578, primals_2580, primals_2583, primals_2584, primals_2586, primals_2588, primals_2589, primals_2590, buf143, primals_2594, primals_2595, primals_2596, primals_2598, primals_2601, primals_2602, primals_2604, primals_2606, primals_2607, primals_2608, buf144, primals_2612, primals_2613, primals_2614, primals_2616, primals_2619, primals_2620, primals_2622, primals_2624, primals_2625, primals_2626, buf145, primals_2630, primals_2631, primals_2632, primals_2634, primals_2637, primals_2638, primals_2640, primals_2642, primals_2643, primals_2644, buf146, primals_2648, primals_2649, primals_2650, primals_2652, primals_2655, primals_2656, primals_2658, primals_2660, primals_2661, primals_2662, buf147, primals_2666, primals_2667, primals_2668, primals_2670, primals_2673, primals_2674, primals_2676, primals_2678, primals_2679, primals_2680, buf148, primals_2684, primals_2685, primals_2686, primals_2688, primals_2691, primals_2692, primals_2694, primals_2696, primals_2697, primals_2698, buf149, primals_2702, primals_2703, primals_2704, primals_2706, primals_2709, primals_2710, primals_2712, primals_2714, primals_2715, primals_2716, buf150, primals_2720, primals_2721, primals_2722, primals_2724, primals_2727, primals_2728, primals_2730, primals_2732, primals_2733, primals_2734, buf151, primals_2738, primals_2739, primals_2740, primals_2742, primals_2745, primals_2746, primals_2748, primals_2750, primals_2751, primals_2752, buf152, primals_2756, primals_2757, primals_2758, primals_2760, primals_2763, primals_2764, primals_2766, primals_2768, primals_2769, primals_2770, buf153, primals_2774, primals_2775, primals_2776, primals_2778, primals_2781, primals_2782, primals_2784, primals_2786, primals_2787, primals_2788, buf154, primals_2792, primals_2793, primals_2794, primals_2796, primals_2799, primals_2800, primals_2802, primals_2804, primals_2805, primals_2806, buf155, primals_2810, primals_2811, primals_2812, primals_2814, primals_2817, primals_2818, primals_2820, primals_2822, primals_2823, primals_2824, buf156, primals_2828, primals_2829, primals_2830, primals_2832, primals_2835, primals_2836, primals_2838, primals_2840, primals_2841, primals_2842, buf157, primals_2846, primals_2847, primals_2848, primals_2850, primals_2853, primals_2854, primals_2856, primals_2858, primals_2859, primals_2860, buf158, primals_2864, primals_2865, primals_2866, primals_2868, primals_2871, primals_2872, primals_2874, primals_2876, primals_2877, primals_2878, buf159, primals_2882, primals_2883, primals_2884, primals_2886, primals_2889, primals_2890, primals_2892, primals_2894, primals_2895, primals_2896, buf160, primals_2900, primals_2901, primals_2902, primals_2904, primals_2907, primals_2908, primals_2910, primals_2912, primals_2913, primals_2914, buf161, primals_2918, primals_2919, primals_2920, primals_2922, primals_2925, primals_2926, primals_2928, primals_2930, primals_2931, primals_2932, buf162, primals_2936, primals_2937, primals_2938, primals_2940, primals_2943, primals_2944, primals_2946, primals_2948, primals_2949, primals_2950, buf163, primals_2954, primals_2955, primals_2956, primals_2958, primals_2961, primals_2962, primals_2964, primals_2966, primals_2967, primals_2968, buf164, primals_2972, primals_2973, primals_2974, primals_2976, primals_2979, primals_2980, primals_2982, primals_2984, primals_2985, primals_2986, buf165, primals_2990, primals_2991, primals_2992, primals_2994, primals_2997, primals_2998, primals_3000, primals_3002, primals_3003, primals_3004, buf166, primals_3008, primals_3009, primals_3010, primals_3012, primals_3015, primals_3016, primals_3018, primals_3020, primals_3021, primals_3022, buf167, primals_3026, primals_3027, primals_3028, primals_3030, primals_3033, primals_3034, primals_3036, primals_3038, primals_3039, primals_3040, buf168, primals_3044, primals_3045, primals_3046, primals_3048, primals_3051, primals_3052, primals_3054, primals_3056, primals_3057, primals_3058, buf169, primals_3062, primals_3063, primals_3064, primals_3066, primals_3069, primals_3070, primals_3072, primals_3074, primals_3075, primals_3076, buf170, primals_3080, primals_3081, primals_3082, primals_3084, primals_3087, primals_3088, primals_3090, primals_3092, primals_3093, primals_3094, buf171, primals_3098, primals_3099, primals_3100, primals_3102, primals_3105, primals_3106, primals_3108, primals_3110, primals_3111, primals_3112, buf172, primals_3116, primals_3117, primals_3118, primals_3120, primals_3122, primals_3124, primals_3125, primals_3126, primals_3128, primals_3130, primals_3132, primals_3134, primals_3135, primals_3136, primals_3138, primals_3140, primals_3141, primals_3142, buf173, primals_3146, primals_3147, primals_3148, primals_3150, primals_3153, primals_3154, primals_3156, primals_3158, primals_3159, primals_3160, buf174, primals_3164, primals_3165, primals_3166, primals_3168, primals_3171, primals_3172, primals_3174, primals_3176, primals_3177, primals_3178, buf175, primals_3182, primals_3183, primals_3184, primals_3186, primals_3189, primals_3190, primals_3192, primals_3194, primals_3195, primals_3196, buf176, primals_3200, primals_3201, primals_3202, primals_3204, primals_3207, primals_3208, primals_3210, primals_3212, primals_3213, primals_3214, buf177, primals_3218, primals_3219, primals_3220, primals_3222, primals_3225, primals_3226, primals_3228, primals_3230, primals_3231, primals_3232, buf178, primals_3236, primals_3237, primals_3238, primals_3240, primals_3243, primals_3244, primals_3246, primals_3248, primals_3249, primals_3250, buf179, primals_3254, primals_3255, primals_3256, primals_3258, primals_3261, primals_3262, primals_3264, primals_3266, primals_3267, primals_3268, buf180, primals_3272, primals_3273, primals_3274, primals_3276, primals_3278, primals_3279, primals_3280, primals_3282, primals_3284, primals_3285, primals_3286, buf181, primals_3290, primals_3291, primals_3292, primals_3294, primals_3297, primals_3298, primals_3300, primals_3302, primals_3303, primals_3304, buf182, primals_3308, primals_3309, primals_3310, primals_3312, primals_3315, primals_3316, primals_3318, primals_3320, primals_3321, primals_3322, buf183, primals_3326, primals_3327, primals_3328, primals_3330, primals_3333, primals_3334, primals_3336, primals_3338, primals_3339, primals_3340, buf184, primals_3344, primals_3345, primals_3346, primals_3348, primals_3351, primals_3352, primals_3354, primals_3356, primals_3357, primals_3358, buf185, primals_3362, primals_3363, primals_3364, primals_3366, primals_3369, primals_3370, primals_3372, primals_3374, primals_3375, primals_3376, buf186, primals_3380, primals_3381, primals_3382, primals_3384, primals_3387, primals_3388, primals_3390, primals_3392, primals_3393, primals_3394, buf187, primals_3398, primals_3399, primals_3400, primals_3402, primals_3405, primals_3406, primals_3408, primals_3410, primals_3411, primals_3412, buf188, primals_3416, primals_3417, primals_3418, primals_3420, primals_3422, primals_3423, primals_3424, primals_3426, primals_3428, primals_3429, primals_3430, buf189, primals_3434, primals_3435, primals_3436, primals_3438, primals_3441, primals_3442, primals_3444, primals_3446, primals_3447, primals_3448, buf190, primals_3452, primals_3453, primals_3454, primals_3456, primals_3459, primals_3460, primals_3462, primals_3464, primals_3465, primals_3466, buf191, primals_3470, primals_3471, primals_3472, primals_3474, primals_3477, primals_3478, primals_3480, primals_3482, primals_3483, primals_3484, buf192, primals_3488, primals_3489, primals_3490, primals_3492, primals_3495, primals_3496, primals_3498, primals_3500, primals_3501, primals_3502, buf193, primals_3506, primals_3507, primals_3508, primals_3510, primals_3513, primals_3514, primals_3516, primals_3518, primals_3519, primals_3520, buf194, primals_3524, primals_3525, primals_3526, primals_3528, primals_3531, primals_3532, primals_3534, primals_3536, primals_3537, primals_3538, buf195, primals_3542, primals_3543, primals_3544, primals_3546, primals_3549, primals_3550, primals_3552, primals_3554, primals_3555, primals_3556, buf196, primals_3560, primals_3561, primals_3562, primals_3564, primals_3566, primals_3567, primals_3568, primals_3570, primals_3572, primals_3573, primals_3574, buf197, primals_3578, primals_3579, primals_3580, primals_3582, primals_3585, primals_3586, primals_3588, primals_3590, primals_3591, primals_3592, buf198, primals_3596, primals_3597, primals_3598, primals_3600, primals_3603, primals_3604, primals_3606, primals_3608, primals_3609, primals_3610, buf199, primals_3614, primals_3615, primals_3616, primals_3618, primals_3621, primals_3622, primals_3624, primals_3626, primals_3627, primals_3628, buf200, primals_3632, primals_3633, primals_3634, primals_3636, primals_3639, primals_3640, primals_3642, primals_3644, primals_3645, primals_3646, buf201, primals_3650, primals_3651, primals_3652, primals_3654, primals_3657, primals_3658, primals_3660, primals_3662, primals_3663, primals_3664, buf202, primals_3668, primals_3669, primals_3670, primals_3672, primals_3675, primals_3676, primals_3678, primals_3680, primals_3681, primals_3682, buf203, primals_3686, primals_3687, primals_3688, primals_3690, primals_3693, primals_3694, primals_3696, primals_3698, primals_3699, primals_3700, buf204, primals_3704, primals_3705, primals_3706, primals_3708, primals_3711, primals_3712, primals_3714, primals_3716, primals_3717, primals_3718, buf205, primals_3722, primals_3723, primals_3724, primals_3726, primals_3729, primals_3730, primals_3732, primals_3734, primals_3735, primals_3736, buf206, primals_3740, primals_3741, primals_3742, primals_3744, primals_3747, primals_3748, primals_3750, primals_3752, primals_3753, primals_3754, buf207, primals_3758, primals_3759, primals_3760, primals_3762, primals_3765, primals_3766, primals_3768, primals_3770, primals_3771, primals_3772, buf208, primals_3776, primals_3777, primals_3778, primals_3780, primals_3783, primals_3784, primals_3786, primals_3788, primals_3789, primals_3790, buf209, primals_3794, primals_3795, primals_3796, primals_3798, primals_3801, primals_3802, primals_3804, primals_3806, primals_3807, primals_3808, buf210, primals_3812, primals_3813, primals_3814, primals_3816, primals_3819, primals_3820, primals_3822, primals_3824, primals_3825, primals_3826, buf211, primals_3830, primals_3831, primals_3832, primals_3834, primals_3837, primals_3838, primals_3840, primals_3842, primals_3843, primals_3844, buf212, primals_3848, primals_3849, primals_3850, primals_3852, primals_3855, primals_3856, primals_3858, primals_3860, primals_3861, primals_3862, buf213, primals_3866, primals_3867, primals_3868, primals_3870, primals_3873, primals_3874, primals_3876, primals_3878, primals_3879, primals_3880, buf214, primals_3884, primals_3885, primals_3886, primals_3888, primals_3891, primals_3892, primals_3894, primals_3896, primals_3897, primals_3898, buf215, primals_3902, primals_3903, primals_3904, primals_3906, primals_3909, primals_3910, primals_3912, primals_3914, primals_3915, primals_3916, buf216, primals_3920, primals_3921, primals_3922, primals_3924, primals_3927, primals_3928, primals_3930, primals_3932, primals_3933, primals_3934, buf217, primals_3938, primals_3939, primals_3940, primals_3942, primals_3945, primals_3946, primals_3948, primals_3950, primals_3951, primals_3952, buf218, primals_3956, primals_3957, primals_3958, primals_3960, primals_3963, primals_3964, primals_3966, primals_3968, primals_3969, primals_3970, buf219, primals_3974, primals_3975, primals_3976, primals_3978, primals_3981, primals_3982, primals_3984, primals_3986, primals_3987, primals_3988, buf220, primals_3992, primals_3993, primals_3994, primals_3996, primals_3999, primals_4000, primals_4002, primals_4004, primals_4005, primals_4006, buf221, primals_4010, primals_4011, primals_4012, primals_4014, primals_4017, primals_4018, primals_4020, primals_4022, primals_4023, primals_4024, buf222, primals_4028, primals_4029, primals_4030, primals_4032, primals_4035, primals_4036, primals_4038, primals_4040, primals_4041, primals_4042, buf223, primals_4046, primals_4047, primals_4048, primals_4050, primals_4053, primals_4054, primals_4056, primals_4058, primals_4059, primals_4060, buf224, primals_4064, primals_4065, primals_4066, primals_4068, primals_4071, primals_4072, primals_4074, primals_4076, primals_4077, primals_4078, buf225, primals_4082, primals_4083, primals_4084, primals_4086, primals_4089, primals_4090, primals_4092, primals_4094, primals_4095, primals_4096, buf226, primals_4100, primals_4101, primals_4102, primals_4104, primals_4107, primals_4108, primals_4110, primals_4112, primals_4113, primals_4114, buf227, primals_4118, primals_4119, primals_4120, primals_4122, primals_4125, primals_4126, primals_4128, primals_4130, primals_4131, primals_4132, buf228, primals_4136, primals_4137, primals_4138, primals_4140, primals_4142, primals_4144, primals_4145, primals_4146, primals_4148, buf230, buf232, buf234, buf235, buf237, buf238, buf240, buf242, buf243, buf244, buf246, buf247, buf249, buf250, buf252, buf253, buf255, buf256, buf258, buf259, buf261, buf263, buf264, buf266, buf267, buf269, buf270, buf272, buf274, buf275, buf277, buf278, buf281, buf283, buf284, buf286, buf287, buf289, buf291, buf292, buf294, buf295, buf297, buf298, buf300, buf301, buf303, buf304, buf307, buf309, buf310, buf312, buf313, buf315, buf317, buf318, buf320, buf321, buf324, buf326, buf327, buf329, buf330, buf332, buf333, buf335, buf336, buf338, buf339, buf341, buf343, buf344, buf346, buf347, buf350, buf352, buf353, buf355, buf356, buf358, buf360, buf361, buf363, buf364, buf366, buf367, buf369, buf370, buf372, buf373, buf376, buf378, buf379, buf381, buf382, buf384, buf386, buf387, buf389, buf390, buf393, buf395, buf396, buf398, buf399, buf401, buf402, buf404, buf405, buf407, buf408, buf410, buf412, buf413, buf415, buf416, buf419, buf421, buf422, buf424, buf425, buf427, buf429, buf430, buf432, buf433, buf435, buf436, buf438, buf439, buf441, buf442, buf445, buf447, buf448, buf450, buf451, buf453, buf455, buf456, buf458, buf459, buf462, buf464, buf465, buf467, buf468, buf470, buf471, buf473, buf474, buf476, buf477, buf479, buf481, buf482, buf484, buf485, buf488, buf490, buf491, buf493, buf494, buf496, buf498, buf499, buf501, buf502, buf504, buf505, buf507, buf508, buf510, buf511, buf514, buf516, buf517, buf519, buf520, buf522, buf524, buf525, buf527, buf528, buf531, buf533, buf534, buf536, buf537, buf539, buf541, buf542, buf544, buf545, buf548, buf550, buf551, buf553, buf554, buf556, buf558, buf559, buf561, buf562, buf565, buf567, buf568, buf570, buf571, buf573, buf575, buf576, buf578, buf579, buf582, buf584, buf585, buf587, buf588, buf590, buf592, buf593, buf595, buf596, buf599, buf601, buf602, buf604, buf605, buf607, buf609, buf611, buf612, buf614, buf615, buf617, buf619, buf620, buf622, buf623, buf626, buf628, buf629, buf631, buf632, buf634, buf636, buf637, buf639, buf640, buf642, buf644, buf646, buf647, buf649, buf650, buf652, buf654, buf655, buf657, buf658, buf661, buf663, buf664, buf666, buf667, buf669, buf671, buf672, buf674, buf675, buf677, buf679, buf681, buf682, buf684, buf685, buf687, buf689, buf690, buf692, buf693, buf696, buf698, buf699, buf701, buf702, buf704, buf706, buf707, buf709, buf710, buf712, buf714, buf716, buf717, buf719, buf720, buf722, buf724, buf725, buf727, buf728, buf731, buf733, buf734, buf736, buf737, buf739, buf741, buf742, buf744, buf745, buf747, buf749, buf750, buf752, buf756, buf757, buf759, buf760, buf762, buf763, buf765, buf767, buf768, buf770, buf771, buf774, buf776, buf777, buf779, buf780, buf782, buf784, buf785, buf787, buf788, buf790, buf791, buf793, buf794, buf796, buf797, buf800, buf802, buf803, buf805, buf806, buf808, buf810, buf811, buf813, buf814, buf817, buf819, buf820, buf822, buf823, buf825, buf826, buf828, buf829, buf831, buf832, buf834, buf836, buf837, buf839, buf840, buf843, buf845, buf846, buf848, buf849, buf851, buf853, buf854, buf856, buf857, buf859, buf860, buf862, buf863, buf865, buf866, buf869, buf871, buf872, buf874, buf875, buf877, buf879, buf880, buf882, buf883, buf886, buf888, buf889, buf891, buf892, buf894, buf895, buf897, buf898, buf900, buf901, buf903, buf905, buf906, buf908, buf909, buf912, buf914, buf915, buf917, buf918, buf920, buf922, buf923, buf925, buf926, buf928, buf929, buf931, buf932, buf934, buf935, buf938, buf940, buf941, buf943, buf944, buf946, buf948, buf949, buf951, buf952, buf955, buf957, buf958, buf960, buf961, buf963, buf964, buf966, buf967, buf969, buf970, buf972, buf974, buf975, buf977, buf978, buf981, buf983, buf984, buf986, buf987, buf989, buf991, buf992, buf994, buf995, buf997, buf998, buf1000, buf1001, buf1003, buf1004, buf1007, buf1009, buf1010, buf1012, buf1013, buf1015, buf1017, buf1018, buf1020, buf1021, buf1024, buf1026, buf1027, buf1029, buf1030, buf1032, buf1034, buf1035, buf1037, buf1038, buf1041, buf1043, buf1044, buf1046, buf1047, buf1049, buf1051, buf1052, buf1054, buf1055, buf1058, buf1060, buf1061, buf1063, buf1064, buf1066, buf1068, buf1069, buf1071, buf1072, buf1075, buf1077, buf1078, buf1080, buf1081, buf1083, buf1085, buf1086, buf1088, buf1089, buf1092, buf1094, buf1095, buf1097, buf1098, buf1101, buf1103, buf1104, buf1106, buf1107, buf1109, buf1111, buf1112, buf1114, buf1115, buf1118, buf1120, buf1121, buf1123, buf1124, buf1126, buf1128, buf1129, buf1131, buf1132, buf1135, buf1137, buf1138, buf1140, buf1141, buf1143, buf1145, buf1146, buf1148, buf1149, buf1152, buf1154, buf1155, buf1157, buf1158, buf1160, buf1162, buf1163, buf1165, buf1166, buf1169, buf1171, buf1172, buf1174, buf1175, buf1177, buf1179, buf1180, buf1182, buf1183, buf1186, buf1188, buf1189, buf1191, buf1192, buf1194, buf1196, buf1197, buf1199, buf1200, buf1203, buf1205, buf1206, buf1208, buf1209, buf1211, buf1213, buf1214, buf1216, buf1217, buf1220, buf1222, buf1223, buf1225, buf1226, buf1228, buf1230, buf1231, buf1233, buf1234, buf1236, buf1238, buf1239, buf1241, buf1245, buf1246, buf1248, buf1249, buf1251, buf1252, buf1254, buf1256, buf1257, buf1259, buf1260, buf1263, buf1265, buf1266, buf1268, buf1269, buf1271, buf1273, buf1274, buf1276, buf1277, buf1279, buf1280, buf1282, buf1283, buf1285, buf1286, buf1289, buf1291, buf1292, buf1294, buf1295, buf1297, buf1299, buf1300, buf1302, buf1303, buf1306, buf1308, buf1309, buf1311, buf1312, buf1314, buf1315, buf1317, buf1318, buf1320, buf1321, buf1323, buf1325, buf1326, buf1328, buf1329, buf1332, buf1334, buf1335, buf1337, buf1338, buf1340, buf1342, buf1343, buf1345, buf1346, buf1348, buf1349, buf1351, buf1352, buf1354, buf1355, buf1358, buf1360, buf1361, buf1363, buf1364, buf1366, buf1368, buf1369, buf1371, buf1372, buf1375, buf1377, buf1378, buf1380, buf1381, buf1383, buf1384, buf1386, buf1387, buf1389, buf1390, buf1392, buf1394, buf1395, buf1397, buf1398, buf1401, buf1403, buf1404, buf1406, buf1407, buf1409, buf1411, buf1412, buf1414, buf1415, buf1417, buf1418, buf1420, buf1421, buf1423, buf1424, buf1427, buf1429, buf1430, buf1432, buf1433, buf1435, buf1437, buf1438, buf1440, buf1441, buf1444, buf1446, buf1447, buf1449, buf1450, buf1452, buf1453, buf1455, buf1456, buf1458, buf1459, buf1461, buf1463, buf1464, buf1466, buf1467, buf1470, buf1472, buf1473, buf1475, buf1476, buf1478, buf1480, buf1481, buf1483, buf1484, buf1486, buf1487, buf1489, buf1490, buf1492, buf1493, buf1496, buf1498, buf1499, buf1501, buf1502, buf1504, buf1506, buf1507, buf1509, buf1510, buf1513, buf1515, buf1516, buf1518, buf1519, buf1521, buf1523, buf1524, buf1526, buf1527, buf1530, buf1532, buf1533, buf1535, buf1536, buf1538, buf1540, buf1541, buf1543, buf1544, buf1547, buf1549, buf1550, buf1552, buf1553, buf1555, buf1557, buf1558, buf1560, buf1561, buf1564, buf1566, buf1567, buf1569, buf1570, buf1572, buf1574, buf1575, buf1577, buf1578, buf1581, buf1583, buf1584, buf1586, buf1587, buf1590, buf1592, buf1593, buf1595, buf1596, buf1598, buf1600, buf1601, buf1603, buf1604, buf1607, buf1609, buf1610, buf1612, buf1613, buf1615, buf1617, buf1618, buf1620, buf1621, buf1624, buf1626, buf1627, buf1629, buf1630, buf1632, buf1634, buf1635, buf1637, buf1638, buf1641, buf1643, buf1644, buf1646, buf1647, buf1649, buf1651, buf1652, buf1654, buf1655, buf1658, buf1660, buf1661, buf1663, buf1664, buf1666, buf1668, buf1669, buf1671, buf1672, buf1675, buf1677, buf1678, buf1680, buf1681, buf1683, buf1685, buf1686, buf1688, buf1689, buf1692, buf1694, buf1695, buf1697, buf1698, buf1700, buf1702, buf1703, buf1705, buf1706, buf1709, buf1711, buf1712, buf1714, buf1715, buf1717, buf1719, buf1720, buf1722, buf1723, buf1725, buf1727, buf1728, buf1730, buf1734, buf1735, buf1737, buf1738, buf1740, buf1741, buf1743, buf1745, buf1746, buf1748, buf1749, buf1752, buf1754, buf1755, buf1757, buf1758, buf1760, buf1762, buf1763, buf1765, buf1766, buf1768, buf1769, buf1771, buf1772, buf1774, buf1775, buf1778, buf1780, buf1781, buf1783, buf1784, buf1786, buf1788, buf1789, buf1791, buf1792, buf1795, buf1797, buf1798, buf1800, buf1801, buf1803, buf1804, buf1806, buf1807, buf1809, buf1810, buf1812, buf1814, buf1815, buf1817, buf1818, buf1821, buf1823, buf1824, buf1826, buf1827, buf1829, buf1831, buf1832, buf1834, buf1835, buf1837, buf1838, buf1840, buf1841, buf1843, buf1844, buf1847, buf1849, buf1850, buf1852, buf1853, buf1855, buf1857, buf1858, buf1860, buf1861, buf1864, buf1866, buf1867, buf1869, buf1870, buf1872, buf1873, buf1875, buf1876, buf1878, buf1879, buf1881, buf1883, buf1884, buf1886, buf1887, buf1890, buf1892, buf1893, buf1895, buf1896, buf1898, buf1900, buf1901, buf1903, buf1904, buf1906, buf1907, buf1909, buf1910, buf1912, buf1913, buf1916, buf1918, buf1919, buf1921, buf1922, buf1924, buf1926, buf1927, buf1929, buf1930, buf1933, buf1935, buf1936, buf1938, buf1939, buf1941, buf1942, buf1944, buf1945, buf1947, buf1948, buf1950, buf1952, buf1953, buf1955, buf1956, buf1959, buf1961, buf1962, buf1964, buf1965, buf1967, buf1969, buf1970, buf1972, buf1973, buf1975, buf1976, buf1978, buf1979, buf1981, buf1982, buf1985, buf1987, buf1988, buf1990, buf1991, buf1993, buf1995, buf1996, buf1998, buf1999, buf2002, buf2004, buf2005, buf2007, buf2008, buf2010, buf2012, buf2013, buf2015, buf2016, buf2019, buf2021, buf2022, buf2024, buf2025, buf2027, buf2029, buf2030, buf2032, buf2033, buf2036, buf2038, buf2039, buf2041, buf2042, buf2044, buf2046, buf2047, buf2049, buf2050, buf2053, buf2055, buf2056, buf2058, buf2059, buf2061, buf2063, buf2064, buf2066, buf2067, buf2070, buf2072, buf2073, buf2075, buf2076, buf2079, buf2081, buf2082, buf2084, buf2085, buf2087, buf2089, buf2090, buf2092, buf2093, buf2096, buf2098, buf2099, buf2101, buf2102, buf2104, buf2106, buf2107, buf2109, buf2110, buf2113, buf2115, buf2116, buf2118, buf2119, buf2121, buf2123, buf2124, buf2126, buf2127, buf2130, buf2132, buf2133, buf2135, buf2136, buf2138, buf2140, buf2141, buf2143, buf2144, buf2147, buf2149, buf2150, buf2152, buf2153, buf2155, buf2157, buf2158, buf2160, buf2161, buf2164, buf2166, buf2167, buf2169, buf2170, buf2172, buf2174, buf2175, buf2177, buf2178, buf2181, buf2183, buf2184, buf2186, buf2187, buf2189, buf2191, buf2192, buf2194, buf2195, buf2198, buf2200, buf2201, buf2203, buf2204, buf2206, buf2208, buf2209, buf2211, buf2212, buf2214, buf2216, buf2217, buf2220, buf2221, buf2222, buf2223, buf2224, buf2225, buf2226, buf2227, buf2228, buf2229, buf2230, buf2231, buf2232, buf2233, buf2234, buf2235, buf2236, buf2237, buf2238, buf2239, buf2240, buf2241, buf2242, buf2243, buf2244, buf2245, buf2246, buf2247, buf2248, buf2249, buf2250, buf2251, buf2252, buf2253, buf2254, buf2255, buf2256, buf2257, buf2258, buf2259, buf2260, buf2261, buf2262, buf2263, buf2264, buf2265, buf2266, buf2267, buf2268, buf2269, buf2270, buf2271, buf2272, buf2273, buf2274, buf2275, buf2276, buf2277, buf2278, buf2279, buf2280, buf2281, buf2282, buf2283, buf2284, buf2285, buf2286, buf2287, buf2288, buf2289, buf2290, buf2291, buf2292, buf2293, buf2294, buf2295, buf2296, buf2297, buf2298, buf2299, buf2300, buf2301, buf2302, buf2303, buf2304, buf2305, buf2306, buf2307, buf2308, buf2309, buf2310, buf2311, buf2312, buf2313, buf2314, buf2315, buf2316, buf2317, buf2318, buf2319, buf2320, buf2321, buf2322, buf2323, buf2324, buf2325, buf2326, buf2327, buf2328, buf2329, buf2330, buf2331, buf2332, buf2333, buf2334, buf2335, buf2336, buf2337, buf2338, buf2339, buf2340, buf2341, buf2342, buf2343, buf2344, buf2345, buf2346, buf2347, buf2348, buf2349, buf2350, buf2351, buf2352, buf2353, buf2354, buf2355, buf2356, buf2357, buf2358, buf2359, buf2360, buf2361, buf2362, buf2363, buf2364, buf2365, buf2366, buf2367, buf2368, buf2369, buf2370, buf2371, buf2372, buf2373, buf2374, buf2375, buf2376, buf2377, buf2378, buf2379, buf2380, buf2381, buf2382, buf2383, buf2384, buf2385, buf2386, buf2387, buf2388, buf2389, buf2390, buf2391, buf2392, buf2393, buf2394, buf2395, buf2396, buf2397, buf2398, buf2399, buf2400, buf2401, buf2402, buf2403, buf2404, buf2405, buf2406, buf2407, buf2408, buf2409, buf2410, buf2411, buf2412, buf2413, buf2414, buf2415, buf2416, buf2417, buf2418, buf2419, buf2420, buf2421, buf2422, buf2423, buf2424, buf2425, buf2426, buf2427, buf2428, )


def benchmark_compiled_module(times=10, repeat=10):
    from torch._dynamo.testing import rand_strided
    from torch._inductor.utils import print_performance
    primals_1 = rand_strided((64, 3, 7, 7), (147, 49, 7, 1), device='cuda:0', dtype=torch.float32)
    primals_2 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3 = rand_strided((4, 3, 64, 64), (12288, 4096, 64, 1), device='cuda:0', dtype=torch.float32)
    primals_4 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_5 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_6 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_7 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_8 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_9 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_10 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_11 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_12 = rand_strided((64, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_13 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_14 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_15 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_16 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_17 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_18 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_19 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_20 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_21 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_22 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_23 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_24 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_25 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_26 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_27 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_28 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_29 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_30 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_31 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_32 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_33 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_34 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_35 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_36 = rand_strided((64, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_37 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_38 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_39 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_40 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_41 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_42 = rand_strided((64, 64, 3, 3), (576, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_43 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_44 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_45 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_46 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_47 = rand_strided((64, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_48 = rand_strided((128, 64, 1, 1), (64, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_49 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_50 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_51 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_52 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_53 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_54 = rand_strided((2, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_55 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_56 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_57 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_58 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_59 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_60 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_61 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_62 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_63 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_64 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_65 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_66 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_67 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_68 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_69 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_70 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_71 = rand_strided((128, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_72 = rand_strided((4, 128, 1, 1), (128, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_73 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_74 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_75 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_76 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_77 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_78 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_79 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_80 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_81 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_82 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_83 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_84 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_85 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_86 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_87 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_88 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_89 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_90 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_91 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_92 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_93 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_94 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_95 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_96 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_97 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_98 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_99 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_100 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_101 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_102 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_103 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_104 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_105 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_106 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_107 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_108 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_109 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_110 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_111 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_112 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_113 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_114 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_115 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_116 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_117 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_118 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_119 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_120 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_121 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_122 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_123 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_124 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_125 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_126 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_127 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_128 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_129 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_130 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_131 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_132 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_133 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_134 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_135 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_136 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_137 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_138 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_139 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_140 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_141 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_142 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_143 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_144 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_145 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_146 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_147 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_148 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_149 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_150 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_151 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_152 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_153 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_154 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_155 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_156 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_157 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_158 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_159 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_160 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_161 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_162 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_163 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_164 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_165 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_166 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_167 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_168 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_169 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_170 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_171 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_172 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_173 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_174 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_175 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_176 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_177 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_178 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_179 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_180 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_181 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_182 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_183 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_184 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_185 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_186 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_187 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_188 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_189 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_190 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_191 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_192 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_193 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_194 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_195 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_196 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_197 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_198 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_199 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_200 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_201 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_202 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_203 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_204 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_205 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_206 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_207 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_208 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_209 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_210 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_211 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_212 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_213 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_214 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_215 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_216 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_217 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_218 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_219 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_220 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_221 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_222 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_223 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_224 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_225 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_226 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_227 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_228 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_229 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_230 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_231 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_232 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_233 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_234 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_235 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_236 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_237 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_238 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_239 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_240 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_241 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_242 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_243 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_244 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_245 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_246 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_247 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_248 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_249 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_250 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_251 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_252 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_253 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_254 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_255 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_256 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_257 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_258 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_259 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_260 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_261 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_262 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_263 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_264 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_265 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_266 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_267 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_268 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_269 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_270 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_271 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_272 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_273 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_274 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_275 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_276 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_277 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_278 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_279 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_280 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_281 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_282 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_283 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_284 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_285 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_286 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_287 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_288 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_289 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_290 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_291 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_292 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_293 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_294 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_295 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_296 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_297 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_298 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_299 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_300 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_301 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_302 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_303 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_304 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_305 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_306 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_307 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_308 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_309 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_310 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_311 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_312 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_313 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_314 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_315 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_316 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_317 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_318 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_319 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_320 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_321 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_322 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_323 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_324 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_325 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_326 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_327 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_328 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_329 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_330 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_331 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_332 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_333 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_334 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_335 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_336 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_337 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_338 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_339 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_340 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_341 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_342 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_343 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_344 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_345 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_346 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_347 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_348 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_349 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_350 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_351 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_352 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_353 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_354 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_355 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_356 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_357 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_358 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_359 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_360 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_361 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_362 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_363 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_364 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_365 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_366 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_367 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_368 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_369 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_370 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_371 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_372 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_373 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_374 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_375 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_376 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_377 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_378 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_379 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_380 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_381 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_382 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_383 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_384 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_385 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_386 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_387 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_388 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_389 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_390 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_391 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_392 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_393 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_394 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_395 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_396 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_397 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_398 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_399 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_400 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_401 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_402 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_403 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_404 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_405 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_406 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_407 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_408 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_409 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_410 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_411 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_412 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_413 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_414 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_415 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_416 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_417 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_418 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_419 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_420 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_421 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_422 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_423 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_424 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_425 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_426 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_427 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_428 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_429 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_430 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_431 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_432 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_433 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_434 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_435 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_436 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_437 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_438 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_439 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_440 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_441 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_442 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_443 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_444 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_445 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_446 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_447 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_448 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_449 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_450 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_451 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_452 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_453 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_454 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_455 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_456 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_457 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_458 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_459 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_460 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_461 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_462 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_463 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_464 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_465 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_466 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_467 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_468 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_469 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_470 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_471 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_472 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_473 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_474 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_475 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_476 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_477 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_478 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_479 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_480 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_481 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_482 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_483 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_484 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_485 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_486 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_487 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_488 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_489 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_490 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_491 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_492 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_493 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_494 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_495 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_496 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_497 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_498 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_499 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_500 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_501 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_502 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_503 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_504 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_505 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_506 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_507 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_508 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_509 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_510 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_511 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_512 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_513 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_514 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_515 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_516 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_517 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_518 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_519 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_520 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_521 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_522 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_523 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_524 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_525 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_526 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_527 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_528 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_529 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_530 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_531 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_532 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_533 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_534 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_535 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_536 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_537 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_538 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_539 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_540 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_541 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_542 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_543 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_544 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_545 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_546 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_547 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_548 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_549 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_550 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_551 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_552 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_553 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_554 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_555 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_556 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_557 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_558 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_559 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_560 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_561 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_562 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_563 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_564 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_565 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_566 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_567 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_568 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_569 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_570 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_571 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_572 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_573 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_574 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_575 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_576 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_577 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_578 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_579 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_580 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_581 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_582 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_583 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_584 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_585 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_586 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_587 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_588 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_589 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_590 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_591 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_592 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_593 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_594 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_595 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_596 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_597 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_598 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_599 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_600 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_601 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_602 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_603 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_604 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_605 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_606 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_607 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_608 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_609 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_610 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_611 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_612 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_613 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_614 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_615 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_616 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_617 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_618 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_619 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_620 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_621 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_622 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_623 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_624 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_625 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_626 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_627 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_628 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_629 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_630 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_631 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_632 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_633 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_634 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_635 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_636 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_637 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_638 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_639 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_640 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_641 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_642 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_643 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_644 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_645 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_646 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_647 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_648 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_649 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_650 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_651 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_652 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_653 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_654 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_655 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_656 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_657 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_658 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_659 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_660 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_661 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_662 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_663 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_664 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_665 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_666 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_667 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_668 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_669 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_670 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_671 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_672 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_673 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_674 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_675 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_676 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_677 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_678 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_679 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_680 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_681 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_682 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_683 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_684 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_685 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_686 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_687 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_688 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_689 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_690 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_691 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_692 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_693 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_694 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_695 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_696 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_697 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_698 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_699 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_700 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_701 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_702 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_703 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_704 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_705 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_706 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_707 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_708 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_709 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_710 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_711 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_712 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_713 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_714 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_715 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_716 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_717 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_718 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_719 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_720 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_721 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_722 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_723 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_724 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_725 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_726 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_727 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_728 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_729 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_730 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_731 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_732 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_733 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_734 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_735 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_736 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_737 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_738 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_739 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_740 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_741 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_742 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_743 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_744 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_745 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_746 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_747 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_748 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_749 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_750 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_751 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_752 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_753 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_754 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_755 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_756 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_757 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_758 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_759 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_760 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_761 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_762 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_763 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_764 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_765 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_766 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_767 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_768 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_769 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_770 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_771 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_772 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_773 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_774 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_775 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_776 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_777 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_778 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_779 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_780 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_781 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_782 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_783 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_784 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_785 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_786 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_787 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_788 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_789 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_790 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_791 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_792 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_793 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_794 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_795 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_796 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_797 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_798 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_799 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_800 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_801 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_802 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_803 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_804 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_805 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_806 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_807 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_808 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_809 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_810 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_811 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_812 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_813 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_814 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_815 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_816 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_817 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_818 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_819 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_820 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_821 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_822 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_823 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_824 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_825 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_826 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_827 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_828 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_829 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_830 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_831 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_832 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_833 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_834 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_835 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_836 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_837 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_838 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_839 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_840 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_841 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_842 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_843 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_844 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_845 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_846 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_847 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_848 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_849 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_850 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_851 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_852 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_853 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_854 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_855 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_856 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_857 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_858 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_859 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_860 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_861 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_862 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_863 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_864 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_865 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_866 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_867 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_868 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_869 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_870 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_871 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_872 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_873 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_874 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_875 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_876 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_877 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_878 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_879 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_880 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_881 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_882 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_883 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_884 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_885 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_886 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_887 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_888 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_889 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_890 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_891 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_892 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_893 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_894 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_895 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_896 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_897 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_898 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_899 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_900 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_901 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_902 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_903 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_904 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_905 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_906 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_907 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_908 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_909 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_910 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_911 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_912 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_913 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_914 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_915 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_916 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_917 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_918 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_919 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_920 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_921 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_922 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_923 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_924 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_925 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_926 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_927 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_928 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_929 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_930 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_931 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_932 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_933 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_934 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_935 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_936 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_937 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_938 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_939 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_940 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_941 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_942 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_943 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_944 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_945 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_946 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_947 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_948 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_949 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_950 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_951 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_952 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_953 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_954 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_955 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_956 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_957 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_958 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_959 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_960 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_961 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_962 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_963 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_964 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_965 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_966 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_967 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_968 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_969 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_970 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_971 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_972 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_973 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_974 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_975 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_976 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_977 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_978 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_979 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_980 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_981 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_982 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_983 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_984 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_985 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_986 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_987 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_988 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_989 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_990 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_991 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_992 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_993 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_994 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_995 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_996 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_997 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_998 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_999 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1000 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1001 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1002 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1003 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1004 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1005 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1006 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1007 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1008 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1009 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1010 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1011 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1012 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1013 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1014 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1015 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1016 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1017 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1018 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1019 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1020 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1021 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1022 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1023 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1024 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1025 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1026 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1027 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1028 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1029 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1030 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1031 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1032 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1033 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1034 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1035 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1036 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1037 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1038 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1039 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1040 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1041 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1042 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1043 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1044 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1045 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1046 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1047 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1048 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1049 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1050 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1051 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1052 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1053 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1054 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1055 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1056 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1057 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1058 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1059 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1060 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1061 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1062 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1063 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1064 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1065 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1066 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1067 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1068 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1069 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1070 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1071 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1072 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1073 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1074 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1075 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1076 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1077 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1078 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1079 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1080 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1081 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1082 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1083 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1084 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1085 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1086 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1087 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1088 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1089 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1090 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1091 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1092 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1093 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1094 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1095 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1096 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1097 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1098 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1099 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1100 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1101 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1102 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1103 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1104 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1105 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1106 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1107 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1108 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1109 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1110 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1111 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1112 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1113 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1114 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1115 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1116 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1117 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1118 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1119 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1120 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1121 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1122 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1123 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1124 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1125 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1126 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1127 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1128 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1129 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1130 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1131 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1132 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1133 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1134 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1135 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1136 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1137 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1138 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1139 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1140 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1141 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1142 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1143 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1144 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1145 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1146 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1147 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1148 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1149 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1150 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1151 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1152 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1153 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1154 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1155 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1156 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1157 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1158 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1159 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1160 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1161 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1162 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1163 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1164 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1165 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1166 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1167 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1168 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1169 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1170 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1171 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1172 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1173 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1174 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1175 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1176 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1177 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1178 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1179 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1180 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1181 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1182 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1183 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1184 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1185 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1186 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1187 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1188 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1189 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1190 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1191 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1192 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1193 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1194 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1195 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1196 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1197 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1198 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1199 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1200 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1201 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1202 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1203 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1204 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1205 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1206 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1207 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1208 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1209 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1210 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1211 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1212 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1213 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1214 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1215 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1216 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1217 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1218 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1219 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1220 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1221 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1222 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1223 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1224 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1225 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1226 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1227 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1228 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1229 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1230 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1231 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1232 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1233 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1234 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1235 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1236 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1237 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1238 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1239 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1240 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1241 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1242 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1243 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1244 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1245 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1246 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1247 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1248 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1249 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1250 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1251 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1252 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1253 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1254 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1255 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1256 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1257 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1258 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1259 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1260 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1261 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1262 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1263 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1264 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1265 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1266 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1267 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1268 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1269 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1270 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1271 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1272 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1273 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1274 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1275 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1276 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1277 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1278 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1279 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1280 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1281 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1282 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1283 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1284 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1285 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1286 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1287 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1288 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1289 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1290 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1291 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1292 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1293 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1294 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1295 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1296 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1297 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1298 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1299 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1300 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1301 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1302 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1303 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1304 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1305 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1306 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1307 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1308 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1309 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1310 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1311 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1312 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1313 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1314 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1315 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1316 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1317 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1318 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1319 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1320 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1321 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1322 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1323 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1324 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1325 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1326 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1327 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1328 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1329 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1330 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1331 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1332 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1333 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1334 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1335 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1336 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1337 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1338 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1339 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1340 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1341 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1342 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1343 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1344 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1345 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1346 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1347 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1348 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1349 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1350 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1351 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1352 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1353 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1354 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1355 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1356 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1357 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1358 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1359 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1360 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1361 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1362 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1363 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1364 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1365 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1366 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1367 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1368 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1369 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1370 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1371 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1372 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1373 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1374 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1375 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1376 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1377 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1378 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1379 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1380 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1381 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1382 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1383 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1384 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1385 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1386 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1387 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1388 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1389 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1390 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1391 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1392 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1393 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1394 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1395 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1396 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1397 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1398 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1399 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1400 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1401 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1402 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1403 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1404 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1405 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1406 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1407 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1408 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1409 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1410 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1411 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1412 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1413 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1414 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1415 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1416 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1417 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1418 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1419 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1420 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1421 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1422 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1423 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1424 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1425 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1426 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1427 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1428 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1429 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1430 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1431 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1432 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1433 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1434 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1435 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1436 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1437 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1438 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1439 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1440 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1441 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1442 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1443 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1444 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1445 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1446 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1447 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1448 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1449 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1450 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1451 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1452 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1453 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1454 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1455 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1456 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1457 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1458 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1459 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1460 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1461 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1462 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1463 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1464 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1465 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1466 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1467 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1468 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1469 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1470 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1471 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1472 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1473 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1474 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1475 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1476 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1477 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1478 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1479 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1480 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1481 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1482 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1483 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1484 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1485 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1486 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1487 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1488 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1489 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1490 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1491 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1492 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1493 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1494 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1495 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1496 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1497 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1498 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1499 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1500 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1501 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1502 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1503 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1504 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1505 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1506 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1507 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1508 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1509 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1510 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1511 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1512 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1513 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1514 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1515 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1516 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1517 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1518 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1519 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1520 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1521 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1522 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1523 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1524 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1525 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1526 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1527 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1528 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1529 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1530 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1531 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1532 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1533 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1534 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1535 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1536 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1537 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1538 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1539 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1540 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1541 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1542 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1543 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1544 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1545 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1546 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1547 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1548 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1549 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1550 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1551 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1552 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1553 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1554 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1555 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1556 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1557 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1558 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1559 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1560 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1561 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1562 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1563 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1564 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1565 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1566 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1567 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1568 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1569 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1570 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1571 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1572 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1573 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1574 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1575 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1576 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1577 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1578 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1579 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1580 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1581 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1582 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1583 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1584 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1585 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1586 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1587 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1588 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1589 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1590 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1591 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1592 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1593 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1594 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1595 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1596 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1597 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1598 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1599 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1600 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1601 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1602 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1603 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1604 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1605 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1606 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1607 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1608 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1609 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1610 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1611 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1612 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1613 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1614 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1615 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1616 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1617 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1618 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1619 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1620 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1621 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1622 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1623 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1624 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1625 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1626 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1627 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1628 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1629 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1630 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1631 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1632 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1633 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1634 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1635 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1636 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1637 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1638 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1639 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1640 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1641 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1642 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1643 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1644 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1645 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1646 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1647 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1648 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1649 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1650 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1651 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1652 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1653 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1654 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1655 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1656 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1657 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1658 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1659 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1660 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1661 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1662 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1663 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1664 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1665 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1666 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1667 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1668 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1669 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1670 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1671 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1672 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1673 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1674 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1675 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1676 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1677 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1678 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1679 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1680 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1681 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1682 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1683 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1684 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1685 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1686 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1687 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1688 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1689 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1690 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1691 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1692 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1693 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1694 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1695 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1696 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1697 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1698 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1699 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1700 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1701 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1702 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1703 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1704 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1705 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1706 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1707 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1708 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1709 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1710 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1711 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1712 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1713 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1714 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1715 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1716 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1717 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1718 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1719 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1720 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1721 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1722 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1723 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1724 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1725 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1726 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1727 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1728 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1729 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1730 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1731 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1732 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1733 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1734 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1735 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1736 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1737 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1738 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1739 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1740 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1741 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1742 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1743 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1744 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1745 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1746 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1747 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1748 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1749 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1750 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1751 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1752 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1753 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1754 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1755 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1756 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1757 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1758 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1759 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1760 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1761 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1762 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1763 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1764 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1765 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1766 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1767 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1768 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1769 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1770 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1771 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1772 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1773 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1774 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1775 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1776 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1777 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1778 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1779 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1780 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1781 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1782 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1783 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1784 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1785 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1786 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1787 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1788 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1789 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1790 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1791 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1792 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1793 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1794 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1795 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1796 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1797 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1798 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1799 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1800 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1801 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1802 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1803 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1804 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1805 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1806 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1807 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1808 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1809 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1810 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1811 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1812 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1813 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1814 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1815 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1816 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1817 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1818 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1819 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1820 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1821 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1822 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1823 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1824 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1825 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1826 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1827 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1828 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1829 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1830 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1831 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1832 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1833 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1834 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1835 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1836 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1837 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1838 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1839 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1840 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1841 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1842 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1843 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1844 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1845 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1846 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1847 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1848 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1849 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1850 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1851 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1852 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1853 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1854 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1855 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1856 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1857 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1858 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1859 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1860 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1861 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1862 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1863 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1864 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1865 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1866 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1867 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1868 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1869 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1870 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1871 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1872 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1873 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1874 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1875 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1876 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1877 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1878 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1879 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1880 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1881 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1882 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1883 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1884 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1885 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1886 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1887 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1888 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1889 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1890 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1891 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1892 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1893 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1894 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1895 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1896 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1897 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1898 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1899 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1900 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1901 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1902 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1903 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1904 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1905 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1906 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1907 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1908 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1909 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1910 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1911 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1912 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1913 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1914 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1915 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1916 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1917 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1918 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1919 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1920 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1921 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1922 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1923 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1924 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1925 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1926 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1927 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1928 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1929 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1930 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1931 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1932 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1933 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1934 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1935 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1936 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1937 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1938 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1939 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1940 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1941 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1942 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1943 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1944 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1945 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1946 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1947 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1948 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1949 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1950 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1951 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1952 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1953 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1954 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1955 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1956 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1957 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1958 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1959 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1960 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1961 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1962 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1963 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1964 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1965 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1966 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1967 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1968 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1969 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1970 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1971 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1972 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1973 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1974 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1975 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1976 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1977 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1978 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1979 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1980 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1981 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1982 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1983 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1984 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1985 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1986 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_1987 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1988 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1989 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1990 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1991 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1992 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1993 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1994 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1995 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1996 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1997 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_1998 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_1999 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2000 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2001 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2002 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2003 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2004 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2005 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2006 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2007 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2008 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2009 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2010 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2011 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2012 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2013 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2014 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2015 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2016 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2017 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2018 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2019 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2020 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2021 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2022 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2023 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2024 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2025 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2026 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2027 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2028 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2029 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2030 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2031 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2032 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2033 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2034 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2035 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2036 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2037 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2038 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2039 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2040 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2041 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2042 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2043 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2044 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2045 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2046 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2047 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2048 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2049 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2050 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2051 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2052 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2053 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2054 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2055 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2056 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2057 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2058 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2059 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2060 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2061 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2062 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2063 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2064 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2065 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2066 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2067 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2068 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2069 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2070 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2071 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2072 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2073 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2074 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2075 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2076 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2077 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2078 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2079 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2080 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2081 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2082 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2083 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2084 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2085 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2086 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2087 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2088 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2089 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2090 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2091 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2092 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2093 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2094 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2095 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2096 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2097 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2098 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2099 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2100 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2101 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2102 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2103 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2104 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2105 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2106 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2107 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2108 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2109 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2110 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2111 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2112 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2113 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2114 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2115 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2116 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2117 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2118 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2119 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2120 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2121 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2122 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2123 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2124 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2125 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2126 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2127 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2128 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2129 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2130 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2131 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2132 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2133 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2134 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2135 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2136 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2137 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2138 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2139 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2140 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2141 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2142 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2143 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2144 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2145 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2146 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2147 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2148 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2149 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2150 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2151 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2152 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2153 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2154 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2155 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2156 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2157 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2158 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2159 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2160 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2161 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2162 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2163 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2164 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2165 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2166 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2167 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2168 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2169 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2170 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2171 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2172 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2173 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2174 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2175 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2176 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2177 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2178 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2179 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2180 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2181 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2182 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2183 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2184 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2185 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2186 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2187 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2188 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2189 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2190 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2191 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2192 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2193 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2194 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2195 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2196 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2197 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2198 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2199 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2200 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2201 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2202 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2203 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2204 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2205 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2206 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2207 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2208 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2209 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2210 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2211 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2212 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2213 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2214 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2215 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2216 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2217 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2218 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2219 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2220 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2221 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2222 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2223 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2224 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2225 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2226 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2227 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2228 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2229 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2230 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2231 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2232 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2233 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2234 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2235 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2236 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2237 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2238 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2239 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2240 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2241 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2242 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2243 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2244 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2245 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2246 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2247 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2248 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2249 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2250 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2251 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2252 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2253 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2254 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2255 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2256 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2257 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2258 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2259 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2260 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2261 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2262 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2263 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2264 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2265 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2266 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2267 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2268 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2269 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2270 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2271 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2272 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2273 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2274 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2275 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2276 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2277 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2278 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2279 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2280 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2281 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2282 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2283 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2284 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2285 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2286 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2287 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2288 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2289 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2290 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2291 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2292 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2293 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2294 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2295 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2296 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2297 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2298 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2299 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2300 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2301 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2302 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2303 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2304 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2305 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2306 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2307 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2308 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2309 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2310 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2311 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2312 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2313 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2314 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2315 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2316 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2317 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2318 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2319 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2320 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2321 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2322 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2323 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2324 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2325 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2326 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2327 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2328 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2329 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2330 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2331 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2332 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2333 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2334 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2335 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2336 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2337 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2338 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2339 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2340 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2341 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2342 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2343 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2344 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2345 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2346 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2347 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2348 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2349 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2350 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2351 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2352 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2353 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2354 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2355 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2356 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2357 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2358 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2359 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2360 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2361 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2362 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2363 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2364 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2365 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2366 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2367 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2368 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2369 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2370 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2371 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2372 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2373 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2374 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2375 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2376 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2377 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2378 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2379 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2380 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2381 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2382 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2383 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2384 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2385 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2386 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2387 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2388 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2389 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2390 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2391 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2392 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2393 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2394 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2395 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2396 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2397 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2398 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2399 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2400 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2401 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2402 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2403 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2404 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2405 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2406 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2407 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2408 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2409 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2410 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2411 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2412 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2413 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2414 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2415 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2416 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2417 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2418 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2419 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2420 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2421 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2422 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2423 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2424 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2425 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2426 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2427 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2428 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2429 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2430 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2431 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2432 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2433 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2434 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2435 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2436 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2437 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2438 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2439 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2440 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2441 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2442 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2443 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2444 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2445 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2446 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2447 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2448 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2449 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2450 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2451 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2452 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2453 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2454 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2455 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2456 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2457 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2458 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2459 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2460 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2461 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2462 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2463 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2464 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2465 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2466 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2467 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2468 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2469 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2470 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2471 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2472 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2473 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2474 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2475 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2476 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2477 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2478 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2479 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2480 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2481 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2482 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2483 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2484 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2485 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2486 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2487 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2488 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2489 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2490 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2491 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2492 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2493 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2494 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2495 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2496 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2497 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2498 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2499 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2500 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2501 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2502 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2503 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2504 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2505 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2506 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2507 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2508 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2509 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2510 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2511 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2512 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2513 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2514 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2515 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2516 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2517 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2518 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2519 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2520 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2521 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2522 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2523 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2524 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2525 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2526 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2527 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2528 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2529 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2530 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2531 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2532 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2533 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2534 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2535 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2536 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2537 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2538 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2539 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2540 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2541 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2542 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2543 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2544 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2545 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2546 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2547 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2548 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2549 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2550 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2551 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2552 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2553 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2554 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2555 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2556 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2557 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2558 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2559 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2560 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2561 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2562 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2563 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2564 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2565 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2566 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2567 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2568 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2569 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2570 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2571 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2572 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2573 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2574 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2575 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2576 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2577 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2578 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2579 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2580 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2581 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2582 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2583 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2584 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2585 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2586 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2587 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2588 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2589 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2590 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2591 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2592 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2593 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2594 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2595 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2596 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2597 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2598 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2599 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2600 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2601 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2602 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2603 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2604 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2605 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2606 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2607 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2608 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2609 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2610 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2611 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2612 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2613 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2614 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2615 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2616 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2617 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2618 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2619 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2620 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2621 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2622 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2623 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2624 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2625 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2626 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2627 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2628 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2629 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2630 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2631 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2632 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2633 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2634 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2635 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2636 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2637 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2638 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2639 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2640 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2641 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2642 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2643 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2644 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2645 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2646 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2647 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2648 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2649 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2650 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2651 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2652 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2653 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2654 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2655 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2656 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2657 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2658 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2659 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2660 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2661 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2662 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2663 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2664 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2665 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2666 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2667 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2668 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2669 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2670 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2671 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2672 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2673 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2674 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2675 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2676 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2677 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2678 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2679 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2680 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2681 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2682 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2683 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2684 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2685 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2686 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2687 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2688 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2689 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2690 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2691 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2692 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2693 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2694 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2695 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2696 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2697 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2698 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2699 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2700 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2701 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2702 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2703 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2704 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2705 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2706 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2707 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2708 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2709 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2710 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2711 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2712 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2713 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2714 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2715 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2716 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2717 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2718 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2719 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2720 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2721 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2722 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2723 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2724 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2725 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2726 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2727 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2728 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2729 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2730 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2731 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2732 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2733 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2734 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2735 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2736 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2737 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2738 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2739 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2740 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2741 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2742 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2743 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2744 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2745 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2746 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2747 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2748 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2749 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2750 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2751 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2752 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2753 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2754 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2755 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2756 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2757 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2758 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2759 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2760 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2761 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2762 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2763 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2764 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2765 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2766 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2767 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2768 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2769 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2770 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2771 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2772 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2773 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2774 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2775 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2776 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2777 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2778 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2779 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2780 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2781 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2782 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2783 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2784 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2785 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2786 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2787 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2788 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2789 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2790 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2791 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2792 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2793 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2794 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2795 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2796 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2797 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2798 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2799 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2800 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2801 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2802 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2803 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2804 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2805 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2806 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2807 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2808 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2809 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2810 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2811 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2812 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2813 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2814 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2815 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2816 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2817 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2818 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2819 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2820 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2821 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2822 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2823 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2824 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2825 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2826 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2827 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2828 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2829 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2830 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2831 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2832 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2833 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2834 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2835 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2836 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2837 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2838 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2839 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2840 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2841 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2842 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2843 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2844 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2845 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2846 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2847 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2848 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2849 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2850 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2851 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2852 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2853 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2854 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2855 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2856 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2857 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2858 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2859 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2860 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2861 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2862 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2863 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2864 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2865 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2866 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2867 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2868 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2869 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2870 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2871 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2872 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2873 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2874 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2875 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2876 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2877 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2878 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2879 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2880 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2881 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2882 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2883 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2884 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2885 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2886 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2887 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2888 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2889 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2890 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2891 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2892 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2893 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2894 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2895 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2896 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2897 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2898 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2899 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2900 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2901 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2902 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2903 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2904 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2905 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2906 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2907 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2908 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2909 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2910 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2911 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2912 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2913 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2914 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2915 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2916 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2917 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2918 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2919 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2920 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2921 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2922 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2923 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2924 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2925 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2926 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2927 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2928 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2929 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2930 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2931 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2932 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2933 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2934 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2935 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2936 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2937 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2938 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2939 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2940 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2941 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2942 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2943 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2944 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2945 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2946 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2947 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2948 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2949 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2950 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2951 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2952 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2953 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2954 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2955 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2956 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2957 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2958 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2959 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2960 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2961 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2962 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2963 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2964 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2965 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2966 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2967 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2968 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2969 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2970 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2971 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2972 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2973 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2974 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2975 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2976 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2977 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2978 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2979 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2980 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2981 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2982 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2983 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2984 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2985 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2986 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2987 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2988 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_2989 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2990 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2991 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2992 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2993 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2994 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_2995 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2996 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2997 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2998 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_2999 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3000 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3001 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3002 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3003 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3004 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3005 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3006 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3007 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3008 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3009 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3010 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3011 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3012 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3013 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3014 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3015 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3016 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3017 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3018 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3019 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3020 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3021 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3022 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3023 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3024 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3025 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3026 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3027 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3028 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3029 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3030 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3031 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3032 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3033 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3034 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3035 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3036 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3037 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3038 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3039 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3040 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3041 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3042 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3043 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3044 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3045 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3046 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3047 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3048 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3049 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3050 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3051 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3052 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3053 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3054 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3055 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3056 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3057 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3058 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3059 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3060 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3061 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3062 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3063 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3064 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3065 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3066 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3067 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3068 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3069 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3070 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3071 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3072 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3073 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3074 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3075 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3076 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3077 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3078 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3079 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3080 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3081 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3082 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3083 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3084 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3085 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3086 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3087 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3088 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3089 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3090 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3091 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3092 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3093 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3094 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3095 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3096 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3097 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3098 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3099 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3100 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3101 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3102 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3103 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3104 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3105 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3106 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3107 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3108 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3109 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3110 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3111 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3112 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3113 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3114 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3115 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3116 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3117 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3118 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3119 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3120 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3121 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3122 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3123 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3124 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3125 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3126 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3127 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3128 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3129 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3130 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3131 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3132 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3133 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3134 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3135 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3136 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3137 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3138 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3139 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3140 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3141 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3142 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3143 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3144 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3145 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3146 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3147 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3148 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3149 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3150 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3151 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3152 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3153 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3154 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3155 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3156 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3157 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3158 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3159 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3160 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3161 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3162 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3163 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3164 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3165 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3166 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3167 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3168 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3169 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3170 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3171 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3172 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3173 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3174 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3175 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3176 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3177 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3178 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3179 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3180 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3181 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3182 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3183 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3184 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3185 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3186 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3187 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3188 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3189 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3190 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3191 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3192 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3193 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3194 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3195 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3196 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3197 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3198 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3199 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3200 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3201 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3202 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3203 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3204 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3205 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3206 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3207 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3208 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3209 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3210 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3211 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3212 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3213 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3214 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3215 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3216 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3217 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3218 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3219 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3220 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3221 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3222 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3223 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3224 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3225 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3226 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3227 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3228 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3229 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3230 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3231 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3232 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3233 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3234 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3235 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3236 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3237 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3238 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3239 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3240 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3241 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3242 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3243 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3244 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3245 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3246 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3247 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3248 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3249 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3250 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3251 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3252 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3253 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3254 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3255 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3256 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3257 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3258 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3259 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3260 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3261 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3262 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3263 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3264 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3265 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3266 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3267 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3268 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3269 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3270 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3271 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3272 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3273 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3274 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3275 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3276 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3277 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3278 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3279 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3280 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3281 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3282 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3283 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3284 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3285 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3286 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3287 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3288 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3289 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3290 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3291 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3292 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3293 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3294 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3295 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3296 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3297 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3298 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3299 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3300 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3301 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3302 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3303 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3304 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3305 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3306 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3307 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3308 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3309 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3310 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3311 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3312 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3313 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3314 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3315 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3316 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3317 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3318 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3319 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3320 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3321 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3322 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3323 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3324 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3325 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3326 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3327 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3328 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3329 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3330 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3331 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3332 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3333 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3334 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3335 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3336 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3337 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3338 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3339 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3340 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3341 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3342 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3343 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3344 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3345 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3346 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3347 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3348 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3349 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3350 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3351 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3352 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3353 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3354 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3355 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3356 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3357 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3358 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3359 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3360 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3361 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3362 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3363 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3364 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3365 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3366 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3367 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3368 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3369 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3370 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3371 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3372 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3373 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3374 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3375 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3376 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3377 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3378 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3379 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3380 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3381 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3382 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3383 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3384 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3385 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3386 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3387 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3388 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3389 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3390 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3391 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3392 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3393 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3394 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3395 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3396 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3397 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3398 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3399 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3400 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3401 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3402 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3403 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3404 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3405 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3406 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3407 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3408 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3409 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3410 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3411 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3412 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3413 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3414 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3415 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3416 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3417 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3418 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3419 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3420 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3421 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3422 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3423 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3424 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3425 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3426 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3427 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3428 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3429 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3430 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3431 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3432 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3433 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3434 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3435 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3436 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3437 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3438 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3439 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3440 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3441 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3442 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3443 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3444 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3445 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3446 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3447 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3448 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3449 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3450 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3451 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3452 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3453 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3454 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3455 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3456 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3457 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3458 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3459 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3460 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3461 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3462 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3463 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3464 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3465 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3466 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3467 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3468 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3469 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3470 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3471 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3472 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3473 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3474 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3475 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3476 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3477 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3478 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3479 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3480 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3481 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3482 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3483 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3484 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3485 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3486 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3487 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3488 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3489 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3490 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3491 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3492 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3493 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3494 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3495 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3496 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3497 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3498 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3499 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3500 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3501 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3502 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3503 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3504 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3505 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3506 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3507 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3508 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3509 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3510 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3511 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3512 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3513 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3514 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3515 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3516 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3517 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3518 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3519 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3520 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3521 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3522 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3523 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3524 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3525 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3526 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3527 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3528 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3529 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3530 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3531 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3532 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3533 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3534 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3535 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3536 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3537 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3538 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3539 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3540 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3541 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3542 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3543 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3544 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3545 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3546 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3547 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3548 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3549 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3550 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3551 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3552 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3553 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3554 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3555 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3556 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3557 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3558 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3559 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3560 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3561 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3562 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3563 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3564 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3565 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3566 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3567 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3568 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3569 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3570 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3571 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3572 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3573 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3574 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3575 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3576 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3577 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3578 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3579 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3580 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3581 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3582 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3583 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3584 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3585 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3586 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3587 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3588 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3589 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3590 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3591 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3592 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3593 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3594 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3595 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3596 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3597 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3598 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3599 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3600 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3601 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3602 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3603 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3604 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3605 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3606 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3607 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3608 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3609 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3610 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3611 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3612 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3613 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3614 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3615 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3616 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3617 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3618 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3619 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3620 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3621 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3622 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3623 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3624 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3625 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3626 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3627 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3628 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3629 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3630 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3631 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3632 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3633 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3634 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3635 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3636 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3637 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3638 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3639 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3640 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3641 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3642 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3643 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3644 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3645 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3646 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3647 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3648 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3649 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3650 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3651 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3652 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3653 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3654 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3655 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3656 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3657 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3658 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3659 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3660 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3661 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3662 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3663 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3664 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3665 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3666 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3667 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3668 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3669 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3670 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3671 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3672 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3673 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3674 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3675 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3676 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3677 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3678 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3679 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3680 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3681 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3682 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3683 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3684 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3685 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3686 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3687 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3688 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3689 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3690 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3691 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3692 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3693 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3694 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3695 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3696 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3697 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3698 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3699 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3700 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3701 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3702 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3703 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3704 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3705 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3706 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3707 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3708 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3709 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3710 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3711 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3712 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3713 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3714 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3715 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3716 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3717 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3718 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3719 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3720 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3721 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3722 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3723 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3724 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3725 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3726 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3727 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3728 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3729 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3730 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3731 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3732 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3733 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3734 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3735 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3736 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3737 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3738 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3739 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3740 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3741 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3742 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3743 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3744 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3745 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3746 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3747 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3748 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3749 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3750 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3751 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3752 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3753 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3754 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3755 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3756 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3757 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3758 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3759 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3760 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3761 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3762 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3763 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3764 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3765 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3766 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3767 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3768 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3769 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3770 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3771 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3772 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3773 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3774 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3775 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3776 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3777 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3778 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3779 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3780 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3781 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3782 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3783 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3784 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3785 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3786 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3787 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3788 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3789 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3790 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3791 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3792 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3793 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3794 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3795 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3796 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3797 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3798 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3799 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3800 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3801 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3802 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3803 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3804 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3805 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3806 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3807 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3808 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3809 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3810 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3811 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3812 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3813 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3814 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3815 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3816 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3817 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3818 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3819 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3820 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3821 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3822 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3823 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3824 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3825 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3826 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3827 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3828 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3829 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3830 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3831 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3832 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3833 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3834 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3835 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3836 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3837 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3838 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3839 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3840 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3841 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3842 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3843 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3844 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3845 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3846 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3847 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3848 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3849 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3850 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3851 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3852 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3853 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3854 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3855 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3856 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3857 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3858 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3859 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3860 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3861 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3862 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3863 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3864 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3865 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3866 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3867 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3868 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3869 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3870 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3871 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3872 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3873 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3874 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3875 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3876 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3877 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3878 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3879 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3880 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3881 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3882 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3883 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3884 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3885 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3886 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3887 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3888 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3889 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3890 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3891 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3892 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3893 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3894 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3895 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3896 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3897 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3898 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3899 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3900 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3901 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3902 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3903 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3904 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3905 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3906 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3907 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3908 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3909 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3910 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3911 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3912 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3913 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3914 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3915 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3916 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3917 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3918 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3919 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3920 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3921 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3922 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3923 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3924 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3925 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3926 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3927 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3928 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3929 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3930 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3931 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3932 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3933 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3934 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3935 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3936 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3937 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3938 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3939 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3940 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3941 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3942 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3943 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3944 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3945 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3946 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3947 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3948 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3949 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3950 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3951 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3952 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3953 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3954 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3955 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3956 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3957 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3958 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3959 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3960 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3961 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3962 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3963 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3964 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3965 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3966 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3967 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3968 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3969 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3970 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3971 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3972 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3973 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3974 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3975 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3976 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3977 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3978 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3979 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3980 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3981 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3982 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3983 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3984 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3985 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3986 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3987 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3988 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3989 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3990 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_3991 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3992 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3993 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3994 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3995 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3996 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_3997 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3998 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_3999 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4000 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4001 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4002 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4003 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4004 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4005 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4006 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4007 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4008 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4009 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4010 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4011 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4012 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4013 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4014 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4015 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4016 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4017 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4018 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4019 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4020 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4021 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4022 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4023 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4024 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4025 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4026 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4027 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4028 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4029 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4030 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4031 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4032 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4033 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4034 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4035 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4036 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4037 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4038 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4039 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4040 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4041 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4042 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4043 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4044 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4045 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4046 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4047 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4048 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4049 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4050 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4051 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4052 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4053 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4054 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4055 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4056 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4057 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4058 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4059 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4060 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4061 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4062 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4063 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4064 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4065 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4066 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4067 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4068 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4069 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4070 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4071 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4072 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4073 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4074 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4075 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4076 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4077 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4078 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4079 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4080 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4081 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4082 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4083 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4084 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4085 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4086 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4087 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4088 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4089 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4090 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4091 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4092 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4093 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4094 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4095 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4096 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4097 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4098 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4099 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4100 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4101 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4102 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4103 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4104 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4105 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4106 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4107 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4108 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4109 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4110 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4111 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4112 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4113 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4114 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4115 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4116 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4117 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4118 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4119 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4120 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4121 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4122 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4123 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4124 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4125 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4126 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4127 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4128 = rand_strided((2, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4129 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4130 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4131 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4132 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4133 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4134 = rand_strided((2, 2, 3, 3), (18, 9, 3, 1), device='cuda:0', dtype=torch.float32)
    primals_4135 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4136 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4137 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4138 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4139 = rand_strided((2, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4140 = rand_strided((4, 2, 1, 1), (2, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4141 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4142 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4143 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4144 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4145 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4146 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4147 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    primals_4148 = rand_strided((4, 4, 1, 1), (4, 1, 1, 1), device='cuda:0', dtype=torch.float32)
    primals_4149 = rand_strided((4, ), (1, ), device='cuda:0', dtype=torch.float32)
    fn = lambda: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274, primals_275, primals_276, primals_277, primals_278, primals_279, primals_280, primals_281, primals_282, primals_283, primals_284, primals_285, primals_286, primals_287, primals_288, primals_289, primals_290, primals_291, primals_292, primals_293, primals_294, primals_295, primals_296, primals_297, primals_298, primals_299, primals_300, primals_301, primals_302, primals_303, primals_304, primals_305, primals_306, primals_307, primals_308, primals_309, primals_310, primals_311, primals_312, primals_313, primals_314, primals_315, primals_316, primals_317, primals_318, primals_319, primals_320, primals_321, primals_322, primals_323, primals_324, primals_325, primals_326, primals_327, primals_328, primals_329, primals_330, primals_331, primals_332, primals_333, primals_334, primals_335, primals_336, primals_337, primals_338, primals_339, primals_340, primals_341, primals_342, primals_343, primals_344, primals_345, primals_346, primals_347, primals_348, primals_349, primals_350, primals_351, primals_352, primals_353, primals_354, primals_355, primals_356, primals_357, primals_358, primals_359, primals_360, primals_361, primals_362, primals_363, primals_364, primals_365, primals_366, primals_367, primals_368, primals_369, primals_370, primals_371, primals_372, primals_373, primals_374, primals_375, primals_376, primals_377, primals_378, primals_379, primals_380, primals_381, primals_382, primals_383, primals_384, primals_385, primals_386, primals_387, primals_388, primals_389, primals_390, primals_391, primals_392, primals_393, primals_394, primals_395, primals_396, primals_397, primals_398, primals_399, primals_400, primals_401, primals_402, primals_403, primals_404, primals_405, primals_406, primals_407, primals_408, primals_409, primals_410, primals_411, primals_412, primals_413, primals_414, primals_415, primals_416, primals_417, primals_418, primals_419, primals_420, primals_421, primals_422, primals_423, primals_424, primals_425, primals_426, primals_427, primals_428, primals_429, primals_430, primals_431, primals_432, primals_433, primals_434, primals_435, primals_436, primals_437, primals_438, primals_439, primals_440, primals_441, primals_442, primals_443, primals_444, primals_445, primals_446, primals_447, primals_448, primals_449, primals_450, primals_451, primals_452, primals_453, primals_454, primals_455, primals_456, primals_457, primals_458, primals_459, primals_460, primals_461, primals_462, primals_463, primals_464, primals_465, primals_466, primals_467, primals_468, primals_469, primals_470, primals_471, primals_472, primals_473, primals_474, primals_475, primals_476, primals_477, primals_478, primals_479, primals_480, primals_481, primals_482, primals_483, primals_484, primals_485, primals_486, primals_487, primals_488, primals_489, primals_490, primals_491, primals_492, primals_493, primals_494, primals_495, primals_496, primals_497, primals_498, primals_499, primals_500, primals_501, primals_502, primals_503, primals_504, primals_505, primals_506, primals_507, primals_508, primals_509, primals_510, primals_511, primals_512, primals_513, primals_514, primals_515, primals_516, primals_517, primals_518, primals_519, primals_520, primals_521, primals_522, primals_523, primals_524, primals_525, primals_526, primals_527, primals_528, primals_529, primals_530, primals_531, primals_532, primals_533, primals_534, primals_535, primals_536, primals_537, primals_538, primals_539, primals_540, primals_541, primals_542, primals_543, primals_544, primals_545, primals_546, primals_547, primals_548, primals_549, primals_550, primals_551, primals_552, primals_553, primals_554, primals_555, primals_556, primals_557, primals_558, primals_559, primals_560, primals_561, primals_562, primals_563, primals_564, primals_565, primals_566, primals_567, primals_568, primals_569, primals_570, primals_571, primals_572, primals_573, primals_574, primals_575, primals_576, primals_577, primals_578, primals_579, primals_580, primals_581, primals_582, primals_583, primals_584, primals_585, primals_586, primals_587, primals_588, primals_589, primals_590, primals_591, primals_592, primals_593, primals_594, primals_595, primals_596, primals_597, primals_598, primals_599, primals_600, primals_601, primals_602, primals_603, primals_604, primals_605, primals_606, primals_607, primals_608, primals_609, primals_610, primals_611, primals_612, primals_613, primals_614, primals_615, primals_616, primals_617, primals_618, primals_619, primals_620, primals_621, primals_622, primals_623, primals_624, primals_625, primals_626, primals_627, primals_628, primals_629, primals_630, primals_631, primals_632, primals_633, primals_634, primals_635, primals_636, primals_637, primals_638, primals_639, primals_640, primals_641, primals_642, primals_643, primals_644, primals_645, primals_646, primals_647, primals_648, primals_649, primals_650, primals_651, primals_652, primals_653, primals_654, primals_655, primals_656, primals_657, primals_658, primals_659, primals_660, primals_661, primals_662, primals_663, primals_664, primals_665, primals_666, primals_667, primals_668, primals_669, primals_670, primals_671, primals_672, primals_673, primals_674, primals_675, primals_676, primals_677, primals_678, primals_679, primals_680, primals_681, primals_682, primals_683, primals_684, primals_685, primals_686, primals_687, primals_688, primals_689, primals_690, primals_691, primals_692, primals_693, primals_694, primals_695, primals_696, primals_697, primals_698, primals_699, primals_700, primals_701, primals_702, primals_703, primals_704, primals_705, primals_706, primals_707, primals_708, primals_709, primals_710, primals_711, primals_712, primals_713, primals_714, primals_715, primals_716, primals_717, primals_718, primals_719, primals_720, primals_721, primals_722, primals_723, primals_724, primals_725, primals_726, primals_727, primals_728, primals_729, primals_730, primals_731, primals_732, primals_733, primals_734, primals_735, primals_736, primals_737, primals_738, primals_739, primals_740, primals_741, primals_742, primals_743, primals_744, primals_745, primals_746, primals_747, primals_748, primals_749, primals_750, primals_751, primals_752, primals_753, primals_754, primals_755, primals_756, primals_757, primals_758, primals_759, primals_760, primals_761, primals_762, primals_763, primals_764, primals_765, primals_766, primals_767, primals_768, primals_769, primals_770, primals_771, primals_772, primals_773, primals_774, primals_775, primals_776, primals_777, primals_778, primals_779, primals_780, primals_781, primals_782, primals_783, primals_784, primals_785, primals_786, primals_787, primals_788, primals_789, primals_790, primals_791, primals_792, primals_793, primals_794, primals_795, primals_796, primals_797, primals_798, primals_799, primals_800, primals_801, primals_802, primals_803, primals_804, primals_805, primals_806, primals_807, primals_808, primals_809, primals_810, primals_811, primals_812, primals_813, primals_814, primals_815, primals_816, primals_817, primals_818, primals_819, primals_820, primals_821, primals_822, primals_823, primals_824, primals_825, primals_826, primals_827, primals_828, primals_829, primals_830, primals_831, primals_832, primals_833, primals_834, primals_835, primals_836, primals_837, primals_838, primals_839, primals_840, primals_841, primals_842, primals_843, primals_844, primals_845, primals_846, primals_847, primals_848, primals_849, primals_850, primals_851, primals_852, primals_853, primals_854, primals_855, primals_856, primals_857, primals_858, primals_859, primals_860, primals_861, primals_862, primals_863, primals_864, primals_865, primals_866, primals_867, primals_868, primals_869, primals_870, primals_871, primals_872, primals_873, primals_874, primals_875, primals_876, primals_877, primals_878, primals_879, primals_880, primals_881, primals_882, primals_883, primals_884, primals_885, primals_886, primals_887, primals_888, primals_889, primals_890, primals_891, primals_892, primals_893, primals_894, primals_895, primals_896, primals_897, primals_898, primals_899, primals_900, primals_901, primals_902, primals_903, primals_904, primals_905, primals_906, primals_907, primals_908, primals_909, primals_910, primals_911, primals_912, primals_913, primals_914, primals_915, primals_916, primals_917, primals_918, primals_919, primals_920, primals_921, primals_922, primals_923, primals_924, primals_925, primals_926, primals_927, primals_928, primals_929, primals_930, primals_931, primals_932, primals_933, primals_934, primals_935, primals_936, primals_937, primals_938, primals_939, primals_940, primals_941, primals_942, primals_943, primals_944, primals_945, primals_946, primals_947, primals_948, primals_949, primals_950, primals_951, primals_952, primals_953, primals_954, primals_955, primals_956, primals_957, primals_958, primals_959, primals_960, primals_961, primals_962, primals_963, primals_964, primals_965, primals_966, primals_967, primals_968, primals_969, primals_970, primals_971, primals_972, primals_973, primals_974, primals_975, primals_976, primals_977, primals_978, primals_979, primals_980, primals_981, primals_982, primals_983, primals_984, primals_985, primals_986, primals_987, primals_988, primals_989, primals_990, primals_991, primals_992, primals_993, primals_994, primals_995, primals_996, primals_997, primals_998, primals_999, primals_1000, primals_1001, primals_1002, primals_1003, primals_1004, primals_1005, primals_1006, primals_1007, primals_1008, primals_1009, primals_1010, primals_1011, primals_1012, primals_1013, primals_1014, primals_1015, primals_1016, primals_1017, primals_1018, primals_1019, primals_1020, primals_1021, primals_1022, primals_1023, primals_1024, primals_1025, primals_1026, primals_1027, primals_1028, primals_1029, primals_1030, primals_1031, primals_1032, primals_1033, primals_1034, primals_1035, primals_1036, primals_1037, primals_1038, primals_1039, primals_1040, primals_1041, primals_1042, primals_1043, primals_1044, primals_1045, primals_1046, primals_1047, primals_1048, primals_1049, primals_1050, primals_1051, primals_1052, primals_1053, primals_1054, primals_1055, primals_1056, primals_1057, primals_1058, primals_1059, primals_1060, primals_1061, primals_1062, primals_1063, primals_1064, primals_1065, primals_1066, primals_1067, primals_1068, primals_1069, primals_1070, primals_1071, primals_1072, primals_1073, primals_1074, primals_1075, primals_1076, primals_1077, primals_1078, primals_1079, primals_1080, primals_1081, primals_1082, primals_1083, primals_1084, primals_1085, primals_1086, primals_1087, primals_1088, primals_1089, primals_1090, primals_1091, primals_1092, primals_1093, primals_1094, primals_1095, primals_1096, primals_1097, primals_1098, primals_1099, primals_1100, primals_1101, primals_1102, primals_1103, primals_1104, primals_1105, primals_1106, primals_1107, primals_1108, primals_1109, primals_1110, primals_1111, primals_1112, primals_1113, primals_1114, primals_1115, primals_1116, primals_1117, primals_1118, primals_1119, primals_1120, primals_1121, primals_1122, primals_1123, primals_1124, primals_1125, primals_1126, primals_1127, primals_1128, primals_1129, primals_1130, primals_1131, primals_1132, primals_1133, primals_1134, primals_1135, primals_1136, primals_1137, primals_1138, primals_1139, primals_1140, primals_1141, primals_1142, primals_1143, primals_1144, primals_1145, primals_1146, primals_1147, primals_1148, primals_1149, primals_1150, primals_1151, primals_1152, primals_1153, primals_1154, primals_1155, primals_1156, primals_1157, primals_1158, primals_1159, primals_1160, primals_1161, primals_1162, primals_1163, primals_1164, primals_1165, primals_1166, primals_1167, primals_1168, primals_1169, primals_1170, primals_1171, primals_1172, primals_1173, primals_1174, primals_1175, primals_1176, primals_1177, primals_1178, primals_1179, primals_1180, primals_1181, primals_1182, primals_1183, primals_1184, primals_1185, primals_1186, primals_1187, primals_1188, primals_1189, primals_1190, primals_1191, primals_1192, primals_1193, primals_1194, primals_1195, primals_1196, primals_1197, primals_1198, primals_1199, primals_1200, primals_1201, primals_1202, primals_1203, primals_1204, primals_1205, primals_1206, primals_1207, primals_1208, primals_1209, primals_1210, primals_1211, primals_1212, primals_1213, primals_1214, primals_1215, primals_1216, primals_1217, primals_1218, primals_1219, primals_1220, primals_1221, primals_1222, primals_1223, primals_1224, primals_1225, primals_1226, primals_1227, primals_1228, primals_1229, primals_1230, primals_1231, primals_1232, primals_1233, primals_1234, primals_1235, primals_1236, primals_1237, primals_1238, primals_1239, primals_1240, primals_1241, primals_1242, primals_1243, primals_1244, primals_1245, primals_1246, primals_1247, primals_1248, primals_1249, primals_1250, primals_1251, primals_1252, primals_1253, primals_1254, primals_1255, primals_1256, primals_1257, primals_1258, primals_1259, primals_1260, primals_1261, primals_1262, primals_1263, primals_1264, primals_1265, primals_1266, primals_1267, primals_1268, primals_1269, primals_1270, primals_1271, primals_1272, primals_1273, primals_1274, primals_1275, primals_1276, primals_1277, primals_1278, primals_1279, primals_1280, primals_1281, primals_1282, primals_1283, primals_1284, primals_1285, primals_1286, primals_1287, primals_1288, primals_1289, primals_1290, primals_1291, primals_1292, primals_1293, primals_1294, primals_1295, primals_1296, primals_1297, primals_1298, primals_1299, primals_1300, primals_1301, primals_1302, primals_1303, primals_1304, primals_1305, primals_1306, primals_1307, primals_1308, primals_1309, primals_1310, primals_1311, primals_1312, primals_1313, primals_1314, primals_1315, primals_1316, primals_1317, primals_1318, primals_1319, primals_1320, primals_1321, primals_1322, primals_1323, primals_1324, primals_1325, primals_1326, primals_1327, primals_1328, primals_1329, primals_1330, primals_1331, primals_1332, primals_1333, primals_1334, primals_1335, primals_1336, primals_1337, primals_1338, primals_1339, primals_1340, primals_1341, primals_1342, primals_1343, primals_1344, primals_1345, primals_1346, primals_1347, primals_1348, primals_1349, primals_1350, primals_1351, primals_1352, primals_1353, primals_1354, primals_1355, primals_1356, primals_1357, primals_1358, primals_1359, primals_1360, primals_1361, primals_1362, primals_1363, primals_1364, primals_1365, primals_1366, primals_1367, primals_1368, primals_1369, primals_1370, primals_1371, primals_1372, primals_1373, primals_1374, primals_1375, primals_1376, primals_1377, primals_1378, primals_1379, primals_1380, primals_1381, primals_1382, primals_1383, primals_1384, primals_1385, primals_1386, primals_1387, primals_1388, primals_1389, primals_1390, primals_1391, primals_1392, primals_1393, primals_1394, primals_1395, primals_1396, primals_1397, primals_1398, primals_1399, primals_1400, primals_1401, primals_1402, primals_1403, primals_1404, primals_1405, primals_1406, primals_1407, primals_1408, primals_1409, primals_1410, primals_1411, primals_1412, primals_1413, primals_1414, primals_1415, primals_1416, primals_1417, primals_1418, primals_1419, primals_1420, primals_1421, primals_1422, primals_1423, primals_1424, primals_1425, primals_1426, primals_1427, primals_1428, primals_1429, primals_1430, primals_1431, primals_1432, primals_1433, primals_1434, primals_1435, primals_1436, primals_1437, primals_1438, primals_1439, primals_1440, primals_1441, primals_1442, primals_1443, primals_1444, primals_1445, primals_1446, primals_1447, primals_1448, primals_1449, primals_1450, primals_1451, primals_1452, primals_1453, primals_1454, primals_1455, primals_1456, primals_1457, primals_1458, primals_1459, primals_1460, primals_1461, primals_1462, primals_1463, primals_1464, primals_1465, primals_1466, primals_1467, primals_1468, primals_1469, primals_1470, primals_1471, primals_1472, primals_1473, primals_1474, primals_1475, primals_1476, primals_1477, primals_1478, primals_1479, primals_1480, primals_1481, primals_1482, primals_1483, primals_1484, primals_1485, primals_1486, primals_1487, primals_1488, primals_1489, primals_1490, primals_1491, primals_1492, primals_1493, primals_1494, primals_1495, primals_1496, primals_1497, primals_1498, primals_1499, primals_1500, primals_1501, primals_1502, primals_1503, primals_1504, primals_1505, primals_1506, primals_1507, primals_1508, primals_1509, primals_1510, primals_1511, primals_1512, primals_1513, primals_1514, primals_1515, primals_1516, primals_1517, primals_1518, primals_1519, primals_1520, primals_1521, primals_1522, primals_1523, primals_1524, primals_1525, primals_1526, primals_1527, primals_1528, primals_1529, primals_1530, primals_1531, primals_1532, primals_1533, primals_1534, primals_1535, primals_1536, primals_1537, primals_1538, primals_1539, primals_1540, primals_1541, primals_1542, primals_1543, primals_1544, primals_1545, primals_1546, primals_1547, primals_1548, primals_1549, primals_1550, primals_1551, primals_1552, primals_1553, primals_1554, primals_1555, primals_1556, primals_1557, primals_1558, primals_1559, primals_1560, primals_1561, primals_1562, primals_1563, primals_1564, primals_1565, primals_1566, primals_1567, primals_1568, primals_1569, primals_1570, primals_1571, primals_1572, primals_1573, primals_1574, primals_1575, primals_1576, primals_1577, primals_1578, primals_1579, primals_1580, primals_1581, primals_1582, primals_1583, primals_1584, primals_1585, primals_1586, primals_1587, primals_1588, primals_1589, primals_1590, primals_1591, primals_1592, primals_1593, primals_1594, primals_1595, primals_1596, primals_1597, primals_1598, primals_1599, primals_1600, primals_1601, primals_1602, primals_1603, primals_1604, primals_1605, primals_1606, primals_1607, primals_1608, primals_1609, primals_1610, primals_1611, primals_1612, primals_1613, primals_1614, primals_1615, primals_1616, primals_1617, primals_1618, primals_1619, primals_1620, primals_1621, primals_1622, primals_1623, primals_1624, primals_1625, primals_1626, primals_1627, primals_1628, primals_1629, primals_1630, primals_1631, primals_1632, primals_1633, primals_1634, primals_1635, primals_1636, primals_1637, primals_1638, primals_1639, primals_1640, primals_1641, primals_1642, primals_1643, primals_1644, primals_1645, primals_1646, primals_1647, primals_1648, primals_1649, primals_1650, primals_1651, primals_1652, primals_1653, primals_1654, primals_1655, primals_1656, primals_1657, primals_1658, primals_1659, primals_1660, primals_1661, primals_1662, primals_1663, primals_1664, primals_1665, primals_1666, primals_1667, primals_1668, primals_1669, primals_1670, primals_1671, primals_1672, primals_1673, primals_1674, primals_1675, primals_1676, primals_1677, primals_1678, primals_1679, primals_1680, primals_1681, primals_1682, primals_1683, primals_1684, primals_1685, primals_1686, primals_1687, primals_1688, primals_1689, primals_1690, primals_1691, primals_1692, primals_1693, primals_1694, primals_1695, primals_1696, primals_1697, primals_1698, primals_1699, primals_1700, primals_1701, primals_1702, primals_1703, primals_1704, primals_1705, primals_1706, primals_1707, primals_1708, primals_1709, primals_1710, primals_1711, primals_1712, primals_1713, primals_1714, primals_1715, primals_1716, primals_1717, primals_1718, primals_1719, primals_1720, primals_1721, primals_1722, primals_1723, primals_1724, primals_1725, primals_1726, primals_1727, primals_1728, primals_1729, primals_1730, primals_1731, primals_1732, primals_1733, primals_1734, primals_1735, primals_1736, primals_1737, primals_1738, primals_1739, primals_1740, primals_1741, primals_1742, primals_1743, primals_1744, primals_1745, primals_1746, primals_1747, primals_1748, primals_1749, primals_1750, primals_1751, primals_1752, primals_1753, primals_1754, primals_1755, primals_1756, primals_1757, primals_1758, primals_1759, primals_1760, primals_1761, primals_1762, primals_1763, primals_1764, primals_1765, primals_1766, primals_1767, primals_1768, primals_1769, primals_1770, primals_1771, primals_1772, primals_1773, primals_1774, primals_1775, primals_1776, primals_1777, primals_1778, primals_1779, primals_1780, primals_1781, primals_1782, primals_1783, primals_1784, primals_1785, primals_1786, primals_1787, primals_1788, primals_1789, primals_1790, primals_1791, primals_1792, primals_1793, primals_1794, primals_1795, primals_1796, primals_1797, primals_1798, primals_1799, primals_1800, primals_1801, primals_1802, primals_1803, primals_1804, primals_1805, primals_1806, primals_1807, primals_1808, primals_1809, primals_1810, primals_1811, primals_1812, primals_1813, primals_1814, primals_1815, primals_1816, primals_1817, primals_1818, primals_1819, primals_1820, primals_1821, primals_1822, primals_1823, primals_1824, primals_1825, primals_1826, primals_1827, primals_1828, primals_1829, primals_1830, primals_1831, primals_1832, primals_1833, primals_1834, primals_1835, primals_1836, primals_1837, primals_1838, primals_1839, primals_1840, primals_1841, primals_1842, primals_1843, primals_1844, primals_1845, primals_1846, primals_1847, primals_1848, primals_1849, primals_1850, primals_1851, primals_1852, primals_1853, primals_1854, primals_1855, primals_1856, primals_1857, primals_1858, primals_1859, primals_1860, primals_1861, primals_1862, primals_1863, primals_1864, primals_1865, primals_1866, primals_1867, primals_1868, primals_1869, primals_1870, primals_1871, primals_1872, primals_1873, primals_1874, primals_1875, primals_1876, primals_1877, primals_1878, primals_1879, primals_1880, primals_1881, primals_1882, primals_1883, primals_1884, primals_1885, primals_1886, primals_1887, primals_1888, primals_1889, primals_1890, primals_1891, primals_1892, primals_1893, primals_1894, primals_1895, primals_1896, primals_1897, primals_1898, primals_1899, primals_1900, primals_1901, primals_1902, primals_1903, primals_1904, primals_1905, primals_1906, primals_1907, primals_1908, primals_1909, primals_1910, primals_1911, primals_1912, primals_1913, primals_1914, primals_1915, primals_1916, primals_1917, primals_1918, primals_1919, primals_1920, primals_1921, primals_1922, primals_1923, primals_1924, primals_1925, primals_1926, primals_1927, primals_1928, primals_1929, primals_1930, primals_1931, primals_1932, primals_1933, primals_1934, primals_1935, primals_1936, primals_1937, primals_1938, primals_1939, primals_1940, primals_1941, primals_1942, primals_1943, primals_1944, primals_1945, primals_1946, primals_1947, primals_1948, primals_1949, primals_1950, primals_1951, primals_1952, primals_1953, primals_1954, primals_1955, primals_1956, primals_1957, primals_1958, primals_1959, primals_1960, primals_1961, primals_1962, primals_1963, primals_1964, primals_1965, primals_1966, primals_1967, primals_1968, primals_1969, primals_1970, primals_1971, primals_1972, primals_1973, primals_1974, primals_1975, primals_1976, primals_1977, primals_1978, primals_1979, primals_1980, primals_1981, primals_1982, primals_1983, primals_1984, primals_1985, primals_1986, primals_1987, primals_1988, primals_1989, primals_1990, primals_1991, primals_1992, primals_1993, primals_1994, primals_1995, primals_1996, primals_1997, primals_1998, primals_1999, primals_2000, primals_2001, primals_2002, primals_2003, primals_2004, primals_2005, primals_2006, primals_2007, primals_2008, primals_2009, primals_2010, primals_2011, primals_2012, primals_2013, primals_2014, primals_2015, primals_2016, primals_2017, primals_2018, primals_2019, primals_2020, primals_2021, primals_2022, primals_2023, primals_2024, primals_2025, primals_2026, primals_2027, primals_2028, primals_2029, primals_2030, primals_2031, primals_2032, primals_2033, primals_2034, primals_2035, primals_2036, primals_2037, primals_2038, primals_2039, primals_2040, primals_2041, primals_2042, primals_2043, primals_2044, primals_2045, primals_2046, primals_2047, primals_2048, primals_2049, primals_2050, primals_2051, primals_2052, primals_2053, primals_2054, primals_2055, primals_2056, primals_2057, primals_2058, primals_2059, primals_2060, primals_2061, primals_2062, primals_2063, primals_2064, primals_2065, primals_2066, primals_2067, primals_2068, primals_2069, primals_2070, primals_2071, primals_2072, primals_2073, primals_2074, primals_2075, primals_2076, primals_2077, primals_2078, primals_2079, primals_2080, primals_2081, primals_2082, primals_2083, primals_2084, primals_2085, primals_2086, primals_2087, primals_2088, primals_2089, primals_2090, primals_2091, primals_2092, primals_2093, primals_2094, primals_2095, primals_2096, primals_2097, primals_2098, primals_2099, primals_2100, primals_2101, primals_2102, primals_2103, primals_2104, primals_2105, primals_2106, primals_2107, primals_2108, primals_2109, primals_2110, primals_2111, primals_2112, primals_2113, primals_2114, primals_2115, primals_2116, primals_2117, primals_2118, primals_2119, primals_2120, primals_2121, primals_2122, primals_2123, primals_2124, primals_2125, primals_2126, primals_2127, primals_2128, primals_2129, primals_2130, primals_2131, primals_2132, primals_2133, primals_2134, primals_2135, primals_2136, primals_2137, primals_2138, primals_2139, primals_2140, primals_2141, primals_2142, primals_2143, primals_2144, primals_2145, primals_2146, primals_2147, primals_2148, primals_2149, primals_2150, primals_2151, primals_2152, primals_2153, primals_2154, primals_2155, primals_2156, primals_2157, primals_2158, primals_2159, primals_2160, primals_2161, primals_2162, primals_2163, primals_2164, primals_2165, primals_2166, primals_2167, primals_2168, primals_2169, primals_2170, primals_2171, primals_2172, primals_2173, primals_2174, primals_2175, primals_2176, primals_2177, primals_2178, primals_2179, primals_2180, primals_2181, primals_2182, primals_2183, primals_2184, primals_2185, primals_2186, primals_2187, primals_2188, primals_2189, primals_2190, primals_2191, primals_2192, primals_2193, primals_2194, primals_2195, primals_2196, primals_2197, primals_2198, primals_2199, primals_2200, primals_2201, primals_2202, primals_2203, primals_2204, primals_2205, primals_2206, primals_2207, primals_2208, primals_2209, primals_2210, primals_2211, primals_2212, primals_2213, primals_2214, primals_2215, primals_2216, primals_2217, primals_2218, primals_2219, primals_2220, primals_2221, primals_2222, primals_2223, primals_2224, primals_2225, primals_2226, primals_2227, primals_2228, primals_2229, primals_2230, primals_2231, primals_2232, primals_2233, primals_2234, primals_2235, primals_2236, primals_2237, primals_2238, primals_2239, primals_2240, primals_2241, primals_2242, primals_2243, primals_2244, primals_2245, primals_2246, primals_2247, primals_2248, primals_2249, primals_2250, primals_2251, primals_2252, primals_2253, primals_2254, primals_2255, primals_2256, primals_2257, primals_2258, primals_2259, primals_2260, primals_2261, primals_2262, primals_2263, primals_2264, primals_2265, primals_2266, primals_2267, primals_2268, primals_2269, primals_2270, primals_2271, primals_2272, primals_2273, primals_2274, primals_2275, primals_2276, primals_2277, primals_2278, primals_2279, primals_2280, primals_2281, primals_2282, primals_2283, primals_2284, primals_2285, primals_2286, primals_2287, primals_2288, primals_2289, primals_2290, primals_2291, primals_2292, primals_2293, primals_2294, primals_2295, primals_2296, primals_2297, primals_2298, primals_2299, primals_2300, primals_2301, primals_2302, primals_2303, primals_2304, primals_2305, primals_2306, primals_2307, primals_2308, primals_2309, primals_2310, primals_2311, primals_2312, primals_2313, primals_2314, primals_2315, primals_2316, primals_2317, primals_2318, primals_2319, primals_2320, primals_2321, primals_2322, primals_2323, primals_2324, primals_2325, primals_2326, primals_2327, primals_2328, primals_2329, primals_2330, primals_2331, primals_2332, primals_2333, primals_2334, primals_2335, primals_2336, primals_2337, primals_2338, primals_2339, primals_2340, primals_2341, primals_2342, primals_2343, primals_2344, primals_2345, primals_2346, primals_2347, primals_2348, primals_2349, primals_2350, primals_2351, primals_2352, primals_2353, primals_2354, primals_2355, primals_2356, primals_2357, primals_2358, primals_2359, primals_2360, primals_2361, primals_2362, primals_2363, primals_2364, primals_2365, primals_2366, primals_2367, primals_2368, primals_2369, primals_2370, primals_2371, primals_2372, primals_2373, primals_2374, primals_2375, primals_2376, primals_2377, primals_2378, primals_2379, primals_2380, primals_2381, primals_2382, primals_2383, primals_2384, primals_2385, primals_2386, primals_2387, primals_2388, primals_2389, primals_2390, primals_2391, primals_2392, primals_2393, primals_2394, primals_2395, primals_2396, primals_2397, primals_2398, primals_2399, primals_2400, primals_2401, primals_2402, primals_2403, primals_2404, primals_2405, primals_2406, primals_2407, primals_2408, primals_2409, primals_2410, primals_2411, primals_2412, primals_2413, primals_2414, primals_2415, primals_2416, primals_2417, primals_2418, primals_2419, primals_2420, primals_2421, primals_2422, primals_2423, primals_2424, primals_2425, primals_2426, primals_2427, primals_2428, primals_2429, primals_2430, primals_2431, primals_2432, primals_2433, primals_2434, primals_2435, primals_2436, primals_2437, primals_2438, primals_2439, primals_2440, primals_2441, primals_2442, primals_2443, primals_2444, primals_2445, primals_2446, primals_2447, primals_2448, primals_2449, primals_2450, primals_2451, primals_2452, primals_2453, primals_2454, primals_2455, primals_2456, primals_2457, primals_2458, primals_2459, primals_2460, primals_2461, primals_2462, primals_2463, primals_2464, primals_2465, primals_2466, primals_2467, primals_2468, primals_2469, primals_2470, primals_2471, primals_2472, primals_2473, primals_2474, primals_2475, primals_2476, primals_2477, primals_2478, primals_2479, primals_2480, primals_2481, primals_2482, primals_2483, primals_2484, primals_2485, primals_2486, primals_2487, primals_2488, primals_2489, primals_2490, primals_2491, primals_2492, primals_2493, primals_2494, primals_2495, primals_2496, primals_2497, primals_2498, primals_2499, primals_2500, primals_2501, primals_2502, primals_2503, primals_2504, primals_2505, primals_2506, primals_2507, primals_2508, primals_2509, primals_2510, primals_2511, primals_2512, primals_2513, primals_2514, primals_2515, primals_2516, primals_2517, primals_2518, primals_2519, primals_2520, primals_2521, primals_2522, primals_2523, primals_2524, primals_2525, primals_2526, primals_2527, primals_2528, primals_2529, primals_2530, primals_2531, primals_2532, primals_2533, primals_2534, primals_2535, primals_2536, primals_2537, primals_2538, primals_2539, primals_2540, primals_2541, primals_2542, primals_2543, primals_2544, primals_2545, primals_2546, primals_2547, primals_2548, primals_2549, primals_2550, primals_2551, primals_2552, primals_2553, primals_2554, primals_2555, primals_2556, primals_2557, primals_2558, primals_2559, primals_2560, primals_2561, primals_2562, primals_2563, primals_2564, primals_2565, primals_2566, primals_2567, primals_2568, primals_2569, primals_2570, primals_2571, primals_2572, primals_2573, primals_2574, primals_2575, primals_2576, primals_2577, primals_2578, primals_2579, primals_2580, primals_2581, primals_2582, primals_2583, primals_2584, primals_2585, primals_2586, primals_2587, primals_2588, primals_2589, primals_2590, primals_2591, primals_2592, primals_2593, primals_2594, primals_2595, primals_2596, primals_2597, primals_2598, primals_2599, primals_2600, primals_2601, primals_2602, primals_2603, primals_2604, primals_2605, primals_2606, primals_2607, primals_2608, primals_2609, primals_2610, primals_2611, primals_2612, primals_2613, primals_2614, primals_2615, primals_2616, primals_2617, primals_2618, primals_2619, primals_2620, primals_2621, primals_2622, primals_2623, primals_2624, primals_2625, primals_2626, primals_2627, primals_2628, primals_2629, primals_2630, primals_2631, primals_2632, primals_2633, primals_2634, primals_2635, primals_2636, primals_2637, primals_2638, primals_2639, primals_2640, primals_2641, primals_2642, primals_2643, primals_2644, primals_2645, primals_2646, primals_2647, primals_2648, primals_2649, primals_2650, primals_2651, primals_2652, primals_2653, primals_2654, primals_2655, primals_2656, primals_2657, primals_2658, primals_2659, primals_2660, primals_2661, primals_2662, primals_2663, primals_2664, primals_2665, primals_2666, primals_2667, primals_2668, primals_2669, primals_2670, primals_2671, primals_2672, primals_2673, primals_2674, primals_2675, primals_2676, primals_2677, primals_2678, primals_2679, primals_2680, primals_2681, primals_2682, primals_2683, primals_2684, primals_2685, primals_2686, primals_2687, primals_2688, primals_2689, primals_2690, primals_2691, primals_2692, primals_2693, primals_2694, primals_2695, primals_2696, primals_2697, primals_2698, primals_2699, primals_2700, primals_2701, primals_2702, primals_2703, primals_2704, primals_2705, primals_2706, primals_2707, primals_2708, primals_2709, primals_2710, primals_2711, primals_2712, primals_2713, primals_2714, primals_2715, primals_2716, primals_2717, primals_2718, primals_2719, primals_2720, primals_2721, primals_2722, primals_2723, primals_2724, primals_2725, primals_2726, primals_2727, primals_2728, primals_2729, primals_2730, primals_2731, primals_2732, primals_2733, primals_2734, primals_2735, primals_2736, primals_2737, primals_2738, primals_2739, primals_2740, primals_2741, primals_2742, primals_2743, primals_2744, primals_2745, primals_2746, primals_2747, primals_2748, primals_2749, primals_2750, primals_2751, primals_2752, primals_2753, primals_2754, primals_2755, primals_2756, primals_2757, primals_2758, primals_2759, primals_2760, primals_2761, primals_2762, primals_2763, primals_2764, primals_2765, primals_2766, primals_2767, primals_2768, primals_2769, primals_2770, primals_2771, primals_2772, primals_2773, primals_2774, primals_2775, primals_2776, primals_2777, primals_2778, primals_2779, primals_2780, primals_2781, primals_2782, primals_2783, primals_2784, primals_2785, primals_2786, primals_2787, primals_2788, primals_2789, primals_2790, primals_2791, primals_2792, primals_2793, primals_2794, primals_2795, primals_2796, primals_2797, primals_2798, primals_2799, primals_2800, primals_2801, primals_2802, primals_2803, primals_2804, primals_2805, primals_2806, primals_2807, primals_2808, primals_2809, primals_2810, primals_2811, primals_2812, primals_2813, primals_2814, primals_2815, primals_2816, primals_2817, primals_2818, primals_2819, primals_2820, primals_2821, primals_2822, primals_2823, primals_2824, primals_2825, primals_2826, primals_2827, primals_2828, primals_2829, primals_2830, primals_2831, primals_2832, primals_2833, primals_2834, primals_2835, primals_2836, primals_2837, primals_2838, primals_2839, primals_2840, primals_2841, primals_2842, primals_2843, primals_2844, primals_2845, primals_2846, primals_2847, primals_2848, primals_2849, primals_2850, primals_2851, primals_2852, primals_2853, primals_2854, primals_2855, primals_2856, primals_2857, primals_2858, primals_2859, primals_2860, primals_2861, primals_2862, primals_2863, primals_2864, primals_2865, primals_2866, primals_2867, primals_2868, primals_2869, primals_2870, primals_2871, primals_2872, primals_2873, primals_2874, primals_2875, primals_2876, primals_2877, primals_2878, primals_2879, primals_2880, primals_2881, primals_2882, primals_2883, primals_2884, primals_2885, primals_2886, primals_2887, primals_2888, primals_2889, primals_2890, primals_2891, primals_2892, primals_2893, primals_2894, primals_2895, primals_2896, primals_2897, primals_2898, primals_2899, primals_2900, primals_2901, primals_2902, primals_2903, primals_2904, primals_2905, primals_2906, primals_2907, primals_2908, primals_2909, primals_2910, primals_2911, primals_2912, primals_2913, primals_2914, primals_2915, primals_2916, primals_2917, primals_2918, primals_2919, primals_2920, primals_2921, primals_2922, primals_2923, primals_2924, primals_2925, primals_2926, primals_2927, primals_2928, primals_2929, primals_2930, primals_2931, primals_2932, primals_2933, primals_2934, primals_2935, primals_2936, primals_2937, primals_2938, primals_2939, primals_2940, primals_2941, primals_2942, primals_2943, primals_2944, primals_2945, primals_2946, primals_2947, primals_2948, primals_2949, primals_2950, primals_2951, primals_2952, primals_2953, primals_2954, primals_2955, primals_2956, primals_2957, primals_2958, primals_2959, primals_2960, primals_2961, primals_2962, primals_2963, primals_2964, primals_2965, primals_2966, primals_2967, primals_2968, primals_2969, primals_2970, primals_2971, primals_2972, primals_2973, primals_2974, primals_2975, primals_2976, primals_2977, primals_2978, primals_2979, primals_2980, primals_2981, primals_2982, primals_2983, primals_2984, primals_2985, primals_2986, primals_2987, primals_2988, primals_2989, primals_2990, primals_2991, primals_2992, primals_2993, primals_2994, primals_2995, primals_2996, primals_2997, primals_2998, primals_2999, primals_3000, primals_3001, primals_3002, primals_3003, primals_3004, primals_3005, primals_3006, primals_3007, primals_3008, primals_3009, primals_3010, primals_3011, primals_3012, primals_3013, primals_3014, primals_3015, primals_3016, primals_3017, primals_3018, primals_3019, primals_3020, primals_3021, primals_3022, primals_3023, primals_3024, primals_3025, primals_3026, primals_3027, primals_3028, primals_3029, primals_3030, primals_3031, primals_3032, primals_3033, primals_3034, primals_3035, primals_3036, primals_3037, primals_3038, primals_3039, primals_3040, primals_3041, primals_3042, primals_3043, primals_3044, primals_3045, primals_3046, primals_3047, primals_3048, primals_3049, primals_3050, primals_3051, primals_3052, primals_3053, primals_3054, primals_3055, primals_3056, primals_3057, primals_3058, primals_3059, primals_3060, primals_3061, primals_3062, primals_3063, primals_3064, primals_3065, primals_3066, primals_3067, primals_3068, primals_3069, primals_3070, primals_3071, primals_3072, primals_3073, primals_3074, primals_3075, primals_3076, primals_3077, primals_3078, primals_3079, primals_3080, primals_3081, primals_3082, primals_3083, primals_3084, primals_3085, primals_3086, primals_3087, primals_3088, primals_3089, primals_3090, primals_3091, primals_3092, primals_3093, primals_3094, primals_3095, primals_3096, primals_3097, primals_3098, primals_3099, primals_3100, primals_3101, primals_3102, primals_3103, primals_3104, primals_3105, primals_3106, primals_3107, primals_3108, primals_3109, primals_3110, primals_3111, primals_3112, primals_3113, primals_3114, primals_3115, primals_3116, primals_3117, primals_3118, primals_3119, primals_3120, primals_3121, primals_3122, primals_3123, primals_3124, primals_3125, primals_3126, primals_3127, primals_3128, primals_3129, primals_3130, primals_3131, primals_3132, primals_3133, primals_3134, primals_3135, primals_3136, primals_3137, primals_3138, primals_3139, primals_3140, primals_3141, primals_3142, primals_3143, primals_3144, primals_3145, primals_3146, primals_3147, primals_3148, primals_3149, primals_3150, primals_3151, primals_3152, primals_3153, primals_3154, primals_3155, primals_3156, primals_3157, primals_3158, primals_3159, primals_3160, primals_3161, primals_3162, primals_3163, primals_3164, primals_3165, primals_3166, primals_3167, primals_3168, primals_3169, primals_3170, primals_3171, primals_3172, primals_3173, primals_3174, primals_3175, primals_3176, primals_3177, primals_3178, primals_3179, primals_3180, primals_3181, primals_3182, primals_3183, primals_3184, primals_3185, primals_3186, primals_3187, primals_3188, primals_3189, primals_3190, primals_3191, primals_3192, primals_3193, primals_3194, primals_3195, primals_3196, primals_3197, primals_3198, primals_3199, primals_3200, primals_3201, primals_3202, primals_3203, primals_3204, primals_3205, primals_3206, primals_3207, primals_3208, primals_3209, primals_3210, primals_3211, primals_3212, primals_3213, primals_3214, primals_3215, primals_3216, primals_3217, primals_3218, primals_3219, primals_3220, primals_3221, primals_3222, primals_3223, primals_3224, primals_3225, primals_3226, primals_3227, primals_3228, primals_3229, primals_3230, primals_3231, primals_3232, primals_3233, primals_3234, primals_3235, primals_3236, primals_3237, primals_3238, primals_3239, primals_3240, primals_3241, primals_3242, primals_3243, primals_3244, primals_3245, primals_3246, primals_3247, primals_3248, primals_3249, primals_3250, primals_3251, primals_3252, primals_3253, primals_3254, primals_3255, primals_3256, primals_3257, primals_3258, primals_3259, primals_3260, primals_3261, primals_3262, primals_3263, primals_3264, primals_3265, primals_3266, primals_3267, primals_3268, primals_3269, primals_3270, primals_3271, primals_3272, primals_3273, primals_3274, primals_3275, primals_3276, primals_3277, primals_3278, primals_3279, primals_3280, primals_3281, primals_3282, primals_3283, primals_3284, primals_3285, primals_3286, primals_3287, primals_3288, primals_3289, primals_3290, primals_3291, primals_3292, primals_3293, primals_3294, primals_3295, primals_3296, primals_3297, primals_3298, primals_3299, primals_3300, primals_3301, primals_3302, primals_3303, primals_3304, primals_3305, primals_3306, primals_3307, primals_3308, primals_3309, primals_3310, primals_3311, primals_3312, primals_3313, primals_3314, primals_3315, primals_3316, primals_3317, primals_3318, primals_3319, primals_3320, primals_3321, primals_3322, primals_3323, primals_3324, primals_3325, primals_3326, primals_3327, primals_3328, primals_3329, primals_3330, primals_3331, primals_3332, primals_3333, primals_3334, primals_3335, primals_3336, primals_3337, primals_3338, primals_3339, primals_3340, primals_3341, primals_3342, primals_3343, primals_3344, primals_3345, primals_3346, primals_3347, primals_3348, primals_3349, primals_3350, primals_3351, primals_3352, primals_3353, primals_3354, primals_3355, primals_3356, primals_3357, primals_3358, primals_3359, primals_3360, primals_3361, primals_3362, primals_3363, primals_3364, primals_3365, primals_3366, primals_3367, primals_3368, primals_3369, primals_3370, primals_3371, primals_3372, primals_3373, primals_3374, primals_3375, primals_3376, primals_3377, primals_3378, primals_3379, primals_3380, primals_3381, primals_3382, primals_3383, primals_3384, primals_3385, primals_3386, primals_3387, primals_3388, primals_3389, primals_3390, primals_3391, primals_3392, primals_3393, primals_3394, primals_3395, primals_3396, primals_3397, primals_3398, primals_3399, primals_3400, primals_3401, primals_3402, primals_3403, primals_3404, primals_3405, primals_3406, primals_3407, primals_3408, primals_3409, primals_3410, primals_3411, primals_3412, primals_3413, primals_3414, primals_3415, primals_3416, primals_3417, primals_3418, primals_3419, primals_3420, primals_3421, primals_3422, primals_3423, primals_3424, primals_3425, primals_3426, primals_3427, primals_3428, primals_3429, primals_3430, primals_3431, primals_3432, primals_3433, primals_3434, primals_3435, primals_3436, primals_3437, primals_3438, primals_3439, primals_3440, primals_3441, primals_3442, primals_3443, primals_3444, primals_3445, primals_3446, primals_3447, primals_3448, primals_3449, primals_3450, primals_3451, primals_3452, primals_3453, primals_3454, primals_3455, primals_3456, primals_3457, primals_3458, primals_3459, primals_3460, primals_3461, primals_3462, primals_3463, primals_3464, primals_3465, primals_3466, primals_3467, primals_3468, primals_3469, primals_3470, primals_3471, primals_3472, primals_3473, primals_3474, primals_3475, primals_3476, primals_3477, primals_3478, primals_3479, primals_3480, primals_3481, primals_3482, primals_3483, primals_3484, primals_3485, primals_3486, primals_3487, primals_3488, primals_3489, primals_3490, primals_3491, primals_3492, primals_3493, primals_3494, primals_3495, primals_3496, primals_3497, primals_3498, primals_3499, primals_3500, primals_3501, primals_3502, primals_3503, primals_3504, primals_3505, primals_3506, primals_3507, primals_3508, primals_3509, primals_3510, primals_3511, primals_3512, primals_3513, primals_3514, primals_3515, primals_3516, primals_3517, primals_3518, primals_3519, primals_3520, primals_3521, primals_3522, primals_3523, primals_3524, primals_3525, primals_3526, primals_3527, primals_3528, primals_3529, primals_3530, primals_3531, primals_3532, primals_3533, primals_3534, primals_3535, primals_3536, primals_3537, primals_3538, primals_3539, primals_3540, primals_3541, primals_3542, primals_3543, primals_3544, primals_3545, primals_3546, primals_3547, primals_3548, primals_3549, primals_3550, primals_3551, primals_3552, primals_3553, primals_3554, primals_3555, primals_3556, primals_3557, primals_3558, primals_3559, primals_3560, primals_3561, primals_3562, primals_3563, primals_3564, primals_3565, primals_3566, primals_3567, primals_3568, primals_3569, primals_3570, primals_3571, primals_3572, primals_3573, primals_3574, primals_3575, primals_3576, primals_3577, primals_3578, primals_3579, primals_3580, primals_3581, primals_3582, primals_3583, primals_3584, primals_3585, primals_3586, primals_3587, primals_3588, primals_3589, primals_3590, primals_3591, primals_3592, primals_3593, primals_3594, primals_3595, primals_3596, primals_3597, primals_3598, primals_3599, primals_3600, primals_3601, primals_3602, primals_3603, primals_3604, primals_3605, primals_3606, primals_3607, primals_3608, primals_3609, primals_3610, primals_3611, primals_3612, primals_3613, primals_3614, primals_3615, primals_3616, primals_3617, primals_3618, primals_3619, primals_3620, primals_3621, primals_3622, primals_3623, primals_3624, primals_3625, primals_3626, primals_3627, primals_3628, primals_3629, primals_3630, primals_3631, primals_3632, primals_3633, primals_3634, primals_3635, primals_3636, primals_3637, primals_3638, primals_3639, primals_3640, primals_3641, primals_3642, primals_3643, primals_3644, primals_3645, primals_3646, primals_3647, primals_3648, primals_3649, primals_3650, primals_3651, primals_3652, primals_3653, primals_3654, primals_3655, primals_3656, primals_3657, primals_3658, primals_3659, primals_3660, primals_3661, primals_3662, primals_3663, primals_3664, primals_3665, primals_3666, primals_3667, primals_3668, primals_3669, primals_3670, primals_3671, primals_3672, primals_3673, primals_3674, primals_3675, primals_3676, primals_3677, primals_3678, primals_3679, primals_3680, primals_3681, primals_3682, primals_3683, primals_3684, primals_3685, primals_3686, primals_3687, primals_3688, primals_3689, primals_3690, primals_3691, primals_3692, primals_3693, primals_3694, primals_3695, primals_3696, primals_3697, primals_3698, primals_3699, primals_3700, primals_3701, primals_3702, primals_3703, primals_3704, primals_3705, primals_3706, primals_3707, primals_3708, primals_3709, primals_3710, primals_3711, primals_3712, primals_3713, primals_3714, primals_3715, primals_3716, primals_3717, primals_3718, primals_3719, primals_3720, primals_3721, primals_3722, primals_3723, primals_3724, primals_3725, primals_3726, primals_3727, primals_3728, primals_3729, primals_3730, primals_3731, primals_3732, primals_3733, primals_3734, primals_3735, primals_3736, primals_3737, primals_3738, primals_3739, primals_3740, primals_3741, primals_3742, primals_3743, primals_3744, primals_3745, primals_3746, primals_3747, primals_3748, primals_3749, primals_3750, primals_3751, primals_3752, primals_3753, primals_3754, primals_3755, primals_3756, primals_3757, primals_3758, primals_3759, primals_3760, primals_3761, primals_3762, primals_3763, primals_3764, primals_3765, primals_3766, primals_3767, primals_3768, primals_3769, primals_3770, primals_3771, primals_3772, primals_3773, primals_3774, primals_3775, primals_3776, primals_3777, primals_3778, primals_3779, primals_3780, primals_3781, primals_3782, primals_3783, primals_3784, primals_3785, primals_3786, primals_3787, primals_3788, primals_3789, primals_3790, primals_3791, primals_3792, primals_3793, primals_3794, primals_3795, primals_3796, primals_3797, primals_3798, primals_3799, primals_3800, primals_3801, primals_3802, primals_3803, primals_3804, primals_3805, primals_3806, primals_3807, primals_3808, primals_3809, primals_3810, primals_3811, primals_3812, primals_3813, primals_3814, primals_3815, primals_3816, primals_3817, primals_3818, primals_3819, primals_3820, primals_3821, primals_3822, primals_3823, primals_3824, primals_3825, primals_3826, primals_3827, primals_3828, primals_3829, primals_3830, primals_3831, primals_3832, primals_3833, primals_3834, primals_3835, primals_3836, primals_3837, primals_3838, primals_3839, primals_3840, primals_3841, primals_3842, primals_3843, primals_3844, primals_3845, primals_3846, primals_3847, primals_3848, primals_3849, primals_3850, primals_3851, primals_3852, primals_3853, primals_3854, primals_3855, primals_3856, primals_3857, primals_3858, primals_3859, primals_3860, primals_3861, primals_3862, primals_3863, primals_3864, primals_3865, primals_3866, primals_3867, primals_3868, primals_3869, primals_3870, primals_3871, primals_3872, primals_3873, primals_3874, primals_3875, primals_3876, primals_3877, primals_3878, primals_3879, primals_3880, primals_3881, primals_3882, primals_3883, primals_3884, primals_3885, primals_3886, primals_3887, primals_3888, primals_3889, primals_3890, primals_3891, primals_3892, primals_3893, primals_3894, primals_3895, primals_3896, primals_3897, primals_3898, primals_3899, primals_3900, primals_3901, primals_3902, primals_3903, primals_3904, primals_3905, primals_3906, primals_3907, primals_3908, primals_3909, primals_3910, primals_3911, primals_3912, primals_3913, primals_3914, primals_3915, primals_3916, primals_3917, primals_3918, primals_3919, primals_3920, primals_3921, primals_3922, primals_3923, primals_3924, primals_3925, primals_3926, primals_3927, primals_3928, primals_3929, primals_3930, primals_3931, primals_3932, primals_3933, primals_3934, primals_3935, primals_3936, primals_3937, primals_3938, primals_3939, primals_3940, primals_3941, primals_3942, primals_3943, primals_3944, primals_3945, primals_3946, primals_3947, primals_3948, primals_3949, primals_3950, primals_3951, primals_3952, primals_3953, primals_3954, primals_3955, primals_3956, primals_3957, primals_3958, primals_3959, primals_3960, primals_3961, primals_3962, primals_3963, primals_3964, primals_3965, primals_3966, primals_3967, primals_3968, primals_3969, primals_3970, primals_3971, primals_3972, primals_3973, primals_3974, primals_3975, primals_3976, primals_3977, primals_3978, primals_3979, primals_3980, primals_3981, primals_3982, primals_3983, primals_3984, primals_3985, primals_3986, primals_3987, primals_3988, primals_3989, primals_3990, primals_3991, primals_3992, primals_3993, primals_3994, primals_3995, primals_3996, primals_3997, primals_3998, primals_3999, primals_4000, primals_4001, primals_4002, primals_4003, primals_4004, primals_4005, primals_4006, primals_4007, primals_4008, primals_4009, primals_4010, primals_4011, primals_4012, primals_4013, primals_4014, primals_4015, primals_4016, primals_4017, primals_4018, primals_4019, primals_4020, primals_4021, primals_4022, primals_4023, primals_4024, primals_4025, primals_4026, primals_4027, primals_4028, primals_4029, primals_4030, primals_4031, primals_4032, primals_4033, primals_4034, primals_4035, primals_4036, primals_4037, primals_4038, primals_4039, primals_4040, primals_4041, primals_4042, primals_4043, primals_4044, primals_4045, primals_4046, primals_4047, primals_4048, primals_4049, primals_4050, primals_4051, primals_4052, primals_4053, primals_4054, primals_4055, primals_4056, primals_4057, primals_4058, primals_4059, primals_4060, primals_4061, primals_4062, primals_4063, primals_4064, primals_4065, primals_4066, primals_4067, primals_4068, primals_4069, primals_4070, primals_4071, primals_4072, primals_4073, primals_4074, primals_4075, primals_4076, primals_4077, primals_4078, primals_4079, primals_4080, primals_4081, primals_4082, primals_4083, primals_4084, primals_4085, primals_4086, primals_4087, primals_4088, primals_4089, primals_4090, primals_4091, primals_4092, primals_4093, primals_4094, primals_4095, primals_4096, primals_4097, primals_4098, primals_4099, primals_4100, primals_4101, primals_4102, primals_4103, primals_4104, primals_4105, primals_4106, primals_4107, primals_4108, primals_4109, primals_4110, primals_4111, primals_4112, primals_4113, primals_4114, primals_4115, primals_4116, primals_4117, primals_4118, primals_4119, primals_4120, primals_4121, primals_4122, primals_4123, primals_4124, primals_4125, primals_4126, primals_4127, primals_4128, primals_4129, primals_4130, primals_4131, primals_4132, primals_4133, primals_4134, primals_4135, primals_4136, primals_4137, primals_4138, primals_4139, primals_4140, primals_4141, primals_4142, primals_4143, primals_4144, primals_4145, primals_4146, primals_4147, primals_4148, primals_4149])
    return print_performance(fn, times=times, repeat=repeat)


if __name__ == "__main__":
    from torch._inductor.wrapper_benchmark import compiled_module_main
    compiled_module_main('None', benchmark_compiled_module)
