
import triton
import triton.language as tl
from triton.compiler.compiler import AttrsDescriptor

from torch._inductor.runtime import triton_helpers, triton_heuristics
from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, DeviceProperties
triton_helpers.set_driver_to_gpu()

@triton_heuristics.pointwise(
    size_hints={'x': 1}, 
    filename=__file__,
    triton_meta={'signature': {'in_out_ptr0': '*fp32', 'in_ptr0': '*fp32', 'in_ptr1': '*fp32', 'in_ptr2': '*fp32', 'in_ptr3': '*fp32', 'in_ptr4': '*fp32', 'in_ptr5': '*fp32', 'in_ptr6': '*fp32', 'in_ptr7': '*fp32', 'xnumel': 'i32'}, 'device': DeviceProperties(type='cuda', index=0, multi_processor_count=132, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, warp_size=32), 'constants': {'xnumel': 1}, 'configs': [AttrsDescriptor.from_dict({'arg_properties': {'tt.divisibility': (0, 1, 2, 3, 4, 5, 6, 7, 8), 'tt.equal_to': (9,)}, 'cls': 'AttrsDescriptor'})]},
    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_div_mean_mul_rsub_3', 'mutated_arg_names': ['in_out_ptr0'], 'optimize_mem': True, 'no_x_dim': False, 'num_load': 32, 'num_reduction': 0, 'backend_hash': 'A0D3A2B50857E9501D843044B01F725922648D76E6D26323B14F8A4EA4473D1B', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False},
    min_elem_per_thread=0
)
@triton.jit
def triton_poi_fused_add_div_mean_mul_rsub_3(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, xnumel, XBLOCK : tl.constexpr):
    xnumel = 1
    xoffset = tl.program_id(0) * XBLOCK
    xindex = xoffset + tl.arange(0, XBLOCK)[:]
    xmask = tl.full([XBLOCK], True, tl.int1)
    tmp0 = tl.load(in_ptr0 + (0))
    tmp1 = tl.broadcast_to(tmp0, [XBLOCK])
    tmp6 = tl.load(in_ptr1 + (0))
    tmp7 = tl.broadcast_to(tmp6, [XBLOCK])
    tmp11 = tl.load(in_ptr0 + (1))
    tmp12 = tl.broadcast_to(tmp11, [XBLOCK])
    tmp15 = tl.load(in_ptr1 + (1))
    tmp16 = tl.broadcast_to(tmp15, [XBLOCK])
    tmp21 = tl.load(in_ptr0 + (2))
    tmp22 = tl.broadcast_to(tmp21, [XBLOCK])
    tmp25 = tl.load(in_ptr1 + (2))
    tmp26 = tl.broadcast_to(tmp25, [XBLOCK])
    tmp31 = tl.load(in_ptr0 + (3))
    tmp32 = tl.broadcast_to(tmp31, [XBLOCK])
    tmp35 = tl.load(in_ptr1 + (3))
    tmp36 = tl.broadcast_to(tmp35, [XBLOCK])
    tmp45 = tl.load(in_ptr2 + (0))
    tmp46 = tl.broadcast_to(tmp45, [XBLOCK])
    tmp49 = tl.load(in_ptr3 + (0))
    tmp50 = tl.broadcast_to(tmp49, [XBLOCK])
    tmp54 = tl.load(in_ptr2 + (1))
    tmp55 = tl.broadcast_to(tmp54, [XBLOCK])
    tmp58 = tl.load(in_ptr3 + (1))
    tmp59 = tl.broadcast_to(tmp58, [XBLOCK])
    tmp64 = tl.load(in_ptr2 + (2))
    tmp65 = tl.broadcast_to(tmp64, [XBLOCK])
    tmp68 = tl.load(in_ptr3 + (2))
    tmp69 = tl.broadcast_to(tmp68, [XBLOCK])
    tmp74 = tl.load(in_ptr2 + (3))
    tmp75 = tl.broadcast_to(tmp74, [XBLOCK])
    tmp78 = tl.load(in_ptr3 + (3))
    tmp79 = tl.broadcast_to(tmp78, [XBLOCK])
    tmp86 = tl.load(in_ptr4 + (0))
    tmp87 = tl.broadcast_to(tmp86, [XBLOCK])
    tmp90 = tl.load(in_ptr5 + (0))
    tmp91 = tl.broadcast_to(tmp90, [XBLOCK])
    tmp95 = tl.load(in_ptr4 + (1))
    tmp96 = tl.broadcast_to(tmp95, [XBLOCK])
    tmp99 = tl.load(in_ptr5 + (1))
    tmp100 = tl.broadcast_to(tmp99, [XBLOCK])
    tmp105 = tl.load(in_ptr4 + (2))
    tmp106 = tl.broadcast_to(tmp105, [XBLOCK])
    tmp109 = tl.load(in_ptr5 + (2))
    tmp110 = tl.broadcast_to(tmp109, [XBLOCK])
    tmp115 = tl.load(in_ptr4 + (3))
    tmp116 = tl.broadcast_to(tmp115, [XBLOCK])
    tmp119 = tl.load(in_ptr5 + (3))
    tmp120 = tl.broadcast_to(tmp119, [XBLOCK])
    tmp127 = tl.load(in_ptr6 + (0))
    tmp128 = tl.broadcast_to(tmp127, [XBLOCK])
    tmp131 = tl.load(in_ptr7 + (0))
    tmp132 = tl.broadcast_to(tmp131, [XBLOCK])
    tmp136 = tl.load(in_ptr6 + (1))
    tmp137 = tl.broadcast_to(tmp136, [XBLOCK])
    tmp140 = tl.load(in_ptr7 + (1))
    tmp141 = tl.broadcast_to(tmp140, [XBLOCK])
    tmp146 = tl.load(in_ptr6 + (2))
    tmp147 = tl.broadcast_to(tmp146, [XBLOCK])
    tmp150 = tl.load(in_ptr7 + (2))
    tmp151 = tl.broadcast_to(tmp150, [XBLOCK])
    tmp156 = tl.load(in_ptr6 + (3))
    tmp157 = tl.broadcast_to(tmp156, [XBLOCK])
    tmp160 = tl.load(in_ptr7 + (3))
    tmp161 = tl.broadcast_to(tmp160, [XBLOCK])
    tmp2 = 2.0
    tmp3 = tmp1 * tmp2
    tmp4 = 1.0
    tmp5 = tmp3 + tmp4
    tmp8 = tmp7 + tmp4
    tmp9 = tmp5 / tmp8
    tmp10 = tmp4 - tmp9
    tmp13 = tmp12 * tmp2
    tmp14 = tmp13 + tmp4
    tmp17 = tmp16 + tmp4
    tmp18 = tmp14 / tmp17
    tmp19 = tmp4 - tmp18
    tmp20 = tmp10 + tmp19
    tmp23 = tmp22 * tmp2
    tmp24 = tmp23 + tmp4
    tmp27 = tmp26 + tmp4
    tmp28 = tmp24 / tmp27
    tmp29 = tmp4 - tmp28
    tmp30 = tmp20 + tmp29
    tmp33 = tmp32 * tmp2
    tmp34 = tmp33 + tmp4
    tmp37 = tmp36 + tmp4
    tmp38 = tmp34 / tmp37
    tmp39 = tmp4 - tmp38
    tmp40 = tmp30 + tmp39
    tmp41 = 4.0
    tmp42 = tmp40 / tmp41
    tmp43 = 0.0
    tmp44 = tmp42 + tmp43
    tmp47 = tmp46 * tmp2
    tmp48 = tmp47 + tmp4
    tmp51 = tmp50 + tmp4
    tmp52 = tmp48 / tmp51
    tmp53 = tmp4 - tmp52
    tmp56 = tmp55 * tmp2
    tmp57 = tmp56 + tmp4
    tmp60 = tmp59 + tmp4
    tmp61 = tmp57 / tmp60
    tmp62 = tmp4 - tmp61
    tmp63 = tmp53 + tmp62
    tmp66 = tmp65 * tmp2
    tmp67 = tmp66 + tmp4
    tmp70 = tmp69 + tmp4
    tmp71 = tmp67 / tmp70
    tmp72 = tmp4 - tmp71
    tmp73 = tmp63 + tmp72
    tmp76 = tmp75 * tmp2
    tmp77 = tmp76 + tmp4
    tmp80 = tmp79 + tmp4
    tmp81 = tmp77 / tmp80
    tmp82 = tmp4 - tmp81
    tmp83 = tmp73 + tmp82
    tmp84 = tmp83 / tmp41
    tmp85 = tmp44 + tmp84
    tmp88 = tmp87 * tmp2
    tmp89 = tmp88 + tmp4
    tmp92 = tmp91 + tmp4
    tmp93 = tmp89 / tmp92
    tmp94 = tmp4 - tmp93
    tmp97 = tmp96 * tmp2
    tmp98 = tmp97 + tmp4
    tmp101 = tmp100 + tmp4
    tmp102 = tmp98 / tmp101
    tmp103 = tmp4 - tmp102
    tmp104 = tmp94 + tmp103
    tmp107 = tmp106 * tmp2
    tmp108 = tmp107 + tmp4
    tmp111 = tmp110 + tmp4
    tmp112 = tmp108 / tmp111
    tmp113 = tmp4 - tmp112
    tmp114 = tmp104 + tmp113
    tmp117 = tmp116 * tmp2
    tmp118 = tmp117 + tmp4
    tmp121 = tmp120 + tmp4
    tmp122 = tmp118 / tmp121
    tmp123 = tmp4 - tmp122
    tmp124 = tmp114 + tmp123
    tmp125 = tmp124 / tmp41
    tmp126 = tmp85 + tmp125
    tmp129 = tmp128 * tmp2
    tmp130 = tmp129 + tmp4
    tmp133 = tmp132 + tmp4
    tmp134 = tmp130 / tmp133
    tmp135 = tmp4 - tmp134
    tmp138 = tmp137 * tmp2
    tmp139 = tmp138 + tmp4
    tmp142 = tmp141 + tmp4
    tmp143 = tmp139 / tmp142
    tmp144 = tmp4 - tmp143
    tmp145 = tmp135 + tmp144
    tmp148 = tmp147 * tmp2
    tmp149 = tmp148 + tmp4
    tmp152 = tmp151 + tmp4
    tmp153 = tmp149 / tmp152
    tmp154 = tmp4 - tmp153
    tmp155 = tmp145 + tmp154
    tmp158 = tmp157 * tmp2
    tmp159 = tmp158 + tmp4
    tmp162 = tmp161 + tmp4
    tmp163 = tmp159 / tmp162
    tmp164 = tmp4 - tmp163
    tmp165 = tmp155 + tmp164
    tmp166 = tmp165 / tmp41
    tmp167 = tmp126 + tmp166
    tmp168 = 0.25
    tmp169 = tmp167 * tmp168
    tmp170 = tmp169 / tmp4
    tmp171 = tmp170 * tmp4
    tl.store(in_out_ptr0 + (tl.full([XBLOCK], 0, tl.int32)), tmp171, None)
