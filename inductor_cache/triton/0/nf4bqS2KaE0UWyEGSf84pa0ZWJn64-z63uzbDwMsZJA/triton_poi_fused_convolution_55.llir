; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_55(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = or disjoint i32 %10, 128, !dbg !13
  %12 = icmp slt i32 %10, 1020, !dbg !14
  %13 = icmp slt i32 %11, 1020, !dbg !14
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !15
  %15 = shl i32 %14, 2, !dbg !16
  %16 = icmp slt i32 %15, 4, !dbg !17
  %.frozen = freeze i32 %10, !dbg !18
  %17 = sdiv i32 %.frozen, 255, !dbg !18
  %18 = mul i32 %17, 255, !dbg !19
  %.decomposed = sub i32 %.frozen, %18, !dbg !19
  %.frozen1 = freeze i32 %11, !dbg !18
  %19 = sdiv i32 %.frozen1, 255, !dbg !18
  %20 = mul i32 %19, 255, !dbg !19
  %.decomposed2 = sub i32 %.frozen1, %20, !dbg !19
  %21 = mul i32 %14, 1020, !dbg !20
  %22 = add i32 %21, 255, !dbg !20
  %23 = add i32 %21, 510, !dbg !20
  %24 = add i32 %21, 765, !dbg !20
  %25 = mul i32 %17, 1020, !dbg !21
  %26 = mul i32 %19, 1020, !dbg !21
  %27 = add i32 %25, %.decomposed, !dbg !22
  %28 = add i32 %27, %21, !dbg !23
  %29 = add i32 %27, %22, !dbg !23
  %30 = add i32 %27, %23, !dbg !23
  %31 = add i32 %27, %24, !dbg !23
  %32 = add i32 %26, %.decomposed2, !dbg !22
  %33 = add i32 %32, %21, !dbg !23
  %34 = add i32 %32, %22, !dbg !23
  %35 = add i32 %32, %23, !dbg !23
  %36 = add i32 %32, %24, !dbg !23
  %37 = sext i32 %28 to i64, !dbg !24
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !24
  %39 = sext i32 %29 to i64, !dbg !24
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !24
  %41 = sext i32 %30 to i64, !dbg !24
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !24
  %43 = sext i32 %31 to i64, !dbg !24
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !24
  %45 = sext i32 %33 to i64, !dbg !24
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !24
  %47 = sext i32 %34 to i64, !dbg !24
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !24
  %49 = sext i32 %35 to i64, !dbg !24
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !24
  %51 = sext i32 %36 to i64, !dbg !24
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !24
  %53 = and i1 %16, %12, !dbg !25
  %54 = and i1 %13, %16, !dbg !25
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %53) #1, !dbg !26
  %56 = bitcast i32 %55 to float, !dbg !26
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %53) #1, !dbg !26
  %58 = bitcast i32 %57 to float, !dbg !26
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %53) #1, !dbg !26
  %60 = bitcast i32 %59 to float, !dbg !26
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %53) #1, !dbg !26
  %62 = bitcast i32 %61 to float, !dbg !26
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %54) #1, !dbg !26
  %64 = bitcast i32 %63 to float, !dbg !26
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %54) #1, !dbg !26
  %66 = bitcast i32 %65 to float, !dbg !26
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %54) #1, !dbg !26
  %68 = bitcast i32 %67 to float, !dbg !26
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %54) #1, !dbg !26
  %70 = bitcast i32 %69 to float, !dbg !26
  %71 = sext i32 %.decomposed to i64, !dbg !27
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !27
  %73 = sext i32 %.decomposed2 to i64, !dbg !27
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !27
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %12) #1, !dbg !28
  %76 = bitcast i32 %75 to float, !dbg !28
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 %13) #1, !dbg !28
  %78 = bitcast i32 %77 to float, !dbg !28
  %79 = fadd float %56, %76, !dbg !29
  %80 = fadd float %58, %76, !dbg !29
  %81 = fadd float %60, %76, !dbg !29
  %82 = fadd float %62, %76, !dbg !29
  %83 = fadd float %64, %78, !dbg !29
  %84 = fadd float %66, %78, !dbg !29
  %85 = fadd float %68, %78, !dbg !29
  %86 = fadd float %70, %78, !dbg !29
  %87 = add i32 %10, %14, !dbg !30
  %88 = shl i32 %87, 2, !dbg !30
  %89 = add i32 %14, %11, !dbg !30
  %90 = shl i32 %89, 2, !dbg !30
  %91 = sext i32 %88 to i64, !dbg !31
  %92 = getelementptr float, ptr addrspace(1) %2, i64 %91, !dbg !31
  %93 = sext i32 %90 to i64, !dbg !31
  %94 = getelementptr float, ptr addrspace(1) %2, i64 %93, !dbg !31
  %95 = bitcast float %79 to i32, !dbg !32
  %96 = bitcast float %80 to i32, !dbg !32
  %97 = bitcast float %81 to i32, !dbg !32
  %98 = bitcast float %82 to i32, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %95, i32 %96, i32 %97, i32 %98, ptr addrspace(1) %92, i1 %53) #1, !dbg !32
  %99 = bitcast float %83 to i32, !dbg !32
  %100 = bitcast float %84 to i32, !dbg !32
  %101 = bitcast float %85 to i32, !dbg !32
  %102 = bitcast float %86 to i32, !dbg !32
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %99, i32 %100, i32 %101, i32 %102, ptr addrspace(1) %94, i1 %54) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czv2qzurjhgq2hpag7sbb7ffhkpsrgbljbkhjuj3qlnzbgfpkdk6.py", directory: "inductor_cache/zv")
!4 = !{ptr @triton_poi_fused_convolution_55, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_55, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_55", linkageName: "triton_poi_fused_convolution_55", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 39, scope: !7)
!21 = !DILocation(line: 32, column: 49, scope: !7)
!22 = !DILocation(line: 32, column: 35, scope: !7)
!23 = !DILocation(line: 32, column: 44, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 62, scope: !7)
!26 = !DILocation(line: 32, column: 54, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 30, scope: !7)
!31 = !DILocation(line: 35, column: 25, scope: !7)
!32 = !DILocation(line: 35, column: 43, scope: !7)
!33 = !DILocation(line: 35, column: 4, scope: !7)
