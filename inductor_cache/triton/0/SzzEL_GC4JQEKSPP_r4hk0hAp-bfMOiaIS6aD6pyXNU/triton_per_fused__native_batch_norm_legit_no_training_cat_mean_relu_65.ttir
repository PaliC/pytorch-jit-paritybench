#loc = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0)
#loc1 = loc(unknown)
#loc50 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":63:26)
#loc65 = loc(callsite(#loc1 at #loc50))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_cat_mean_relu_65(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg8: i32 loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<8x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<6.400000e+01> : tensor<8x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<8x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<768> : tensor<8x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<-377> : tensor<8x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<8x64xf32> loc(#loc1)
    %cst_5 = arith.constant dense<24128> : tensor<8x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<8x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<377> : tensor<8x1xi64> loc(#loc1)
    %cst_8 = arith.constant dense<389> : tensor<8x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<1556> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_9 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_8 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_8 : tensor<8x1xi32> loc(#loc11)
    %11 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc12)
    %12 = tt.addptr %11, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc12)
    %13 = tt.load %12, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc14)
    %16 = tt.load %15, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %17, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc16)
    %19 = tt.load %18, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc18)
    %21 = tt.addptr %20, %9 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc18)
    %22 = tt.load %21, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>> loc(#loc19)
    %23 = arith.extsi %9 : tensor<8x1xi32> to tensor<8x1xi64> loc(#loc20)
    %24 = arith.cmpi slt, %23, %cst_7 : tensor<8x1xi64> loc(#loc20)
    %25 = arith.muli %9, %cst_6 : tensor<8x1xi32> loc(#loc21)
    %26 = tt.broadcast %8 : tensor<1x64xi32> -> tensor<8x64xi32> loc(#loc22)
    %27 = tt.broadcast %25 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc22)
    %28 = arith.addi %26, %27 : tensor<8x64xi32> loc(#loc22)
    %29 = arith.muli %10, %cst_5 : tensor<8x1xi32> loc(#loc23)
    %30 = tt.broadcast %29 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc24)
    %31 = arith.addi %28, %30 : tensor<8x64xi32> loc(#loc24)
    %32 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>> loc(#loc25)
    %33 = tt.addptr %32, %31 : tensor<8x64x!tt.ptr<f32>>, tensor<8x64xi32> loc(#loc25)
    %34 = arith.andi %24, %6 : tensor<8x1xi1> loc(#loc26)
    %35 = tt.broadcast %34 : tensor<8x1xi1> -> tensor<8x64xi1> loc(#loc27)
    %36 = tt.load %33, %35, %cst_4 : tensor<8x64x!tt.ptr<f32>> loc(#loc27)
    %37 = arith.cmpi sge, %23, %cst_7 : tensor<8x1xi64> loc(#loc28)
    %38 = arith.addi %9, %cst_3 : tensor<8x1xi32> loc(#loc29)
    %39 = arith.muli %38, %cst_6 : tensor<8x1xi32> loc(#loc30)
    %40 = tt.broadcast %39 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc31)
    %41 = arith.addi %26, %40 : tensor<8x64xi32> loc(#loc31)
    %42 = arith.muli %10, %cst_2 : tensor<8x1xi32> loc(#loc32)
    %43 = tt.broadcast %42 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc33)
    %44 = arith.addi %41, %43 : tensor<8x64xi32> loc(#loc33)
    %45 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>> loc(#loc34)
    %46 = tt.addptr %45, %44 : tensor<8x64x!tt.ptr<f32>>, tensor<8x64xi32> loc(#loc34)
    %47 = arith.andi %37, %6 : tensor<8x1xi1> loc(#loc35)
    %48 = tt.broadcast %47 : tensor<8x1xi1> -> tensor<8x64xi1> loc(#loc36)
    %49 = tt.load %46, %48, %cst_4 : tensor<8x64x!tt.ptr<f32>> loc(#loc36)
    %50 = tt.broadcast %24 : tensor<8x1xi1> -> tensor<8x64xi1> loc(#loc37)
    %51 = arith.select %50, %36, %49 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc37)
    %52 = tt.broadcast %13 : tensor<8x1xf32> -> tensor<8x64xf32> loc(#loc38)
    %53 = arith.subf %51, %52 : tensor<8x64xf32> loc(#loc38)
    %54 = arith.addf %16, %cst_1 : tensor<8x1xf32> loc(#loc39)
    %55 = tt.extern_elementwise %54 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<8x1xf32>) -> tensor<8x1xf32> loc(#loc40)
    %56 = arith.divf %cst, %55 : tensor<8x1xf32> loc(#loc41)
    %57 = tt.broadcast %56 : tensor<8x1xf32> -> tensor<8x64xf32> loc(#loc42)
    %58 = arith.mulf %53, %57 : tensor<8x64xf32> loc(#loc42)
    %59 = tt.broadcast %19 : tensor<8x1xf32> -> tensor<8x64xf32> loc(#loc43)
    %60 = arith.mulf %58, %59 : tensor<8x64xf32> loc(#loc43)
    %61 = tt.broadcast %22 : tensor<8x1xf32> -> tensor<8x64xf32> loc(#loc44)
    %62 = arith.addf %60, %61 : tensor<8x64xf32> loc(#loc44)
    %63 = arith.cmpf ogt, %cst_4, %62 : tensor<8x64xf32> loc(#loc62)
    %64 = arith.select %63, %cst_4, %62 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc63)
    %65 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x64xi1> loc(#loc48)
    %66 = arith.select %65, %64, %cst_4 : tensor<8x64xi1>, tensor<8x64xf32> loc(#loc48)
    %67 = "tt.reduce"(%66) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc50)), %arg11: f32 loc(callsite(#loc1 at #loc50))):
      %77 = arith.addf %arg10, %arg11 : f32 loc(#loc67)
      tt.reduce.return %77 : f32 loc(#loc64)
    }) : (tensor<8x64xf32>) -> tensor<8xf32> loc(#loc64)
    %68 = tt.expand_dims %67 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc52)
    %69 = arith.divf %68, %cst_0 : tensor<8x1xf32> loc(#loc53)
    %70 = arith.muli %5, %cst_6 : tensor<8x1xi32> loc(#loc54)
    %71 = tt.broadcast %70 : tensor<8x1xi32> -> tensor<8x64xi32> loc(#loc55)
    %72 = arith.addi %26, %71 : tensor<8x64xi32> loc(#loc55)
    %73 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<8x64x!tt.ptr<f32>> loc(#loc56)
    %74 = tt.addptr %73, %72 : tensor<8x64x!tt.ptr<f32>>, tensor<8x64xi32> loc(#loc56)
    tt.store %74, %51, %65 : tensor<8x64x!tt.ptr<f32>> loc(#loc57)
    gpu.barrier loc(#loc58)
    %75 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc59)
    %76 = tt.addptr %75, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc59)
    tt.store %76, %69, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":23:28)
#loc3 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":23:33)
#loc4 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":24:36)
#loc5 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":24:44)
#loc6 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":24:23)
#loc7 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":25:21)
#loc8 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":26:26)
#loc9 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":26:34)
#loc10 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":29:19)
#loc11 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":31:19)
#loc12 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":33:31)
#loc13 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":33:36)
#loc14 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":34:31)
#loc15 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":34:36)
#loc16 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":35:31)
#loc17 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":35:36)
#loc18 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":36:31)
#loc19 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":36:36)
#loc20 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":41:18)
#loc21 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:39)
#loc22 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:35)
#loc23 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:51)
#loc24 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:45)
#loc25 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:30)
#loc26 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:63)
#loc27 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":42:56)
#loc28 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":43:19)
#loc29 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:48)
#loc30 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:39)
#loc31 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:35)
#loc32 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:58)
#loc33 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:54)
#loc34 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:30)
#loc35 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:70)
#loc36 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":46:63)
#loc37 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":47:33)
#loc38 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":48:20)
#loc39 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":50:20)
#loc40 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":51:27)
#loc41 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":53:20)
#loc42 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":56:20)
#loc43 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":57:20)
#loc44 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":58:20)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc46 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":60:42)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc48 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":62:35)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc52 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":63:29)
#loc53 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":65:20)
#loc54 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:33)
#loc55 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:30)
#loc56 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:25)
#loc57 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":66:45)
#loc58 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":67:4)
#loc59 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":68:28)
#loc60 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":68:40)
#loc61 = loc("inductor_cache/w3/cw3gxgbzjbku56horc7j7citrdh5al4hjp7vjzktnr7qdycf5y6w.py":68:4)
#loc62 = loc(callsite(#loc45 at #loc46))
#loc63 = loc(callsite(#loc47 at #loc46))
#loc64 = loc(callsite(#loc49 at #loc50))
#loc66 = loc(callsite(#loc51 at #loc49))
#loc67 = loc(callsite(#loc66 at #loc50))
