; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_relu_threshold_backward_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %14 = sdiv i32 %12, 16, !dbg !15
  %15 = srem i32 %14, 4, !dbg !16
  %16 = sext i32 %12 to i64, !dbg !17
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !17
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 %13) #1, !dbg !18
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !18
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !18
  %21 = sext i32 %15 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %13) #1, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %13) #1, !dbg !20
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !21
  %26 = getelementptr i1, ptr addrspace(1) %3, i64 %16, !dbg !22
  %27 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !18
  %28 = insertelement <2 x i32> %27, i32 %20, i64 1, !dbg !18
  %29 = bitcast <2 x i32> %28 to <2 x float>, !dbg !18
  %30 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !20
  %31 = insertelement <2 x i32> %30, i32 %24, i64 1, !dbg !20
  %32 = bitcast <2 x i32> %31 to <2 x float>, !dbg !20
  %33 = fadd <2 x float> %29, %32, !dbg !23
  %34 = fcmp olt <2 x float> %33, zeroinitializer, !dbg !24
  %35 = select <2 x i1> %34, <2 x float> zeroinitializer, <2 x float> %33, !dbg !28
  %36 = fcmp ole <2 x float> %35, zeroinitializer, !dbg !29
  %bc = bitcast <2 x float> %35 to <2 x i32>, !dbg !30
  %37 = extractelement <2 x i32> %bc, i64 0, !dbg !30
  %bc1 = bitcast <2 x float> %35 to <2 x i32>, !dbg !30
  %38 = extractelement <2 x i32> %bc1, i64 1, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %37, i32 %38, ptr addrspace(1) %25, i1 %13) #1, !dbg !30
  %39 = zext <2 x i1> %36 to <2 x i8>, !dbg !31
  %40 = bitcast <2 x i8> %39 to i16, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %40, ptr addrspace(1) %26, i1 %13) #1, !dbg !31
  %41 = getelementptr i1, ptr addrspace(1) %4, i64 %16, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %40, ptr addrspace(1) %41, i1 %13) #1, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cms657s6atwryowq2v5df3ki56ur4zydqhfnudopngs3hs455avm.py", directory: "inductor_cache/ms")
!4 = !{ptr @triton_poi_fused_convolution_relu_threshold_backward_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_relu_threshold_backward_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_relu_threshold_backward_1", linkageName: "triton_poi_fused_convolution_relu_threshold_backward_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 35, column: 25, scope: !7)
!22 = !DILocation(line: 36, column: 25, scope: !7)
!23 = !DILocation(line: 28, column: 18, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 30, column: 40, scope: !7)
!28 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 33, column: 19, scope: !7)
!30 = !DILocation(line: 35, column: 36, scope: !7)
!31 = !DILocation(line: 36, column: 36, scope: !7)
!32 = !DILocation(line: 37, column: 25, scope: !7)
!33 = !DILocation(line: 37, column: 36, scope: !7)
!34 = !DILocation(line: 37, column: 4, scope: !7)
