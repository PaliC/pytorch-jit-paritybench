//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_mul_18 // -- Begin function triton_poi_fused_add_convolution_mul_18
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_mul_18
.visible .entry triton_poi_fused_add_convolution_mul_18(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_18_param_7,
	.param .u32 triton_poi_fused_add_convolution_mul_18_param_8,
	.param .u32 triton_poi_fused_add_convolution_mul_18_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<131>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_convolution_mul_18_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_convolution_mul_18_param_1];
$L__tmp0:
	.loc	1 22 28                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:22:33
	shl.b32 	%r71, %r1, 5;
	ld.param.u64 	%rd16, [triton_poi_fused_add_convolution_mul_18_param_2];
	.loc	1 23 44                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:23:44
	mov.u32 	%r72, %tid.x;
	ld.param.u64 	%rd17, [triton_poi_fused_add_convolution_mul_18_param_3];
	ld.param.u64 	%rd18, [triton_poi_fused_add_convolution_mul_18_param_4];
	bfe.u32 	%r74, %r72, 3, 4;
	ld.param.u64 	%rd19, [triton_poi_fused_add_convolution_mul_18_param_5];
	or.b32  	%r75, %r74, 16;
	ld.param.u64 	%rd20, [triton_poi_fused_add_convolution_mul_18_param_6];
	shl.b32 	%r76, %r72, 2;
	ld.param.u64 	%rd21, [triton_poi_fused_add_convolution_mul_18_param_7];
	and.b32  	%r77, %r76, 28;
	.loc	1 23 23                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:23:23
	or.b32  	%r78, %r71, %r74;
	or.b32  	%r79, %r71, %r75;
	or.b32  	%r80, %r71, %r77;
	.loc	1 25 28                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:25:33
	shl.b32 	%r81, %r2, 5;
	.loc	1 26 23                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:26:23
	or.b32  	%r82, %r81, %r77;
	or.b32  	%r83, %r81, %r74;
	or.b32  	%r84, %r81, %r75;
	.loc	1 27 21                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:27:21
	setp.lt.s32 	%p1, %r82, 128;
	setp.lt.s32 	%p20, %r83, 128;
	setp.lt.s32 	%p21, %r84, 128;
	.loc	1 31 19                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:31:19
	bfe.s32 	%r85, %r1, 26, 1;
	shr.u32 	%r86, %r85, 22;
	add.s32 	%r87, %r80, %r86;
	.loc	1 30 19                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:30:19
	and.b32  	%r88, %r87, -1024;
	sub.s32 	%r89, %r80, %r88;
	.loc	1 32 43                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:32:43
	shl.b32 	%r90, %r78, 7;
	shl.b32 	%r91, %r79, 7;
	.loc	1 32 39                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:32:39
	add.s32 	%r92, %r82, %r90;
	add.s32 	%r93, %r82, %r91;
	.loc	1 32 34                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:32:34
	mul.wide.s32 	%rd22, %r92, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r93, 4;
	add.s64 	%rd2, %rd14, %rd23;
	.loc	1 32 48                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:32:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 33 30                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:33:30
	mul.wide.s32 	%rd24, %r82, 4;
	add.s64 	%rd3, %rd15, %rd24;
	.loc	1 33 35                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	.loc	1 34 30                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:34:30
	add.s64 	%rd4, %rd16, %rd24;
	.loc	1 34 35                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:34:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 35 30                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:35:30
	add.s64 	%rd5, %rd17, %rd22;
	add.s64 	%rd6, %rd17, %rd23;
	.loc	1 35 44                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:35:44
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	mov.b32 	%f23, %r25;
	mov.b32 	%f24, %r26;
	.loc	1 36 30                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:36:30
	add.s64 	%rd7, %rd18, %rd24;
	.loc	1 36 35                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:36:35
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r27;
	mov.b32 	%f26, %r28;
	mov.b32 	%f27, %r29;
	mov.b32 	%f28, %r30;
	.loc	1 37 30                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:37:30
	add.s64 	%rd8, %rd19, %rd24;
	.loc	1 37 35                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:37:35
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r31;
	mov.b32 	%f30, %r32;
	mov.b32 	%f31, %r33;
	mov.b32 	%f32, %r34;
	.loc	1 38 31                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:38:31
	add.s64 	%rd9, %rd20, %rd24;
	.loc	1 38 36                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:38:36
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r35;
	mov.b32 	%f34, %r36;
	mov.b32 	%f35, %r37;
	mov.b32 	%f36, %r38;
	.loc	1 39 18                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:39:18
	add.f32 	%f37, %f1, %f9;
	add.f32 	%f38, %f2, %f10;
	add.f32 	%f39, %f3, %f11;
	add.f32 	%f40, %f4, %f12;
	add.f32 	%f41, %f5, %f9;
	add.f32 	%f42, %f6, %f10;
	add.f32 	%f43, %f7, %f11;
	add.f32 	%f44, %f8, %f12;
	.loc	1 41 18                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:41:18
	fma.rn.f32 	%f45, %f13, %f17, %f25;
	fma.rn.f32 	%f46, %f14, %f18, %f26;
	fma.rn.f32 	%f47, %f15, %f19, %f27;
	fma.rn.f32 	%f48, %f16, %f20, %f28;
	fma.rn.f32 	%f49, %f13, %f21, %f25;
	fma.rn.f32 	%f50, %f14, %f22, %f26;
	fma.rn.f32 	%f51, %f15, %f23, %f27;
	fma.rn.f32 	%f52, %f16, %f24, %f28;
	.loc	1 43 19                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:43:19
	fma.rn.f32 	%f53, %f37, %f29, %f33;
	fma.rn.f32 	%f54, %f38, %f30, %f34;
	fma.rn.f32 	%f55, %f39, %f31, %f35;
	fma.rn.f32 	%f56, %f40, %f32, %f36;
	fma.rn.f32 	%f57, %f41, %f29, %f33;
	fma.rn.f32 	%f58, %f42, %f30, %f34;
	fma.rn.f32 	%f59, %f43, %f31, %f35;
	fma.rn.f32 	%f60, %f44, %f32, %f36;
	.loc	1 44 19                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:44:19
	add.f32 	%f61, %f45, %f53;
	add.f32 	%f62, %f46, %f54;
	add.f32 	%f63, %f47, %f55;
	add.f32 	%f64, %f48, %f56;
	add.f32 	%f65, %f49, %f57;
	add.f32 	%f66, %f50, %f58;
	add.f32 	%f67, %f51, %f59;
	add.f32 	%f68, %f52, %f60;
	.loc	1 45 4                          // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:45:4
	bar.sync 	0;
	.loc	1 46 48                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:46:48
	mov.b32 	%r39, %f37;
	mov.b32 	%r40, %f38;
	mov.b32 	%r41, %f39;
	mov.b32 	%r42, %f40;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	mov.b32 	%r43, %f41;
	mov.b32 	%r44, %f42;
	mov.b32 	%r45, %f43;
	mov.b32 	%r46, %f44;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	.loc	1 47 35                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:35
	shl.b32 	%r94, %r83, 10;
	shl.b32 	%r95, %r84, 10;
	.loc	1 47 47                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:47
	shl.b32 	%r96, %r87, 7;
	and.b32  	%r97, %r96, -131072;
	.loc	1 47 30                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:30
	add.s32 	%r98, %r97, %r89;
	.loc	1 47 40                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:40
	add.s32 	%r99, %r98, %r94;
	add.s32 	%r100, %r98, %r95;
	.loc	1 47 25                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:25
	mul.wide.s32 	%rd25, %r99, 4;
	add.s64 	%rd12, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r100, 4;
	add.s64 	%rd13, %rd21, %rd26;
	.loc	1 47 59                         // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:59
	shl.b32 	%r101, %r72, 7;
	and.b32  	%r102, %r101, 896;
	or.b32  	%r103, %r102, %r74;
	and.b32  	%r104, %r76, 508;
	shr.u32 	%r105, %r102, 1;
	mov.u32 	%r106, global_smem;
	add.s32 	%r107, %r106, %r105;
	shl.b32 	%r108, %r103, 2;
	add.s32 	%r47, %r107, %r108;
	mov.b32 	%r48, %f61;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	or.b32  	%r109, %r102, 32;
	shr.u32 	%r110, %r109, 1;
	add.s32 	%r111, %r106, %r110;
	add.s32 	%r112, %r111, %r108;
	add.s32 	%r49, %r112, 128;
	mov.b32 	%r50, %f62;
	// begin inline asm
	@%p12 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	or.b32  	%r113, %r102, 64;
	shr.u32 	%r114, %r113, 1;
	add.s32 	%r115, %r106, %r114;
	add.s32 	%r116, %r115, %r108;
	add.s32 	%r51, %r116, 256;
	mov.b32 	%r52, %f63;
	// begin inline asm
	@%p12 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	or.b32  	%r117, %r102, 96;
	shr.u32 	%r118, %r117, 1;
	add.s32 	%r119, %r106, %r118;
	add.s32 	%r120, %r119, %r108;
	add.s32 	%r53, %r120, 384;
	mov.b32 	%r54, %f64;
	// begin inline asm
	@%p12 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r47, 64;
	mov.b32 	%r56, %f65;
	// begin inline asm
	@%p12 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r112, 192;
	mov.b32 	%r58, %f66;
	// begin inline asm
	@%p12 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r116, 320;
	mov.b32 	%r60, %f67;
	// begin inline asm
	@%p12 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r120, 448;
	mov.b32 	%r62, %f68;
	// begin inline asm
	@%p12 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r121, %r72, 1;
	and.b32  	%r122, %r121, 240;
	add.s32 	%r123, %r106, %r122;
	shl.b32 	%r124, %r104, 2;
	add.s32 	%r125, %r123, %r124;
	or.b32  	%r126, %r104, 512;
	shr.u32 	%r127, %r126, 1;
	and.b32  	%r128, %r127, 496;
	add.s32 	%r129, %r106, %r128;
	add.s32 	%r130, %r129, %r124;
	ld.shared.v4.u32 	{%r67, %r68, %r69, %r70}, [%r130+2048];
	ld.shared.v4.u32 	{%r63, %r64, %r65, %r66}, [%r125];
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd12 + 0 ], { %r63, %r64, %r65, %r66 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd13 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	.loc	1 47 4                          // ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/t7/ct7uvtjgkgkfacsvs7wgbp6upmzkfflzf2c72n7bif547y773bu3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 55
.b8 117
.b8 118
.b8 116
.b8 106
.b8 103
.b8 107
.b8 103
.b8 107
.b8 102
.b8 97
.b8 99
.b8 115
.b8 118
.b8 115
.b8 55
.b8 119
.b8 103
.b8 98
.b8 112
.b8 54
.b8 117
.b8 112
.b8 109
.b8 122
.b8 107
.b8 102
.b8 102
.b8 108
.b8 122
.b8 102
.b8 50
.b8 99
.b8 55
.b8 50
.b8 110
.b8 55
.b8 98
.b8 105
.b8 102
.b8 53
.b8 52
.b8 55
.b8 121
.b8 55
.b8 55
.b8 51
.b8 98
.b8 117
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
