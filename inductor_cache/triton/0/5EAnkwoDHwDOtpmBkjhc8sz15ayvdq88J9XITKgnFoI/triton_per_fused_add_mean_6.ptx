//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mean_6 // -- Begin function triton_per_fused_add_mean_6
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_mean_6
.visible .entry triton_per_fused_add_mean_6(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_6_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_6_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_6_param_4,
	.param .u32 triton_per_fused_add_mean_6_param_5,
	.param .u32 triton_per_fused_add_mean_6_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<34>;
	.reg .f32 	%f<22>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_add_mean_6_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_add_mean_6_param_1];
$L__tmp0:
	.loc	1 23 28                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd8, [triton_per_fused_add_mean_6_param_2];
	.loc	1 26 34                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:26:34
	mov.u32 	%r13, %tid.x;
	and.b32  	%r14, %r13, 31;
	ld.param.u64 	%rd9, [triton_per_fused_add_mean_6_param_3];
	ld.param.u64 	%rd10, [triton_per_fused_add_mean_6_param_4];
	and.b32  	%r15, %r13, 63;
	.loc	1 31 38                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:31:38
	shl.b32 	%r16, %r1, 6;
	.loc	1 31 35                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:31:35
	or.b32  	%r17, %r16, %r15;
	.loc	1 31 30                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:31:30
	mul.wide.s32 	%rd11, %r17, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 31 43                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 32 30                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:32:30
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 32 43                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 33 30                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:33:30
	add.s64 	%rd3, %rd8, %rd11;
	.loc	1 33 43                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:33:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 34 30                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:34:30
	add.s64 	%rd4, %rd9, %rd11;
	.loc	1 34 43                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:34:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 36 18                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:36:18
	add.f32 	%f5, %f1, 0f00000000;
	.loc	1 37 18                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:37:18
	add.f32 	%f6, %f5, %f2;
	.loc	1 38 18                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:38:18
	add.f32 	%f7, %f6, %f3;
	.loc	1 39 18                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:39:18
	add.f32 	%f8, %f7, %f4;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f8;
	shfl.sync.bfly.b32	%r19, %r18, 16, 31, -1;
	mov.b32 	%f9, %r19;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f10;
	shfl.sync.bfly.b32	%r21, %r20, 8, 31, -1;
	mov.b32 	%f11, %r21;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f12;
	shfl.sync.bfly.b32	%r23, %r22, 4, 31, -1;
	mov.b32 	%f13, %r23;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f14;
	shfl.sync.bfly.b32	%r25, %r24, 2, 31, -1;
	mov.b32 	%f15, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f16;
	shfl.sync.bfly.b32	%r27, %r26, 1, 31, -1;
	mov.b32 	%f17, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r14, 0;
	shr.u32 	%r28, %r13, 3;
	and.b32  	%r29, %r28, 4;
	mov.u32 	%r30, global_smem;
	add.s32 	%r6, %r30, %r29;
	mov.b32 	%r7, %f18;
	// begin inline asm
	@%p5 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r13, 2;
	shl.b32 	%r31, %r13, 2;
	add.s32 	%r9, %r30, %r31;
	// begin inline asm
	@%p6 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r8;
	shfl.sync.bfly.b32	%r32, %r8, 1, 31, -1;
	mov.b32 	%f20, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r33, %r13, 1;
	setp.eq.b32 	%p9, %r33, 1;
	not.pred 	%p10, %p9;
	and.pred  	%p7, %p6, %p10;
	mov.b32 	%r11, %f21;
	// begin inline asm
	@%p7 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r12, [global_smem];
$L__tmp2:
	.loc	1 42 25                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:42:25
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd5, %rd10, %rd12;
	.loc	1 42 37                         // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:42:37
	setp.eq.s32 	%p8, %r15, 0;
	// begin inline asm
	@%p8 st.global.b32 [ %rd5 + 0 ], { %r12 };
	// end inline asm
	.loc	1 42 4                          // c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py:42:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 55
.b8 113
.b8 106
.b8 55
.b8 100
.b8 109
.b8 101
.b8 105
.b8 109
.b8 112
.b8 110
.b8 108
.b8 101
.b8 117
.b8 114
.b8 51
.b8 104
.b8 104
.b8 117
.b8 113
.b8 108
.b8 109
.b8 107
.b8 53
.b8 114
.b8 101
.b8 113
.b8 121
.b8 102
.b8 98
.b8 99
.b8 104
.b8 103
.b8 100
.b8 122
.b8 101
.b8 105
.b8 51
.b8 99
.b8 55
.b8 103
.b8 122
.b8 108
.b8 111
.b8 106
.b8 97
.b8 116
.b8 120
.b8 121
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
