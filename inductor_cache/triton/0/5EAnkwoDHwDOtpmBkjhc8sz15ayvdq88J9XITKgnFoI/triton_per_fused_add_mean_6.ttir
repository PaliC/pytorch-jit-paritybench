#loc = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":41:25)
#loc27 = loc(callsite(#loc1 at #loc20))
module {
  tt.func public @triton_per_fused_add_mean_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc4)
    %3 = arith.muli %0, %c64_i32 : i32 loc(#loc5)
    %4 = tt.splat %3 : i32 -> tensor<1x64xi32> loc(#loc6)
    %5 = arith.addi %2, %4 : tensor<1x64xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc7)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc9)
    %11 = tt.load %10 : tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc11)
    %14 = tt.load %13 : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc13)
    %17 = tt.load %16 : tensor<1x64x!tt.ptr<f32>> loc(#loc14)
    %18 = arith.addf %8, %cst : tensor<1x64xf32> loc(#loc15)
    %19 = arith.addf %18, %11 : tensor<1x64xf32> loc(#loc16)
    %20 = arith.addf %19, %14 : tensor<1x64xf32> loc(#loc17)
    %21 = arith.addf %20, %17 : tensor<1x64xf32> loc(#loc18)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc20)), %arg8: f32 loc(callsite(#loc1 at #loc20))):
      %26 = arith.addf %arg7, %arg8 : f32 loc(#loc29)
      tt.reduce.return %26 : f32 loc(#loc26)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc26)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc22)
    %24 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc23)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    tt.store %25, %23 : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":23:28)
#loc3 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":26:26)
#loc4 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":26:34)
#loc5 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":31:38)
#loc6 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":31:35)
#loc7 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":31:30)
#loc8 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":31:43)
#loc9 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":32:30)
#loc10 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":32:43)
#loc11 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":33:30)
#loc12 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":33:43)
#loc13 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":34:30)
#loc14 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":34:43)
#loc15 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":36:18)
#loc16 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":37:18)
#loc17 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":38:18)
#loc18 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":39:18)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":41:28)
#loc23 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":42:25)
#loc24 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":42:37)
#loc25 = loc("inductor_cache/37/c37qj7dmeimpnleur3hhuqlmk5reqyfbchgdzei3c7gzlojatxyh.py":42:4)
#loc26 = loc(callsite(#loc19 at #loc20))
#loc28 = loc(callsite(#loc21 at #loc19))
#loc29 = loc(callsite(#loc28 at #loc20))
