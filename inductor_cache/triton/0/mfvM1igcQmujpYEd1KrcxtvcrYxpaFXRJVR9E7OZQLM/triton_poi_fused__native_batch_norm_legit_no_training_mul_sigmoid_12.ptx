//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<49>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_1];
$L__tmp0:
	.loc	1 22 28                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:22:33
	shl.b32 	%r24, %r1, 8;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_2];
	.loc	1 23 44                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:23:44
	mov.u32 	%r25, %tid.x;
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_3];
	and.b32  	%r27, %r25, 127;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_4];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_12_param_5];
	.loc	1 23 23                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:23:23
	or.b32  	%r28, %r24, %r27;
	.loc	1 25 28                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:27:21
	setp.lt.s32 	%p1, %r2, 8;
	.loc	1 23 23                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:23:23
	shl.b32 	%r29, %r28, 3;
	.loc	1 32 35                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:32:35
	add.s32 	%r30, %r29, %r2;
	add.s32 	%r31, %r30, 1024;
	.loc	1 32 30                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:32:30
	mul.wide.s32 	%rd14, %r30, 4;
	add.s64 	%rd1, %rd8, %rd14;
	mul.wide.s32 	%rd15, %r31, 4;
	add.s64 	%rd2, %rd8, %rd15;
	.loc	1 32 42                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:32:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:33:30
	mul.wide.s32 	%rd16, %r2, 4;
	add.s64 	%rd3, %rd9, %rd16;
	.loc	1 33 35                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:34:30
	add.s64 	%rd4, %rd10, %rd16;
	.loc	1 34 35                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 35 31                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:35:31
	add.s64 	%rd5, %rd11, %rd16;
	.loc	1 35 36                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:35:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:36:31
	add.s64 	%rd6, %rd12, %rd16;
	.loc	1 36 36                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:36:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:39:18
	add.f32 	%f6, %f5, 0f3A83126F;
	.loc	1 40 26                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:40:26
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 32 42                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:32:42
	mov.b32 	%f8, %r4;
	.loc	1 33 35                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:33:35
	mov.b32 	%f9, %r5;
	.loc	1 37 18                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:37:18
	sub.f32 	%f10, %f8, %f9;
	.loc	1 32 42                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:32:42
	mov.b32 	%f11, %r3;
	.loc	1 37 18                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:37:18
	sub.f32 	%f12, %f11, %f9;
	.loc	1 36 36                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:36:36
	mov.b32 	%f13, %r8;
	.loc	1 35 36                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:35:36
	mov.b32 	%f14, %r7;
	.loc	1 23 44                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:23:44
	shl.b32 	%r32, %r25, 1;
	and.b32  	%r33, %r32, 254;
	.loc	1 23 23                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:23:23
	or.b32  	%r34, %r24, %r33;
	.loc	1 31 19                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:31:19
	bfe.s32 	%r35, %r1, 23, 1;
	shr.u32 	%r36, %r35, 24;
	add.s32 	%r37, %r34, %r36;
	.loc	1 30 19                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:30:19
	and.b32  	%r38, %r37, -256;
	sub.s32 	%r39, %r34, %r38;
	.loc	1 42 18                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:42:18
	mov.b32 	%r11, %f7;
	mov.b32 	%r10, 1065353216;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f15, %r9;
	.loc	1 45 19                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:45:19
	mul.f32 	%f16, %f12, %f15;
	mul.f32 	%f17, %f10, %f15;
	.loc	1 47 20                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:47:20
	fma.rn.f32 	%f18, %f16, %f14, %f13;
	fma.rn.f32 	%f19, %f17, %f14, %f13;
	mov.f32 	%f20, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f21, %f20, %f18;
	sub.f32 	%f22, %f20, %f19;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f21, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f22, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f23, %f1, 0f3F800000;
	add.f32 	%f24, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r14, %f23;
	// begin inline asm
	div.full.f32 %r12, %r10, %r14;
	// end inline asm
	mov.b32 	%f25, %r12;
	mov.b32 	%r17, %f24;
	// begin inline asm
	div.full.f32 %r15, %r10, %r17;
	// end inline asm
	mov.b32 	%f26, %r15;
$L__tmp2:
	.loc	1 49 20                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:49:20
	mul.f32 	%f27, %f18, %f25;
	mul.f32 	%f28, %f19, %f26;
	.loc	1 50 34                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:34
	shl.b32 	%r40, %r2, 8;
	.loc	1 50 30                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:30
	add.s32 	%r41, %r39, %r40;
	.loc	1 50 44                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:44
	shl.b32 	%r42, %r37, 3;
	and.b32  	%r43, %r42, -2048;
	.loc	1 50 39                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:39
	add.s32 	%r44, %r41, %r43;
	.loc	1 50 25                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:25
	mul.wide.s32 	%rd17, %r44, 4;
	add.s64 	%rd7, %rd13, %rd17;
	.loc	1 50 56                         // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:56
	shl.b32 	%r45, %r27, 2;
	mov.u32 	%r46, global_smem;
	add.s32 	%r18, %r46, %r45;
	mov.b32 	%r19, %f27;
	mov.pred 	%p7, -1;
	// begin inline asm
	@%p7 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 512;
	mov.b32 	%r21, %f28;
	// begin inline asm
	@%p7 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r47, %r33, 2;
	add.s32 	%r48, %r46, %r47;
	ld.shared.v2.u32 	{%r22, %r23}, [%r48];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 50 4                          // cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/w2/cw2wzaosirh4o3ypmoe43gs5bqei4xcue6vmdhk7u5op5ezy7nfa.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 50
.b8 119
.b8 122
.b8 97
.b8 111
.b8 115
.b8 105
.b8 114
.b8 104
.b8 52
.b8 111
.b8 51
.b8 121
.b8 112
.b8 109
.b8 111
.b8 101
.b8 52
.b8 51
.b8 103
.b8 115
.b8 53
.b8 98
.b8 113
.b8 101
.b8 105
.b8 52
.b8 120
.b8 99
.b8 117
.b8 101
.b8 54
.b8 118
.b8 109
.b8 100
.b8 104
.b8 107
.b8 55
.b8 117
.b8 53
.b8 111
.b8 112
.b8 53
.b8 101
.b8 122
.b8 121
.b8 55
.b8 110
.b8 102
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
