; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_convolution_mul_sigmoid_sub_150(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) nocapture readnone %5, ptr addrspace(1) %6, ptr addrspace(1) nocapture readnone %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 64, !dbg !14
  %17 = srem i32 %16, 64, !dbg !15
  %18 = mul i32 %16, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %15, 4096, !dbg !17
  %20 = sext i32 %19 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #1, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = sext i32 %.decomposed to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %6, i64 %26, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = sext i32 %17 to i64, !dbg !23
  %31 = getelementptr float, ptr addrspace(1) %8, i64 %30, !dbg !23
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !24
  %33 = bitcast i32 %32 to float, !dbg !24
  %34 = fadd float %23, %25, !dbg !25
  %35 = fsub float %34, %34, !dbg !26
  %36 = fmul float %35, %29, !dbg !27
  %37 = fadd float %34, %36, !dbg !28
  %38 = fsub float %37, %37, !dbg !29
  %39 = fmul float %38, %33, !dbg !30
  %40 = fadd float %37, %39, !dbg !31
  %41 = fsub float 0.000000e+00, %40, !dbg !32
  %42 = fmul float %41, 0x3FF7154760000000, !dbg !36
  %43 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %42) #1, !dbg !36
  %44 = fadd float %43, 1.000000e+00, !dbg !37
  %45 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %44) #1, !dbg !38
  %46 = sext i32 %15 to i64, !dbg !39
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !39
  %48 = bitcast float %45 to i32, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %48, ptr addrspace(1) %47, i1 true) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqnwm4oznkom5tlbuhy5omly36d2txez7yggvnvvartxbpw3lzpk.py", directory: "inductor_cache/qn")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_convolution_mul_sigmoid_sub_150, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_convolution_mul_sigmoid_sub_150, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_convolution_mul_sigmoid_sub_150", linkageName: "triton_poi_fused__unsafe_index_add_convolution_mul_sigmoid_sub_150", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 30, scope: !7)
!19 = !DILocation(line: 30, column: 35, scope: !7)
!20 = !DILocation(line: 31, column: 20, scope: !7)
!21 = !DILocation(line: 34, column: 31, scope: !7)
!22 = !DILocation(line: 34, column: 36, scope: !7)
!23 = !DILocation(line: 36, column: 31, scope: !7)
!24 = !DILocation(line: 36, column: 36, scope: !7)
!25 = !DILocation(line: 44, column: 19, scope: !7)
!26 = !DILocation(line: 48, column: 20, scope: !7)
!27 = !DILocation(line: 49, column: 20, scope: !7)
!28 = !DILocation(line: 50, column: 20, scope: !7)
!29 = !DILocation(line: 54, column: 20, scope: !7)
!30 = !DILocation(line: 55, column: 20, scope: !7)
!31 = !DILocation(line: 56, column: 20, scope: !7)
!32 = !DILocation(line: 47, column: 30, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 57, column: 23, scope: !7)
!36 = !DILocation(line: 47, column: 29, scope: !33, inlinedAt: !35)
!37 = !DILocation(line: 47, column: 20, scope: !33, inlinedAt: !35)
!38 = !DILocation(line: 47, column: 16, scope: !33, inlinedAt: !35)
!39 = !DILocation(line: 58, column: 28, scope: !7)
!40 = !DILocation(line: 58, column: 40, scope: !7)
!41 = !DILocation(line: 58, column: 4, scope: !7)
