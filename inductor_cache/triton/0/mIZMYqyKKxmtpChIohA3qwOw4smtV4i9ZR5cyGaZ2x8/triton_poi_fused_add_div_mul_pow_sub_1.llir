; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_mul_pow_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 9, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 2, !dbg !12
  %13 = and i32 %12, 508, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 53824, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 13456, !dbg !15
  %17 = mul i32 %16, 13456, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = sext i32 %.decomposed to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !17
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 %15) #1, !dbg !18
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !18
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !18
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !18
  %25 = bitcast i32 %21 to float, !dbg !18
  %26 = bitcast i32 %22 to float, !dbg !18
  %27 = bitcast i32 %23 to float, !dbg !18
  %28 = bitcast i32 %24 to float, !dbg !18
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !19
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %29, i1 %15) #1, !dbg !20
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !20
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !20
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !20
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !20
  %35 = bitcast i32 %31 to float, !dbg !20
  %36 = bitcast i32 %32 to float, !dbg !20
  %37 = bitcast i32 %33 to float, !dbg !20
  %38 = bitcast i32 %34 to float, !dbg !20
  %39 = sext i32 %16 to i64, !dbg !21
  %40 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !21
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %15) #1, !dbg !22
  %42 = bitcast i32 %41 to float, !dbg !22
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %15) #1, !dbg !22
  %44 = bitcast i32 %43 to float, !dbg !22
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %15) #1, !dbg !22
  %46 = bitcast i32 %45 to float, !dbg !22
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %15) #1, !dbg !22
  %48 = bitcast i32 %47 to float, !dbg !22
  %49 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !23
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %49, i1 %15) #1, !dbg !24
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !24
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !24
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !24
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !24
  %55 = bitcast i32 %51 to float, !dbg !24
  %56 = bitcast i32 %52 to float, !dbg !24
  %57 = bitcast i32 %53 to float, !dbg !24
  %58 = bitcast i32 %54 to float, !dbg !24
  %59 = getelementptr float, ptr addrspace(1) %4, i64 %18, !dbg !25
  %60 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %59, i1 %15) #1, !dbg !26
  %61 = extractvalue { i32, i32, i32, i32 } %60, 0, !dbg !26
  %62 = extractvalue { i32, i32, i32, i32 } %60, 1, !dbg !26
  %63 = extractvalue { i32, i32, i32, i32 } %60, 2, !dbg !26
  %64 = extractvalue { i32, i32, i32, i32 } %60, 3, !dbg !26
  %65 = bitcast i32 %61 to float, !dbg !26
  %66 = bitcast i32 %62 to float, !dbg !26
  %67 = bitcast i32 %63 to float, !dbg !26
  %68 = bitcast i32 %64 to float, !dbg !26
  %69 = getelementptr float, ptr addrspace(1) %5, i64 %18, !dbg !27
  %70 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %69, i1 %15) #1, !dbg !28
  %71 = extractvalue { i32, i32, i32, i32 } %70, 0, !dbg !28
  %72 = extractvalue { i32, i32, i32, i32 } %70, 1, !dbg !28
  %73 = extractvalue { i32, i32, i32, i32 } %70, 2, !dbg !28
  %74 = extractvalue { i32, i32, i32, i32 } %70, 3, !dbg !28
  %75 = bitcast i32 %71 to float, !dbg !28
  %76 = bitcast i32 %72 to float, !dbg !28
  %77 = bitcast i32 %73 to float, !dbg !28
  %78 = bitcast i32 %74 to float, !dbg !28
  %79 = fmul float %25, 2.000000e+00, !dbg !29
  %80 = fmul float %26, 2.000000e+00, !dbg !29
  %81 = fmul float %27, 2.000000e+00, !dbg !29
  %82 = fmul float %28, 2.000000e+00, !dbg !29
  %83 = fmul float %79, %35, !dbg !30
  %84 = fmul float %80, %36, !dbg !30
  %85 = fmul float %81, %37, !dbg !30
  %86 = fmul float %82, %38, !dbg !30
  %87 = fmul float %42, 0x3F847AE140000000, !dbg !31
  %88 = fmul float %44, 0x3F847AE140000000, !dbg !31
  %89 = fmul float %46, 0x3F847AE140000000, !dbg !31
  %90 = fmul float %48, 0x3F847AE140000000, !dbg !31
  %91 = fmul float %87, %87, !dbg !32
  %92 = fmul float %88, %88, !dbg !32
  %93 = fmul float %89, %89, !dbg !32
  %94 = fmul float %90, %90, !dbg !32
  %95 = fadd float %83, %91, !dbg !33
  %96 = fadd float %84, %92, !dbg !33
  %97 = fadd float %85, %93, !dbg !33
  %98 = fadd float %86, %94, !dbg !33
  %99 = fmul float %25, %35, !dbg !34
  %100 = fmul float %26, %36, !dbg !34
  %101 = fmul float %27, %37, !dbg !34
  %102 = fmul float %28, %38, !dbg !34
  %103 = fsub float %55, %99, !dbg !35
  %104 = fsub float %56, %100, !dbg !35
  %105 = fsub float %57, %101, !dbg !35
  %106 = fsub float %58, %102, !dbg !35
  %107 = fmul float %103, 0x3FF0555560000000, !dbg !36
  %108 = fmul float %104, 0x3FF0555560000000, !dbg !36
  %109 = fmul float %105, 0x3FF0555560000000, !dbg !36
  %110 = fmul float %106, 0x3FF0555560000000, !dbg !36
  %111 = fmul float %107, 2.000000e+00, !dbg !37
  %112 = fmul float %108, 2.000000e+00, !dbg !37
  %113 = fmul float %109, 2.000000e+00, !dbg !37
  %114 = fmul float %110, 2.000000e+00, !dbg !37
  %115 = fmul float %42, 0x3F9EB851E0000000, !dbg !38
  %116 = fmul float %44, 0x3F9EB851E0000000, !dbg !38
  %117 = fmul float %46, 0x3F9EB851E0000000, !dbg !38
  %118 = fmul float %48, 0x3F9EB851E0000000, !dbg !38
  %119 = fmul float %115, %115, !dbg !39
  %120 = fmul float %116, %116, !dbg !39
  %121 = fmul float %117, %117, !dbg !39
  %122 = fmul float %118, %118, !dbg !39
  %123 = fadd float %119, %111, !dbg !40
  %124 = fadd float %120, %112, !dbg !40
  %125 = fadd float %121, %113, !dbg !40
  %126 = fadd float %122, %114, !dbg !40
  %127 = fmul float %95, %123, !dbg !41
  %128 = fmul float %96, %124, !dbg !41
  %129 = fmul float %97, %125, !dbg !41
  %130 = fmul float %98, %126, !dbg !41
  %131 = fmul float %25, %25, !dbg !42
  %132 = fmul float %26, %26, !dbg !42
  %133 = fmul float %27, %27, !dbg !42
  %134 = fmul float %28, %28, !dbg !42
  %135 = fmul float %35, %35, !dbg !43
  %136 = fmul float %36, %36, !dbg !43
  %137 = fmul float %37, %37, !dbg !43
  %138 = fmul float %38, %38, !dbg !43
  %139 = fadd float %131, %135, !dbg !44
  %140 = fadd float %132, %136, !dbg !44
  %141 = fadd float %133, %137, !dbg !44
  %142 = fadd float %134, %138, !dbg !44
  %143 = fadd float %139, %91, !dbg !45
  %144 = fadd float %140, %92, !dbg !45
  %145 = fadd float %141, %93, !dbg !45
  %146 = fadd float %142, %94, !dbg !45
  %147 = fsub float %65, %131, !dbg !46
  %148 = fsub float %66, %132, !dbg !46
  %149 = fsub float %67, %133, !dbg !46
  %150 = fsub float %68, %134, !dbg !46
  %151 = fmul float %147, 0x3FF0555560000000, !dbg !47
  %152 = fmul float %148, 0x3FF0555560000000, !dbg !47
  %153 = fmul float %149, 0x3FF0555560000000, !dbg !47
  %154 = fmul float %150, 0x3FF0555560000000, !dbg !47
  %155 = fsub float %75, %135, !dbg !48
  %156 = fsub float %76, %136, !dbg !48
  %157 = fsub float %77, %137, !dbg !48
  %158 = fsub float %78, %138, !dbg !48
  %159 = fmul float %155, 0x3FF0555560000000, !dbg !49
  %160 = fmul float %156, 0x3FF0555560000000, !dbg !49
  %161 = fmul float %157, 0x3FF0555560000000, !dbg !49
  %162 = fmul float %158, 0x3FF0555560000000, !dbg !49
  %163 = fadd float %151, %159, !dbg !50
  %164 = fadd float %152, %160, !dbg !50
  %165 = fadd float %153, %161, !dbg !50
  %166 = fadd float %154, %162, !dbg !50
  %167 = fadd float %119, %163, !dbg !51
  %168 = fadd float %120, %164, !dbg !51
  %169 = fadd float %121, %165, !dbg !51
  %170 = fadd float %122, %166, !dbg !51
  %171 = fmul float %143, %167, !dbg !52
  %172 = fmul float %144, %168, !dbg !52
  %173 = fmul float %145, %169, !dbg !52
  %174 = fmul float %146, %170, !dbg !52
  %175 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %127, float %171) #1, !dbg !53
  %176 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %128, float %172) #1, !dbg !53
  %177 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %129, float %173) #1, !dbg !53
  %178 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %130, float %174) #1, !dbg !53
  %179 = sext i32 %14 to i64, !dbg !54
  %180 = getelementptr float, ptr addrspace(1) %6, i64 %179, !dbg !54
  %181 = bitcast float %175 to i32, !dbg !55
  %182 = bitcast float %176 to i32, !dbg !55
  %183 = bitcast float %177 to i32, !dbg !55
  %184 = bitcast float %178 to i32, !dbg !55
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %181, i32 %182, i32 %183, i32 %184, ptr addrspace(1) %180, i1 %15) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cctq3housytcybjvg7jn5ltmzw6nadqr4zp3r6gmgqev3saukpth.py", directory: "inductor_cache/ct")
!4 = !{ptr @triton_poi_fused_add_div_mul_pow_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mul_pow_sub_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mul_pow_sub_1", linkageName: "triton_poi_fused_add_div_mul_pow_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 18, scope: !7)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 20, scope: !7)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 46, column: 19, scope: !7)
!39 = !DILocation(line: 47, column: 20, scope: !7)
!40 = !DILocation(line: 48, column: 20, scope: !7)
!41 = !DILocation(line: 49, column: 19, scope: !7)
!42 = !DILocation(line: 50, column: 19, scope: !7)
!43 = !DILocation(line: 51, column: 19, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 20, scope: !7)
!46 = !DILocation(line: 54, column: 20, scope: !7)
!47 = !DILocation(line: 55, column: 20, scope: !7)
!48 = !DILocation(line: 56, column: 20, scope: !7)
!49 = !DILocation(line: 57, column: 20, scope: !7)
!50 = !DILocation(line: 58, column: 20, scope: !7)
!51 = !DILocation(line: 59, column: 20, scope: !7)
!52 = !DILocation(line: 60, column: 20, scope: !7)
!53 = !DILocation(line: 61, column: 20, scope: !7)
!54 = !DILocation(line: 62, column: 25, scope: !7)
!55 = !DILocation(line: 62, column: 37, scope: !7)
!56 = !DILocation(line: 62, column: 4, scope: !7)
