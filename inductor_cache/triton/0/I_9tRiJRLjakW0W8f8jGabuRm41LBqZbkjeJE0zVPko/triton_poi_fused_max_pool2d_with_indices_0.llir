; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %11 = add i32 %8, -5, !dbg !16
  %12 = sext i32 %11 to i64, !dbg !17
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !17
  %14 = add i32 %8, -4, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = add i32 %8, -3, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !21
  %20 = add i32 %8, -2, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = add i32 %8, -1, !dbg !24
  %24 = sext i32 %23 to i64, !dbg !25
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !25
  %26 = sext i32 %8 to i64, !dbg !26
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !26
  %28 = add i32 %8, 1, !dbg !27
  %29 = sext i32 %28 to i64, !dbg !28
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !28
  %31 = add i32 %8, 2, !dbg !29
  %32 = sext i32 %31 to i64, !dbg !30
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !30
  %34 = add i32 %8, 3, !dbg !31
  %35 = sext i32 %34 to i64, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !32
  %37 = add i32 %8, 4, !dbg !33
  %38 = sext i32 %37 to i64, !dbg !34
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !34
  %40 = add i32 %8, 5, !dbg !35
  %41 = sext i32 %40 to i64, !dbg !36
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !36
  %43 = add i32 %8, 6, !dbg !37
  %44 = sext i32 %43 to i64, !dbg !38
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !38
  %46 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !39
  %47 = insertelement <2 x i32> %46, i32 %10, i64 1, !dbg !39
  %48 = srem <2 x i32> %47, splat (i32 4), !dbg !39
  %49 = extractelement <2 x i32> %48, i64 1, !dbg !40
  %50 = icmp sgt i32 %49, 0, !dbg !41
  %51 = extractelement <2 x i32> %48, i64 0, !dbg !42
  %52 = icmp sgt i32 %51, 0, !dbg !43
  %53 = and i1 %52, %50, !dbg !44
  %54 = and i1 %9, %53, !dbg !45
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %54, i32 0, i1 %54) #1, !dbg !46
  %56 = bitcast i32 %55 to float, !dbg !46
  %57 = select i1 %53, float %56, float 0xFFF0000000000000, !dbg !47
  %58 = icmp sgt i32 %51, -1, !dbg !48
  %59 = and i1 %58, %50, !dbg !49
  %60 = and i1 %9, %59, !dbg !50
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %60, i32 0, i1 %60) #1, !dbg !51
  %62 = bitcast i32 %61 to float, !dbg !51
  %63 = select i1 %59, float %62, float 0xFFF0000000000000, !dbg !52
  %64 = fcmp ogt float %63, %57, !dbg !53
  %65 = fcmp uno float %63, 0.000000e+00, !dbg !57
  %66 = or i1 %64, %65, !dbg !58
  %67 = select i1 %66, float %63, float %57, !dbg !59
  %68 = icmp sgt i32 %51, -2, !dbg !60
  %69 = and i1 %68, %50, !dbg !61
  %70 = icmp slt i32 %51, 3, !dbg !62
  %71 = and i1 %70, %69, !dbg !63
  %72 = and i1 %9, %71, !dbg !64
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %72, i32 0, i1 %72) #1, !dbg !65
  %74 = bitcast i32 %73 to float, !dbg !65
  %75 = select i1 %69, float %74, float 0xFFF0000000000000, !dbg !66
  %76 = fcmp ogt float %75, %67, !dbg !67
  %77 = fcmp uno float %75, 0.000000e+00, !dbg !69
  %78 = or i1 %77, %76, !dbg !70
  %79 = select i1 %78, float %75, float %67, !dbg !71
  %80 = add nsw <2 x i32> %48, splat (i32 2), !dbg !72
  %81 = icmp ult <2 x i32> %80, splat (i32 5), !dbg !72
  %82 = extractelement <2 x i1> %81, i64 0, !dbg !73
  %83 = and i1 %50, %82, !dbg !73
  %84 = icmp slt i32 %51, 2, !dbg !74
  %85 = and i1 %84, %83, !dbg !75
  %86 = and i1 %9, %85, !dbg !76
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %86, i32 0, i1 %86) #1, !dbg !77
  %88 = bitcast i32 %87 to float, !dbg !77
  %89 = select i1 %83, float %88, float 0xFFF0000000000000, !dbg !78
  %90 = fcmp ogt float %89, %79, !dbg !79
  %91 = fcmp uno float %89, 0.000000e+00, !dbg !81
  %92 = or i1 %91, %90, !dbg !82
  %93 = select i1 %92, float %89, float %79, !dbg !83
  %94 = icmp sgt i32 %49, -1, !dbg !84
  %95 = and i1 %52, %94, !dbg !85
  %96 = and i1 %9, %95, !dbg !86
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %96, i32 0, i1 %96) #1, !dbg !87
  %98 = bitcast i32 %97 to float, !dbg !87
  %99 = select i1 %95, float %98, float 0xFFF0000000000000, !dbg !88
  %100 = fcmp ogt float %99, %93, !dbg !89
  %101 = fcmp uno float %99, 0.000000e+00, !dbg !91
  %102 = or i1 %101, %100, !dbg !92
  %103 = select i1 %102, float %99, float %93, !dbg !93
  %104 = or i32 %49, %51, !dbg !42
  %105 = icmp sgt i32 %104, -1, !dbg !42
  %106 = and i1 %9, %105, !dbg !94
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %106, i32 0, i1 %106) #1, !dbg !95
  %108 = bitcast i32 %107 to float, !dbg !95
  %109 = select i1 %105, float %108, float 0xFFF0000000000000, !dbg !96
  %110 = fcmp ogt float %109, %103, !dbg !97
  %111 = fcmp uno float %109, 0.000000e+00, !dbg !99
  %112 = or i1 %111, %110, !dbg !100
  %113 = select i1 %112, float %109, float %103, !dbg !101
  %114 = icmp sgt i32 %49, -2, !dbg !102
  %115 = icmp slt i32 %49, 3, !dbg !103
  %116 = extractelement <2 x i1> %81, i64 1, !dbg !104
  %117 = icmp slt i32 %49, 2, !dbg !40
  %118 = add i32 %8, 7, !dbg !105
  %119 = sext i32 %118 to i64, !dbg !106
  %120 = getelementptr float, ptr addrspace(1) %0, i64 %119, !dbg !106
  %121 = add i32 %8, 8, !dbg !107
  %122 = sext i32 %121 to i64, !dbg !108
  %123 = getelementptr float, ptr addrspace(1) %0, i64 %122, !dbg !108
  %124 = insertelement <8 x i1> poison, i1 %58, i64 0, !dbg !109
  %125 = insertelement <8 x i1> %124, i1 %52, i64 1, !dbg !109
  %126 = insertelement <8 x i1> %125, i1 %114, i64 2, !dbg !109
  %127 = insertelement <8 x i1> %126, i1 %68, i64 3, !dbg !109
  %128 = insertelement <8 x i1> %127, i1 %94, i64 6, !dbg !109
  %129 = shufflevector <8 x i1> %128, <8 x i1> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 2, i32 1, i32 6, i32 3>, !dbg !109
  %130 = shufflevector <2 x i1> %81, <2 x i1> poison, <8 x i32> <i32 1, i32 1, i32 0, i32 poison, i32 poison, i32 poison, i32 0, i32 poison>, !dbg !109
  %131 = shufflevector <8 x i1> %130, <8 x i1> %128, <8 x i32> <i32 0, i32 1, i32 2, i32 10, i32 8, i32 10, i32 6, i32 14>, !dbg !109
  %132 = and <8 x i1> %129, %131, !dbg !109
  %133 = extractelement <8 x i1> %132, i64 7, !dbg !110
  %134 = and i1 %70, %133, !dbg !110
  %135 = and i1 %9, %134, !dbg !111
  %136 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %135, i32 0, i1 %135) #1, !dbg !112
  %137 = extractelement <8 x i1> %132, i64 6, !dbg !113
  %138 = and i1 %84, %137, !dbg !113
  %139 = and i1 %9, %138, !dbg !114
  %140 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %139, i32 0, i1 %139) #1, !dbg !115
  %141 = extractelement <8 x i1> %132, i64 5, !dbg !116
  %142 = and i1 %115, %141, !dbg !116
  %143 = and i1 %9, %142, !dbg !117
  %144 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %143, i32 0, i1 %143) #1, !dbg !118
  %145 = extractelement <8 x i1> %132, i64 4, !dbg !119
  %146 = and i1 %115, %145, !dbg !119
  %147 = and i1 %9, %146, !dbg !120
  %148 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %147, i32 0, i1 %147) #1, !dbg !121
  %149 = extractelement <8 x i1> %132, i64 3, !dbg !122
  %150 = and i1 %115, %149, !dbg !122
  %151 = and i1 %150, %70, !dbg !122
  %152 = and i1 %9, %151, !dbg !123
  %153 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %152, i32 0, i1 %152) #1, !dbg !124
  %154 = extractelement <8 x i1> %132, i64 2, !dbg !125
  %155 = and i1 %115, %154, !dbg !125
  %156 = and i1 %155, %84, !dbg !125
  %157 = and i1 %9, %156, !dbg !126
  %158 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %157, i32 0, i1 %157) #1, !dbg !127
  %159 = extractelement <8 x i1> %132, i64 1, !dbg !128
  %160 = and i1 %117, %159, !dbg !128
  %161 = and i1 %9, %160, !dbg !129
  %162 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %120, i1 %161, i32 0, i1 %161) #1, !dbg !130
  %163 = extractelement <8 x i1> %132, i64 0, !dbg !131
  %164 = and i1 %117, %163, !dbg !131
  %165 = and i1 %9, %164, !dbg !132
  %166 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %123, i1 %165, i32 0, i1 %165) #1, !dbg !133
  %167 = insertelement <8 x i32> poison, i32 %166, i64 0, !dbg !133
  %168 = insertelement <8 x i32> %167, i32 %162, i64 1, !dbg !133
  %169 = insertelement <8 x i32> %168, i32 %158, i64 2, !dbg !133
  %170 = insertelement <8 x i32> %169, i32 %153, i64 3, !dbg !133
  %171 = insertelement <8 x i32> %170, i32 %148, i64 4, !dbg !133
  %172 = insertelement <8 x i32> %171, i32 %144, i64 5, !dbg !133
  %173 = insertelement <8 x i32> %172, i32 %140, i64 6, !dbg !133
  %174 = insertelement <8 x i32> %173, i32 %136, i64 7, !dbg !133
  %175 = bitcast <8 x i32> %174 to <8 x float>, !dbg !133
  %176 = select <8 x i1> %132, <8 x float> %175, <8 x float> splat (float 0xFFF0000000000000), !dbg !134
  %177 = extractelement <8 x float> %176, i64 7, !dbg !135
  %178 = fcmp ogt float %177, %113, !dbg !137
  %179 = fcmp uno <8 x float> %176, zeroinitializer, !dbg !138
  %180 = extractelement <8 x i1> %179, i64 7, !dbg !140
  %181 = or i1 %180, %178, !dbg !140
  %182 = select i1 %181, float %177, float %113, !dbg !135
  %183 = extractelement <8 x float> %176, i64 6, !dbg !141
  %184 = fcmp ogt float %183, %182, !dbg !143
  %185 = extractelement <8 x i1> %179, i64 6, !dbg !144
  %186 = or i1 %185, %184, !dbg !144
  %187 = select i1 %186, float %183, float %182, !dbg !141
  %188 = extractelement <8 x float> %176, i64 5, !dbg !145
  %189 = fcmp ogt float %188, %187, !dbg !147
  %190 = extractelement <8 x i1> %179, i64 5, !dbg !148
  %191 = or i1 %190, %189, !dbg !148
  %192 = select i1 %191, float %188, float %187, !dbg !145
  %193 = extractelement <8 x float> %176, i64 4, !dbg !149
  %194 = fcmp ogt float %193, %192, !dbg !151
  %195 = extractelement <8 x i1> %179, i64 4, !dbg !152
  %196 = or i1 %195, %194, !dbg !152
  %197 = select i1 %196, float %193, float %192, !dbg !149
  %198 = extractelement <8 x float> %176, i64 3, !dbg !153
  %199 = fcmp ogt float %198, %197, !dbg !155
  %200 = extractelement <8 x i1> %179, i64 3, !dbg !156
  %201 = or i1 %200, %199, !dbg !156
  %202 = select i1 %201, float %198, float %197, !dbg !153
  %203 = extractelement <8 x float> %176, i64 2, !dbg !157
  %204 = fcmp ogt float %203, %202, !dbg !159
  %205 = extractelement <8 x i1> %179, i64 2, !dbg !160
  %206 = or i1 %205, %204, !dbg !160
  %207 = select i1 %206, float %203, float %202, !dbg !157
  %208 = extractelement <8 x float> %176, i64 1, !dbg !161
  %209 = fcmp ogt float %208, %207, !dbg !163
  %210 = extractelement <8 x i1> %179, i64 1, !dbg !164
  %211 = or i1 %210, %209, !dbg !164
  %212 = select i1 %211, float %208, float %207, !dbg !161
  %213 = extractelement <8 x float> %176, i64 0, !dbg !165
  %214 = fcmp ogt float %213, %212, !dbg !166
  %215 = extractelement <8 x i1> %179, i64 0, !dbg !167
  %216 = or i1 %215, %214, !dbg !167
  %217 = select i1 %216, float %213, float %212, !dbg !165
  %218 = and i1 %68, %116, !dbg !168
  %219 = and i1 %70, %117, !dbg !169
  %220 = and i1 %219, %218, !dbg !170
  %221 = add i32 %8, 9, !dbg !171
  %222 = sext i32 %221 to i64, !dbg !172
  %223 = getelementptr float, ptr addrspace(1) %0, i64 %222, !dbg !172
  %224 = and i1 %9, %220, !dbg !173
  %225 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %223, i1 %224, i32 0, i1 %224) #1, !dbg !174
  %226 = bitcast i32 %225 to float, !dbg !174
  %227 = select i1 %218, float %226, float 0xFFF0000000000000, !dbg !175
  %228 = fcmp ogt float %227, %217, !dbg !176
  %229 = fcmp uno float %227, 0.000000e+00, !dbg !178
  %230 = or i1 %229, %228, !dbg !179
  %231 = select i1 %230, float %227, float %217, !dbg !180
  %232 = and i1 %82, %116, !dbg !181
  %233 = and i1 %84, %117, !dbg !182
  %234 = and i1 %233, %232, !dbg !183
  %235 = add i32 %8, 10, !dbg !184
  %236 = sext i32 %235 to i64, !dbg !185
  %237 = getelementptr float, ptr addrspace(1) %0, i64 %236, !dbg !185
  %238 = and i1 %9, %234, !dbg !186
  %239 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %237, i1 %238, i32 0, i1 %238) #1, !dbg !187
  %240 = bitcast i32 %239 to float, !dbg !187
  %241 = select i1 %232, float %240, float 0xFFF0000000000000, !dbg !188
  %242 = fcmp ogt float %241, %231, !dbg !189
  %243 = fcmp uno float %241, 0.000000e+00, !dbg !191
  %244 = or i1 %243, %242, !dbg !192
  %245 = select i1 %244, float %241, float %231, !dbg !193
  %246 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !194
  %247 = bitcast float %245 to i32, !dbg !195
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %247, ptr addrspace(1) %246, i1 %9) #1, !dbg !195
  ret void, !dbg !196
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7ll46rptlpsgjncwhhzhn23hlylrpctek3vj27v63ctfodbpvqa.py", directory: "inductor_cache/7l")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 45, column: 38, scope: !7)
!17 = !DILocation(line: 45, column: 31, scope: !7)
!18 = !DILocation(line: 60, column: 38, scope: !7)
!19 = !DILocation(line: 60, column: 31, scope: !7)
!20 = !DILocation(line: 76, column: 38, scope: !7)
!21 = !DILocation(line: 76, column: 31, scope: !7)
!22 = !DILocation(line: 92, column: 38, scope: !7)
!23 = !DILocation(line: 92, column: 31, scope: !7)
!24 = !DILocation(line: 108, column: 38, scope: !7)
!25 = !DILocation(line: 108, column: 31, scope: !7)
!26 = !DILocation(line: 120, column: 31, scope: !7)
!27 = !DILocation(line: 132, column: 36, scope: !7)
!28 = !DILocation(line: 132, column: 32, scope: !7)
!29 = !DILocation(line: 144, column: 36, scope: !7)
!30 = !DILocation(line: 144, column: 32, scope: !7)
!31 = !DILocation(line: 160, column: 36, scope: !7)
!32 = !DILocation(line: 160, column: 32, scope: !7)
!33 = !DILocation(line: 172, column: 36, scope: !7)
!34 = !DILocation(line: 172, column: 32, scope: !7)
!35 = !DILocation(line: 184, column: 36, scope: !7)
!36 = !DILocation(line: 184, column: 32, scope: !7)
!37 = !DILocation(line: 196, column: 36, scope: !7)
!38 = !DILocation(line: 196, column: 32, scope: !7)
!39 = !DILocation(line: 25, column: 19, scope: !7)
!40 = !DILocation(line: 207, column: 22, scope: !7)
!41 = !DILocation(line: 29, column: 19, scope: !7)
!42 = !DILocation(line: 112, column: 20, scope: !7)
!43 = !DILocation(line: 34, column: 19, scope: !7)
!44 = !DILocation(line: 37, column: 19, scope: !7)
!45 = !DILocation(line: 45, column: 51, scope: !7)
!46 = !DILocation(line: 45, column: 43, scope: !7)
!47 = !DILocation(line: 47, column: 35, scope: !7)
!48 = !DILocation(line: 49, column: 21, scope: !7)
!49 = !DILocation(line: 52, column: 19, scope: !7)
!50 = !DILocation(line: 60, column: 51, scope: !7)
!51 = !DILocation(line: 60, column: 43, scope: !7)
!52 = !DILocation(line: 62, column: 35, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !56)
!54 = distinct !DILexicalBlockFile(scope: !7, file: !55, discriminator: 0)
!55 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!56 = !DILocation(line: 63, column: 42, scope: !7)
!57 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !56)
!58 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !56)
!59 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !56)
!60 = !DILocation(line: 65, column: 21, scope: !7)
!61 = !DILocation(line: 68, column: 19, scope: !7)
!62 = !DILocation(line: 73, column: 20, scope: !7)
!63 = !DILocation(line: 75, column: 20, scope: !7)
!64 = !DILocation(line: 76, column: 51, scope: !7)
!65 = !DILocation(line: 76, column: 43, scope: !7)
!66 = !DILocation(line: 78, column: 35, scope: !7)
!67 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !68)
!68 = !DILocation(line: 79, column: 42, scope: !7)
!69 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !68)
!70 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !68)
!71 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !68)
!72 = !DILocation(line: 83, column: 20, scope: !7)
!73 = !DILocation(line: 84, column: 19, scope: !7)
!74 = !DILocation(line: 89, column: 20, scope: !7)
!75 = !DILocation(line: 91, column: 20, scope: !7)
!76 = !DILocation(line: 92, column: 51, scope: !7)
!77 = !DILocation(line: 92, column: 43, scope: !7)
!78 = !DILocation(line: 94, column: 35, scope: !7)
!79 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !80)
!80 = !DILocation(line: 95, column: 42, scope: !7)
!81 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !80)
!82 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !80)
!83 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !80)
!84 = !DILocation(line: 97, column: 21, scope: !7)
!85 = !DILocation(line: 100, column: 20, scope: !7)
!86 = !DILocation(line: 108, column: 51, scope: !7)
!87 = !DILocation(line: 108, column: 43, scope: !7)
!88 = !DILocation(line: 110, column: 35, scope: !7)
!89 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !90)
!90 = !DILocation(line: 111, column: 42, scope: !7)
!91 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !90)
!92 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !90)
!93 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !90)
!94 = !DILocation(line: 120, column: 44, scope: !7)
!95 = !DILocation(line: 120, column: 36, scope: !7)
!96 = !DILocation(line: 122, column: 35, scope: !7)
!97 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !98)
!98 = !DILocation(line: 123, column: 42, scope: !7)
!99 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !98)
!100 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !98)
!101 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !98)
!102 = !DILocation(line: 149, column: 23, scope: !7)
!103 = !DILocation(line: 155, column: 22, scope: !7)
!104 = !DILocation(line: 204, column: 22, scope: !7)
!105 = !DILocation(line: 212, column: 36, scope: !7)
!106 = !DILocation(line: 212, column: 32, scope: !7)
!107 = !DILocation(line: 224, column: 36, scope: !7)
!108 = !DILocation(line: 224, column: 32, scope: !7)
!109 = !DILocation(line: 216, column: 22, scope: !7)
!110 = !DILocation(line: 131, column: 22, scope: !7)
!111 = !DILocation(line: 132, column: 50, scope: !7)
!112 = !DILocation(line: 132, column: 41, scope: !7)
!113 = !DILocation(line: 143, column: 22, scope: !7)
!114 = !DILocation(line: 144, column: 50, scope: !7)
!115 = !DILocation(line: 144, column: 41, scope: !7)
!116 = !DILocation(line: 159, column: 22, scope: !7)
!117 = !DILocation(line: 160, column: 50, scope: !7)
!118 = !DILocation(line: 160, column: 41, scope: !7)
!119 = !DILocation(line: 171, column: 22, scope: !7)
!120 = !DILocation(line: 172, column: 50, scope: !7)
!121 = !DILocation(line: 172, column: 41, scope: !7)
!122 = !DILocation(line: 183, column: 22, scope: !7)
!123 = !DILocation(line: 184, column: 50, scope: !7)
!124 = !DILocation(line: 184, column: 41, scope: !7)
!125 = !DILocation(line: 195, column: 22, scope: !7)
!126 = !DILocation(line: 196, column: 50, scope: !7)
!127 = !DILocation(line: 196, column: 41, scope: !7)
!128 = !DILocation(line: 211, column: 22, scope: !7)
!129 = !DILocation(line: 212, column: 50, scope: !7)
!130 = !DILocation(line: 212, column: 41, scope: !7)
!131 = !DILocation(line: 223, column: 22, scope: !7)
!132 = !DILocation(line: 224, column: 50, scope: !7)
!133 = !DILocation(line: 224, column: 41, scope: !7)
!134 = !DILocation(line: 226, column: 38, scope: !7)
!135 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !136)
!136 = !DILocation(line: 135, column: 44, scope: !7)
!137 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !136)
!138 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !139)
!139 = !DILocation(line: 227, column: 44, scope: !7)
!140 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !136)
!141 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !142)
!142 = !DILocation(line: 147, column: 44, scope: !7)
!143 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !142)
!144 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !142)
!145 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !146)
!146 = !DILocation(line: 163, column: 44, scope: !7)
!147 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !146)
!148 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !146)
!149 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !150)
!150 = !DILocation(line: 175, column: 44, scope: !7)
!151 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !150)
!152 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !150)
!153 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !154)
!154 = !DILocation(line: 187, column: 44, scope: !7)
!155 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !154)
!156 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !154)
!157 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !158)
!158 = !DILocation(line: 199, column: 44, scope: !7)
!159 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !158)
!160 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !158)
!161 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !162)
!162 = !DILocation(line: 215, column: 44, scope: !7)
!163 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !162)
!164 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !162)
!165 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !139)
!166 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !139)
!167 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !139)
!168 = !DILocation(line: 228, column: 22, scope: !7)
!169 = !DILocation(line: 234, column: 22, scope: !7)
!170 = !DILocation(line: 235, column: 22, scope: !7)
!171 = !DILocation(line: 236, column: 36, scope: !7)
!172 = !DILocation(line: 236, column: 32, scope: !7)
!173 = !DILocation(line: 236, column: 50, scope: !7)
!174 = !DILocation(line: 236, column: 41, scope: !7)
!175 = !DILocation(line: 238, column: 38, scope: !7)
!176 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !177)
!177 = !DILocation(line: 239, column: 44, scope: !7)
!178 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !177)
!179 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !177)
!180 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !177)
!181 = !DILocation(line: 240, column: 22, scope: !7)
!182 = !DILocation(line: 246, column: 22, scope: !7)
!183 = !DILocation(line: 247, column: 22, scope: !7)
!184 = !DILocation(line: 248, column: 37, scope: !7)
!185 = !DILocation(line: 248, column: 32, scope: !7)
!186 = !DILocation(line: 248, column: 51, scope: !7)
!187 = !DILocation(line: 248, column: 42, scope: !7)
!188 = !DILocation(line: 250, column: 38, scope: !7)
!189 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !190)
!190 = !DILocation(line: 251, column: 44, scope: !7)
!191 = !DILocation(line: 120, column: 21, scope: !54, inlinedAt: !190)
!192 = !DILocation(line: 120, column: 16, scope: !54, inlinedAt: !190)
!193 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !190)
!194 = !DILocation(line: 252, column: 25, scope: !7)
!195 = !DILocation(line: 252, column: 38, scope: !7)
!196 = !DILocation(line: 252, column: 4, scope: !7)
