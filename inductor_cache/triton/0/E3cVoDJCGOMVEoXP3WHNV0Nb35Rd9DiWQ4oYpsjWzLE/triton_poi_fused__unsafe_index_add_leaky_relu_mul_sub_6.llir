; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 576, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 6, !dbg !15
  %17 = srem i32 %16, 6, !dbg !16
  %18 = mul i32 %16, 6, !dbg !17
  %.decomposed = sub i32 %.frozen, %18, !dbg !17
  %19 = sdiv i32 %14, 36, !dbg !18
  %20 = sext i32 %17 to i64, !dbg !19
  %21 = getelementptr i64, ptr addrspace(1) %1, i64 %20, !dbg !19
  %22 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %21, i1 %15) #1, !dbg !20
  %23 = sext i32 %.decomposed to i64, !dbg !21
  %24 = getelementptr i64, ptr addrspace(1) %2, i64 %23, !dbg !21
  %25 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %24, i1 %15) #1, !dbg !22
  %26 = getelementptr i64, ptr addrspace(1) %4, i64 %23, !dbg !23
  %27 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %26, i1 %15) #1, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %5, i64 %23, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %15) #1, !dbg !26
  %30 = getelementptr i64, ptr addrspace(1) %6, i64 %20, !dbg !27
  %31 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %30, i1 %15) #1, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %7, i64 %20, !dbg !29
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #1, !dbg !30
  %34 = bitcast i32 %33 to float, !dbg !30
  %35 = add i64 %22, 3, !dbg !31
  %36 = icmp slt i64 %22, 0, !dbg !32
  %37 = select i1 %36, i64 %35, i64 %22, !dbg !33
  %38 = add i64 %25, 3, !dbg !34
  %39 = icmp slt i64 %25, 0, !dbg !35
  %40 = select i1 %39, i64 %38, i64 %25, !dbg !36
  %41 = mul i64 %37, 3, !dbg !37
  %42 = mul nsw i32 %19, 9, !dbg !38
  %43 = sext i32 %42 to i64, !dbg !39
  %44 = getelementptr float, ptr addrspace(1) %3, i64 %40, !dbg !40
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %41, !dbg !40
  %46 = getelementptr float, ptr addrspace(1) %45, i64 %43, !dbg !40
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %15) #1, !dbg !41
  %48 = add i64 %27, 3, !dbg !42
  %49 = icmp slt i64 %27, 0, !dbg !43
  %50 = select i1 %49, i64 %48, i64 %27, !dbg !44
  %51 = getelementptr float, ptr addrspace(1) %3, i64 %50, !dbg !45
  %52 = getelementptr float, ptr addrspace(1) %51, i64 %41, !dbg !45
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %43, !dbg !45
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %15) #1, !dbg !46
  %55 = add i64 %31, 3, !dbg !47
  %56 = icmp slt i64 %31, 0, !dbg !48
  %57 = select i1 %56, i64 %55, i64 %31, !dbg !49
  %58 = mul i64 %57, 3, !dbg !50
  %59 = getelementptr float, ptr addrspace(1) %44, i64 %58, !dbg !51
  %60 = getelementptr float, ptr addrspace(1) %59, i64 %43, !dbg !51
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %15) #1, !dbg !52
  %62 = getelementptr float, ptr addrspace(1) %51, i64 %58, !dbg !53
  %63 = getelementptr float, ptr addrspace(1) %62, i64 %43, !dbg !53
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %15) #1, !dbg !54
  %65 = insertelement <2 x i32> poison, i32 %61, i64 0, !dbg !52
  %66 = insertelement <2 x i32> %65, i32 %47, i64 1, !dbg !52
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !52
  %68 = fcmp ogt <2 x float> %67, zeroinitializer, !dbg !55
  %69 = fmul <2 x float> %67, splat (float 0x3FC99999A0000000), !dbg !56
  %70 = select <2 x i1> %68, <2 x float> %67, <2 x float> %69, !dbg !57
  %71 = insertelement <2 x i32> poison, i32 %64, i64 0, !dbg !54
  %72 = insertelement <2 x i32> %71, i32 %54, i64 1, !dbg !54
  %73 = bitcast <2 x i32> %72 to <2 x float>, !dbg !54
  %74 = fcmp ogt <2 x float> %73, zeroinitializer, !dbg !58
  %75 = fmul <2 x float> %73, splat (float 0x3FC99999A0000000), !dbg !59
  %76 = select <2 x i1> %74, <2 x float> %73, <2 x float> %75, !dbg !60
  %77 = fsub <2 x float> %76, %70, !dbg !61
  %78 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !62
  %79 = bitcast <2 x i32> %78 to <2 x float>, !dbg !62
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !62
  %81 = fmul <2 x float> %77, %80, !dbg !62
  %82 = fadd <2 x float> %70, %81, !dbg !63
  %83 = extractelement <2 x float> %82, i64 0, !dbg !64
  %84 = extractelement <2 x float> %82, i64 1, !dbg !65
  %85 = fsub float %83, %84, !dbg !64
  %86 = fmul float %85, %34, !dbg !66
  %87 = fadd float %84, %86, !dbg !65
  %88 = sext i32 %14 to i64, !dbg !67
  %89 = getelementptr float, ptr addrspace(1) %0, i64 %88, !dbg !67
  %90 = bitcast float %87 to i32, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %90, ptr addrspace(1) %89, i1 %15) #1, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ca3dt7kwwekxsfdgigfyb2dsejuuhohv7soahpgptpv5gezw76dm.py", directory: "inductor_cache/a3")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_6", linkageName: "triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 33, column: 31, scope: !7)
!30 = !DILocation(line: 33, column: 36, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 32, scope: !7)
!34 = !DILocation(line: 38, column: 18, scope: !7)
!35 = !DILocation(line: 39, column: 18, scope: !7)
!36 = !DILocation(line: 40, column: 32, scope: !7)
!37 = !DILocation(line: 41, column: 39, scope: !7)
!38 = !DILocation(line: 41, column: 48, scope: !7)
!39 = !DILocation(line: 41, column: 46, scope: !7)
!40 = !DILocation(line: 41, column: 30, scope: !7)
!41 = !DILocation(line: 41, column: 53, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 48, column: 20, scope: !7)
!44 = !DILocation(line: 49, column: 35, scope: !7)
!45 = !DILocation(line: 50, column: 31, scope: !7)
!46 = !DILocation(line: 50, column: 55, scope: !7)
!47 = !DILocation(line: 57, column: 20, scope: !7)
!48 = !DILocation(line: 58, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 35, scope: !7)
!50 = !DILocation(line: 60, column: 40, scope: !7)
!51 = !DILocation(line: 60, column: 31, scope: !7)
!52 = !DILocation(line: 60, column: 55, scope: !7)
!53 = !DILocation(line: 64, column: 31, scope: !7)
!54 = !DILocation(line: 64, column: 56, scope: !7)
!55 = !DILocation(line: 61, column: 20, scope: !7)
!56 = !DILocation(line: 62, column: 20, scope: !7)
!57 = !DILocation(line: 63, column: 35, scope: !7)
!58 = !DILocation(line: 65, column: 20, scope: !7)
!59 = !DILocation(line: 66, column: 20, scope: !7)
!60 = !DILocation(line: 67, column: 35, scope: !7)
!61 = !DILocation(line: 68, column: 20, scope: !7)
!62 = !DILocation(line: 69, column: 20, scope: !7)
!63 = !DILocation(line: 70, column: 20, scope: !7)
!64 = !DILocation(line: 71, column: 20, scope: !7)
!65 = !DILocation(line: 73, column: 20, scope: !7)
!66 = !DILocation(line: 72, column: 20, scope: !7)
!67 = !DILocation(line: 74, column: 28, scope: !7)
!68 = !DILocation(line: 74, column: 40, scope: !7)
!69 = !DILocation(line: 74, column: 4, scope: !7)
