#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024xi8, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<4064256> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<126> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<15876> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<504> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<252> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<253> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<16000> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<15904> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<1024xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_4 : tensor<1024xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_4 : tensor<1024xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_5 : tensor<1024xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %4, %cst_5 : tensor<1024xi32, #blocked> loc(#loc10)
    %10 = arith.muli %6, %cst_6 : tensor<1024xi32, #blocked> loc(#loc11)
    %11 = arith.muli %7, %cst_7 : tensor<1024xi32, #blocked> loc(#loc12)
    %12 = arith.addi %10, %11 : tensor<1024xi32, #blocked> loc(#loc13)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc14)
    %14 = tt.addptr %13, %12 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = arith.addi %10, %cst_8 : tensor<1024xi32, #blocked> loc(#loc16)
    %17 = arith.addi %16, %11 : tensor<1024xi32, #blocked> loc(#loc17)
    %18 = tt.addptr %13, %17 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc18)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc19)
    %20 = arith.addi %10, %cst_9 : tensor<1024xi32, #blocked> loc(#loc20)
    %21 = arith.addi %20, %11 : tensor<1024xi32, #blocked> loc(#loc21)
    %22 = tt.addptr %13, %21 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc22)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc23)
    %24 = arith.addi %10, %cst_10 : tensor<1024xi32, #blocked> loc(#loc24)
    %25 = arith.addi %24, %11 : tensor<1024xi32, #blocked> loc(#loc25)
    %26 = tt.addptr %13, %25 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc26)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc27)
    %28 = arith.cmpf ogt, %19, %15 : tensor<1024xf32, #blocked> loc(#loc47)
    %29 = arith.cmpf une, %19, %19 : tensor<1024xf32, #blocked> loc(#loc48)
    %30 = arith.ori %28, %29 : tensor<1024xi1, #blocked> loc(#loc49)
    %31 = arith.select %30, %19, %15 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc50)
    %32 = arith.cmpf ogt, %23, %31 : tensor<1024xf32, #blocked> loc(#loc51)
    %33 = arith.cmpf une, %23, %23 : tensor<1024xf32, #blocked> loc(#loc52)
    %34 = arith.ori %32, %33 : tensor<1024xi1, #blocked> loc(#loc53)
    %35 = arith.select %34, %23, %31 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc54)
    %36 = arith.cmpf ogt, %27, %35 : tensor<1024xf32, #blocked> loc(#loc55)
    %37 = arith.cmpf une, %27, %27 : tensor<1024xf32, #blocked> loc(#loc56)
    %38 = arith.ori %36, %37 : tensor<1024xi1, #blocked> loc(#loc57)
    %39 = arith.select %38, %27, %35 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc58)
    %40 = arith.select %28, %cst, %cst_0 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc35)
    %41 = arith.select %32, %cst_1, %40 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc36)
    %42 = arith.select %36, %cst_2, %41 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc37)
    %43 = arith.muli %8, %cst_12 : tensor<1024xi32, #blocked> loc(#loc38)
    %44 = arith.addi %9, %43 : tensor<1024xi32, #blocked> loc(#loc39)
    %45 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc40)
    %46 = tt.addptr %45, %44 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc40)
    tt.store %46, %39, %5 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc41)
    %47 = arith.muli %8, %cst_11 : tensor<1024xi32, #blocked> loc(#loc42)
    %48 = arith.addi %9, %47 : tensor<1024xi32, #blocked> loc(#loc43)
    %49 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc44)
    %50 = tt.addptr %49, %48 : tensor<1024x!tt.ptr<i8>, #blocked>, tensor<1024xi32, #blocked> loc(#loc44)
    tt.store %50, %42, %5 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":21:28)
#loc3 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":21:33)
#loc4 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":22:36)
#loc5 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":22:23)
#loc6 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":23:21)
#loc7 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":24:19)
#loc8 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":25:19)
#loc9 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":26:19)
#loc10 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":27:19)
#loc11 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":28:32)
#loc12 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":28:41)
#loc13 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":28:37)
#loc14 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":28:30)
#loc15 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":28:46)
#loc16 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":29:34)
#loc17 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":29:41)
#loc18 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":29:30)
#loc19 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":29:50)
#loc20 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":30:36)
#loc21 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":30:43)
#loc22 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":30:30)
#loc23 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":30:52)
#loc24 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":31:36)
#loc25 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":31:43)
#loc26 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":31:30)
#loc27 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":31:52)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc29 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":32:40)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":33:40)
#loc34 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":34:40)
#loc35 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":38:33)
#loc36 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":41:35)
#loc37 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":44:35)
#loc38 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":45:36)
#loc39 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":45:30)
#loc40 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":45:25)
#loc41 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":45:47)
#loc42 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":46:36)
#loc43 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":46:30)
#loc44 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":46:25)
#loc45 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":46:48)
#loc46 = loc("inductor_cache/7z/c7z74gq4vhxj6x4m64zom6b7ur3bhmrjlvd6mbaj3odbyiyi6mhm.py":46:4)
#loc47 = loc(callsite(#loc28 at #loc29))
#loc48 = loc(callsite(#loc30 at #loc29))
#loc49 = loc(callsite(#loc31 at #loc29))
#loc50 = loc(callsite(#loc32 at #loc29))
#loc51 = loc(callsite(#loc28 at #loc33))
#loc52 = loc(callsite(#loc30 at #loc33))
#loc53 = loc(callsite(#loc31 at #loc33))
#loc54 = loc(callsite(#loc32 at #loc33))
#loc55 = loc(callsite(#loc28 at #loc34))
#loc56 = loc(callsite(#loc30 at #loc34))
#loc57 = loc(callsite(#loc31 at #loc34))
#loc58 = loc(callsite(#loc32 at #loc34))
