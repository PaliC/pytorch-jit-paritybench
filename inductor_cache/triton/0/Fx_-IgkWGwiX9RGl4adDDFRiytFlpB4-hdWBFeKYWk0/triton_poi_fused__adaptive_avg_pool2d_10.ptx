//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__adaptive_avg_pool2d_10 // -- Begin function triton_poi_fused__adaptive_avg_pool2d_10
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__adaptive_avg_pool2d_10
.visible .entry triton_poi_fused__adaptive_avg_pool2d_10(
	.param .u64 .ptr .global .align 1 triton_poi_fused__adaptive_avg_pool2d_10_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__adaptive_avg_pool2d_10_param_1,
	.param .u32 triton_poi_fused__adaptive_avg_pool2d_10_param_2,
	.param .u32 triton_poi_fused__adaptive_avg_pool2d_10_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b16 	%rs<8>;
	.reg .b32 	%r<94>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused__adaptive_avg_pool2d_10_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused__adaptive_avg_pool2d_10_param_1];
$L__tmp0:
	.loc	1 22 28                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:22:33
	shl.b32 	%r31, %r1, 4;
	.loc	1 23 44                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:23:44
	mov.u32 	%r32, %tid.x;
	bfe.u32 	%r33, %r32, 4, 3;
	shl.b32 	%r34, %r32, 1;
	and.b32  	%r35, %r34, 14;
	.loc	1 23 23                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:23:23
	or.b32  	%r36, %r31, %r33;
	or.b32  	%r37, %r36, 8;
	or.b32  	%r38, %r31, %r35;
	.loc	1 24 21                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:24:21
	setp.lt.s32 	%p20, %r36, 16;
	setp.lt.s32 	%p21, %r37, 16;
	setp.lt.s32 	%p22, %r38, 16;
	.loc	1 25 28                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:25:33
	shl.b32 	%r39, %r2, 4;
	.loc	1 26 44                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:26:44
	and.b32  	%r40, %r32, 15;
	bfe.u32 	%r41, %r32, 3, 4;
	.loc	1 26 23                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:26:23
	or.b32  	%r42, %r39, %r40;
	or.b32  	%r43, %r39, %r41;
	.loc	1 27 21                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:27:21
	setp.lt.s32 	%p23, %r42, 9;
	setp.lt.s32 	%p24, %r43, 9;
	.loc	1 28 19                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:28:19
	mul.hi.s32 	%r45, %r42, 1431655766;
	shr.u32 	%r46, %r45, 31;
	add.s32 	%r47, %r45, %r46;
	.loc	1 29 19                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:29:19
	mul.lo.s32 	%r48, %r47, 3;
	sub.s32 	%r49, %r42, %r48;
	.loc	1 33 19                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:33:19
	shr.s32 	%r51, %r38, 31;
	shr.u32 	%r52, %r51, 30;
	add.s32 	%r53, %r38, %r52;
	shr.s32 	%r54, %r53, 2;
	.loc	1 32 19                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:32:19
	and.b32  	%r55, %r53, -4;
	sub.s32 	%r56, %r38, %r55;
	.loc	1 34 14                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:34:14
	shl.b32 	%r57, %r47, 2;
	.loc	1 34 21                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:34:21
	mul.hi.s32 	%r58, %r57, 1431655766;
	shr.u32 	%r59, %r58, 31;
	add.s32 	%r60, %r58, %r59;
	.loc	1 37 21                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:37:21
	cvt.u16.u32 	%rs1, %r49;
	shl.b16 	%rs2, %rs1, 2;
	cvt.s16.s8 	%rs3, %rs2;
	mul.lo.s16 	%rs4, %rs3, 86;
	shr.u16 	%rs5, %rs4, 15;
	shr.u16 	%rs6, %rs4, 8;
	add.s16 	%rs7, %rs6, %rs5;
	cvt.u32.u16 	%r61, %rs7;
	cvt.s32.s8 	%r62, %r61;
	.loc	1 41 33                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:33
	shl.b32 	%r63, %r60, 2;
	.loc	1 41 51                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:51
	shl.b32 	%r64, %r36, 4;
	shl.b32 	%r65, %r37, 4;
	.loc	1 41 48                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:48
	add.s32 	%r66, %r64, %r62;
	.loc	1 41 57                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:57
	add.s32 	%r67, %r66, %r63;
	.loc	1 41 48                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:48
	add.s32 	%r68, %r65, %r62;
	.loc	1 41 57                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:57
	add.s32 	%r69, %r68, %r63;
	.loc	1 41 30                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:30
	mul.wide.s32 	%rd12, %r67, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mul.wide.s32 	%rd13, %r69, 4;
	add.s64 	%rd2, %rd10, %rd13;
	.loc	1 41 87                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:87
	and.pred  	%p1, %p20, %p23;
	and.pred  	%p3, %p21, %p23;
	mov.b32 	%r4, 0;
	.loc	1 41 72                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:41:72
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r3;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r5, %r4;
	// end inline asm
	mov.b32 	%f2, %r5;
	.loc	1 45 35                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:45:35
	or.b32  	%r70, %r63, 1;
	.loc	1 45 62                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:45:62
	add.s32 	%r71, %r66, %r70;
	add.s32 	%r72, %r68, %r70;
	.loc	1 45 31                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:45:31
	mul.wide.s32 	%rd14, %r71, 4;
	add.s64 	%rd3, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r72, 4;
	add.s64 	%rd4, %rd10, %rd15;
	.loc	1 45 77                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:45:77
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f3, %r7;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r9 }, [ %rd4 + 0 ];
	@!%p3 mov.u32 %r9, %r4;
	// end inline asm
	mov.b32 	%f4, %r9;
	.loc	1 46 20                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:46:20
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 50 35                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:50:35
	add.s32 	%r73, %r63, 4;
	.loc	1 50 62                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:50:62
	add.s32 	%r74, %r66, %r73;
	add.s32 	%r75, %r68, %r73;
	.loc	1 50 31                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:50:31
	mul.wide.s32 	%rd16, %r74, 4;
	add.s64 	%rd5, %rd10, %rd16;
	mul.wide.s32 	%rd17, %r75, 4;
	add.s64 	%rd6, %rd10, %rd17;
	.loc	1 50 77                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:50:77
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f7, %r11;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	@!%p3 mov.u32 %r13, %r4;
	// end inline asm
	mov.b32 	%f8, %r13;
	.loc	1 51 20                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:51:20
	add.f32 	%f9, %f5, %f7;
	add.f32 	%f10, %f6, %f8;
	.loc	1 53 35                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:53:35
	add.s32 	%r76, %r63, 5;
	.loc	1 53 62                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:53:62
	add.s32 	%r77, %r66, %r76;
	add.s32 	%r78, %r68, %r76;
	.loc	1 53 31                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:53:31
	mul.wide.s32 	%rd18, %r77, 4;
	add.s64 	%rd7, %rd10, %rd18;
	mul.wide.s32 	%rd19, %r78, 4;
	add.s64 	%rd8, %rd10, %rd19;
	.loc	1 53 77                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:53:77
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f11, %r15;
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r17 }, [ %rd8 + 0 ];
	@!%p3 mov.u32 %r17, %r4;
	// end inline asm
	mov.b32 	%f12, %r17;
	.loc	1 54 20                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:54:20
	add.f32 	%f13, %f9, %f11;
	add.f32 	%f14, %f10, %f12;
	.loc	1 70 20                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:70:20
	mov.b32 	%r20, %f13;
	mov.b32 	%r21, 1082130432;
	// begin inline asm
	div.full.f32 %r26, %r20, %r21;
	// end inline asm
	mov.b32 	%r23, %f14;
	// begin inline asm
	div.full.f32 %r28, %r23, %r21;
	// end inline asm
	.loc	1 71 32                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:32
	shl.b32 	%r79, %r43, 2;
	.loc	1 71 30                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:30
	add.s32 	%r80, %r79, %r56;
	.loc	1 71 37                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:37
	mad.lo.s32 	%r81, %r54, 36, %r80;
	.loc	1 71 25                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:25
	mul.wide.s32 	%rd20, %r81, 4;
	add.s64 	%rd9, %rd11, %rd20;
	.loc	1 71 60                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:60
	and.pred  	%p19, %p22, %p24;
	.loc	1 71 52                         // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:52
	shl.b32 	%r82, %r32, 4;
	and.b32  	%r83, %r82, 240;
	or.b32  	%r84, %r83, %r33;
	shr.u32 	%r85, %r83, 1;
	mov.u32 	%r86, global_smem;
	add.s32 	%r87, %r86, %r85;
	shl.b32 	%r88, %r84, 2;
	add.s32 	%r25, %r87, %r88;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r25, 32;
	// begin inline asm
	@%p17 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r89, %r32, 120;
	add.s32 	%r90, %r86, %r89;
	shl.b32 	%r91, %r32, 3;
	and.b32  	%r92, %r91, 1016;
	add.s32 	%r93, %r90, %r92;
	ld.shared.v2.u32 	{%r29, %r30}, [%r93];
	// begin inline asm
	@%p19 st.global.v2.b32 [ %rd9 + 0 ], { %r29, %r30 };
	// end inline asm
	.loc	1 71 4                          // cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py:71:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/uy/cuy6skd2tumhedeforulxdm6jogbgxbgjakxqvtdijtslz2bsanf.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 121
.b8 54
.b8 115
.b8 107
.b8 100
.b8 50
.b8 116
.b8 117
.b8 109
.b8 104
.b8 101
.b8 100
.b8 101
.b8 102
.b8 111
.b8 114
.b8 117
.b8 108
.b8 120
.b8 100
.b8 109
.b8 54
.b8 106
.b8 111
.b8 103
.b8 98
.b8 103
.b8 120
.b8 98
.b8 103
.b8 106
.b8 97
.b8 107
.b8 120
.b8 113
.b8 118
.b8 116
.b8 100
.b8 105
.b8 106
.b8 116
.b8 115
.b8 108
.b8 122
.b8 50
.b8 98
.b8 115
.b8 97
.b8 110
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
