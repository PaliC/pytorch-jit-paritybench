//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_transpose_4 // -- Begin function triton_poi_fused_mul_transpose_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_mul_transpose_4
.visible .entry triton_poi_fused_mul_transpose_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_transpose_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_transpose_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_transpose_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_transpose_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_transpose_4_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_transpose_4_param_5,
	.param .u32 triton_poi_fused_mul_transpose_4_param_6,
	.param .u32 triton_poi_fused_mul_transpose_4_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_mul_transpose_4_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_mul_transpose_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:22:33
	shl.b32 	%r25, %r1, 3;
	ld.param.u64 	%rd10, [triton_poi_fused_mul_transpose_4_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_mul_transpose_4_param_3];
	.loc	1 23 44                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:23:44
	mov.u32 	%r26, %tid.x;
	shl.b32 	%r27, %r26, 1;
	ld.param.u64 	%rd12, [triton_poi_fused_mul_transpose_4_param_4];
	and.b32  	%r28, %r27, 6;
	ld.param.u64 	%rd13, [triton_poi_fused_mul_transpose_4_param_5];
	bfe.u32 	%r29, %r26, 5, 2;
	.loc	1 23 23                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:23:23
	or.b32  	%r30, %r25, %r28;
	or.b32  	%r31, %r25, %r29;
	or.b32  	%r32, %r31, 4;
	.loc	1 24 21                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:24:21
	setp.lt.s32 	%p16, %r30, 16;
	setp.lt.s32 	%p17, %r31, 16;
	setp.lt.s32 	%p18, %r32, 16;
	.loc	1 25 28                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:25:33
	shl.b32 	%r33, %r2, 5;
	.loc	1 26 44                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:26:44
	bfe.u32 	%r34, %r26, 2, 5;
	and.b32  	%r35, %r26, 31;
	.loc	1 26 23                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:26:23
	or.b32  	%r36, %r33, %r34;
	or.b32  	%r37, %r33, %r35;
	.loc	1 27 21                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:27:21
	setp.lt.s32 	%p19, %r36, 17;
	setp.lt.s32 	%p20, %r37, 17;
	.loc	1 30 19                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:30:19
	bfe.s32 	%r38, %r1, 28, 1;
	shr.u32 	%r39, %r38, 30;
	add.s32 	%r40, %r30, %r39;
	and.b32  	%r41, %r40, -4;
	sub.s32 	%r42, %r30, %r41;
	.loc	1 31 38                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:31:38
	shl.b32 	%r43, %r36, 4;
	.loc	1 31 35                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:31:35
	add.s32 	%r44, %r43, %r30;
	.loc	1 31 30                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:31:30
	mul.wide.s32 	%rd14, %r44, 4;
	add.s64 	%rd1, %rd8, %rd14;
	.loc	1 31 51                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:31:51
	and.pred  	%p1, %p16, %p19;
	and.pred  	%p13, %p17, %p20;
	and.pred  	%p14, %p18, %p20;
	.loc	1 31 43                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:31:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 36 18                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:36:18
	setp.lt.s32 	%p21, %r42, 0;
	.loc	1 37 30                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:37:30
	mul.wide.s32 	%rd15, %r42, 4;
	add.s64 	%rd16, %rd9, %rd15;
	add.s64 	%rd2, %rd16, 16;
	.loc	1 37 81                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:37:81
	and.pred  	%p22, %p21, %p19;
	.loc	1 37 89                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:37:89
	and.pred  	%p2, %p16, %p22;
	mov.b32 	%r7, 0;
	.loc	1 37 74                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:37:74
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r5, %r7;
	@!%p2 mov.u32 %r6, %r7;
	// end inline asm
	.loc	1 38 19                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:38:19
	setp.lt.u32 	%p23, %r42, -4;
	.loc	1 42 31                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:42:31
	add.s64 	%rd3, %rd10, %rd15;
	.loc	1 42 87                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:42:87
	and.pred  	%p6, %p1, %p23;
	.loc	1 42 71                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:42:71
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd3 + 0 ];
	@!%p6 mov.u32 %r9, %r7;
	@!%p6 mov.u32 %r10, %r7;
	// end inline asm
	.loc	1 46 31                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:46:31
	add.s64 	%rd17, %rd11, %rd15;
	add.s64 	%rd4, %rd17, -16;
	mov.pred 	%p8, 0;
	.loc	1 46 78                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:46:78
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p8 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	@!%p8 mov.u32 %r13, %r7;
	@!%p8 mov.u32 %r14, %r7;
	// end inline asm
	.loc	1 48 33                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:48:33
	selp.b32 	%r45, %r5, %r9, %p21;
	mov.b32 	%f3, %r45;
	selp.b32 	%r46, %r6, %r10, %p21;
	mov.b32 	%f4, %r46;
	.loc	1 49 19                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:49:19
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 52 30                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:52:30
	mad.lo.s32 	%r47, %r31, 17, %r37;
	add.s32 	%r48, %r47, 68;
	.loc	1 52 25                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:52:25
	mul.wide.s32 	%rd18, %r47, 4;
	add.s64 	%rd5, %rd12, %rd18;
	mul.wide.s32 	%rd19, %r48, 4;
	add.s64 	%rd6, %rd12, %rd19;
	.loc	1 52 45                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:52:45
	shl.b32 	%r49, %r26, 6;
	and.b32  	%r50, %r49, 192;
	or.b32  	%r51, %r50, %r34;
	and.b32  	%r52, %r26, 127;
	shr.u32 	%r53, %r50, 3;
	mov.u32 	%r54, global_smem;
	add.s32 	%r55, %r54, %r53;
	shl.b32 	%r56, %r51, 2;
	add.s32 	%r17, %r55, %r56;
	mov.b32 	%r18, %f5;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	or.b32  	%r57, %r50, 32;
	shr.u32 	%r58, %r57, 3;
	add.s32 	%r59, %r54, %r58;
	add.s32 	%r60, %r59, %r56;
	add.s32 	%r19, %r60, 128;
	mov.b32 	%r20, %f6;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r61, %r26, 3;
	and.b32  	%r62, %r61, 12;
	add.s32 	%r63, %r54, %r62;
	shl.b32 	%r64, %r52, 2;
	add.s32 	%r65, %r63, %r64;
	ld.shared.u32 	%r21, [%r65];
	or.b32  	%r66, %r52, 128;
	shr.u32 	%r67, %r66, 3;
	and.b32  	%r68, %r67, 28;
	add.s32 	%r69, %r54, %r68;
	add.s32 	%r70, %r69, %r64;
	ld.shared.u32 	%r22, [%r70+512];
	// begin inline asm
	@%p13 st.global.b32 [ %rd5 + 0 ], { %r21 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.b32 [ %rd6 + 0 ], { %r22 };
	// end inline asm
	.loc	1 53 25                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:53:25
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 53 45                         // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:53:45
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd7 + 0 ], { %r18, %r20 };
	// end inline asm
	.loc	1 53 4                          // cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py:53:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ks/cks54cmlxkznbthmlpkc65dsl2ffuypvqd3acesfilusgvnlnoav.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 115
.b8 53
.b8 52
.b8 99
.b8 109
.b8 108
.b8 120
.b8 107
.b8 122
.b8 110
.b8 98
.b8 116
.b8 104
.b8 109
.b8 108
.b8 112
.b8 107
.b8 99
.b8 54
.b8 53
.b8 100
.b8 115
.b8 108
.b8 50
.b8 102
.b8 102
.b8 117
.b8 121
.b8 112
.b8 118
.b8 113
.b8 100
.b8 51
.b8 97
.b8 99
.b8 101
.b8 115
.b8 102
.b8 105
.b8 108
.b8 117
.b8 115
.b8 103
.b8 118
.b8 110
.b8 108
.b8 110
.b8 111
.b8 97
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 115
.b8 0
	}
	.section	.debug_macinfo	{	}
