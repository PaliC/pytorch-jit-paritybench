//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_12,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_13,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_14,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_15,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_16
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<84>;
	.reg .b64 	%rd<35>;
	.loc	1 19 0                          // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_0];
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:21:33
	shl.b32 	%r58, %r1, 9;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_2];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_3];
	.loc	1 22 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:22:36
	mov.u32 	%r59, %tid.x;
	shl.b32 	%r60, %r59, 1;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_4];
	and.b32  	%r61, %r60, 510;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_5];
	.loc	1 22 23                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:22:23
	or.b32  	%r62, %r58, %r61;
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_6];
	.loc	1 25 19                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:25:19
	bfe.s32 	%r63, %r1, 22, 1;
	shr.u32 	%r64, %r63, 27;
	add.s32 	%r65, %r62, %r64;
	and.b32  	%r66, %r65, -32;
	sub.s32 	%r67, %r62, %r66;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_7];
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_8];
	.loc	1 26 30                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:26:30
	mul.wide.s32 	%rd26, %r62, 4;
	add.s64 	%rd1, %rd18, %rd26;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_9];
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_10];
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_11];
	.loc	1 27 30                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:27:30
	mul.wide.s32 	%rd30, %r67, 4;
	add.s64 	%rd2, %rd19, %rd30;
	ld.param.u64 	%rd31, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_12];
	.loc	1 27 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_13];
	.loc	1 28 30                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:28:30
	add.s64 	%rd3, %rd20, %rd30;
	ld.param.u64 	%rd33, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_14];
	.loc	1 28 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:28:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	ld.param.u64 	%rd34, [triton_poi_fused__native_batch_norm_legit_no_training_add_silu_3_param_15];
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 29 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:29:31
	add.s64 	%rd4, %rd21, %rd30;
	.loc	1 29 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:29:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:30:31
	add.s64 	%rd5, %rd22, %rd30;
	.loc	1 30 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:30:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:31:31
	add.s64 	%rd6, %rd23, %rd26;
	.loc	1 31 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:31:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v2.b32 { %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:32:31
	add.s64 	%rd7, %rd24, %rd30;
	.loc	1 32 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:32:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:33:31
	add.s64 	%rd8, %rd25, %rd30;
	.loc	1 33 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:33:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r16;
	mov.b32 	%f8, %r17;
	.loc	1 34 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:34:31
	add.s64 	%rd9, %rd27, %rd30;
	.loc	1 34 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:34:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:35:31
	add.s64 	%rd10, %rd28, %rd30;
	.loc	1 35 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:35:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r20, %r21 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 32                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:36:32
	add.s64 	%rd11, %rd29, %rd26;
	.loc	1 36 37                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:36:37
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.v2.b32 { %r22, %r23 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 37 32                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:37:32
	add.s64 	%rd12, %rd31, %rd30;
	.loc	1 37 37                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:37:37
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r24, %r25 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:38:32
	add.s64 	%rd13, %rd32, %rd30;
	.loc	1 38 37                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:38:37
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r26, %r27 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r26;
	mov.b32 	%f10, %r27;
	.loc	1 39 32                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:39:32
	add.s64 	%rd14, %rd33, %rd30;
	.loc	1 39 37                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:39:37
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r28, %r29 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 40 32                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:40:32
	add.s64 	%rd15, %rd34, %rd30;
	.loc	1 40 37                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:40:37
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r30, %r31 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 43 18                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:43:18
	add.f32 	%f11, %f5, 0f3727C5AC;
	add.f32 	%f12, %f6, 0f3727C5AC;
	.loc	1 44 26                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:44:26
	sqrt.approx.ftz.f32 	%f13, %f11;
	sqrt.approx.ftz.f32 	%f14, %f12;
	.loc	1 46 18                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:46:18
	mov.b32 	%r34, %f13;
	mov.b32 	%r33, 1065353216;
	// begin inline asm
	div.full.f32 %r32, %r33, %r34;
	// end inline asm
	mov.b32 	%f15, %r32;
	mov.b32 	%r37, %f14;
	// begin inline asm
	div.full.f32 %r35, %r33, %r37;
	// end inline asm
	mov.b32 	%f16, %r35;
	.loc	1 53 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:53:20
	add.f32 	%f17, %f7, 0f3727C5AC;
	add.f32 	%f18, %f8, 0f3727C5AC;
	.loc	1 54 27                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:54:27
	sqrt.approx.ftz.f32 	%f19, %f17;
	sqrt.approx.ftz.f32 	%f20, %f18;
	.loc	1 55 19                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:55:19
	mov.b32 	%r40, %f19;
	// begin inline asm
	div.full.f32 %r38, %r33, %r40;
	// end inline asm
	mov.b32 	%f21, %r38;
	mov.b32 	%r43, %f20;
	// begin inline asm
	div.full.f32 %r41, %r33, %r43;
	// end inline asm
	mov.b32 	%f22, %r41;
	.loc	1 62 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:62:20
	add.f32 	%f23, %f9, 0f3727C5AC;
	add.f32 	%f24, %f10, 0f3727C5AC;
	.loc	1 63 27                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:63:27
	sqrt.approx.ftz.f32 	%f25, %f23;
	sqrt.approx.ftz.f32 	%f26, %f24;
	.loc	1 31 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:31:36
	mov.b32 	%f27, %r13;
	.loc	1 32 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:32:36
	mov.b32 	%f28, %r15;
	.loc	1 52 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:52:20
	sub.f32 	%f29, %f27, %f28;
	.loc	1 57 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:57:20
	mul.f32 	%f30, %f29, %f22;
	.loc	1 34 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:34:36
	mov.b32 	%f31, %r19;
	.loc	1 35 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:35:36
	mov.b32 	%f32, %r21;
	.loc	1 59 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:59:20
	fma.rn.f32 	%f33, %f30, %f31, %f32;
	.loc	1 31 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:31:36
	mov.b32 	%f34, %r12;
	.loc	1 32 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:32:36
	mov.b32 	%f35, %r14;
	.loc	1 52 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:52:20
	sub.f32 	%f36, %f34, %f35;
	.loc	1 57 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:57:20
	mul.f32 	%f37, %f36, %f21;
	.loc	1 34 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:34:36
	mov.b32 	%f38, %r18;
	.loc	1 35 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:35:36
	mov.b32 	%f39, %r20;
	.loc	1 59 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:59:20
	fma.rn.f32 	%f40, %f37, %f38, %f39;
	.loc	1 64 19                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:64:19
	mov.b32 	%r46, %f25;
	// begin inline asm
	div.full.f32 %r44, %r33, %r46;
	// end inline asm
	mov.b32 	%f41, %r44;
	mov.b32 	%r49, %f26;
	// begin inline asm
	div.full.f32 %r47, %r33, %r49;
	// end inline asm
	mov.b32 	%f42, %r47;
	.loc	1 26 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:26:35
	mov.b32 	%f43, %r2;
	mov.b32 	%f44, %r22;
	.loc	1 27 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:27:35
	mov.b32 	%f45, %r4;
	mov.b32 	%f46, %r24;
	.loc	1 41 18                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:41:18
	sub.f32 	%f47, %f44, %f46;
	sub.f32 	%f48, %f43, %f45;
	.loc	1 30 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:30:36
	mov.b32 	%f49, %r10;
	mov.b32 	%f50, %r30;
	.loc	1 29 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:29:36
	mov.b32 	%f51, %r8;
	mov.b32 	%f52, %r28;
	.loc	1 49 19                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:49:19
	mul.f32 	%f53, %f48, %f15;
	mul.f32 	%f54, %f47, %f41;
	.loc	1 51 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:51:20
	fma.rn.f32 	%f55, %f54, %f52, %f50;
	fma.rn.f32 	%f56, %f53, %f51, %f49;
	.loc	1 60 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:60:20
	add.f32 	%f57, %f56, %f40;
	.loc	1 26 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:26:35
	mov.b32 	%f58, %r3;
	mov.b32 	%f59, %r23;
	.loc	1 27 35                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:27:35
	mov.b32 	%f60, %r5;
	mov.b32 	%f61, %r25;
	.loc	1 41 18                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:41:18
	sub.f32 	%f62, %f59, %f61;
	sub.f32 	%f63, %f58, %f60;
	.loc	1 30 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:30:36
	mov.b32 	%f64, %r11;
	mov.b32 	%f65, %r31;
	.loc	1 29 36                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:29:36
	mov.b32 	%f66, %r9;
	mov.b32 	%f67, %r29;
	.loc	1 49 19                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:49:19
	mul.f32 	%f68, %f63, %f16;
	mul.f32 	%f69, %f62, %f42;
	.loc	1 51 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:51:20
	fma.rn.f32 	%f70, %f69, %f67, %f65;
	fma.rn.f32 	%f71, %f68, %f66, %f64;
	.loc	1 60 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:60:20
	add.f32 	%f72, %f71, %f33;
	.loc	1 69 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:69:20
	add.f32 	%f73, %f57, %f55;
	add.f32 	%f74, %f72, %f70;
	mov.f32 	%f75, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f76, %f75, %f73;
	sub.f32 	%f77, %f75, %f74;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f76, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f77, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f78, %f1, 0f3F800000;
	add.f32 	%f79, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r52, %f78;
	// begin inline asm
	div.full.f32 %r50, %r33, %r52;
	// end inline asm
	mov.b32 	%f80, %r50;
	mov.b32 	%r55, %f79;
	// begin inline asm
	div.full.f32 %r53, %r33, %r55;
	// end inline asm
	mov.b32 	%f81, %r53;
$L__tmp2:
	.loc	1 71 20                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:71:20
	mul.f32 	%f82, %f73, %f80;
	mul.f32 	%f83, %f74, %f81;
	.loc	1 72 28                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:72:28
	add.s64 	%rd16, %rd17, %rd26;
	.loc	1 72 40                         // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:72:40
	mov.b32 	%r56, %f82;
	mov.b32 	%r57, %f83;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd16 + 0 ], { %r56, %r57 };
	// end inline asm
	.loc	1 72 4                          // cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py:72:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r4/cr4bvqt3lbapchsof7ppea7yspun7kcukp5kt2g2tfvu24fr7a3s.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 209                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xca DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 52
.b8 98
.b8 118
.b8 113
.b8 116
.b8 51
.b8 108
.b8 98
.b8 97
.b8 112
.b8 99
.b8 104
.b8 115
.b8 111
.b8 102
.b8 55
.b8 112
.b8 112
.b8 101
.b8 97
.b8 55
.b8 121
.b8 115
.b8 112
.b8 117
.b8 110
.b8 55
.b8 107
.b8 99
.b8 117
.b8 107
.b8 112
.b8 53
.b8 107
.b8 116
.b8 50
.b8 103
.b8 50
.b8 116
.b8 102
.b8 118
.b8 117
.b8 50
.b8 52
.b8 102
.b8 114
.b8 55
.b8 97
.b8 51
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x43 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 115
.b8 105
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa6:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 70                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
