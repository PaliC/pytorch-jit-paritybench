#loc = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0)
#loc1 = loc(unknown)
#loc60 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":63:59)
#loc68 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":71:59)
#loc100 = loc(callsite(#loc1 at #loc60))
#loc104 = loc(callsite(#loc1 at #loc68))
module {
  tt.func public @triton_per_fused_add_clone_max_pool2d_with_indices_native_layer_norm_native_layer_norm_backward_35(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg5: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.00130208337 : f32 loc(#loc1)
    %cst_0 = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_1 = arith.constant 7.680000e+02 : f32 loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c37632_i32 = arith.constant 37632 : i32 loc(#loc1)
    %c5376_i32 = arith.constant 5376 : i32 loc(#loc1)
    %c768_i32 = arith.constant 768 : i32 loc(#loc1)
    %c6144_i32 = arith.constant 6144 : i32 loc(#loc1)
    %c1536_i32 = arith.constant 1536 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<1024xi8> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<1024xi8> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<1024xi8> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<1024xi8> loc(#loc1)
    %cst_7 = arith.constant dense<3840> : tensor<1024xi32> loc(#loc1)
    %cst_8 = arith.constant dense<3072> : tensor<1024xi32> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %cst_10 = arith.constant dense<768> : tensor<1024xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_10 : tensor<1024xi32> loc(#loc4)
    %3 = arith.remsi %0, %c2_i32 : i32 loc(#loc5)
    %4 = arith.divsi %0, %c2_i32 : i32 loc(#loc6)
    %5 = arith.remsi %4, %c2_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %c4_i32 : i32 loc(#loc8)
    %7 = arith.muli %3, %c1536_i32 : i32 loc(#loc9)
    %8 = tt.splat %7 : i32 -> tensor<1024xi32> loc(#loc10)
    %9 = arith.addi %1, %8 : tensor<1024xi32> loc(#loc10)
    %10 = arith.muli %4, %c6144_i32 : i32 loc(#loc11)
    %11 = tt.splat %10 : i32 -> tensor<1024xi32> loc(#loc12)
    %12 = arith.addi %9, %11 : tensor<1024xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc13)
    %15 = tt.load %14, %2, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.addi %1, %cst_10 : tensor<1024xi32> loc(#loc15)
    %17 = arith.addi %16, %8 : tensor<1024xi32> loc(#loc16)
    %18 = arith.addi %17, %11 : tensor<1024xi32> loc(#loc17)
    %19 = tt.addptr %13, %18 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc18)
    %20 = tt.load %19, %2, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc19)
    %21 = arith.addi %1, %cst_8 : tensor<1024xi32> loc(#loc20)
    %22 = arith.addi %21, %8 : tensor<1024xi32> loc(#loc21)
    %23 = arith.addi %22, %11 : tensor<1024xi32> loc(#loc22)
    %24 = tt.addptr %13, %23 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc23)
    %25 = tt.load %24, %2, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc24)
    %26 = arith.addi %1, %cst_7 : tensor<1024xi32> loc(#loc25)
    %27 = arith.addi %26, %8 : tensor<1024xi32> loc(#loc26)
    %28 = arith.addi %27, %11 : tensor<1024xi32> loc(#loc27)
    %29 = tt.addptr %13, %28 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc28)
    %30 = tt.load %29, %2, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc29)
    %31 = arith.muli %3, %c768_i32 : i32 loc(#loc30)
    %32 = tt.splat %31 : i32 -> tensor<1024xi32> loc(#loc31)
    %33 = arith.addi %1, %32 : tensor<1024xi32> loc(#loc31)
    %34 = arith.muli %5, %c5376_i32 : i32 loc(#loc32)
    %35 = tt.splat %34 : i32 -> tensor<1024xi32> loc(#loc33)
    %36 = arith.addi %33, %35 : tensor<1024xi32> loc(#loc33)
    %37 = arith.muli %6, %c37632_i32 : i32 loc(#loc34)
    %38 = tt.splat %37 : i32 -> tensor<1024xi32> loc(#loc35)
    %39 = arith.addi %36, %38 : tensor<1024xi32> loc(#loc35)
    %40 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc36)
    %41 = tt.addptr %40, %39 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc36)
    %42 = tt.load %41, %2, %cst_9 : tensor<1024x!tt.ptr<f32>> loc(#loc37)
    %43 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc38)
    %44 = tt.addptr %43, %1 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc38)
    %45 = tt.load %44, %2, %cst_9 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc39)
    %46 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc40)
    %47 = tt.addptr %46, %1 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc40)
    %48 = tt.load %47, %2, %cst_9 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc41)
    %49 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc42)
    %50 = tt.addptr %49, %1 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc42)
    %51 = tt.load %50, %2, %cst_9 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc43)
    %52 = arith.cmpf ogt, %20, %15 : tensor<1024xf32> loc(#loc44)
    %53 = arith.select %52, %cst_6, %cst_5 : tensor<1024xi1>, tensor<1024xi8> loc(#loc45)
    %54 = arith.cmpf une, %20, %20 : tensor<1024xf32> loc(#loc90)
    %55 = arith.ori %52, %54 : tensor<1024xi1> loc(#loc91)
    %56 = arith.select %55, %20, %15 : tensor<1024xi1>, tensor<1024xf32> loc(#loc92)
    %57 = arith.cmpf ogt, %25, %56 : tensor<1024xf32> loc(#loc50)
    %58 = arith.select %57, %cst_4, %53 : tensor<1024xi1>, tensor<1024xi8> loc(#loc51)
    %59 = arith.cmpf une, %25, %25 : tensor<1024xf32> loc(#loc93)
    %60 = arith.ori %57, %59 : tensor<1024xi1> loc(#loc94)
    %61 = arith.select %60, %25, %56 : tensor<1024xi1>, tensor<1024xf32> loc(#loc95)
    %62 = arith.cmpf ogt, %30, %61 : tensor<1024xf32> loc(#loc53)
    %63 = arith.select %62, %cst_3, %58 : tensor<1024xi1>, tensor<1024xi8> loc(#loc54)
    %64 = arith.cmpf une, %30, %30 : tensor<1024xf32> loc(#loc96)
    %65 = arith.ori %62, %64 : tensor<1024xi1> loc(#loc97)
    %66 = arith.select %65, %30, %61 : tensor<1024xi1>, tensor<1024xf32> loc(#loc98)
    %67 = arith.addf %42, %45 : tensor<1024xf32> loc(#loc56)
    %68 = arith.addf %66, %67 : tensor<1024xf32> loc(#loc57)
    %69 = arith.select %2, %68, %cst_9 : tensor<1024xi1>, tensor<1024xf32> loc(#loc58)
    %70 = "tt.reduce"(%69) <{axis = 0 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc60)), %arg13: f32 loc(callsite(#loc1 at #loc60))):
      %101 = arith.addf %arg12, %arg13 : f32 loc(#loc106)
      tt.reduce.return %101 : f32 loc(#loc99)
    }) : (tensor<1024xf32>) -> f32 loc(#loc99)
    %71 = arith.addf %70, %cst_2 : f32 loc(#loc102)
    %72 = arith.divf %71, %cst_1 : f32 loc(#loc64)
    %73 = tt.splat %72 : f32 -> tensor<1024xf32> loc(#loc65)
    %74 = arith.subf %68, %73 : tensor<1024xf32> loc(#loc65)
    %75 = arith.mulf %74, %74 : tensor<1024xf32> loc(#loc66)
    %76 = arith.select %2, %75, %cst_9 : tensor<1024xi1>, tensor<1024xf32> loc(#loc67)
    %77 = "tt.reduce"(%76) <{axis = 0 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc68)), %arg13: f32 loc(callsite(#loc1 at #loc68))):
      %101 = arith.addf %arg12, %arg13 : f32 loc(#loc107)
      tt.reduce.return %101 : f32 loc(#loc103)
    }) : (tensor<1024xf32>) -> f32 loc(#loc103)
    %78 = arith.addf %77, %cst_2 : f32 loc(#loc105)
    %79 = arith.divf %78, %cst_1 : f32 loc(#loc70)
    %80 = arith.addf %79, %cst_0 : f32 loc(#loc71)
    %81 = tt.extern_elementwise %80 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc72)
    %82 = tt.splat %81 : f32 -> tensor<1024xf32> loc(#loc73)
    %83 = arith.mulf %74, %82 : tensor<1024xf32> loc(#loc73)
    %84 = arith.mulf %83, %48 : tensor<1024xf32> loc(#loc74)
    %85 = arith.addf %84, %51 : tensor<1024xf32> loc(#loc75)
    %86 = arith.mulf %81, %cst : f32 loc(#loc76)
    %87 = tt.splat %86 : f32 -> tensor<1xf32> loc(#loc76)
    %88 = arith.muli %0, %c768_i32 : i32 loc(#loc77)
    %89 = tt.splat %88 : i32 -> tensor<1024xi32> loc(#loc78)
    %90 = arith.addi %1, %89 : tensor<1024xi32> loc(#loc78)
    %91 = tt.splat %arg5 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>> loc(#loc79)
    %92 = tt.addptr %91, %90 : tensor<1024x!tt.ptr<i8>>, tensor<1024xi32> loc(#loc79)
    tt.store %92, %63, %2 : tensor<1024x!tt.ptr<i8>> loc(#loc80)
    %93 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc81)
    %94 = tt.addptr %93, %90 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc81)
    tt.store %94, %68, %2 : tensor<1024x!tt.ptr<f32>> loc(#loc82)
    %95 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc83)
    %96 = tt.addptr %95, %90 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc83)
    tt.store %96, %83, %2 : tensor<1024x!tt.ptr<f32>> loc(#loc84)
    %97 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc85)
    %98 = tt.addptr %97, %90 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc85)
    tt.store %98, %85, %2 : tensor<1024x!tt.ptr<f32>> loc(#loc86)
    %99 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc87)
    %100 = tt.splat %99 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc87)
    tt.store %100, %87 : tensor<1x!tt.ptr<f32>> loc(#loc88)
    tt.return loc(#loc89)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":24:28)
#loc3 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":27:26)
#loc4 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":29:21)
#loc5 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":31:19)
#loc6 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":32:19)
#loc7 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":34:26)
#loc8 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":35:19)
#loc9 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":36:40)
#loc10 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":36:35)
#loc11 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":36:50)
#loc12 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":36:45)
#loc13 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":36:30)
#loc14 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":36:55)
#loc15 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":37:36)
#loc16 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":37:41)
#loc17 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":37:51)
#loc18 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":37:30)
#loc19 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":37:61)
#loc20 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":38:37)
#loc21 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":38:42)
#loc22 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":38:52)
#loc23 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":38:30)
#loc24 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":38:62)
#loc25 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":39:38)
#loc26 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":39:43)
#loc27 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":39:53)
#loc28 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":39:31)
#loc29 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":39:63)
#loc30 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:40)
#loc31 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:36)
#loc32 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:50)
#loc33 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:45)
#loc34 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:61)
#loc35 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:55)
#loc36 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:31)
#loc37 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":40:66)
#loc38 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":41:31)
#loc39 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":41:36)
#loc40 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":42:31)
#loc41 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":42:36)
#loc42 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":43:31)
#loc43 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":43:36)
#loc44 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":44:18)
#loc45 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":47:32)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc47 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":48:40)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc50 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":49:18)
#loc51 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":51:33)
#loc52 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":52:41)
#loc53 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":53:20)
#loc54 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":55:35)
#loc55 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":56:42)
#loc56 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":57:20)
#loc57 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":58:20)
#loc58 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":62:35)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc63 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":63:45)
#loc64 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":66:20)
#loc65 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":67:20)
#loc66 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":68:20)
#loc67 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":70:35)
#loc69 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":71:45)
#loc70 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":74:20)
#loc71 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":76:20)
#loc72 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":77:28)
#loc73 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":78:20)
#loc74 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":79:20)
#loc75 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":80:20)
#loc76 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":82:20)
#loc77 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":83:34)
#loc78 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":83:30)
#loc79 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":83:25)
#loc80 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":83:46)
#loc81 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":84:25)
#loc82 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":84:46)
#loc83 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":85:25)
#loc84 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":85:46)
#loc85 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":86:25)
#loc86 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":86:46)
#loc87 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":87:25)
#loc88 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":87:37)
#loc89 = loc("inductor_cache/5x/c5xfxiov4wdkwahtwbci67lyyjkaumfjwl2zmzx27ulu7usqb7f2.py":87:4)
#loc90 = loc(callsite(#loc46 at #loc47))
#loc91 = loc(callsite(#loc48 at #loc47))
#loc92 = loc(callsite(#loc49 at #loc47))
#loc93 = loc(callsite(#loc46 at #loc52))
#loc94 = loc(callsite(#loc48 at #loc52))
#loc95 = loc(callsite(#loc49 at #loc52))
#loc96 = loc(callsite(#loc46 at #loc55))
#loc97 = loc(callsite(#loc48 at #loc55))
#loc98 = loc(callsite(#loc49 at #loc55))
#loc99 = loc(callsite(#loc59 at #loc60))
#loc101 = loc(callsite(#loc61 at #loc59))
#loc102 = loc(callsite(#loc62 at #loc63))
#loc103 = loc(callsite(#loc59 at #loc68))
#loc105 = loc(callsite(#loc62 at #loc69))
#loc106 = loc(callsite(#loc101 at #loc60))
#loc107 = loc(callsite(#loc101 at #loc68))
