; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_pixel_shuffle_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 126, !dbg !12
  %11 = and i32 %8, 127, !dbg !12
  %12 = or disjoint i32 %7, %10, !dbg !13
  %13 = or disjoint i32 %7, %11, !dbg !13
  %14 = icmp slt i32 %12, 512, !dbg !14
  %15 = icmp slt i32 %13, 512, !dbg !14
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %17 = shl i32 %16, 1, !dbg !16
  %18 = lshr i32 %8, 6, !dbg !17
  %.lobit = and i32 %18, 1, !dbg !17
  %19 = or disjoint i32 %17, %.lobit, !dbg !18
  %20 = icmp slt i32 %19, 2, !dbg !19
  %21 = icmp slt i32 %17, 2, !dbg !19
  %22 = srem i32 %12, 4, !dbg !20
  %23 = sdiv i32 %13, 4, !dbg !21
  %24 = srem i32 %23, 2, !dbg !22
  %25 = sdiv i32 %12, 32, !dbg !23
  %26 = sdiv i32 %13, 32, !dbg !23
  %27 = srem i32 %26, 4, !dbg !24
  %28 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !25
  %29 = shufflevector <2 x i32> %28, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !25
  %30 = sdiv <2 x i32> %29, <i32 8, i32 4>, !dbg !25
  %31 = srem <2 x i32> %30, <i32 4, i32 2>, !dbg !26
  %32 = insertelement <4 x i32> poison, i32 %19, i64 0, !dbg !27
  %33 = insertelement <4 x i32> %32, i32 %25, i64 1, !dbg !27
  %34 = shufflevector <2 x i32> %31, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !27
  %35 = shufflevector <4 x i32> %33, <4 x i32> %34, <4 x i32> <i32 0, i32 1, i32 4, i32 5>, !dbg !27
  %36 = shl <4 x i32> %35, <i32 4, i32 6, i32 2, i32 5>, !dbg !27
  %37 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %36), !dbg !28
  %op.rdx = add i32 %37, %22, !dbg !29
  %38 = sext i32 %op.rdx to i64, !dbg !30
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !30
  %40 = and i1 %14, %20, !dbg !31
  %41 = and i1 %21, %15, !dbg !31
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %39, i1 %40) #3, !dbg !32
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !32
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !32
  %45 = shl i32 %8, 2, !dbg !32
  %46 = and i32 %45, 252, !dbg !32
  %47 = or disjoint i32 %46, %.lobit, !dbg !32
  %48 = and i32 %9, 254, !dbg !32
  %49 = lshr exact i32 %46, 1, !dbg !32
  %50 = getelementptr float, ptr addrspace(3) @global_smem, i32 %49, !dbg !32
  %51 = getelementptr float, ptr addrspace(3) %50, i32 %47, !dbg !32
  %52 = insertelement <1 x i32> poison, i32 %43, i64 0, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %51, <1 x i32> %52, i1 true) #3, !dbg !32
  %53 = or disjoint i32 %47, 2, !dbg !32
  %54 = lshr i32 %53, 1, !dbg !32
  %55 = getelementptr float, ptr addrspace(3) @global_smem, i32 %54, !dbg !32
  %56 = getelementptr float, ptr addrspace(3) %55, i32 %53, !dbg !32
  %57 = insertelement <1 x i32> poison, i32 %44, i64 0, !dbg !32
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %56, <1 x i32> %57, i1 true) #3, !dbg !32
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %58 = lshr exact i32 %48, 1, !dbg !32
  %59 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %58, !dbg !32
  %60 = getelementptr inbounds float, ptr addrspace(3) %59, i32 %48, !dbg !32
  %61 = load float, ptr addrspace(3) %60, align 4, !dbg !32
  %62 = or disjoint i32 %48, 1, !dbg !32
  %63 = getelementptr inbounds float, ptr addrspace(3) %59, i32 %62, !dbg !32
  %64 = load float, ptr addrspace(3) %63, align 4, !dbg !32
  %65 = add i32 %24, %16, !dbg !33
  %66 = shl i32 %65, 1, !dbg !33
  %67 = shl nsw i32 %27, 2, !dbg !34
  %68 = add i32 %66, %67, !dbg !35
  %69 = sext i32 %68 to i64, !dbg !36
  %70 = getelementptr float, ptr addrspace(1) %1, i64 %69, !dbg !36
  %71 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %70, i1 %41) #3, !dbg !37
  %72 = extractvalue { i32, i32 } %71, 0, !dbg !37
  %73 = extractvalue { i32, i32 } %71, 1, !dbg !37
  %74 = bitcast i32 %72 to float, !dbg !37
  %75 = bitcast i32 %73 to float, !dbg !37
  %76 = fadd float %61, %74, !dbg !38
  %77 = fadd float %64, %75, !dbg !38
  %78 = add i32 %13, %16, !dbg !39
  %79 = shl i32 %78, 1, !dbg !39
  %80 = sext i32 %79 to i64, !dbg !40
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %80, !dbg !40
  %82 = bitcast float %76 to i32, !dbg !41
  %83 = bitcast float %77 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %82, i32 %83, ptr addrspace(1) %81, i1 %41) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py", directory: "inductor_cache/mj")
!4 = !{ptr @triton_poi_fused_pixel_shuffle_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_pixel_shuffle_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_pixel_shuffle_0", linkageName: "triton_poi_fused_pixel_shuffle_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 21, scope: !7)
!22 = !DILocation(line: 30, column: 26, scope: !7)
!23 = !DILocation(line: 32, column: 19, scope: !7)
!24 = !DILocation(line: 33, column: 27, scope: !7)
!25 = !DILocation(line: 31, column: 21, scope: !7)
!26 = !DILocation(line: 31, column: 26, scope: !7)
!27 = !DILocation(line: 35, column: 45, scope: !7)
!28 = !DILocation(line: 35, column: 58, scope: !7)
!29 = !DILocation(line: 35, column: 35, scope: !7)
!30 = !DILocation(line: 35, column: 30, scope: !7)
!31 = !DILocation(line: 35, column: 74, scope: !7)
!32 = !DILocation(line: 35, column: 66, scope: !7)
!33 = !DILocation(line: 36, column: 35, scope: !7)
!34 = !DILocation(line: 36, column: 44, scope: !7)
!35 = !DILocation(line: 36, column: 42, scope: !7)
!36 = !DILocation(line: 36, column: 30, scope: !7)
!37 = !DILocation(line: 36, column: 49, scope: !7)
!38 = !DILocation(line: 37, column: 18, scope: !7)
!39 = !DILocation(line: 38, column: 30, scope: !7)
!40 = !DILocation(line: 38, column: 25, scope: !7)
!41 = !DILocation(line: 38, column: 43, scope: !7)
!42 = !DILocation(line: 38, column: 4, scope: !7)
