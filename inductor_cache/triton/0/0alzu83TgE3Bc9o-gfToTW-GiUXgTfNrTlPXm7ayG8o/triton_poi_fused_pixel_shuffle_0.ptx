//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_pixel_shuffle_0 // -- Begin function triton_poi_fused_pixel_shuffle_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_pixel_shuffle_0
.visible .entry triton_poi_fused_pixel_shuffle_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_pixel_shuffle_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_pixel_shuffle_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_pixel_shuffle_0_param_2,
	.param .u32 triton_poi_fused_pixel_shuffle_0_param_3,
	.param .u32 triton_poi_fused_pixel_shuffle_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<82>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_pixel_shuffle_0_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_pixel_shuffle_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:22:33
	shl.b32 	%r13, %r1, 7;
	ld.param.u64 	%rd6, [triton_poi_fused_pixel_shuffle_0_param_2];
	.loc	1 23 44                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:23:44
	mov.u32 	%r14, %tid.x;
	shl.b32 	%r15, %r14, 1;
	and.b32  	%r16, %r15, 126;
	and.b32  	%r17, %r14, 127;
	.loc	1 23 23                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:23:23
	or.b32  	%r18, %r13, %r16;
	or.b32  	%r19, %r13, %r17;
	.loc	1 24 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:24:21
	setp.lt.s32 	%p6, %r18, 512;
	setp.lt.s32 	%p7, %r19, 512;
	.loc	1 25 28                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:25:33
	shl.b32 	%r20, %r2, 1;
	.loc	1 26 44                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:26:44
	bfe.u32 	%r21, %r14, 6, 1;
	.loc	1 26 23                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:26:23
	or.b32  	%r22, %r20, %r21;
	.loc	1 27 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:27:21
	setp.lt.s32 	%p8, %r22, 2;
	setp.lt.s32 	%p9, %r20, 2;
	.loc	1 29 19                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:29:19
	bfe.s32 	%r23, %r1, 24, 1;
	.loc	1 30 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:30:21
	shr.u32 	%r24, %r23, 30;
	.loc	1 29 19                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:29:19
	add.s32 	%r25, %r18, %r24;
	and.b32  	%r26, %r25, -4;
	sub.s32 	%r27, %r18, %r26;
	.loc	1 30 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:30:21
	add.s32 	%r28, %r19, %r24;
	shr.s32 	%r29, %r28, 2;
	.loc	1 30 26                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:30:26
	shr.u32 	%r30, %r28, 31;
	add.s32 	%r31, %r29, %r30;
	and.b32  	%r32, %r31, 2147483646;
	sub.s32 	%r33, %r29, %r32;
	.loc	1 32 19                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:32:19
	shr.u32 	%r34, %r23, 27;
	add.s32 	%r35, %r18, %r34;
	add.s32 	%r36, %r19, %r34;
	shr.s32 	%r37, %r36, 5;
	.loc	1 33 27                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:33:27
	shr.u32 	%r38, %r37, 30;
	add.s32 	%r39, %r37, %r38;
	and.b32  	%r40, %r39, 1073741820;
	sub.s32 	%r41, %r37, %r40;
	.loc	1 31 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:31:21
	shr.u32 	%r42, %r23, 29;
	add.s32 	%r43, %r18, %r42;
	shr.s32 	%r44, %r43, 3;
	shr.s32 	%r45, %r25, 2;
	.loc	1 31 26                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:31:26
	shr.u32 	%r46, %r25, 31;
	add.s32 	%r47, %r45, %r46;
	and.b32  	%r48, %r47, 134217726;
	sub.s32 	%r49, %r45, %r48;
	shr.s32 	%r50, %r43, 31;
	shr.u32 	%r51, %r50, 30;
	add.s32 	%r52, %r44, %r51;
	and.b32  	%r53, %r52, 1073741820;
	sub.s32 	%r54, %r44, %r53;
	.loc	1 35 45                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:45
	shl.b32 	%r55, %r54, 2;
	shl.b32 	%r56, %r49, 5;
	shl.b32 	%r57, %r22, 4;
	shl.b32 	%r58, %r35, 1;
	and.b32  	%r59, %r58, -64;
	.loc	1 35 58                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:58
	add.s32 	%r60, %r59, %r56;
	add.s32 	%r61, %r57, %r55;
	add.s32 	%r62, %r61, %r60;
	.loc	1 35 35                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:35
	add.s32 	%r63, %r62, %r27;
	.loc	1 35 30                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:30
	mul.wide.s32 	%rd7, %r63, 4;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 35 74                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:74
	and.pred  	%p1, %p6, %p8;
	and.pred  	%p4, %p9, %p7;
	.loc	1 35 66                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:66
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r64, %r14, 2;
	and.b32  	%r65, %r64, 252;
	or.b32  	%r66, %r65, %r21;
	and.b32  	%r67, %r15, 254;
	mov.u32 	%r68, global_smem;
	shl.b32 	%r69, %r66, 2;
	shl.b32 	%r70, %r65, 1;
	add.s32 	%r71, %r68, %r70;
	add.s32 	%r5, %r71, %r69;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r72, %r67, 1;
	add.s32 	%r73, %r68, %r72;
	shl.b32 	%r74, %r67, 2;
	add.s32 	%r75, %r73, %r74;
	ld.shared.f32 	%f1, [%r75];
	ld.shared.f32 	%f2, [%r75+4];
	.loc	1 36 35                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:35
	add.s32 	%r76, %r33, %r2;
	shl.b32 	%r77, %r76, 1;
	.loc	1 36 44                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:44
	shl.b32 	%r78, %r41, 2;
	.loc	1 36 42                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:42
	add.s32 	%r79, %r77, %r78;
	.loc	1 36 30                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:30
	mul.wide.s32 	%rd8, %r79, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 36 49                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:49
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r9;
	mov.b32 	%f4, %r10;
	.loc	1 37 18                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:37:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 38 30                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:30
	add.s32 	%r80, %r19, %r2;
	shl.b32 	%r81, %r80, 1;
	.loc	1 38 25                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:25
	mul.wide.s32 	%rd9, %r81, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 38 43                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:43
	mov.b32 	%r11, %f5;
	mov.b32 	%r12, %f6;
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd3 + 0 ], { %r11, %r12 };
	// end inline asm
	.loc	1 38 4                          // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 106
.b8 122
.b8 51
.b8 106
.b8 55
.b8 108
.b8 114
.b8 115
.b8 112
.b8 115
.b8 101
.b8 98
.b8 112
.b8 108
.b8 107
.b8 120
.b8 104
.b8 51
.b8 115
.b8 121
.b8 121
.b8 108
.b8 109
.b8 109
.b8 55
.b8 52
.b8 108
.b8 105
.b8 109
.b8 98
.b8 99
.b8 119
.b8 53
.b8 111
.b8 112
.b8 104
.b8 121
.b8 113
.b8 99
.b8 51
.b8 101
.b8 120
.b8 52
.b8 98
.b8 101
.b8 107
.b8 54
.b8 111
.b8 54
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
