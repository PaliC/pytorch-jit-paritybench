; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_pow_sub_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 4, !dbg !15
  %12 = mul i32 %11, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = shl nsw i32 %11, 2, !dbg !17
  %14 = sext i32 %13 to i64, !dbg !18
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !18
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %10) #1, !dbg !19
  %17 = or disjoint i32 %13, 1, !dbg !20
  %18 = sext i32 %17 to i64, !dbg !21
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !21
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %10) #1, !dbg !22
  %21 = or disjoint i32 %13, 2, !dbg !23
  %22 = sext i32 %21 to i64, !dbg !24
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !24
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %10) #1, !dbg !25
  %25 = or disjoint i32 %13, 3, !dbg !26
  %26 = sext i32 %25 to i64, !dbg !27
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !27
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %10) #1, !dbg !28
  %29 = sext i32 %9 to i64, !dbg !29
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %10) #1, !dbg !30
  %32 = bitcast i32 %31 to float, !dbg !30
  %33 = sext i32 %.decomposed to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !31
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %10) #1, !dbg !32
  %36 = getelementptr i8, ptr addrspace(1) %34, i64 16, !dbg !33
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %10) #1, !dbg !34
  %38 = getelementptr i8, ptr addrspace(1) %34, i64 32, !dbg !35
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #1, !dbg !36
  %40 = getelementptr i8, ptr addrspace(1) %34, i64 48, !dbg !37
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !38
  %42 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !19
  %43 = insertelement <2 x i32> %42, i32 %35, i64 1, !dbg !19
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !19
  %45 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !22
  %46 = insertelement <2 x i32> %45, i32 %37, i64 1, !dbg !22
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !22
  %48 = insertelement <2 x i32> poison, i32 %24, i64 0, !dbg !25
  %49 = insertelement <2 x i32> %48, i32 %39, i64 1, !dbg !25
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !25
  %51 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !28
  %52 = insertelement <2 x i32> %51, i32 %41, i64 1, !dbg !28
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !28
  %54 = fmul <2 x float> %44, %44, !dbg !39
  %55 = fmul <2 x float> %47, %47, !dbg !40
  %56 = fadd <2 x float> %54, %55, !dbg !41
  %57 = fmul <2 x float> %50, %50, !dbg !42
  %58 = fadd <2 x float> %56, %57, !dbg !43
  %59 = fmul <2 x float> %53, %53, !dbg !44
  %60 = fadd <2 x float> %58, %59, !dbg !45
  %61 = extractelement <2 x float> %60, i64 0, !dbg !46
  %62 = fsub float %61, %32, !dbg !46
  %63 = extractelement <2 x float> %60, i64 1, !dbg !47
  %64 = fadd float %62, %63, !dbg !47
  %65 = bitcast float %64 to i32, !dbg !48
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %30, i1 %10) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chfjbdgavvzuk24upadgkxdngqw5sgqyq24ca7usdx64usgr74lq.py", directory: "inductor_cache/hf")
!4 = !{ptr @triton_poi_fused_add_pow_sub_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_pow_sub_sum_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_pow_sub_sum_1", linkageName: "triton_poi_fused_add_pow_sub_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 32, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 41, scope: !7)
!26 = !DILocation(line: 30, column: 34, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 41, scope: !7)
!29 = !DILocation(line: 31, column: 35, scope: !7)
!30 = !DILocation(line: 31, column: 40, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 36, scope: !7)
!33 = !DILocation(line: 33, column: 31, scope: !7)
!34 = !DILocation(line: 33, column: 40, scope: !7)
!35 = !DILocation(line: 34, column: 31, scope: !7)
!36 = !DILocation(line: 34, column: 40, scope: !7)
!37 = !DILocation(line: 35, column: 31, scope: !7)
!38 = !DILocation(line: 35, column: 41, scope: !7)
!39 = !DILocation(line: 36, column: 18, scope: !7)
!40 = !DILocation(line: 37, column: 18, scope: !7)
!41 = !DILocation(line: 38, column: 18, scope: !7)
!42 = !DILocation(line: 39, column: 18, scope: !7)
!43 = !DILocation(line: 40, column: 18, scope: !7)
!44 = !DILocation(line: 41, column: 18, scope: !7)
!45 = !DILocation(line: 42, column: 19, scope: !7)
!46 = !DILocation(line: 43, column: 20, scope: !7)
!47 = !DILocation(line: 51, column: 20, scope: !7)
!48 = !DILocation(line: 52, column: 40, scope: !7)
!49 = !DILocation(line: 52, column: 4, scope: !7)
