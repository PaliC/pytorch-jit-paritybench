; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__log_softmax_convolution_27(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %9 = and i32 %8, 15, !dbg !11
  %10 = icmp samesign ult i32 %9, 12, !dbg !12
  %.frozen = freeze i32 %7, !dbg !13
  %11 = sdiv i32 %.frozen, 4096, !dbg !13
  %12 = mul i32 %11, 4096, !dbg !14
  %.decomposed = sub i32 %.frozen, %12, !dbg !14
  %13 = shl nuw nsw i32 %9, 12, !dbg !15
  %14 = add nsw i32 %.decomposed, %13, !dbg !16
  %15 = mul i32 %11, 49152, !dbg !17
  %16 = add i32 %14, %15, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %10, i32 0, i1 %10) #2, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = zext nneg i32 %9 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !21
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %10, i32 0, i1 %10) #2, !dbg !22
  %24 = bitcast i32 %23 to float, !dbg !22
  %25 = fadd float %20, %24, !dbg !23
  %26 = select i1 %10, float %25, float 0xFFF0000000000000, !dbg !24
  %27 = bitcast float %26 to i32, !dbg !25
  %28 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %27, i32 8, i32 31), !dbg !25
  %29 = bitcast i32 %28 to float, !dbg !25
  %30 = fcmp ogt float %26, %29, !dbg !29
  %31 = fcmp uno float %26, 0.000000e+00, !dbg !31
  %32 = or i1 %30, %31, !dbg !32
  %33 = select i1 %32, float %26, float %29, !dbg !33
  %34 = bitcast float %33 to i32, !dbg !25
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 4, i32 31), !dbg !25
  %36 = bitcast i32 %35 to float, !dbg !25
  %37 = fcmp ogt float %33, %36, !dbg !29
  %38 = fcmp uno float %33, 0.000000e+00, !dbg !31
  %39 = or i1 %37, %38, !dbg !32
  %40 = select i1 %39, float %33, float %36, !dbg !33
  %41 = bitcast float %40 to i32, !dbg !25
  %42 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 2, i32 31), !dbg !25
  %43 = bitcast i32 %42 to float, !dbg !25
  %44 = fcmp ogt float %40, %43, !dbg !29
  %45 = fcmp uno float %40, 0.000000e+00, !dbg !31
  %46 = or i1 %44, %45, !dbg !32
  %47 = select i1 %46, float %40, float %43, !dbg !33
  %48 = bitcast float %47 to i32, !dbg !25
  %49 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %48, i32 1, i32 31), !dbg !25
  %50 = bitcast i32 %49 to float, !dbg !25
  %51 = fcmp ogt float %47, %50, !dbg !29
  %52 = fcmp uno float %47, 0.000000e+00, !dbg !31
  %53 = or i1 %51, %52, !dbg !32
  %54 = select i1 %53, float %47, float %50, !dbg !33
  %55 = fsub float %25, %54, !dbg !34
  %56 = fmul float %55, 0x3FF7154760000000, !dbg !35
  %57 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %56) #2, !dbg !35
  %58 = select i1 %10, float %57, float 0.000000e+00, !dbg !36
  %59 = bitcast float %58 to i32, !dbg !37
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 8, i32 31), !dbg !37
  %61 = bitcast i32 %60 to float, !dbg !37
  %62 = fadd float %58, %61, !dbg !41
  %63 = bitcast float %62 to i32, !dbg !37
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 4, i32 31), !dbg !37
  %65 = bitcast i32 %64 to float, !dbg !37
  %66 = fadd float %62, %65, !dbg !41
  %67 = bitcast float %66 to i32, !dbg !37
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 2, i32 31), !dbg !37
  %69 = bitcast i32 %68 to float, !dbg !37
  %70 = fadd float %66, %69, !dbg !41
  %71 = bitcast float %70 to i32, !dbg !37
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 1, i32 31), !dbg !37
  %73 = bitcast i32 %72 to float, !dbg !37
  %74 = fadd float %70, %73, !dbg !41
  %75 = sext i32 %7 to i64, !dbg !43
  %76 = getelementptr float, ptr addrspace(1) %2, i64 %75, !dbg !43
  %77 = and i32 %8, 63, !dbg !44
  %78 = icmp eq i32 %77, 0, !dbg !44
  %79 = bitcast float %54 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %79, ptr addrspace(1) %76, i1 %78) #2, !dbg !44
  %80 = getelementptr float, ptr addrspace(1) %3, i64 %75, !dbg !45
  %81 = bitcast float %74 to i32, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %81, ptr addrspace(1) %80, i1 %78) #2, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py", directory: "inductor_cache/d6")
!4 = !{ptr @triton_per_fused__log_softmax_convolution_27, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_convolution_27, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_convolution_27", linkageName: "triton_per_fused__log_softmax_convolution_27", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 26, column: 34, scope: !7)
!12 = !DILocation(line: 28, column: 21, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 40, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 51, scope: !7)
!18 = !DILocation(line: 33, column: 45, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 56, scope: !7)
!21 = !DILocation(line: 34, column: 30, scope: !7)
!22 = !DILocation(line: 34, column: 35, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 33, scope: !7)
!25 = !DILocation(line: 131, column: 29, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!28 = !DILocation(line: 38, column: 37, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !26, file: !27, discriminator: 0)
!31 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !28)
!32 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !28)
!33 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !28)
!34 = !DILocation(line: 39, column: 18, scope: !7)
!35 = !DILocation(line: 40, column: 23, scope: !7)
!36 = !DILocation(line: 42, column: 34, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!40 = !DILocation(line: 43, column: 26, scope: !7)
!41 = !DILocation(line: 256, column: 15, scope: !42, inlinedAt: !40)
!42 = distinct !DILexicalBlockFile(scope: !38, file: !39, discriminator: 0)
!43 = !DILocation(line: 44, column: 25, scope: !7)
!44 = !DILocation(line: 44, column: 36, scope: !7)
!45 = !DILocation(line: 45, column: 25, scope: !7)
!46 = !DILocation(line: 45, column: 37, scope: !7)
!47 = !DILocation(line: 45, column: 4, scope: !7)
