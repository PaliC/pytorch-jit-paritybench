//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 117, 47, 99, 104, 117, 51, 106, 114, 120, 102, 52, 97, 113, 52, 55, 113, 54, 99, 108, 110, 110, 52, 98, 52, 118, 99, 103, 118, 117, 121, 53, 55, 52, 122, 120, 108, 107, 51, 106, 110, 115, 53, 114, 97, 55, 105, 99, 118, 114, 109, 102, 117, 117, 111, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[40] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 57, 32, 60, 32, 51, 50, 55, 54, 56};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_10
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<65>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<55>;
	.loc	1 19 0                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_0];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_1];
$L__tmp0:
	.loc	1 21 28                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:21:28
	// begin inline asm
	mov.u32 %r15, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:21:33
	shl.b32 	%r36, %r15, 8;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_2];
	.loc	1 22 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:22:36
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_3];
	shl.b32 	%r37, %r1, 1;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_4];
	and.b32  	%r2, %r37, 254;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_5];
	.loc	1 22 23                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:22:23
	or.b32  	%r38, %r36, %r2;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_6];
	.loc	1 25 21                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:25:21
	bfe.s32 	%r39, %r15, 23, 1;
	shr.u32 	%r40, %r39, 30;
	add.s32 	%r41, %r38, %r40;
	shr.s32 	%r42, %r41, 2;
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_7];
	.loc	1 25 26                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:25:26
	shr.s32 	%r43, %r41, 31;
	shr.u32 	%r44, %r43, 23;
	add.s32 	%r45, %r42, %r44;
	and.b32  	%r46, %r45, -512;
	sub.s32 	%r47, %r42, %r46;
	.loc	1 26 34                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:26:34
	mul.wide.s32 	%rd30, %r38, 4;
	add.s64 	%rd7, %rd22, %rd30;
	mov.pred 	%p13, -1;
	.loc	1 26 39                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:26:39
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p13 ld.global.v2.b32 { %r16, %r17 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 27 30                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:27:30
	mul.wide.s32 	%rd31, %r47, 4;
	add.s64 	%rd8, %rd23, %rd31;
	.loc	1 27 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:27:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r18 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r19 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 28 30                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:28:30
	add.s64 	%rd10, %rd24, %rd31;
	.loc	1 28 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:28:35
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r21 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 29 30                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:29:30
	add.s64 	%rd12, %rd25, %rd31;
	.loc	1 29 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:29:35
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r22 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r23 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 30 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:30:31
	add.s64 	%rd14, %rd26, %rd31;
	.loc	1 30 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:30:36
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r24 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r25 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 31 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:31:31
	add.s64 	%rd16, %rd27, %rd31;
	.loc	1 31 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:31:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r26 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r27 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 32 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:32:31
	add.s64 	%rd18, %rd28, %rd30;
	.loc	1 32 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:32:36
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p13 ld.global.v2.b32 { %r28, %r29 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 33 31                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:33:31
	mul.wide.s32 	%rd32, %r38, 8;
	add.s64 	%rd21, %rd29, %rd32;
	.loc	1 33 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:33:36
	// begin inline asm
	mov.u64 %rd19, 0x0;
	mov.u64 %rd20, 0x0;
	@%p13 ld.global.v2.b64 { %rd19, %rd20 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 50 16                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:50:16
	shl.b32 	%r48, %r42, 4;
	.loc	1 51 20                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:51:20
	cvt.s64.s32 	%rd33, %r48;
	add.s64 	%rd34, %rd19, %rd33;
	add.s64 	%rd35, %rd20, %rd33;
	.loc	1 55 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:55:35
	shr.u64 	%rd36, %rd34, 48;
	and.b64  	%rd37, %rd36, 32768;
	add.s64 	%rd3, %rd37, %rd34;
	shr.u64 	%rd38, %rd35, 48;
	and.b64  	%rd39, %rd38, 32768;
	add.s64 	%rd4, %rd39, %rd35;
	.loc	1 56 53                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:53
	or.b64  	%rd40, %rd3, %rd4;
	setp.lt.u64 	%p14, %rd40, 32768;
	@%p14 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 53                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:0:53
	ld.param.u64 	%rd6, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_9];
	ld.param.u64 	%rd5, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_unpool2d_relu_threshold_backward_14_param_8];
	cvt.s64.s32 	%rd1, %r38;
	mov.b32 	%f3, %r22;
	mov.b32 	%f4, %r23;
	add.f32 	%f5, %f3, 0f3727C5AC;
	add.f32 	%f6, %f4, 0f3727C5AC;
	sqrt.approx.ftz.f32 	%f7, %f5;
	sqrt.approx.ftz.f32 	%f8, %f6;
	mov.b32 	%r32, %f7;
	mov.b32 	%r31, 1065353216;
	// begin inline asm
	div.full.f32 %r30, %r31, %r32;
	// end inline asm
	mov.b32 	%f1, %r30;
	mov.b32 	%r35, %f8;
	// begin inline asm
	div.full.f32 %r33, %r31, %r35;
	// end inline asm
	mov.b32 	%f2, %r33;
	.loc	1 27 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:27:35
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	.loc	1 28 35                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:28:35
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	.loc	1 30 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:30:36
	mov.b32 	%f13, %r24;
	mov.b32 	%f14, %r25;
	.loc	1 31 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:31:36
	mov.b32 	%f15, %r26;
	mov.b32 	%f16, %r27;
	.loc	1 26 39                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:26:39
	mov.b32 	%f17, %r16;
	mov.b32 	%f18, %r17;
	.loc	1 34 18                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:34:18
	add.f32 	%f19, %f18, %f10;
	add.f32 	%f20, %f17, %f9;
	.loc	1 56 53                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:53
	bar.sync 	0;
	.loc	1 34 18                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:34:18
	mov.b32 	%r49, %f20;
	mov.b32 	%r50, %f19;
	.loc	1 59 39                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:59:39
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd7 + 0 ], { %r49, %r50 };
	// end inline asm
	.loc	1 60 25                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:60:25
	shl.b64 	%rd53, %rd3, 2;
	add.s64 	%rd48, %rd5, %rd53;
	shl.b64 	%rd54, %rd4, 2;
	add.s64 	%rd49, %rd5, %rd54;
	.loc	1 60 67                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:60:67
	and.b32  	%r57, %r1, 127;
	shl.b32 	%r58, %r2, 3;
	mov.u32 	%r59, global_smem;
	add.s32 	%r51, %r59, %r58;
	// begin inline asm
	@%p13 st.shared.v2.b64 [ %r51 + 0 ], { %rd48, %rd49 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r60, %r57, 3;
	add.s32 	%r61, %r59, %r60;
	ld.shared.u64 	%rd50, [%r61];
	ld.shared.u64 	%rd51, [%r61+1024];
	bar.sync 	0;
	shl.b32 	%r62, %r2, 2;
	sub.s32 	%r52, %r51, %r62;
	shl.b32 	%r63, %r57, 2;
	sub.s32 	%r64, %r61, %r63;
	.loc	1 61 25                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:61:25
	add.s64 	%rd52, %rd6, %rd1;
	.loc	1 35 18                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:35:18
	sub.f32 	%f21, %f19, %f12;
	sub.f32 	%f22, %f20, %f11;
	.loc	1 43 19                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:43:19
	mul.f32 	%f23, %f22, %f1;
	mul.f32 	%f24, %f21, %f2;
	.loc	1 45 20                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:45:20
	fma.rn.f32 	%f25, %f24, %f14, %f16;
	fma.rn.f32 	%f26, %f23, %f13, %f15;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p21, %f26, 0f00000000;
	setp.lt.f32 	%p22, %f25, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f27, 0f00000000, %f25, %p22;
	selp.f32 	%f28, 0f00000000, %f26, %p21;
$L__tmp2:
	.loc	1 32 36                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:32:36
	mov.b32 	%f29, %r29;
	mov.b32 	%f30, %r28;
	.loc	1 48 20                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:48:20
	add.f32 	%f31, %f28, %f30;
	add.f32 	%f32, %f27, %f29;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p23, %f32, 0f00000000;
	setp.lt.f32 	%p24, %f31, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f33, 0f00000000, %f31, %p24;
	selp.f32 	%f34, 0f00000000, %f32, %p23;
$L__tmp4:
	.loc	1 58 21                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:58:21
	setp.le.f32 	%p25, %f34, 0f00000000;
	setp.le.f32 	%p26, %f33, 0f00000000;
$L__tmp5:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r53, %f33;
	mov.b32 	%r54, %f34;
$L__tmp6:
	.loc	1 60 67                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:60:67
	// begin inline asm
	@%p13 st.shared.v2.b32 [ %r52 + 0 ], { %r53, %r54 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r55, [%r64];
	ld.shared.u32 	%r56, [%r64+512];
	// begin inline asm
	@%p13 st.global.b32 [ %rd50 + 0 ], { %r55 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.b32 [ %rd51 + 0 ], { %r56 };
	// end inline asm
	.loc	1 61 37                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:61:37
	selp.u16 	%rs2, 1, 0, %p26;
	selp.u16 	%rs3, 1, 0, %p25;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p13 st.global.b16 [ %rd52 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 61 4                          // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:61:4
	ret;
$L__BB0_1:
	.loc	1 56 53                         // chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py:56:53
	mov.u64 	%rd41, assertMessage_0;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, assertFile_0;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, assertFunc_0;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd42;
	.param .b64 param1;
	st.param.b64 	[param1], %rd44;
	.param .b32 param2;
	st.param.b32 	[param2], 56;
	.param .b64 param3;
	st.param.b64 	[param3], %rd46;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hu/chu3jrxf4aq47q6clnn4b4vcgvuy574zxlk3jns5ra7icvrmfuuo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 278                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 51
.b8 106
.b8 114
.b8 120
.b8 102
.b8 52
.b8 97
.b8 113
.b8 52
.b8 55
.b8 113
.b8 54
.b8 99
.b8 108
.b8 110
.b8 110
.b8 52
.b8 98
.b8 52
.b8 118
.b8 99
.b8 103
.b8 118
.b8 117
.b8 121
.b8 53
.b8 55
.b8 52
.b8 122
.b8 120
.b8 108
.b8 107
.b8 51
.b8 106
.b8 110
.b8 115
.b8 53
.b8 114
.b8 97
.b8 55
.b8 105
.b8 99
.b8 118
.b8 114
.b8 109
.b8 102
.b8 117
.b8 117
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x70 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 117
.b8 110
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xd3:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x100:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
