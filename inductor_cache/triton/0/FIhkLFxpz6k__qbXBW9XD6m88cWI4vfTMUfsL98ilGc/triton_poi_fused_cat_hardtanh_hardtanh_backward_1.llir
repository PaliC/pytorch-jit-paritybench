; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_hardtanh_hardtanh_backward_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 2592, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 81, !dbg !15
  %.frozen3 = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen3, 81, !dbg !15
  %15 = srem i32 %13, 8, !dbg !16
  %16 = srem i32 %14, 8, !dbg !16
  %17 = mul i32 %13, 81, !dbg !17
  %.decomposed = sub i32 %.frozen, %17, !dbg !17
  %18 = mul i32 %14, 81, !dbg !17
  %.decomposed4 = sub i32 %.frozen3, %18, !dbg !17
  %.frozen5 = freeze i32 %10, !dbg !18
  %19 = sdiv i32 %.frozen5, 648, !dbg !18
  %20 = icmp slt i32 %15, 4, !dbg !19
  %21 = icmp slt i32 %16, 4, !dbg !19
  %22 = mul i32 %19, 648, !dbg !20
  %srem.decomposed = sub i32 %.frozen5, %22, !dbg !20
  %srem1 = srem i32 %11, 648, !dbg !20
  %23 = mul nsw i32 %19, 324, !dbg !21
  %24 = add nsw i32 %23, %srem.decomposed, !dbg !22
  %25 = add nsw i32 %23, %srem1, !dbg !22
  %26 = sext i32 %24 to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !23
  %28 = sext i32 %25 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = and i1 %12, %20, !dbg !24
  %31 = and i1 %21, %12, !dbg !24
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %30, i32 0, i1 %30) #1, !dbg !25
  %33 = bitcast i32 %32 to float, !dbg !25
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %31, i32 0, i1 %31) #1, !dbg !25
  %35 = bitcast i32 %34 to float, !dbg !25
  %36 = icmp sgt i32 %15, 3, !dbg !26
  %37 = icmp sgt i32 %16, 3, !dbg !26
  %38 = mul nsw i32 %15, 81, !dbg !27
  %39 = mul nsw i32 %16, 81, !dbg !27
  %40 = add nsw i32 %23, -324, !dbg !27
  %41 = add nsw i32 %40, %.decomposed, !dbg !28
  %42 = add nsw i32 %41, %38, !dbg !29
  %43 = add nsw i32 %40, %.decomposed4, !dbg !28
  %44 = add nsw i32 %43, %39, !dbg !29
  %45 = sext i32 %42 to i64, !dbg !30
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !30
  %47 = sext i32 %44 to i64, !dbg !30
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !30
  %49 = and i1 %12, %36, !dbg !31
  %50 = and i1 %37, %12, !dbg !31
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %49, i32 0, i1 %49) #1, !dbg !32
  %52 = bitcast i32 %51 to float, !dbg !32
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %50, i32 0, i1 %50) #1, !dbg !32
  %54 = bitcast i32 %53 to float, !dbg !32
  %55 = fsub float 0.000000e+00, %52, !dbg !33
  %56 = fsub float 0.000000e+00, %54, !dbg !33
  %57 = select i1 %20, float %33, float %55, !dbg !34
  %58 = select i1 %21, float %35, float %56, !dbg !34
  %59 = sext i32 %10 to i64, !dbg !35
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !35
  %61 = getelementptr i1, ptr addrspace(1) %2, i64 %59, !dbg !36
  %62 = insertelement <2 x float> <float poison, float 6.000000e+00>, float %57, i64 0, !dbg !37
  %63 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %58, i64 1, !dbg !37
  %64 = fcmp ole <2 x float> %62, %63, !dbg !37
  %.inv = fcmp ole float %57, 0.000000e+00, !dbg !37
  %65 = select i1 %.inv, float 0.000000e+00, float %57, !dbg !37
  %.inv2 = fcmp ole float %58, 0.000000e+00, !dbg !37
  %66 = insertelement <2 x float> %62, float 0.000000e+00, i64 1, !dbg !41
  %67 = insertelement <2 x float> %63, float 6.000000e+00, i64 0, !dbg !41
  %68 = fcmp oge <2 x float> %66, %67, !dbg !41
  %69 = select i1 %.inv2, float 0.000000e+00, float %58, !dbg !37
  %70 = fcmp olt float %65, 6.000000e+00, !dbg !42
  %71 = fcmp olt float %69, 6.000000e+00, !dbg !42
  %72 = fcmp uno float %65, 0.000000e+00, !dbg !44
  %73 = fcmp uno float %69, 0.000000e+00, !dbg !44
  %74 = or i1 %70, %72, !dbg !45
  %75 = or i1 %71, %73, !dbg !45
  %76 = or <2 x i1> %68, %64, !dbg !46
  %77 = bitcast float %65 to i32, !dbg !47
  %78 = select i1 %74, i32 %77, i32 1086324736, !dbg !48
  %79 = bitcast float %69 to i32, !dbg !47
  %80 = select i1 %75, i32 %79, i32 1086324736, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %78, i32 %80, ptr addrspace(1) %60, i1 %12) #1, !dbg !47
  %81 = zext <2 x i1> %76 to <2 x i8>, !dbg !49
  %82 = bitcast <2 x i8> %81 to i16, !dbg !49
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %82, ptr addrspace(1) %61, i1 %12) #1, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cut5ulm6yiwrgeesz7okfwli5nbpwf3jw4i7yh552ue7aovigvyf.py", directory: "inductor_cache/ut")
!4 = !{ptr @triton_poi_fused_cat_hardtanh_hardtanh_backward_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_hardtanh_hardtanh_backward_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_hardtanh_hardtanh_backward_1", linkageName: "triton_poi_fused_cat_hardtanh_hardtanh_backward_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 49, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 61, scope: !7)
!25 = !DILocation(line: 33, column: 54, scope: !7)
!26 = !DILocation(line: 34, column: 19, scope: !7)
!27 = !DILocation(line: 37, column: 39, scope: !7)
!28 = !DILocation(line: 37, column: 35, scope: !7)
!29 = !DILocation(line: 37, column: 52, scope: !7)
!30 = !DILocation(line: 37, column: 30, scope: !7)
!31 = !DILocation(line: 37, column: 68, scope: !7)
!32 = !DILocation(line: 37, column: 61, scope: !7)
!33 = !DILocation(line: 38, column: 13, scope: !7)
!34 = !DILocation(line: 41, column: 33, scope: !7)
!35 = !DILocation(line: 49, column: 25, scope: !7)
!36 = !DILocation(line: 50, column: 25, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 43, column: 42, scope: !7)
!41 = !DILocation(line: 47, column: 21, scope: !7)
!42 = !DILocation(line: 110, column: 15, scope: !38, inlinedAt: !43)
!43 = !DILocation(line: 45, column: 42, scope: !7)
!44 = !DILocation(line: 112, column: 21, scope: !38, inlinedAt: !43)
!45 = !DILocation(line: 112, column: 16, scope: !38, inlinedAt: !43)
!46 = !DILocation(line: 48, column: 20, scope: !7)
!47 = !DILocation(line: 49, column: 37, scope: !7)
!48 = !DILocation(line: 113, column: 29, scope: !38, inlinedAt: !43)
!49 = !DILocation(line: 50, column: 37, scope: !7)
!50 = !DILocation(line: 50, column: 4, scope: !7)
