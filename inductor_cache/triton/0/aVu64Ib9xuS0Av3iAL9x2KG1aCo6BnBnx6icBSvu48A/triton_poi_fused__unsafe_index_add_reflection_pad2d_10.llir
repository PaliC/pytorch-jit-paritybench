; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_reflection_pad2d_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 25600, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen, 10, !dbg !15
  %15 = srem i32 %14, 10, !dbg !16
  %16 = mul i32 %14, 10, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = srem i32 %12, 10, !dbg !17
  %18 = sdiv i32 %11, 100, !dbg !18
  %19 = add nsw i32 %15, -1, !dbg !19
  %20 = tail call i32 @llvm.abs.i32(i32 %19, i1 true), !dbg !20
  %21 = add nsw i32 %20, -7, !dbg !21
  %22 = tail call i32 @llvm.abs.i32(i32 %21, i1 true), !dbg !22
  %23 = sub nuw nsw i32 7, %22, !dbg !23
  %24 = zext nneg i32 %23 to i64, !dbg !24
  %25 = getelementptr i64, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %25, i1 %13) #1, !dbg !25
  %27 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %25, i1 %13) #1, !dbg !25
  %28 = add nsw i32 %.decomposed, -1, !dbg !26
  %29 = add nsw i32 %17, -1, !dbg !26
  %30 = tail call i32 @llvm.abs.i32(i32 %28, i1 true), !dbg !27
  %31 = tail call i32 @llvm.abs.i32(i32 %29, i1 true), !dbg !27
  %32 = add nsw i32 %30, -7, !dbg !28
  %33 = add nsw i32 %31, -7, !dbg !28
  %34 = tail call i32 @llvm.abs.i32(i32 %32, i1 true), !dbg !29
  %35 = tail call i32 @llvm.abs.i32(i32 %33, i1 true), !dbg !29
  %36 = sub nuw nsw i32 7, %34, !dbg !30
  %37 = sub nuw nsw i32 7, %35, !dbg !30
  %38 = zext nneg i32 %36 to i64, !dbg !31
  %39 = getelementptr i64, ptr addrspace(1) %0, i64 %38, !dbg !31
  %40 = zext nneg i32 %37 to i64, !dbg !31
  %41 = getelementptr i64, ptr addrspace(1) %0, i64 %40, !dbg !31
  %42 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %39, i1 %13) #1, !dbg !32
  %43 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %41, i1 %13) #1, !dbg !32
  %44 = lshr i64 %27, 61, !dbg !33
  %45 = and i64 %44, 4, !dbg !33
  %46 = add i64 %45, %27, !dbg !33
  %47 = insertelement <2 x i64> poison, i64 %42, i64 0, !dbg !34
  %48 = insertelement <2 x i64> %47, i64 %26, i64 1, !dbg !34
  %49 = lshr <2 x i64> %48, splat (i64 61), !dbg !34
  %50 = and <2 x i64> %49, splat (i64 4), !dbg !34
  %51 = add <2 x i64> %50, %48, !dbg !34
  %52 = lshr i64 %43, 61, !dbg !34
  %53 = and i64 %52, 4, !dbg !34
  %54 = extractelement <2 x i64> %51, i64 1, !dbg !35
  %55 = shl i64 %54, 2, !dbg !35
  %56 = shl i64 %46, 2, !dbg !35
  %57 = extractelement <2 x i64> %51, i64 0, !dbg !36
  %58 = add i64 %57, %55, !dbg !36
  %59 = shl nsw i32 %18, 4, !dbg !37
  %60 = sext i32 %59 to i64, !dbg !38
  %61 = add i64 %58, %60, !dbg !38
  %62 = add i64 %43, %60, !dbg !34
  %63 = add i64 %62, %53, !dbg !36
  %64 = add i64 %63, %56, !dbg !38
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !39
  %66 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !39
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %13) #1, !dbg !40
  %68 = bitcast i32 %67 to float, !dbg !40
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 %13) #1, !dbg !40
  %70 = bitcast i32 %69 to float, !dbg !40
  %71 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !41
  %72 = getelementptr float, ptr addrspace(1) %2, i64 %64, !dbg !41
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 %13) #1, !dbg !42
  %74 = bitcast i32 %73 to float, !dbg !42
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %72, i1 %13) #1, !dbg !42
  %76 = bitcast i32 %75 to float, !dbg !42
  %77 = fadd float %68, %74, !dbg !43
  %78 = fadd float %70, %76, !dbg !43
  %79 = sext i32 %11 to i64, !dbg !44
  %80 = getelementptr float, ptr addrspace(1) %3, i64 %79, !dbg !44
  %81 = bitcast float %77 to i32, !dbg !45
  %82 = bitcast float %78 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %81, i32 %82, ptr addrspace(1) %80, i1 %13) #1, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coqrivlepbwdwxhc63zmv2rrp4pnodbzt43jl6m7ea5ref5tupdf.py", directory: "inductor_cache/oq")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_reflection_pad2d_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_reflection_pad2d_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_reflection_pad2d_10", linkageName: "triton_poi_fused__unsafe_index_add_reflection_pad2d_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 78, scope: !7)
!20 = !DILocation(line: 28, column: 71, scope: !7)
!21 = !DILocation(line: 28, column: 59, scope: !7)
!22 = !DILocation(line: 28, column: 52, scope: !7)
!23 = !DILocation(line: 28, column: 35, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 86, scope: !7)
!26 = !DILocation(line: 29, column: 78, scope: !7)
!27 = !DILocation(line: 29, column: 71, scope: !7)
!28 = !DILocation(line: 29, column: 59, scope: !7)
!29 = !DILocation(line: 29, column: 52, scope: !7)
!30 = !DILocation(line: 29, column: 35, scope: !7)
!31 = !DILocation(line: 29, column: 30, scope: !7)
!32 = !DILocation(line: 29, column: 86, scope: !7)
!33 = !DILocation(line: 33, column: 32, scope: !7)
!34 = !DILocation(line: 36, column: 32, scope: !7)
!35 = !DILocation(line: 37, column: 39, scope: !7)
!36 = !DILocation(line: 37, column: 37, scope: !7)
!37 = !DILocation(line: 37, column: 49, scope: !7)
!38 = !DILocation(line: 37, column: 46, scope: !7)
!39 = !DILocation(line: 37, column: 30, scope: !7)
!40 = !DILocation(line: 37, column: 54, scope: !7)
!41 = !DILocation(line: 38, column: 31, scope: !7)
!42 = !DILocation(line: 38, column: 55, scope: !7)
!43 = !DILocation(line: 39, column: 19, scope: !7)
!44 = !DILocation(line: 40, column: 25, scope: !7)
!45 = !DILocation(line: 40, column: 37, scope: !7)
!46 = !DILocation(line: 40, column: 4, scope: !7)
