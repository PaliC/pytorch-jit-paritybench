#loc = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0)
#loc1 = loc(unknown)
#loc23 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":43:26)
#loc30 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":51:26)
#loc47 = loc(callsite(#loc1 at #loc23))
#loc50 = loc(callsite(#loc1 at #loc30))
module {
  tt.func public @triton_per_fused_add_convolution_native_group_norm_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg8: i32 loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":19:0)) attributes {noinline = false} {
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.280000e+02> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x128xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_2 : tensor<1x128xi32> loc(#loc6)
    %6 = arith.muli %0, %c128_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x128xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x128xi32> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x128xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_1 : tensor<1x128x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.addptr %13, %8 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc11)
    %15 = tt.load %14, %11, %cst_1 : tensor<1x128x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.addptr %16, %5 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc13)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.addptr %19, %5 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc15)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.addptr %22, %5 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc17)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<1x128x!tt.ptr<f32>> loc(#loc18)
    %25 = arith.addf %15, %18 : tensor<1x128xf32> loc(#loc19)
    %26 = arith.addf %12, %25 : tensor<1x128xf32> loc(#loc20)
    %27 = arith.select %11, %26, %cst_1 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc21)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc23)), %arg11: f32 loc(callsite(#loc1 at #loc23))):
      %50 = arith.addf %arg10, %arg11 : f32 loc(#loc51)
      tt.reduce.return %50 : f32 loc(#loc46)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc46)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc25)
    %30 = arith.divf %29, %cst_0 : tensor<1x1xf32> loc(#loc26)
    %31 = tt.broadcast %30 : tensor<1x1xf32> -> tensor<1x128xf32> loc(#loc27)
    %32 = arith.subf %26, %31 : tensor<1x128xf32> loc(#loc27)
    %33 = arith.mulf %32, %32 : tensor<1x128xf32> loc(#loc28)
    %34 = arith.select %11, %33, %cst_1 : tensor<1x128xi1>, tensor<1x128xf32> loc(#loc29)
    %35 = "tt.reduce"(%34) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc30)), %arg11: f32 loc(callsite(#loc1 at #loc30))):
      %50 = arith.addf %arg10, %arg11 : f32 loc(#loc52)
      tt.reduce.return %50 : f32 loc(#loc49)
    }) : (tensor<1x128xf32>) -> tensor<1xf32> loc(#loc49)
    %36 = tt.expand_dims %35 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc31)
    %37 = arith.divf %36, %cst_0 : tensor<1x1xf32> loc(#loc32)
    %38 = arith.addf %37, %cst : tensor<1x1xf32> loc(#loc33)
    %39 = tt.extern_elementwise %38 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc34)
    %40 = tt.broadcast %39 : tensor<1x1xf32> -> tensor<1x128xf32> loc(#loc35)
    %41 = arith.mulf %32, %40 : tensor<1x128xf32> loc(#loc35)
    %42 = arith.mulf %41, %21 : tensor<1x128xf32> loc(#loc36)
    %43 = arith.addf %42, %24 : tensor<1x128xf32> loc(#loc37)
    tt.store %14, %26, %11 : tensor<1x128x!tt.ptr<f32>> loc(#loc38)
    %44 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>> loc(#loc39)
    %45 = tt.addptr %44, %8 : tensor<1x128x!tt.ptr<f32>>, tensor<1x128xi32> loc(#loc39)
    tt.store %45, %43, %11 : tensor<1x128x!tt.ptr<f32>> loc(#loc40)
    %46 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc41)
    %47 = tt.splat %46 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    tt.store %47, %39, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc42)
    %48 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc43)
    %49 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    tt.store %49, %30, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":23:28)
#loc3 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":25:21)
#loc4 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":26:26)
#loc5 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":26:34)
#loc6 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":31:19)
#loc7 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":32:39)
#loc8 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":32:35)
#loc9 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":32:30)
#loc10 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":32:44)
#loc11 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":33:34)
#loc12 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":33:48)
#loc13 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":34:30)
#loc14 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":34:35)
#loc15 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":35:31)
#loc16 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":35:36)
#loc17 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":36:31)
#loc18 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":36:36)
#loc19 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":37:18)
#loc20 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":38:18)
#loc21 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":42:34)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc25 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":43:29)
#loc26 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":46:20)
#loc27 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":47:19)
#loc28 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":48:20)
#loc29 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":50:35)
#loc31 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":51:29)
#loc32 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":54:20)
#loc33 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":56:20)
#loc34 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":57:28)
#loc35 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":58:20)
#loc36 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":59:20)
#loc37 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":60:20)
#loc38 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":61:48)
#loc39 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":62:25)
#loc40 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":62:46)
#loc41 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":63:25)
#loc42 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":63:37)
#loc43 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":64:25)
#loc44 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":64:37)
#loc45 = loc("inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py":64:4)
#loc46 = loc(callsite(#loc22 at #loc23))
#loc48 = loc(callsite(#loc24 at #loc22))
#loc49 = loc(callsite(#loc22 at #loc30))
#loc51 = loc(callsite(#loc48 at #loc23))
#loc52 = loc(callsite(#loc48 at #loc30))
