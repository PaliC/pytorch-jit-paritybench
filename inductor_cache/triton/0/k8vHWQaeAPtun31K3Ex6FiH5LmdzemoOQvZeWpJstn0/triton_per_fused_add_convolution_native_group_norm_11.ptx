//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_native_group_norm_11 // -- Begin function triton_per_fused_add_convolution_native_group_norm_11
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_convolution_native_group_norm_11
.visible .entry triton_per_fused_add_convolution_native_group_norm_11(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_11_param_7,
	.param .u32 triton_per_fused_add_convolution_native_group_norm_11_param_8,
	.param .u32 triton_per_fused_add_convolution_native_group_norm_11_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<101>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_per_fused_add_convolution_native_group_norm_11_param_0];
	ld.param.u64 	%rd14, [triton_per_fused_add_convolution_native_group_norm_11_param_1];
$L__tmp0:
	.loc	1 23 28                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd15, [triton_per_fused_add_convolution_native_group_norm_11_param_2];
	ld.param.u64 	%rd16, [triton_per_fused_add_convolution_native_group_norm_11_param_3];
	.loc	1 26 34                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:26:34
	mov.u32 	%r56, %tid.x;
	and.b32  	%r57, %r56, 31;
	ld.param.u64 	%rd17, [triton_per_fused_add_convolution_native_group_norm_11_param_4];
	ld.param.u64 	%rd18, [triton_per_fused_add_convolution_native_group_norm_11_param_5];
	shl.b32 	%r58, %r56, 1;
	ld.param.u64 	%rd19, [triton_per_fused_add_convolution_native_group_norm_11_param_6];
	and.b32  	%r59, %r58, 126;
	ld.param.u64 	%rd20, [triton_per_fused_add_convolution_native_group_norm_11_param_7];
	and.b32  	%r60, %r56, 63;
	or.b32  	%r61, %r60, 64;
	.loc	1 31 19                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:31:19
	bfe.u32 	%r62, %r56, 4, 2;
	shr.u32 	%r63, %r61, 4;
	.loc	1 32 39                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:32:39
	shl.b32 	%r64, %r1, 7;
	.loc	1 32 35                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:32:35
	or.b32  	%r65, %r64, %r59;
	.loc	1 32 30                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:32:30
	mul.wide.s32 	%rd21, %r65, 4;
	add.s64 	%rd1, %rd14, %rd21;
	mov.b32 	%r4, 0;
	.loc	1 32 44                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:32:44
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r7, %r9 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r7, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	shl.b32 	%r66, %r59, 3;
	mov.u32 	%r67, global_smem;
	add.s32 	%r6, %r67, %r66;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 8;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r68, %r60, 3;
	add.s32 	%r69, %r67, %r68;
	ld.shared.f32 	%f1, [%r69];
	shl.b32 	%r70, %r61, 3;
	add.s32 	%r71, %r67, %r70;
	ld.shared.f32 	%f2, [%r71];
	.loc	1 33 34                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:33:34
	add.s64 	%rd2, %rd13, %rd21;
	.loc	1 33 48                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:33:48
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v2.b32 { %r15, %r17 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r15, %r4;
	@!%p1 mov.u32 %r17, %r4;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r15;
	// end inline asm
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f3, [%r69];
	ld.shared.f32 	%f4, [%r71];
	.loc	1 34 30                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:34:30
	mul.wide.u32 	%rd22, %r62, 4;
	add.s64 	%rd3, %rd15, %rd22;
	mul.wide.u32 	%rd23, %r63, 4;
	add.s64 	%rd4, %rd15, %rd23;
	.loc	1 34 35                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:34:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r19 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:35:31
	add.s64 	%rd5, %rd16, %rd22;
	add.s64 	%rd6, %rd16, %rd23;
	.loc	1 35 36                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:35:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r20 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r21 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:36:31
	add.s64 	%rd7, %rd17, %rd22;
	add.s64 	%rd8, %rd17, %rd23;
	.loc	1 36 36                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:36:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r22 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r23 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 34 35                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:34:35
	mov.b32 	%f5, %r19;
	mov.b32 	%f6, %r18;
	.loc	1 37 18                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:37:18
	add.f32 	%f7, %f3, %f6;
	add.f32 	%f8, %f4, %f5;
	.loc	1 38 18                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:38:18
	add.f32 	%f9, %f2, %f8;
	mov.b32 	%r45, %f9;
	add.f32 	%f10, %f1, %f7;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f10, %f9;
	selp.f32 	%f12, %f11, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f12;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f13, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f14;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f15, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f16;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f17, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f18;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f19, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f20;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f21, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p17, %r57, 0;
	shr.u32 	%r82, %r56, 3;
	and.b32  	%r83, %r82, 4;
	add.s32 	%r24, %r67, %r83;
	mov.b32 	%r25, %f22;
	// begin inline asm
	@%p17 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p18, %r56, 2;
	shl.b32 	%r84, %r56, 2;
	add.s32 	%r27, %r67, %r84;
	// begin inline asm
	@%p18 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r26;
	shfl.sync.bfly.b32	%r85, %r26, 1, 31, -1;
	mov.b32 	%f24, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r86, %r56, 1;
	setp.eq.b32 	%p31, %r86, 1;
	not.pred 	%p32, %p31;
	and.pred  	%p19, %p18, %p32;
	mov.b32 	%r29, %f25;
	// begin inline asm
	@%p19 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 46 20                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:46:20
	ld.shared.u32 	%r31, [global_smem];
	mov.b32 	%r32, 1124073472;
	// begin inline asm
	div.full.f32 %r55, %r31, %r32;
	// end inline asm
	mov.b32 	%f26, %r55;
	.loc	1 47 19                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:47:19
	sub.f32 	%f27, %f10, %f26;
	sub.f32 	%f28, %f9, %f26;
	.loc	1 48 20                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:48:20
	mul.f32 	%f29, %f28, %f28;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f30, %f27, %f27, %f29;
	selp.f32 	%f31, %f30, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f31;
	shfl.sync.bfly.b32	%r88, %r87, 16, 31, -1;
	mov.b32 	%f32, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f33;
	shfl.sync.bfly.b32	%r90, %r89, 8, 31, -1;
	mov.b32 	%f34, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f35;
	shfl.sync.bfly.b32	%r92, %r91, 4, 31, -1;
	mov.b32 	%f36, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f37;
	shfl.sync.bfly.b32	%r94, %r93, 2, 31, -1;
	mov.b32 	%f38, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f39;
	shfl.sync.bfly.b32	%r96, %r95, 1, 31, -1;
	mov.b32 	%f40, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f41;
	// begin inline asm
	@%p17 st.shared.b32 [ %r24 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p18 ld.shared.b32 %r35, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r35;
	shfl.sync.bfly.b32	%r97, %r35, 1, 31, -1;
	mov.b32 	%f43, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f44;
	// begin inline asm
	@%p19 st.shared.b32 [ %r27 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 54 20                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:54:20
	ld.shared.u32 	%r40, [global_smem];
	// begin inline asm
	div.full.f32 %r39, %r40, %r32;
	// end inline asm
	mov.b32 	%f45, %r39;
	.loc	1 56 20                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:56:20
	add.f32 	%f46, %f45, 0f3727C5AC;
	.loc	1 57 28                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:57:28
	rsqrt.approx.ftz.f32 	%f47, %f46;
	.loc	1 36 36                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:36:36
	mov.b32 	%f48, %r23;
	mov.b32 	%f49, %r22;
	.loc	1 35 36                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:35:36
	mov.b32 	%f50, %r21;
	mov.b32 	%f51, %r20;
	.loc	1 58 20                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:58:20
	mul.f32 	%f52, %f27, %f47;
	mul.f32 	%f53, %f28, %f47;
	.loc	1 60 20                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:60:20
	fma.rn.f32 	%f54, %f52, %f51, %f49;
	fma.rn.f32 	%f55, %f53, %f50, %f48;
	.loc	1 61 48                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:61:48
	bar.sync 	0;
	shl.b32 	%r98, %r60, 2;
	sub.s32 	%r48, %r69, %r98;
	.loc	1 38 18                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:38:18
	mov.b32 	%r43, %f10;
	.loc	1 61 48                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:61:48
	// begin inline asm
	@%p4 st.shared.b32 [ %r48 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r48, 256;
	// begin inline asm
	@%p4 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r99, %r59, 2;
	sub.s32 	%r100, %r6, %r99;
	ld.shared.v2.u32 	{%r46, %r47}, [%r100];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r46, %r47 };
	// end inline asm
	.loc	1 62 25                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:62:25
	add.s64 	%rd10, %rd19, %rd21;
	.loc	1 62 46                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:62:46
	bar.sync 	0;
	mov.b32 	%r49, %f54;
	// begin inline asm
	@%p4 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	mov.b32 	%r51, %f55;
	// begin inline asm
	@%p4 st.shared.b32 [ %r44 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.u32 	{%r52, %r53}, [%r100];
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r52, %r53 };
	// end inline asm
	.loc	1 63 25                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:63:25
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd11, %rd20, %rd24;
	.loc	1 63 37                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:63:37
	setp.eq.s32 	%p33, %r60, 0;
	mov.b32 	%r54, %f47;
	and.pred  	%p29, %p33, %p1;
	// begin inline asm
	@%p29 st.global.b32 [ %rd11 + 0 ], { %r54 };
	// end inline asm
	.loc	1 64 25                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:64:25
	add.s64 	%rd12, %rd18, %rd24;
	.loc	1 64 37                         // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:64:37
	// begin inline asm
	@%p29 st.global.b32 [ %rd12 + 0 ], { %r55 };
	// end inline asm
	.loc	1 64 4                          // cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py:64:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y3/cy3k4gf4duj65dfobuhkihbhxt4wygnu5fl572jhidcle7xb6xp5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 51
.b8 107
.b8 52
.b8 103
.b8 102
.b8 52
.b8 100
.b8 117
.b8 106
.b8 54
.b8 53
.b8 100
.b8 102
.b8 111
.b8 98
.b8 117
.b8 104
.b8 107
.b8 105
.b8 104
.b8 98
.b8 104
.b8 120
.b8 116
.b8 52
.b8 119
.b8 121
.b8 103
.b8 110
.b8 117
.b8 53
.b8 102
.b8 108
.b8 53
.b8 55
.b8 50
.b8 106
.b8 104
.b8 105
.b8 100
.b8 99
.b8 108
.b8 101
.b8 55
.b8 120
.b8 98
.b8 54
.b8 120
.b8 112
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
