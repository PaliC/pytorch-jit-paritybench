//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_18 // -- Begin function triton_per_fused__native_batch_norm_legit_18
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_18
.visible .entry triton_per_fused__native_batch_norm_legit_18(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_3,
	.param .u32 triton_per_fused__native_batch_norm_legit_18_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_18_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<44>;
	.reg .b32 	%r<180>;
	.reg .f32 	%f<92>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd6, [triton_per_fused__native_batch_norm_legit_18_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_18_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:23:33
	shl.b32 	%r102, %r1, 7;
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_18_param_2];
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_18_param_3];
	.loc	1 24 44                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:24:44
	mov.u32 	%r103, %tid.x;
	shl.b32 	%r104, %r103, 2;
	and.b32  	%r105, %r104, 124;
	and.b32  	%r106, %r103, 127;
	.loc	1 24 23                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:24:23
	or.b32  	%r107, %r102, %r105;
	.loc	1 25 21                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:25:21
	setp.lt.s32 	%p1, %r107, 1024;
	.loc	1 31 34                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:34
	shl.b32 	%r108, %r103, 3;
	and.b32  	%r109, %r108, 1792;
	.loc	1 31 51                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:51
	shr.s32 	%r111, %r107, 31;
	shr.u32 	%r112, %r111, 24;
	add.s32 	%r113, %r107, %r112;
	.loc	1 31 45                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:45
	shl.b32 	%r114, %r113, 4;
	and.b32  	%r115, %r114, -4096;
	.loc	1 31 39                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:39
	or.b32  	%r116, %r115, %r109;
	.loc	1 31 65                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:65
	and.b32  	%r117, %r113, -256;
	sub.s32 	%r118, %r107, %r117;
	.loc	1 31 60                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:60
	add.s32 	%r119, %r116, %r118;
	add.s32 	%r120, %r119, 2048;
	.loc	1 31 30                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:30
	mul.wide.s32 	%rd10, %r119, 4;
	add.s64 	%rd1, %rd6, %rd10;
	mul.wide.s32 	%rd11, %r120, 4;
	add.s64 	%rd2, %rd6, %rd11;
	mov.b32 	%r6, 0;
	.loc	1 31 73                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:73
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r121, %r103, 3;
	and.b32  	%r122, %r121, 28;
	shl.b32 	%r123, %r105, 5;
	or.b32  	%r124, %r123, %r122;
	mov.u32 	%r125, global_smem;
	add.s32 	%r18, %r125, %r124;
	mov.b32 	%r126, %f9;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r19, %r126, 0, %p1;
	mov.pred 	%p11, -1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 32;
	mov.b32 	%r127, %f10;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r21, %r127, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	add.s32 	%r22, %r18, 64;
	mov.b32 	%r128, %f11;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r23, %r128, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	add.s32 	%r24, %r18, 96;
	mov.b32 	%r129, %f12;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r25, %r129, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r103, 1024;
	add.s32 	%r27, %r125, %r104;
	// begin inline asm
	@%p15 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r26;
	shfl.sync.bfly.b32	%r130, %r26, 4, 31, -1;
	mov.b32 	%f14, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f15;
	shfl.sync.bfly.b32	%r132, %r131, 2, 31, -1;
	mov.b32 	%f16, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f17;
	shfl.sync.bfly.b32	%r134, %r133, 1, 31, -1;
	mov.b32 	%f18, %r134;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r135, %r103, 7;
	setp.eq.s32 	%p41, %r135, 0;
	and.pred  	%p16, %p15, %p41;
	mov.b32 	%r29, %f19;
	// begin inline asm
	@%p16 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	add.s32 	%r31, %r27, 1024;
	// begin inline asm
	@%p15 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r30;
	shfl.sync.bfly.b32	%r136, %r30, 4, 31, -1;
	mov.b32 	%f21, %r136;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f22;
	shfl.sync.bfly.b32	%r138, %r137, 2, 31, -1;
	mov.b32 	%f23, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f24;
	shfl.sync.bfly.b32	%r140, %r139, 1, 31, -1;
	mov.b32 	%f25, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f26;
	// begin inline asm
	@%p16 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	add.s32 	%r35, %r27, 2048;
	// begin inline asm
	@%p15 ld.shared.b32 %r34, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r34;
	shfl.sync.bfly.b32	%r141, %r34, 4, 31, -1;
	mov.b32 	%f28, %r141;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r142, %f29;
	shfl.sync.bfly.b32	%r143, %r142, 2, 31, -1;
	mov.b32 	%f30, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r144, %f31;
	shfl.sync.bfly.b32	%r145, %r144, 1, 31, -1;
	mov.b32 	%f32, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f33;
	// begin inline asm
	@%p16 st.shared.b32 [ %r35 + 0 ], %r37;
	// end inline asm
	add.s32 	%r39, %r27, 3072;
	// begin inline asm
	@%p15 ld.shared.b32 %r38, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r38;
	shfl.sync.bfly.b32	%r146, %r38, 4, 31, -1;
	mov.b32 	%f35, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f36;
	shfl.sync.bfly.b32	%r148, %r147, 2, 31, -1;
	mov.b32 	%f37, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r149, %f38;
	shfl.sync.bfly.b32	%r150, %r149, 1, 31, -1;
	mov.b32 	%f39, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f40;
	// begin inline asm
	@%p16 st.shared.b32 [ %r39 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r151, %r125, %r123;
$L__tmp2:
	.loc	1 39 19                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:39:19
	ld.shared.u32 	%r43, [%r151];
	ld.shared.u32 	%r44, [%r151+32];
	ld.shared.u32 	%r45, [%r151+64];
	ld.shared.u32 	%r46, [%r151+96];
	bar.sync 	0;
	mad.lo.s32 	%r86, %r105, -28, %r151;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r86 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r152, %r106, 2;
	add.s32 	%r153, %r125, %r152;
	ld.shared.u32 	%r48, [%r153];
	mov.b32 	%r49, 1098907648;
	// begin inline asm
	div.full.f32 %r100, %r48, %r49;
	// end inline asm
	// begin inline asm
	div.full.f32 %r50, %r43, %r49;
	// end inline asm
	mov.b32 	%f41, %r50;
	// begin inline asm
	div.full.f32 %r53, %r44, %r49;
	// end inline asm
	mov.b32 	%f42, %r53;
	// begin inline asm
	div.full.f32 %r56, %r45, %r49;
	// end inline asm
	mov.b32 	%f43, %r56;
	// begin inline asm
	div.full.f32 %r59, %r46, %r49;
	// end inline asm
	mov.b32 	%f44, %r59;
	.loc	1 40 19                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:40:19
	sub.f32 	%f45, %f1, %f41;
	sub.f32 	%f46, %f2, %f42;
	sub.f32 	%f47, %f3, %f43;
	sub.f32 	%f48, %f4, %f44;
	sub.f32 	%f49, %f5, %f41;
	sub.f32 	%f50, %f6, %f42;
	sub.f32 	%f51, %f7, %f43;
	sub.f32 	%f52, %f8, %f44;
	.loc	1 41 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:41:20
	mul.f32 	%f53, %f49, %f49;
	mul.f32 	%f54, %f50, %f50;
	mul.f32 	%f55, %f51, %f51;
	mul.f32 	%f56, %f52, %f52;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f57, %f45, %f45, %f53;
	fma.rn.f32 	%f58, %f46, %f46, %f54;
	fma.rn.f32 	%f59, %f47, %f47, %f55;
	fma.rn.f32 	%f60, %f48, %f48, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r154, %f57;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r63, %r154, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r63;
	// end inline asm
	mov.b32 	%r155, %f58;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r65, %r155, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r65;
	// end inline asm
	mov.b32 	%r156, %f59;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r67, %r156, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r22 + 0 ], %r67;
	// end inline asm
	mov.b32 	%r157, %f60;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r69, %r157, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r24 + 0 ], %r69;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p15 ld.shared.b32 %r70, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f61, %r70;
	shfl.sync.bfly.b32	%r158, %r70, 4, 31, -1;
	mov.b32 	%f62, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f63;
	shfl.sync.bfly.b32	%r160, %r159, 2, 31, -1;
	mov.b32 	%f64, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f65;
	shfl.sync.bfly.b32	%r162, %r161, 1, 31, -1;
	mov.b32 	%f66, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f67;
	// begin inline asm
	@%p16 st.shared.b32 [ %r27 + 0 ], %r73;
	// end inline asm
	// begin inline asm
	@%p15 ld.shared.b32 %r74, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f68, %r74;
	shfl.sync.bfly.b32	%r163, %r74, 4, 31, -1;
	mov.b32 	%f69, %r163;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r164, %f70;
	shfl.sync.bfly.b32	%r165, %r164, 2, 31, -1;
	mov.b32 	%f71, %r165;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r166, %f72;
	shfl.sync.bfly.b32	%r167, %r166, 1, 31, -1;
	mov.b32 	%f73, %r167;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f74;
	// begin inline asm
	@%p16 st.shared.b32 [ %r31 + 0 ], %r77;
	// end inline asm
	// begin inline asm
	@%p15 ld.shared.b32 %r78, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f75, %r78;
	shfl.sync.bfly.b32	%r168, %r78, 4, 31, -1;
	mov.b32 	%f76, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f77;
	shfl.sync.bfly.b32	%r170, %r169, 2, 31, -1;
	mov.b32 	%f78, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r171, %f79;
	shfl.sync.bfly.b32	%r172, %r171, 1, 31, -1;
	mov.b32 	%f80, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f81;
	// begin inline asm
	@%p16 st.shared.b32 [ %r35 + 0 ], %r81;
	// end inline asm
	// begin inline asm
	@%p15 ld.shared.b32 %r82, [ %r39 + 0 ];
	// end inline asm
	mov.b32 	%f82, %r82;
	shfl.sync.bfly.b32	%r173, %r82, 4, 31, -1;
	mov.b32 	%f83, %r173;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r174, %f84;
	shfl.sync.bfly.b32	%r175, %r174, 2, 31, -1;
	mov.b32 	%f85, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r176, %f86;
	shfl.sync.bfly.b32	%r177, %r176, 1, 31, -1;
	mov.b32 	%f87, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f88;
	// begin inline asm
	@%p16 st.shared.b32 [ %r39 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r92, [%r151];
	ld.shared.u32 	%r93, [%r151+32];
	ld.shared.u32 	%r94, [%r151+64];
	ld.shared.u32 	%r95, [%r151+96];
$L__tmp4:
	.loc	1 49 28                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:49:28
	bar.sync 	0;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r86 + 0 ], { %r92, %r93, %r94, %r95 };
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:46:20
	ld.shared.u32 	%r97, [%r153];
	.loc	1 44 29                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:44:29
	bar.sync 	0;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r86 + 0 ], { %r92, %r93, %r94, %r95 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r101, [%r153];
	.loc	1 46 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:46:20
	// begin inline asm
	div.full.f32 %r96, %r97, %r49;
	// end inline asm
	mov.b32 	%f89, %r96;
	.loc	1 48 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:48:20
	add.f32 	%f90, %f89, 0f3727C5AC;
	.loc	1 49 28                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:49:28
	rsqrt.approx.ftz.f32 	%f91, %f90;
	.loc	1 24 23                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:24:23
	or.b32  	%r178, %r102, %r106;
	.loc	1 25 21                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:25:21
	setp.lt.s32 	%p42, %r178, 1024;
	.loc	1 50 25                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:50:25
	mul.wide.s32 	%rd12, %r178, 4;
	add.s64 	%rd3, %rd9, %rd12;
	.loc	1 50 37                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:50:37
	and.b32  	%r179, %r103, 128;
	setp.eq.s32 	%p43, %r179, 0;
	mov.b32 	%r99, %f91;
	and.pred  	%p38, %p43, %p42;
	// begin inline asm
	@%p38 st.global.b32 [ %rd3 + 0 ], { %r99 };
	// end inline asm
	.loc	1 51 25                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:51:25
	add.s64 	%rd4, %rd7, %rd12;
	.loc	1 51 37                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:51:37
	// begin inline asm
	@%p38 st.global.b32 [ %rd4 + 0 ], { %r100 };
	// end inline asm
	.loc	1 52 25                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:52:25
	add.s64 	%rd5, %rd8, %rd12;
	.loc	1 52 37                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:52:37
	// begin inline asm
	@%p38 st.global.b32 [ %rd5 + 0 ], { %r101 };
	// end inline asm
	.loc	1 52 4                          // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:52:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6b/c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 98
.b8 98
.b8 121
.b8 116
.b8 117
.b8 99
.b8 99
.b8 107
.b8 117
.b8 51
.b8 107
.b8 120
.b8 115
.b8 106
.b8 119
.b8 120
.b8 51
.b8 107
.b8 99
.b8 111
.b8 99
.b8 51
.b8 113
.b8 109
.b8 53
.b8 50
.b8 110
.b8 119
.b8 117
.b8 50
.b8 121
.b8 117
.b8 109
.b8 53
.b8 109
.b8 120
.b8 99
.b8 50
.b8 115
.b8 117
.b8 106
.b8 106
.b8 52
.b8 120
.b8 97
.b8 101
.b8 117
.b8 105
.b8 119
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 49
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
