#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0)
#loc1 = loc(unknown)
#loc33 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":52:26)
#loc46 = loc(callsite(#loc1 at #loc33))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_mean_mul_sigmoid_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = arith.remsi %0, %c4_i32 : i32 loc(#loc5)
    %5 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32, #blocked> loc(#loc7)
    %7 = arith.addi %3, %6 : tensor<1x16xi32, #blocked> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked> loc(#loc9)
    %11 = tt.load %9, %10, %cst_3 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %12 = tt.addptr %arg2, %4 : !tt.ptr<f32>, i32 loc(#loc10)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc11)
    %15 = tt.load %13, %14 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %16 = tt.addptr %arg3, %4 : !tt.ptr<f32>, i32 loc(#loc12)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %18 = tt.load %17, %14 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %19 = tt.addptr %arg4, %4 : !tt.ptr<f32>, i32 loc(#loc14)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %21 = tt.load %20, %14 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %22 = tt.addptr %arg5, %4 : !tt.ptr<f32>, i32 loc(#loc16)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %24 = tt.load %23, %14 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %25 = tt.broadcast %15 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc18)
    %26 = arith.subf %11, %25 : tensor<1x16xf32, #blocked> loc(#loc18)
    %27 = arith.addf %18, %cst_2 : tensor<1x1xf32, #blocked> loc(#loc19)
    %28 = tt.extern_elementwise %27 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc20)
    %29 = arith.divf %cst_0, %28 : tensor<1x1xf32, #blocked> loc(#loc21)
    %30 = tt.broadcast %29 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc22)
    %31 = arith.mulf %26, %30 : tensor<1x16xf32, #blocked> loc(#loc22)
    %32 = tt.broadcast %21 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc23)
    %33 = arith.mulf %31, %32 : tensor<1x16xf32, #blocked> loc(#loc23)
    %34 = tt.broadcast %24 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc24)
    %35 = arith.addf %33, %34 : tensor<1x16xf32, #blocked> loc(#loc24)
    %36 = arith.subf %cst_3, %35 : tensor<1x16xf32, #blocked> loc(#loc41)
    %37 = math.exp %36 : tensor<1x16xf32, #blocked> loc(#loc42)
    %38 = arith.addf %37, %cst : tensor<1x16xf32, #blocked> loc(#loc43)
    %39 = arith.divf %cst, %38 : tensor<1x16xf32, #blocked> loc(#loc44)
    %40 = arith.mulf %35, %39 : tensor<1x16xf32, #blocked> loc(#loc30)
    %41 = arith.select %10, %40, %cst_3 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc31)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc33)), %arg9: f32 loc(callsite(#loc1 at #loc33))):
      %47 = arith.addf %arg8, %arg9 : f32 loc(#loc48)
      tt.reduce.return %47 : f32 loc(#loc45)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc45)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc35)
    %44 = arith.divf %43, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc36)
    gpu.barrier loc(#loc37)
    %45 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %46 = tt.splat %45 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc39)
    tt.store %46, %44, %14 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":23:28)
#loc3 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":25:21)
#loc4 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":26:34)
#loc5 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":31:19)
#loc6 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":32:38)
#loc7 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":32:35)
#loc8 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":32:30)
#loc9 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":32:43)
#loc10 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":33:30)
#loc11 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":33:35)
#loc12 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":34:30)
#loc13 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":34:35)
#loc14 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":35:31)
#loc15 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":35:36)
#loc16 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":36:31)
#loc17 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":36:36)
#loc18 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":37:18)
#loc19 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":39:18)
#loc20 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":40:26)
#loc21 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":42:18)
#loc22 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":45:19)
#loc23 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":46:20)
#loc24 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":47:20)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc26 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":48:23)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc30 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":49:20)
#loc31 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":51:35)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc35 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":52:29)
#loc36 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":54:20)
#loc37 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":55:4)
#loc38 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":56:28)
#loc39 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":56:40)
#loc40 = loc("inductor_cache/ou/couwg3uuh4uhnlatnknhithojdi2mx5n6tz53226fyrp4url7qrj.py":56:4)
#loc41 = loc(callsite(#loc25 at #loc26))
#loc42 = loc(callsite(#loc27 at #loc26))
#loc43 = loc(callsite(#loc28 at #loc26))
#loc44 = loc(callsite(#loc29 at #loc26))
#loc45 = loc(callsite(#loc32 at #loc33))
#loc47 = loc(callsite(#loc34 at #loc32))
#loc48 = loc(callsite(#loc47 at #loc33))
