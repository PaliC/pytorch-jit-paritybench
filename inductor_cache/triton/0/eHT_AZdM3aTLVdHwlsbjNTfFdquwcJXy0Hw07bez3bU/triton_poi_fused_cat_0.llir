; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %.fr = freeze i32 %4, !dbg !11
  %5 = shl i32 %.fr, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = icmp slt i32 %9, 192, !dbg !14
  %12 = sdiv i32 %9, 4, !dbg !15
  %13 = ashr exact i32 %9, 1, !dbg !16
  %14 = srem i32 %13, 2, !dbg !17
  %15 = shl nsw i32 %14, 3, !dbg !18
  %16 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !19
  %17 = insertelement <2 x i32> %16, i32 %12, i64 1, !dbg !19
  %18 = srem <2 x i32> %17, <i32 2, i32 12>, !dbg !19
  %19 = extractelement <2 x i32> %18, i64 1, !dbg !20
  %20 = icmp slt i32 %19, 3, !dbg !21
  %21 = shl nsw <2 x i32> %18, <i32 1, i32 4>, !dbg !22
  %22 = srem i32 %9, 48, !dbg !23
  %23 = sub nsw i32 %9, %22, !dbg !23
  %24 = add i32 %15, %23, !dbg !24
  %25 = extractelement <2 x i32> %21, i64 1, !dbg !25
  %26 = add i32 %24, %25, !dbg !25
  %27 = extractelement <2 x i32> %21, i64 0, !dbg !26
  %28 = add i32 %24, %27, !dbg !24
  %29 = add i32 %28, %25, !dbg !25
  %30 = sext i32 %26 to i64, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !27
  %32 = sext i32 %29 to i64, !dbg !27
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !27
  %34 = and i1 %11, %20, !dbg !28
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %34, i32 0, i1 %34) #1, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %34, i32 0, i1 %34) #1, !dbg !29
  %37 = add nsw i32 %19, -3, !dbg !30
  %38 = icmp ult i32 %37, 3, !dbg !30
  %39 = add nsw i32 %25, -48, !dbg !31
  %40 = add i32 %24, 4, !dbg !32
  %41 = add i32 %40, %39, !dbg !33
  %42 = add i32 %40, %27, !dbg !32
  %43 = add i32 %42, %39, !dbg !33
  %44 = sext i32 %41 to i64, !dbg !34
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !34
  %46 = sext i32 %43 to i64, !dbg !34
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !34
  %48 = and i1 %11, %38, !dbg !35
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %48, i32 0, i1 %48) #1, !dbg !36
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48) #1, !dbg !36
  %51 = add nsw i32 %19, -6, !dbg !37
  %52 = icmp ult i32 %51, 3, !dbg !37
  %53 = add nsw i32 %25, -96, !dbg !38
  %54 = or disjoint i32 %24, 1, !dbg !39
  %55 = add i32 %54, %53, !dbg !40
  %56 = add i32 %54, %27, !dbg !39
  %57 = add i32 %56, %53, !dbg !40
  %58 = sext i32 %55 to i64, !dbg !41
  %59 = getelementptr float, ptr addrspace(1) %0, i64 %58, !dbg !41
  %60 = sext i32 %57 to i64, !dbg !41
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !41
  %62 = and i1 %11, %52, !dbg !42
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %62, i32 0, i1 %62) #1, !dbg !43
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %62, i32 0, i1 %62) #1, !dbg !43
  %65 = icmp sgt i32 %19, 8, !dbg !20
  %66 = add nsw i32 %25, -144, !dbg !44
  %67 = add i32 %24, 5, !dbg !26
  %68 = add i32 %67, %66, !dbg !45
  %69 = add i32 %67, %27, !dbg !26
  %70 = add i32 %69, %66, !dbg !45
  %71 = sext i32 %68 to i64, !dbg !46
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !46
  %73 = sext i32 %70 to i64, !dbg !46
  %74 = getelementptr float, ptr addrspace(1) %0, i64 %73, !dbg !46
  %75 = and i1 %11, %65, !dbg !47
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %75, i32 0, i1 %75) #1, !dbg !48
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %75, i32 0, i1 %75) #1, !dbg !48
  %.v = select i1 %52, i32 %63, i32 %76, !dbg !49
  %.v1 = select i1 %52, i32 %64, i32 %77, !dbg !49
  %.v2 = select i1 %38, i32 %49, i32 %.v, !dbg !50
  %.v3 = select i1 %38, i32 %50, i32 %.v1, !dbg !50
  %.v4 = select i1 %20, i32 %35, i32 %.v2, !dbg !51
  %.v5 = select i1 %20, i32 %36, i32 %.v3, !dbg !51
  %78 = sext i32 %9 to i64, !dbg !52
  %79 = getelementptr float, ptr addrspace(1) %1, i64 %78, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v4, i32 %.v5, ptr addrspace(1) %79, i1 %11) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdnwnes55tpuybuqyysg7oijk7437v44vutbbkfx7g43sqpodjuu.py", directory: "inductor_cache/dn")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 26, scope: !7)
!18 = !DILocation(line: 34, column: 39, scope: !7)
!19 = !DILocation(line: 25, column: 19, scope: !7)
!20 = !DILocation(line: 45, column: 20, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 34, column: 32, scope: !7)
!23 = !DILocation(line: 34, column: 57, scope: !7)
!24 = !DILocation(line: 34, column: 44, scope: !7)
!25 = !DILocation(line: 34, column: 54, scope: !7)
!26 = !DILocation(line: 48, column: 49, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 69, scope: !7)
!29 = !DILocation(line: 34, column: 62, scope: !7)
!30 = !DILocation(line: 38, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 53, scope: !7)
!32 = !DILocation(line: 39, column: 49, scope: !7)
!33 = !DILocation(line: 39, column: 66, scope: !7)
!34 = !DILocation(line: 39, column: 31, scope: !7)
!35 = !DILocation(line: 39, column: 81, scope: !7)
!36 = !DILocation(line: 39, column: 74, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 53, scope: !7)
!39 = !DILocation(line: 44, column: 49, scope: !7)
!40 = !DILocation(line: 44, column: 66, scope: !7)
!41 = !DILocation(line: 44, column: 31, scope: !7)
!42 = !DILocation(line: 44, column: 82, scope: !7)
!43 = !DILocation(line: 44, column: 74, scope: !7)
!44 = !DILocation(line: 48, column: 53, scope: !7)
!45 = !DILocation(line: 48, column: 66, scope: !7)
!46 = !DILocation(line: 48, column: 31, scope: !7)
!47 = !DILocation(line: 48, column: 82, scope: !7)
!48 = !DILocation(line: 48, column: 74, scope: !7)
!49 = !DILocation(line: 49, column: 35, scope: !7)
!50 = !DILocation(line: 50, column: 34, scope: !7)
!51 = !DILocation(line: 51, column: 33, scope: !7)
!52 = !DILocation(line: 52, column: 25, scope: !7)
!53 = !DILocation(line: 52, column: 37, scope: !7)
!54 = !DILocation(line: 52, column: 4, scope: !7)
