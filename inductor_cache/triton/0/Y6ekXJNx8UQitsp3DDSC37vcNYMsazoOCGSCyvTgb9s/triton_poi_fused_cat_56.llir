; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_56(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 8, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 1, !dbg !12
  %15 = and i32 %14, 254, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = icmp slt i32 %16, 2048, !dbg !14
  %.frozen = freeze i32 %16, !dbg !15
  %18 = sdiv i32 %.frozen, 4, !dbg !15
  %19 = srem i32 %18, 128, !dbg !16
  %.frozen1 = freeze i32 %16, !dbg !17
  %20 = sdiv i32 %.frozen1, 512, !dbg !17
  %21 = mul i32 %18, 4, !dbg !18
  %.decomposed = sub i32 %.frozen, %21, !dbg !18
  %22 = ashr exact i32 %16, 1, !dbg !19
  %23 = srem i32 %22, 2, !dbg !20
  %24 = icmp slt i32 %19, 64, !dbg !21
  %25 = mul i32 %20, 512, !dbg !22
  %srem.decomposed = sub i32 %.frozen1, %25, !dbg !22
  %26 = shl nsw i32 %20, 8, !dbg !23
  %27 = add nsw i32 %26, %srem.decomposed, !dbg !24
  %28 = sext i32 %27 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = and i1 %17, %24, !dbg !26
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %29, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #1, !dbg !27
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !27
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !27
  %34 = bitcast i32 %32 to float, !dbg !27
  %35 = bitcast i32 %33 to float, !dbg !27
  %36 = shl nsw i32 %20, 6, !dbg !28
  %37 = add nsw i32 %36, %19, !dbg !29
  %38 = sext i32 %37 to i64, !dbg !30
  %39 = getelementptr float, ptr addrspace(1) %3, i64 %38, !dbg !30
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %30, i32 0, i1 %30) #1, !dbg !31
  %41 = bitcast i32 %40 to float, !dbg !31
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %30, i32 0, i1 %30) #1, !dbg !31
  %43 = bitcast i32 %42 to float, !dbg !31
  %44 = fsub float %41, %41, !dbg !32
  %45 = fsub float %43, %43, !dbg !32
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %5, i1 %30, i32 0, i1 %30, i32 0, i1 %30) #1, !dbg !33
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !33
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !33
  %49 = bitcast i32 %47 to float, !dbg !33
  %50 = bitcast i32 %48 to float, !dbg !33
  %51 = fmul float %44, %49, !dbg !34
  %52 = fmul float %45, %50, !dbg !34
  %53 = fadd float %51, %41, !dbg !35
  %54 = fadd float %52, %43, !dbg !35
  %55 = fsub float %53, %34, !dbg !36
  %56 = fsub float %54, %35, !dbg !36
  %57 = sext i32 %23 to i64, !dbg !37
  %58 = getelementptr float, ptr addrspace(1) %6, i64 %57, !dbg !37
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %30, i32 0, i1 %30) #1, !dbg !38
  %60 = bitcast i32 %59 to float, !dbg !38
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %30, i32 0, i1 %30) #1, !dbg !38
  %62 = bitcast i32 %61 to float, !dbg !38
  %63 = fmul float %55, %60, !dbg !39
  %64 = fmul float %56, %62, !dbg !39
  %65 = fadd float %63, %34, !dbg !40
  %66 = fadd float %64, %35, !dbg !40
  %67 = icmp sgt i32 %19, 63, !dbg !41
  %68 = shl nsw i32 %19, 2, !dbg !42
  %69 = add nsw i32 %.decomposed, -256, !dbg !42
  %70 = add nsw i32 %69, %26, !dbg !43
  %71 = add nsw i32 %70, %68, !dbg !44
  %72 = sext i32 %71 to i64, !dbg !45
  %73 = getelementptr float, ptr addrspace(1) %7, i64 %72, !dbg !45
  %74 = and i1 %17, %67, !dbg !46
  %75 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %73, i1 %74, i32 0, i1 %74, i32 0, i1 %74) #1, !dbg !47
  %76 = extractvalue { i32, i32 } %75, 0, !dbg !47
  %77 = extractvalue { i32, i32 } %75, 1, !dbg !47
  %78 = sext i32 %16 to i64, !dbg !48
  %79 = getelementptr float, ptr addrspace(1) %8, i64 %78, !dbg !48
  %80 = bitcast float %65 to i32, !dbg !49
  %81 = select i1 %24, i32 %80, i32 %76, !dbg !50
  %82 = bitcast float %66 to i32, !dbg !49
  %83 = select i1 %24, i32 %82, i32 %77, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %81, i32 %83, ptr addrspace(1) %79, i1 %17) #1, !dbg !49
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz2etme3o6ldjjnqd6qcomb2w5wkul7hsmjlx3yodprriozw2jdc.py", directory: "inductor_cache/z2")
!4 = !{ptr @triton_poi_fused_cat_56, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_56, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_56", linkageName: "triton_poi_fused_cat_56", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 27, column: 26, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 35, scope: !7)
!23 = !DILocation(line: 35, column: 48, scope: !7)
!24 = !DILocation(line: 35, column: 44, scope: !7)
!25 = !DILocation(line: 35, column: 30, scope: !7)
!26 = !DILocation(line: 35, column: 60, scope: !7)
!27 = !DILocation(line: 35, column: 53, scope: !7)
!28 = !DILocation(line: 45, column: 34, scope: !7)
!29 = !DILocation(line: 45, column: 40, scope: !7)
!30 = !DILocation(line: 45, column: 31, scope: !7)
!31 = !DILocation(line: 45, column: 46, scope: !7)
!32 = !DILocation(line: 50, column: 20, scope: !7)
!33 = !DILocation(line: 51, column: 36, scope: !7)
!34 = !DILocation(line: 52, column: 20, scope: !7)
!35 = !DILocation(line: 53, column: 20, scope: !7)
!36 = !DILocation(line: 54, column: 20, scope: !7)
!37 = !DILocation(line: 55, column: 31, scope: !7)
!38 = !DILocation(line: 55, column: 36, scope: !7)
!39 = !DILocation(line: 56, column: 20, scope: !7)
!40 = !DILocation(line: 57, column: 19, scope: !7)
!41 = !DILocation(line: 60, column: 20, scope: !7)
!42 = !DILocation(line: 63, column: 39, scope: !7)
!43 = !DILocation(line: 63, column: 36, scope: !7)
!44 = !DILocation(line: 63, column: 53, scope: !7)
!45 = !DILocation(line: 63, column: 31, scope: !7)
!46 = !DILocation(line: 63, column: 70, scope: !7)
!47 = !DILocation(line: 63, column: 62, scope: !7)
!48 = !DILocation(line: 65, column: 25, scope: !7)
!49 = !DILocation(line: 65, column: 37, scope: !7)
!50 = !DILocation(line: 0, scope: !7)
!51 = !DILocation(line: 65, column: 4, scope: !7)
