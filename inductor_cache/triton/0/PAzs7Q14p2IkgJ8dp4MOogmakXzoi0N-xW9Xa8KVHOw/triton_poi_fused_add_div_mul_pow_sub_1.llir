; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_mul_pow_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 53824, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 13456, !dbg !15
  %17 = mul i32 %16, 13456, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = sext i32 %.decomposed to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %15) #1, !dbg !18
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !19
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %15) #1, !dbg !20
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !20
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !20
  %29 = bitcast i32 %27 to float, !dbg !20
  %30 = bitcast i32 %28 to float, !dbg !20
  %31 = sext i32 %16 to i64, !dbg !21
  %32 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !21
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #1, !dbg !22
  %34 = bitcast i32 %33 to float, !dbg !22
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #1, !dbg !22
  %36 = bitcast i32 %35 to float, !dbg !22
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !23
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %15) #1, !dbg !24
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !24
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !24
  %41 = bitcast i32 %39 to float, !dbg !24
  %42 = bitcast i32 %40 to float, !dbg !24
  %43 = getelementptr float, ptr addrspace(1) %4, i64 %18, !dbg !25
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %43, i1 %15) #1, !dbg !26
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !26
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !26
  %47 = bitcast i32 %45 to float, !dbg !26
  %48 = bitcast i32 %46 to float, !dbg !26
  %49 = getelementptr float, ptr addrspace(1) %5, i64 %18, !dbg !27
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %49, i1 %15) #1, !dbg !28
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !28
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !28
  %53 = bitcast i32 %51 to float, !dbg !28
  %54 = bitcast i32 %52 to float, !dbg !28
  %55 = fmul float %23, 2.000000e+00, !dbg !29
  %56 = fmul float %24, 2.000000e+00, !dbg !29
  %57 = fmul float %55, %29, !dbg !30
  %58 = fmul float %56, %30, !dbg !30
  %59 = fmul float %34, 0x3F847AE140000000, !dbg !31
  %60 = fmul float %36, 0x3F847AE140000000, !dbg !31
  %61 = fmul float %59, %59, !dbg !32
  %62 = fmul float %60, %60, !dbg !32
  %63 = fadd float %57, %61, !dbg !33
  %64 = fadd float %58, %62, !dbg !33
  %65 = fmul float %23, %29, !dbg !34
  %66 = fmul float %24, %30, !dbg !34
  %67 = fsub float %41, %65, !dbg !35
  %68 = fsub float %42, %66, !dbg !35
  %69 = fmul float %67, 0x3FF0555560000000, !dbg !36
  %70 = fmul float %68, 0x3FF0555560000000, !dbg !36
  %71 = fmul float %69, 2.000000e+00, !dbg !37
  %72 = fmul float %70, 2.000000e+00, !dbg !37
  %73 = fmul float %34, 0x3F9EB851E0000000, !dbg !38
  %74 = fmul float %36, 0x3F9EB851E0000000, !dbg !38
  %75 = fmul float %73, %73, !dbg !39
  %76 = fmul float %74, %74, !dbg !39
  %77 = fadd float %75, %71, !dbg !40
  %78 = fadd float %76, %72, !dbg !40
  %79 = fmul float %63, %77, !dbg !41
  %80 = fmul float %64, %78, !dbg !41
  %81 = fmul float %23, %23, !dbg !42
  %82 = fmul float %24, %24, !dbg !42
  %83 = fmul float %29, %29, !dbg !43
  %84 = fmul float %30, %30, !dbg !43
  %85 = fadd float %81, %83, !dbg !44
  %86 = fadd float %82, %84, !dbg !44
  %87 = fadd float %85, %61, !dbg !45
  %88 = fadd float %86, %62, !dbg !45
  %89 = fsub float %47, %81, !dbg !46
  %90 = fsub float %48, %82, !dbg !46
  %91 = fmul float %89, 0x3FF0555560000000, !dbg !47
  %92 = fmul float %90, 0x3FF0555560000000, !dbg !47
  %93 = fsub float %53, %83, !dbg !48
  %94 = fsub float %54, %84, !dbg !48
  %95 = fmul float %93, 0x3FF0555560000000, !dbg !49
  %96 = fmul float %94, 0x3FF0555560000000, !dbg !49
  %97 = fadd float %91, %95, !dbg !50
  %98 = fadd float %92, %96, !dbg !50
  %99 = fadd float %75, %97, !dbg !51
  %100 = fadd float %76, %98, !dbg !51
  %101 = fmul float %87, %99, !dbg !52
  %102 = fmul float %88, %100, !dbg !52
  %103 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %79, float %101) #1, !dbg !53
  %104 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %80, float %102) #1, !dbg !53
  %105 = sext i32 %14 to i64, !dbg !54
  %106 = getelementptr float, ptr addrspace(1) %6, i64 %105, !dbg !54
  %107 = bitcast float %103 to i32, !dbg !55
  %108 = bitcast float %104 to i32, !dbg !55
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %107, i32 %108, ptr addrspace(1) %106, i1 %15) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cctq3housytcybjvg7jn5ltmzw6nadqr4zp3r6gmgqev3saukpth.py", directory: "inductor_cache/ct")
!4 = !{ptr @triton_poi_fused_add_div_mul_pow_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mul_pow_sub_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mul_pow_sub_1", linkageName: "triton_poi_fused_add_div_mul_pow_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 18, scope: !7)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 20, scope: !7)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 46, column: 19, scope: !7)
!39 = !DILocation(line: 47, column: 20, scope: !7)
!40 = !DILocation(line: 48, column: 20, scope: !7)
!41 = !DILocation(line: 49, column: 19, scope: !7)
!42 = !DILocation(line: 50, column: 19, scope: !7)
!43 = !DILocation(line: 51, column: 19, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 20, scope: !7)
!46 = !DILocation(line: 54, column: 20, scope: !7)
!47 = !DILocation(line: 55, column: 20, scope: !7)
!48 = !DILocation(line: 56, column: 20, scope: !7)
!49 = !DILocation(line: 57, column: 20, scope: !7)
!50 = !DILocation(line: 58, column: 20, scope: !7)
!51 = !DILocation(line: 59, column: 20, scope: !7)
!52 = !DILocation(line: 60, column: 20, scope: !7)
!53 = !DILocation(line: 61, column: 20, scope: !7)
!54 = !DILocation(line: 62, column: 25, scope: !7)
!55 = !DILocation(line: 62, column: 37, scope: !7)
!56 = !DILocation(line: 62, column: 4, scope: !7)
