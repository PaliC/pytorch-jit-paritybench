; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 1, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 1, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %16 = icmp slt i32 %15, 4, !dbg !14
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !15
  %18 = shl i32 %17, 4, !dbg !16
  %19 = lshr i32 %13, 1, !dbg !17
  %20 = and i32 %19, 15, !dbg !17
  %21 = or disjoint i32 %18, %20, !dbg !18
  %22 = icmp slt i32 %21, 12, !dbg !19
  %.frozen = freeze i32 %21, !dbg !20
  %23 = sdiv i32 %.frozen, 3, !dbg !20
  %24 = mul i32 %23, 3, !dbg !21
  %.decomposed = sub i32 %.frozen, %24, !dbg !21
  %.frozen2 = freeze i32 %15, !dbg !22
  %25 = sdiv i32 %.frozen2, 2, !dbg !22
  %26 = mul i32 %25, 2, !dbg !23
  %.decomposed3 = sub i32 %.frozen2, %26, !dbg !23
  %27 = sext i32 %23 to i64, !dbg !24
  %28 = getelementptr i64, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %28, i1 %22) #1, !dbg !25
  %30 = sext i32 %.decomposed to i64, !dbg !26
  %31 = getelementptr i64, ptr addrspace(1) %1, i64 %30, !dbg !26
  %32 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 %22) #1, !dbg !27
  %33 = getelementptr i64, ptr addrspace(1) %3, i64 %30, !dbg !28
  %34 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %33, i1 %22) #1, !dbg !29
  %35 = getelementptr float, ptr addrspace(1) %4, i64 %30, !dbg !30
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %22) #1, !dbg !31
  %37 = getelementptr i64, ptr addrspace(1) %5, i64 %27, !dbg !32
  %38 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %37, i1 %22) #1, !dbg !33
  %39 = getelementptr float, ptr addrspace(1) %6, i64 %27, !dbg !34
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %22) #1, !dbg !35
  %41 = bitcast i32 %40 to float, !dbg !35
  %42 = icmp slt i64 %29, 0, !dbg !36
  %43 = lshr i64 %32, 60, !dbg !37
  %44 = and i64 %43, 8, !dbg !37
  %45 = add i64 %44, %32, !dbg !37
  %46 = sext i32 %.decomposed3 to i64, !dbg !38
  %47 = shl i64 %29, 4, !dbg !39
  %48 = add i64 %47, 224, !dbg !39
  %49 = select i1 %42, i64 %48, i64 %47, !dbg !39
  %50 = mul i32 %25, 224, !dbg !40
  %51 = sext i32 %50 to i64, !dbg !41
  %.idx = shl i64 %45, 3, !dbg !42
  %52 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx, !dbg !42
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %46, !dbg !42
  %54 = getelementptr float, ptr addrspace(1) %53, i64 %49, !dbg !42
  %55 = getelementptr float, ptr addrspace(1) %54, i64 %51, !dbg !42
  %56 = and i1 %16, %22, !dbg !43
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %56) #1, !dbg !44
  %58 = lshr i64 %34, 60, !dbg !45
  %59 = and i64 %58, 8, !dbg !45
  %60 = add i64 %59, %34, !dbg !45
  %.idx1 = shl i64 %60, 3, !dbg !46
  %61 = getelementptr i8, ptr addrspace(1) %2, i64 %.idx1, !dbg !46
  %62 = getelementptr float, ptr addrspace(1) %61, i64 %46, !dbg !46
  %63 = getelementptr float, ptr addrspace(1) %62, i64 %49, !dbg !46
  %64 = getelementptr float, ptr addrspace(1) %63, i64 %51, !dbg !46
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %56) #1, !dbg !47
  %66 = icmp slt i64 %38, 0, !dbg !48
  %67 = shl i64 %38, 4, !dbg !49
  %68 = add i64 %67, 224, !dbg !49
  %69 = select i1 %66, i64 %68, i64 %67, !dbg !49
  %70 = getelementptr float, ptr addrspace(1) %53, i64 %69, !dbg !50
  %71 = getelementptr float, ptr addrspace(1) %70, i64 %51, !dbg !50
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 %56) #1, !dbg !51
  %73 = getelementptr float, ptr addrspace(1) %62, i64 %69, !dbg !52
  %74 = getelementptr float, ptr addrspace(1) %73, i64 %51, !dbg !52
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 %56) #1, !dbg !53
  %76 = insertelement <2 x i32> poison, i32 %72, i64 0, !dbg !51
  %77 = insertelement <2 x i32> %76, i32 %57, i64 1, !dbg !51
  %78 = bitcast <2 x i32> %77 to <2 x float>, !dbg !51
  %79 = insertelement <2 x i32> poison, i32 %75, i64 0, !dbg !53
  %80 = insertelement <2 x i32> %79, i32 %65, i64 1, !dbg !53
  %81 = bitcast <2 x i32> %80 to <2 x float>, !dbg !53
  %82 = fsub <2 x float> %81, %78, !dbg !54
  %83 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !55
  %84 = bitcast <2 x i32> %83 to <2 x float>, !dbg !55
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !55
  %86 = fmul <2 x float> %82, %85, !dbg !55
  %87 = fadd <2 x float> %86, %78, !dbg !56
  %88 = extractelement <2 x float> %87, i64 0, !dbg !57
  %89 = extractelement <2 x float> %87, i64 1, !dbg !58
  %90 = fsub float %88, %89, !dbg !57
  %91 = fmul float %90, %41, !dbg !59
  %92 = fadd float %89, %91, !dbg !58
  %93 = shl i32 %21, 1, !dbg !60
  %94 = add i32 %93, %.decomposed3, !dbg !61
  %95 = mul i32 %25, 24, !dbg !62
  %96 = add i32 %94, %95, !dbg !63
  %97 = sext i32 %96 to i64, !dbg !64
  %98 = getelementptr float, ptr addrspace(1) %7, i64 %97, !dbg !64
  %99 = bitcast float %92 to i32, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %99, ptr addrspace(1) %98, i1 %56) #1, !dbg !65
  ret void, !dbg !66
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py", directory: "inductor_cache/by")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8", linkageName: "triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 31, column: 19, scope: !7)
!23 = !DILocation(line: 30, column: 19, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 35, scope: !7)
!26 = !DILocation(line: 35, column: 30, scope: !7)
!27 = !DILocation(line: 35, column: 35, scope: !7)
!28 = !DILocation(line: 36, column: 31, scope: !7)
!29 = !DILocation(line: 36, column: 36, scope: !7)
!30 = !DILocation(line: 37, column: 31, scope: !7)
!31 = !DILocation(line: 37, column: 36, scope: !7)
!32 = !DILocation(line: 38, column: 31, scope: !7)
!33 = !DILocation(line: 38, column: 36, scope: !7)
!34 = !DILocation(line: 39, column: 31, scope: !7)
!35 = !DILocation(line: 39, column: 36, scope: !7)
!36 = !DILocation(line: 42, column: 18, scope: !7)
!37 = !DILocation(line: 47, column: 32, scope: !7)
!38 = !DILocation(line: 48, column: 36, scope: !7)
!39 = !DILocation(line: 48, column: 48, scope: !7)
!40 = !DILocation(line: 48, column: 59, scope: !7)
!41 = !DILocation(line: 48, column: 55, scope: !7)
!42 = !DILocation(line: 48, column: 31, scope: !7)
!43 = !DILocation(line: 48, column: 72, scope: !7)
!44 = !DILocation(line: 48, column: 64, scope: !7)
!45 = !DILocation(line: 51, column: 35, scope: !7)
!46 = !DILocation(line: 52, column: 31, scope: !7)
!47 = !DILocation(line: 52, column: 65, scope: !7)
!48 = !DILocation(line: 57, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 48, scope: !7)
!50 = !DILocation(line: 59, column: 31, scope: !7)
!51 = !DILocation(line: 59, column: 65, scope: !7)
!52 = !DILocation(line: 60, column: 31, scope: !7)
!53 = !DILocation(line: 60, column: 66, scope: !7)
!54 = !DILocation(line: 61, column: 20, scope: !7)
!55 = !DILocation(line: 62, column: 20, scope: !7)
!56 = !DILocation(line: 63, column: 20, scope: !7)
!57 = !DILocation(line: 64, column: 20, scope: !7)
!58 = !DILocation(line: 66, column: 20, scope: !7)
!59 = !DILocation(line: 65, column: 20, scope: !7)
!60 = !DILocation(line: 67, column: 32, scope: !7)
!61 = !DILocation(line: 67, column: 30, scope: !7)
!62 = !DILocation(line: 67, column: 40, scope: !7)
!63 = !DILocation(line: 67, column: 37, scope: !7)
!64 = !DILocation(line: 67, column: 25, scope: !7)
!65 = !DILocation(line: 67, column: 52, scope: !7)
!66 = !DILocation(line: 67, column: 4, scope: !7)
