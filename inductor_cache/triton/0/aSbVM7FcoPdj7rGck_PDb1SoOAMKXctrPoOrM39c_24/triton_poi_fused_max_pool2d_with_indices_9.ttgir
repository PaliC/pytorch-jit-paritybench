#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<1024xi8, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<0xFF800000> : tensor<1024xf32, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_9 = arith.constant dense<4096> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<-1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<0> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<128> : tensor<1024xi64, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<-8256> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<128> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<16384> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<-8192> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<-8128> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<-64> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<8128> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<8192> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_24 = arith.constant dense<8256> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.divsi %6, %cst_9 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = arith.remsi %8, %cst_10 : tensor<1024xi32, #blocked> loc(#loc7)
    %10 = arith.divsi %6, %cst_10 : tensor<1024xi32, #blocked> loc(#loc8)
    %11 = arith.remsi %10, %cst_10 : tensor<1024xi32, #blocked> loc(#loc9)
    %12 = arith.remsi %6, %cst_10 : tensor<1024xi32, #blocked> loc(#loc10)
    %13 = arith.muli %9, %cst_11 : tensor<1024xi32, #blocked> loc(#loc11)
    %14 = arith.addi %13, %cst_12 : tensor<1024xi32, #blocked> loc(#loc12)
    %15 = arith.extsi %14 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc13)
    %16 = arith.cmpi sge, %15, %cst_13 : tensor<1024xi64, #blocked> loc(#loc13)
    %17 = arith.cmpi slt, %15, %cst_14 : tensor<1024xi64, #blocked> loc(#loc14)
    %18 = arith.andi %16, %17 : tensor<1024xi1, #blocked> loc(#loc15)
    %19 = arith.muli %11, %cst_11 : tensor<1024xi32, #blocked> loc(#loc16)
    %20 = arith.addi %19, %cst_12 : tensor<1024xi32, #blocked> loc(#loc17)
    %21 = arith.extsi %20 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc18)
    %22 = arith.cmpi sge, %21, %cst_13 : tensor<1024xi64, #blocked> loc(#loc18)
    %23 = arith.cmpi slt, %21, %cst_14 : tensor<1024xi64, #blocked> loc(#loc19)
    %24 = arith.andi %22, %23 : tensor<1024xi1, #blocked> loc(#loc20)
    %25 = arith.andi %18, %24 : tensor<1024xi1, #blocked> loc(#loc21)
    %26 = arith.addi %12, %cst_15 : tensor<1024xi32, #blocked> loc(#loc22)
    %27 = arith.muli %11, %cst_16 : tensor<1024xi32, #blocked> loc(#loc23)
    %28 = arith.addi %26, %27 : tensor<1024xi32, #blocked> loc(#loc24)
    %29 = arith.muli %8, %cst_17 : tensor<1024xi32, #blocked> loc(#loc25)
    %30 = arith.addi %28, %29 : tensor<1024xi32, #blocked> loc(#loc26)
    %31 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc27)
    %32 = tt.addptr %31, %30 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc27)
    %33 = tt.load %32, %25, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc28)
    %34 = arith.extsi %19 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc29)
    %35 = arith.cmpi sge, %34, %cst_13 : tensor<1024xi64, #blocked> loc(#loc29)
    %36 = arith.cmpi slt, %34, %cst_14 : tensor<1024xi64, #blocked> loc(#loc30)
    %37 = arith.andi %35, %36 : tensor<1024xi1, #blocked> loc(#loc31)
    %38 = arith.andi %18, %37 : tensor<1024xi1, #blocked> loc(#loc32)
    %39 = arith.addi %12, %cst_18 : tensor<1024xi32, #blocked> loc(#loc33)
    %40 = arith.addi %39, %27 : tensor<1024xi32, #blocked> loc(#loc34)
    %41 = arith.addi %40, %29 : tensor<1024xi32, #blocked> loc(#loc35)
    %42 = tt.addptr %31, %41 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc36)
    %43 = tt.load %42, %38, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc37)
    %44 = arith.cmpf ogt, %43, %33 : tensor<1024xf32, #blocked> loc(#loc115)
    %45 = arith.cmpf une, %43, %43 : tensor<1024xf32, #blocked> loc(#loc116)
    %46 = arith.ori %44, %45 : tensor<1024xi1, #blocked> loc(#loc117)
    %47 = arith.select %46, %43, %33 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc118)
    %48 = arith.addi %19, %cst_19 : tensor<1024xi32, #blocked> loc(#loc43)
    %49 = arith.extsi %48 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc44)
    %50 = arith.cmpi sge, %49, %cst_13 : tensor<1024xi64, #blocked> loc(#loc44)
    %51 = arith.cmpi slt, %49, %cst_14 : tensor<1024xi64, #blocked> loc(#loc45)
    %52 = arith.andi %50, %51 : tensor<1024xi1, #blocked> loc(#loc46)
    %53 = arith.andi %18, %52 : tensor<1024xi1, #blocked> loc(#loc47)
    %54 = arith.addi %12, %cst_20 : tensor<1024xi32, #blocked> loc(#loc48)
    %55 = arith.addi %54, %27 : tensor<1024xi32, #blocked> loc(#loc49)
    %56 = arith.addi %55, %29 : tensor<1024xi32, #blocked> loc(#loc50)
    %57 = tt.addptr %31, %56 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc51)
    %58 = tt.load %57, %53, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc52)
    %59 = arith.cmpf ogt, %58, %47 : tensor<1024xf32, #blocked> loc(#loc119)
    %60 = arith.cmpf une, %58, %58 : tensor<1024xf32, #blocked> loc(#loc120)
    %61 = arith.ori %59, %60 : tensor<1024xi1, #blocked> loc(#loc121)
    %62 = arith.select %61, %58, %47 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc122)
    %63 = arith.extsi %13 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc54)
    %64 = arith.cmpi sge, %63, %cst_13 : tensor<1024xi64, #blocked> loc(#loc54)
    %65 = arith.cmpi slt, %63, %cst_14 : tensor<1024xi64, #blocked> loc(#loc55)
    %66 = arith.andi %64, %65 : tensor<1024xi1, #blocked> loc(#loc56)
    %67 = arith.andi %66, %24 : tensor<1024xi1, #blocked> loc(#loc57)
    %68 = arith.addi %12, %cst_21 : tensor<1024xi32, #blocked> loc(#loc58)
    %69 = arith.addi %68, %27 : tensor<1024xi32, #blocked> loc(#loc59)
    %70 = arith.addi %69, %29 : tensor<1024xi32, #blocked> loc(#loc60)
    %71 = tt.addptr %31, %70 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc61)
    %72 = tt.load %71, %67, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc62)
    %73 = arith.cmpf ogt, %72, %62 : tensor<1024xf32, #blocked> loc(#loc123)
    %74 = arith.cmpf une, %72, %72 : tensor<1024xf32, #blocked> loc(#loc124)
    %75 = arith.ori %73, %74 : tensor<1024xi1, #blocked> loc(#loc125)
    %76 = arith.select %75, %72, %62 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc126)
    %77 = arith.andi %66, %37 : tensor<1024xi1, #blocked> loc(#loc64)
    %78 = arith.addi %12, %27 : tensor<1024xi32, #blocked> loc(#loc65)
    %79 = arith.addi %78, %29 : tensor<1024xi32, #blocked> loc(#loc66)
    %80 = tt.addptr %31, %79 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc67)
    %81 = tt.load %80, %77, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc68)
    %82 = arith.cmpf ogt, %81, %76 : tensor<1024xf32, #blocked> loc(#loc127)
    %83 = arith.cmpf une, %81, %81 : tensor<1024xf32, #blocked> loc(#loc128)
    %84 = arith.ori %82, %83 : tensor<1024xi1, #blocked> loc(#loc129)
    %85 = arith.select %84, %81, %76 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc130)
    %86 = arith.andi %66, %52 : tensor<1024xi1, #blocked> loc(#loc70)
    %87 = arith.addi %12, %cst_10 : tensor<1024xi32, #blocked> loc(#loc71)
    %88 = arith.addi %87, %27 : tensor<1024xi32, #blocked> loc(#loc72)
    %89 = arith.addi %88, %29 : tensor<1024xi32, #blocked> loc(#loc73)
    %90 = tt.addptr %31, %89 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc74)
    %91 = tt.load %90, %86, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc75)
    %92 = arith.cmpf ogt, %91, %85 : tensor<1024xf32, #blocked> loc(#loc131)
    %93 = arith.cmpf une, %91, %91 : tensor<1024xf32, #blocked> loc(#loc132)
    %94 = arith.ori %92, %93 : tensor<1024xi1, #blocked> loc(#loc133)
    %95 = arith.select %94, %91, %85 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc134)
    %96 = arith.addi %13, %cst_19 : tensor<1024xi32, #blocked> loc(#loc77)
    %97 = arith.extsi %96 : tensor<1024xi32, #blocked> to tensor<1024xi64, #blocked> loc(#loc78)
    %98 = arith.cmpi sge, %97, %cst_13 : tensor<1024xi64, #blocked> loc(#loc78)
    %99 = arith.cmpi slt, %97, %cst_14 : tensor<1024xi64, #blocked> loc(#loc79)
    %100 = arith.andi %98, %99 : tensor<1024xi1, #blocked> loc(#loc80)
    %101 = arith.andi %100, %24 : tensor<1024xi1, #blocked> loc(#loc81)
    %102 = arith.addi %12, %cst_22 : tensor<1024xi32, #blocked> loc(#loc82)
    %103 = arith.addi %102, %27 : tensor<1024xi32, #blocked> loc(#loc83)
    %104 = arith.addi %103, %29 : tensor<1024xi32, #blocked> loc(#loc84)
    %105 = tt.addptr %31, %104 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc85)
    %106 = tt.load %105, %101, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc86)
    %107 = arith.cmpf ogt, %106, %95 : tensor<1024xf32, #blocked> loc(#loc135)
    %108 = arith.cmpf une, %106, %106 : tensor<1024xf32, #blocked> loc(#loc136)
    %109 = arith.ori %107, %108 : tensor<1024xi1, #blocked> loc(#loc137)
    %110 = arith.select %109, %106, %95 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc138)
    %111 = arith.andi %100, %37 : tensor<1024xi1, #blocked> loc(#loc88)
    %112 = arith.addi %12, %cst_23 : tensor<1024xi32, #blocked> loc(#loc89)
    %113 = arith.addi %112, %27 : tensor<1024xi32, #blocked> loc(#loc90)
    %114 = arith.addi %113, %29 : tensor<1024xi32, #blocked> loc(#loc91)
    %115 = tt.addptr %31, %114 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc92)
    %116 = tt.load %115, %111, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc93)
    %117 = arith.cmpf ogt, %116, %110 : tensor<1024xf32, #blocked> loc(#loc139)
    %118 = arith.cmpf une, %116, %116 : tensor<1024xf32, #blocked> loc(#loc140)
    %119 = arith.ori %117, %118 : tensor<1024xi1, #blocked> loc(#loc141)
    %120 = arith.select %119, %116, %110 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc142)
    %121 = arith.andi %100, %52 : tensor<1024xi1, #blocked> loc(#loc95)
    %122 = arith.addi %12, %cst_24 : tensor<1024xi32, #blocked> loc(#loc96)
    %123 = arith.addi %122, %27 : tensor<1024xi32, #blocked> loc(#loc97)
    %124 = arith.addi %123, %29 : tensor<1024xi32, #blocked> loc(#loc98)
    %125 = tt.addptr %31, %124 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc99)
    %126 = tt.load %125, %121, %cst_8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc100)
    %127 = arith.cmpf ogt, %126, %120 : tensor<1024xf32, #blocked> loc(#loc143)
    %128 = arith.cmpf une, %126, %126 : tensor<1024xf32, #blocked> loc(#loc144)
    %129 = arith.ori %127, %128 : tensor<1024xi1, #blocked> loc(#loc145)
    %130 = arith.select %129, %126, %120 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc146)
    %131 = arith.select %44, %cst, %cst_0 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc102)
    %132 = arith.select %59, %cst_1, %131 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc103)
    %133 = arith.select %73, %cst_2, %132 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc104)
    %134 = arith.select %82, %cst_3, %133 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc105)
    %135 = arith.select %92, %cst_4, %134 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc106)
    %136 = arith.select %107, %cst_5, %135 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc107)
    %137 = arith.select %117, %cst_6, %136 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc108)
    %138 = arith.select %127, %cst_7, %137 : tensor<1024xi1, #blocked>, tensor<1024xi8, #blocked> loc(#loc109)
    %139 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc110)
    %140 = tt.addptr %139, %7 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc110)
    %141 = triton_gpu.convert_layout %130 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc111)
    tt.store %140, %141 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc111)
    %142 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc112)
    %143 = tt.addptr %142, %6 : tensor<1024x!tt.ptr<i8>, #blocked>, tensor<1024xi32, #blocked> loc(#loc112)
    tt.store %143, %138 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc113)
    tt.return loc(#loc114)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":21:28)
#loc3 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":21:33)
#loc4 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":22:36)
#loc5 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":22:23)
#loc6 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":24:21)
#loc7 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":24:29)
#loc8 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":25:21)
#loc9 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":25:27)
#loc10 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":26:19)
#loc11 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":29:20)
#loc12 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":29:18)
#loc13 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":31:19)
#loc14 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":33:18)
#loc15 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":34:18)
#loc16 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":35:20)
#loc17 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":35:18)
#loc18 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":36:19)
#loc19 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":37:18)
#loc20 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":38:18)
#loc21 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":39:19)
#loc22 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:41)
#loc23 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:50)
#loc24 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:46)
#loc25 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:61)
#loc26 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:55)
#loc27 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:31)
#loc28 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":40:66)
#loc29 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":42:21)
#loc30 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":43:20)
#loc31 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":44:20)
#loc32 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":45:19)
#loc33 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":46:41)
#loc34 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":46:46)
#loc35 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":46:55)
#loc36 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":46:31)
#loc37 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":46:66)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc39 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":47:42)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc43 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":48:16)
#loc44 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":49:21)
#loc45 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":50:20)
#loc46 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":51:20)
#loc47 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":52:19)
#loc48 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":53:41)
#loc49 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":53:46)
#loc50 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":53:55)
#loc51 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":53:31)
#loc52 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":53:66)
#loc53 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":54:42)
#loc54 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":56:21)
#loc55 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":57:20)
#loc56 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":58:20)
#loc57 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":59:20)
#loc58 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":60:39)
#loc59 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":60:44)
#loc60 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":60:53)
#loc61 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":60:31)
#loc62 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":60:64)
#loc63 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":61:42)
#loc64 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":62:20)
#loc65 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":63:36)
#loc66 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":63:45)
#loc67 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":63:31)
#loc68 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":63:56)
#loc69 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":64:42)
#loc70 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":65:20)
#loc71 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":66:36)
#loc72 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":66:41)
#loc73 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":66:50)
#loc74 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":66:31)
#loc75 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":66:61)
#loc76 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":67:42)
#loc77 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":68:16)
#loc78 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":69:21)
#loc79 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":70:20)
#loc80 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":71:20)
#loc81 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":72:20)
#loc82 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":73:38)
#loc83 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":73:43)
#loc84 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":73:52)
#loc85 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":73:31)
#loc86 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":73:63)
#loc87 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":74:42)
#loc88 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":75:20)
#loc89 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":76:38)
#loc90 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":76:43)
#loc91 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":76:52)
#loc92 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":76:31)
#loc93 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":76:63)
#loc94 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":77:42)
#loc95 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":78:20)
#loc96 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":79:38)
#loc97 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":79:43)
#loc98 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":79:52)
#loc99 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":79:31)
#loc100 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":79:63)
#loc101 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":80:42)
#loc102 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":84:35)
#loc103 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":87:35)
#loc104 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":90:35)
#loc105 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":93:35)
#loc106 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":96:35)
#loc107 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":99:35)
#loc108 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":102:35)
#loc109 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":105:35)
#loc110 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":106:25)
#loc111 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":106:37)
#loc112 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":107:25)
#loc113 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":107:37)
#loc114 = loc("inductor_cache/4z/c4zv45ep7nj3eymeeb4klzzvdn4tlfcqfbegprmy56hcb7czqrpv.py":107:4)
#loc115 = loc(callsite(#loc38 at #loc39))
#loc116 = loc(callsite(#loc40 at #loc39))
#loc117 = loc(callsite(#loc41 at #loc39))
#loc118 = loc(callsite(#loc42 at #loc39))
#loc119 = loc(callsite(#loc38 at #loc53))
#loc120 = loc(callsite(#loc40 at #loc53))
#loc121 = loc(callsite(#loc41 at #loc53))
#loc122 = loc(callsite(#loc42 at #loc53))
#loc123 = loc(callsite(#loc38 at #loc63))
#loc124 = loc(callsite(#loc40 at #loc63))
#loc125 = loc(callsite(#loc41 at #loc63))
#loc126 = loc(callsite(#loc42 at #loc63))
#loc127 = loc(callsite(#loc38 at #loc69))
#loc128 = loc(callsite(#loc40 at #loc69))
#loc129 = loc(callsite(#loc41 at #loc69))
#loc130 = loc(callsite(#loc42 at #loc69))
#loc131 = loc(callsite(#loc38 at #loc76))
#loc132 = loc(callsite(#loc40 at #loc76))
#loc133 = loc(callsite(#loc41 at #loc76))
#loc134 = loc(callsite(#loc42 at #loc76))
#loc135 = loc(callsite(#loc38 at #loc87))
#loc136 = loc(callsite(#loc40 at #loc87))
#loc137 = loc(callsite(#loc41 at #loc87))
#loc138 = loc(callsite(#loc42 at #loc87))
#loc139 = loc(callsite(#loc38 at #loc94))
#loc140 = loc(callsite(#loc40 at #loc94))
#loc141 = loc(callsite(#loc41 at #loc94))
#loc142 = loc(callsite(#loc42 at #loc94))
#loc143 = loc(callsite(#loc38 at #loc101))
#loc144 = loc(callsite(#loc40 at #loc101))
#loc145 = loc(callsite(#loc41 at #loc101))
#loc146 = loc(callsite(#loc42 at #loc101))
