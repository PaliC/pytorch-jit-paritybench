#loc = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":38:24)
#loc25 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":46:26)
#loc47 = loc(callsite(#loc1 at #loc18))
#loc50 = loc(callsite(#loc1 at #loc25))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_cat_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<32768> : tensor<32x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e-01> : tensor<32x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<32x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<6.400000e+01> : tensor<32x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<32x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<1024> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_5 : tensor<32x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_5 : tensor<32x1xi32> loc(#loc11)
    %11 = arith.muli %5, %cst_4 : tensor<32x1xi32> loc(#loc12)
    %12 = tt.broadcast %8 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<32x64xi32> loc(#loc13)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %14 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc14)
    %17 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc15)
    %18 = tt.load %16, %17, %cst_3 : tensor<32x64x!tt.ptr<f32>> loc(#loc15)
    %19 = arith.select %17, %18, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc16)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc18)), %arg7: f32 loc(callsite(#loc1 at #loc18))):
      %49 = arith.addf %arg6, %arg7 : f32 loc(#loc51)
      tt.reduce.return %49 : f32 loc(#loc46)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc46)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc20)
    %22 = arith.divf %21, %cst_2 : tensor<32x1xf32> loc(#loc21)
    %23 = tt.broadcast %22 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc22)
    %24 = arith.subf %18, %23 : tensor<32x64xf32> loc(#loc22)
    %25 = arith.mulf %24, %24 : tensor<32x64xf32> loc(#loc23)
    %26 = arith.select %17, %25, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc24)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc25)), %arg7: f32 loc(callsite(#loc1 at #loc25))):
      %49 = arith.addf %arg6, %arg7 : f32 loc(#loc52)
      tt.reduce.return %49 : f32 loc(#loc49)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc49)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc26)
    %29 = arith.divf %28, %cst_2 : tensor<32x1xf32> loc(#loc27)
    %30 = arith.addf %29, %cst_1 : tensor<32x1xf32> loc(#loc28)
    %31 = tt.extern_elementwise %30 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<32x1xf32>) -> tensor<32x1xf32> loc(#loc29)
    %32 = tt.broadcast %31 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc30)
    %33 = arith.mulf %24, %32 : tensor<32x64xf32> loc(#loc30)
    %34 = arith.cmpf ogt, %33, %cst_3 : tensor<32x64xf32> loc(#loc31)
    %35 = arith.mulf %33, %cst_0 : tensor<32x64xf32> loc(#loc32)
    %36 = arith.select %34, %33, %35 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc33)
    gpu.barrier loc(#loc34)
    %37 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc35)
    %38 = tt.addptr %37, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc35)
    tt.store %38, %31, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc36)
    %39 = arith.muli %9, %cst_4 : tensor<32x1xi32> loc(#loc37)
    %40 = tt.broadcast %39 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc38)
    %41 = arith.addi %12, %40 : tensor<32x64xi32> loc(#loc38)
    %42 = arith.muli %10, %cst : tensor<32x1xi32> loc(#loc39)
    %43 = tt.broadcast %42 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc40)
    %44 = arith.addi %41, %43 : tensor<32x64xi32> loc(#loc40)
    %45 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc41)
    %46 = tt.addptr %45, %44 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc41)
    tt.store %46, %36, %17 : tensor<32x64x!tt.ptr<f32>> loc(#loc42)
    %47 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc43)
    %48 = tt.addptr %47, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc43)
    tt.store %48, %22, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":23:28)
#loc3 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":23:33)
#loc4 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":24:36)
#loc5 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":24:44)
#loc6 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":24:23)
#loc7 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":25:21)
#loc8 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":26:26)
#loc9 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":26:34)
#loc10 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":31:19)
#loc11 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":32:19)
#loc12 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:38)
#loc13 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:35)
#loc14 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:30)
#loc15 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":33:43)
#loc16 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":37:33)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc20 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":38:27)
#loc21 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":41:19)
#loc22 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":42:19)
#loc23 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":43:20)
#loc24 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":45:35)
#loc26 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":46:29)
#loc27 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":48:20)
#loc28 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":50:20)
#loc29 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":51:28)
#loc30 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":53:20)
#loc31 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":55:20)
#loc32 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":57:20)
#loc33 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":58:35)
#loc34 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":59:4)
#loc35 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":60:28)
#loc36 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":60:40)
#loc37 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:33)
#loc38 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:30)
#loc39 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:44)
#loc40 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:38)
#loc41 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:25)
#loc42 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":61:56)
#loc43 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":62:25)
#loc44 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":62:37)
#loc45 = loc("inductor_cache/g3/cg33blvokx3tpogzmt4f3vjlwiv6ztfibrchy5drh3zx3k2zj4vg.py":62:4)
#loc46 = loc(callsite(#loc17 at #loc18))
#loc48 = loc(callsite(#loc19 at #loc17))
#loc49 = loc(callsite(#loc17 at #loc25))
#loc51 = loc(callsite(#loc48 at #loc18))
#loc52 = loc(callsite(#loc48 at #loc25))
