//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<47>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_1];
$L__tmp0:
	.loc	1 22 28                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:22:33
	shl.b32 	%r37, %r1, 8;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_2];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_3];
	.loc	1 23 44                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:23:44
	mov.u32 	%r38, %tid.x;
	and.b32  	%r39, %r38, 127;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_4];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_5];
	.loc	1 23 23                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:23:23
	or.b32  	%r40, %r37, %r39;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_20_param_6];
	or.b32  	%r41, %r40, 128;
	.loc	1 24 21                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:24:21
	setp.lt.s32 	%p14, %r40, 256;
	setp.lt.s32 	%p15, %r41, 256;
	.loc	1 25 28                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:25:33
	shl.b32 	%r42, %r2, 1;
	.loc	1 27 21                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:27:21
	setp.lt.s32 	%p3, %r42, 256;
	.loc	1 32 39                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:39
	shl.b32 	%r43, %r40, 8;
	shl.b32 	%r44, %r41, 8;
	.loc	1 32 35                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:35
	add.s32 	%r45, %r43, %r42;
	add.s32 	%r46, %r44, %r42;
	.loc	1 32 30                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:30
	mul.wide.s32 	%rd17, %r45, 4;
	add.s64 	%rd1, %rd10, %rd17;
	mul.wide.s32 	%rd18, %r46, 4;
	add.s64 	%rd2, %rd10, %rd18;
	.loc	1 32 52                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:52
	and.pred  	%p1, %p3, %p14;
	and.pred  	%p2, %p3, %p15;
	.loc	1 32 44                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:44
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:33:30
	mul.wide.s32 	%rd19, %r42, 4;
	add.s64 	%rd3, %rd11, %rd19;
	.loc	1 33 35                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:34:30
	add.s64 	%rd4, %rd12, %rd19;
	.loc	1 34 35                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:34:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	mov.b32 	%f2, %r10;
	.loc	1 35 31                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:35:31
	add.s64 	%rd5, %rd13, %rd19;
	.loc	1 35 36                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:35:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:36:31
	add.s64 	%rd6, %rd14, %rd19;
	.loc	1 36 36                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:36:36
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:37:31
	add.s64 	%rd7, %rd15, %rd17;
	add.s64 	%rd8, %rd15, %rd18;
	.loc	1 37 45                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:37:45
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p1 ld.global.v2.b32 { %r15, %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p2 ld.global.v2.b32 { %r17, %r18 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:40:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 41 26                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:41:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 37 45                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:37:45
	mov.b32 	%f7, %r18;
	mov.b32 	%f8, %r17;
	mov.b32 	%f9, %r16;
	mov.b32 	%f10, %r15;
	.loc	1 26 44                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:26:44
	bfe.u32 	%r47, %r38, 6, 1;
	.loc	1 26 23                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:26:23
	or.b32  	%r48, %r42, %r47;
	.loc	1 23 44                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:23:44
	shl.b32 	%r49, %r38, 2;
	and.b32  	%r50, %r49, 252;
	.loc	1 23 23                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:23:23
	or.b32  	%r51, %r37, %r50;
	.loc	1 32 52                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:52
	max.s32 	%r52, %r51, %r48;
	setp.lt.s32 	%p13, %r52, 256;
	.loc	1 31 19                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:31:19
	shr.s32 	%r54, %r51, 31;
	shr.u32 	%r55, %r54, 26;
	add.s32 	%r56, %r51, %r55;
	.loc	1 30 19                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:30:19
	and.b32  	%r57, %r56, -64;
	sub.s32 	%r58, %r51, %r57;
	.loc	1 43 18                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:43:18
	mov.b32 	%r21, %f5;
	mov.b32 	%r20, 1065353216;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f11, %r19;
	mov.b32 	%r24, %f6;
	// begin inline asm
	div.full.f32 %r22, %r20, %r24;
	// end inline asm
	mov.b32 	%f12, %r22;
	.loc	1 33 35                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:33:35
	mov.b32 	%f13, %r8;
	mov.b32 	%f14, %r7;
	.loc	1 32 44                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:32:44
	mov.b32 	%f15, %r6;
	mov.b32 	%f16, %r5;
	mov.b32 	%f17, %r4;
	mov.b32 	%f18, %r3;
	.loc	1 38 18                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:38:18
	sub.f32 	%f19, %f18, %f14;
	sub.f32 	%f20, %f17, %f13;
	sub.f32 	%f21, %f16, %f14;
	sub.f32 	%f22, %f15, %f13;
	.loc	1 36 36                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:36:36
	mov.b32 	%f23, %r14;
	mov.b32 	%f24, %r13;
	.loc	1 35 36                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:35:36
	mov.b32 	%f25, %r12;
	mov.b32 	%f26, %r11;
	.loc	1 46 19                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:46:19
	mul.f32 	%f27, %f22, %f12;
	mul.f32 	%f28, %f21, %f11;
	mul.f32 	%f29, %f20, %f12;
	mul.f32 	%f30, %f19, %f11;
	.loc	1 48 20                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:48:20
	fma.rn.f32 	%f31, %f30, %f26, %f24;
	fma.rn.f32 	%f32, %f29, %f25, %f23;
	fma.rn.f32 	%f33, %f28, %f26, %f24;
	fma.rn.f32 	%f34, %f27, %f25, %f23;
	.loc	1 50 20                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:50:20
	setp.gt.f32 	%p16, %f34, 0f00000000;
	setp.gt.f32 	%p17, %f33, 0f00000000;
	setp.gt.f32 	%p18, %f32, 0f00000000;
	setp.gt.f32 	%p19, %f31, 0f00000000;
	.loc	1 52 20                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:52:20
	mul.f32 	%f35, %f31, 0f3DCCCCCD;
	mul.f32 	%f36, %f32, 0f3DCCCCCD;
	mul.f32 	%f37, %f33, 0f3DCCCCCD;
	mul.f32 	%f38, %f34, 0f3DCCCCCD;
	.loc	1 53 35                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:53:35
	selp.f32 	%f39, %f31, %f35, %p19;
	selp.f32 	%f40, %f32, %f36, %p18;
	selp.f32 	%f41, %f33, %f37, %p17;
	selp.f32 	%f42, %f34, %f38, %p16;
	.loc	1 54 20                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:54:20
	add.f32 	%f43, %f39, %f10;
	add.f32 	%f44, %f40, %f9;
	add.f32 	%f45, %f41, %f8;
	add.f32 	%f46, %f42, %f7;
	.loc	1 55 33                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:33
	shl.b32 	%r59, %r48, 6;
	.loc	1 55 30                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:30
	add.s32 	%r60, %r59, %r58;
	.loc	1 55 44                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:44
	shl.b32 	%r61, %r56, 8;
	and.b32  	%r62, %r61, -16384;
	.loc	1 55 38                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:38
	add.s32 	%r63, %r60, %r62;
	.loc	1 55 25                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:25
	mul.wide.s32 	%rd20, %r63, 4;
	add.s64 	%rd9, %rd16, %rd20;
	.loc	1 55 56                         // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:56
	shl.b32 	%r64, %r39, 2;
	mov.u32 	%r65, global_smem;
	add.s32 	%r25, %r65, %r64;
	mov.b32 	%r26, %f43;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r25, 1040;
	mov.b32 	%r28, %f44;
	// begin inline asm
	@%p9 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r25, 512;
	mov.b32 	%r30, %f45;
	// begin inline asm
	@%p9 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r25, 1552;
	mov.b32 	%r32, %f46;
	// begin inline asm
	@%p9 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r66, %r38, 2;
	and.b32  	%r67, %r66, 16;
	add.s32 	%r68, %r65, %r67;
	shl.b32 	%r69, %r38, 4;
	and.b32  	%r70, %r69, 2032;
	add.s32 	%r71, %r68, %r70;
	ld.shared.v4.u32 	{%r33, %r34, %r35, %r36}, [%r71];
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd9 + 0 ], { %r33, %r34, %r35, %r36 };
	// end inline asm
	.loc	1 55 4                          // cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py:55:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r7/cr7g5ygfs4tf2s6uj5s4tzxadhlc45i2d3qyvr6rd6i62ekrylhz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 55
.b8 103
.b8 53
.b8 121
.b8 103
.b8 102
.b8 115
.b8 52
.b8 116
.b8 102
.b8 50
.b8 115
.b8 54
.b8 117
.b8 106
.b8 53
.b8 115
.b8 52
.b8 116
.b8 122
.b8 120
.b8 97
.b8 100
.b8 104
.b8 108
.b8 99
.b8 52
.b8 53
.b8 105
.b8 50
.b8 100
.b8 51
.b8 113
.b8 121
.b8 118
.b8 114
.b8 54
.b8 114
.b8 100
.b8 54
.b8 105
.b8 54
.b8 50
.b8 101
.b8 107
.b8 114
.b8 121
.b8 108
.b8 104
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
