//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0 // -- Begin function triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0
.visible .entry triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_6,
	.param .u32 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_7,
	.param .u32 triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<46>;
	.reg .b32 	%r<104>;
	.reg .f32 	%f<99>;
	.reg .b64 	%rd<45>;
	.loc	1 19 0                          // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_6];
	ld.param.u64 	%rd13, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_3];
	ld.param.u64 	%rd12, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_2];
	ld.param.u64 	%rd11, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_1];
	ld.param.u64 	%rd10, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_0];
$L__tmp0:
	.loc	1 22 28                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:24:21
	setp.lt.s32 	%p11, %r10, 36;
	.loc	1 25 33                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:25:33
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r11, %r2, 2;
	ld.param.u64 	%rd16, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_4];
	and.b32  	%r12, %r11, 2044;
	ld.param.u64 	%rd17, [triton_red_fused_abs_add_constant_pad_nd_mean_pow_sqrt_sub_0_param_5];
	.loc	1 43 59                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:43:59
	mul.lo.s32 	%r13, %r10, 7936;
	.loc	1 67 39                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:67:39
	shl.b32 	%r14, %r10, 13;
	and.b32  	%r15, %r11, 60;
	add.s32 	%r16, %r15, -1;
	setp.lt.u32 	%p7, %r16, 62;
	setp.ne.s32 	%p8, %r15, 60;
	and.pred  	%p9, %p7, %p11;
	and.pred  	%p15, %p8, %p11;
	add.s32 	%r3, %r13, -64;
	.loc	1 28 36                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:28:36
	cvt.u64.u32 	%rd1, %r12;
	and.b32  	%r17, %r2, 511;
	mul.wide.u32 	%rd18, %r17, 16;
	mul.wide.s32 	%rd19, %r14, 4;
	or.b64  	%rd20, %rd18, %rd19;
	add.s64 	%rd43, %rd17, %rd20;
	add.s64 	%rd42, %rd16, %rd20;
	shr.u64 	%rd21, %rd1, 6;
	cvt.u32.u64 	%r102, %rd21;
	mad.lo.s32 	%r18, %r102, 62, %r13;
	add.s32 	%r19, %r18, %r15;
	add.s32 	%r103, %r19, 2;
	mov.f32 	%f95, 0f00000000;
	mov.u64 	%rd44, 0;
	mov.f32 	%f96, %f95;
	mov.f32 	%f97, %f95;
	mov.f32 	%f98, %f95;
$L__BB0_1:                              // %__nv_sqrtf.exit
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 33 31                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:33:31
	and.b32  	%r60, %r102, 63;
	cvt.u32.u64 	%r61, %rd44;
	.loc	1 34 23                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:34:23
	shr.u32 	%r62, %r61, 12;
	.loc	1 35 23                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:35:23
	add.s64 	%rd34, %rd1, %rd44;
	cvt.u32.u64 	%r63, %rd34;
	and.b32  	%r64, %r63, 4092;
	.loc	1 43 54                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:43:54
	add.s32 	%r65, %r103, -3;
	add.s32 	%r66, %r103, -2;
	add.s32 	%r67, %r103, -1;
	.loc	1 43 34                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:43:34
	mul.wide.s32 	%rd35, %r65, 4;
	add.s64 	%rd22, %rd10, %rd35;
	mul.wide.s32 	%rd36, %r66, 4;
	add.s64 	%rd23, %rd10, %rd36;
	mul.wide.s32 	%rd37, %r67, 4;
	add.s64 	%rd24, %rd10, %rd37;
	mul.wide.s32 	%rd38, %r103, 4;
	add.s64 	%rd25, %rd10, %rd38;
	mov.b32 	%r21, 0;
	.loc	1 43 64                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:43:64
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p9 ld.global.L1::evict_first.b32 { %r20 }, [ %rd22 + 0 ];
	@!%p9 mov.u32 %r20, %r21;
	// end inline asm
	mov.b32 	%f13, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p11 ld.global.L1::evict_first.b32 { %r22 }, [ %rd23 + 0 ];
	@!%p11 mov.u32 %r22, %r21;
	// end inline asm
	mov.b32 	%f14, %r22;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p11 ld.global.L1::evict_first.b32 { %r24 }, [ %rd24 + 0 ];
	@!%p11 mov.u32 %r24, %r21;
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p15 ld.global.L1::evict_first.b32 { %r26 }, [ %rd25 + 0 ];
	@!%p15 mov.u32 %r26, %r21;
	// end inline asm
	mov.b32 	%f16, %r26;
	.loc	1 48 23                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:48:23
	add.s32 	%r68, %r60, -1;
	setp.lt.u32 	%p37, %r68, 62;
	.loc	1 49 48                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:49:48
	add.s32 	%r69, %r3, %r64;
	.loc	1 49 58                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:49:58
	mad.lo.s32 	%r70, %r62, 3968, %r69;
	.loc	1 49 35                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:49:35
	mul.wide.s32 	%rd39, %r70, 4;
	add.s64 	%rd26, %rd11, %rd39;
	.loc	1 49 84                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:49:84
	and.pred  	%p17, %p11, %p37;
	.loc	1 49 68                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:49:68
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p17 ld.global.L1::evict_first.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd26 + 0 ];
	@!%p17 mov.u32 %r28, %r21;
	@!%p17 mov.u32 %r29, %r21;
	@!%p17 mov.u32 %r30, %r21;
	@!%p17 mov.u32 %r31, %r21;
	// end inline asm
	mov.b32 	%f17, %r28;
	mov.b32 	%f18, %r29;
	mov.b32 	%f19, %r30;
	mov.b32 	%f20, %r31;
	.loc	1 50 24                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:50:24
	mul.f32 	%f21, %f17, %f17;
	mul.f32 	%f22, %f18, %f18;
	mul.f32 	%f23, %f19, %f19;
	mul.f32 	%f24, %f20, %f20;
	.loc	1 51 23                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:51:23
	fma.rn.f32 	%f25, %f13, %f13, %f21;
	fma.rn.f32 	%f26, %f14, %f14, %f22;
	fma.rn.f32 	%f27, %f15, %f15, %f23;
	fma.rn.f32 	%f28, %f16, %f16, %f24;
	.loc	1 53 24                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:53:24
	add.f32 	%f29, %f25, 0f38D1B717;
	add.f32 	%f30, %f26, 0f38D1B717;
	add.f32 	%f31, %f27, 0f38D1B717;
	add.f32 	%f32, %f28, 0f38D1B717;
	.loc	1 54 31                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:54:31
	sqrt.approx.ftz.f32 	%f33, %f29;
	sqrt.approx.ftz.f32 	%f34, %f30;
	sqrt.approx.ftz.f32 	%f35, %f31;
	sqrt.approx.ftz.f32 	%f36, %f32;
	.loc	1 55 35                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:55:35
	add.s64 	%rd27, %rd12, %rd35;
	add.s64 	%rd28, %rd12, %rd36;
	add.s64 	%rd29, %rd12, %rd37;
	add.s64 	%rd30, %rd12, %rd38;
	.loc	1 55 65                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:55:65
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p9 ld.global.L1::evict_first.b32 { %r36 }, [ %rd27 + 0 ];
	@!%p9 mov.u32 %r36, %r21;
	// end inline asm
	mov.b32 	%f37, %r36;
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p11 ld.global.L1::evict_first.b32 { %r38 }, [ %rd28 + 0 ];
	@!%p11 mov.u32 %r38, %r21;
	// end inline asm
	mov.b32 	%f38, %r38;
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p11 ld.global.L1::evict_first.b32 { %r40 }, [ %rd29 + 0 ];
	@!%p11 mov.u32 %r40, %r21;
	// end inline asm
	mov.b32 	%f39, %r40;
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p15 ld.global.L1::evict_first.b32 { %r42 }, [ %rd30 + 0 ];
	@!%p15 mov.u32 %r42, %r21;
	// end inline asm
	mov.b32 	%f40, %r42;
	.loc	1 57 35                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:57:35
	add.s64 	%rd31, %rd13, %rd39;
	.loc	1 57 68                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:57:68
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	@%p17 ld.global.L1::evict_first.v4.b32 { %r44, %r45, %r46, %r47 }, [ %rd31 + 0 ];
	@!%p17 mov.u32 %r44, %r21;
	@!%p17 mov.u32 %r45, %r21;
	@!%p17 mov.u32 %r46, %r21;
	@!%p17 mov.u32 %r47, %r21;
	// end inline asm
	mov.b32 	%f41, %r44;
	mov.b32 	%f42, %r45;
	mov.b32 	%f43, %r46;
	mov.b32 	%f44, %r47;
	.loc	1 58 24                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:58:24
	mul.f32 	%f45, %f41, %f41;
	mul.f32 	%f46, %f42, %f42;
	mul.f32 	%f47, %f43, %f43;
	mul.f32 	%f48, %f44, %f44;
	.loc	1 59 24                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:59:24
	fma.rn.f32 	%f49, %f37, %f37, %f45;
	fma.rn.f32 	%f50, %f38, %f38, %f46;
	fma.rn.f32 	%f51, %f39, %f39, %f47;
	fma.rn.f32 	%f52, %f40, %f40, %f48;
	.loc	1 60 24                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:60:24
	add.f32 	%f53, %f49, 0f38D1B717;
	add.f32 	%f54, %f50, 0f38D1B717;
	add.f32 	%f55, %f51, 0f38D1B717;
	add.f32 	%f56, %f52, 0f38D1B717;
	.loc	1 61 31                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:61:31
	sqrt.approx.ftz.f32 	%f57, %f53;
	sqrt.approx.ftz.f32 	%f58, %f54;
	sqrt.approx.ftz.f32 	%f59, %f55;
	sqrt.approx.ftz.f32 	%f60, %f56;
	.loc	1 62 24                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:62:24
	sub.f32 	%f61, %f33, %f57;
	sub.f32 	%f62, %f34, %f58;
	sub.f32 	%f63, %f35, %f59;
	sub.f32 	%f64, %f36, %f60;
	.loc	1 63 28                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:63:28
	abs.f32 	%f65, %f64;
	abs.f32 	%f66, %f63;
	abs.f32 	%f67, %f62;
	abs.f32 	%f68, %f61;
	.loc	1 65 25                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:65:25
	add.f32 	%f69, %f95, %f68;
	add.f32 	%f70, %f96, %f67;
	add.f32 	%f71, %f97, %f66;
	add.f32 	%f72, %f98, %f65;
	.loc	1 66 48                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:66:48
	selp.f32 	%f98, %f72, %f98, %p11;
	selp.f32 	%f97, %f71, %f97, %p11;
	selp.f32 	%f96, %f70, %f96, %p11;
	selp.f32 	%f95, %f69, %f95, %p11;
	.loc	1 67 51                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:67:51
	mov.b32 	%r52, %f33;
	mov.b32 	%r53, %f34;
	mov.b32 	%r54, %f35;
	mov.b32 	%r55, %f36;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd42 + 0 ], { %r52, %r53, %r54, %r55 };
	// end inline asm
	.loc	1 68 51                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:68:51
	mov.b32 	%r56, %f57;
	mov.b32 	%r57, %f58;
	mov.b32 	%r58, %f59;
	mov.b32 	%r59, %f60;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd43 + 0 ], { %r56, %r57, %r58, %r59 };
	// end inline asm
	.loc	1 28 36                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:28:36
	add.s64 	%rd7, %rd44, 2048;
	add.s64 	%rd43, %rd43, 8192;
	add.s64 	%rd42, %rd42, 8192;
	add.s32 	%r103, %r103, 1984;
	add.s32 	%r102, %r102, 32;
	setp.lt.u64 	%p38, %rd44, 6144;
	mov.u64 	%rd44, %rd7;
	@%p38 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 25 33                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:25:33
	and.b32  	%r78, %r2, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f95, %f96;
	add.f32 	%f74, %f97, %f73;
	add.f32 	%f75, %f98, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f75;
	shfl.sync.bfly.b32	%r80, %r79, 16, 31, -1;
	mov.b32 	%f76, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f77;
	shfl.sync.bfly.b32	%r82, %r81, 8, 31, -1;
	mov.b32 	%f78, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f79;
	shfl.sync.bfly.b32	%r84, %r83, 4, 31, -1;
	mov.b32 	%f80, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f81;
	shfl.sync.bfly.b32	%r86, %r85, 2, 31, -1;
	mov.b32 	%f82, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f83;
	shfl.sync.bfly.b32	%r88, %r87, 1, 31, -1;
	mov.b32 	%f84, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p39, %r78, 0;
	shr.u32 	%r89, %r2, 3;
	and.b32  	%r90, %r89, 60;
	mov.u32 	%r91, global_smem;
	add.s32 	%r71, %r91, %r90;
	mov.b32 	%r72, %f85;
	// begin inline asm
	@%p39 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p40, %r2, 16;
	add.s32 	%r74, %r91, %r11;
	// begin inline asm
	@%p40 ld.shared.b32 %r73, [ %r74 + 0 ];
	// end inline asm
	mov.b32 	%f86, %r73;
	shfl.sync.bfly.b32	%r93, %r73, 8, 31, -1;
	mov.b32 	%f87, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f88;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f89, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f90;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f91, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f92;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f93, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r100, %r2, 15;
	setp.eq.s32 	%p44, %r100, 0;
	and.pred  	%p41, %p40, %p44;
	mov.b32 	%r76, %f94;
	// begin inline asm
	@%p41 st.shared.b32 [ %r74 + 0 ], %r76;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r77, [global_smem];
$L__tmp2:
	.loc	1 70 25                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:70:25
	mul.wide.s32 	%rd41, %r10, 4;
	add.s64 	%rd40, %rd14, %rd41;
	.loc	1 70 37                         // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:70:37
	setp.eq.s32 	%p45, %r17, 0;
	and.pred  	%p42, %p45, %p11;
	// begin inline asm
	@%p42 st.global.b32 [ %rd40 + 0 ], { %r77 };
	// end inline asm
	.loc	1 70 4                          // cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py:70:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s7/cs73tj7opnvajveqslod4prsioordwfnojxgwwaxn27l66gflwag.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 55
.b8 51
.b8 116
.b8 106
.b8 55
.b8 111
.b8 112
.b8 110
.b8 118
.b8 97
.b8 106
.b8 118
.b8 101
.b8 113
.b8 115
.b8 108
.b8 111
.b8 100
.b8 52
.b8 112
.b8 114
.b8 115
.b8 105
.b8 111
.b8 111
.b8 114
.b8 100
.b8 119
.b8 102
.b8 110
.b8 111
.b8 106
.b8 120
.b8 103
.b8 119
.b8 119
.b8 97
.b8 120
.b8 110
.b8 50
.b8 55
.b8 108
.b8 54
.b8 54
.b8 103
.b8 102
.b8 108
.b8 119
.b8 97
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 55
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 115
.b8 116
.b8 97
.b8 110
.b8 116
.b8 95
.b8 112
.b8 97
.b8 100
.b8 95
.b8 110
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
