; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cos_div_mul_sin_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i769 = alloca [7 x i32], align 4
  %result.i.i.i.i714 = alloca [7 x i32], align 4
  %result.i.i.i.i659 = alloca [7 x i32], align 4
  %result.i.i.i.i604 = alloca [7 x i32], align 4
  %result.i.i.i.i549 = alloca [7 x i32], align 4
  %result.i.i.i.i494 = alloca [7 x i32], align 4
  %result.i.i.i.i439 = alloca [7 x i32], align 4
  %result.i.i.i.i386 = alloca [7 x i32], align 4
  %result.i.i.i.i331 = alloca [7 x i32], align 4
  %result.i.i.i.i276 = alloca [7 x i32], align 4
  %result.i.i.i.i221 = alloca [7 x i32], align 4
  %result.i.i.i.i166 = alloca [7 x i32], align 4
  %result.i.i.i.i111 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %13 = shl i32 %12, 8, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = shl i32 %14, 1, !dbg !12
  %16 = and i32 %15, 254, !dbg !12
  %17 = or disjoint i32 %13, %16, !dbg !13
  %18 = icmp slt i32 %17, 256, !dbg !14
  %19 = sext i32 %17 to i64, !dbg !15
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !15
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %18) #5, !dbg !16
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !16
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !16
  %24 = bitcast i32 %22 to float, !dbg !16
  %25 = bitcast i32 %23 to float, !dbg !16
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !17
  %26 = fmul float %24, 0x3FE45F3060000000, !dbg !17
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not.i = icmp eq i32 %27, 0, !dbg !17
  %28 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %26) #5, !dbg !17
  %29 = tail call i32 @llvm.nvvm.f2i.rn(float %26) #5, !dbg !17
  %.01.i = select i1 %.not.i, i32 %29, i32 %28, !dbg !17
  %30 = sitofp i32 %.01.i to float, !dbg !17
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not15.i = icmp eq i32 %31, 0, !dbg !17
  %32 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %30, float 0xBFF921FB40000000, float %24) #5, !dbg !17
  %33 = tail call float @llvm.nvvm.fma.rn.f(float %30, float 0xBFF921FB40000000, float %24) #5, !dbg !17
  %.02.i = select i1 %.not15.i, float %33, float %32, !dbg !17
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not16.i = icmp eq i32 %34, 0, !dbg !17
  %35 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %30, float 0xBE74442D00000000, float %.02.i) #5, !dbg !17
  %36 = tail call float @llvm.nvvm.fma.rn.f(float %30, float 0xBE74442D00000000, float %.02.i) #5, !dbg !17
  %.03.i = select i1 %.not16.i, float %36, float %35, !dbg !17
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not17.i = icmp eq i32 %37, 0, !dbg !17
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %30, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !17
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %30, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !17
  %.04.i = select i1 %.not17.i, float %39, float %38, !dbg !17
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not18.i = icmp eq i32 %40, 0, !dbg !17
  %41 = tail call float @llvm.nvvm.fabs.ftz.f(float %24) #5, !dbg !17
  %42 = tail call float @llvm.nvvm.fabs.f(float %24) #5, !dbg !17
  %.06.i = select i1 %.not18.i, float %42, float %41, !dbg !17
  %43 = fcmp ult float %.06.i, 1.056150e+05, !dbg !17
  br i1 %43, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !17

__nv_isinff.exit.i.i.i:                           ; preds = %11
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not19.i = icmp eq i32 %44, 0, !dbg !17
  %.07.i = select i1 %.not19.i, float %42, float %41, !dbg !17
  %45 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !17
  br i1 %45, label %__nv_fmul_rn.exit.i.i.i, label %49, !dbg !17

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not27.i = icmp eq i32 %46, 0, !dbg !17
  %47 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %24, float 0.000000e+00) #5, !dbg !17
  %48 = tail call float @llvm.nvvm.mul.rn.f(float %24, float 0.000000e+00) #5, !dbg !17
  %.08.i = select i1 %.not27.i, float %48, float %47, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !17

49:                                               ; preds = %__nv_isinff.exit.i.i.i
  %50 = lshr i32 %22, 23, !dbg !17
  %51 = and i32 %50, 224, !dbg !17
  %52 = add nsw i32 %51, -128, !dbg !17
  %53 = shl i32 %22, 8, !dbg !17
  %54 = or i32 %53, -2147483648, !dbg !17
  %55 = lshr exact i32 %52, 5, !dbg !17
  br label %56, !dbg !17

56:                                               ; preds = %49, %56
  %indvars.iv = phi i64 [ 0, %49 ], [ %indvars.iv.next, %56 ]
  %hi.i.i.i.0.i824 = phi i32 [ 0, %49 ], [ %61, %56 ]
  %57 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !17
  %58 = load i32, ptr addrspace(1) %57, align 4, !dbg !17
  %59 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %58, i32 %54, i32 %hi.i.i.i.0.i824) #6, !dbg !17, !srcloc !18
  %60 = extractvalue { i32, i32 } %59, 0, !dbg !17
  %61 = extractvalue { i32, i32 } %59, 1, !dbg !17
  %62 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !17
  store i32 %60, ptr %62, align 4, !dbg !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !17
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !17
  br i1 %exitcond.not, label %63, label %56, !dbg !17, !llvm.loop !19

63:                                               ; preds = %56
  %64 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !17
  store i32 %61, ptr %64, align 4, !dbg !17
  %65 = and i32 %50, 31, !dbg !17
  %66 = sub nsw i32 6, %55, !dbg !17
  %67 = sext i32 %66 to i64, !dbg !17
  %68 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %67, !dbg !17
  %69 = load i32, ptr %68, align 4, !dbg !17
  %70 = sub nsw i32 5, %55, !dbg !17
  %71 = sext i32 %70 to i64, !dbg !17
  %72 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %71, !dbg !17
  %73 = load i32, ptr %72, align 4, !dbg !17
  %.not20.i = icmp eq i32 %65, 0, !dbg !17
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %74, !dbg !17

74:                                               ; preds = %63
  %75 = sub nsw i32 4, %55, !dbg !17
  %76 = sub nuw nsw i32 32, %65, !dbg !17
  %77 = shl i32 %69, %65, !dbg !17
  %78 = lshr i32 %73, %76, !dbg !17
  %79 = add i32 %78, %77, !dbg !17
  %80 = shl i32 %73, %65, !dbg !17
  %81 = sext i32 %75 to i64, !dbg !17
  %82 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %81, !dbg !17
  %83 = load i32, ptr %82, align 4, !dbg !17
  %84 = lshr i32 %83, %76, !dbg !17
  %85 = add i32 %84, %80, !dbg !17
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !17

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %74, %63
  %hi.i.i.i.1.i = phi i32 [ %79, %74 ], [ %69, %63 ], !dbg !17
  %lo.i.i.i.0.i = phi i32 [ %85, %74 ], [ %73, %63 ], !dbg !17
  %86 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !17
  %87 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !17
  %88 = shl i32 %lo.i.i.i.0.i, 2, !dbg !17
  %89 = lshr i32 %87, 31, !dbg !17
  %90 = add nuw nsw i32 %89, %86, !dbg !17
  %91 = sub nsw i32 0, %90, !dbg !17
  %.not2123.i = icmp slt i32 %22, 0, !dbg !17
  %spec.select.i = select i1 %.not2123.i, i32 %91, i32 %90, !dbg !17
  %92 = xor i32 %87, %22, !dbg !17
  %.lobit.i = ashr i32 %87, 31, !dbg !17
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %87, !dbg !17
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %88, !dbg !17
  %93 = zext i32 %hi.i.i.i.2.i to i64, !dbg !17
  %94 = shl nuw i64 %93, 32, !dbg !17
  %95 = zext i32 %lo.i.i.i.1.i to i64, !dbg !17
  %96 = or disjoint i64 %94, %95, !dbg !17
  %97 = sitofp i64 %96 to double, !dbg !17
  %98 = fmul double %97, 0x3BF921FB54442D19, !dbg !17
  %99 = fptrunc double %98 to float, !dbg !17
  %100 = fneg float %99, !dbg !17
  %.not2526.i = icmp slt i32 %92, 0, !dbg !17
  %r.i.i.i.0.i = select i1 %.not2526.i, float %100, float %99, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !17

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %11
  %i.i.1.i = phi i32 [ %.01.i, %11 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !17
  %t.i.i.1.i = phi float [ %.04.i, %11 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !17
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not28.i = icmp eq i32 %101, 0, !dbg !17
  %102 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !17
  %103 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !17
  %.011.i = select i1 %.not28.i, float %103, float %102, !dbg !17
  %104 = and i32 %i.i.1.i, 1, !dbg !17
  %.not29.i = icmp eq i32 %104, 0, !dbg !17
  %105 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !17
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not30.i = icmp eq i32 %106, 0, !dbg !17
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %105, float 0.000000e+00) #5, !dbg !17
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %105, float 0.000000e+00) #5, !dbg !17
  %.012.i = select i1 %.not30.i, float %108, float %107, !dbg !17
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !17

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not31.i = icmp eq i32 %109, 0, !dbg !17
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !17
  %111 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !17
  %.013.i = select i1 %.not31.i, float %111, float %110, !dbg !17
  br label %__internal_fmad.exit2.i.i.i, !dbg !17

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %112 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %113 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %114 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !17
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not32.i = icmp eq i32 %115, 0, !dbg !17
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %114, float %.011.i, float %113) #5, !dbg !17
  %117 = tail call float @llvm.nvvm.fma.rn.f(float %114, float %.011.i, float %113) #5, !dbg !17
  %.010.i = select i1 %.not32.i, float %117, float %116, !dbg !17
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not33.i = icmp eq i32 %118, 0, !dbg !17
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %112) #5, !dbg !17
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %112) #5, !dbg !17
  %.09.i = select i1 %.not33.i, float %120, float %119, !dbg !17
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not34.i = icmp eq i32 %121, 0, !dbg !17
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %105) #5, !dbg !17
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %105) #5, !dbg !17
  %.05.i = select i1 %.not34.i, float %123, float %122, !dbg !17
  %124 = and i32 %i.i.1.i, 2, !dbg !17
  %.not35.i = icmp eq i32 %124, 0, !dbg !17
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !17

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not36.i = icmp eq i32 %125, 0, !dbg !17
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !17
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !17
  %.0.i = select i1 %.not36.i, float %127, float %126, !dbg !17
  br label %__nv_sinf.exit, !dbg !17

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !17
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !17
  %128 = fmul float %25, 0x3FE45F3060000000, !dbg !17
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not.i2 = icmp eq i32 %129, 0, !dbg !17
  %130 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %128) #5, !dbg !17
  %131 = tail call i32 @llvm.nvvm.f2i.rn(float %128) #5, !dbg !17
  %.01.i3 = select i1 %.not.i2, i32 %131, i32 %130, !dbg !17
  %132 = sitofp i32 %.01.i3 to float, !dbg !17
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not15.i4 = icmp eq i32 %133, 0, !dbg !17
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float 0xBFF921FB40000000, float %25) #5, !dbg !17
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float 0xBFF921FB40000000, float %25) #5, !dbg !17
  %.02.i5 = select i1 %.not15.i4, float %135, float %134, !dbg !17
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not16.i6 = icmp eq i32 %136, 0, !dbg !17
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !17
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %132, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !17
  %.03.i7 = select i1 %.not16.i6, float %138, float %137, !dbg !17
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not17.i8 = icmp eq i32 %139, 0, !dbg !17
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !17
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %132, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !17
  %.04.i9 = select i1 %.not17.i8, float %141, float %140, !dbg !17
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not18.i10 = icmp eq i32 %142, 0, !dbg !17
  %143 = tail call float @llvm.nvvm.fabs.ftz.f(float %25) #5, !dbg !17
  %144 = tail call float @llvm.nvvm.fabs.f(float %25) #5, !dbg !17
  %.06.i11 = select i1 %.not18.i10, float %144, float %143, !dbg !17
  %145 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !17
  br i1 %145, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !17

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not19.i13 = icmp eq i32 %146, 0, !dbg !17
  %.07.i14 = select i1 %.not19.i13, float %144, float %143, !dbg !17
  %147 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !17
  br i1 %147, label %__nv_fmul_rn.exit.i.i.i52, label %151, !dbg !17

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not27.i53 = icmp eq i32 %148, 0, !dbg !17
  %149 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %25, float 0.000000e+00) #5, !dbg !17
  %150 = tail call float @llvm.nvvm.mul.rn.f(float %25, float 0.000000e+00) #5, !dbg !17
  %.08.i54 = select i1 %.not27.i53, float %150, float %149, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !17

151:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %152 = lshr i32 %23, 23, !dbg !17
  %153 = and i32 %152, 224, !dbg !17
  %154 = add nsw i32 %153, -128, !dbg !17
  %155 = shl i32 %23, 8, !dbg !17
  %156 = or i32 %155, -2147483648, !dbg !17
  %157 = lshr exact i32 %154, 5, !dbg !17
  br label %158, !dbg !17

158:                                              ; preds = %151, %158
  %indvars.iv887 = phi i64 [ 0, %151 ], [ %indvars.iv.next888, %158 ]
  %hi.i.i.i.0.i15826 = phi i32 [ 0, %151 ], [ %163, %158 ]
  %159 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv887, !dbg !17
  %160 = load i32, ptr addrspace(1) %159, align 4, !dbg !17
  %161 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %160, i32 %156, i32 %hi.i.i.i.0.i15826) #6, !dbg !17, !srcloc !18
  %162 = extractvalue { i32, i32 } %161, 0, !dbg !17
  %163 = extractvalue { i32, i32 } %161, 1, !dbg !17
  %164 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv887, !dbg !17
  store i32 %162, ptr %164, align 4, !dbg !17
  %indvars.iv.next888 = add nuw nsw i64 %indvars.iv887, 1, !dbg !17
  %exitcond889.not = icmp eq i64 %indvars.iv.next888, 6, !dbg !17
  br i1 %exitcond889.not, label %165, label %158, !dbg !17, !llvm.loop !21

165:                                              ; preds = %158
  %166 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !17
  store i32 %163, ptr %166, align 4, !dbg !17
  %167 = and i32 %152, 31, !dbg !17
  %168 = sub nsw i32 6, %157, !dbg !17
  %169 = sext i32 %168 to i64, !dbg !17
  %170 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %169, !dbg !17
  %171 = load i32, ptr %170, align 4, !dbg !17
  %172 = sub nsw i32 5, %157, !dbg !17
  %173 = sext i32 %172 to i64, !dbg !17
  %174 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %173, !dbg !17
  %175 = load i32, ptr %174, align 4, !dbg !17
  %.not20.i17 = icmp eq i32 %167, 0, !dbg !17
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %176, !dbg !17

176:                                              ; preds = %165
  %177 = sub nsw i32 4, %157, !dbg !17
  %178 = sub nuw nsw i32 32, %167, !dbg !17
  %179 = shl i32 %171, %167, !dbg !17
  %180 = lshr i32 %175, %178, !dbg !17
  %181 = add i32 %180, %179, !dbg !17
  %182 = shl i32 %175, %167, !dbg !17
  %183 = sext i32 %177 to i64, !dbg !17
  %184 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %183, !dbg !17
  %185 = load i32, ptr %184, align 4, !dbg !17
  %186 = lshr i32 %185, %178, !dbg !17
  %187 = add i32 %186, %182, !dbg !17
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !17

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %176, %165
  %hi.i.i.i.1.i19 = phi i32 [ %181, %176 ], [ %171, %165 ], !dbg !17
  %lo.i.i.i.0.i20 = phi i32 [ %187, %176 ], [ %175, %165 ], !dbg !17
  %188 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !17
  %189 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !17
  %190 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !17
  %191 = lshr i32 %189, 31, !dbg !17
  %192 = add nuw nsw i32 %191, %188, !dbg !17
  %193 = sub nsw i32 0, %192, !dbg !17
  %.not2123.i21 = icmp slt i32 %23, 0, !dbg !17
  %spec.select.i22 = select i1 %.not2123.i21, i32 %193, i32 %192, !dbg !17
  %194 = xor i32 %189, %23, !dbg !17
  %.lobit.i23 = ashr i32 %189, 31, !dbg !17
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %189, !dbg !17
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %190, !dbg !17
  %195 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !17
  %196 = shl nuw i64 %195, 32, !dbg !17
  %197 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !17
  %198 = or disjoint i64 %196, %197, !dbg !17
  %199 = sitofp i64 %198 to double, !dbg !17
  %200 = fmul double %199, 0x3BF921FB54442D19, !dbg !17
  %201 = fptrunc double %200 to float, !dbg !17
  %202 = fneg float %201, !dbg !17
  %.not2526.i27 = icmp slt i32 %194, 0, !dbg !17
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %202, float %201, !dbg !17
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !17

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !17
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !17
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not28.i32 = icmp eq i32 %203, 0, !dbg !17
  %204 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !17
  %205 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !17
  %.011.i33 = select i1 %.not28.i32, float %205, float %204, !dbg !17
  %206 = and i32 %i.i.1.i30, 1, !dbg !17
  %.not29.i34 = icmp eq i32 %206, 0, !dbg !17
  %207 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !17
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not30.i35 = icmp eq i32 %208, 0, !dbg !17
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %207, float 0.000000e+00) #5, !dbg !17
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %207, float 0.000000e+00) #5, !dbg !17
  %.012.i36 = select i1 %.not30.i35, float %210, float %209, !dbg !17
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !17

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not31.i38 = icmp eq i32 %211, 0, !dbg !17
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !17
  %213 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !17
  %.013.i39 = select i1 %.not31.i38, float %213, float %212, !dbg !17
  br label %__internal_fmad.exit2.i.i.i40, !dbg !17

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %214 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !17
  %215 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !17
  %216 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !17
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not32.i41 = icmp eq i32 %217, 0, !dbg !17
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %216, float %.011.i33, float %215) #5, !dbg !17
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %216, float %.011.i33, float %215) #5, !dbg !17
  %.010.i42 = select i1 %.not32.i41, float %219, float %218, !dbg !17
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not33.i43 = icmp eq i32 %220, 0, !dbg !17
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %214) #5, !dbg !17
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %214) #5, !dbg !17
  %.09.i44 = select i1 %.not33.i43, float %222, float %221, !dbg !17
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not34.i45 = icmp eq i32 %223, 0, !dbg !17
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %207) #5, !dbg !17
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %207) #5, !dbg !17
  %.05.i46 = select i1 %.not34.i45, float %225, float %224, !dbg !17
  %226 = and i32 %i.i.1.i30, 2, !dbg !17
  %.not35.i47 = icmp eq i32 %226, 0, !dbg !17
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !17

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !17
  %.not36.i49 = icmp eq i32 %227, 0, !dbg !17
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #5, !dbg !17
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #5, !dbg !17
  %.0.i50 = select i1 %.not36.i49, float %229, float %228, !dbg !17
  br label %__nv_sinf.exit55, !dbg !17

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !17
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !17
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !22
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not.i387 = icmp eq i32 %230, 0, !dbg !22
  %.01.i388 = select i1 %.not.i387, i32 %29, i32 %28, !dbg !22
  %231 = sitofp i32 %.01.i388 to float, !dbg !22
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not15.i389 = icmp eq i32 %232, 0, !dbg !22
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %231, float 0xBFF921FB40000000, float %24) #5, !dbg !22
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %231, float 0xBFF921FB40000000, float %24) #5, !dbg !22
  %.02.i390 = select i1 %.not15.i389, float %234, float %233, !dbg !22
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not16.i391 = icmp eq i32 %235, 0, !dbg !22
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %231, float 0xBE74442D00000000, float %.02.i390) #5, !dbg !22
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %231, float 0xBE74442D00000000, float %.02.i390) #5, !dbg !22
  %.03.i392 = select i1 %.not16.i391, float %237, float %236, !dbg !22
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not17.i393 = icmp eq i32 %238, 0, !dbg !22
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %231, float 0xBCF84698A0000000, float %.03.i392) #5, !dbg !22
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %231, float 0xBCF84698A0000000, float %.03.i392) #5, !dbg !22
  %.04.i394 = select i1 %.not17.i393, float %240, float %239, !dbg !22
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not18.i395 = icmp eq i32 %241, 0, !dbg !22
  %.06.i396 = select i1 %.not18.i395, float %42, float %41, !dbg !22
  %242 = fcmp ult float %.06.i396, 1.056150e+05, !dbg !22
  br i1 %242, label %__internal_trig_reduction_kernel.exit.i.i414, label %__nv_isinff.exit.i.i.i397, !dbg !22

__nv_isinff.exit.i.i.i397:                        ; preds = %__nv_sinf.exit55
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not19.i398 = icmp eq i32 %243, 0, !dbg !22
  %.07.i399 = select i1 %.not19.i398, float %42, float %41, !dbg !22
  %244 = fcmp oeq float %.07.i399, 0x7FF0000000000000, !dbg !22
  br i1 %244, label %__nv_fmul_rn.exit.i.i.i436, label %248, !dbg !22

__nv_fmul_rn.exit.i.i.i436:                       ; preds = %__nv_isinff.exit.i.i.i397
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not27.i437 = icmp eq i32 %245, 0, !dbg !22
  %246 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %24, float 0.000000e+00) #5, !dbg !22
  %247 = tail call float @llvm.nvvm.mul.rn.f(float %24, float 0.000000e+00) #5, !dbg !22
  %.08.i438 = select i1 %.not27.i437, float %247, float %246, !dbg !22
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !22

248:                                              ; preds = %__nv_isinff.exit.i.i.i397
  %249 = lshr i32 %22, 23, !dbg !22
  %250 = and i32 %249, 224, !dbg !22
  %251 = add nsw i32 %250, -128, !dbg !22
  %252 = shl i32 %22, 8, !dbg !22
  %253 = or i32 %252, -2147483648, !dbg !22
  %254 = lshr exact i32 %251, 5, !dbg !22
  br label %255, !dbg !22

255:                                              ; preds = %248, %255
  %indvars.iv890 = phi i64 [ 0, %248 ], [ %indvars.iv.next891, %255 ]
  %hi.i.i.i.0.i400828 = phi i32 [ 0, %248 ], [ %260, %255 ]
  %256 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv890, !dbg !22
  %257 = load i32, ptr addrspace(1) %256, align 4, !dbg !22
  %258 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %257, i32 %253, i32 %hi.i.i.i.0.i400828) #6, !dbg !22, !srcloc !18
  %259 = extractvalue { i32, i32 } %258, 0, !dbg !22
  %260 = extractvalue { i32, i32 } %258, 1, !dbg !22
  %261 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %indvars.iv890, !dbg !22
  store i32 %259, ptr %261, align 4, !dbg !22
  %indvars.iv.next891 = add nuw nsw i64 %indvars.iv890, 1, !dbg !22
  %exitcond892.not = icmp eq i64 %indvars.iv.next891, 6, !dbg !22
  br i1 %exitcond892.not, label %262, label %255, !dbg !22, !llvm.loop !23

262:                                              ; preds = %255
  %263 = getelementptr inbounds i8, ptr %result.i.i.i.i386, i64 24, !dbg !22
  store i32 %260, ptr %263, align 4, !dbg !22
  %264 = and i32 %249, 31, !dbg !22
  %265 = sub nsw i32 6, %254, !dbg !22
  %266 = sext i32 %265 to i64, !dbg !22
  %267 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %266, !dbg !22
  %268 = load i32, ptr %267, align 4, !dbg !22
  %269 = sub nsw i32 5, %254, !dbg !22
  %270 = sext i32 %269 to i64, !dbg !22
  %271 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %270, !dbg !22
  %272 = load i32, ptr %271, align 4, !dbg !22
  %.not20.i402 = icmp eq i32 %264, 0, !dbg !22
  br i1 %.not20.i402, label %__internal_trig_reduction_slowpath.exit.i.i.i403, label %273, !dbg !22

273:                                              ; preds = %262
  %274 = sub nsw i32 4, %254, !dbg !22
  %275 = sub nuw nsw i32 32, %264, !dbg !22
  %276 = shl i32 %268, %264, !dbg !22
  %277 = lshr i32 %272, %275, !dbg !22
  %278 = add i32 %277, %276, !dbg !22
  %279 = shl i32 %272, %264, !dbg !22
  %280 = sext i32 %274 to i64, !dbg !22
  %281 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i386, i64 0, i64 %280, !dbg !22
  %282 = load i32, ptr %281, align 4, !dbg !22
  %283 = lshr i32 %282, %275, !dbg !22
  %284 = add i32 %283, %279, !dbg !22
  br label %__internal_trig_reduction_slowpath.exit.i.i.i403, !dbg !22

__internal_trig_reduction_slowpath.exit.i.i.i403: ; preds = %273, %262
  %hi.i.i.i.1.i404 = phi i32 [ %278, %273 ], [ %268, %262 ], !dbg !22
  %lo.i.i.i.0.i405 = phi i32 [ %284, %273 ], [ %272, %262 ], !dbg !22
  %285 = lshr i32 %hi.i.i.i.1.i404, 30, !dbg !22
  %286 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i404, i32 %lo.i.i.i.0.i405, i32 2), !dbg !22
  %287 = shl i32 %lo.i.i.i.0.i405, 2, !dbg !22
  %288 = lshr i32 %286, 31, !dbg !22
  %289 = add nuw nsw i32 %288, %285, !dbg !22
  %290 = sub nsw i32 0, %289, !dbg !22
  %.not2123.i406 = icmp slt i32 %22, 0, !dbg !22
  %spec.select.i407 = select i1 %.not2123.i406, i32 %290, i32 %289, !dbg !22
  %291 = xor i32 %286, %22, !dbg !22
  %.lobit.i408 = ashr i32 %286, 31, !dbg !22
  %hi.i.i.i.2.i409 = xor i32 %.lobit.i408, %286, !dbg !22
  %lo.i.i.i.1.i411 = xor i32 %.lobit.i408, %287, !dbg !22
  %292 = zext i32 %hi.i.i.i.2.i409 to i64, !dbg !22
  %293 = shl nuw i64 %292, 32, !dbg !22
  %294 = zext i32 %lo.i.i.i.1.i411 to i64, !dbg !22
  %295 = or disjoint i64 %293, %294, !dbg !22
  %296 = sitofp i64 %295 to double, !dbg !22
  %297 = fmul double %296, 0x3BF921FB54442D19, !dbg !22
  %298 = fptrunc double %297 to float, !dbg !22
  %299 = fneg float %298, !dbg !22
  %.not2526.i412 = icmp slt i32 %291, 0, !dbg !22
  %r.i.i.i.0.i413 = select i1 %.not2526.i412, float %299, float %298, !dbg !22
  br label %__internal_trig_reduction_kernel.exit.i.i414, !dbg !22

__internal_trig_reduction_kernel.exit.i.i414:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i403, %__nv_fmul_rn.exit.i.i.i436, %__nv_sinf.exit55
  %i.i.1.i415 = phi i32 [ %.01.i388, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i436 ], [ %spec.select.i407, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !22
  %t.i.i.1.i416 = phi float [ %.04.i394, %__nv_sinf.exit55 ], [ %.08.i438, %__nv_fmul_rn.exit.i.i.i436 ], [ %r.i.i.i.0.i413, %__internal_trig_reduction_slowpath.exit.i.i.i403 ], !dbg !22
  %300 = add i32 %i.i.1.i415, 1, !dbg !22
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not28.i417 = icmp eq i32 %301, 0, !dbg !22
  %302 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #5, !dbg !22
  %303 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i416, float %t.i.i.1.i416) #5, !dbg !22
  %.011.i418 = select i1 %.not28.i417, float %303, float %302, !dbg !22
  %304 = and i32 %i.i.1.i415, 1, !dbg !22
  %.not29.not.i = icmp eq i32 %304, 0, !dbg !22
  %305 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i416, !dbg !22
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not30.i419 = icmp eq i32 %306, 0, !dbg !22
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i418, float %305, float 0.000000e+00) #5, !dbg !22
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i418, float %305, float 0.000000e+00) #5, !dbg !22
  %.012.i420 = select i1 %.not30.i419, float %308, float %307, !dbg !22
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i433, label %__internal_fmad.exit2.i.i.i421, !dbg !22

__internal_fmad.exit1.i.i.i433:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i414
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not31.i434 = icmp eq i32 %309, 0, !dbg !22
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #5, !dbg !22
  %311 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i418, float 0xBF56C0FDA0000000) #5, !dbg !22
  %.013.i435 = select i1 %.not31.i434, float %311, float %310, !dbg !22
  br label %__internal_fmad.exit2.i.i.i421, !dbg !22

__internal_fmad.exit2.i.i.i421:                   ; preds = %__internal_fmad.exit1.i.i.i433, %__internal_trig_reduction_kernel.exit.i.i414
  %312 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i433 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !22
  %313 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i433 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !22
  %314 = phi float [ %.013.i435, %__internal_fmad.exit1.i.i.i433 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i414 ], !dbg !22
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not32.i422 = icmp eq i32 %315, 0, !dbg !22
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %314, float %.011.i418, float %313) #5, !dbg !22
  %317 = tail call float @llvm.nvvm.fma.rn.f(float %314, float %.011.i418, float %313) #5, !dbg !22
  %.010.i423 = select i1 %.not32.i422, float %317, float %316, !dbg !22
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not33.i424 = icmp eq i32 %318, 0, !dbg !22
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i423, float %.011.i418, float %312) #5, !dbg !22
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i423, float %.011.i418, float %312) #5, !dbg !22
  %.09.i425 = select i1 %.not33.i424, float %320, float %319, !dbg !22
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not34.i426 = icmp eq i32 %321, 0, !dbg !22
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i425, float %.012.i420, float %305) #5, !dbg !22
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i425, float %.012.i420, float %305) #5, !dbg !22
  %.05.i427 = select i1 %.not34.i426, float %323, float %322, !dbg !22
  %324 = and i32 %300, 2, !dbg !22
  %.not35.i428 = icmp eq i32 %324, 0, !dbg !22
  br i1 %.not35.i428, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i429, !dbg !22

__internal_fmad.exit5.i.i.i429:                   ; preds = %__internal_fmad.exit2.i.i.i421
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not36.i430 = icmp eq i32 %325, 0, !dbg !22
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #5, !dbg !22
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i427, float -1.000000e+00, float 0.000000e+00) #5, !dbg !22
  %.0.i431 = select i1 %.not36.i430, float %327, float %326, !dbg !22
  br label %__nv_cosf.exit, !dbg !22

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i421, %__internal_fmad.exit5.i.i.i429
  %z.i.i.0.i432 = phi float [ %.0.i431, %__internal_fmad.exit5.i.i.i429 ], [ %.05.i427, %__internal_fmad.exit2.i.i.i421 ], !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i386), !dbg !22
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !22
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not.i440 = icmp eq i32 %328, 0, !dbg !22
  %.01.i441 = select i1 %.not.i440, i32 %131, i32 %130, !dbg !22
  %329 = sitofp i32 %.01.i441 to float, !dbg !22
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not15.i442 = icmp eq i32 %330, 0, !dbg !22
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %329, float 0xBFF921FB40000000, float %25) #5, !dbg !22
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %329, float 0xBFF921FB40000000, float %25) #5, !dbg !22
  %.02.i443 = select i1 %.not15.i442, float %332, float %331, !dbg !22
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not16.i444 = icmp eq i32 %333, 0, !dbg !22
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %329, float 0xBE74442D00000000, float %.02.i443) #5, !dbg !22
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %329, float 0xBE74442D00000000, float %.02.i443) #5, !dbg !22
  %.03.i445 = select i1 %.not16.i444, float %335, float %334, !dbg !22
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not17.i446 = icmp eq i32 %336, 0, !dbg !22
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %329, float 0xBCF84698A0000000, float %.03.i445) #5, !dbg !22
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %329, float 0xBCF84698A0000000, float %.03.i445) #5, !dbg !22
  %.04.i447 = select i1 %.not17.i446, float %338, float %337, !dbg !22
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not18.i448 = icmp eq i32 %339, 0, !dbg !22
  %.06.i449 = select i1 %.not18.i448, float %144, float %143, !dbg !22
  %340 = fcmp ult float %.06.i449, 1.056150e+05, !dbg !22
  br i1 %340, label %__internal_trig_reduction_kernel.exit.i.i467, label %__nv_isinff.exit.i.i.i450, !dbg !22

__nv_isinff.exit.i.i.i450:                        ; preds = %__nv_cosf.exit
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not19.i451 = icmp eq i32 %341, 0, !dbg !22
  %.07.i452 = select i1 %.not19.i451, float %144, float %143, !dbg !22
  %342 = fcmp oeq float %.07.i452, 0x7FF0000000000000, !dbg !22
  br i1 %342, label %__nv_fmul_rn.exit.i.i.i490, label %346, !dbg !22

__nv_fmul_rn.exit.i.i.i490:                       ; preds = %__nv_isinff.exit.i.i.i450
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not27.i491 = icmp eq i32 %343, 0, !dbg !22
  %344 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %25, float 0.000000e+00) #5, !dbg !22
  %345 = tail call float @llvm.nvvm.mul.rn.f(float %25, float 0.000000e+00) #5, !dbg !22
  %.08.i492 = select i1 %.not27.i491, float %345, float %344, !dbg !22
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !22

346:                                              ; preds = %__nv_isinff.exit.i.i.i450
  %347 = lshr i32 %23, 23, !dbg !22
  %348 = and i32 %347, 224, !dbg !22
  %349 = add nsw i32 %348, -128, !dbg !22
  %350 = shl i32 %23, 8, !dbg !22
  %351 = or i32 %350, -2147483648, !dbg !22
  %352 = lshr exact i32 %349, 5, !dbg !22
  br label %353, !dbg !22

353:                                              ; preds = %346, %353
  %indvars.iv893 = phi i64 [ 0, %346 ], [ %indvars.iv.next894, %353 ]
  %hi.i.i.i.0.i453830 = phi i32 [ 0, %346 ], [ %358, %353 ]
  %354 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv893, !dbg !22
  %355 = load i32, ptr addrspace(1) %354, align 4, !dbg !22
  %356 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %355, i32 %351, i32 %hi.i.i.i.0.i453830) #6, !dbg !22, !srcloc !18
  %357 = extractvalue { i32, i32 } %356, 0, !dbg !22
  %358 = extractvalue { i32, i32 } %356, 1, !dbg !22
  %359 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %indvars.iv893, !dbg !22
  store i32 %357, ptr %359, align 4, !dbg !22
  %indvars.iv.next894 = add nuw nsw i64 %indvars.iv893, 1, !dbg !22
  %exitcond895.not = icmp eq i64 %indvars.iv.next894, 6, !dbg !22
  br i1 %exitcond895.not, label %360, label %353, !dbg !22, !llvm.loop !24

360:                                              ; preds = %353
  %361 = getelementptr inbounds i8, ptr %result.i.i.i.i439, i64 24, !dbg !22
  store i32 %358, ptr %361, align 4, !dbg !22
  %362 = and i32 %347, 31, !dbg !22
  %363 = sub nsw i32 6, %352, !dbg !22
  %364 = sext i32 %363 to i64, !dbg !22
  %365 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %364, !dbg !22
  %366 = load i32, ptr %365, align 4, !dbg !22
  %367 = sub nsw i32 5, %352, !dbg !22
  %368 = sext i32 %367 to i64, !dbg !22
  %369 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %368, !dbg !22
  %370 = load i32, ptr %369, align 4, !dbg !22
  %.not20.i455 = icmp eq i32 %362, 0, !dbg !22
  br i1 %.not20.i455, label %__internal_trig_reduction_slowpath.exit.i.i.i456, label %371, !dbg !22

371:                                              ; preds = %360
  %372 = sub nsw i32 4, %352, !dbg !22
  %373 = sub nuw nsw i32 32, %362, !dbg !22
  %374 = shl i32 %366, %362, !dbg !22
  %375 = lshr i32 %370, %373, !dbg !22
  %376 = add i32 %375, %374, !dbg !22
  %377 = shl i32 %370, %362, !dbg !22
  %378 = sext i32 %372 to i64, !dbg !22
  %379 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i439, i64 0, i64 %378, !dbg !22
  %380 = load i32, ptr %379, align 4, !dbg !22
  %381 = lshr i32 %380, %373, !dbg !22
  %382 = add i32 %381, %377, !dbg !22
  br label %__internal_trig_reduction_slowpath.exit.i.i.i456, !dbg !22

__internal_trig_reduction_slowpath.exit.i.i.i456: ; preds = %371, %360
  %hi.i.i.i.1.i457 = phi i32 [ %376, %371 ], [ %366, %360 ], !dbg !22
  %lo.i.i.i.0.i458 = phi i32 [ %382, %371 ], [ %370, %360 ], !dbg !22
  %383 = lshr i32 %hi.i.i.i.1.i457, 30, !dbg !22
  %384 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i457, i32 %lo.i.i.i.0.i458, i32 2), !dbg !22
  %385 = shl i32 %lo.i.i.i.0.i458, 2, !dbg !22
  %386 = lshr i32 %384, 31, !dbg !22
  %387 = add nuw nsw i32 %386, %383, !dbg !22
  %388 = sub nsw i32 0, %387, !dbg !22
  %.not2123.i459 = icmp slt i32 %23, 0, !dbg !22
  %spec.select.i460 = select i1 %.not2123.i459, i32 %388, i32 %387, !dbg !22
  %389 = xor i32 %384, %23, !dbg !22
  %.lobit.i461 = ashr i32 %384, 31, !dbg !22
  %hi.i.i.i.2.i462 = xor i32 %.lobit.i461, %384, !dbg !22
  %lo.i.i.i.1.i464 = xor i32 %.lobit.i461, %385, !dbg !22
  %390 = zext i32 %hi.i.i.i.2.i462 to i64, !dbg !22
  %391 = shl nuw i64 %390, 32, !dbg !22
  %392 = zext i32 %lo.i.i.i.1.i464 to i64, !dbg !22
  %393 = or disjoint i64 %391, %392, !dbg !22
  %394 = sitofp i64 %393 to double, !dbg !22
  %395 = fmul double %394, 0x3BF921FB54442D19, !dbg !22
  %396 = fptrunc double %395 to float, !dbg !22
  %397 = fneg float %396, !dbg !22
  %.not2526.i465 = icmp slt i32 %389, 0, !dbg !22
  %r.i.i.i.0.i466 = select i1 %.not2526.i465, float %397, float %396, !dbg !22
  br label %__internal_trig_reduction_kernel.exit.i.i467, !dbg !22

__internal_trig_reduction_kernel.exit.i.i467:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i456, %__nv_fmul_rn.exit.i.i.i490, %__nv_cosf.exit
  %i.i.1.i468 = phi i32 [ %.01.i441, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i490 ], [ %spec.select.i460, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !22
  %t.i.i.1.i469 = phi float [ %.04.i447, %__nv_cosf.exit ], [ %.08.i492, %__nv_fmul_rn.exit.i.i.i490 ], [ %r.i.i.i.0.i466, %__internal_trig_reduction_slowpath.exit.i.i.i456 ], !dbg !22
  %398 = add i32 %i.i.1.i468, 1, !dbg !22
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not28.i470 = icmp eq i32 %399, 0, !dbg !22
  %400 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #5, !dbg !22
  %401 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i469, float %t.i.i.1.i469) #5, !dbg !22
  %.011.i471 = select i1 %.not28.i470, float %401, float %400, !dbg !22
  %402 = and i32 %i.i.1.i468, 1, !dbg !22
  %.not29.not.i472 = icmp eq i32 %402, 0, !dbg !22
  %403 = select i1 %.not29.not.i472, float 1.000000e+00, float %t.i.i.1.i469, !dbg !22
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not30.i473 = icmp eq i32 %404, 0, !dbg !22
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i471, float %403, float 0.000000e+00) #5, !dbg !22
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i471, float %403, float 0.000000e+00) #5, !dbg !22
  %.012.i474 = select i1 %.not30.i473, float %406, float %405, !dbg !22
  br i1 %.not29.not.i472, label %__internal_fmad.exit1.i.i.i487, label %__internal_fmad.exit2.i.i.i475, !dbg !22

__internal_fmad.exit1.i.i.i487:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i467
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not31.i488 = icmp eq i32 %407, 0, !dbg !22
  %408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #5, !dbg !22
  %409 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i471, float 0xBF56C0FDA0000000) #5, !dbg !22
  %.013.i489 = select i1 %.not31.i488, float %409, float %408, !dbg !22
  br label %__internal_fmad.exit2.i.i.i475, !dbg !22

__internal_fmad.exit2.i.i.i475:                   ; preds = %__internal_fmad.exit1.i.i.i487, %__internal_trig_reduction_kernel.exit.i.i467
  %410 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i487 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !22
  %411 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i487 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !22
  %412 = phi float [ %.013.i489, %__internal_fmad.exit1.i.i.i487 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i467 ], !dbg !22
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not32.i476 = icmp eq i32 %413, 0, !dbg !22
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %412, float %.011.i471, float %411) #5, !dbg !22
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %412, float %.011.i471, float %411) #5, !dbg !22
  %.010.i477 = select i1 %.not32.i476, float %415, float %414, !dbg !22
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not33.i478 = icmp eq i32 %416, 0, !dbg !22
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i477, float %.011.i471, float %410) #5, !dbg !22
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i477, float %.011.i471, float %410) #5, !dbg !22
  %.09.i479 = select i1 %.not33.i478, float %418, float %417, !dbg !22
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not34.i480 = icmp eq i32 %419, 0, !dbg !22
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i479, float %.012.i474, float %403) #5, !dbg !22
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i479, float %.012.i474, float %403) #5, !dbg !22
  %.05.i481 = select i1 %.not34.i480, float %421, float %420, !dbg !22
  %422 = and i32 %398, 2, !dbg !22
  %.not35.i482 = icmp eq i32 %422, 0, !dbg !22
  br i1 %.not35.i482, label %__nv_cosf.exit493, label %__internal_fmad.exit5.i.i.i483, !dbg !22

__internal_fmad.exit5.i.i.i483:                   ; preds = %__internal_fmad.exit2.i.i.i475
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !22
  %.not36.i484 = icmp eq i32 %423, 0, !dbg !22
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #5, !dbg !22
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i481, float -1.000000e+00, float 0.000000e+00) #5, !dbg !22
  %.0.i485 = select i1 %.not36.i484, float %425, float %424, !dbg !22
  br label %__nv_cosf.exit493, !dbg !22

__nv_cosf.exit493:                                ; preds = %__internal_fmad.exit2.i.i.i475, %__internal_fmad.exit5.i.i.i483
  %z.i.i.0.i486 = phi float [ %.0.i485, %__internal_fmad.exit5.i.i.i483 ], [ %.05.i481, %__internal_fmad.exit2.i.i.i475 ], !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i439), !dbg !22
  %426 = fmul float %24, 0x400428A300000000, !dbg !25
  %427 = fmul float %25, 0x400428A300000000, !dbg !25
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !26
  %428 = fmul float %426, 0x3FE45F3060000000, !dbg !26
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not.i57 = icmp eq i32 %429, 0, !dbg !26
  %430 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %428) #5, !dbg !26
  %431 = tail call i32 @llvm.nvvm.f2i.rn(float %428) #5, !dbg !26
  %.01.i58 = select i1 %.not.i57, i32 %431, i32 %430, !dbg !26
  %432 = sitofp i32 %.01.i58 to float, !dbg !26
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not15.i59 = icmp eq i32 %433, 0, !dbg !26
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float 0xBFF921FB40000000, float %426) #5, !dbg !26
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %432, float 0xBFF921FB40000000, float %426) #5, !dbg !26
  %.02.i60 = select i1 %.not15.i59, float %435, float %434, !dbg !26
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not16.i61 = icmp eq i32 %436, 0, !dbg !26
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float 0xBE74442D00000000, float %.02.i60) #5, !dbg !26
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %432, float 0xBE74442D00000000, float %.02.i60) #5, !dbg !26
  %.03.i62 = select i1 %.not16.i61, float %438, float %437, !dbg !26
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not17.i63 = icmp eq i32 %439, 0, !dbg !26
  %440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float 0xBCF84698A0000000, float %.03.i62) #5, !dbg !26
  %441 = tail call float @llvm.nvvm.fma.rn.f(float %432, float 0xBCF84698A0000000, float %.03.i62) #5, !dbg !26
  %.04.i64 = select i1 %.not17.i63, float %441, float %440, !dbg !26
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not18.i65 = icmp eq i32 %442, 0, !dbg !26
  %443 = tail call float @llvm.nvvm.fabs.ftz.f(float %426) #5, !dbg !26
  %444 = tail call float @llvm.nvvm.fabs.f(float %426) #5, !dbg !26
  %.06.i66 = select i1 %.not18.i65, float %444, float %443, !dbg !26
  %445 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !26
  br i1 %445, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !26

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_cosf.exit493
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not19.i68 = icmp eq i32 %446, 0, !dbg !26
  %.07.i69 = select i1 %.not19.i68, float %444, float %443, !dbg !26
  %447 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !26
  br i1 %447, label %__nv_fmul_rn.exit.i.i.i107, label %451, !dbg !26

__nv_fmul_rn.exit.i.i.i107:                       ; preds = %__nv_isinff.exit.i.i.i67
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not27.i108 = icmp eq i32 %448, 0, !dbg !26
  %449 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %426, float 0.000000e+00) #5, !dbg !26
  %450 = tail call float @llvm.nvvm.mul.rn.f(float %426, float 0.000000e+00) #5, !dbg !26
  %.08.i109 = select i1 %.not27.i108, float %450, float %449, !dbg !26
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !26

451:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %452 = bitcast float %426 to i32, !dbg !26
  %453 = lshr i32 %452, 23, !dbg !26
  %454 = and i32 %453, 224, !dbg !26
  %455 = add nsw i32 %454, -128, !dbg !26
  %456 = shl i32 %452, 8, !dbg !26
  %457 = or i32 %456, -2147483648, !dbg !26
  %458 = lshr exact i32 %455, 5, !dbg !26
  br label %459, !dbg !26

459:                                              ; preds = %451, %459
  %indvars.iv896 = phi i64 [ 0, %451 ], [ %indvars.iv.next897, %459 ]
  %hi.i.i.i.0.i70832 = phi i32 [ 0, %451 ], [ %464, %459 ]
  %460 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv896, !dbg !26
  %461 = load i32, ptr addrspace(1) %460, align 4, !dbg !26
  %462 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %461, i32 %457, i32 %hi.i.i.i.0.i70832) #6, !dbg !26, !srcloc !18
  %463 = extractvalue { i32, i32 } %462, 0, !dbg !26
  %464 = extractvalue { i32, i32 } %462, 1, !dbg !26
  %465 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv896, !dbg !26
  store i32 %463, ptr %465, align 4, !dbg !26
  %indvars.iv.next897 = add nuw nsw i64 %indvars.iv896, 1, !dbg !26
  %exitcond898.not = icmp eq i64 %indvars.iv.next897, 6, !dbg !26
  br i1 %exitcond898.not, label %466, label %459, !dbg !26, !llvm.loop !27

466:                                              ; preds = %459
  %467 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !26
  store i32 %464, ptr %467, align 4, !dbg !26
  %468 = and i32 %453, 31, !dbg !26
  %469 = sub nsw i32 6, %458, !dbg !26
  %470 = sext i32 %469 to i64, !dbg !26
  %471 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %470, !dbg !26
  %472 = load i32, ptr %471, align 4, !dbg !26
  %473 = sub nsw i32 5, %458, !dbg !26
  %474 = sext i32 %473 to i64, !dbg !26
  %475 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %474, !dbg !26
  %476 = load i32, ptr %475, align 4, !dbg !26
  %.not20.i72 = icmp eq i32 %468, 0, !dbg !26
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %477, !dbg !26

477:                                              ; preds = %466
  %478 = sub nsw i32 4, %458, !dbg !26
  %479 = sub nuw nsw i32 32, %468, !dbg !26
  %480 = shl i32 %472, %468, !dbg !26
  %481 = lshr i32 %476, %479, !dbg !26
  %482 = add i32 %481, %480, !dbg !26
  %483 = shl i32 %476, %468, !dbg !26
  %484 = sext i32 %478 to i64, !dbg !26
  %485 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %484, !dbg !26
  %486 = load i32, ptr %485, align 4, !dbg !26
  %487 = lshr i32 %486, %479, !dbg !26
  %488 = add i32 %487, %483, !dbg !26
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !26

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %477, %466
  %hi.i.i.i.1.i74 = phi i32 [ %482, %477 ], [ %472, %466 ], !dbg !26
  %lo.i.i.i.0.i75 = phi i32 [ %488, %477 ], [ %476, %466 ], !dbg !26
  %489 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !26
  %490 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !26
  %491 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !26
  %492 = lshr i32 %490, 31, !dbg !26
  %493 = add nuw nsw i32 %492, %489, !dbg !26
  %494 = sub nsw i32 0, %493, !dbg !26
  %.not2123.i76 = icmp slt i32 %452, 0, !dbg !26
  %spec.select.i77 = select i1 %.not2123.i76, i32 %494, i32 %493, !dbg !26
  %495 = xor i32 %490, %452, !dbg !26
  %.lobit.i78 = ashr i32 %490, 31, !dbg !26
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %490, !dbg !26
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %491, !dbg !26
  %496 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !26
  %497 = shl nuw i64 %496, 32, !dbg !26
  %498 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !26
  %499 = or disjoint i64 %497, %498, !dbg !26
  %500 = sitofp i64 %499 to double, !dbg !26
  %501 = fmul double %500, 0x3BF921FB54442D19, !dbg !26
  %502 = fptrunc double %501 to float, !dbg !26
  %503 = fneg float %502, !dbg !26
  %.not2526.i82 = icmp slt i32 %495, 0, !dbg !26
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %503, float %502, !dbg !26
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !26

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i107, %__nv_cosf.exit493
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_cosf.exit493 ], [ 0, %__nv_fmul_rn.exit.i.i.i107 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !26
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_cosf.exit493 ], [ %.08.i109, %__nv_fmul_rn.exit.i.i.i107 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !26
  %504 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not28.i87 = icmp eq i32 %504, 0, !dbg !26
  %505 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #5, !dbg !26
  %506 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #5, !dbg !26
  %.011.i88 = select i1 %.not28.i87, float %506, float %505, !dbg !26
  %507 = and i32 %i.i.1.i85, 1, !dbg !26
  %.not29.i89 = icmp eq i32 %507, 0, !dbg !26
  %508 = select i1 %.not29.i89, float %t.i.i.1.i86, float 1.000000e+00, !dbg !26
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not30.i90 = icmp eq i32 %509, 0, !dbg !26
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %508, float 0.000000e+00) #5, !dbg !26
  %511 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %508, float 0.000000e+00) #5, !dbg !26
  %.012.i91 = select i1 %.not30.i90, float %511, float %510, !dbg !26
  br i1 %.not29.i89, label %__internal_fmad.exit2.i.i.i95, label %__internal_fmad.exit1.i.i.i92, !dbg !26

__internal_fmad.exit1.i.i.i92:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not31.i93 = icmp eq i32 %512, 0, !dbg !26
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #5, !dbg !26
  %514 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #5, !dbg !26
  %.013.i94 = select i1 %.not31.i93, float %514, float %513, !dbg !26
  br label %__internal_fmad.exit2.i.i.i95, !dbg !26

__internal_fmad.exit2.i.i.i95:                    ; preds = %__internal_fmad.exit1.i.i.i92, %__internal_trig_reduction_kernel.exit.i.i84
  %515 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i92 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !26
  %516 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i92 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !26
  %517 = phi float [ %.013.i94, %__internal_fmad.exit1.i.i.i92 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !26
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not32.i96 = icmp eq i32 %518, 0, !dbg !26
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %517, float %.011.i88, float %516) #5, !dbg !26
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %517, float %.011.i88, float %516) #5, !dbg !26
  %.010.i97 = select i1 %.not32.i96, float %520, float %519, !dbg !26
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not33.i98 = icmp eq i32 %521, 0, !dbg !26
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i97, float %.011.i88, float %515) #5, !dbg !26
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i97, float %.011.i88, float %515) #5, !dbg !26
  %.09.i99 = select i1 %.not33.i98, float %523, float %522, !dbg !26
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not34.i100 = icmp eq i32 %524, 0, !dbg !26
  %525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i99, float %.012.i91, float %508) #5, !dbg !26
  %526 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i99, float %.012.i91, float %508) #5, !dbg !26
  %.05.i101 = select i1 %.not34.i100, float %526, float %525, !dbg !26
  %527 = and i32 %i.i.1.i85, 2, !dbg !26
  %.not35.i102 = icmp eq i32 %527, 0, !dbg !26
  br i1 %.not35.i102, label %__nv_sinf.exit110, label %__internal_fmad.exit5.i.i.i103, !dbg !26

__internal_fmad.exit5.i.i.i103:                   ; preds = %__internal_fmad.exit2.i.i.i95
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not36.i104 = icmp eq i32 %528, 0, !dbg !26
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #5, !dbg !26
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i101, float -1.000000e+00, float 0.000000e+00) #5, !dbg !26
  %.0.i105 = select i1 %.not36.i104, float %530, float %529, !dbg !26
  br label %__nv_sinf.exit110, !dbg !26

__nv_sinf.exit110:                                ; preds = %__internal_fmad.exit2.i.i.i95, %__internal_fmad.exit5.i.i.i103
  %z.i.i.0.i106 = phi float [ %.0.i105, %__internal_fmad.exit5.i.i.i103 ], [ %.05.i101, %__internal_fmad.exit2.i.i.i95 ], !dbg !26
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !26
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !26
  %531 = fmul float %427, 0x3FE45F3060000000, !dbg !26
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not.i112 = icmp eq i32 %532, 0, !dbg !26
  %533 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %531) #5, !dbg !26
  %534 = tail call i32 @llvm.nvvm.f2i.rn(float %531) #5, !dbg !26
  %.01.i113 = select i1 %.not.i112, i32 %534, i32 %533, !dbg !26
  %535 = sitofp i32 %.01.i113 to float, !dbg !26
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not15.i114 = icmp eq i32 %536, 0, !dbg !26
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %535, float 0xBFF921FB40000000, float %427) #5, !dbg !26
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %535, float 0xBFF921FB40000000, float %427) #5, !dbg !26
  %.02.i115 = select i1 %.not15.i114, float %538, float %537, !dbg !26
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not16.i116 = icmp eq i32 %539, 0, !dbg !26
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %535, float 0xBE74442D00000000, float %.02.i115) #5, !dbg !26
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %535, float 0xBE74442D00000000, float %.02.i115) #5, !dbg !26
  %.03.i117 = select i1 %.not16.i116, float %541, float %540, !dbg !26
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not17.i118 = icmp eq i32 %542, 0, !dbg !26
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %535, float 0xBCF84698A0000000, float %.03.i117) #5, !dbg !26
  %544 = tail call float @llvm.nvvm.fma.rn.f(float %535, float 0xBCF84698A0000000, float %.03.i117) #5, !dbg !26
  %.04.i119 = select i1 %.not17.i118, float %544, float %543, !dbg !26
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not18.i120 = icmp eq i32 %545, 0, !dbg !26
  %546 = tail call float @llvm.nvvm.fabs.ftz.f(float %427) #5, !dbg !26
  %547 = tail call float @llvm.nvvm.fabs.f(float %427) #5, !dbg !26
  %.06.i121 = select i1 %.not18.i120, float %547, float %546, !dbg !26
  %548 = fcmp ult float %.06.i121, 1.056150e+05, !dbg !26
  br i1 %548, label %__internal_trig_reduction_kernel.exit.i.i139, label %__nv_isinff.exit.i.i.i122, !dbg !26

__nv_isinff.exit.i.i.i122:                        ; preds = %__nv_sinf.exit110
  %549 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not19.i123 = icmp eq i32 %549, 0, !dbg !26
  %.07.i124 = select i1 %.not19.i123, float %547, float %546, !dbg !26
  %550 = fcmp oeq float %.07.i124, 0x7FF0000000000000, !dbg !26
  br i1 %550, label %__nv_fmul_rn.exit.i.i.i162, label %554, !dbg !26

__nv_fmul_rn.exit.i.i.i162:                       ; preds = %__nv_isinff.exit.i.i.i122
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not27.i163 = icmp eq i32 %551, 0, !dbg !26
  %552 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %427, float 0.000000e+00) #5, !dbg !26
  %553 = tail call float @llvm.nvvm.mul.rn.f(float %427, float 0.000000e+00) #5, !dbg !26
  %.08.i164 = select i1 %.not27.i163, float %553, float %552, !dbg !26
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !26

554:                                              ; preds = %__nv_isinff.exit.i.i.i122
  %555 = bitcast float %427 to i32, !dbg !26
  %556 = lshr i32 %555, 23, !dbg !26
  %557 = and i32 %556, 224, !dbg !26
  %558 = add nsw i32 %557, -128, !dbg !26
  %559 = shl i32 %555, 8, !dbg !26
  %560 = or i32 %559, -2147483648, !dbg !26
  %561 = lshr exact i32 %558, 5, !dbg !26
  br label %562, !dbg !26

562:                                              ; preds = %554, %562
  %indvars.iv899 = phi i64 [ 0, %554 ], [ %indvars.iv.next900, %562 ]
  %hi.i.i.i.0.i125834 = phi i32 [ 0, %554 ], [ %567, %562 ]
  %563 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv899, !dbg !26
  %564 = load i32, ptr addrspace(1) %563, align 4, !dbg !26
  %565 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %564, i32 %560, i32 %hi.i.i.i.0.i125834) #6, !dbg !26, !srcloc !18
  %566 = extractvalue { i32, i32 } %565, 0, !dbg !26
  %567 = extractvalue { i32, i32 } %565, 1, !dbg !26
  %568 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %indvars.iv899, !dbg !26
  store i32 %566, ptr %568, align 4, !dbg !26
  %indvars.iv.next900 = add nuw nsw i64 %indvars.iv899, 1, !dbg !26
  %exitcond901.not = icmp eq i64 %indvars.iv.next900, 6, !dbg !26
  br i1 %exitcond901.not, label %569, label %562, !dbg !26, !llvm.loop !28

569:                                              ; preds = %562
  %570 = getelementptr inbounds i8, ptr %result.i.i.i.i111, i64 24, !dbg !26
  store i32 %567, ptr %570, align 4, !dbg !26
  %571 = and i32 %556, 31, !dbg !26
  %572 = sub nsw i32 6, %561, !dbg !26
  %573 = sext i32 %572 to i64, !dbg !26
  %574 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %573, !dbg !26
  %575 = load i32, ptr %574, align 4, !dbg !26
  %576 = sub nsw i32 5, %561, !dbg !26
  %577 = sext i32 %576 to i64, !dbg !26
  %578 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %577, !dbg !26
  %579 = load i32, ptr %578, align 4, !dbg !26
  %.not20.i127 = icmp eq i32 %571, 0, !dbg !26
  br i1 %.not20.i127, label %__internal_trig_reduction_slowpath.exit.i.i.i128, label %580, !dbg !26

580:                                              ; preds = %569
  %581 = sub nsw i32 4, %561, !dbg !26
  %582 = sub nuw nsw i32 32, %571, !dbg !26
  %583 = shl i32 %575, %571, !dbg !26
  %584 = lshr i32 %579, %582, !dbg !26
  %585 = add i32 %584, %583, !dbg !26
  %586 = shl i32 %579, %571, !dbg !26
  %587 = sext i32 %581 to i64, !dbg !26
  %588 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i111, i64 0, i64 %587, !dbg !26
  %589 = load i32, ptr %588, align 4, !dbg !26
  %590 = lshr i32 %589, %582, !dbg !26
  %591 = add i32 %590, %586, !dbg !26
  br label %__internal_trig_reduction_slowpath.exit.i.i.i128, !dbg !26

__internal_trig_reduction_slowpath.exit.i.i.i128: ; preds = %580, %569
  %hi.i.i.i.1.i129 = phi i32 [ %585, %580 ], [ %575, %569 ], !dbg !26
  %lo.i.i.i.0.i130 = phi i32 [ %591, %580 ], [ %579, %569 ], !dbg !26
  %592 = lshr i32 %hi.i.i.i.1.i129, 30, !dbg !26
  %593 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i129, i32 %lo.i.i.i.0.i130, i32 2), !dbg !26
  %594 = shl i32 %lo.i.i.i.0.i130, 2, !dbg !26
  %595 = lshr i32 %593, 31, !dbg !26
  %596 = add nuw nsw i32 %595, %592, !dbg !26
  %597 = sub nsw i32 0, %596, !dbg !26
  %.not2123.i131 = icmp slt i32 %555, 0, !dbg !26
  %spec.select.i132 = select i1 %.not2123.i131, i32 %597, i32 %596, !dbg !26
  %598 = xor i32 %593, %555, !dbg !26
  %.lobit.i133 = ashr i32 %593, 31, !dbg !26
  %hi.i.i.i.2.i134 = xor i32 %.lobit.i133, %593, !dbg !26
  %lo.i.i.i.1.i136 = xor i32 %.lobit.i133, %594, !dbg !26
  %599 = zext i32 %hi.i.i.i.2.i134 to i64, !dbg !26
  %600 = shl nuw i64 %599, 32, !dbg !26
  %601 = zext i32 %lo.i.i.i.1.i136 to i64, !dbg !26
  %602 = or disjoint i64 %600, %601, !dbg !26
  %603 = sitofp i64 %602 to double, !dbg !26
  %604 = fmul double %603, 0x3BF921FB54442D19, !dbg !26
  %605 = fptrunc double %604 to float, !dbg !26
  %606 = fneg float %605, !dbg !26
  %.not2526.i137 = icmp slt i32 %598, 0, !dbg !26
  %r.i.i.i.0.i138 = select i1 %.not2526.i137, float %606, float %605, !dbg !26
  br label %__internal_trig_reduction_kernel.exit.i.i139, !dbg !26

__internal_trig_reduction_kernel.exit.i.i139:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i128, %__nv_fmul_rn.exit.i.i.i162, %__nv_sinf.exit110
  %i.i.1.i140 = phi i32 [ %.01.i113, %__nv_sinf.exit110 ], [ 0, %__nv_fmul_rn.exit.i.i.i162 ], [ %spec.select.i132, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !26
  %t.i.i.1.i141 = phi float [ %.04.i119, %__nv_sinf.exit110 ], [ %.08.i164, %__nv_fmul_rn.exit.i.i.i162 ], [ %r.i.i.i.0.i138, %__internal_trig_reduction_slowpath.exit.i.i.i128 ], !dbg !26
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not28.i142 = icmp eq i32 %607, 0, !dbg !26
  %608 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #5, !dbg !26
  %609 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i141, float %t.i.i.1.i141) #5, !dbg !26
  %.011.i143 = select i1 %.not28.i142, float %609, float %608, !dbg !26
  %610 = and i32 %i.i.1.i140, 1, !dbg !26
  %.not29.i144 = icmp eq i32 %610, 0, !dbg !26
  %611 = select i1 %.not29.i144, float %t.i.i.1.i141, float 1.000000e+00, !dbg !26
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not30.i145 = icmp eq i32 %612, 0, !dbg !26
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i143, float %611, float 0.000000e+00) #5, !dbg !26
  %614 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i143, float %611, float 0.000000e+00) #5, !dbg !26
  %.012.i146 = select i1 %.not30.i145, float %614, float %613, !dbg !26
  br i1 %.not29.i144, label %__internal_fmad.exit2.i.i.i150, label %__internal_fmad.exit1.i.i.i147, !dbg !26

__internal_fmad.exit1.i.i.i147:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i139
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not31.i148 = icmp eq i32 %615, 0, !dbg !26
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #5, !dbg !26
  %617 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i143, float 0xBF56C0FDA0000000) #5, !dbg !26
  %.013.i149 = select i1 %.not31.i148, float %617, float %616, !dbg !26
  br label %__internal_fmad.exit2.i.i.i150, !dbg !26

__internal_fmad.exit2.i.i.i150:                   ; preds = %__internal_fmad.exit1.i.i.i147, %__internal_trig_reduction_kernel.exit.i.i139
  %618 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i147 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !26
  %619 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i147 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !26
  %620 = phi float [ %.013.i149, %__internal_fmad.exit1.i.i.i147 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i139 ], !dbg !26
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not32.i151 = icmp eq i32 %621, 0, !dbg !26
  %622 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %620, float %.011.i143, float %619) #5, !dbg !26
  %623 = tail call float @llvm.nvvm.fma.rn.f(float %620, float %.011.i143, float %619) #5, !dbg !26
  %.010.i152 = select i1 %.not32.i151, float %623, float %622, !dbg !26
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not33.i153 = icmp eq i32 %624, 0, !dbg !26
  %625 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i152, float %.011.i143, float %618) #5, !dbg !26
  %626 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i152, float %.011.i143, float %618) #5, !dbg !26
  %.09.i154 = select i1 %.not33.i153, float %626, float %625, !dbg !26
  %627 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not34.i155 = icmp eq i32 %627, 0, !dbg !26
  %628 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i154, float %.012.i146, float %611) #5, !dbg !26
  %629 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i154, float %.012.i146, float %611) #5, !dbg !26
  %.05.i156 = select i1 %.not34.i155, float %629, float %628, !dbg !26
  %630 = and i32 %i.i.1.i140, 2, !dbg !26
  %.not35.i157 = icmp eq i32 %630, 0, !dbg !26
  br i1 %.not35.i157, label %__nv_sinf.exit165, label %__internal_fmad.exit5.i.i.i158, !dbg !26

__internal_fmad.exit5.i.i.i158:                   ; preds = %__internal_fmad.exit2.i.i.i150
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !26
  %.not36.i159 = icmp eq i32 %631, 0, !dbg !26
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #5, !dbg !26
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i156, float -1.000000e+00, float 0.000000e+00) #5, !dbg !26
  %.0.i160 = select i1 %.not36.i159, float %633, float %632, !dbg !26
  br label %__nv_sinf.exit165, !dbg !26

__nv_sinf.exit165:                                ; preds = %__internal_fmad.exit2.i.i.i150, %__internal_fmad.exit5.i.i.i158
  %z.i.i.0.i161 = phi float [ %.0.i160, %__internal_fmad.exit5.i.i.i158 ], [ %.05.i156, %__internal_fmad.exit2.i.i.i150 ], !dbg !26
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i111), !dbg !26
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !29
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i495 = icmp eq i32 %634, 0, !dbg !29
  %.01.i496 = select i1 %.not.i495, i32 %431, i32 %430, !dbg !29
  %635 = sitofp i32 %.01.i496 to float, !dbg !29
  %636 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not15.i497 = icmp eq i32 %636, 0, !dbg !29
  %637 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %635, float 0xBFF921FB40000000, float %426) #5, !dbg !29
  %638 = tail call float @llvm.nvvm.fma.rn.f(float %635, float 0xBFF921FB40000000, float %426) #5, !dbg !29
  %.02.i498 = select i1 %.not15.i497, float %638, float %637, !dbg !29
  %639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not16.i499 = icmp eq i32 %639, 0, !dbg !29
  %640 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %635, float 0xBE74442D00000000, float %.02.i498) #5, !dbg !29
  %641 = tail call float @llvm.nvvm.fma.rn.f(float %635, float 0xBE74442D00000000, float %.02.i498) #5, !dbg !29
  %.03.i500 = select i1 %.not16.i499, float %641, float %640, !dbg !29
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not17.i501 = icmp eq i32 %642, 0, !dbg !29
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %635, float 0xBCF84698A0000000, float %.03.i500) #5, !dbg !29
  %644 = tail call float @llvm.nvvm.fma.rn.f(float %635, float 0xBCF84698A0000000, float %.03.i500) #5, !dbg !29
  %.04.i502 = select i1 %.not17.i501, float %644, float %643, !dbg !29
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not18.i503 = icmp eq i32 %645, 0, !dbg !29
  %.06.i504 = select i1 %.not18.i503, float %444, float %443, !dbg !29
  %646 = fcmp ult float %.06.i504, 1.056150e+05, !dbg !29
  br i1 %646, label %__internal_trig_reduction_kernel.exit.i.i522, label %__nv_isinff.exit.i.i.i505, !dbg !29

__nv_isinff.exit.i.i.i505:                        ; preds = %__nv_sinf.exit165
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not19.i506 = icmp eq i32 %647, 0, !dbg !29
  %.07.i507 = select i1 %.not19.i506, float %444, float %443, !dbg !29
  %648 = fcmp oeq float %.07.i507, 0x7FF0000000000000, !dbg !29
  br i1 %648, label %__nv_fmul_rn.exit.i.i.i545, label %652, !dbg !29

__nv_fmul_rn.exit.i.i.i545:                       ; preds = %__nv_isinff.exit.i.i.i505
  %649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not27.i546 = icmp eq i32 %649, 0, !dbg !29
  %650 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %426, float 0.000000e+00) #5, !dbg !29
  %651 = tail call float @llvm.nvvm.mul.rn.f(float %426, float 0.000000e+00) #5, !dbg !29
  %.08.i547 = select i1 %.not27.i546, float %651, float %650, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !29

652:                                              ; preds = %__nv_isinff.exit.i.i.i505
  %653 = bitcast float %426 to i32, !dbg !29
  %654 = lshr i32 %653, 23, !dbg !29
  %655 = and i32 %654, 224, !dbg !29
  %656 = add nsw i32 %655, -128, !dbg !29
  %657 = shl i32 %653, 8, !dbg !29
  %658 = or i32 %657, -2147483648, !dbg !29
  %659 = lshr exact i32 %656, 5, !dbg !29
  br label %660, !dbg !29

660:                                              ; preds = %652, %660
  %indvars.iv902 = phi i64 [ 0, %652 ], [ %indvars.iv.next903, %660 ]
  %hi.i.i.i.0.i508836 = phi i32 [ 0, %652 ], [ %665, %660 ]
  %661 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv902, !dbg !29
  %662 = load i32, ptr addrspace(1) %661, align 4, !dbg !29
  %663 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %662, i32 %658, i32 %hi.i.i.i.0.i508836) #6, !dbg !29, !srcloc !18
  %664 = extractvalue { i32, i32 } %663, 0, !dbg !29
  %665 = extractvalue { i32, i32 } %663, 1, !dbg !29
  %666 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %indvars.iv902, !dbg !29
  store i32 %664, ptr %666, align 4, !dbg !29
  %indvars.iv.next903 = add nuw nsw i64 %indvars.iv902, 1, !dbg !29
  %exitcond904.not = icmp eq i64 %indvars.iv.next903, 6, !dbg !29
  br i1 %exitcond904.not, label %667, label %660, !dbg !29, !llvm.loop !30

667:                                              ; preds = %660
  %668 = getelementptr inbounds i8, ptr %result.i.i.i.i494, i64 24, !dbg !29
  store i32 %665, ptr %668, align 4, !dbg !29
  %669 = and i32 %654, 31, !dbg !29
  %670 = sub nsw i32 6, %659, !dbg !29
  %671 = sext i32 %670 to i64, !dbg !29
  %672 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %671, !dbg !29
  %673 = load i32, ptr %672, align 4, !dbg !29
  %674 = sub nsw i32 5, %659, !dbg !29
  %675 = sext i32 %674 to i64, !dbg !29
  %676 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %675, !dbg !29
  %677 = load i32, ptr %676, align 4, !dbg !29
  %.not20.i510 = icmp eq i32 %669, 0, !dbg !29
  br i1 %.not20.i510, label %__internal_trig_reduction_slowpath.exit.i.i.i511, label %678, !dbg !29

678:                                              ; preds = %667
  %679 = sub nsw i32 4, %659, !dbg !29
  %680 = sub nuw nsw i32 32, %669, !dbg !29
  %681 = shl i32 %673, %669, !dbg !29
  %682 = lshr i32 %677, %680, !dbg !29
  %683 = add i32 %682, %681, !dbg !29
  %684 = shl i32 %677, %669, !dbg !29
  %685 = sext i32 %679 to i64, !dbg !29
  %686 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i494, i64 0, i64 %685, !dbg !29
  %687 = load i32, ptr %686, align 4, !dbg !29
  %688 = lshr i32 %687, %680, !dbg !29
  %689 = add i32 %688, %684, !dbg !29
  br label %__internal_trig_reduction_slowpath.exit.i.i.i511, !dbg !29

__internal_trig_reduction_slowpath.exit.i.i.i511: ; preds = %678, %667
  %hi.i.i.i.1.i512 = phi i32 [ %683, %678 ], [ %673, %667 ], !dbg !29
  %lo.i.i.i.0.i513 = phi i32 [ %689, %678 ], [ %677, %667 ], !dbg !29
  %690 = lshr i32 %hi.i.i.i.1.i512, 30, !dbg !29
  %691 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i512, i32 %lo.i.i.i.0.i513, i32 2), !dbg !29
  %692 = shl i32 %lo.i.i.i.0.i513, 2, !dbg !29
  %693 = lshr i32 %691, 31, !dbg !29
  %694 = add nuw nsw i32 %693, %690, !dbg !29
  %695 = sub nsw i32 0, %694, !dbg !29
  %.not2123.i514 = icmp slt i32 %653, 0, !dbg !29
  %spec.select.i515 = select i1 %.not2123.i514, i32 %695, i32 %694, !dbg !29
  %696 = xor i32 %691, %653, !dbg !29
  %.lobit.i516 = ashr i32 %691, 31, !dbg !29
  %hi.i.i.i.2.i517 = xor i32 %.lobit.i516, %691, !dbg !29
  %lo.i.i.i.1.i519 = xor i32 %.lobit.i516, %692, !dbg !29
  %697 = zext i32 %hi.i.i.i.2.i517 to i64, !dbg !29
  %698 = shl nuw i64 %697, 32, !dbg !29
  %699 = zext i32 %lo.i.i.i.1.i519 to i64, !dbg !29
  %700 = or disjoint i64 %698, %699, !dbg !29
  %701 = sitofp i64 %700 to double, !dbg !29
  %702 = fmul double %701, 0x3BF921FB54442D19, !dbg !29
  %703 = fptrunc double %702 to float, !dbg !29
  %704 = fneg float %703, !dbg !29
  %.not2526.i520 = icmp slt i32 %696, 0, !dbg !29
  %r.i.i.i.0.i521 = select i1 %.not2526.i520, float %704, float %703, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i522, !dbg !29

__internal_trig_reduction_kernel.exit.i.i522:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i511, %__nv_fmul_rn.exit.i.i.i545, %__nv_sinf.exit165
  %i.i.1.i523 = phi i32 [ %.01.i496, %__nv_sinf.exit165 ], [ 0, %__nv_fmul_rn.exit.i.i.i545 ], [ %spec.select.i515, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !29
  %t.i.i.1.i524 = phi float [ %.04.i502, %__nv_sinf.exit165 ], [ %.08.i547, %__nv_fmul_rn.exit.i.i.i545 ], [ %r.i.i.i.0.i521, %__internal_trig_reduction_slowpath.exit.i.i.i511 ], !dbg !29
  %705 = add i32 %i.i.1.i523, 1, !dbg !29
  %706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not28.i525 = icmp eq i32 %706, 0, !dbg !29
  %707 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #5, !dbg !29
  %708 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i524, float %t.i.i.1.i524) #5, !dbg !29
  %.011.i526 = select i1 %.not28.i525, float %708, float %707, !dbg !29
  %709 = and i32 %i.i.1.i523, 1, !dbg !29
  %.not29.not.i527 = icmp eq i32 %709, 0, !dbg !29
  %710 = select i1 %.not29.not.i527, float 1.000000e+00, float %t.i.i.1.i524, !dbg !29
  %711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not30.i528 = icmp eq i32 %711, 0, !dbg !29
  %712 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i526, float %710, float 0.000000e+00) #5, !dbg !29
  %713 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i526, float %710, float 0.000000e+00) #5, !dbg !29
  %.012.i529 = select i1 %.not30.i528, float %713, float %712, !dbg !29
  br i1 %.not29.not.i527, label %__internal_fmad.exit1.i.i.i542, label %__internal_fmad.exit2.i.i.i530, !dbg !29

__internal_fmad.exit1.i.i.i542:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i522
  %714 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not31.i543 = icmp eq i32 %714, 0, !dbg !29
  %715 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #5, !dbg !29
  %716 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i526, float 0xBF56C0FDA0000000) #5, !dbg !29
  %.013.i544 = select i1 %.not31.i543, float %716, float %715, !dbg !29
  br label %__internal_fmad.exit2.i.i.i530, !dbg !29

__internal_fmad.exit2.i.i.i530:                   ; preds = %__internal_fmad.exit1.i.i.i542, %__internal_trig_reduction_kernel.exit.i.i522
  %717 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i542 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !29
  %718 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i542 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !29
  %719 = phi float [ %.013.i544, %__internal_fmad.exit1.i.i.i542 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i522 ], !dbg !29
  %720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not32.i531 = icmp eq i32 %720, 0, !dbg !29
  %721 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %719, float %.011.i526, float %718) #5, !dbg !29
  %722 = tail call float @llvm.nvvm.fma.rn.f(float %719, float %.011.i526, float %718) #5, !dbg !29
  %.010.i532 = select i1 %.not32.i531, float %722, float %721, !dbg !29
  %723 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not33.i533 = icmp eq i32 %723, 0, !dbg !29
  %724 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i532, float %.011.i526, float %717) #5, !dbg !29
  %725 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i532, float %.011.i526, float %717) #5, !dbg !29
  %.09.i534 = select i1 %.not33.i533, float %725, float %724, !dbg !29
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not34.i535 = icmp eq i32 %726, 0, !dbg !29
  %727 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i534, float %.012.i529, float %710) #5, !dbg !29
  %728 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i534, float %.012.i529, float %710) #5, !dbg !29
  %.05.i536 = select i1 %.not34.i535, float %728, float %727, !dbg !29
  %729 = and i32 %705, 2, !dbg !29
  %.not35.i537 = icmp eq i32 %729, 0, !dbg !29
  br i1 %.not35.i537, label %__nv_cosf.exit548, label %__internal_fmad.exit5.i.i.i538, !dbg !29

__internal_fmad.exit5.i.i.i538:                   ; preds = %__internal_fmad.exit2.i.i.i530
  %730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not36.i539 = icmp eq i32 %730, 0, !dbg !29
  %731 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #5, !dbg !29
  %732 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i536, float -1.000000e+00, float 0.000000e+00) #5, !dbg !29
  %.0.i540 = select i1 %.not36.i539, float %732, float %731, !dbg !29
  br label %__nv_cosf.exit548, !dbg !29

__nv_cosf.exit548:                                ; preds = %__internal_fmad.exit2.i.i.i530, %__internal_fmad.exit5.i.i.i538
  %z.i.i.0.i541 = phi float [ %.0.i540, %__internal_fmad.exit5.i.i.i538 ], [ %.05.i536, %__internal_fmad.exit2.i.i.i530 ], !dbg !29
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i494), !dbg !29
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !29
  %733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i550 = icmp eq i32 %733, 0, !dbg !29
  %.01.i551 = select i1 %.not.i550, i32 %534, i32 %533, !dbg !29
  %734 = sitofp i32 %.01.i551 to float, !dbg !29
  %735 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not15.i552 = icmp eq i32 %735, 0, !dbg !29
  %736 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %734, float 0xBFF921FB40000000, float %427) #5, !dbg !29
  %737 = tail call float @llvm.nvvm.fma.rn.f(float %734, float 0xBFF921FB40000000, float %427) #5, !dbg !29
  %.02.i553 = select i1 %.not15.i552, float %737, float %736, !dbg !29
  %738 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not16.i554 = icmp eq i32 %738, 0, !dbg !29
  %739 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %734, float 0xBE74442D00000000, float %.02.i553) #5, !dbg !29
  %740 = tail call float @llvm.nvvm.fma.rn.f(float %734, float 0xBE74442D00000000, float %.02.i553) #5, !dbg !29
  %.03.i555 = select i1 %.not16.i554, float %740, float %739, !dbg !29
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not17.i556 = icmp eq i32 %741, 0, !dbg !29
  %742 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %734, float 0xBCF84698A0000000, float %.03.i555) #5, !dbg !29
  %743 = tail call float @llvm.nvvm.fma.rn.f(float %734, float 0xBCF84698A0000000, float %.03.i555) #5, !dbg !29
  %.04.i557 = select i1 %.not17.i556, float %743, float %742, !dbg !29
  %744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not18.i558 = icmp eq i32 %744, 0, !dbg !29
  %.06.i559 = select i1 %.not18.i558, float %547, float %546, !dbg !29
  %745 = fcmp ult float %.06.i559, 1.056150e+05, !dbg !29
  br i1 %745, label %__internal_trig_reduction_kernel.exit.i.i577, label %__nv_isinff.exit.i.i.i560, !dbg !29

__nv_isinff.exit.i.i.i560:                        ; preds = %__nv_cosf.exit548
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not19.i561 = icmp eq i32 %746, 0, !dbg !29
  %.07.i562 = select i1 %.not19.i561, float %547, float %546, !dbg !29
  %747 = fcmp oeq float %.07.i562, 0x7FF0000000000000, !dbg !29
  br i1 %747, label %__nv_fmul_rn.exit.i.i.i600, label %751, !dbg !29

__nv_fmul_rn.exit.i.i.i600:                       ; preds = %__nv_isinff.exit.i.i.i560
  %748 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not27.i601 = icmp eq i32 %748, 0, !dbg !29
  %749 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %427, float 0.000000e+00) #5, !dbg !29
  %750 = tail call float @llvm.nvvm.mul.rn.f(float %427, float 0.000000e+00) #5, !dbg !29
  %.08.i602 = select i1 %.not27.i601, float %750, float %749, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !29

751:                                              ; preds = %__nv_isinff.exit.i.i.i560
  %752 = bitcast float %427 to i32, !dbg !29
  %753 = lshr i32 %752, 23, !dbg !29
  %754 = and i32 %753, 224, !dbg !29
  %755 = add nsw i32 %754, -128, !dbg !29
  %756 = shl i32 %752, 8, !dbg !29
  %757 = or i32 %756, -2147483648, !dbg !29
  %758 = lshr exact i32 %755, 5, !dbg !29
  br label %759, !dbg !29

759:                                              ; preds = %751, %759
  %indvars.iv905 = phi i64 [ 0, %751 ], [ %indvars.iv.next906, %759 ]
  %hi.i.i.i.0.i563838 = phi i32 [ 0, %751 ], [ %764, %759 ]
  %760 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv905, !dbg !29
  %761 = load i32, ptr addrspace(1) %760, align 4, !dbg !29
  %762 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %761, i32 %757, i32 %hi.i.i.i.0.i563838) #6, !dbg !29, !srcloc !18
  %763 = extractvalue { i32, i32 } %762, 0, !dbg !29
  %764 = extractvalue { i32, i32 } %762, 1, !dbg !29
  %765 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %indvars.iv905, !dbg !29
  store i32 %763, ptr %765, align 4, !dbg !29
  %indvars.iv.next906 = add nuw nsw i64 %indvars.iv905, 1, !dbg !29
  %exitcond907.not = icmp eq i64 %indvars.iv.next906, 6, !dbg !29
  br i1 %exitcond907.not, label %766, label %759, !dbg !29, !llvm.loop !31

766:                                              ; preds = %759
  %767 = getelementptr inbounds i8, ptr %result.i.i.i.i549, i64 24, !dbg !29
  store i32 %764, ptr %767, align 4, !dbg !29
  %768 = and i32 %753, 31, !dbg !29
  %769 = sub nsw i32 6, %758, !dbg !29
  %770 = sext i32 %769 to i64, !dbg !29
  %771 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %770, !dbg !29
  %772 = load i32, ptr %771, align 4, !dbg !29
  %773 = sub nsw i32 5, %758, !dbg !29
  %774 = sext i32 %773 to i64, !dbg !29
  %775 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %774, !dbg !29
  %776 = load i32, ptr %775, align 4, !dbg !29
  %.not20.i565 = icmp eq i32 %768, 0, !dbg !29
  br i1 %.not20.i565, label %__internal_trig_reduction_slowpath.exit.i.i.i566, label %777, !dbg !29

777:                                              ; preds = %766
  %778 = sub nsw i32 4, %758, !dbg !29
  %779 = sub nuw nsw i32 32, %768, !dbg !29
  %780 = shl i32 %772, %768, !dbg !29
  %781 = lshr i32 %776, %779, !dbg !29
  %782 = add i32 %781, %780, !dbg !29
  %783 = shl i32 %776, %768, !dbg !29
  %784 = sext i32 %778 to i64, !dbg !29
  %785 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i549, i64 0, i64 %784, !dbg !29
  %786 = load i32, ptr %785, align 4, !dbg !29
  %787 = lshr i32 %786, %779, !dbg !29
  %788 = add i32 %787, %783, !dbg !29
  br label %__internal_trig_reduction_slowpath.exit.i.i.i566, !dbg !29

__internal_trig_reduction_slowpath.exit.i.i.i566: ; preds = %777, %766
  %hi.i.i.i.1.i567 = phi i32 [ %782, %777 ], [ %772, %766 ], !dbg !29
  %lo.i.i.i.0.i568 = phi i32 [ %788, %777 ], [ %776, %766 ], !dbg !29
  %789 = lshr i32 %hi.i.i.i.1.i567, 30, !dbg !29
  %790 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i567, i32 %lo.i.i.i.0.i568, i32 2), !dbg !29
  %791 = shl i32 %lo.i.i.i.0.i568, 2, !dbg !29
  %792 = lshr i32 %790, 31, !dbg !29
  %793 = add nuw nsw i32 %792, %789, !dbg !29
  %794 = sub nsw i32 0, %793, !dbg !29
  %.not2123.i569 = icmp slt i32 %752, 0, !dbg !29
  %spec.select.i570 = select i1 %.not2123.i569, i32 %794, i32 %793, !dbg !29
  %795 = xor i32 %790, %752, !dbg !29
  %.lobit.i571 = ashr i32 %790, 31, !dbg !29
  %hi.i.i.i.2.i572 = xor i32 %.lobit.i571, %790, !dbg !29
  %lo.i.i.i.1.i574 = xor i32 %.lobit.i571, %791, !dbg !29
  %796 = zext i32 %hi.i.i.i.2.i572 to i64, !dbg !29
  %797 = shl nuw i64 %796, 32, !dbg !29
  %798 = zext i32 %lo.i.i.i.1.i574 to i64, !dbg !29
  %799 = or disjoint i64 %797, %798, !dbg !29
  %800 = sitofp i64 %799 to double, !dbg !29
  %801 = fmul double %800, 0x3BF921FB54442D19, !dbg !29
  %802 = fptrunc double %801 to float, !dbg !29
  %803 = fneg float %802, !dbg !29
  %.not2526.i575 = icmp slt i32 %795, 0, !dbg !29
  %r.i.i.i.0.i576 = select i1 %.not2526.i575, float %803, float %802, !dbg !29
  br label %__internal_trig_reduction_kernel.exit.i.i577, !dbg !29

__internal_trig_reduction_kernel.exit.i.i577:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i566, %__nv_fmul_rn.exit.i.i.i600, %__nv_cosf.exit548
  %i.i.1.i578 = phi i32 [ %.01.i551, %__nv_cosf.exit548 ], [ 0, %__nv_fmul_rn.exit.i.i.i600 ], [ %spec.select.i570, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !29
  %t.i.i.1.i579 = phi float [ %.04.i557, %__nv_cosf.exit548 ], [ %.08.i602, %__nv_fmul_rn.exit.i.i.i600 ], [ %r.i.i.i.0.i576, %__internal_trig_reduction_slowpath.exit.i.i.i566 ], !dbg !29
  %804 = add i32 %i.i.1.i578, 1, !dbg !29
  %805 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not28.i580 = icmp eq i32 %805, 0, !dbg !29
  %806 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #5, !dbg !29
  %807 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i579, float %t.i.i.1.i579) #5, !dbg !29
  %.011.i581 = select i1 %.not28.i580, float %807, float %806, !dbg !29
  %808 = and i32 %i.i.1.i578, 1, !dbg !29
  %.not29.not.i582 = icmp eq i32 %808, 0, !dbg !29
  %809 = select i1 %.not29.not.i582, float 1.000000e+00, float %t.i.i.1.i579, !dbg !29
  %810 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not30.i583 = icmp eq i32 %810, 0, !dbg !29
  %811 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i581, float %809, float 0.000000e+00) #5, !dbg !29
  %812 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i581, float %809, float 0.000000e+00) #5, !dbg !29
  %.012.i584 = select i1 %.not30.i583, float %812, float %811, !dbg !29
  br i1 %.not29.not.i582, label %__internal_fmad.exit1.i.i.i597, label %__internal_fmad.exit2.i.i.i585, !dbg !29

__internal_fmad.exit1.i.i.i597:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i577
  %813 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not31.i598 = icmp eq i32 %813, 0, !dbg !29
  %814 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #5, !dbg !29
  %815 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i581, float 0xBF56C0FDA0000000) #5, !dbg !29
  %.013.i599 = select i1 %.not31.i598, float %815, float %814, !dbg !29
  br label %__internal_fmad.exit2.i.i.i585, !dbg !29

__internal_fmad.exit2.i.i.i585:                   ; preds = %__internal_fmad.exit1.i.i.i597, %__internal_trig_reduction_kernel.exit.i.i577
  %816 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i597 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !29
  %817 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i597 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !29
  %818 = phi float [ %.013.i599, %__internal_fmad.exit1.i.i.i597 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i577 ], !dbg !29
  %819 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not32.i586 = icmp eq i32 %819, 0, !dbg !29
  %820 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %818, float %.011.i581, float %817) #5, !dbg !29
  %821 = tail call float @llvm.nvvm.fma.rn.f(float %818, float %.011.i581, float %817) #5, !dbg !29
  %.010.i587 = select i1 %.not32.i586, float %821, float %820, !dbg !29
  %822 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not33.i588 = icmp eq i32 %822, 0, !dbg !29
  %823 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i587, float %.011.i581, float %816) #5, !dbg !29
  %824 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i587, float %.011.i581, float %816) #5, !dbg !29
  %.09.i589 = select i1 %.not33.i588, float %824, float %823, !dbg !29
  %825 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not34.i590 = icmp eq i32 %825, 0, !dbg !29
  %826 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i589, float %.012.i584, float %809) #5, !dbg !29
  %827 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i589, float %.012.i584, float %809) #5, !dbg !29
  %.05.i591 = select i1 %.not34.i590, float %827, float %826, !dbg !29
  %828 = and i32 %804, 2, !dbg !29
  %.not35.i592 = icmp eq i32 %828, 0, !dbg !29
  br i1 %.not35.i592, label %__nv_cosf.exit603, label %__internal_fmad.exit5.i.i.i593, !dbg !29

__internal_fmad.exit5.i.i.i593:                   ; preds = %__internal_fmad.exit2.i.i.i585
  %829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not36.i594 = icmp eq i32 %829, 0, !dbg !29
  %830 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #5, !dbg !29
  %831 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i591, float -1.000000e+00, float 0.000000e+00) #5, !dbg !29
  %.0.i595 = select i1 %.not36.i594, float %831, float %830, !dbg !29
  br label %__nv_cosf.exit603, !dbg !29

__nv_cosf.exit603:                                ; preds = %__internal_fmad.exit2.i.i.i585, %__internal_fmad.exit5.i.i.i593
  %z.i.i.0.i596 = phi float [ %.0.i595, %__internal_fmad.exit5.i.i.i593 ], [ %.05.i591, %__internal_fmad.exit2.i.i.i585 ], !dbg !29
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i549), !dbg !29
  %832 = fmul float %24, 0x401965FE80000000, !dbg !32
  %833 = fmul float %25, 0x401965FE80000000, !dbg !32
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !33
  %834 = fmul float %832, 0x3FE45F3060000000, !dbg !33
  %835 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not.i167 = icmp eq i32 %835, 0, !dbg !33
  %836 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %834) #5, !dbg !33
  %837 = tail call i32 @llvm.nvvm.f2i.rn(float %834) #5, !dbg !33
  %.01.i168 = select i1 %.not.i167, i32 %837, i32 %836, !dbg !33
  %838 = sitofp i32 %.01.i168 to float, !dbg !33
  %839 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not15.i169 = icmp eq i32 %839, 0, !dbg !33
  %840 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %838, float 0xBFF921FB40000000, float %832) #5, !dbg !33
  %841 = tail call float @llvm.nvvm.fma.rn.f(float %838, float 0xBFF921FB40000000, float %832) #5, !dbg !33
  %.02.i170 = select i1 %.not15.i169, float %841, float %840, !dbg !33
  %842 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not16.i171 = icmp eq i32 %842, 0, !dbg !33
  %843 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %838, float 0xBE74442D00000000, float %.02.i170) #5, !dbg !33
  %844 = tail call float @llvm.nvvm.fma.rn.f(float %838, float 0xBE74442D00000000, float %.02.i170) #5, !dbg !33
  %.03.i172 = select i1 %.not16.i171, float %844, float %843, !dbg !33
  %845 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not17.i173 = icmp eq i32 %845, 0, !dbg !33
  %846 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %838, float 0xBCF84698A0000000, float %.03.i172) #5, !dbg !33
  %847 = tail call float @llvm.nvvm.fma.rn.f(float %838, float 0xBCF84698A0000000, float %.03.i172) #5, !dbg !33
  %.04.i174 = select i1 %.not17.i173, float %847, float %846, !dbg !33
  %848 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not18.i175 = icmp eq i32 %848, 0, !dbg !33
  %849 = tail call float @llvm.nvvm.fabs.ftz.f(float %832) #5, !dbg !33
  %850 = tail call float @llvm.nvvm.fabs.f(float %832) #5, !dbg !33
  %.06.i176 = select i1 %.not18.i175, float %850, float %849, !dbg !33
  %851 = fcmp ult float %.06.i176, 1.056150e+05, !dbg !33
  br i1 %851, label %__internal_trig_reduction_kernel.exit.i.i194, label %__nv_isinff.exit.i.i.i177, !dbg !33

__nv_isinff.exit.i.i.i177:                        ; preds = %__nv_cosf.exit603
  %852 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not19.i178 = icmp eq i32 %852, 0, !dbg !33
  %.07.i179 = select i1 %.not19.i178, float %850, float %849, !dbg !33
  %853 = fcmp oeq float %.07.i179, 0x7FF0000000000000, !dbg !33
  br i1 %853, label %__nv_fmul_rn.exit.i.i.i217, label %857, !dbg !33

__nv_fmul_rn.exit.i.i.i217:                       ; preds = %__nv_isinff.exit.i.i.i177
  %854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not27.i218 = icmp eq i32 %854, 0, !dbg !33
  %855 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %832, float 0.000000e+00) #5, !dbg !33
  %856 = tail call float @llvm.nvvm.mul.rn.f(float %832, float 0.000000e+00) #5, !dbg !33
  %.08.i219 = select i1 %.not27.i218, float %856, float %855, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !33

857:                                              ; preds = %__nv_isinff.exit.i.i.i177
  %858 = bitcast float %832 to i32, !dbg !33
  %859 = lshr i32 %858, 23, !dbg !33
  %860 = and i32 %859, 224, !dbg !33
  %861 = add nsw i32 %860, -128, !dbg !33
  %862 = shl i32 %858, 8, !dbg !33
  %863 = or i32 %862, -2147483648, !dbg !33
  %864 = lshr exact i32 %861, 5, !dbg !33
  br label %865, !dbg !33

865:                                              ; preds = %857, %865
  %indvars.iv908 = phi i64 [ 0, %857 ], [ %indvars.iv.next909, %865 ]
  %hi.i.i.i.0.i180840 = phi i32 [ 0, %857 ], [ %870, %865 ]
  %866 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv908, !dbg !33
  %867 = load i32, ptr addrspace(1) %866, align 4, !dbg !33
  %868 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %867, i32 %863, i32 %hi.i.i.i.0.i180840) #6, !dbg !33, !srcloc !18
  %869 = extractvalue { i32, i32 } %868, 0, !dbg !33
  %870 = extractvalue { i32, i32 } %868, 1, !dbg !33
  %871 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %indvars.iv908, !dbg !33
  store i32 %869, ptr %871, align 4, !dbg !33
  %indvars.iv.next909 = add nuw nsw i64 %indvars.iv908, 1, !dbg !33
  %exitcond910.not = icmp eq i64 %indvars.iv.next909, 6, !dbg !33
  br i1 %exitcond910.not, label %872, label %865, !dbg !33, !llvm.loop !34

872:                                              ; preds = %865
  %873 = getelementptr inbounds i8, ptr %result.i.i.i.i166, i64 24, !dbg !33
  store i32 %870, ptr %873, align 4, !dbg !33
  %874 = and i32 %859, 31, !dbg !33
  %875 = sub nsw i32 6, %864, !dbg !33
  %876 = sext i32 %875 to i64, !dbg !33
  %877 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %876, !dbg !33
  %878 = load i32, ptr %877, align 4, !dbg !33
  %879 = sub nsw i32 5, %864, !dbg !33
  %880 = sext i32 %879 to i64, !dbg !33
  %881 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %880, !dbg !33
  %882 = load i32, ptr %881, align 4, !dbg !33
  %.not20.i182 = icmp eq i32 %874, 0, !dbg !33
  br i1 %.not20.i182, label %__internal_trig_reduction_slowpath.exit.i.i.i183, label %883, !dbg !33

883:                                              ; preds = %872
  %884 = sub nsw i32 4, %864, !dbg !33
  %885 = sub nuw nsw i32 32, %874, !dbg !33
  %886 = shl i32 %878, %874, !dbg !33
  %887 = lshr i32 %882, %885, !dbg !33
  %888 = add i32 %887, %886, !dbg !33
  %889 = shl i32 %882, %874, !dbg !33
  %890 = sext i32 %884 to i64, !dbg !33
  %891 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i166, i64 0, i64 %890, !dbg !33
  %892 = load i32, ptr %891, align 4, !dbg !33
  %893 = lshr i32 %892, %885, !dbg !33
  %894 = add i32 %893, %889, !dbg !33
  br label %__internal_trig_reduction_slowpath.exit.i.i.i183, !dbg !33

__internal_trig_reduction_slowpath.exit.i.i.i183: ; preds = %883, %872
  %hi.i.i.i.1.i184 = phi i32 [ %888, %883 ], [ %878, %872 ], !dbg !33
  %lo.i.i.i.0.i185 = phi i32 [ %894, %883 ], [ %882, %872 ], !dbg !33
  %895 = lshr i32 %hi.i.i.i.1.i184, 30, !dbg !33
  %896 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i184, i32 %lo.i.i.i.0.i185, i32 2), !dbg !33
  %897 = shl i32 %lo.i.i.i.0.i185, 2, !dbg !33
  %898 = lshr i32 %896, 31, !dbg !33
  %899 = add nuw nsw i32 %898, %895, !dbg !33
  %900 = sub nsw i32 0, %899, !dbg !33
  %.not2123.i186 = icmp slt i32 %858, 0, !dbg !33
  %spec.select.i187 = select i1 %.not2123.i186, i32 %900, i32 %899, !dbg !33
  %901 = xor i32 %896, %858, !dbg !33
  %.lobit.i188 = ashr i32 %896, 31, !dbg !33
  %hi.i.i.i.2.i189 = xor i32 %.lobit.i188, %896, !dbg !33
  %lo.i.i.i.1.i191 = xor i32 %.lobit.i188, %897, !dbg !33
  %902 = zext i32 %hi.i.i.i.2.i189 to i64, !dbg !33
  %903 = shl nuw i64 %902, 32, !dbg !33
  %904 = zext i32 %lo.i.i.i.1.i191 to i64, !dbg !33
  %905 = or disjoint i64 %903, %904, !dbg !33
  %906 = sitofp i64 %905 to double, !dbg !33
  %907 = fmul double %906, 0x3BF921FB54442D19, !dbg !33
  %908 = fptrunc double %907 to float, !dbg !33
  %909 = fneg float %908, !dbg !33
  %.not2526.i192 = icmp slt i32 %901, 0, !dbg !33
  %r.i.i.i.0.i193 = select i1 %.not2526.i192, float %909, float %908, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i194, !dbg !33

__internal_trig_reduction_kernel.exit.i.i194:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i183, %__nv_fmul_rn.exit.i.i.i217, %__nv_cosf.exit603
  %i.i.1.i195 = phi i32 [ %.01.i168, %__nv_cosf.exit603 ], [ 0, %__nv_fmul_rn.exit.i.i.i217 ], [ %spec.select.i187, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !33
  %t.i.i.1.i196 = phi float [ %.04.i174, %__nv_cosf.exit603 ], [ %.08.i219, %__nv_fmul_rn.exit.i.i.i217 ], [ %r.i.i.i.0.i193, %__internal_trig_reduction_slowpath.exit.i.i.i183 ], !dbg !33
  %910 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not28.i197 = icmp eq i32 %910, 0, !dbg !33
  %911 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #5, !dbg !33
  %912 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i196, float %t.i.i.1.i196) #5, !dbg !33
  %.011.i198 = select i1 %.not28.i197, float %912, float %911, !dbg !33
  %913 = and i32 %i.i.1.i195, 1, !dbg !33
  %.not29.i199 = icmp eq i32 %913, 0, !dbg !33
  %914 = select i1 %.not29.i199, float %t.i.i.1.i196, float 1.000000e+00, !dbg !33
  %915 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not30.i200 = icmp eq i32 %915, 0, !dbg !33
  %916 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i198, float %914, float 0.000000e+00) #5, !dbg !33
  %917 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i198, float %914, float 0.000000e+00) #5, !dbg !33
  %.012.i201 = select i1 %.not30.i200, float %917, float %916, !dbg !33
  br i1 %.not29.i199, label %__internal_fmad.exit2.i.i.i205, label %__internal_fmad.exit1.i.i.i202, !dbg !33

__internal_fmad.exit1.i.i.i202:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i194
  %918 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not31.i203 = icmp eq i32 %918, 0, !dbg !33
  %919 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #5, !dbg !33
  %920 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i198, float 0xBF56C0FDA0000000) #5, !dbg !33
  %.013.i204 = select i1 %.not31.i203, float %920, float %919, !dbg !33
  br label %__internal_fmad.exit2.i.i.i205, !dbg !33

__internal_fmad.exit2.i.i.i205:                   ; preds = %__internal_fmad.exit1.i.i.i202, %__internal_trig_reduction_kernel.exit.i.i194
  %921 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i202 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !33
  %922 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i202 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !33
  %923 = phi float [ %.013.i204, %__internal_fmad.exit1.i.i.i202 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i194 ], !dbg !33
  %924 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not32.i206 = icmp eq i32 %924, 0, !dbg !33
  %925 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %923, float %.011.i198, float %922) #5, !dbg !33
  %926 = tail call float @llvm.nvvm.fma.rn.f(float %923, float %.011.i198, float %922) #5, !dbg !33
  %.010.i207 = select i1 %.not32.i206, float %926, float %925, !dbg !33
  %927 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not33.i208 = icmp eq i32 %927, 0, !dbg !33
  %928 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i207, float %.011.i198, float %921) #5, !dbg !33
  %929 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i207, float %.011.i198, float %921) #5, !dbg !33
  %.09.i209 = select i1 %.not33.i208, float %929, float %928, !dbg !33
  %930 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not34.i210 = icmp eq i32 %930, 0, !dbg !33
  %931 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i209, float %.012.i201, float %914) #5, !dbg !33
  %932 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i209, float %.012.i201, float %914) #5, !dbg !33
  %.05.i211 = select i1 %.not34.i210, float %932, float %931, !dbg !33
  %933 = and i32 %i.i.1.i195, 2, !dbg !33
  %.not35.i212 = icmp eq i32 %933, 0, !dbg !33
  br i1 %.not35.i212, label %__nv_sinf.exit220, label %__internal_fmad.exit5.i.i.i213, !dbg !33

__internal_fmad.exit5.i.i.i213:                   ; preds = %__internal_fmad.exit2.i.i.i205
  %934 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not36.i214 = icmp eq i32 %934, 0, !dbg !33
  %935 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #5, !dbg !33
  %936 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i211, float -1.000000e+00, float 0.000000e+00) #5, !dbg !33
  %.0.i215 = select i1 %.not36.i214, float %936, float %935, !dbg !33
  br label %__nv_sinf.exit220, !dbg !33

__nv_sinf.exit220:                                ; preds = %__internal_fmad.exit2.i.i.i205, %__internal_fmad.exit5.i.i.i213
  %z.i.i.0.i216 = phi float [ %.0.i215, %__internal_fmad.exit5.i.i.i213 ], [ %.05.i211, %__internal_fmad.exit2.i.i.i205 ], !dbg !33
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i166), !dbg !33
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !33
  %937 = fmul float %833, 0x3FE45F3060000000, !dbg !33
  %938 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not.i222 = icmp eq i32 %938, 0, !dbg !33
  %939 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %937) #5, !dbg !33
  %940 = tail call i32 @llvm.nvvm.f2i.rn(float %937) #5, !dbg !33
  %.01.i223 = select i1 %.not.i222, i32 %940, i32 %939, !dbg !33
  %941 = sitofp i32 %.01.i223 to float, !dbg !33
  %942 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not15.i224 = icmp eq i32 %942, 0, !dbg !33
  %943 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %941, float 0xBFF921FB40000000, float %833) #5, !dbg !33
  %944 = tail call float @llvm.nvvm.fma.rn.f(float %941, float 0xBFF921FB40000000, float %833) #5, !dbg !33
  %.02.i225 = select i1 %.not15.i224, float %944, float %943, !dbg !33
  %945 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not16.i226 = icmp eq i32 %945, 0, !dbg !33
  %946 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %941, float 0xBE74442D00000000, float %.02.i225) #5, !dbg !33
  %947 = tail call float @llvm.nvvm.fma.rn.f(float %941, float 0xBE74442D00000000, float %.02.i225) #5, !dbg !33
  %.03.i227 = select i1 %.not16.i226, float %947, float %946, !dbg !33
  %948 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not17.i228 = icmp eq i32 %948, 0, !dbg !33
  %949 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %941, float 0xBCF84698A0000000, float %.03.i227) #5, !dbg !33
  %950 = tail call float @llvm.nvvm.fma.rn.f(float %941, float 0xBCF84698A0000000, float %.03.i227) #5, !dbg !33
  %.04.i229 = select i1 %.not17.i228, float %950, float %949, !dbg !33
  %951 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not18.i230 = icmp eq i32 %951, 0, !dbg !33
  %952 = tail call float @llvm.nvvm.fabs.ftz.f(float %833) #5, !dbg !33
  %953 = tail call float @llvm.nvvm.fabs.f(float %833) #5, !dbg !33
  %.06.i231 = select i1 %.not18.i230, float %953, float %952, !dbg !33
  %954 = fcmp ult float %.06.i231, 1.056150e+05, !dbg !33
  br i1 %954, label %__internal_trig_reduction_kernel.exit.i.i249, label %__nv_isinff.exit.i.i.i232, !dbg !33

__nv_isinff.exit.i.i.i232:                        ; preds = %__nv_sinf.exit220
  %955 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not19.i233 = icmp eq i32 %955, 0, !dbg !33
  %.07.i234 = select i1 %.not19.i233, float %953, float %952, !dbg !33
  %956 = fcmp oeq float %.07.i234, 0x7FF0000000000000, !dbg !33
  br i1 %956, label %__nv_fmul_rn.exit.i.i.i272, label %960, !dbg !33

__nv_fmul_rn.exit.i.i.i272:                       ; preds = %__nv_isinff.exit.i.i.i232
  %957 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not27.i273 = icmp eq i32 %957, 0, !dbg !33
  %958 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %833, float 0.000000e+00) #5, !dbg !33
  %959 = tail call float @llvm.nvvm.mul.rn.f(float %833, float 0.000000e+00) #5, !dbg !33
  %.08.i274 = select i1 %.not27.i273, float %959, float %958, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !33

960:                                              ; preds = %__nv_isinff.exit.i.i.i232
  %961 = bitcast float %833 to i32, !dbg !33
  %962 = lshr i32 %961, 23, !dbg !33
  %963 = and i32 %962, 224, !dbg !33
  %964 = add nsw i32 %963, -128, !dbg !33
  %965 = shl i32 %961, 8, !dbg !33
  %966 = or i32 %965, -2147483648, !dbg !33
  %967 = lshr exact i32 %964, 5, !dbg !33
  br label %968, !dbg !33

968:                                              ; preds = %960, %968
  %indvars.iv911 = phi i64 [ 0, %960 ], [ %indvars.iv.next912, %968 ]
  %hi.i.i.i.0.i235842 = phi i32 [ 0, %960 ], [ %973, %968 ]
  %969 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv911, !dbg !33
  %970 = load i32, ptr addrspace(1) %969, align 4, !dbg !33
  %971 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %970, i32 %966, i32 %hi.i.i.i.0.i235842) #6, !dbg !33, !srcloc !18
  %972 = extractvalue { i32, i32 } %971, 0, !dbg !33
  %973 = extractvalue { i32, i32 } %971, 1, !dbg !33
  %974 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %indvars.iv911, !dbg !33
  store i32 %972, ptr %974, align 4, !dbg !33
  %indvars.iv.next912 = add nuw nsw i64 %indvars.iv911, 1, !dbg !33
  %exitcond913.not = icmp eq i64 %indvars.iv.next912, 6, !dbg !33
  br i1 %exitcond913.not, label %975, label %968, !dbg !33, !llvm.loop !35

975:                                              ; preds = %968
  %976 = getelementptr inbounds i8, ptr %result.i.i.i.i221, i64 24, !dbg !33
  store i32 %973, ptr %976, align 4, !dbg !33
  %977 = and i32 %962, 31, !dbg !33
  %978 = sub nsw i32 6, %967, !dbg !33
  %979 = sext i32 %978 to i64, !dbg !33
  %980 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %979, !dbg !33
  %981 = load i32, ptr %980, align 4, !dbg !33
  %982 = sub nsw i32 5, %967, !dbg !33
  %983 = sext i32 %982 to i64, !dbg !33
  %984 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %983, !dbg !33
  %985 = load i32, ptr %984, align 4, !dbg !33
  %.not20.i237 = icmp eq i32 %977, 0, !dbg !33
  br i1 %.not20.i237, label %__internal_trig_reduction_slowpath.exit.i.i.i238, label %986, !dbg !33

986:                                              ; preds = %975
  %987 = sub nsw i32 4, %967, !dbg !33
  %988 = sub nuw nsw i32 32, %977, !dbg !33
  %989 = shl i32 %981, %977, !dbg !33
  %990 = lshr i32 %985, %988, !dbg !33
  %991 = add i32 %990, %989, !dbg !33
  %992 = shl i32 %985, %977, !dbg !33
  %993 = sext i32 %987 to i64, !dbg !33
  %994 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i221, i64 0, i64 %993, !dbg !33
  %995 = load i32, ptr %994, align 4, !dbg !33
  %996 = lshr i32 %995, %988, !dbg !33
  %997 = add i32 %996, %992, !dbg !33
  br label %__internal_trig_reduction_slowpath.exit.i.i.i238, !dbg !33

__internal_trig_reduction_slowpath.exit.i.i.i238: ; preds = %986, %975
  %hi.i.i.i.1.i239 = phi i32 [ %991, %986 ], [ %981, %975 ], !dbg !33
  %lo.i.i.i.0.i240 = phi i32 [ %997, %986 ], [ %985, %975 ], !dbg !33
  %998 = lshr i32 %hi.i.i.i.1.i239, 30, !dbg !33
  %999 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i239, i32 %lo.i.i.i.0.i240, i32 2), !dbg !33
  %1000 = shl i32 %lo.i.i.i.0.i240, 2, !dbg !33
  %1001 = lshr i32 %999, 31, !dbg !33
  %1002 = add nuw nsw i32 %1001, %998, !dbg !33
  %1003 = sub nsw i32 0, %1002, !dbg !33
  %.not2123.i241 = icmp slt i32 %961, 0, !dbg !33
  %spec.select.i242 = select i1 %.not2123.i241, i32 %1003, i32 %1002, !dbg !33
  %1004 = xor i32 %999, %961, !dbg !33
  %.lobit.i243 = ashr i32 %999, 31, !dbg !33
  %hi.i.i.i.2.i244 = xor i32 %.lobit.i243, %999, !dbg !33
  %lo.i.i.i.1.i246 = xor i32 %.lobit.i243, %1000, !dbg !33
  %1005 = zext i32 %hi.i.i.i.2.i244 to i64, !dbg !33
  %1006 = shl nuw i64 %1005, 32, !dbg !33
  %1007 = zext i32 %lo.i.i.i.1.i246 to i64, !dbg !33
  %1008 = or disjoint i64 %1006, %1007, !dbg !33
  %1009 = sitofp i64 %1008 to double, !dbg !33
  %1010 = fmul double %1009, 0x3BF921FB54442D19, !dbg !33
  %1011 = fptrunc double %1010 to float, !dbg !33
  %1012 = fneg float %1011, !dbg !33
  %.not2526.i247 = icmp slt i32 %1004, 0, !dbg !33
  %r.i.i.i.0.i248 = select i1 %.not2526.i247, float %1012, float %1011, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i249, !dbg !33

__internal_trig_reduction_kernel.exit.i.i249:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i238, %__nv_fmul_rn.exit.i.i.i272, %__nv_sinf.exit220
  %i.i.1.i250 = phi i32 [ %.01.i223, %__nv_sinf.exit220 ], [ 0, %__nv_fmul_rn.exit.i.i.i272 ], [ %spec.select.i242, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !33
  %t.i.i.1.i251 = phi float [ %.04.i229, %__nv_sinf.exit220 ], [ %.08.i274, %__nv_fmul_rn.exit.i.i.i272 ], [ %r.i.i.i.0.i248, %__internal_trig_reduction_slowpath.exit.i.i.i238 ], !dbg !33
  %1013 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not28.i252 = icmp eq i32 %1013, 0, !dbg !33
  %1014 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #5, !dbg !33
  %1015 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i251, float %t.i.i.1.i251) #5, !dbg !33
  %.011.i253 = select i1 %.not28.i252, float %1015, float %1014, !dbg !33
  %1016 = and i32 %i.i.1.i250, 1, !dbg !33
  %.not29.i254 = icmp eq i32 %1016, 0, !dbg !33
  %1017 = select i1 %.not29.i254, float %t.i.i.1.i251, float 1.000000e+00, !dbg !33
  %1018 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not30.i255 = icmp eq i32 %1018, 0, !dbg !33
  %1019 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i253, float %1017, float 0.000000e+00) #5, !dbg !33
  %1020 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i253, float %1017, float 0.000000e+00) #5, !dbg !33
  %.012.i256 = select i1 %.not30.i255, float %1020, float %1019, !dbg !33
  br i1 %.not29.i254, label %__internal_fmad.exit2.i.i.i260, label %__internal_fmad.exit1.i.i.i257, !dbg !33

__internal_fmad.exit1.i.i.i257:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i249
  %1021 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not31.i258 = icmp eq i32 %1021, 0, !dbg !33
  %1022 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #5, !dbg !33
  %1023 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i253, float 0xBF56C0FDA0000000) #5, !dbg !33
  %.013.i259 = select i1 %.not31.i258, float %1023, float %1022, !dbg !33
  br label %__internal_fmad.exit2.i.i.i260, !dbg !33

__internal_fmad.exit2.i.i.i260:                   ; preds = %__internal_fmad.exit1.i.i.i257, %__internal_trig_reduction_kernel.exit.i.i249
  %1024 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i257 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !33
  %1025 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i257 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !33
  %1026 = phi float [ %.013.i259, %__internal_fmad.exit1.i.i.i257 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i249 ], !dbg !33
  %1027 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not32.i261 = icmp eq i32 %1027, 0, !dbg !33
  %1028 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1026, float %.011.i253, float %1025) #5, !dbg !33
  %1029 = tail call float @llvm.nvvm.fma.rn.f(float %1026, float %.011.i253, float %1025) #5, !dbg !33
  %.010.i262 = select i1 %.not32.i261, float %1029, float %1028, !dbg !33
  %1030 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not33.i263 = icmp eq i32 %1030, 0, !dbg !33
  %1031 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i262, float %.011.i253, float %1024) #5, !dbg !33
  %1032 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i262, float %.011.i253, float %1024) #5, !dbg !33
  %.09.i264 = select i1 %.not33.i263, float %1032, float %1031, !dbg !33
  %1033 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not34.i265 = icmp eq i32 %1033, 0, !dbg !33
  %1034 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i264, float %.012.i256, float %1017) #5, !dbg !33
  %1035 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i264, float %.012.i256, float %1017) #5, !dbg !33
  %.05.i266 = select i1 %.not34.i265, float %1035, float %1034, !dbg !33
  %1036 = and i32 %i.i.1.i250, 2, !dbg !33
  %.not35.i267 = icmp eq i32 %1036, 0, !dbg !33
  br i1 %.not35.i267, label %__nv_sinf.exit275, label %__internal_fmad.exit5.i.i.i268, !dbg !33

__internal_fmad.exit5.i.i.i268:                   ; preds = %__internal_fmad.exit2.i.i.i260
  %1037 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !33
  %.not36.i269 = icmp eq i32 %1037, 0, !dbg !33
  %1038 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #5, !dbg !33
  %1039 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i266, float -1.000000e+00, float 0.000000e+00) #5, !dbg !33
  %.0.i270 = select i1 %.not36.i269, float %1039, float %1038, !dbg !33
  br label %__nv_sinf.exit275, !dbg !33

__nv_sinf.exit275:                                ; preds = %__internal_fmad.exit2.i.i.i260, %__internal_fmad.exit5.i.i.i268
  %z.i.i.0.i271 = phi float [ %.0.i270, %__internal_fmad.exit5.i.i.i268 ], [ %.05.i266, %__internal_fmad.exit2.i.i.i260 ], !dbg !33
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i221), !dbg !33
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !36
  %1040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i605 = icmp eq i32 %1040, 0, !dbg !36
  %.01.i606 = select i1 %.not.i605, i32 %837, i32 %836, !dbg !36
  %1041 = sitofp i32 %.01.i606 to float, !dbg !36
  %1042 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not15.i607 = icmp eq i32 %1042, 0, !dbg !36
  %1043 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1041, float 0xBFF921FB40000000, float %832) #5, !dbg !36
  %1044 = tail call float @llvm.nvvm.fma.rn.f(float %1041, float 0xBFF921FB40000000, float %832) #5, !dbg !36
  %.02.i608 = select i1 %.not15.i607, float %1044, float %1043, !dbg !36
  %1045 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not16.i609 = icmp eq i32 %1045, 0, !dbg !36
  %1046 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1041, float 0xBE74442D00000000, float %.02.i608) #5, !dbg !36
  %1047 = tail call float @llvm.nvvm.fma.rn.f(float %1041, float 0xBE74442D00000000, float %.02.i608) #5, !dbg !36
  %.03.i610 = select i1 %.not16.i609, float %1047, float %1046, !dbg !36
  %1048 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not17.i611 = icmp eq i32 %1048, 0, !dbg !36
  %1049 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1041, float 0xBCF84698A0000000, float %.03.i610) #5, !dbg !36
  %1050 = tail call float @llvm.nvvm.fma.rn.f(float %1041, float 0xBCF84698A0000000, float %.03.i610) #5, !dbg !36
  %.04.i612 = select i1 %.not17.i611, float %1050, float %1049, !dbg !36
  %1051 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not18.i613 = icmp eq i32 %1051, 0, !dbg !36
  %.06.i614 = select i1 %.not18.i613, float %850, float %849, !dbg !36
  %1052 = fcmp ult float %.06.i614, 1.056150e+05, !dbg !36
  br i1 %1052, label %__internal_trig_reduction_kernel.exit.i.i632, label %__nv_isinff.exit.i.i.i615, !dbg !36

__nv_isinff.exit.i.i.i615:                        ; preds = %__nv_sinf.exit275
  %1053 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not19.i616 = icmp eq i32 %1053, 0, !dbg !36
  %.07.i617 = select i1 %.not19.i616, float %850, float %849, !dbg !36
  %1054 = fcmp oeq float %.07.i617, 0x7FF0000000000000, !dbg !36
  br i1 %1054, label %__nv_fmul_rn.exit.i.i.i655, label %1058, !dbg !36

__nv_fmul_rn.exit.i.i.i655:                       ; preds = %__nv_isinff.exit.i.i.i615
  %1055 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not27.i656 = icmp eq i32 %1055, 0, !dbg !36
  %1056 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %832, float 0.000000e+00) #5, !dbg !36
  %1057 = tail call float @llvm.nvvm.mul.rn.f(float %832, float 0.000000e+00) #5, !dbg !36
  %.08.i657 = select i1 %.not27.i656, float %1057, float %1056, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !36

1058:                                             ; preds = %__nv_isinff.exit.i.i.i615
  %1059 = bitcast float %832 to i32, !dbg !36
  %1060 = lshr i32 %1059, 23, !dbg !36
  %1061 = and i32 %1060, 224, !dbg !36
  %1062 = add nsw i32 %1061, -128, !dbg !36
  %1063 = shl i32 %1059, 8, !dbg !36
  %1064 = or i32 %1063, -2147483648, !dbg !36
  %1065 = lshr exact i32 %1062, 5, !dbg !36
  br label %1066, !dbg !36

1066:                                             ; preds = %1058, %1066
  %indvars.iv914 = phi i64 [ 0, %1058 ], [ %indvars.iv.next915, %1066 ]
  %hi.i.i.i.0.i618844 = phi i32 [ 0, %1058 ], [ %1071, %1066 ]
  %1067 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv914, !dbg !36
  %1068 = load i32, ptr addrspace(1) %1067, align 4, !dbg !36
  %1069 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1068, i32 %1064, i32 %hi.i.i.i.0.i618844) #6, !dbg !36, !srcloc !18
  %1070 = extractvalue { i32, i32 } %1069, 0, !dbg !36
  %1071 = extractvalue { i32, i32 } %1069, 1, !dbg !36
  %1072 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %indvars.iv914, !dbg !36
  store i32 %1070, ptr %1072, align 4, !dbg !36
  %indvars.iv.next915 = add nuw nsw i64 %indvars.iv914, 1, !dbg !36
  %exitcond916.not = icmp eq i64 %indvars.iv.next915, 6, !dbg !36
  br i1 %exitcond916.not, label %1073, label %1066, !dbg !36, !llvm.loop !37

1073:                                             ; preds = %1066
  %1074 = getelementptr inbounds i8, ptr %result.i.i.i.i604, i64 24, !dbg !36
  store i32 %1071, ptr %1074, align 4, !dbg !36
  %1075 = and i32 %1060, 31, !dbg !36
  %1076 = sub nsw i32 6, %1065, !dbg !36
  %1077 = sext i32 %1076 to i64, !dbg !36
  %1078 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %1077, !dbg !36
  %1079 = load i32, ptr %1078, align 4, !dbg !36
  %1080 = sub nsw i32 5, %1065, !dbg !36
  %1081 = sext i32 %1080 to i64, !dbg !36
  %1082 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %1081, !dbg !36
  %1083 = load i32, ptr %1082, align 4, !dbg !36
  %.not20.i620 = icmp eq i32 %1075, 0, !dbg !36
  br i1 %.not20.i620, label %__internal_trig_reduction_slowpath.exit.i.i.i621, label %1084, !dbg !36

1084:                                             ; preds = %1073
  %1085 = sub nsw i32 4, %1065, !dbg !36
  %1086 = sub nuw nsw i32 32, %1075, !dbg !36
  %1087 = shl i32 %1079, %1075, !dbg !36
  %1088 = lshr i32 %1083, %1086, !dbg !36
  %1089 = add i32 %1088, %1087, !dbg !36
  %1090 = shl i32 %1083, %1075, !dbg !36
  %1091 = sext i32 %1085 to i64, !dbg !36
  %1092 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i604, i64 0, i64 %1091, !dbg !36
  %1093 = load i32, ptr %1092, align 4, !dbg !36
  %1094 = lshr i32 %1093, %1086, !dbg !36
  %1095 = add i32 %1094, %1090, !dbg !36
  br label %__internal_trig_reduction_slowpath.exit.i.i.i621, !dbg !36

__internal_trig_reduction_slowpath.exit.i.i.i621: ; preds = %1084, %1073
  %hi.i.i.i.1.i622 = phi i32 [ %1089, %1084 ], [ %1079, %1073 ], !dbg !36
  %lo.i.i.i.0.i623 = phi i32 [ %1095, %1084 ], [ %1083, %1073 ], !dbg !36
  %1096 = lshr i32 %hi.i.i.i.1.i622, 30, !dbg !36
  %1097 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i622, i32 %lo.i.i.i.0.i623, i32 2), !dbg !36
  %1098 = shl i32 %lo.i.i.i.0.i623, 2, !dbg !36
  %1099 = lshr i32 %1097, 31, !dbg !36
  %1100 = add nuw nsw i32 %1099, %1096, !dbg !36
  %1101 = sub nsw i32 0, %1100, !dbg !36
  %.not2123.i624 = icmp slt i32 %1059, 0, !dbg !36
  %spec.select.i625 = select i1 %.not2123.i624, i32 %1101, i32 %1100, !dbg !36
  %1102 = xor i32 %1097, %1059, !dbg !36
  %.lobit.i626 = ashr i32 %1097, 31, !dbg !36
  %hi.i.i.i.2.i627 = xor i32 %.lobit.i626, %1097, !dbg !36
  %lo.i.i.i.1.i629 = xor i32 %.lobit.i626, %1098, !dbg !36
  %1103 = zext i32 %hi.i.i.i.2.i627 to i64, !dbg !36
  %1104 = shl nuw i64 %1103, 32, !dbg !36
  %1105 = zext i32 %lo.i.i.i.1.i629 to i64, !dbg !36
  %1106 = or disjoint i64 %1104, %1105, !dbg !36
  %1107 = sitofp i64 %1106 to double, !dbg !36
  %1108 = fmul double %1107, 0x3BF921FB54442D19, !dbg !36
  %1109 = fptrunc double %1108 to float, !dbg !36
  %1110 = fneg float %1109, !dbg !36
  %.not2526.i630 = icmp slt i32 %1102, 0, !dbg !36
  %r.i.i.i.0.i631 = select i1 %.not2526.i630, float %1110, float %1109, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i632, !dbg !36

__internal_trig_reduction_kernel.exit.i.i632:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i621, %__nv_fmul_rn.exit.i.i.i655, %__nv_sinf.exit275
  %i.i.1.i633 = phi i32 [ %.01.i606, %__nv_sinf.exit275 ], [ 0, %__nv_fmul_rn.exit.i.i.i655 ], [ %spec.select.i625, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !36
  %t.i.i.1.i634 = phi float [ %.04.i612, %__nv_sinf.exit275 ], [ %.08.i657, %__nv_fmul_rn.exit.i.i.i655 ], [ %r.i.i.i.0.i631, %__internal_trig_reduction_slowpath.exit.i.i.i621 ], !dbg !36
  %1111 = add i32 %i.i.1.i633, 1, !dbg !36
  %1112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not28.i635 = icmp eq i32 %1112, 0, !dbg !36
  %1113 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #5, !dbg !36
  %1114 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i634, float %t.i.i.1.i634) #5, !dbg !36
  %.011.i636 = select i1 %.not28.i635, float %1114, float %1113, !dbg !36
  %1115 = and i32 %i.i.1.i633, 1, !dbg !36
  %.not29.not.i637 = icmp eq i32 %1115, 0, !dbg !36
  %1116 = select i1 %.not29.not.i637, float 1.000000e+00, float %t.i.i.1.i634, !dbg !36
  %1117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not30.i638 = icmp eq i32 %1117, 0, !dbg !36
  %1118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i636, float %1116, float 0.000000e+00) #5, !dbg !36
  %1119 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i636, float %1116, float 0.000000e+00) #5, !dbg !36
  %.012.i639 = select i1 %.not30.i638, float %1119, float %1118, !dbg !36
  br i1 %.not29.not.i637, label %__internal_fmad.exit1.i.i.i652, label %__internal_fmad.exit2.i.i.i640, !dbg !36

__internal_fmad.exit1.i.i.i652:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i632
  %1120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not31.i653 = icmp eq i32 %1120, 0, !dbg !36
  %1121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #5, !dbg !36
  %1122 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i636, float 0xBF56C0FDA0000000) #5, !dbg !36
  %.013.i654 = select i1 %.not31.i653, float %1122, float %1121, !dbg !36
  br label %__internal_fmad.exit2.i.i.i640, !dbg !36

__internal_fmad.exit2.i.i.i640:                   ; preds = %__internal_fmad.exit1.i.i.i652, %__internal_trig_reduction_kernel.exit.i.i632
  %1123 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i652 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !36
  %1124 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i652 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !36
  %1125 = phi float [ %.013.i654, %__internal_fmad.exit1.i.i.i652 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i632 ], !dbg !36
  %1126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not32.i641 = icmp eq i32 %1126, 0, !dbg !36
  %1127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1125, float %.011.i636, float %1124) #5, !dbg !36
  %1128 = tail call float @llvm.nvvm.fma.rn.f(float %1125, float %.011.i636, float %1124) #5, !dbg !36
  %.010.i642 = select i1 %.not32.i641, float %1128, float %1127, !dbg !36
  %1129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not33.i643 = icmp eq i32 %1129, 0, !dbg !36
  %1130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i642, float %.011.i636, float %1123) #5, !dbg !36
  %1131 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i642, float %.011.i636, float %1123) #5, !dbg !36
  %.09.i644 = select i1 %.not33.i643, float %1131, float %1130, !dbg !36
  %1132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not34.i645 = icmp eq i32 %1132, 0, !dbg !36
  %1133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i644, float %.012.i639, float %1116) #5, !dbg !36
  %1134 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i644, float %.012.i639, float %1116) #5, !dbg !36
  %.05.i646 = select i1 %.not34.i645, float %1134, float %1133, !dbg !36
  %1135 = and i32 %1111, 2, !dbg !36
  %.not35.i647 = icmp eq i32 %1135, 0, !dbg !36
  br i1 %.not35.i647, label %__nv_cosf.exit658, label %__internal_fmad.exit5.i.i.i648, !dbg !36

__internal_fmad.exit5.i.i.i648:                   ; preds = %__internal_fmad.exit2.i.i.i640
  %1136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not36.i649 = icmp eq i32 %1136, 0, !dbg !36
  %1137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #5, !dbg !36
  %1138 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i646, float -1.000000e+00, float 0.000000e+00) #5, !dbg !36
  %.0.i650 = select i1 %.not36.i649, float %1138, float %1137, !dbg !36
  br label %__nv_cosf.exit658, !dbg !36

__nv_cosf.exit658:                                ; preds = %__internal_fmad.exit2.i.i.i640, %__internal_fmad.exit5.i.i.i648
  %z.i.i.0.i651 = phi float [ %.0.i650, %__internal_fmad.exit5.i.i.i648 ], [ %.05.i646, %__internal_fmad.exit2.i.i.i640 ], !dbg !36
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i604), !dbg !36
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !36
  %1139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not.i660 = icmp eq i32 %1139, 0, !dbg !36
  %.01.i661 = select i1 %.not.i660, i32 %940, i32 %939, !dbg !36
  %1140 = sitofp i32 %.01.i661 to float, !dbg !36
  %1141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not15.i662 = icmp eq i32 %1141, 0, !dbg !36
  %1142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1140, float 0xBFF921FB40000000, float %833) #5, !dbg !36
  %1143 = tail call float @llvm.nvvm.fma.rn.f(float %1140, float 0xBFF921FB40000000, float %833) #5, !dbg !36
  %.02.i663 = select i1 %.not15.i662, float %1143, float %1142, !dbg !36
  %1144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not16.i664 = icmp eq i32 %1144, 0, !dbg !36
  %1145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1140, float 0xBE74442D00000000, float %.02.i663) #5, !dbg !36
  %1146 = tail call float @llvm.nvvm.fma.rn.f(float %1140, float 0xBE74442D00000000, float %.02.i663) #5, !dbg !36
  %.03.i665 = select i1 %.not16.i664, float %1146, float %1145, !dbg !36
  %1147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not17.i666 = icmp eq i32 %1147, 0, !dbg !36
  %1148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1140, float 0xBCF84698A0000000, float %.03.i665) #5, !dbg !36
  %1149 = tail call float @llvm.nvvm.fma.rn.f(float %1140, float 0xBCF84698A0000000, float %.03.i665) #5, !dbg !36
  %.04.i667 = select i1 %.not17.i666, float %1149, float %1148, !dbg !36
  %1150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not18.i668 = icmp eq i32 %1150, 0, !dbg !36
  %.06.i669 = select i1 %.not18.i668, float %953, float %952, !dbg !36
  %1151 = fcmp ult float %.06.i669, 1.056150e+05, !dbg !36
  br i1 %1151, label %__internal_trig_reduction_kernel.exit.i.i687, label %__nv_isinff.exit.i.i.i670, !dbg !36

__nv_isinff.exit.i.i.i670:                        ; preds = %__nv_cosf.exit658
  %1152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not19.i671 = icmp eq i32 %1152, 0, !dbg !36
  %.07.i672 = select i1 %.not19.i671, float %953, float %952, !dbg !36
  %1153 = fcmp oeq float %.07.i672, 0x7FF0000000000000, !dbg !36
  br i1 %1153, label %__nv_fmul_rn.exit.i.i.i710, label %1157, !dbg !36

__nv_fmul_rn.exit.i.i.i710:                       ; preds = %__nv_isinff.exit.i.i.i670
  %1154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not27.i711 = icmp eq i32 %1154, 0, !dbg !36
  %1155 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %833, float 0.000000e+00) #5, !dbg !36
  %1156 = tail call float @llvm.nvvm.mul.rn.f(float %833, float 0.000000e+00) #5, !dbg !36
  %.08.i712 = select i1 %.not27.i711, float %1156, float %1155, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !36

1157:                                             ; preds = %__nv_isinff.exit.i.i.i670
  %1158 = bitcast float %833 to i32, !dbg !36
  %1159 = lshr i32 %1158, 23, !dbg !36
  %1160 = and i32 %1159, 224, !dbg !36
  %1161 = add nsw i32 %1160, -128, !dbg !36
  %1162 = shl i32 %1158, 8, !dbg !36
  %1163 = or i32 %1162, -2147483648, !dbg !36
  %1164 = lshr exact i32 %1161, 5, !dbg !36
  br label %1165, !dbg !36

1165:                                             ; preds = %1157, %1165
  %indvars.iv917 = phi i64 [ 0, %1157 ], [ %indvars.iv.next918, %1165 ]
  %hi.i.i.i.0.i673846 = phi i32 [ 0, %1157 ], [ %1170, %1165 ]
  %1166 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv917, !dbg !36
  %1167 = load i32, ptr addrspace(1) %1166, align 4, !dbg !36
  %1168 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1167, i32 %1163, i32 %hi.i.i.i.0.i673846) #6, !dbg !36, !srcloc !18
  %1169 = extractvalue { i32, i32 } %1168, 0, !dbg !36
  %1170 = extractvalue { i32, i32 } %1168, 1, !dbg !36
  %1171 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %indvars.iv917, !dbg !36
  store i32 %1169, ptr %1171, align 4, !dbg !36
  %indvars.iv.next918 = add nuw nsw i64 %indvars.iv917, 1, !dbg !36
  %exitcond919.not = icmp eq i64 %indvars.iv.next918, 6, !dbg !36
  br i1 %exitcond919.not, label %1172, label %1165, !dbg !36, !llvm.loop !38

1172:                                             ; preds = %1165
  %1173 = getelementptr inbounds i8, ptr %result.i.i.i.i659, i64 24, !dbg !36
  store i32 %1170, ptr %1173, align 4, !dbg !36
  %1174 = and i32 %1159, 31, !dbg !36
  %1175 = sub nsw i32 6, %1164, !dbg !36
  %1176 = sext i32 %1175 to i64, !dbg !36
  %1177 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %1176, !dbg !36
  %1178 = load i32, ptr %1177, align 4, !dbg !36
  %1179 = sub nsw i32 5, %1164, !dbg !36
  %1180 = sext i32 %1179 to i64, !dbg !36
  %1181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %1180, !dbg !36
  %1182 = load i32, ptr %1181, align 4, !dbg !36
  %.not20.i675 = icmp eq i32 %1174, 0, !dbg !36
  br i1 %.not20.i675, label %__internal_trig_reduction_slowpath.exit.i.i.i676, label %1183, !dbg !36

1183:                                             ; preds = %1172
  %1184 = sub nsw i32 4, %1164, !dbg !36
  %1185 = sub nuw nsw i32 32, %1174, !dbg !36
  %1186 = shl i32 %1178, %1174, !dbg !36
  %1187 = lshr i32 %1182, %1185, !dbg !36
  %1188 = add i32 %1187, %1186, !dbg !36
  %1189 = shl i32 %1182, %1174, !dbg !36
  %1190 = sext i32 %1184 to i64, !dbg !36
  %1191 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i659, i64 0, i64 %1190, !dbg !36
  %1192 = load i32, ptr %1191, align 4, !dbg !36
  %1193 = lshr i32 %1192, %1185, !dbg !36
  %1194 = add i32 %1193, %1189, !dbg !36
  br label %__internal_trig_reduction_slowpath.exit.i.i.i676, !dbg !36

__internal_trig_reduction_slowpath.exit.i.i.i676: ; preds = %1183, %1172
  %hi.i.i.i.1.i677 = phi i32 [ %1188, %1183 ], [ %1178, %1172 ], !dbg !36
  %lo.i.i.i.0.i678 = phi i32 [ %1194, %1183 ], [ %1182, %1172 ], !dbg !36
  %1195 = lshr i32 %hi.i.i.i.1.i677, 30, !dbg !36
  %1196 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i677, i32 %lo.i.i.i.0.i678, i32 2), !dbg !36
  %1197 = shl i32 %lo.i.i.i.0.i678, 2, !dbg !36
  %1198 = lshr i32 %1196, 31, !dbg !36
  %1199 = add nuw nsw i32 %1198, %1195, !dbg !36
  %1200 = sub nsw i32 0, %1199, !dbg !36
  %.not2123.i679 = icmp slt i32 %1158, 0, !dbg !36
  %spec.select.i680 = select i1 %.not2123.i679, i32 %1200, i32 %1199, !dbg !36
  %1201 = xor i32 %1196, %1158, !dbg !36
  %.lobit.i681 = ashr i32 %1196, 31, !dbg !36
  %hi.i.i.i.2.i682 = xor i32 %.lobit.i681, %1196, !dbg !36
  %lo.i.i.i.1.i684 = xor i32 %.lobit.i681, %1197, !dbg !36
  %1202 = zext i32 %hi.i.i.i.2.i682 to i64, !dbg !36
  %1203 = shl nuw i64 %1202, 32, !dbg !36
  %1204 = zext i32 %lo.i.i.i.1.i684 to i64, !dbg !36
  %1205 = or disjoint i64 %1203, %1204, !dbg !36
  %1206 = sitofp i64 %1205 to double, !dbg !36
  %1207 = fmul double %1206, 0x3BF921FB54442D19, !dbg !36
  %1208 = fptrunc double %1207 to float, !dbg !36
  %1209 = fneg float %1208, !dbg !36
  %.not2526.i685 = icmp slt i32 %1201, 0, !dbg !36
  %r.i.i.i.0.i686 = select i1 %.not2526.i685, float %1209, float %1208, !dbg !36
  br label %__internal_trig_reduction_kernel.exit.i.i687, !dbg !36

__internal_trig_reduction_kernel.exit.i.i687:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i676, %__nv_fmul_rn.exit.i.i.i710, %__nv_cosf.exit658
  %i.i.1.i688 = phi i32 [ %.01.i661, %__nv_cosf.exit658 ], [ 0, %__nv_fmul_rn.exit.i.i.i710 ], [ %spec.select.i680, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !36
  %t.i.i.1.i689 = phi float [ %.04.i667, %__nv_cosf.exit658 ], [ %.08.i712, %__nv_fmul_rn.exit.i.i.i710 ], [ %r.i.i.i.0.i686, %__internal_trig_reduction_slowpath.exit.i.i.i676 ], !dbg !36
  %1210 = add i32 %i.i.1.i688, 1, !dbg !36
  %1211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not28.i690 = icmp eq i32 %1211, 0, !dbg !36
  %1212 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #5, !dbg !36
  %1213 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i689, float %t.i.i.1.i689) #5, !dbg !36
  %.011.i691 = select i1 %.not28.i690, float %1213, float %1212, !dbg !36
  %1214 = and i32 %i.i.1.i688, 1, !dbg !36
  %.not29.not.i692 = icmp eq i32 %1214, 0, !dbg !36
  %1215 = select i1 %.not29.not.i692, float 1.000000e+00, float %t.i.i.1.i689, !dbg !36
  %1216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not30.i693 = icmp eq i32 %1216, 0, !dbg !36
  %1217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i691, float %1215, float 0.000000e+00) #5, !dbg !36
  %1218 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i691, float %1215, float 0.000000e+00) #5, !dbg !36
  %.012.i694 = select i1 %.not30.i693, float %1218, float %1217, !dbg !36
  br i1 %.not29.not.i692, label %__internal_fmad.exit1.i.i.i707, label %__internal_fmad.exit2.i.i.i695, !dbg !36

__internal_fmad.exit1.i.i.i707:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i687
  %1219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not31.i708 = icmp eq i32 %1219, 0, !dbg !36
  %1220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #5, !dbg !36
  %1221 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i691, float 0xBF56C0FDA0000000) #5, !dbg !36
  %.013.i709 = select i1 %.not31.i708, float %1221, float %1220, !dbg !36
  br label %__internal_fmad.exit2.i.i.i695, !dbg !36

__internal_fmad.exit2.i.i.i695:                   ; preds = %__internal_fmad.exit1.i.i.i707, %__internal_trig_reduction_kernel.exit.i.i687
  %1222 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i707 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !36
  %1223 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i707 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !36
  %1224 = phi float [ %.013.i709, %__internal_fmad.exit1.i.i.i707 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i687 ], !dbg !36
  %1225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not32.i696 = icmp eq i32 %1225, 0, !dbg !36
  %1226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1224, float %.011.i691, float %1223) #5, !dbg !36
  %1227 = tail call float @llvm.nvvm.fma.rn.f(float %1224, float %.011.i691, float %1223) #5, !dbg !36
  %.010.i697 = select i1 %.not32.i696, float %1227, float %1226, !dbg !36
  %1228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not33.i698 = icmp eq i32 %1228, 0, !dbg !36
  %1229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i697, float %.011.i691, float %1222) #5, !dbg !36
  %1230 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i697, float %.011.i691, float %1222) #5, !dbg !36
  %.09.i699 = select i1 %.not33.i698, float %1230, float %1229, !dbg !36
  %1231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not34.i700 = icmp eq i32 %1231, 0, !dbg !36
  %1232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i699, float %.012.i694, float %1215) #5, !dbg !36
  %1233 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i699, float %.012.i694, float %1215) #5, !dbg !36
  %.05.i701 = select i1 %.not34.i700, float %1233, float %1232, !dbg !36
  %1234 = and i32 %1210, 2, !dbg !36
  %.not35.i702 = icmp eq i32 %1234, 0, !dbg !36
  br i1 %.not35.i702, label %__nv_cosf.exit713, label %__internal_fmad.exit5.i.i.i703, !dbg !36

__internal_fmad.exit5.i.i.i703:                   ; preds = %__internal_fmad.exit2.i.i.i695
  %1235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !36
  %.not36.i704 = icmp eq i32 %1235, 0, !dbg !36
  %1236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #5, !dbg !36
  %1237 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i701, float -1.000000e+00, float 0.000000e+00) #5, !dbg !36
  %.0.i705 = select i1 %.not36.i704, float %1237, float %1236, !dbg !36
  br label %__nv_cosf.exit713, !dbg !36

__nv_cosf.exit713:                                ; preds = %__internal_fmad.exit2.i.i.i695, %__internal_fmad.exit5.i.i.i703
  %z.i.i.0.i706 = phi float [ %.0.i705, %__internal_fmad.exit5.i.i.i703 ], [ %.05.i701, %__internal_fmad.exit2.i.i.i695 ], !dbg !36
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i659), !dbg !36
  %1238 = fmul float %24, 1.600000e+01, !dbg !39
  %1239 = fmul float %25, 1.600000e+01, !dbg !39
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !40
  %1240 = fmul float %1238, 0x3FE45F3060000000, !dbg !40
  %1241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i277 = icmp eq i32 %1241, 0, !dbg !40
  %1242 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %1240) #5, !dbg !40
  %1243 = tail call i32 @llvm.nvvm.f2i.rn(float %1240) #5, !dbg !40
  %.01.i278 = select i1 %.not.i277, i32 %1243, i32 %1242, !dbg !40
  %1244 = sitofp i32 %.01.i278 to float, !dbg !40
  %1245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not15.i279 = icmp eq i32 %1245, 0, !dbg !40
  %1246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1244, float 0xBFF921FB40000000, float %1238) #5, !dbg !40
  %1247 = tail call float @llvm.nvvm.fma.rn.f(float %1244, float 0xBFF921FB40000000, float %1238) #5, !dbg !40
  %.02.i280 = select i1 %.not15.i279, float %1247, float %1246, !dbg !40
  %1248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not16.i281 = icmp eq i32 %1248, 0, !dbg !40
  %1249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1244, float 0xBE74442D00000000, float %.02.i280) #5, !dbg !40
  %1250 = tail call float @llvm.nvvm.fma.rn.f(float %1244, float 0xBE74442D00000000, float %.02.i280) #5, !dbg !40
  %.03.i282 = select i1 %.not16.i281, float %1250, float %1249, !dbg !40
  %1251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not17.i283 = icmp eq i32 %1251, 0, !dbg !40
  %1252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1244, float 0xBCF84698A0000000, float %.03.i282) #5, !dbg !40
  %1253 = tail call float @llvm.nvvm.fma.rn.f(float %1244, float 0xBCF84698A0000000, float %.03.i282) #5, !dbg !40
  %.04.i284 = select i1 %.not17.i283, float %1253, float %1252, !dbg !40
  %1254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not18.i285 = icmp eq i32 %1254, 0, !dbg !40
  %1255 = tail call float @llvm.nvvm.fabs.ftz.f(float %1238) #5, !dbg !40
  %1256 = tail call float @llvm.nvvm.fabs.f(float %1238) #5, !dbg !40
  %.06.i286 = select i1 %.not18.i285, float %1256, float %1255, !dbg !40
  %1257 = fcmp ult float %.06.i286, 1.056150e+05, !dbg !40
  br i1 %1257, label %__internal_trig_reduction_kernel.exit.i.i304, label %__nv_isinff.exit.i.i.i287, !dbg !40

__nv_isinff.exit.i.i.i287:                        ; preds = %__nv_cosf.exit713
  %1258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not19.i288 = icmp eq i32 %1258, 0, !dbg !40
  %.07.i289 = select i1 %.not19.i288, float %1256, float %1255, !dbg !40
  %1259 = fcmp oeq float %.07.i289, 0x7FF0000000000000, !dbg !40
  br i1 %1259, label %__nv_fmul_rn.exit.i.i.i327, label %1263, !dbg !40

__nv_fmul_rn.exit.i.i.i327:                       ; preds = %__nv_isinff.exit.i.i.i287
  %1260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not27.i328 = icmp eq i32 %1260, 0, !dbg !40
  %1261 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1238, float 0.000000e+00) #5, !dbg !40
  %1262 = tail call float @llvm.nvvm.mul.rn.f(float %1238, float 0.000000e+00) #5, !dbg !40
  %.08.i329 = select i1 %.not27.i328, float %1262, float %1261, !dbg !40
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !40

1263:                                             ; preds = %__nv_isinff.exit.i.i.i287
  %1264 = bitcast float %1238 to i32, !dbg !40
  %1265 = lshr i32 %1264, 23, !dbg !40
  %1266 = and i32 %1265, 224, !dbg !40
  %1267 = add nsw i32 %1266, -128, !dbg !40
  %1268 = shl i32 %1264, 8, !dbg !40
  %1269 = or i32 %1268, -2147483648, !dbg !40
  %1270 = lshr exact i32 %1267, 5, !dbg !40
  br label %1271, !dbg !40

1271:                                             ; preds = %1263, %1271
  %indvars.iv920 = phi i64 [ 0, %1263 ], [ %indvars.iv.next921, %1271 ]
  %hi.i.i.i.0.i290848 = phi i32 [ 0, %1263 ], [ %1276, %1271 ]
  %1272 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv920, !dbg !40
  %1273 = load i32, ptr addrspace(1) %1272, align 4, !dbg !40
  %1274 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1273, i32 %1269, i32 %hi.i.i.i.0.i290848) #6, !dbg !40, !srcloc !18
  %1275 = extractvalue { i32, i32 } %1274, 0, !dbg !40
  %1276 = extractvalue { i32, i32 } %1274, 1, !dbg !40
  %1277 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %indvars.iv920, !dbg !40
  store i32 %1275, ptr %1277, align 4, !dbg !40
  %indvars.iv.next921 = add nuw nsw i64 %indvars.iv920, 1, !dbg !40
  %exitcond922.not = icmp eq i64 %indvars.iv.next921, 6, !dbg !40
  br i1 %exitcond922.not, label %1278, label %1271, !dbg !40, !llvm.loop !41

1278:                                             ; preds = %1271
  %1279 = getelementptr inbounds i8, ptr %result.i.i.i.i276, i64 24, !dbg !40
  store i32 %1276, ptr %1279, align 4, !dbg !40
  %1280 = and i32 %1265, 31, !dbg !40
  %1281 = sub nsw i32 6, %1270, !dbg !40
  %1282 = sext i32 %1281 to i64, !dbg !40
  %1283 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1282, !dbg !40
  %1284 = load i32, ptr %1283, align 4, !dbg !40
  %1285 = sub nsw i32 5, %1270, !dbg !40
  %1286 = sext i32 %1285 to i64, !dbg !40
  %1287 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1286, !dbg !40
  %1288 = load i32, ptr %1287, align 4, !dbg !40
  %.not20.i292 = icmp eq i32 %1280, 0, !dbg !40
  br i1 %.not20.i292, label %__internal_trig_reduction_slowpath.exit.i.i.i293, label %1289, !dbg !40

1289:                                             ; preds = %1278
  %1290 = sub nsw i32 4, %1270, !dbg !40
  %1291 = sub nuw nsw i32 32, %1280, !dbg !40
  %1292 = shl i32 %1284, %1280, !dbg !40
  %1293 = lshr i32 %1288, %1291, !dbg !40
  %1294 = add i32 %1293, %1292, !dbg !40
  %1295 = shl i32 %1288, %1280, !dbg !40
  %1296 = sext i32 %1290 to i64, !dbg !40
  %1297 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i276, i64 0, i64 %1296, !dbg !40
  %1298 = load i32, ptr %1297, align 4, !dbg !40
  %1299 = lshr i32 %1298, %1291, !dbg !40
  %1300 = add i32 %1299, %1295, !dbg !40
  br label %__internal_trig_reduction_slowpath.exit.i.i.i293, !dbg !40

__internal_trig_reduction_slowpath.exit.i.i.i293: ; preds = %1289, %1278
  %hi.i.i.i.1.i294 = phi i32 [ %1294, %1289 ], [ %1284, %1278 ], !dbg !40
  %lo.i.i.i.0.i295 = phi i32 [ %1300, %1289 ], [ %1288, %1278 ], !dbg !40
  %1301 = lshr i32 %hi.i.i.i.1.i294, 30, !dbg !40
  %1302 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i294, i32 %lo.i.i.i.0.i295, i32 2), !dbg !40
  %1303 = shl i32 %lo.i.i.i.0.i295, 2, !dbg !40
  %1304 = lshr i32 %1302, 31, !dbg !40
  %1305 = add nuw nsw i32 %1304, %1301, !dbg !40
  %1306 = sub nsw i32 0, %1305, !dbg !40
  %.not2123.i296 = icmp slt i32 %1264, 0, !dbg !40
  %spec.select.i297 = select i1 %.not2123.i296, i32 %1306, i32 %1305, !dbg !40
  %1307 = xor i32 %1302, %1264, !dbg !40
  %.lobit.i298 = ashr i32 %1302, 31, !dbg !40
  %hi.i.i.i.2.i299 = xor i32 %.lobit.i298, %1302, !dbg !40
  %lo.i.i.i.1.i301 = xor i32 %.lobit.i298, %1303, !dbg !40
  %1308 = zext i32 %hi.i.i.i.2.i299 to i64, !dbg !40
  %1309 = shl nuw i64 %1308, 32, !dbg !40
  %1310 = zext i32 %lo.i.i.i.1.i301 to i64, !dbg !40
  %1311 = or disjoint i64 %1309, %1310, !dbg !40
  %1312 = sitofp i64 %1311 to double, !dbg !40
  %1313 = fmul double %1312, 0x3BF921FB54442D19, !dbg !40
  %1314 = fptrunc double %1313 to float, !dbg !40
  %1315 = fneg float %1314, !dbg !40
  %.not2526.i302 = icmp slt i32 %1307, 0, !dbg !40
  %r.i.i.i.0.i303 = select i1 %.not2526.i302, float %1315, float %1314, !dbg !40
  br label %__internal_trig_reduction_kernel.exit.i.i304, !dbg !40

__internal_trig_reduction_kernel.exit.i.i304:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i293, %__nv_fmul_rn.exit.i.i.i327, %__nv_cosf.exit713
  %i.i.1.i305 = phi i32 [ %.01.i278, %__nv_cosf.exit713 ], [ 0, %__nv_fmul_rn.exit.i.i.i327 ], [ %spec.select.i297, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !40
  %t.i.i.1.i306 = phi float [ %.04.i284, %__nv_cosf.exit713 ], [ %.08.i329, %__nv_fmul_rn.exit.i.i.i327 ], [ %r.i.i.i.0.i303, %__internal_trig_reduction_slowpath.exit.i.i.i293 ], !dbg !40
  %1316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not28.i307 = icmp eq i32 %1316, 0, !dbg !40
  %1317 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #5, !dbg !40
  %1318 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i306, float %t.i.i.1.i306) #5, !dbg !40
  %.011.i308 = select i1 %.not28.i307, float %1318, float %1317, !dbg !40
  %1319 = and i32 %i.i.1.i305, 1, !dbg !40
  %.not29.i309 = icmp eq i32 %1319, 0, !dbg !40
  %1320 = select i1 %.not29.i309, float %t.i.i.1.i306, float 1.000000e+00, !dbg !40
  %1321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not30.i310 = icmp eq i32 %1321, 0, !dbg !40
  %1322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i308, float %1320, float 0.000000e+00) #5, !dbg !40
  %1323 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i308, float %1320, float 0.000000e+00) #5, !dbg !40
  %.012.i311 = select i1 %.not30.i310, float %1323, float %1322, !dbg !40
  br i1 %.not29.i309, label %__internal_fmad.exit2.i.i.i315, label %__internal_fmad.exit1.i.i.i312, !dbg !40

__internal_fmad.exit1.i.i.i312:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i304
  %1324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not31.i313 = icmp eq i32 %1324, 0, !dbg !40
  %1325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #5, !dbg !40
  %1326 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i308, float 0xBF56C0FDA0000000) #5, !dbg !40
  %.013.i314 = select i1 %.not31.i313, float %1326, float %1325, !dbg !40
  br label %__internal_fmad.exit2.i.i.i315, !dbg !40

__internal_fmad.exit2.i.i.i315:                   ; preds = %__internal_fmad.exit1.i.i.i312, %__internal_trig_reduction_kernel.exit.i.i304
  %1327 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i312 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !40
  %1328 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i312 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !40
  %1329 = phi float [ %.013.i314, %__internal_fmad.exit1.i.i.i312 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i304 ], !dbg !40
  %1330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not32.i316 = icmp eq i32 %1330, 0, !dbg !40
  %1331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1329, float %.011.i308, float %1328) #5, !dbg !40
  %1332 = tail call float @llvm.nvvm.fma.rn.f(float %1329, float %.011.i308, float %1328) #5, !dbg !40
  %.010.i317 = select i1 %.not32.i316, float %1332, float %1331, !dbg !40
  %1333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not33.i318 = icmp eq i32 %1333, 0, !dbg !40
  %1334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i317, float %.011.i308, float %1327) #5, !dbg !40
  %1335 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i317, float %.011.i308, float %1327) #5, !dbg !40
  %.09.i319 = select i1 %.not33.i318, float %1335, float %1334, !dbg !40
  %1336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not34.i320 = icmp eq i32 %1336, 0, !dbg !40
  %1337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i319, float %.012.i311, float %1320) #5, !dbg !40
  %1338 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i319, float %.012.i311, float %1320) #5, !dbg !40
  %.05.i321 = select i1 %.not34.i320, float %1338, float %1337, !dbg !40
  %1339 = and i32 %i.i.1.i305, 2, !dbg !40
  %.not35.i322 = icmp eq i32 %1339, 0, !dbg !40
  br i1 %.not35.i322, label %__nv_sinf.exit330, label %__internal_fmad.exit5.i.i.i323, !dbg !40

__internal_fmad.exit5.i.i.i323:                   ; preds = %__internal_fmad.exit2.i.i.i315
  %1340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not36.i324 = icmp eq i32 %1340, 0, !dbg !40
  %1341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #5, !dbg !40
  %1342 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i321, float -1.000000e+00, float 0.000000e+00) #5, !dbg !40
  %.0.i325 = select i1 %.not36.i324, float %1342, float %1341, !dbg !40
  br label %__nv_sinf.exit330, !dbg !40

__nv_sinf.exit330:                                ; preds = %__internal_fmad.exit2.i.i.i315, %__internal_fmad.exit5.i.i.i323
  %z.i.i.0.i326 = phi float [ %.0.i325, %__internal_fmad.exit5.i.i.i323 ], [ %.05.i321, %__internal_fmad.exit2.i.i.i315 ], !dbg !40
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i276), !dbg !40
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !40
  %1343 = fmul float %1239, 0x3FE45F3060000000, !dbg !40
  %1344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not.i332 = icmp eq i32 %1344, 0, !dbg !40
  %1345 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %1343) #5, !dbg !40
  %1346 = tail call i32 @llvm.nvvm.f2i.rn(float %1343) #5, !dbg !40
  %.01.i333 = select i1 %.not.i332, i32 %1346, i32 %1345, !dbg !40
  %1347 = sitofp i32 %.01.i333 to float, !dbg !40
  %1348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not15.i334 = icmp eq i32 %1348, 0, !dbg !40
  %1349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1347, float 0xBFF921FB40000000, float %1239) #5, !dbg !40
  %1350 = tail call float @llvm.nvvm.fma.rn.f(float %1347, float 0xBFF921FB40000000, float %1239) #5, !dbg !40
  %.02.i335 = select i1 %.not15.i334, float %1350, float %1349, !dbg !40
  %1351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not16.i336 = icmp eq i32 %1351, 0, !dbg !40
  %1352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1347, float 0xBE74442D00000000, float %.02.i335) #5, !dbg !40
  %1353 = tail call float @llvm.nvvm.fma.rn.f(float %1347, float 0xBE74442D00000000, float %.02.i335) #5, !dbg !40
  %.03.i337 = select i1 %.not16.i336, float %1353, float %1352, !dbg !40
  %1354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not17.i338 = icmp eq i32 %1354, 0, !dbg !40
  %1355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1347, float 0xBCF84698A0000000, float %.03.i337) #5, !dbg !40
  %1356 = tail call float @llvm.nvvm.fma.rn.f(float %1347, float 0xBCF84698A0000000, float %.03.i337) #5, !dbg !40
  %.04.i339 = select i1 %.not17.i338, float %1356, float %1355, !dbg !40
  %1357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not18.i340 = icmp eq i32 %1357, 0, !dbg !40
  %1358 = tail call float @llvm.nvvm.fabs.ftz.f(float %1239) #5, !dbg !40
  %1359 = tail call float @llvm.nvvm.fabs.f(float %1239) #5, !dbg !40
  %.06.i341 = select i1 %.not18.i340, float %1359, float %1358, !dbg !40
  %1360 = fcmp ult float %.06.i341, 1.056150e+05, !dbg !40
  br i1 %1360, label %__internal_trig_reduction_kernel.exit.i.i359, label %__nv_isinff.exit.i.i.i342, !dbg !40

__nv_isinff.exit.i.i.i342:                        ; preds = %__nv_sinf.exit330
  %1361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not19.i343 = icmp eq i32 %1361, 0, !dbg !40
  %.07.i344 = select i1 %.not19.i343, float %1359, float %1358, !dbg !40
  %1362 = fcmp oeq float %.07.i344, 0x7FF0000000000000, !dbg !40
  br i1 %1362, label %__nv_fmul_rn.exit.i.i.i382, label %1366, !dbg !40

__nv_fmul_rn.exit.i.i.i382:                       ; preds = %__nv_isinff.exit.i.i.i342
  %1363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not27.i383 = icmp eq i32 %1363, 0, !dbg !40
  %1364 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1239, float 0.000000e+00) #5, !dbg !40
  %1365 = tail call float @llvm.nvvm.mul.rn.f(float %1239, float 0.000000e+00) #5, !dbg !40
  %.08.i384 = select i1 %.not27.i383, float %1365, float %1364, !dbg !40
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !40

1366:                                             ; preds = %__nv_isinff.exit.i.i.i342
  %1367 = bitcast float %1239 to i32, !dbg !40
  %1368 = lshr i32 %1367, 23, !dbg !40
  %1369 = and i32 %1368, 224, !dbg !40
  %1370 = add nsw i32 %1369, -128, !dbg !40
  %1371 = shl i32 %1367, 8, !dbg !40
  %1372 = or i32 %1371, -2147483648, !dbg !40
  %1373 = lshr exact i32 %1370, 5, !dbg !40
  br label %1374, !dbg !40

1374:                                             ; preds = %1366, %1374
  %indvars.iv923 = phi i64 [ 0, %1366 ], [ %indvars.iv.next924, %1374 ]
  %hi.i.i.i.0.i345850 = phi i32 [ 0, %1366 ], [ %1379, %1374 ]
  %1375 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv923, !dbg !40
  %1376 = load i32, ptr addrspace(1) %1375, align 4, !dbg !40
  %1377 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1376, i32 %1372, i32 %hi.i.i.i.0.i345850) #6, !dbg !40, !srcloc !18
  %1378 = extractvalue { i32, i32 } %1377, 0, !dbg !40
  %1379 = extractvalue { i32, i32 } %1377, 1, !dbg !40
  %1380 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %indvars.iv923, !dbg !40
  store i32 %1378, ptr %1380, align 4, !dbg !40
  %indvars.iv.next924 = add nuw nsw i64 %indvars.iv923, 1, !dbg !40
  %exitcond925.not = icmp eq i64 %indvars.iv.next924, 6, !dbg !40
  br i1 %exitcond925.not, label %1381, label %1374, !dbg !40, !llvm.loop !42

1381:                                             ; preds = %1374
  %1382 = getelementptr inbounds i8, ptr %result.i.i.i.i331, i64 24, !dbg !40
  store i32 %1379, ptr %1382, align 4, !dbg !40
  %1383 = and i32 %1368, 31, !dbg !40
  %1384 = sub nsw i32 6, %1373, !dbg !40
  %1385 = sext i32 %1384 to i64, !dbg !40
  %1386 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1385, !dbg !40
  %1387 = load i32, ptr %1386, align 4, !dbg !40
  %1388 = sub nsw i32 5, %1373, !dbg !40
  %1389 = sext i32 %1388 to i64, !dbg !40
  %1390 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1389, !dbg !40
  %1391 = load i32, ptr %1390, align 4, !dbg !40
  %.not20.i347 = icmp eq i32 %1383, 0, !dbg !40
  br i1 %.not20.i347, label %__internal_trig_reduction_slowpath.exit.i.i.i348, label %1392, !dbg !40

1392:                                             ; preds = %1381
  %1393 = sub nsw i32 4, %1373, !dbg !40
  %1394 = sub nuw nsw i32 32, %1383, !dbg !40
  %1395 = shl i32 %1387, %1383, !dbg !40
  %1396 = lshr i32 %1391, %1394, !dbg !40
  %1397 = add i32 %1396, %1395, !dbg !40
  %1398 = shl i32 %1391, %1383, !dbg !40
  %1399 = sext i32 %1393 to i64, !dbg !40
  %1400 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i331, i64 0, i64 %1399, !dbg !40
  %1401 = load i32, ptr %1400, align 4, !dbg !40
  %1402 = lshr i32 %1401, %1394, !dbg !40
  %1403 = add i32 %1402, %1398, !dbg !40
  br label %__internal_trig_reduction_slowpath.exit.i.i.i348, !dbg !40

__internal_trig_reduction_slowpath.exit.i.i.i348: ; preds = %1392, %1381
  %hi.i.i.i.1.i349 = phi i32 [ %1397, %1392 ], [ %1387, %1381 ], !dbg !40
  %lo.i.i.i.0.i350 = phi i32 [ %1403, %1392 ], [ %1391, %1381 ], !dbg !40
  %1404 = lshr i32 %hi.i.i.i.1.i349, 30, !dbg !40
  %1405 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i349, i32 %lo.i.i.i.0.i350, i32 2), !dbg !40
  %1406 = shl i32 %lo.i.i.i.0.i350, 2, !dbg !40
  %1407 = lshr i32 %1405, 31, !dbg !40
  %1408 = add nuw nsw i32 %1407, %1404, !dbg !40
  %1409 = sub nsw i32 0, %1408, !dbg !40
  %.not2123.i351 = icmp slt i32 %1367, 0, !dbg !40
  %spec.select.i352 = select i1 %.not2123.i351, i32 %1409, i32 %1408, !dbg !40
  %1410 = xor i32 %1405, %1367, !dbg !40
  %.lobit.i353 = ashr i32 %1405, 31, !dbg !40
  %hi.i.i.i.2.i354 = xor i32 %.lobit.i353, %1405, !dbg !40
  %lo.i.i.i.1.i356 = xor i32 %.lobit.i353, %1406, !dbg !40
  %1411 = zext i32 %hi.i.i.i.2.i354 to i64, !dbg !40
  %1412 = shl nuw i64 %1411, 32, !dbg !40
  %1413 = zext i32 %lo.i.i.i.1.i356 to i64, !dbg !40
  %1414 = or disjoint i64 %1412, %1413, !dbg !40
  %1415 = sitofp i64 %1414 to double, !dbg !40
  %1416 = fmul double %1415, 0x3BF921FB54442D19, !dbg !40
  %1417 = fptrunc double %1416 to float, !dbg !40
  %1418 = fneg float %1417, !dbg !40
  %.not2526.i357 = icmp slt i32 %1410, 0, !dbg !40
  %r.i.i.i.0.i358 = select i1 %.not2526.i357, float %1418, float %1417, !dbg !40
  br label %__internal_trig_reduction_kernel.exit.i.i359, !dbg !40

__internal_trig_reduction_kernel.exit.i.i359:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i348, %__nv_fmul_rn.exit.i.i.i382, %__nv_sinf.exit330
  %i.i.1.i360 = phi i32 [ %.01.i333, %__nv_sinf.exit330 ], [ 0, %__nv_fmul_rn.exit.i.i.i382 ], [ %spec.select.i352, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !40
  %t.i.i.1.i361 = phi float [ %.04.i339, %__nv_sinf.exit330 ], [ %.08.i384, %__nv_fmul_rn.exit.i.i.i382 ], [ %r.i.i.i.0.i358, %__internal_trig_reduction_slowpath.exit.i.i.i348 ], !dbg !40
  %1419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not28.i362 = icmp eq i32 %1419, 0, !dbg !40
  %1420 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #5, !dbg !40
  %1421 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i361, float %t.i.i.1.i361) #5, !dbg !40
  %.011.i363 = select i1 %.not28.i362, float %1421, float %1420, !dbg !40
  %1422 = and i32 %i.i.1.i360, 1, !dbg !40
  %.not29.i364 = icmp eq i32 %1422, 0, !dbg !40
  %1423 = select i1 %.not29.i364, float %t.i.i.1.i361, float 1.000000e+00, !dbg !40
  %1424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not30.i365 = icmp eq i32 %1424, 0, !dbg !40
  %1425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i363, float %1423, float 0.000000e+00) #5, !dbg !40
  %1426 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i363, float %1423, float 0.000000e+00) #5, !dbg !40
  %.012.i366 = select i1 %.not30.i365, float %1426, float %1425, !dbg !40
  br i1 %.not29.i364, label %__internal_fmad.exit2.i.i.i370, label %__internal_fmad.exit1.i.i.i367, !dbg !40

__internal_fmad.exit1.i.i.i367:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i359
  %1427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not31.i368 = icmp eq i32 %1427, 0, !dbg !40
  %1428 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #5, !dbg !40
  %1429 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i363, float 0xBF56C0FDA0000000) #5, !dbg !40
  %.013.i369 = select i1 %.not31.i368, float %1429, float %1428, !dbg !40
  br label %__internal_fmad.exit2.i.i.i370, !dbg !40

__internal_fmad.exit2.i.i.i370:                   ; preds = %__internal_fmad.exit1.i.i.i367, %__internal_trig_reduction_kernel.exit.i.i359
  %1430 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i367 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !40
  %1431 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i367 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !40
  %1432 = phi float [ %.013.i369, %__internal_fmad.exit1.i.i.i367 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i359 ], !dbg !40
  %1433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not32.i371 = icmp eq i32 %1433, 0, !dbg !40
  %1434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1432, float %.011.i363, float %1431) #5, !dbg !40
  %1435 = tail call float @llvm.nvvm.fma.rn.f(float %1432, float %.011.i363, float %1431) #5, !dbg !40
  %.010.i372 = select i1 %.not32.i371, float %1435, float %1434, !dbg !40
  %1436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not33.i373 = icmp eq i32 %1436, 0, !dbg !40
  %1437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i372, float %.011.i363, float %1430) #5, !dbg !40
  %1438 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i372, float %.011.i363, float %1430) #5, !dbg !40
  %.09.i374 = select i1 %.not33.i373, float %1438, float %1437, !dbg !40
  %1439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not34.i375 = icmp eq i32 %1439, 0, !dbg !40
  %1440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i374, float %.012.i366, float %1423) #5, !dbg !40
  %1441 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i374, float %.012.i366, float %1423) #5, !dbg !40
  %.05.i376 = select i1 %.not34.i375, float %1441, float %1440, !dbg !40
  %1442 = and i32 %i.i.1.i360, 2, !dbg !40
  %.not35.i377 = icmp eq i32 %1442, 0, !dbg !40
  br i1 %.not35.i377, label %__nv_sinf.exit385, label %__internal_fmad.exit5.i.i.i378, !dbg !40

__internal_fmad.exit5.i.i.i378:                   ; preds = %__internal_fmad.exit2.i.i.i370
  %1443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !40
  %.not36.i379 = icmp eq i32 %1443, 0, !dbg !40
  %1444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #5, !dbg !40
  %1445 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i376, float -1.000000e+00, float 0.000000e+00) #5, !dbg !40
  %.0.i380 = select i1 %.not36.i379, float %1445, float %1444, !dbg !40
  br label %__nv_sinf.exit385, !dbg !40

__nv_sinf.exit385:                                ; preds = %__internal_fmad.exit2.i.i.i370, %__internal_fmad.exit5.i.i.i378
  %z.i.i.0.i381 = phi float [ %.0.i380, %__internal_fmad.exit5.i.i.i378 ], [ %.05.i376, %__internal_fmad.exit2.i.i.i370 ], !dbg !40
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i331), !dbg !40
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !43
  %1446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i715 = icmp eq i32 %1446, 0, !dbg !43
  %.01.i716 = select i1 %.not.i715, i32 %1243, i32 %1242, !dbg !43
  %1447 = sitofp i32 %.01.i716 to float, !dbg !43
  %1448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not15.i717 = icmp eq i32 %1448, 0, !dbg !43
  %1449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1447, float 0xBFF921FB40000000, float %1238) #5, !dbg !43
  %1450 = tail call float @llvm.nvvm.fma.rn.f(float %1447, float 0xBFF921FB40000000, float %1238) #5, !dbg !43
  %.02.i718 = select i1 %.not15.i717, float %1450, float %1449, !dbg !43
  %1451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not16.i719 = icmp eq i32 %1451, 0, !dbg !43
  %1452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1447, float 0xBE74442D00000000, float %.02.i718) #5, !dbg !43
  %1453 = tail call float @llvm.nvvm.fma.rn.f(float %1447, float 0xBE74442D00000000, float %.02.i718) #5, !dbg !43
  %.03.i720 = select i1 %.not16.i719, float %1453, float %1452, !dbg !43
  %1454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not17.i721 = icmp eq i32 %1454, 0, !dbg !43
  %1455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1447, float 0xBCF84698A0000000, float %.03.i720) #5, !dbg !43
  %1456 = tail call float @llvm.nvvm.fma.rn.f(float %1447, float 0xBCF84698A0000000, float %.03.i720) #5, !dbg !43
  %.04.i722 = select i1 %.not17.i721, float %1456, float %1455, !dbg !43
  %1457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not18.i723 = icmp eq i32 %1457, 0, !dbg !43
  %.06.i724 = select i1 %.not18.i723, float %1256, float %1255, !dbg !43
  %1458 = fcmp ult float %.06.i724, 1.056150e+05, !dbg !43
  br i1 %1458, label %__internal_trig_reduction_kernel.exit.i.i742, label %__nv_isinff.exit.i.i.i725, !dbg !43

__nv_isinff.exit.i.i.i725:                        ; preds = %__nv_sinf.exit385
  %1459 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not19.i726 = icmp eq i32 %1459, 0, !dbg !43
  %.07.i727 = select i1 %.not19.i726, float %1256, float %1255, !dbg !43
  %1460 = fcmp oeq float %.07.i727, 0x7FF0000000000000, !dbg !43
  br i1 %1460, label %__nv_fmul_rn.exit.i.i.i765, label %1464, !dbg !43

__nv_fmul_rn.exit.i.i.i765:                       ; preds = %__nv_isinff.exit.i.i.i725
  %1461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not27.i766 = icmp eq i32 %1461, 0, !dbg !43
  %1462 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1238, float 0.000000e+00) #5, !dbg !43
  %1463 = tail call float @llvm.nvvm.mul.rn.f(float %1238, float 0.000000e+00) #5, !dbg !43
  %.08.i767 = select i1 %.not27.i766, float %1463, float %1462, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !43

1464:                                             ; preds = %__nv_isinff.exit.i.i.i725
  %1465 = bitcast float %1238 to i32, !dbg !43
  %1466 = lshr i32 %1465, 23, !dbg !43
  %1467 = and i32 %1466, 224, !dbg !43
  %1468 = add nsw i32 %1467, -128, !dbg !43
  %1469 = shl i32 %1465, 8, !dbg !43
  %1470 = or i32 %1469, -2147483648, !dbg !43
  %1471 = lshr exact i32 %1468, 5, !dbg !43
  br label %1472, !dbg !43

1472:                                             ; preds = %1464, %1472
  %indvars.iv926 = phi i64 [ 0, %1464 ], [ %indvars.iv.next927, %1472 ]
  %hi.i.i.i.0.i728852 = phi i32 [ 0, %1464 ], [ %1477, %1472 ]
  %1473 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv926, !dbg !43
  %1474 = load i32, ptr addrspace(1) %1473, align 4, !dbg !43
  %1475 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1474, i32 %1470, i32 %hi.i.i.i.0.i728852) #6, !dbg !43, !srcloc !18
  %1476 = extractvalue { i32, i32 } %1475, 0, !dbg !43
  %1477 = extractvalue { i32, i32 } %1475, 1, !dbg !43
  %1478 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %indvars.iv926, !dbg !43
  store i32 %1476, ptr %1478, align 4, !dbg !43
  %indvars.iv.next927 = add nuw nsw i64 %indvars.iv926, 1, !dbg !43
  %exitcond928.not = icmp eq i64 %indvars.iv.next927, 6, !dbg !43
  br i1 %exitcond928.not, label %1479, label %1472, !dbg !43, !llvm.loop !44

1479:                                             ; preds = %1472
  %1480 = getelementptr inbounds i8, ptr %result.i.i.i.i714, i64 24, !dbg !43
  store i32 %1477, ptr %1480, align 4, !dbg !43
  %1481 = and i32 %1466, 31, !dbg !43
  %1482 = sub nsw i32 6, %1471, !dbg !43
  %1483 = sext i32 %1482 to i64, !dbg !43
  %1484 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %1483, !dbg !43
  %1485 = load i32, ptr %1484, align 4, !dbg !43
  %1486 = sub nsw i32 5, %1471, !dbg !43
  %1487 = sext i32 %1486 to i64, !dbg !43
  %1488 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %1487, !dbg !43
  %1489 = load i32, ptr %1488, align 4, !dbg !43
  %.not20.i730 = icmp eq i32 %1481, 0, !dbg !43
  br i1 %.not20.i730, label %__internal_trig_reduction_slowpath.exit.i.i.i731, label %1490, !dbg !43

1490:                                             ; preds = %1479
  %1491 = sub nsw i32 4, %1471, !dbg !43
  %1492 = sub nuw nsw i32 32, %1481, !dbg !43
  %1493 = shl i32 %1485, %1481, !dbg !43
  %1494 = lshr i32 %1489, %1492, !dbg !43
  %1495 = add i32 %1494, %1493, !dbg !43
  %1496 = shl i32 %1489, %1481, !dbg !43
  %1497 = sext i32 %1491 to i64, !dbg !43
  %1498 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i714, i64 0, i64 %1497, !dbg !43
  %1499 = load i32, ptr %1498, align 4, !dbg !43
  %1500 = lshr i32 %1499, %1492, !dbg !43
  %1501 = add i32 %1500, %1496, !dbg !43
  br label %__internal_trig_reduction_slowpath.exit.i.i.i731, !dbg !43

__internal_trig_reduction_slowpath.exit.i.i.i731: ; preds = %1490, %1479
  %hi.i.i.i.1.i732 = phi i32 [ %1495, %1490 ], [ %1485, %1479 ], !dbg !43
  %lo.i.i.i.0.i733 = phi i32 [ %1501, %1490 ], [ %1489, %1479 ], !dbg !43
  %1502 = lshr i32 %hi.i.i.i.1.i732, 30, !dbg !43
  %1503 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i732, i32 %lo.i.i.i.0.i733, i32 2), !dbg !43
  %1504 = shl i32 %lo.i.i.i.0.i733, 2, !dbg !43
  %1505 = lshr i32 %1503, 31, !dbg !43
  %1506 = add nuw nsw i32 %1505, %1502, !dbg !43
  %1507 = sub nsw i32 0, %1506, !dbg !43
  %.not2123.i734 = icmp slt i32 %1465, 0, !dbg !43
  %spec.select.i735 = select i1 %.not2123.i734, i32 %1507, i32 %1506, !dbg !43
  %1508 = xor i32 %1503, %1465, !dbg !43
  %.lobit.i736 = ashr i32 %1503, 31, !dbg !43
  %hi.i.i.i.2.i737 = xor i32 %.lobit.i736, %1503, !dbg !43
  %lo.i.i.i.1.i739 = xor i32 %.lobit.i736, %1504, !dbg !43
  %1509 = zext i32 %hi.i.i.i.2.i737 to i64, !dbg !43
  %1510 = shl nuw i64 %1509, 32, !dbg !43
  %1511 = zext i32 %lo.i.i.i.1.i739 to i64, !dbg !43
  %1512 = or disjoint i64 %1510, %1511, !dbg !43
  %1513 = sitofp i64 %1512 to double, !dbg !43
  %1514 = fmul double %1513, 0x3BF921FB54442D19, !dbg !43
  %1515 = fptrunc double %1514 to float, !dbg !43
  %1516 = fneg float %1515, !dbg !43
  %.not2526.i740 = icmp slt i32 %1508, 0, !dbg !43
  %r.i.i.i.0.i741 = select i1 %.not2526.i740, float %1516, float %1515, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i742, !dbg !43

__internal_trig_reduction_kernel.exit.i.i742:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i731, %__nv_fmul_rn.exit.i.i.i765, %__nv_sinf.exit385
  %i.i.1.i743 = phi i32 [ %.01.i716, %__nv_sinf.exit385 ], [ 0, %__nv_fmul_rn.exit.i.i.i765 ], [ %spec.select.i735, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !43
  %t.i.i.1.i744 = phi float [ %.04.i722, %__nv_sinf.exit385 ], [ %.08.i767, %__nv_fmul_rn.exit.i.i.i765 ], [ %r.i.i.i.0.i741, %__internal_trig_reduction_slowpath.exit.i.i.i731 ], !dbg !43
  %1517 = add i32 %i.i.1.i743, 1, !dbg !43
  %1518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not28.i745 = icmp eq i32 %1518, 0, !dbg !43
  %1519 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #5, !dbg !43
  %1520 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i744, float %t.i.i.1.i744) #5, !dbg !43
  %.011.i746 = select i1 %.not28.i745, float %1520, float %1519, !dbg !43
  %1521 = and i32 %i.i.1.i743, 1, !dbg !43
  %.not29.not.i747 = icmp eq i32 %1521, 0, !dbg !43
  %1522 = select i1 %.not29.not.i747, float 1.000000e+00, float %t.i.i.1.i744, !dbg !43
  %1523 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not30.i748 = icmp eq i32 %1523, 0, !dbg !43
  %1524 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i746, float %1522, float 0.000000e+00) #5, !dbg !43
  %1525 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i746, float %1522, float 0.000000e+00) #5, !dbg !43
  %.012.i749 = select i1 %.not30.i748, float %1525, float %1524, !dbg !43
  br i1 %.not29.not.i747, label %__internal_fmad.exit1.i.i.i762, label %__internal_fmad.exit2.i.i.i750, !dbg !43

__internal_fmad.exit1.i.i.i762:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i742
  %1526 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not31.i763 = icmp eq i32 %1526, 0, !dbg !43
  %1527 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #5, !dbg !43
  %1528 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i746, float 0xBF56C0FDA0000000) #5, !dbg !43
  %.013.i764 = select i1 %.not31.i763, float %1528, float %1527, !dbg !43
  br label %__internal_fmad.exit2.i.i.i750, !dbg !43

__internal_fmad.exit2.i.i.i750:                   ; preds = %__internal_fmad.exit1.i.i.i762, %__internal_trig_reduction_kernel.exit.i.i742
  %1529 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i762 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !43
  %1530 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i762 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !43
  %1531 = phi float [ %.013.i764, %__internal_fmad.exit1.i.i.i762 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i742 ], !dbg !43
  %1532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not32.i751 = icmp eq i32 %1532, 0, !dbg !43
  %1533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1531, float %.011.i746, float %1530) #5, !dbg !43
  %1534 = tail call float @llvm.nvvm.fma.rn.f(float %1531, float %.011.i746, float %1530) #5, !dbg !43
  %.010.i752 = select i1 %.not32.i751, float %1534, float %1533, !dbg !43
  %1535 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not33.i753 = icmp eq i32 %1535, 0, !dbg !43
  %1536 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i752, float %.011.i746, float %1529) #5, !dbg !43
  %1537 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i752, float %.011.i746, float %1529) #5, !dbg !43
  %.09.i754 = select i1 %.not33.i753, float %1537, float %1536, !dbg !43
  %1538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not34.i755 = icmp eq i32 %1538, 0, !dbg !43
  %1539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i754, float %.012.i749, float %1522) #5, !dbg !43
  %1540 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i754, float %.012.i749, float %1522) #5, !dbg !43
  %.05.i756 = select i1 %.not34.i755, float %1540, float %1539, !dbg !43
  %1541 = and i32 %1517, 2, !dbg !43
  %.not35.i757 = icmp eq i32 %1541, 0, !dbg !43
  br i1 %.not35.i757, label %__nv_cosf.exit768, label %__internal_fmad.exit5.i.i.i758, !dbg !43

__internal_fmad.exit5.i.i.i758:                   ; preds = %__internal_fmad.exit2.i.i.i750
  %1542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not36.i759 = icmp eq i32 %1542, 0, !dbg !43
  %1543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #5, !dbg !43
  %1544 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i756, float -1.000000e+00, float 0.000000e+00) #5, !dbg !43
  %.0.i760 = select i1 %.not36.i759, float %1544, float %1543, !dbg !43
  br label %__nv_cosf.exit768, !dbg !43

__nv_cosf.exit768:                                ; preds = %__internal_fmad.exit2.i.i.i750, %__internal_fmad.exit5.i.i.i758
  %z.i.i.0.i761 = phi float [ %.0.i760, %__internal_fmad.exit5.i.i.i758 ], [ %.05.i756, %__internal_fmad.exit2.i.i.i750 ], !dbg !43
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i714), !dbg !43
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !43
  %1545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not.i770 = icmp eq i32 %1545, 0, !dbg !43
  %.01.i771 = select i1 %.not.i770, i32 %1346, i32 %1345, !dbg !43
  %1546 = sitofp i32 %.01.i771 to float, !dbg !43
  %1547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not15.i772 = icmp eq i32 %1547, 0, !dbg !43
  %1548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1546, float 0xBFF921FB40000000, float %1239) #5, !dbg !43
  %1549 = tail call float @llvm.nvvm.fma.rn.f(float %1546, float 0xBFF921FB40000000, float %1239) #5, !dbg !43
  %.02.i773 = select i1 %.not15.i772, float %1549, float %1548, !dbg !43
  %1550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not16.i774 = icmp eq i32 %1550, 0, !dbg !43
  %1551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1546, float 0xBE74442D00000000, float %.02.i773) #5, !dbg !43
  %1552 = tail call float @llvm.nvvm.fma.rn.f(float %1546, float 0xBE74442D00000000, float %.02.i773) #5, !dbg !43
  %.03.i775 = select i1 %.not16.i774, float %1552, float %1551, !dbg !43
  %1553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not17.i776 = icmp eq i32 %1553, 0, !dbg !43
  %1554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1546, float 0xBCF84698A0000000, float %.03.i775) #5, !dbg !43
  %1555 = tail call float @llvm.nvvm.fma.rn.f(float %1546, float 0xBCF84698A0000000, float %.03.i775) #5, !dbg !43
  %.04.i777 = select i1 %.not17.i776, float %1555, float %1554, !dbg !43
  %1556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not18.i778 = icmp eq i32 %1556, 0, !dbg !43
  %.06.i779 = select i1 %.not18.i778, float %1359, float %1358, !dbg !43
  %1557 = fcmp ult float %.06.i779, 1.056150e+05, !dbg !43
  br i1 %1557, label %__internal_trig_reduction_kernel.exit.i.i797, label %__nv_isinff.exit.i.i.i780, !dbg !43

__nv_isinff.exit.i.i.i780:                        ; preds = %__nv_cosf.exit768
  %1558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not19.i781 = icmp eq i32 %1558, 0, !dbg !43
  %.07.i782 = select i1 %.not19.i781, float %1359, float %1358, !dbg !43
  %1559 = fcmp oeq float %.07.i782, 0x7FF0000000000000, !dbg !43
  br i1 %1559, label %__nv_fmul_rn.exit.i.i.i820, label %1563, !dbg !43

__nv_fmul_rn.exit.i.i.i820:                       ; preds = %__nv_isinff.exit.i.i.i780
  %1560 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not27.i821 = icmp eq i32 %1560, 0, !dbg !43
  %1561 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %1239, float 0.000000e+00) #5, !dbg !43
  %1562 = tail call float @llvm.nvvm.mul.rn.f(float %1239, float 0.000000e+00) #5, !dbg !43
  %.08.i822 = select i1 %.not27.i821, float %1562, float %1561, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !43

1563:                                             ; preds = %__nv_isinff.exit.i.i.i780
  %1564 = bitcast float %1239 to i32, !dbg !43
  %1565 = lshr i32 %1564, 23, !dbg !43
  %1566 = and i32 %1565, 224, !dbg !43
  %1567 = add nsw i32 %1566, -128, !dbg !43
  %1568 = shl i32 %1564, 8, !dbg !43
  %1569 = or i32 %1568, -2147483648, !dbg !43
  %1570 = lshr exact i32 %1567, 5, !dbg !43
  br label %1571, !dbg !43

1571:                                             ; preds = %1563, %1571
  %indvars.iv929 = phi i64 [ 0, %1563 ], [ %indvars.iv.next930, %1571 ]
  %hi.i.i.i.0.i783854 = phi i32 [ 0, %1563 ], [ %1576, %1571 ]
  %1572 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv929, !dbg !43
  %1573 = load i32, ptr addrspace(1) %1572, align 4, !dbg !43
  %1574 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %1573, i32 %1569, i32 %hi.i.i.i.0.i783854) #6, !dbg !43, !srcloc !18
  %1575 = extractvalue { i32, i32 } %1574, 0, !dbg !43
  %1576 = extractvalue { i32, i32 } %1574, 1, !dbg !43
  %1577 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %indvars.iv929, !dbg !43
  store i32 %1575, ptr %1577, align 4, !dbg !43
  %indvars.iv.next930 = add nuw nsw i64 %indvars.iv929, 1, !dbg !43
  %exitcond931.not = icmp eq i64 %indvars.iv.next930, 6, !dbg !43
  br i1 %exitcond931.not, label %1578, label %1571, !dbg !43, !llvm.loop !45

1578:                                             ; preds = %1571
  %1579 = getelementptr inbounds i8, ptr %result.i.i.i.i769, i64 24, !dbg !43
  store i32 %1576, ptr %1579, align 4, !dbg !43
  %1580 = and i32 %1565, 31, !dbg !43
  %1581 = sub nsw i32 6, %1570, !dbg !43
  %1582 = sext i32 %1581 to i64, !dbg !43
  %1583 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %1582, !dbg !43
  %1584 = load i32, ptr %1583, align 4, !dbg !43
  %1585 = sub nsw i32 5, %1570, !dbg !43
  %1586 = sext i32 %1585 to i64, !dbg !43
  %1587 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %1586, !dbg !43
  %1588 = load i32, ptr %1587, align 4, !dbg !43
  %.not20.i785 = icmp eq i32 %1580, 0, !dbg !43
  br i1 %.not20.i785, label %__internal_trig_reduction_slowpath.exit.i.i.i786, label %1589, !dbg !43

1589:                                             ; preds = %1578
  %1590 = sub nsw i32 4, %1570, !dbg !43
  %1591 = sub nuw nsw i32 32, %1580, !dbg !43
  %1592 = shl i32 %1584, %1580, !dbg !43
  %1593 = lshr i32 %1588, %1591, !dbg !43
  %1594 = add i32 %1593, %1592, !dbg !43
  %1595 = shl i32 %1588, %1580, !dbg !43
  %1596 = sext i32 %1590 to i64, !dbg !43
  %1597 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i769, i64 0, i64 %1596, !dbg !43
  %1598 = load i32, ptr %1597, align 4, !dbg !43
  %1599 = lshr i32 %1598, %1591, !dbg !43
  %1600 = add i32 %1599, %1595, !dbg !43
  br label %__internal_trig_reduction_slowpath.exit.i.i.i786, !dbg !43

__internal_trig_reduction_slowpath.exit.i.i.i786: ; preds = %1589, %1578
  %hi.i.i.i.1.i787 = phi i32 [ %1594, %1589 ], [ %1584, %1578 ], !dbg !43
  %lo.i.i.i.0.i788 = phi i32 [ %1600, %1589 ], [ %1588, %1578 ], !dbg !43
  %1601 = lshr i32 %hi.i.i.i.1.i787, 30, !dbg !43
  %1602 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i787, i32 %lo.i.i.i.0.i788, i32 2), !dbg !43
  %1603 = shl i32 %lo.i.i.i.0.i788, 2, !dbg !43
  %1604 = lshr i32 %1602, 31, !dbg !43
  %1605 = add nuw nsw i32 %1604, %1601, !dbg !43
  %1606 = sub nsw i32 0, %1605, !dbg !43
  %.not2123.i789 = icmp slt i32 %1564, 0, !dbg !43
  %spec.select.i790 = select i1 %.not2123.i789, i32 %1606, i32 %1605, !dbg !43
  %1607 = xor i32 %1602, %1564, !dbg !43
  %.lobit.i791 = ashr i32 %1602, 31, !dbg !43
  %hi.i.i.i.2.i792 = xor i32 %.lobit.i791, %1602, !dbg !43
  %lo.i.i.i.1.i794 = xor i32 %.lobit.i791, %1603, !dbg !43
  %1608 = zext i32 %hi.i.i.i.2.i792 to i64, !dbg !43
  %1609 = shl nuw i64 %1608, 32, !dbg !43
  %1610 = zext i32 %lo.i.i.i.1.i794 to i64, !dbg !43
  %1611 = or disjoint i64 %1609, %1610, !dbg !43
  %1612 = sitofp i64 %1611 to double, !dbg !43
  %1613 = fmul double %1612, 0x3BF921FB54442D19, !dbg !43
  %1614 = fptrunc double %1613 to float, !dbg !43
  %1615 = fneg float %1614, !dbg !43
  %.not2526.i795 = icmp slt i32 %1607, 0, !dbg !43
  %r.i.i.i.0.i796 = select i1 %.not2526.i795, float %1615, float %1614, !dbg !43
  br label %__internal_trig_reduction_kernel.exit.i.i797, !dbg !43

__internal_trig_reduction_kernel.exit.i.i797:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i786, %__nv_fmul_rn.exit.i.i.i820, %__nv_cosf.exit768
  %i.i.1.i798 = phi i32 [ %.01.i771, %__nv_cosf.exit768 ], [ 0, %__nv_fmul_rn.exit.i.i.i820 ], [ %spec.select.i790, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !43
  %t.i.i.1.i799 = phi float [ %.04.i777, %__nv_cosf.exit768 ], [ %.08.i822, %__nv_fmul_rn.exit.i.i.i820 ], [ %r.i.i.i.0.i796, %__internal_trig_reduction_slowpath.exit.i.i.i786 ], !dbg !43
  %1616 = add i32 %i.i.1.i798, 1, !dbg !43
  %1617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not28.i800 = icmp eq i32 %1617, 0, !dbg !43
  %1618 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #5, !dbg !43
  %1619 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i799, float %t.i.i.1.i799) #5, !dbg !43
  %.011.i801 = select i1 %.not28.i800, float %1619, float %1618, !dbg !43
  %1620 = and i32 %i.i.1.i798, 1, !dbg !43
  %.not29.not.i802 = icmp eq i32 %1620, 0, !dbg !43
  %1621 = select i1 %.not29.not.i802, float 1.000000e+00, float %t.i.i.1.i799, !dbg !43
  %1622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not30.i803 = icmp eq i32 %1622, 0, !dbg !43
  %1623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i801, float %1621, float 0.000000e+00) #5, !dbg !43
  %1624 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i801, float %1621, float 0.000000e+00) #5, !dbg !43
  %.012.i804 = select i1 %.not30.i803, float %1624, float %1623, !dbg !43
  br i1 %.not29.not.i802, label %__internal_fmad.exit1.i.i.i817, label %__internal_fmad.exit2.i.i.i805, !dbg !43

__internal_fmad.exit1.i.i.i817:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i797
  %1625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not31.i818 = icmp eq i32 %1625, 0, !dbg !43
  %1626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #5, !dbg !43
  %1627 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i801, float 0xBF56C0FDA0000000) #5, !dbg !43
  %.013.i819 = select i1 %.not31.i818, float %1627, float %1626, !dbg !43
  br label %__internal_fmad.exit2.i.i.i805, !dbg !43

__internal_fmad.exit2.i.i.i805:                   ; preds = %__internal_fmad.exit1.i.i.i817, %__internal_trig_reduction_kernel.exit.i.i797
  %1628 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i817 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !43
  %1629 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i817 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !43
  %1630 = phi float [ %.013.i819, %__internal_fmad.exit1.i.i.i817 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i797 ], !dbg !43
  %1631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not32.i806 = icmp eq i32 %1631, 0, !dbg !43
  %1632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1630, float %.011.i801, float %1629) #5, !dbg !43
  %1633 = tail call float @llvm.nvvm.fma.rn.f(float %1630, float %.011.i801, float %1629) #5, !dbg !43
  %.010.i807 = select i1 %.not32.i806, float %1633, float %1632, !dbg !43
  %1634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not33.i808 = icmp eq i32 %1634, 0, !dbg !43
  %1635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i807, float %.011.i801, float %1628) #5, !dbg !43
  %1636 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i807, float %.011.i801, float %1628) #5, !dbg !43
  %.09.i809 = select i1 %.not33.i808, float %1636, float %1635, !dbg !43
  %1637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not34.i810 = icmp eq i32 %1637, 0, !dbg !43
  %1638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i809, float %.012.i804, float %1621) #5, !dbg !43
  %1639 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i809, float %.012.i804, float %1621) #5, !dbg !43
  %.05.i811 = select i1 %.not34.i810, float %1639, float %1638, !dbg !43
  %1640 = and i32 %1616, 2, !dbg !43
  %.not35.i812 = icmp eq i32 %1640, 0, !dbg !43
  br i1 %.not35.i812, label %__nv_cosf.exit823, label %__internal_fmad.exit5.i.i.i813, !dbg !43

__internal_fmad.exit5.i.i.i813:                   ; preds = %__internal_fmad.exit2.i.i.i805
  %1641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !43
  %.not36.i814 = icmp eq i32 %1641, 0, !dbg !43
  %1642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #5, !dbg !43
  %1643 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i811, float -1.000000e+00, float 0.000000e+00) #5, !dbg !43
  %.0.i815 = select i1 %.not36.i814, float %1643, float %1642, !dbg !43
  br label %__nv_cosf.exit823, !dbg !43

__nv_cosf.exit823:                                ; preds = %__internal_fmad.exit2.i.i.i805, %__internal_fmad.exit5.i.i.i813
  %z.i.i.0.i816 = phi float [ %.0.i815, %__internal_fmad.exit5.i.i.i813 ], [ %.05.i811, %__internal_fmad.exit2.i.i.i805 ], !dbg !43
  %1644 = and i32 %14, 127, !dbg !12
  %1645 = or disjoint i32 %1644, 128, !dbg !12
  %1646 = or disjoint i32 %13, %1645, !dbg !13
  %.frozen = freeze i32 %1646, !dbg !46
  %1647 = sdiv i32 %.frozen, 4, !dbg !46
  %1648 = or disjoint i32 %13, %1644, !dbg !13
  %.frozen992 = freeze i32 %1648, !dbg !46
  %1649 = sdiv i32 %.frozen992, 4, !dbg !46
  %.frozen994 = freeze i32 %17, !dbg !46
  %1650 = sdiv i32 %.frozen994, 4, !dbg !46
  %1651 = mul i32 %1647, 4, !dbg !47
  %.decomposed = sub i32 %.frozen, %1651, !dbg !47
  %1652 = mul i32 %1649, 4, !dbg !47
  %.decomposed993 = sub i32 %.frozen992, %1652, !dbg !47
  %1653 = mul i32 %1650, 4, !dbg !47
  %.decomposed995 = sub i32 %.frozen994, %1653, !dbg !47
  %1654 = icmp slt i32 %1646, 256, !dbg !14
  %1655 = icmp slt i32 %1648, 256, !dbg !14
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i769), !dbg !43
  %1656 = mul i32 %1650, 36, !dbg !48
  %1657 = mul i32 %1649, 36, !dbg !48
  %1658 = mul i32 %1647, 36, !dbg !48
  %1659 = add i32 %1656, %.decomposed995, !dbg !49
  %1660 = add i32 %1657, %.decomposed993, !dbg !49
  %1661 = add i32 %1658, %.decomposed, !dbg !49
  %1662 = sext i32 %1659 to i64, !dbg !50
  %1663 = getelementptr float, ptr addrspace(1) %1, i64 %1662, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %22, i32 %23, ptr addrspace(1) %1663, i1 %18) #5, !dbg !51
  %1664 = sext i32 %1660 to i64, !dbg !52
  %1665 = getelementptr float, ptr addrspace(1) %2, i64 %1664, !dbg !52
  %1666 = sext i32 %1661 to i64, !dbg !52
  %1667 = getelementptr float, ptr addrspace(1) %2, i64 %1666, !dbg !52
  %1668 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %16, !dbg !53
  %1669 = bitcast float %z.i.i.0.i to i32, !dbg !53
  %1670 = bitcast float %z.i.i.0.i51 to i32, !dbg !53
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1668, i32 %1669, i32 %1670, i1 true) #5, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %1671 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %1644, !dbg !53
  %1672 = load i32, ptr addrspace(3) %1671, align 4, !dbg !53
  %1673 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %1645, !dbg !53
  %1674 = load i32, ptr addrspace(3) %1673, align 4, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1672, ptr addrspace(1) %1665, i1 %1655) #5, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1674, ptr addrspace(1) %1667, i1 %1654) #5, !dbg !53
  %1675 = getelementptr float, ptr addrspace(1) %3, i64 %1664, !dbg !54
  %1676 = getelementptr float, ptr addrspace(1) %3, i64 %1666, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !55
  %1677 = bitcast float %z.i.i.0.i432 to i32, !dbg !55
  %1678 = bitcast float %z.i.i.0.i486 to i32, !dbg !55
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1668, i32 %1677, i32 %1678, i1 true) #5, !dbg !55
  tail call void @llvm.nvvm.barrier0(), !dbg !55
  %1679 = load i32, ptr addrspace(3) %1671, align 4, !dbg !55
  %1680 = load i32, ptr addrspace(3) %1673, align 4, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1679, ptr addrspace(1) %1675, i1 %1655) #5, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1680, ptr addrspace(1) %1676, i1 %1654) #5, !dbg !55
  %1681 = getelementptr float, ptr addrspace(1) %4, i64 %1664, !dbg !56
  %1682 = getelementptr float, ptr addrspace(1) %4, i64 %1666, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !57
  %1683 = bitcast float %z.i.i.0.i106 to i32, !dbg !57
  %1684 = bitcast float %z.i.i.0.i161 to i32, !dbg !57
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1668, i32 %1683, i32 %1684, i1 true) #5, !dbg !57
  tail call void @llvm.nvvm.barrier0(), !dbg !57
  %1685 = load i32, ptr addrspace(3) %1671, align 4, !dbg !57
  %1686 = load i32, ptr addrspace(3) %1673, align 4, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1685, ptr addrspace(1) %1681, i1 %1655) #5, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1686, ptr addrspace(1) %1682, i1 %1654) #5, !dbg !57
  %1687 = getelementptr float, ptr addrspace(1) %5, i64 %1662, !dbg !58
  %1688 = bitcast float %z.i.i.0.i541 to i32, !dbg !59
  %1689 = bitcast float %z.i.i.0.i596 to i32, !dbg !59
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %1688, i32 %1689, ptr addrspace(1) %1687, i1 %18) #5, !dbg !59
  %1690 = getelementptr float, ptr addrspace(1) %6, i64 %1664, !dbg !60
  %1691 = getelementptr float, ptr addrspace(1) %6, i64 %1666, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %1692 = bitcast float %z.i.i.0.i216 to i32, !dbg !61
  %1693 = bitcast float %z.i.i.0.i271 to i32, !dbg !61
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1668, i32 %1692, i32 %1693, i1 true) #5, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %1694 = load i32, ptr addrspace(3) %1671, align 4, !dbg !61
  %1695 = load i32, ptr addrspace(3) %1673, align 4, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1694, ptr addrspace(1) %1690, i1 %1655) #5, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1695, ptr addrspace(1) %1691, i1 %1654) #5, !dbg !61
  %1696 = getelementptr float, ptr addrspace(1) %7, i64 %1664, !dbg !62
  %1697 = getelementptr float, ptr addrspace(1) %7, i64 %1666, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %1698 = bitcast float %z.i.i.0.i651 to i32, !dbg !63
  %1699 = bitcast float %z.i.i.0.i706 to i32, !dbg !63
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1668, i32 %1698, i32 %1699, i1 true) #5, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %1700 = load i32, ptr addrspace(3) %1671, align 4, !dbg !63
  %1701 = load i32, ptr addrspace(3) %1673, align 4, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1700, ptr addrspace(1) %1696, i1 %1655) #5, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1701, ptr addrspace(1) %1697, i1 %1654) #5, !dbg !63
  %1702 = getelementptr float, ptr addrspace(1) %8, i64 %1664, !dbg !64
  %1703 = getelementptr float, ptr addrspace(1) %8, i64 %1666, !dbg !64
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1704 = bitcast float %z.i.i.0.i326 to i32, !dbg !65
  %1705 = bitcast float %z.i.i.0.i381 to i32, !dbg !65
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %1668, i32 %1704, i32 %1705, i1 true) #5, !dbg !65
  tail call void @llvm.nvvm.barrier0(), !dbg !65
  %1706 = load i32, ptr addrspace(3) %1671, align 4, !dbg !65
  %1707 = load i32, ptr addrspace(3) %1673, align 4, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1706, ptr addrspace(1) %1702, i1 %1655) #5, !dbg !65
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1707, ptr addrspace(1) %1703, i1 %1654) #5, !dbg !65
  %1708 = getelementptr float, ptr addrspace(1) %9, i64 %1662, !dbg !66
  %1709 = bitcast float %z.i.i.0.i761 to i32, !dbg !67
  %1710 = bitcast float %z.i.i.0.i816 to i32, !dbg !67
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %1709, i32 %1710, ptr addrspace(1) %1708, i1 %18) #5, !dbg !67
  ret void, !dbg !68
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdwrcjjnxuk2gycct5remiksa4qtmbsz6kak42u6bzjstsxwgowl.py", directory: "inductor_cache/dw")
!4 = !{ptr @triton_poi_fused_cos_div_mul_sin_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cos_div_mul_sin_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cos_div_mul_sin_0", linkageName: "triton_poi_fused_cos_div_mul_sin_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 30, scope: !7)
!16 = !DILocation(line: 27, column: 35, scope: !7)
!17 = !DILocation(line: 30, column: 23, scope: !7)
!18 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.count", i32 1}
!21 = distinct !{!21, !20}
!22 = !DILocation(line: 31, column: 23, scope: !7)
!23 = distinct !{!23, !20}
!24 = distinct !{!24, !20}
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 23, scope: !7)
!27 = distinct !{!27, !20}
!28 = distinct !{!28, !20}
!29 = !DILocation(line: 35, column: 23, scope: !7)
!30 = distinct !{!30, !20}
!31 = distinct !{!31, !20}
!32 = !DILocation(line: 37, column: 19, scope: !7)
!33 = !DILocation(line: 38, column: 24, scope: !7)
!34 = distinct !{!34, !20}
!35 = distinct !{!35, !20}
!36 = !DILocation(line: 39, column: 24, scope: !7)
!37 = distinct !{!37, !20}
!38 = distinct !{!38, !20}
!39 = !DILocation(line: 41, column: 19, scope: !7)
!40 = !DILocation(line: 42, column: 24, scope: !7)
!41 = distinct !{!41, !20}
!42 = distinct !{!42, !20}
!43 = !DILocation(line: 43, column: 24, scope: !7)
!44 = distinct !{!44, !20}
!45 = distinct !{!45, !20}
!46 = !DILocation(line: 26, column: 19, scope: !7)
!47 = !DILocation(line: 25, column: 19, scope: !7)
!48 = !DILocation(line: 44, column: 33, scope: !7)
!49 = !DILocation(line: 44, column: 30, scope: !7)
!50 = !DILocation(line: 44, column: 25, scope: !7)
!51 = !DILocation(line: 44, column: 44, scope: !7)
!52 = !DILocation(line: 45, column: 25, scope: !7)
!53 = !DILocation(line: 45, column: 44, scope: !7)
!54 = !DILocation(line: 46, column: 25, scope: !7)
!55 = !DILocation(line: 46, column: 44, scope: !7)
!56 = !DILocation(line: 47, column: 25, scope: !7)
!57 = !DILocation(line: 47, column: 44, scope: !7)
!58 = !DILocation(line: 48, column: 25, scope: !7)
!59 = !DILocation(line: 48, column: 44, scope: !7)
!60 = !DILocation(line: 49, column: 25, scope: !7)
!61 = !DILocation(line: 49, column: 45, scope: !7)
!62 = !DILocation(line: 50, column: 25, scope: !7)
!63 = !DILocation(line: 50, column: 45, scope: !7)
!64 = !DILocation(line: 51, column: 25, scope: !7)
!65 = !DILocation(line: 51, column: 45, scope: !7)
!66 = !DILocation(line: 52, column: 25, scope: !7)
!67 = !DILocation(line: 52, column: 45, scope: !7)
!68 = !DILocation(line: 52, column: 4, scope: !7)
