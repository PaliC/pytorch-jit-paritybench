; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %.frozen = freeze i32 %8, !dbg !14
  %9 = sdiv i32 %.frozen, 16, !dbg !14
  %10 = srem i32 %9, 16, !dbg !15
  %11 = mul i32 %9, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = sdiv i32 %8, 256, !dbg !17
  %13 = sitofp i32 %10 to float, !dbg !18
  %14 = fmul float %13, 0x3FDDDDDDE0000000, !dbg !19
  %15 = fcmp ogt float %14, 0.000000e+00, !dbg !20
  %16 = select i1 %15, float %14, float 0.000000e+00, !dbg !24
  %17 = fptosi float %16 to i32, !dbg !25
  %18 = tail call i32 @llvm.smin.i32(i32 %17, i32 6), !dbg !26
  %narrow = add nsw i32 %18, 1, !dbg !26
  %19 = sext i32 %narrow to i64, !dbg !26
  %20 = sitofp i32 %.decomposed to float, !dbg !28
  %21 = fmul float %20, 0x3FDDDDDDE0000000, !dbg !29
  %22 = fcmp ogt float %21, 0.000000e+00, !dbg !30
  %23 = select i1 %22, float %21, float 0.000000e+00, !dbg !32
  %24 = fptosi float %23 to i32, !dbg !33
  %25 = shl nsw i64 %19, 3, !dbg !34
  %26 = sext i32 %24 to i64, !dbg !35
  %27 = shl nsw i32 %12, 6, !dbg !36
  %28 = sext i32 %27 to i64, !dbg !37
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !38
  %30 = getelementptr float, ptr addrspace(1) %29, i64 %26, !dbg !38
  %31 = getelementptr float, ptr addrspace(1) %30, i64 %28, !dbg !38
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #2, !dbg !39
  %33 = tail call i64 @llvm.smin.i64(i64 %26, i64 6), !dbg !40
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !42
  %35 = getelementptr i8, ptr addrspace(1) %34, i64 4, !dbg !42
  %36 = getelementptr float, ptr addrspace(1) %35, i64 %25, !dbg !42
  %37 = getelementptr float, ptr addrspace(1) %36, i64 %28, !dbg !42
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #2, !dbg !43
  %39 = sitofp i32 %24 to float, !dbg !44
  %40 = fsub float %23, %39, !dbg !45
  %41 = fcmp ogt float %40, 0.000000e+00, !dbg !46
  %42 = select i1 %41, float %40, float 0.000000e+00, !dbg !48
  %43 = fcmp olt float %42, 1.000000e+00, !dbg !49
  %44 = select i1 %43, float %42, float 1.000000e+00, !dbg !51
  %45 = shl i32 %17, 3, !dbg !52
  %46 = add i32 %27, %24, !dbg !53
  %47 = add i32 %46, %45, !dbg !54
  %48 = sext i32 %47 to i64, !dbg !55
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !55
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 true) #2, !dbg !56
  %51 = sext i32 %45 to i64, !dbg !57
  %52 = getelementptr float, ptr addrspace(1) %35, i64 %51, !dbg !58
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %28, !dbg !58
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #2, !dbg !59
  %55 = insertelement <2 x i32> poison, i32 %32, i64 0, !dbg !39
  %56 = insertelement <2 x i32> %55, i32 %50, i64 1, !dbg !39
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !39
  %58 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !43
  %59 = insertelement <2 x i32> %58, i32 %54, i64 1, !dbg !43
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !43
  %61 = fsub <2 x float> %60, %57, !dbg !60
  %62 = insertelement <2 x float> poison, float %44, i64 0, !dbg !61
  %63 = shufflevector <2 x float> %62, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !61
  %64 = fmul <2 x float> %61, %63, !dbg !61
  %65 = fadd <2 x float> %64, %57, !dbg !62
  %66 = extractelement <2 x float> %65, i64 0, !dbg !63
  %67 = extractelement <2 x float> %65, i64 1, !dbg !64
  %68 = fsub float %66, %67, !dbg !63
  %69 = sitofp i32 %17 to float, !dbg !65
  %70 = fsub float %16, %69, !dbg !66
  %71 = fcmp ogt float %70, 0.000000e+00, !dbg !67
  %72 = select i1 %71, float %70, float 0.000000e+00, !dbg !69
  %73 = fcmp olt float %72, 1.000000e+00, !dbg !70
  %74 = select i1 %73, float %72, float 1.000000e+00, !dbg !72
  %75 = fmul float %74, %68, !dbg !73
  %76 = fadd float %67, %75, !dbg !64
  %77 = sext i32 %8 to i64, !dbg !74
  %78 = getelementptr float, ptr addrspace(1) %0, i64 %77, !dbg !74
  %79 = bitcast float %76 to i32, !dbg !75
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %79, ptr addrspace(1) %78, i1 true) #2, !dbg !75
  ret void, !dbg !76
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py", directory: "inductor_cache/ya")
!4 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0", linkageName: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 19, scope: !7)
!19 = !DILocation(line: 31, column: 18, scope: !7)
!20 = !DILocation(line: 118, column: 15, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 33, column: 40, scope: !7)
!24 = !DILocation(line: 121, column: 29, scope: !21, inlinedAt: !23)
!25 = !DILocation(line: 34, column: 19, scope: !7)
!26 = !DILocation(line: 113, column: 29, scope: !21, inlinedAt: !27)
!27 = !DILocation(line: 38, column: 41, scope: !7)
!28 = !DILocation(line: 40, column: 21, scope: !7)
!29 = !DILocation(line: 41, column: 20, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !21, inlinedAt: !31)
!31 = !DILocation(line: 42, column: 42, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !21, inlinedAt: !31)
!33 = !DILocation(line: 43, column: 21, scope: !7)
!34 = !DILocation(line: 44, column: 41, scope: !7)
!35 = !DILocation(line: 44, column: 39, scope: !7)
!36 = !DILocation(line: 44, column: 52, scope: !7)
!37 = !DILocation(line: 44, column: 49, scope: !7)
!38 = !DILocation(line: 44, column: 31, scope: !7)
!39 = !DILocation(line: 44, column: 57, scope: !7)
!40 = !DILocation(line: 113, column: 29, scope: !21, inlinedAt: !41)
!41 = !DILocation(line: 46, column: 42, scope: !7)
!42 = !DILocation(line: 47, column: 31, scope: !7)
!43 = !DILocation(line: 47, column: 57, scope: !7)
!44 = !DILocation(line: 49, column: 21, scope: !7)
!45 = !DILocation(line: 50, column: 20, scope: !7)
!46 = !DILocation(line: 118, column: 15, scope: !21, inlinedAt: !47)
!47 = !DILocation(line: 51, column: 42, scope: !7)
!48 = !DILocation(line: 121, column: 29, scope: !21, inlinedAt: !47)
!49 = !DILocation(line: 110, column: 15, scope: !21, inlinedAt: !50)
!50 = !DILocation(line: 53, column: 42, scope: !7)
!51 = !DILocation(line: 113, column: 29, scope: !21, inlinedAt: !50)
!52 = !DILocation(line: 56, column: 41, scope: !7)
!53 = !DILocation(line: 56, column: 39, scope: !7)
!54 = !DILocation(line: 56, column: 48, scope: !7)
!55 = !DILocation(line: 56, column: 31, scope: !7)
!56 = !DILocation(line: 56, column: 56, scope: !7)
!57 = !DILocation(line: 57, column: 39, scope: !7)
!58 = !DILocation(line: 57, column: 31, scope: !7)
!59 = !DILocation(line: 57, column: 56, scope: !7)
!60 = !DILocation(line: 48, column: 20, scope: !7)
!61 = !DILocation(line: 54, column: 20, scope: !7)
!62 = !DILocation(line: 55, column: 20, scope: !7)
!63 = !DILocation(line: 61, column: 20, scope: !7)
!64 = !DILocation(line: 67, column: 20, scope: !7)
!65 = !DILocation(line: 62, column: 20, scope: !7)
!66 = !DILocation(line: 63, column: 19, scope: !7)
!67 = !DILocation(line: 118, column: 15, scope: !21, inlinedAt: !68)
!68 = !DILocation(line: 64, column: 42, scope: !7)
!69 = !DILocation(line: 121, column: 29, scope: !21, inlinedAt: !68)
!70 = !DILocation(line: 110, column: 15, scope: !21, inlinedAt: !71)
!71 = !DILocation(line: 65, column: 42, scope: !7)
!72 = !DILocation(line: 113, column: 29, scope: !21, inlinedAt: !71)
!73 = !DILocation(line: 66, column: 20, scope: !7)
!74 = !DILocation(line: 68, column: 28, scope: !7)
!75 = !DILocation(line: 68, column: 40, scope: !7)
!76 = !DILocation(line: 68, column: 4, scope: !7)
