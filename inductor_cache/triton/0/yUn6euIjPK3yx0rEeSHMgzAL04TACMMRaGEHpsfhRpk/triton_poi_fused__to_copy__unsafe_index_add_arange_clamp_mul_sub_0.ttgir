#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<7> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<8> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<0.466666669> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_8 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_8 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_8 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_7 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.sitofp %6 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc10)
    %10 = arith.mulf %9, %cst_6 : tensor<128xf32, #blocked> loc(#loc11)
    %11 = arith.cmpf ogt, %10, %cst_1 : tensor<128xf32, #blocked> loc(#loc69)
    %12 = arith.cmpf une, %10, %10 : tensor<128xf32, #blocked> loc(#loc70)
    %13 = arith.ori %11, %12 : tensor<128xi1, #blocked> loc(#loc71)
    %14 = arith.select %13, %10, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc72)
    %15 = arith.fptosi %14 : tensor<128xf32, #blocked> to tensor<128xi32, #blocked> loc(#loc17)
    %16 = arith.extsi %15 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc18)
    %17 = arith.addi %16, %cst_5 : tensor<128xi64, #blocked> loc(#loc18)
    %18 = arith.cmpi slt, %17, %cst_0 : tensor<128xi64, #blocked> loc(#loc73)
    %19 = arith.select %18, %17, %cst_0 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc74)
    %20 = arith.sitofp %7 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc22)
    %21 = arith.mulf %20, %cst_6 : tensor<128xf32, #blocked> loc(#loc23)
    %22 = arith.cmpf ogt, %21, %cst_1 : tensor<128xf32, #blocked> loc(#loc75)
    %23 = arith.cmpf une, %21, %21 : tensor<128xf32, #blocked> loc(#loc76)
    %24 = arith.ori %22, %23 : tensor<128xi1, #blocked> loc(#loc77)
    %25 = arith.select %24, %21, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc78)
    %26 = arith.fptosi %25 : tensor<128xf32, #blocked> to tensor<128xi32, #blocked> loc(#loc25)
    %27 = arith.muli %19, %cst_4 : tensor<128xi64, #blocked> loc(#loc26)
    %28 = arith.extsi %26 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc27)
    %29 = arith.addi %28, %27 : tensor<128xi64, #blocked> loc(#loc27)
    %30 = arith.muli %8, %cst_3 : tensor<128xi32, #blocked> loc(#loc28)
    %31 = arith.extsi %30 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc29)
    %32 = arith.addi %29, %31 : tensor<128xi64, #blocked> loc(#loc29)
    %33 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc30)
    %34 = tt.addptr %33, %32 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc30)
    %35 = tt.load %34 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc31)
    %36 = arith.addi %28, %cst_5 : tensor<128xi64, #blocked> loc(#loc32)
    %37 = arith.cmpi slt, %36, %cst_0 : tensor<128xi64, #blocked> loc(#loc79)
    %38 = arith.select %37, %36, %cst_0 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc80)
    %39 = arith.addi %38, %27 : tensor<128xi64, #blocked> loc(#loc34)
    %40 = arith.addi %39, %31 : tensor<128xi64, #blocked> loc(#loc35)
    %41 = tt.addptr %33, %40 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc36)
    %42 = tt.load %41 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc37)
    %43 = arith.subf %42, %35 : tensor<128xf32, #blocked> loc(#loc38)
    %44 = arith.sitofp %26 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc39)
    %45 = arith.subf %25, %44 : tensor<128xf32, #blocked> loc(#loc40)
    %46 = arith.cmpf ogt, %45, %cst_1 : tensor<128xf32, #blocked> loc(#loc81)
    %47 = arith.cmpf une, %45, %45 : tensor<128xf32, #blocked> loc(#loc82)
    %48 = arith.ori %46, %47 : tensor<128xi1, #blocked> loc(#loc83)
    %49 = arith.select %48, %45, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc84)
    %50 = arith.cmpf olt, %49, %cst : tensor<128xf32, #blocked> loc(#loc85)
    %51 = arith.cmpf une, %49, %49 : tensor<128xf32, #blocked> loc(#loc86)
    %52 = arith.ori %50, %51 : tensor<128xi1, #blocked> loc(#loc87)
    %53 = arith.select %52, %49, %cst : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc88)
    %54 = arith.mulf %43, %53 : tensor<128xf32, #blocked> loc(#loc45)
    %55 = arith.addf %35, %54 : tensor<128xf32, #blocked> loc(#loc46)
    %56 = arith.muli %15, %cst_2 : tensor<128xi32, #blocked> loc(#loc47)
    %57 = arith.addi %26, %56 : tensor<128xi32, #blocked> loc(#loc48)
    %58 = arith.addi %57, %30 : tensor<128xi32, #blocked> loc(#loc49)
    %59 = tt.addptr %33, %58 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc50)
    %60 = tt.load %59 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc51)
    %61 = arith.extsi %56 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc52)
    %62 = arith.addi %38, %61 : tensor<128xi64, #blocked> loc(#loc52)
    %63 = arith.addi %62, %31 : tensor<128xi64, #blocked> loc(#loc53)
    %64 = tt.addptr %33, %63 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc54)
    %65 = tt.load %64 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc55)
    %66 = arith.subf %65, %60 : tensor<128xf32, #blocked> loc(#loc56)
    %67 = arith.mulf %66, %53 : tensor<128xf32, #blocked> loc(#loc57)
    %68 = arith.addf %60, %67 : tensor<128xf32, #blocked> loc(#loc58)
    %69 = arith.subf %55, %68 : tensor<128xf32, #blocked> loc(#loc59)
    %70 = arith.sitofp %15 : tensor<128xi32, #blocked> to tensor<128xf32, #blocked> loc(#loc60)
    %71 = arith.subf %14, %70 : tensor<128xf32, #blocked> loc(#loc61)
    %72 = arith.cmpf ogt, %71, %cst_1 : tensor<128xf32, #blocked> loc(#loc89)
    %73 = arith.cmpf une, %71, %71 : tensor<128xf32, #blocked> loc(#loc90)
    %74 = arith.ori %72, %73 : tensor<128xi1, #blocked> loc(#loc91)
    %75 = arith.select %74, %71, %cst_1 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc92)
    %76 = arith.cmpf olt, %75, %cst : tensor<128xf32, #blocked> loc(#loc93)
    %77 = arith.cmpf une, %75, %75 : tensor<128xf32, #blocked> loc(#loc94)
    %78 = arith.ori %76, %77 : tensor<128xi1, #blocked> loc(#loc95)
    %79 = arith.select %78, %75, %cst : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc96)
    %80 = arith.mulf %69, %79 : tensor<128xf32, #blocked> loc(#loc64)
    %81 = arith.addf %68, %80 : tensor<128xf32, #blocked> loc(#loc65)
    %82 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc66)
    %83 = tt.addptr %82, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc66)
    tt.store %83, %81 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc67)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":21:28)
#loc3 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":21:33)
#loc4 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":22:36)
#loc5 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":22:23)
#loc6 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":24:21)
#loc7 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":24:27)
#loc8 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":25:19)
#loc9 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":26:19)
#loc10 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":29:19)
#loc11 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":31:18)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":33:40)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc17 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":34:19)
#loc18 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":36:18)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc20 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":38:41)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc22 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":40:21)
#loc23 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":41:20)
#loc24 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":42:42)
#loc25 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":43:21)
#loc26 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":44:41)
#loc27 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":44:39)
#loc28 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":44:52)
#loc29 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":44:49)
#loc30 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":44:31)
#loc31 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":44:57)
#loc32 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":45:20)
#loc33 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":46:42)
#loc34 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":47:39)
#loc35 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":47:49)
#loc36 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":47:31)
#loc37 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":47:57)
#loc38 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":48:20)
#loc39 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":49:21)
#loc40 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":50:20)
#loc41 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":51:42)
#loc42 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":53:42)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc45 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":54:20)
#loc46 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":55:20)
#loc47 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":56:41)
#loc48 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":56:39)
#loc49 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":56:48)
#loc50 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":56:31)
#loc51 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":56:56)
#loc52 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":57:39)
#loc53 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":57:48)
#loc54 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":57:31)
#loc55 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":57:56)
#loc56 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":58:20)
#loc57 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":59:20)
#loc58 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":60:20)
#loc59 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":61:20)
#loc60 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":62:20)
#loc61 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":63:19)
#loc62 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":64:42)
#loc63 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":65:42)
#loc64 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":66:20)
#loc65 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":67:20)
#loc66 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":68:28)
#loc67 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":68:40)
#loc68 = loc("inductor_cache/ya/cyadfmk6buededyyqimw6irnml4dkirbf7blozbudygiznsajxxr.py":68:4)
#loc69 = loc(callsite(#loc12 at #loc13))
#loc70 = loc(callsite(#loc14 at #loc13))
#loc71 = loc(callsite(#loc15 at #loc13))
#loc72 = loc(callsite(#loc16 at #loc13))
#loc73 = loc(callsite(#loc19 at #loc20))
#loc74 = loc(callsite(#loc21 at #loc20))
#loc75 = loc(callsite(#loc12 at #loc24))
#loc76 = loc(callsite(#loc14 at #loc24))
#loc77 = loc(callsite(#loc15 at #loc24))
#loc78 = loc(callsite(#loc16 at #loc24))
#loc79 = loc(callsite(#loc19 at #loc33))
#loc80 = loc(callsite(#loc21 at #loc33))
#loc81 = loc(callsite(#loc12 at #loc41))
#loc82 = loc(callsite(#loc14 at #loc41))
#loc83 = loc(callsite(#loc15 at #loc41))
#loc84 = loc(callsite(#loc16 at #loc41))
#loc85 = loc(callsite(#loc19 at #loc42))
#loc86 = loc(callsite(#loc43 at #loc42))
#loc87 = loc(callsite(#loc44 at #loc42))
#loc88 = loc(callsite(#loc21 at #loc42))
#loc89 = loc(callsite(#loc12 at #loc62))
#loc90 = loc(callsite(#loc14 at #loc62))
#loc91 = loc(callsite(#loc15 at #loc62))
#loc92 = loc(callsite(#loc16 at #loc62))
#loc93 = loc(callsite(#loc19 at #loc63))
#loc94 = loc(callsite(#loc43 at #loc63))
#loc95 = loc(callsite(#loc44 at #loc63))
#loc96 = loc(callsite(#loc21 at #loc63))
