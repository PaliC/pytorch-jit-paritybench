; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %13 = sext i32 %11 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %12) #2, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !17
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 %12) #2, !dbg !18
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !18
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !18
  %20 = bitcast i32 %18 to float, !dbg !18
  %21 = bitcast i32 %19 to float, !dbg !18
  %22 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !19
  %23 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %22, i1 %12) #2, !dbg !20
  %24 = fsub float 0.000000e+00, %20, !dbg !21
  %25 = fsub float 0.000000e+00, %21, !dbg !21
  %26 = fmul float %24, 0x3FF7154760000000, !dbg !25
  %27 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %26) #2, !dbg !25
  %28 = fmul float %25, 0x3FF7154760000000, !dbg !25
  %29 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %28) #2, !dbg !25
  %30 = fadd float %27, 1.000000e+00, !dbg !26
  %31 = fadd float %29, 1.000000e+00, !dbg !26
  %32 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %30) #2, !dbg !27
  %33 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %31) #2, !dbg !27
  %34 = tail call float @llvm.fabs.f32(float %20), !dbg !28
  %35 = tail call float @llvm.fabs.f32(float %21), !dbg !28
  %36 = fsub float 0.000000e+00, %34, !dbg !29
  %37 = fsub float 0.000000e+00, %35, !dbg !29
  %38 = fmul float %36, 0x3FF7154760000000, !dbg !30
  %39 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %38) #2, !dbg !30
  %40 = fmul float %37, 0x3FF7154760000000, !dbg !30
  %41 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %40) #2, !dbg !30
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not.i = icmp eq i32 %42, 0, !dbg !31
  %43 = tail call float @llvm.nvvm.add.rz.ftz.f(float %39, float 1.000000e+00) #2, !dbg !31
  %44 = tail call float @llvm.nvvm.add.rz.f(float %39, float 1.000000e+00) #2, !dbg !31
  %.01.i = select i1 %.not.i, float %44, float %43, !dbg !31
  %45 = bitcast float %.01.i to i32, !dbg !31
  %46 = add i32 %45, -1061158912, !dbg !31
  %47 = and i32 %46, -8388608, !dbg !31
  %48 = bitcast float %39 to i32, !dbg !31
  %49 = sub i32 %48, %47, !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = sub i32 1082130432, %47, !dbg !31
  %52 = bitcast i32 %51 to float, !dbg !31
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not14.i = icmp eq i32 %53, 0, !dbg !31
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %52, float -1.000000e+00) #2, !dbg !31
  %55 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %52, float -1.000000e+00) #2, !dbg !31
  %.09.i = select i1 %.not14.i, float %55, float %54, !dbg !31
  %56 = fadd float %.09.i, %50, !dbg !31
  %57 = sitofp i32 %47 to float, !dbg !31
  %58 = fmul float %57, 0x3E80000000000000, !dbg !31
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not15.i = icmp eq i32 %59, 0, !dbg !31
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %56, float 0x3FBB000240000000) #2, !dbg !31
  %61 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %56, float 0x3FBB000240000000) #2, !dbg !31
  %.012.i = select i1 %.not15.i, float %61, float %60, !dbg !31
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not16.i = icmp eq i32 %62, 0, !dbg !31
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %56, float 0xBFC0EF1C00000000) #2, !dbg !31
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %56, float 0xBFC0EF1C00000000) #2, !dbg !31
  %.010.i = select i1 %.not16.i, float %64, float %63, !dbg !31
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not17.i = icmp eq i32 %65, 0, !dbg !31
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %56, float 0x3FC28C8EA0000000) #2, !dbg !31
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %56, float 0x3FC28C8EA0000000) #2, !dbg !31
  %.06.i = select i1 %.not17.i, float %67, float %66, !dbg !31
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not18.i = icmp eq i32 %68, 0, !dbg !31
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %56, float 0xBFC54D1BA0000000) #2, !dbg !31
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %56, float 0xBFC54D1BA0000000) #2, !dbg !31
  %.02.i = select i1 %.not18.i, float %70, float %69, !dbg !31
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not19.i = icmp eq i32 %71, 0, !dbg !31
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %56, float 0x3FC995F3C0000000) #2, !dbg !31
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %56, float 0x3FC995F3C0000000) #2, !dbg !31
  %.0.i = select i1 %.not19.i, float %73, float %72, !dbg !31
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not20.i = icmp eq i32 %74, 0, !dbg !31
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %56, float 0xBFD0000840000000) #2, !dbg !31
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %56, float 0xBFD0000840000000) #2, !dbg !31
  %.011.i = select i1 %.not20.i, float %76, float %75, !dbg !31
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not21.i = icmp eq i32 %77, 0, !dbg !31
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %56, float 0x3FD5555CC0000000) #2, !dbg !31
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %56, float 0x3FD5555CC0000000) #2, !dbg !31
  %.08.i = select i1 %.not21.i, float %79, float %78, !dbg !31
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not22.i = icmp eq i32 %80, 0, !dbg !31
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %56, float -5.000000e-01) #2, !dbg !31
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %56, float -5.000000e-01) #2, !dbg !31
  %.07.i = select i1 %.not22.i, float %82, float %81, !dbg !31
  %83 = fmul float %56, %.07.i, !dbg !31
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not23.i = icmp eq i32 %84, 0, !dbg !31
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %56, float %56) #2, !dbg !31
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %56, float %56) #2, !dbg !31
  %.05.i = select i1 %.not23.i, float %86, float %85, !dbg !31
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not24.i = icmp eq i32 %87, 0, !dbg !31
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %58, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !31
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %58, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !31
  %.04.i = select i1 %.not24.i, float %89, float %88, !dbg !31
  %90 = icmp ugt i32 %48, 2139095039, !dbg !31
  br i1 %90, label %91, label %__nv_log1pf.exit, !dbg !31

91:                                               ; preds = %5
  %92 = icmp sgt i32 %48, -1082130432, !dbg !31
  br i1 %92, label %__nv_fmaf_rn.exit.i, label %96, !dbg !31

__nv_fmaf_rn.exit.i:                              ; preds = %91
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not25.i = icmp eq i32 %93, 0, !dbg !31
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !31
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !31
  %.03.i = select i1 %.not25.i, float %95, float %94, !dbg !31
  br label %96, !dbg !31

96:                                               ; preds = %__nv_fmaf_rn.exit.i, %91
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %91 ], !dbg !31
  %97 = fcmp oeq float %39, 0.000000e+00, !dbg !31
  %r.1.i = select i1 %97, float -0.000000e+00, float %r.0.i, !dbg !31
  br label %__nv_log1pf.exit, !dbg !31

__nv_log1pf.exit:                                 ; preds = %5, %96
  %r.2.i = phi float [ %r.1.i, %96 ], [ %.04.i, %5 ], !dbg !31
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not.i2 = icmp eq i32 %98, 0, !dbg !31
  %99 = tail call float @llvm.nvvm.add.rz.ftz.f(float %41, float 1.000000e+00) #2, !dbg !31
  %100 = tail call float @llvm.nvvm.add.rz.f(float %41, float 1.000000e+00) #2, !dbg !31
  %.01.i3 = select i1 %.not.i2, float %100, float %99, !dbg !31
  %101 = bitcast float %.01.i3 to i32, !dbg !31
  %102 = add i32 %101, -1061158912, !dbg !31
  %103 = and i32 %102, -8388608, !dbg !31
  %104 = bitcast float %41 to i32, !dbg !31
  %105 = sub i32 %104, %103, !dbg !31
  %106 = bitcast i32 %105 to float, !dbg !31
  %107 = sub i32 1082130432, %103, !dbg !31
  %108 = bitcast i32 %107 to float, !dbg !31
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not14.i4 = icmp eq i32 %109, 0, !dbg !31
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %108, float -1.000000e+00) #2, !dbg !31
  %111 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %108, float -1.000000e+00) #2, !dbg !31
  %.09.i5 = select i1 %.not14.i4, float %111, float %110, !dbg !31
  %112 = fadd float %.09.i5, %106, !dbg !31
  %113 = sitofp i32 %103 to float, !dbg !31
  %114 = fmul float %113, 0x3E80000000000000, !dbg !31
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not15.i6 = icmp eq i32 %115, 0, !dbg !31
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %112, float 0x3FBB000240000000) #2, !dbg !31
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %112, float 0x3FBB000240000000) #2, !dbg !31
  %.012.i7 = select i1 %.not15.i6, float %117, float %116, !dbg !31
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not16.i8 = icmp eq i32 %118, 0, !dbg !31
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i7, float %112, float 0xBFC0EF1C00000000) #2, !dbg !31
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i7, float %112, float 0xBFC0EF1C00000000) #2, !dbg !31
  %.010.i9 = select i1 %.not16.i8, float %120, float %119, !dbg !31
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not17.i10 = icmp eq i32 %121, 0, !dbg !31
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i9, float %112, float 0x3FC28C8EA0000000) #2, !dbg !31
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i9, float %112, float 0x3FC28C8EA0000000) #2, !dbg !31
  %.06.i11 = select i1 %.not17.i10, float %123, float %122, !dbg !31
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not18.i12 = icmp eq i32 %124, 0, !dbg !31
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i11, float %112, float 0xBFC54D1BA0000000) #2, !dbg !31
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i11, float %112, float 0xBFC54D1BA0000000) #2, !dbg !31
  %.02.i13 = select i1 %.not18.i12, float %126, float %125, !dbg !31
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not19.i14 = icmp eq i32 %127, 0, !dbg !31
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i13, float %112, float 0x3FC995F3C0000000) #2, !dbg !31
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i13, float %112, float 0x3FC995F3C0000000) #2, !dbg !31
  %.0.i15 = select i1 %.not19.i14, float %129, float %128, !dbg !31
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not20.i16 = icmp eq i32 %130, 0, !dbg !31
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %112, float 0xBFD0000840000000) #2, !dbg !31
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %112, float 0xBFD0000840000000) #2, !dbg !31
  %.011.i17 = select i1 %.not20.i16, float %132, float %131, !dbg !31
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not21.i18 = icmp eq i32 %133, 0, !dbg !31
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i17, float %112, float 0x3FD5555CC0000000) #2, !dbg !31
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i17, float %112, float 0x3FD5555CC0000000) #2, !dbg !31
  %.08.i19 = select i1 %.not21.i18, float %135, float %134, !dbg !31
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not22.i20 = icmp eq i32 %136, 0, !dbg !31
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i19, float %112, float -5.000000e-01) #2, !dbg !31
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i19, float %112, float -5.000000e-01) #2, !dbg !31
  %.07.i21 = select i1 %.not22.i20, float %138, float %137, !dbg !31
  %139 = fmul float %112, %.07.i21, !dbg !31
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not23.i22 = icmp eq i32 %140, 0, !dbg !31
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float %112, float %112) #2, !dbg !31
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %139, float %112, float %112) #2, !dbg !31
  %.05.i23 = select i1 %.not23.i22, float %142, float %141, !dbg !31
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not24.i24 = icmp eq i32 %143, 0, !dbg !31
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %114, float 0x3FE62E4300000000, float %.05.i23) #2, !dbg !31
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %114, float 0x3FE62E4300000000, float %.05.i23) #2, !dbg !31
  %.04.i25 = select i1 %.not24.i24, float %145, float %144, !dbg !31
  %146 = icmp ugt i32 %104, 2139095039, !dbg !31
  br i1 %146, label %147, label %__nv_log1pf.exit32, !dbg !31

147:                                              ; preds = %__nv_log1pf.exit
  %148 = icmp sgt i32 %104, -1082130432, !dbg !31
  br i1 %148, label %__nv_fmaf_rn.exit.i29, label %152, !dbg !31

__nv_fmaf_rn.exit.i29:                            ; preds = %147
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !31
  %.not25.i30 = icmp eq i32 %149, 0, !dbg !31
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !31
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !31
  %.03.i31 = select i1 %.not25.i30, float %151, float %150, !dbg !31
  br label %152, !dbg !31

152:                                              ; preds = %__nv_fmaf_rn.exit.i29, %147
  %r.0.i27 = phi float [ %.03.i31, %__nv_fmaf_rn.exit.i29 ], [ %.04.i25, %147 ], !dbg !31
  %153 = fcmp oeq float %41, 0.000000e+00, !dbg !31
  %r.1.i28 = select i1 %153, float -0.000000e+00, float %r.0.i27, !dbg !31
  br label %__nv_log1pf.exit32, !dbg !31

__nv_log1pf.exit32:                               ; preds = %__nv_log1pf.exit, %152
  %r.2.i26 = phi float [ %r.1.i28, %152 ], [ %.04.i25, %__nv_log1pf.exit ], !dbg !31
  %.inv1 = fcmp ole float %21, 0.000000e+00, !dbg !32
  %154 = select i1 %.inv1, float 0.000000e+00, float %21, !dbg !32
  %155 = extractvalue { i32, i32 } %15, 1, !dbg !16
  %156 = bitcast i32 %155 to float, !dbg !16
  %157 = fmul float %156, %21, !dbg !36
  %158 = fsub float %154, %157, !dbg !37
  %.inv = fcmp ole float %20, 0.000000e+00, !dbg !32
  %159 = select i1 %.inv, float 0.000000e+00, float %20, !dbg !32
  %160 = extractvalue { i32, i32 } %15, 0, !dbg !16
  %161 = bitcast i32 %160 to float, !dbg !16
  %162 = fmul float %161, %20, !dbg !36
  %163 = fsub float %159, %162, !dbg !37
  %164 = fmul float %156, 2.500000e-01, !dbg !38
  %165 = fsub float 1.000000e+00, %156, !dbg !39
  %166 = fmul float %165, 7.500000e-01, !dbg !40
  %167 = fadd float %164, %166, !dbg !41
  %168 = fsub float 1.000000e+00, %33, !dbg !42
  %169 = fmul float %168, %156, !dbg !43
  %170 = fmul float %165, %33, !dbg !44
  %171 = fadd float %170, %169, !dbg !45
  %172 = fmul float %171, %171, !dbg !46
  %173 = fmul float %167, %172, !dbg !47
  %174 = fmul float %161, 2.500000e-01, !dbg !38
  %175 = fsub float 1.000000e+00, %161, !dbg !39
  %176 = fmul float %175, 7.500000e-01, !dbg !40
  %177 = fadd float %174, %176, !dbg !41
  %178 = fsub float 1.000000e+00, %32, !dbg !42
  %179 = fmul float %178, %161, !dbg !43
  %180 = fmul float %175, %32, !dbg !44
  %181 = fadd float %180, %179, !dbg !45
  %182 = fmul float %181, %181, !dbg !46
  %183 = fmul float %177, %182, !dbg !47
  %184 = extractvalue { i32, i32 } %23, 1, !dbg !20
  %185 = bitcast i32 %184 to float, !dbg !20
  %186 = extractvalue { i32, i32 } %23, 0, !dbg !20
  %187 = bitcast i32 %186 to float, !dbg !20
  %188 = fadd float %163, %r.2.i, !dbg !48
  %189 = fadd float %158, %r.2.i26, !dbg !48
  %190 = fmul float %183, %188, !dbg !49
  %191 = fmul float %173, %189, !dbg !49
  %192 = fmul float %190, %187, !dbg !50
  %193 = fmul float %191, %185, !dbg !50
  %194 = getelementptr float, ptr addrspace(1) %3, i64 %13, !dbg !51
  %195 = bitcast float %192 to i32, !dbg !52
  %196 = bitcast float %193 to i32, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %195, i32 %196, ptr addrspace(1) %194, i1 %12) #2, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cs4stkiqtltwutotwphrvjozd6qsgugsqfi7irbgxqpmka665vrk.py", directory: "inductor_cache/s4")
!4 = !{ptr @triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0", linkageName: "triton_poi_fused_abs_add_clamp_exp_log1p_mul_neg_pow_rsub_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 31, scope: !7)
!20 = !DILocation(line: 27, column: 36, scope: !7)
!21 = !DILocation(line: 47, column: 30, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 35, column: 22, scope: !7)
!25 = !DILocation(line: 47, column: 29, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 47, column: 20, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 47, column: 16, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 46, column: 24, scope: !7)
!29 = !DILocation(line: 47, column: 13, scope: !7)
!30 = !DILocation(line: 48, column: 24, scope: !7)
!31 = !DILocation(line: 49, column: 28, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 43, column: 41, scope: !7)
!36 = !DILocation(line: 44, column: 19, scope: !7)
!37 = !DILocation(line: 45, column: 20, scope: !7)
!38 = !DILocation(line: 29, column: 18, scope: !7)
!39 = !DILocation(line: 31, column: 18, scope: !7)
!40 = !DILocation(line: 33, column: 18, scope: !7)
!41 = !DILocation(line: 34, column: 18, scope: !7)
!42 = !DILocation(line: 36, column: 19, scope: !7)
!43 = !DILocation(line: 37, column: 19, scope: !7)
!44 = !DILocation(line: 38, column: 19, scope: !7)
!45 = !DILocation(line: 39, column: 20, scope: !7)
!46 = !DILocation(line: 40, column: 20, scope: !7)
!47 = !DILocation(line: 41, column: 19, scope: !7)
!48 = !DILocation(line: 50, column: 20, scope: !7)
!49 = !DILocation(line: 51, column: 20, scope: !7)
!50 = !DILocation(line: 52, column: 20, scope: !7)
!51 = !DILocation(line: 53, column: 25, scope: !7)
!52 = !DILocation(line: 53, column: 37, scope: !7)
!53 = !DILocation(line: 53, column: 4, scope: !7)
