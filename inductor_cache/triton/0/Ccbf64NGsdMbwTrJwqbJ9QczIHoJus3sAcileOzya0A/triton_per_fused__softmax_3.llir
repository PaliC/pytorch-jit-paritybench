; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_3(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = icmp slt i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = shl i32 %5, 4, !dbg !13
  %10 = or disjoint i32 %9, %8, !dbg !14
  %11 = sext i32 %10 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %6, i32 0, i1 %6) #2, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = fadd float %14, %16, !dbg !18
  %18 = select i1 %6, float %17, float 0xFFF0000000000000, !dbg !19
  %19 = bitcast float %18 to i32, !dbg !20
  %20 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %19, i32 8, i32 31), !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = fcmp ogt float %18, %21, !dbg !24
  %23 = fcmp uno float %18, 0.000000e+00, !dbg !26
  %24 = or i1 %22, %23, !dbg !27
  %25 = select i1 %24, float %18, float %21, !dbg !28
  %26 = bitcast float %25 to i32, !dbg !20
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 4, i32 31), !dbg !20
  %28 = bitcast i32 %27 to float, !dbg !20
  %29 = fcmp ogt float %25, %28, !dbg !24
  %30 = fcmp uno float %25, 0.000000e+00, !dbg !26
  %31 = or i1 %29, %30, !dbg !27
  %32 = select i1 %31, float %25, float %28, !dbg !28
  %33 = bitcast float %32 to i32, !dbg !20
  %34 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %33, i32 2, i32 31), !dbg !20
  %35 = bitcast i32 %34 to float, !dbg !20
  %36 = fcmp ogt float %32, %35, !dbg !24
  %37 = fcmp uno float %32, 0.000000e+00, !dbg !26
  %38 = or i1 %36, %37, !dbg !27
  %39 = select i1 %38, float %32, float %35, !dbg !28
  %40 = bitcast float %39 to i32, !dbg !20
  %41 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %40, i32 1, i32 31), !dbg !20
  %42 = bitcast i32 %41 to float, !dbg !20
  %43 = fcmp ogt float %39, %42, !dbg !24
  %44 = fcmp uno float %39, 0.000000e+00, !dbg !26
  %45 = or i1 %43, %44, !dbg !27
  %46 = select i1 %45, float %39, float %42, !dbg !28
  %47 = fsub float %17, %46, !dbg !29
  %48 = fmul float %47, 0x3FF7154760000000, !dbg !30
  %49 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %48) #2, !dbg !30
  %50 = select i1 %6, float %49, float 0.000000e+00, !dbg !31
  %51 = bitcast float %50 to i32, !dbg !32
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 8, i32 31), !dbg !32
  %53 = bitcast i32 %52 to float, !dbg !32
  %54 = fadd float %50, %53, !dbg !36
  %55 = bitcast float %54 to i32, !dbg !32
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 4, i32 31), !dbg !32
  %57 = bitcast i32 %56 to float, !dbg !32
  %58 = fadd float %54, %57, !dbg !36
  %59 = bitcast float %58 to i32, !dbg !32
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 2, i32 31), !dbg !32
  %61 = bitcast i32 %60 to float, !dbg !32
  %62 = fadd float %58, %61, !dbg !36
  %63 = bitcast float %62 to i32, !dbg !32
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 1, i32 31), !dbg !32
  %65 = bitcast i32 %64 to float, !dbg !32
  %66 = fadd float %62, %65, !dbg !36
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %49, float %66) #2, !dbg !38
  %68 = and i32 %7, 48, !dbg !39
  %69 = icmp eq i32 %68, 0, !dbg !39
  %70 = bitcast float %67 to i32, !dbg !39
  %71 = and i1 %69, %6, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %70, ptr addrspace(1) %12, i1 %71) #2, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5xoydolht4sjp6wewwijdxdz46pzgz2yksytfdfwsckbff2o7ya.py", directory: "inductor_cache/5x")
!4 = !{ptr @triton_per_fused__softmax_3, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_3, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_3", linkageName: "triton_per_fused__softmax_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 34, column: 18, scope: !7)
!19 = !DILocation(line: 36, column: 33, scope: !7)
!20 = !DILocation(line: 131, column: 29, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !7, file: !22, discriminator: 0)
!22 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!23 = !DILocation(line: 37, column: 37, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !23)
!25 = distinct !DILexicalBlockFile(scope: !21, file: !22, discriminator: 0)
!26 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !23)
!27 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !23)
!28 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !23)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 39, column: 23, scope: !7)
!31 = !DILocation(line: 41, column: 35, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 42, column: 26, scope: !7)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !35)
!37 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!38 = !DILocation(line: 43, column: 19, scope: !7)
!39 = !DILocation(line: 44, column: 48, scope: !7)
!40 = !DILocation(line: 44, column: 4, scope: !7)
