#loc = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":19:0)
#loc1 = loc(unknown)
#loc27 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":42:26)
#loc36 = loc(callsite(#loc1 at #loc27))
module {
  tt.func public @triton_per_fused__softmax_mean_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":19:0), %arg2: i32 loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":19:0)) attributes {noinline = false} {
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.muli %4, %cst_4 : tensor<1x16xi32> loc(#loc6)
    %6 = tt.splat %0 : i32 -> tensor<1x16xi32> loc(#loc7)
    %7 = arith.addi %6, %5 : tensor<1x16xi32> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_3 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %12 = tt.addptr %8, %5 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc10)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc11)
    %14 = arith.addi %5, %cst_2 : tensor<1x16xi32> loc(#loc12)
    %15 = tt.addptr %8, %14 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc13)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc14)
    %17 = arith.addi %5, %cst_1 : tensor<1x16xi32> loc(#loc15)
    %18 = tt.addptr %8, %17 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc16)
    %19 = tt.load %18 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %20 = arith.addi %5, %cst_0 : tensor<1x16xi32> loc(#loc18)
    %21 = tt.addptr %8, %20 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc19)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    %23 = arith.addf %13, %16 : tensor<1x16xf32> loc(#loc21)
    %24 = arith.addf %23, %19 : tensor<1x16xf32> loc(#loc22)
    %25 = arith.addf %24, %22 : tensor<1x16xf32> loc(#loc23)
    %26 = arith.divf %11, %25 : tensor<1x16xf32> loc(#loc24)
    %27 = arith.select %10, %26, %cst_3 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc25)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc27)), %arg5: f32 loc(callsite(#loc1 at #loc27))):
      %33 = arith.addf %arg4, %arg5 : f32 loc(#loc38)
      tt.reduce.return %33 : f32 loc(#loc35)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc35)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc29)
    %30 = arith.divf %29, %cst : tensor<1x1xf32> loc(#loc30)
    gpu.barrier loc(#loc31)
    %31 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc32)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    tt.store %32, %30, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":23:28)
#loc3 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":25:21)
#loc4 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":26:26)
#loc5 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":26:34)
#loc6 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":31:37)
#loc7 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":31:35)
#loc8 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":31:30)
#loc9 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":31:42)
#loc10 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":32:30)
#loc11 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":32:37)
#loc12 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":33:34)
#loc13 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":33:30)
#loc14 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":33:41)
#loc15 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":34:34)
#loc16 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":34:30)
#loc17 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":34:41)
#loc18 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":35:34)
#loc19 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":35:30)
#loc20 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":35:41)
#loc21 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":36:18)
#loc22 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":37:18)
#loc23 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":38:18)
#loc24 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":39:18)
#loc25 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":41:34)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc29 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":42:29)
#loc30 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":44:20)
#loc31 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":45:4)
#loc32 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":46:28)
#loc33 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":46:40)
#loc34 = loc("inductor_cache/ee/ceexh4gwrvyvlukyosg5pd5gqa6ehuu7ul3yk4twas7aohxtjlzl.py":46:4)
#loc35 = loc(callsite(#loc26 at #loc27))
#loc37 = loc(callsite(#loc28 at #loc26))
#loc38 = loc(callsite(#loc37 at #loc27))
