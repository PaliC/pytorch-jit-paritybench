//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9 // -- Begin function triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9
.visible .entry triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_3,
	.param .u32 triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_4,
	.param .u32 triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_1];
$L__tmp0:
	.loc	1 23 28                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd9, [triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_2];
	.loc	1 26 34                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:26:34
	mov.u32 	%r38, %tid.x;
	and.b32  	%r39, %r38, 31;
	ld.param.u64 	%rd10, [triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_9_param_3];
	shl.b32 	%r40, %r38, 1;
	and.b32  	%r41, %r40, 126;
	.loc	1 31 43                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:31:43
	shl.b32 	%r42, %r1, 7;
	.loc	1 31 39                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:31:39
	or.b32  	%r43, %r42, %r41;
	.loc	1 31 34                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:31:34
	mul.wide.s32 	%rd11, %r43, 4;
	add.s64 	%rd1, %rd7, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 31 48                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:31:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 32 30                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:32:30
	mul.wide.u32 	%rd12, %r41, 4;
	add.s64 	%rd2, %rd9, %rd12;
	.loc	1 32 35                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:32:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 33 34                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:33:34
	add.s64 	%rd3, %rd8, %rd11;
	.loc	1 33 48                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:33:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 34 18                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:34:18
	add.f32 	%f7, %f1, %f3;
	add.f32 	%f8, %f2, %f4;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p13, %f7, 0f00000000;
	setp.lt.f32 	%p14, %f8, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f9, 0f00000000, %f7, %p13;
	selp.f32 	%f10, 0f00000000, %f8, %p14;
$L__tmp2:
	.loc	1 37 18                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:37:18
	add.f32 	%f11, %f3, %f5;
	add.f32 	%f12, %f4, %f6;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p15, %f11, 0f00000000;
	setp.lt.f32 	%p16, %f12, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, 0f00000000, %f11, %p15;
	selp.f32 	%f14, 0f00000000, %f12, %p16;
$L__tmp4:
	.loc	1 39 18                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:39:18
	mul.f32 	%f15, %f10, %f10;
$L__tmp5:
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f16, %f9, %f9, %f15;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f16;
	shfl.sync.bfly.b32	%r45, %r44, 16, 31, -1;
	mov.b32 	%f17, %r45;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f18;
	shfl.sync.bfly.b32	%r47, %r46, 8, 31, -1;
	mov.b32 	%f19, %r47;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f20;
	shfl.sync.bfly.b32	%r49, %r48, 4, 31, -1;
	mov.b32 	%f21, %r49;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f22;
	shfl.sync.bfly.b32	%r51, %r50, 2, 31, -1;
	mov.b32 	%f23, %r51;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f24;
	shfl.sync.bfly.b32	%r53, %r52, 1, 31, -1;
	mov.b32 	%f25, %r53;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r39, 0;
	shr.u32 	%r54, %r38, 3;
	and.b32  	%r55, %r54, 4;
	mov.u32 	%r56, global_smem;
	add.s32 	%r8, %r56, %r55;
	mov.b32 	%r9, %f26;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r38, 2;
	shl.b32 	%r57, %r38, 2;
	add.s32 	%r11, %r56, %r57;
	// begin inline asm
	@%p5 ld.shared.b32 %r10, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r10;
	shfl.sync.bfly.b32	%r58, %r10, 1, 31, -1;
	mov.b32 	%f28, %r58;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r59, %r38, 1;
	setp.eq.b32 	%p17, %r59, 1;
	not.pred 	%p18, %p17;
	and.pred  	%p6, %p5, %p18;
	mov.b32 	%r13, %f29;
	// begin inline asm
	@%p6 st.shared.b32 [ %r11 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f30, [global_smem];
$L__tmp6:
	.loc	1 42 19                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:42:19
	mul.f32 	%f31, %f14, %f14;
$L__tmp7:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f32, %f13, %f13, %f31;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f32;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f33, %r61;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f34;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f35, %r63;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f36;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f37, %r65;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f38;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f39, %r67;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f40;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f41, %r69;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r15, %f42;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r16, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r16;
	shfl.sync.bfly.b32	%r70, %r16, 1, 31, -1;
	mov.b32 	%f44, %r70;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r19, %f45;
	// begin inline asm
	@%p6 st.shared.b32 [ %r11 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f46, [global_smem];
$L__tmp8:
	.loc	1 45 27                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:45:27
	sqrt.approx.ftz.f32 	%f47, %f30;
	.loc	1 47 20                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:47:20
	add.f32 	%f48, %f47, 0f2EDBE6FF;
	.loc	1 48 19                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:48:19
	mov.b32 	%r21, %f9;
	mov.b32 	%r22, %f48;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f49, %r20;
	mov.b32 	%r24, %f10;
	// begin inline asm
	div.full.f32 %r23, %r24, %r22;
	// end inline asm
	mov.b32 	%f50, %r23;
	.loc	1 49 27                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:49:27
	sqrt.approx.ftz.f32 	%f51, %f46;
	.loc	1 50 20                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:50:20
	add.f32 	%f52, %f51, 0f2EDBE6FF;
	.loc	1 51 19                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:51:19
	mov.b32 	%r27, %f13;
	mov.b32 	%r28, %f52;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f53, %r26;
	mov.b32 	%r30, %f14;
	// begin inline asm
	div.full.f32 %r29, %r30, %r28;
	// end inline asm
	mov.b32 	%f54, %r29;
	.loc	1 52 20                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:52:20
	sub.f32 	%f55, %f49, %f53;
	sub.f32 	%f56, %f50, %f54;
	.loc	1 53 20                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:53:20
	mul.f32 	%f57, %f55, %f55;
	mul.f32 	%f58, %f56, %f56;
	.loc	1 54 48                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:54:48
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r21, %r24 };
	// end inline asm
	.loc	1 55 48                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:55:48
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd3 + 0 ], { %r27, %r30 };
	// end inline asm
	.loc	1 56 25                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:56:25
	add.s64 	%rd6, %rd10, %rd11;
	.loc	1 56 46                         // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:56:46
	mov.b32 	%r36, %f57;
	mov.b32 	%r37, %f58;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 56 4                          // czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py:56:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zi/czis5by4mjhtu7sxzklep434catysk7efeyqdayxi7iveiqovenz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 301                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x126 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 105
.b8 115
.b8 53
.b8 98
.b8 121
.b8 52
.b8 109
.b8 106
.b8 104
.b8 116
.b8 117
.b8 55
.b8 115
.b8 120
.b8 122
.b8 107
.b8 108
.b8 101
.b8 112
.b8 52
.b8 51
.b8 52
.b8 99
.b8 97
.b8 116
.b8 121
.b8 115
.b8 107
.b8 55
.b8 101
.b8 102
.b8 101
.b8 121
.b8 113
.b8 100
.b8 97
.b8 121
.b8 120
.b8 105
.b8 55
.b8 105
.b8 118
.b8 101
.b8 105
.b8 113
.b8 111
.b8 118
.b8 101
.b8 110
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x57 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 105
.b8 110
.b8 100
.b8 105
.b8 99
.b8 101
.b8 115
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xba:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xff:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x117:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
