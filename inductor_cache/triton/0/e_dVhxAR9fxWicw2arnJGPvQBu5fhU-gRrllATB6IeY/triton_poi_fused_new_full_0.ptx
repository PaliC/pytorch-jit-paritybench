//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_new_full_0 // -- Begin function triton_poi_fused_new_full_0
                                        // @triton_poi_fused_new_full_0
.visible .entry triton_poi_fused_new_full_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_new_full_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_new_full_0_param_1,
	.param .u32 triton_poi_fused_new_full_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_new_full_0_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_new_full_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:21:33
	shl.b32 	%r7, %r1, 4;
	.loc	1 22 36                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:22:36
	mov.u32 	%r8, %tid.x;
	and.b32  	%r9, %r8, 16;
	and.b32  	%r10, %r8, 15;
	.loc	1 22 23                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:22:23
	or.b32  	%r11, %r7, %r10;
	.loc	1 23 21                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:23:21
	setp.lt.s32 	%p1, %r11, 16;
	.loc	1 25 19                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:25:19
	bfe.s32 	%r12, %r1, 27, 1;
	shr.u32 	%r13, %r12, 30;
	add.s32 	%r14, %r11, %r13;
	and.b32  	%r15, %r14, -4;
	sub.s32 	%r16, %r11, %r15;
	.loc	1 27 30                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:27:30
	mul.wide.s32 	%rd8, %r16, 4;
	add.s64 	%rd4, %rd6, %rd8;
	add.s64 	%rd1, %rd4, 48;
	.loc	1 27 40                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:27:40
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 30                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:28:30
	add.s64 	%rd2, %rd4, 32;
	.loc	1 28 39                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:28:39
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:29:30
	add.s64 	%rd3, %rd4, 16;
	.loc	1 29 39                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:29:39
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 36                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:30:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 19                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:33:19
	and.b32  	%r17, %r11, -4;
	setp.eq.s32 	%p6, %r17, 12;
	.loc	1 35 19                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:35:19
	setp.eq.s32 	%p7, %r17, 8;
	.loc	1 37 19                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:37:19
	setp.eq.s32 	%p8, %r17, 4;
	.loc	1 39 20                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:39:20
	add.s32 	%r18, %r11, 3;
	setp.lt.u32 	%p9, %r18, 7;
	.loc	1 45 25                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:45:25
	mul.wide.s32 	%rd9, %r11, 4;
	add.s64 	%rd5, %rd7, %rd9;
	.loc	1 45 37                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:45:37
	setp.eq.s32 	%p10, %r9, 0;
	.loc	1 41 35                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:41:35
	selp.b32 	%r19, %r5, -1082130432, %p9;
	.loc	1 42 33                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:42:33
	selp.b32 	%r20, %r4, %r19, %p8;
	.loc	1 43 33                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:43:33
	selp.b32 	%r21, %r3, %r20, %p7;
	.loc	1 44 33                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:44:33
	selp.b32 	%r6, %r2, %r21, %p6;
	.loc	1 45 37                         // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:45:37
	and.pred  	%p5, %p10, %p1;
	// begin inline asm
	@%p5 st.global.b32 [ %rd5 + 0 ], { %r6 };
	// end inline asm
	.loc	1 45 4                          // cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py:45:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ug/cugm6dgo6m4ihsqfpatemjzabbsdp6chz7tuwybumnlg2kobz3py.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 103
.b8 109
.b8 54
.b8 100
.b8 103
.b8 111
.b8 54
.b8 109
.b8 52
.b8 105
.b8 104
.b8 115
.b8 113
.b8 102
.b8 112
.b8 97
.b8 116
.b8 101
.b8 109
.b8 106
.b8 122
.b8 97
.b8 98
.b8 98
.b8 115
.b8 100
.b8 112
.b8 54
.b8 99
.b8 104
.b8 122
.b8 55
.b8 116
.b8 117
.b8 119
.b8 121
.b8 98
.b8 117
.b8 109
.b8 110
.b8 108
.b8 103
.b8 50
.b8 107
.b8 111
.b8 98
.b8 122
.b8 51
.b8 112
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
