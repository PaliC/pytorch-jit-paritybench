#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__softmax_div_masked_fill_2(%arg0: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<64xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<-1.000000e+09> : tensor<64xf32, #blocked> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<64xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<64xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_1 : tensor<64xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_2 : tensor<64xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<64xi32, #blocked> loc(#loc8)
    %8 = arith.muli %6, %cst_2 : tensor<64xi32, #blocked> loc(#loc9)
    %9 = arith.muli %7, %cst_3 : tensor<64xi32, #blocked> loc(#loc10)
    %10 = arith.addi %8, %9 : tensor<64xi32, #blocked> loc(#loc11)
    %11 = tt.splat %arg0 : !tt.ptr<i1> -> tensor<64x!tt.ptr<i1>, #blocked> loc(#loc12)
    %12 = tt.addptr %11, %10 : tensor<64x!tt.ptr<i1>, #blocked>, tensor<64xi32, #blocked> loc(#loc12)
    %13 = tt.bitcast %12 : tensor<64x!tt.ptr<i1>, #blocked> -> tensor<64x!tt.ptr<i8>, #blocked> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i8>, #blocked> loc(#loc13)
    %15 = arith.cmpi ne, %14, %cst : tensor<64xi8, #blocked> loc(#loc13)
    %16 = arith.muli %4, %cst_2 : tensor<64xi32, #blocked> loc(#loc14)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc15)
    %18 = tt.addptr %17, %16 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc15)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc16)
    %20 = arith.addi %8, %cst_4 : tensor<64xi32, #blocked> loc(#loc17)
    %21 = arith.addi %20, %9 : tensor<64xi32, #blocked> loc(#loc18)
    %22 = tt.addptr %11, %21 : tensor<64x!tt.ptr<i1>, #blocked>, tensor<64xi32, #blocked> loc(#loc19)
    %23 = tt.bitcast %22 : tensor<64x!tt.ptr<i1>, #blocked> -> tensor<64x!tt.ptr<i8>, #blocked> loc(#loc20)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i8>, #blocked> loc(#loc20)
    %25 = arith.cmpi ne, %24, %cst : tensor<64xi8, #blocked> loc(#loc20)
    %26 = arith.addi %16, %cst_4 : tensor<64xi32, #blocked> loc(#loc21)
    %27 = tt.addptr %17, %26 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc22)
    %28 = tt.load %27, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc23)
    %29 = arith.addi %8, %cst_5 : tensor<64xi32, #blocked> loc(#loc24)
    %30 = arith.addi %29, %9 : tensor<64xi32, #blocked> loc(#loc25)
    %31 = tt.addptr %11, %30 : tensor<64x!tt.ptr<i1>, #blocked>, tensor<64xi32, #blocked> loc(#loc26)
    %32 = tt.bitcast %31 : tensor<64x!tt.ptr<i1>, #blocked> -> tensor<64x!tt.ptr<i8>, #blocked> loc(#loc27)
    %33 = tt.load %32, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i8>, #blocked> loc(#loc27)
    %34 = arith.cmpi ne, %33, %cst : tensor<64xi8, #blocked> loc(#loc27)
    %35 = arith.addi %16, %cst_5 : tensor<64xi32, #blocked> loc(#loc28)
    %36 = tt.addptr %17, %35 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc29)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc30)
    %38 = arith.addi %8, %cst_6 : tensor<64xi32, #blocked> loc(#loc31)
    %39 = arith.addi %38, %9 : tensor<64xi32, #blocked> loc(#loc32)
    %40 = tt.addptr %11, %39 : tensor<64x!tt.ptr<i1>, #blocked>, tensor<64xi32, #blocked> loc(#loc33)
    %41 = tt.bitcast %40 : tensor<64x!tt.ptr<i1>, #blocked> -> tensor<64x!tt.ptr<i8>, #blocked> loc(#loc34)
    %42 = tt.load %41, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i8>, #blocked> loc(#loc34)
    %43 = arith.cmpi ne, %42, %cst : tensor<64xi8, #blocked> loc(#loc34)
    %44 = arith.addi %16, %cst_6 : tensor<64xi32, #blocked> loc(#loc35)
    %45 = tt.addptr %17, %44 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc36)
    %46 = tt.load %45, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc37)
    %47 = arith.select %15, %cst_0, %19 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc38)
    %48 = arith.select %25, %cst_0, %28 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc39)
    %49 = arith.cmpf ogt, %47, %48 : tensor<64xf32, #blocked> loc(#loc65)
    %50 = arith.cmpf une, %47, %47 : tensor<64xf32, #blocked> loc(#loc66)
    %51 = arith.ori %49, %50 : tensor<64xi1, #blocked> loc(#loc67)
    %52 = arith.select %51, %47, %48 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc68)
    %53 = arith.select %34, %cst_0, %37 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc45)
    %54 = arith.cmpf ogt, %52, %53 : tensor<64xf32, #blocked> loc(#loc69)
    %55 = arith.cmpf une, %52, %52 : tensor<64xf32, #blocked> loc(#loc70)
    %56 = arith.ori %54, %55 : tensor<64xi1, #blocked> loc(#loc71)
    %57 = arith.select %56, %52, %53 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc72)
    %58 = arith.select %43, %cst_0, %46 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc47)
    %59 = arith.cmpf ogt, %57, %58 : tensor<64xf32, #blocked> loc(#loc73)
    %60 = arith.cmpf une, %57, %57 : tensor<64xf32, #blocked> loc(#loc74)
    %61 = arith.ori %59, %60 : tensor<64xi1, #blocked> loc(#loc75)
    %62 = arith.select %61, %57, %58 : tensor<64xi1, #blocked>, tensor<64xf32, #blocked> loc(#loc76)
    %63 = arith.subf %47, %62 : tensor<64xf32, #blocked> loc(#loc49)
    %64 = math.exp %63 : tensor<64xf32, #blocked> loc(#loc50)
    %65 = arith.subf %48, %62 : tensor<64xf32, #blocked> loc(#loc51)
    %66 = math.exp %65 : tensor<64xf32, #blocked> loc(#loc52)
    %67 = arith.addf %64, %66 : tensor<64xf32, #blocked> loc(#loc53)
    %68 = arith.subf %53, %62 : tensor<64xf32, #blocked> loc(#loc54)
    %69 = math.exp %68 : tensor<64xf32, #blocked> loc(#loc55)
    %70 = arith.addf %67, %69 : tensor<64xf32, #blocked> loc(#loc56)
    %71 = arith.subf %58, %62 : tensor<64xf32, #blocked> loc(#loc57)
    %72 = math.exp %71 : tensor<64xf32, #blocked> loc(#loc58)
    %73 = arith.addf %70, %72 : tensor<64xf32, #blocked> loc(#loc59)
    %74 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc60)
    %75 = tt.addptr %74, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc60)
    tt.store %75, %62, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc61)
    %76 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>, #blocked> loc(#loc62)
    %77 = tt.addptr %76, %4 : tensor<64x!tt.ptr<f32>, #blocked>, tensor<64xi32, #blocked> loc(#loc62)
    tt.store %77, %73, %5 : tensor<64x!tt.ptr<f32>, #blocked> loc(#loc63)
    tt.return loc(#loc64)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":21:28)
#loc3 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":21:33)
#loc4 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":22:36)
#loc5 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":22:23)
#loc6 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":23:21)
#loc7 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":24:19)
#loc8 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":25:19)
#loc9 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":27:32)
#loc10 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":27:40)
#loc11 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":27:37)
#loc12 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":27:30)
#loc13 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":27:45)
#loc14 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":28:32)
#loc15 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":28:30)
#loc16 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":28:37)
#loc17 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":29:34)
#loc18 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":29:41)
#loc19 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":29:30)
#loc20 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":29:49)
#loc21 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":30:34)
#loc22 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":30:30)
#loc23 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":30:41)
#loc24 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":31:35)
#loc25 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":31:42)
#loc26 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":31:31)
#loc27 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":31:50)
#loc28 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":32:35)
#loc29 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":32:31)
#loc30 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":32:42)
#loc31 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":33:35)
#loc32 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":33:42)
#loc33 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":33:31)
#loc34 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":33:50)
#loc35 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":34:35)
#loc36 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":34:31)
#loc37 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":34:42)
#loc38 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":38:32)
#loc39 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":40:32)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc41 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":41:41)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc45 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":43:34)
#loc46 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":44:42)
#loc47 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":46:34)
#loc48 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":47:42)
#loc49 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":48:19)
#loc50 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":49:24)
#loc51 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":50:19)
#loc52 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":51:24)
#loc53 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":52:20)
#loc54 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":53:20)
#loc55 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":54:24)
#loc56 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":55:20)
#loc57 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":56:20)
#loc58 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":57:24)
#loc59 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":58:20)
#loc60 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":59:25)
#loc61 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":59:37)
#loc62 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":60:25)
#loc63 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":60:37)
#loc64 = loc("inductor_cache/xw/cxwi4jgiblzhi2gzgdqrp3oz43pas3rju2idgyz35j4dj57txsml.py":60:4)
#loc65 = loc(callsite(#loc40 at #loc41))
#loc66 = loc(callsite(#loc42 at #loc41))
#loc67 = loc(callsite(#loc43 at #loc41))
#loc68 = loc(callsite(#loc44 at #loc41))
#loc69 = loc(callsite(#loc40 at #loc46))
#loc70 = loc(callsite(#loc42 at #loc46))
#loc71 = loc(callsite(#loc43 at #loc46))
#loc72 = loc(callsite(#loc44 at #loc46))
#loc73 = loc(callsite(#loc40 at #loc48))
#loc74 = loc(callsite(#loc42 at #loc48))
#loc75 = loc(callsite(#loc43 at #loc48))
#loc76 = loc(callsite(#loc44 at #loc48))
