; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_mean_mul_pow_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %.frozen = freeze i32 %6, !dbg !13
  %10 = sdiv i32 %.frozen, 4, !dbg !13
  %11 = mul i32 %10, 4, !dbg !14
  %.decomposed = sub i32 %.frozen, %11, !dbg !14
  %12 = shl i32 %6, 4, !dbg !15
  %13 = or disjoint i32 %12, %9, !dbg !16
  %14 = sext i32 %13 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %7, i32 0, i1 %7) #2, !dbg !18
  %17 = bitcast i32 %16 to float, !dbg !18
  %18 = fmul float %17, %17, !dbg !19
  %19 = select i1 %7, float %18, float 0.000000e+00, !dbg !20
  %20 = bitcast float %19 to i32, !dbg !21
  %21 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %20, i32 8, i32 31), !dbg !21
  %22 = bitcast i32 %21 to float, !dbg !21
  %23 = fadd float %19, %22, !dbg !25
  %24 = bitcast float %23 to i32, !dbg !21
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 4, i32 31), !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = fadd float %23, %26, !dbg !25
  %28 = bitcast float %27 to i32, !dbg !21
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 2, i32 31), !dbg !21
  %30 = bitcast i32 %29 to float, !dbg !21
  %31 = fadd float %27, %30, !dbg !25
  %32 = bitcast float %31 to i32, !dbg !21
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 1, i32 31), !dbg !21
  %34 = bitcast i32 %33 to float, !dbg !21
  %35 = fadd float %31, %34, !dbg !25
  %36 = select i1 %7, float %17, float 0.000000e+00, !dbg !27
  %37 = bitcast float %36 to i32, !dbg !28
  %38 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 8, i32 31), !dbg !28
  %39 = bitcast i32 %38 to float, !dbg !28
  %40 = fadd float %36, %39, !dbg !30
  %41 = bitcast float %40 to i32, !dbg !28
  %42 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %41, i32 4, i32 31), !dbg !28
  %43 = bitcast i32 %42 to float, !dbg !28
  %44 = fadd float %40, %43, !dbg !30
  %45 = bitcast float %44 to i32, !dbg !28
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 2, i32 31), !dbg !28
  %47 = bitcast i32 %46 to float, !dbg !28
  %48 = fadd float %44, %47, !dbg !30
  %49 = bitcast float %48 to i32, !dbg !28
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 1, i32 31), !dbg !28
  %51 = bitcast i32 %50 to float, !dbg !28
  %52 = fadd float %48, %51, !dbg !30
  %53 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float 1.600000e+01) #2, !dbg !31
  %54 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %35, float 1.600000e+01) #2, !dbg !32
  %55 = fmul float %53, %53, !dbg !33
  %56 = fsub float %54, %55, !dbg !34
  %57 = shl i32 %10, 3, !dbg !35
  %58 = add i32 %57, %.decomposed, !dbg !36
  %59 = sext i32 %58 to i64, !dbg !37
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !37
  %61 = and i32 %8, 63, !dbg !38
  %62 = icmp eq i32 %61, 0, !dbg !38
  %63 = bitcast float %53 to i32, !dbg !38
  %64 = and i1 %62, %7, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %60, i1 %64) #2, !dbg !38
  %65 = getelementptr float, ptr addrspace(1) %2, i64 %59, !dbg !39
  %66 = bitcast float %56 to i32, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %65, i1 %64) #2, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py", directory: "inductor_cache/ew")
!4 = !{ptr @triton_per_fused_mean_mul_pow_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mean_mul_pow_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mean_mul_pow_sub_0", linkageName: "triton_per_fused_mean_mul_pow_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 32, column: 19, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 38, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 30, scope: !7)
!18 = !DILocation(line: 33, column: 43, scope: !7)
!19 = !DILocation(line: 34, column: 18, scope: !7)
!20 = !DILocation(line: 36, column: 33, scope: !7)
!21 = !DILocation(line: 267, column: 36, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = !DILocation(line: 37, column: 24, scope: !7)
!25 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !24)
!26 = distinct !DILexicalBlockFile(scope: !22, file: !23, discriminator: 0)
!27 = !DILocation(line: 39, column: 33, scope: !7)
!28 = !DILocation(line: 267, column: 36, scope: !22, inlinedAt: !29)
!29 = !DILocation(line: 40, column: 24, scope: !7)
!30 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !29)
!31 = !DILocation(line: 42, column: 19, scope: !7)
!32 = !DILocation(line: 43, column: 19, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 20, scope: !7)
!35 = !DILocation(line: 46, column: 32, scope: !7)
!36 = !DILocation(line: 46, column: 30, scope: !7)
!37 = !DILocation(line: 46, column: 25, scope: !7)
!38 = !DILocation(line: 46, column: 44, scope: !7)
!39 = !DILocation(line: 47, column: 25, scope: !7)
!40 = !DILocation(line: 47, column: 44, scope: !7)
!41 = !DILocation(line: 47, column: 4, scope: !7)
