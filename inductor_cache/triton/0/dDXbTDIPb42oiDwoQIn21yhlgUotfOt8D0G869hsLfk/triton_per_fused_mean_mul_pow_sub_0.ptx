//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_mul_pow_sub_0 // -- Begin function triton_per_fused_mean_mul_pow_sub_0
                                        // @triton_per_fused_mean_mul_pow_sub_0
.visible .entry triton_per_fused_mean_mul_pow_sub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_pow_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_pow_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_pow_sub_0_param_2,
	.param .u32 triton_per_fused_mean_mul_pow_sub_0_param_3,
	.param .u32 triton_per_fused_mean_mul_pow_sub_0_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<41>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_mean_mul_pow_sub_0_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_mean_mul_pow_sub_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:25:21
	setp.lt.s32 	%p1, %r1, 16;
	ld.param.u64 	%rd6, [triton_per_fused_mean_mul_pow_sub_0_param_2];
	.loc	1 26 34                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:26:34
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 15;
	.loc	1 32 19                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:32:19
	shr.s32 	%r14, %r1, 31;
	shr.u32 	%r15, %r14, 30;
	add.s32 	%r16, %r1, %r15;
	.loc	1 31 19                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:31:19
	and.b32  	%r17, %r16, -4;
	sub.s32 	%r18, %r1, %r17;
	.loc	1 33 38                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:33:38
	shl.b32 	%r19, %r1, 4;
	.loc	1 33 35                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:33:35
	or.b32  	%r20, %r19, %r13;
	.loc	1 33 30                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:33:30
	mul.wide.s32 	%rd7, %r20, 4;
	add.s64 	%rd1, %rd4, %rd7;
	mov.b32 	%r3, 0;
	.loc	1 33 43                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 34 18                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:34:18
	mul.f32 	%f2, %f1, %f1;
	.loc	1 36 33                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:36:33
	selp.f32 	%f3, %f2, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r21, %f3;
	shfl.sync.bfly.b32	%r22, %r21, 8, 31, -1;
	mov.b32 	%f4, %r22;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f3, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r23, %f5;
	shfl.sync.bfly.b32	%r24, %r23, 4, 31, -1;
	mov.b32 	%f6, %r24;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f7, %f5, %f6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f7;
	shfl.sync.bfly.b32	%r26, %r25, 2, 31, -1;
	mov.b32 	%f8, %r26;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r27, %f9;
	shfl.sync.bfly.b32	%r28, %r27, 1, 31, -1;
	mov.b32 	%f10, %r28;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
$L__tmp2:
	.loc	1 39 33                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:39:33
	selp.f32 	%f12, %f1, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r29, %f12;
	shfl.sync.bfly.b32	%r30, %r29, 8, 31, -1;
	mov.b32 	%f13, %r30;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f14;
	shfl.sync.bfly.b32	%r32, %r31, 4, 31, -1;
	mov.b32 	%f15, %r32;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f16;
	shfl.sync.bfly.b32	%r34, %r33, 2, 31, -1;
	mov.b32 	%f17, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f18;
	shfl.sync.bfly.b32	%r36, %r35, 1, 31, -1;
	mov.b32 	%f19, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
$L__tmp4:
	.loc	1 42 19                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:42:19
	mov.b32 	%r5, %f20;
	mov.b32 	%r6, 1098907648;
	// begin inline asm
	div.full.f32 %r10, %r5, %r6;
	// end inline asm
	mov.b32 	%f21, %r10;
	.loc	1 43 19                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:43:19
	mov.b32 	%r8, %f11;
	// begin inline asm
	div.full.f32 %r7, %r8, %r6;
	// end inline asm
	mov.b32 	%f22, %r7;
	.loc	1 45 20                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:45:20
	neg.f32 	%f23, %f21;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	.loc	1 46 32                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:46:32
	shl.b32 	%r37, %r16, 1;
	and.b32  	%r38, %r37, -8;
	.loc	1 46 30                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:46:30
	add.s32 	%r39, %r38, %r18;
	.loc	1 46 25                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:46:25
	mul.wide.s32 	%rd8, %r39, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 46 44                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:46:44
	and.b32  	%r40, %r12, 63;
	setp.eq.s32 	%p5, %r40, 0;
	and.pred  	%p3, %p5, %p1;
	// begin inline asm
	@%p3 st.global.b32 [ %rd2 + 0 ], { %r10 };
	// end inline asm
	.loc	1 47 25                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:47:25
	add.s64 	%rd3, %rd6, %rd8;
	.loc	1 47 44                         // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:47:44
	mov.b32 	%r11, %f24;
	// begin inline asm
	@%p3 st.global.b32 [ %rd3 + 0 ], { %r11 };
	// end inline asm
	.loc	1 47 4                          // ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py:47:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ew/ceweyf5k2p4mpuj6ubaxb6j4vgigmztqsxs3a4legkhnhpebfp63.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 204                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 119
.b8 101
.b8 121
.b8 102
.b8 53
.b8 107
.b8 50
.b8 112
.b8 52
.b8 109
.b8 112
.b8 117
.b8 106
.b8 54
.b8 117
.b8 98
.b8 97
.b8 120
.b8 98
.b8 54
.b8 106
.b8 52
.b8 118
.b8 103
.b8 105
.b8 103
.b8 109
.b8 122
.b8 116
.b8 113
.b8 115
.b8 120
.b8 115
.b8 51
.b8 97
.b8 52
.b8 108
.b8 101
.b8 103
.b8 107
.b8 104
.b8 110
.b8 104
.b8 112
.b8 101
.b8 98
.b8 102
.b8 112
.b8 54
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
