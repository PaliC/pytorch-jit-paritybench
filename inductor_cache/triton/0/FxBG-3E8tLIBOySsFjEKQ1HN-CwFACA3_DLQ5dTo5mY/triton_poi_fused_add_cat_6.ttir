#loc = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0)
module {
  tt.func public @triton_poi_fused_add_cat_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<33536> : tensor<256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<-52> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<-40> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<52> : tensor<256xi64> loc(#loc1)
    %cst_3 = arith.constant dense<-28> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<40> : tensor<256xi64> loc(#loc1)
    %cst_5 = arith.constant dense<3072> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<-16> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<28> : tensor<256xi64> loc(#loc1)
    %cst_8 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_9 = arith.constant dense<4096> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<256xi64> loc(#loc1)
    %cst_11 = arith.constant dense<16384> : tensor<256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_13 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_12 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_13 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_11 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %4, %cst_11 : tensor<256xi32> loc(#loc10)
    %10 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %12 = tt.load %11 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.extsi %6 : tensor<256xi32> to tensor<256xi64> loc(#loc13)
    %14 = arith.cmpi slt, %13, %cst_10 : tensor<256xi64> loc(#loc13)
    %15 = arith.muli %6, %cst_13 : tensor<256xi32> loc(#loc14)
    %16 = arith.addi %7, %15 : tensor<256xi32> loc(#loc15)
    %17 = arith.muli %8, %cst_9 : tensor<256xi32> loc(#loc16)
    %18 = arith.addi %16, %17 : tensor<256xi32> loc(#loc17)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc18)
    %20 = tt.addptr %19, %18 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %21 = tt.load %20, %14, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %22 = arith.cmpi sge, %13, %cst_10 : tensor<256xi64> loc(#loc20)
    %23 = arith.cmpi slt, %13, %cst_7 : tensor<256xi64> loc(#loc21)
    %24 = arith.andi %22, %23 : tensor<256xi1> loc(#loc22)
    %25 = arith.addi %6, %cst_6 : tensor<256xi32> loc(#loc23)
    %26 = arith.muli %25, %cst_13 : tensor<256xi32> loc(#loc24)
    %27 = arith.addi %7, %26 : tensor<256xi32> loc(#loc25)
    %28 = arith.muli %8, %cst_5 : tensor<256xi32> loc(#loc26)
    %29 = arith.addi %27, %28 : tensor<256xi32> loc(#loc27)
    %30 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc28)
    %31 = tt.addptr %30, %29 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc28)
    %32 = tt.load %31, %24, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc29)
    %33 = arith.cmpi sge, %13, %cst_7 : tensor<256xi64> loc(#loc30)
    %34 = arith.cmpi slt, %13, %cst_4 : tensor<256xi64> loc(#loc31)
    %35 = arith.andi %33, %34 : tensor<256xi1> loc(#loc32)
    %36 = arith.addi %6, %cst_3 : tensor<256xi32> loc(#loc33)
    %37 = arith.muli %36, %cst_13 : tensor<256xi32> loc(#loc34)
    %38 = arith.addi %7, %37 : tensor<256xi32> loc(#loc35)
    %39 = arith.addi %38, %28 : tensor<256xi32> loc(#loc36)
    %40 = tt.addptr %30, %39 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc37)
    %41 = tt.load %40, %35, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc38)
    %42 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc39)
    %43 = tt.addptr %42, %39 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc39)
    %44 = tt.load %43, %35, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc40)
    %45 = arith.addf %41, %44 : tensor<256xf32> loc(#loc41)
    %46 = arith.cmpi sge, %13, %cst_4 : tensor<256xi64> loc(#loc42)
    %47 = arith.cmpi slt, %13, %cst_2 : tensor<256xi64> loc(#loc43)
    %48 = arith.andi %46, %47 : tensor<256xi1> loc(#loc44)
    %49 = arith.addi %6, %cst_1 : tensor<256xi32> loc(#loc45)
    %50 = arith.muli %49, %cst_13 : tensor<256xi32> loc(#loc46)
    %51 = arith.addi %7, %50 : tensor<256xi32> loc(#loc47)
    %52 = arith.addi %51, %28 : tensor<256xi32> loc(#loc48)
    %53 = tt.addptr %30, %52 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc49)
    %54 = tt.load %53, %48, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc50)
    %55 = tt.addptr %42, %52 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc51)
    %56 = tt.load %55, %48, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc52)
    %57 = arith.addf %54, %56 : tensor<256xf32> loc(#loc53)
    %58 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc54)
    %59 = tt.addptr %58, %52 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc54)
    %60 = tt.load %59, %48, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc55)
    %61 = arith.addf %57, %60 : tensor<256xf32> loc(#loc56)
    %62 = arith.cmpi sge, %13, %cst_2 : tensor<256xi64> loc(#loc57)
    %63 = arith.addi %6, %cst_0 : tensor<256xi32> loc(#loc58)
    %64 = arith.muli %63, %cst_13 : tensor<256xi32> loc(#loc59)
    %65 = arith.addi %7, %64 : tensor<256xi32> loc(#loc60)
    %66 = arith.addi %65, %28 : tensor<256xi32> loc(#loc61)
    %67 = tt.addptr %30, %66 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc62)
    %68 = tt.load %67, %62, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc63)
    %69 = tt.addptr %42, %66 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc64)
    %70 = tt.load %69, %62, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc65)
    %71 = arith.addf %68, %70 : tensor<256xf32> loc(#loc66)
    %72 = tt.addptr %58, %66 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc67)
    %73 = tt.load %72, %62, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc68)
    %74 = arith.addf %71, %73 : tensor<256xf32> loc(#loc69)
    %75 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc70)
    %76 = tt.addptr %75, %66 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc70)
    %77 = tt.load %76, %62, %cst_8 : tensor<256x!tt.ptr<f32>> loc(#loc71)
    %78 = arith.addf %74, %77 : tensor<256xf32> loc(#loc72)
    %79 = arith.select %62, %78, %cst_8 : tensor<256xi1>, tensor<256xf32> loc(#loc73)
    %80 = arith.select %48, %61, %79 : tensor<256xi1>, tensor<256xf32> loc(#loc88)
    %81 = arith.select %35, %45, %80 : tensor<256xi1>, tensor<256xf32> loc(#loc89)
    %82 = arith.select %24, %32, %81 : tensor<256xi1>, tensor<256xf32> loc(#loc78)
    %83 = arith.select %14, %21, %82 : tensor<256xi1>, tensor<256xf32> loc(#loc79)
    %84 = arith.addf %12, %83 : tensor<256xf32> loc(#loc80)
    %85 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc81)
    %86 = tt.addptr %85, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc81)
    tt.store %86, %84 : tensor<256x!tt.ptr<f32>> loc(#loc82)
    %87 = arith.muli %8, %cst : tensor<256xi32> loc(#loc83)
    %88 = arith.addi %9, %87 : tensor<256xi32> loc(#loc84)
    %89 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc85)
    %90 = tt.addptr %89, %88 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc85)
    tt.store %90, %12 : tensor<256x!tt.ptr<f32>> loc(#loc86)
    tt.return loc(#loc87)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":21:28)
#loc3 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":21:33)
#loc4 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":22:36)
#loc5 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":22:23)
#loc6 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":24:21)
#loc7 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":24:28)
#loc8 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":25:19)
#loc9 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":26:19)
#loc10 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":28:19)
#loc11 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":29:31)
#loc12 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":29:36)
#loc13 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":34:18)
#loc14 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":35:40)
#loc15 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":35:35)
#loc16 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":35:51)
#loc17 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":35:46)
#loc18 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":35:30)
#loc19 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":35:56)
#loc20 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":36:19)
#loc21 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":38:18)
#loc22 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":39:18)
#loc23 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:49)
#loc24 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:41)
#loc25 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:36)
#loc26 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:60)
#loc27 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:55)
#loc28 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:31)
#loc29 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":40:65)
#loc30 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":41:20)
#loc31 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":43:19)
#loc32 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":44:20)
#loc33 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":45:49)
#loc34 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":45:41)
#loc35 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":45:36)
#loc36 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":45:55)
#loc37 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":45:31)
#loc38 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":45:65)
#loc39 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":46:31)
#loc40 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":46:65)
#loc41 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":47:20)
#loc42 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":50:20)
#loc43 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":52:19)
#loc44 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":53:20)
#loc45 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":54:49)
#loc46 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":54:41)
#loc47 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":54:36)
#loc48 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":54:55)
#loc49 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":54:31)
#loc50 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":54:65)
#loc51 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":55:31)
#loc52 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":55:65)
#loc53 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":56:20)
#loc54 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":57:31)
#loc55 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":57:65)
#loc56 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":58:20)
#loc57 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":61:20)
#loc58 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":64:49)
#loc59 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":64:41)
#loc60 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":64:36)
#loc61 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":64:55)
#loc62 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":64:31)
#loc63 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":64:65)
#loc64 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":65:31)
#loc65 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":65:65)
#loc66 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":66:20)
#loc67 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":67:31)
#loc68 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":67:65)
#loc69 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":68:20)
#loc70 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":69:31)
#loc71 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":69:65)
#loc72 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":70:20)
#loc73 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":72:35)
#loc74 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":73:35)
#loc75 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":60:35)
#loc76 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":74:35)
#loc77 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":49:35)
#loc78 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":75:34)
#loc79 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":76:33)
#loc80 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":77:20)
#loc81 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":78:28)
#loc82 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":78:40)
#loc83 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":79:36)
#loc84 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":79:30)
#loc85 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":79:25)
#loc86 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":79:48)
#loc87 = loc("inductor_cache/bv/cbvizc6ualxp7uotvl7lehgtulxalltsoynx67jqgpcav7qikdtk.py":79:4)
#loc88 = loc(fused[#loc74, #loc75])
#loc89 = loc(fused[#loc76, #loc77])
