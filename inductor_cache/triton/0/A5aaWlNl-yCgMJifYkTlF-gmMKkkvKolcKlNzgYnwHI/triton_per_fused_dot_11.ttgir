#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":19:0)
#loc1 = loc(unknown)
#loc9 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":34:24)
#loc16 = loc(callsite(#loc1 at #loc9))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_dot_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc2)
    %2 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc3)
    %3 = tt.addptr %2, %1 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc3)
    %4 = tt.load %3 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc4)
    %5 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc5)
    %6 = tt.addptr %5, %1 : tensor<1x128x!tt.ptr<f32>, #blocked>, tensor<1x128xi32, #blocked> loc(#loc5)
    %7 = tt.load %6 : tensor<1x128x!tt.ptr<f32>, #blocked> loc(#loc6)
    %8 = arith.mulf %4, %7 : tensor<1x128xf32, #blocked> loc(#loc7)
    %9 = "tt.reduce"(%8) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc9)), %arg5: f32 loc(callsite(#loc1 at #loc9))):
      %14 = arith.addf %arg4, %arg5 : f32 loc(#loc18)
      tt.reduce.return %14 : f32 loc(#loc15)
    }) : (tensor<1x128xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc15)
    %10 = triton_gpu.convert_layout %9 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc11)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc11)
    %12 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc12)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc13)
    tt.store %13, %11 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc13)
    tt.return loc(#loc14)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":26:34)
#loc3 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":30:30)
#loc4 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":30:35)
#loc5 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":31:30)
#loc6 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":31:35)
#loc7 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":32:18)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc11 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":34:27)
#loc12 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":35:25)
#loc13 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":35:67)
#loc14 = loc("inductor_cache/3h/c3hqusq6dmpolid5iurthj2srmum4p7czkuhvyeuxa5hczechxkk.py":35:4)
#loc15 = loc(callsite(#loc8 at #loc9))
#loc17 = loc(callsite(#loc10 at #loc8))
#loc18 = loc(callsite(#loc17 at #loc9))
