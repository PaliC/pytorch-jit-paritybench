; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11) local_unnamed_addr !dbg !7 {
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %14 = shl i32 %13, 7, !dbg !11
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %16 = and i32 %15, 127, !dbg !12
  %17 = or disjoint i32 %14, %16, !dbg !13
  %18 = icmp slt i32 %17, 768, !dbg !14
  %.frozen = freeze i32 %17, !dbg !15
  %19 = sdiv i32 %.frozen, 16, !dbg !15
  %20 = srem i32 %19, 12, !dbg !16
  %.frozen3 = freeze i32 %17, !dbg !17
  %21 = sdiv i32 %.frozen3, 192, !dbg !17
  %22 = mul i32 %19, 16, !dbg !18
  %.decomposed = sub i32 %.frozen, %22, !dbg !18
  %.frozen1 = freeze i32 %17, !dbg !19
  %23 = sdiv i32 %.frozen1, 4, !dbg !19
  %24 = srem i32 %23, 4, !dbg !20
  %25 = mul i32 %23, 4, !dbg !21
  %.decomposed2 = sub i32 %.frozen1, %25, !dbg !21
  %26 = icmp slt i32 %20, 4, !dbg !22
  %27 = mul i32 %21, 192, !dbg !23
  %srem.decomposed = sub i32 %.frozen3, %27, !dbg !23
  %28 = shl nsw i32 %21, 6, !dbg !24
  %29 = add nsw i32 %28, %srem.decomposed, !dbg !25
  %30 = sext i32 %29 to i64, !dbg !26
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !26
  %32 = and i1 %18, %26, !dbg !27
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %32, i32 0, i1 %32) #1, !dbg !28
  %34 = and i32 %20, -4, !dbg !29
  %35 = icmp eq i32 %34, 4, !dbg !29
  %36 = shl nsw i32 %20, 4, !dbg !30
  %37 = add nsw i32 %36, -64, !dbg !30
  %38 = add nsw i32 %28, %.decomposed, !dbg !31
  %39 = add nsw i32 %38, %37, !dbg !32
  %40 = sext i32 %39 to i64, !dbg !33
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !33
  %42 = and i1 %18, %35, !dbg !34
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %42, i32 0, i1 %42) #1, !dbg !35
  %44 = bitcast i32 %43 to float, !dbg !35
  %45 = sext i32 %24 to i64, !dbg !36
  %46 = getelementptr i64, ptr addrspace(1) %2, i64 %45, !dbg !36
  %47 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %46, i1 %42, i1 %42) #1, !dbg !37
  %48 = lshr i64 %47, 61, !dbg !38
  %49 = and i64 %48, 4, !dbg !38
  %50 = add i64 %49, %47, !dbg !38
  %51 = sext i32 %.decomposed2 to i64, !dbg !39
  %52 = getelementptr i64, ptr addrspace(1) %3, i64 %51, !dbg !39
  %53 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %52, i1 %42, i1 %42) #1, !dbg !40
  %54 = lshr i64 %53, 61, !dbg !41
  %55 = and i64 %54, 4, !dbg !41
  %56 = shl i64 %50, 2, !dbg !42
  %57 = sext i32 %37 to i64, !dbg !43
  %58 = sext i32 %28 to i64, !dbg !44
  %59 = getelementptr float, ptr addrspace(1) %4, i64 %53, !dbg !45
  %60 = getelementptr float, ptr addrspace(1) %59, i64 %55, !dbg !45
  %61 = getelementptr float, ptr addrspace(1) %60, i64 %56, !dbg !45
  %62 = getelementptr float, ptr addrspace(1) %61, i64 %57, !dbg !45
  %63 = getelementptr float, ptr addrspace(1) %62, i64 %58, !dbg !45
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %42, i32 0, i1 %42) #1, !dbg !46
  %65 = bitcast i32 %64 to float, !dbg !46
  %66 = getelementptr i64, ptr addrspace(1) %5, i64 %51, !dbg !47
  %67 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %66, i1 %42, i1 %42) #1, !dbg !48
  %68 = lshr i64 %67, 61, !dbg !49
  %69 = and i64 %68, 4, !dbg !49
  %70 = getelementptr float, ptr addrspace(1) %4, i64 %67, !dbg !50
  %71 = getelementptr float, ptr addrspace(1) %70, i64 %69, !dbg !50
  %72 = getelementptr float, ptr addrspace(1) %71, i64 %56, !dbg !50
  %73 = getelementptr float, ptr addrspace(1) %72, i64 %57, !dbg !50
  %74 = getelementptr float, ptr addrspace(1) %73, i64 %58, !dbg !50
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %42, i32 0, i1 %42) #1, !dbg !51
  %76 = bitcast i32 %75 to float, !dbg !51
  %77 = fsub float %76, %65, !dbg !52
  %78 = getelementptr float, ptr addrspace(1) %6, i64 %51, !dbg !53
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %42, i32 0, i1 %42) #1, !dbg !54
  %80 = bitcast i32 %79 to float, !dbg !54
  %81 = fmul float %77, %80, !dbg !55
  %82 = fadd float %81, %65, !dbg !56
  %83 = fsub float %82, %44, !dbg !57
  %84 = getelementptr float, ptr addrspace(1) %7, i64 %45, !dbg !58
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %42, i32 0, i1 %42) #1, !dbg !59
  %86 = bitcast i32 %85 to float, !dbg !59
  %87 = fmul float %83, %86, !dbg !60
  %88 = fadd float %87, %44, !dbg !61
  %89 = icmp sgt i32 %20, 7, !dbg !62
  %90 = add nsw i32 %36, -128, !dbg !63
  %91 = add nsw i32 %38, %90, !dbg !64
  %92 = sext i32 %91 to i64, !dbg !65
  %93 = getelementptr float, ptr addrspace(1) %8, i64 %92, !dbg !65
  %94 = and i1 %18, %89, !dbg !66
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %93, i1 %94, i32 0, i1 %94) #1, !dbg !67
  %96 = bitcast i32 %95 to float, !dbg !67
  %97 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %46, i1 %94, i1 %94) #1, !dbg !68
  %98 = lshr i64 %97, 61, !dbg !69
  %99 = and i64 %98, 4, !dbg !69
  %100 = add i64 %99, %97, !dbg !69
  %101 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %52, i1 %94, i1 %94) #1, !dbg !70
  %102 = lshr i64 %101, 61, !dbg !71
  %103 = and i64 %102, 4, !dbg !71
  %104 = shl i64 %100, 2, !dbg !72
  %105 = sext i32 %90 to i64, !dbg !73
  %106 = getelementptr float, ptr addrspace(1) %9, i64 %101, !dbg !74
  %107 = getelementptr float, ptr addrspace(1) %106, i64 %103, !dbg !74
  %108 = getelementptr float, ptr addrspace(1) %107, i64 %104, !dbg !74
  %109 = getelementptr float, ptr addrspace(1) %108, i64 %105, !dbg !74
  %110 = getelementptr float, ptr addrspace(1) %109, i64 %58, !dbg !74
  %111 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %110, i1 %94, i32 0, i1 %94) #1, !dbg !75
  %112 = bitcast i32 %111 to float, !dbg !75
  %113 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %66, i1 %94, i1 %94) #1, !dbg !76
  %114 = lshr i64 %113, 61, !dbg !77
  %115 = and i64 %114, 4, !dbg !77
  %116 = getelementptr float, ptr addrspace(1) %9, i64 %113, !dbg !78
  %117 = getelementptr float, ptr addrspace(1) %116, i64 %115, !dbg !78
  %118 = getelementptr float, ptr addrspace(1) %117, i64 %104, !dbg !78
  %119 = getelementptr float, ptr addrspace(1) %118, i64 %105, !dbg !78
  %120 = getelementptr float, ptr addrspace(1) %119, i64 %58, !dbg !78
  %121 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %120, i1 %94, i32 0, i1 %94) #1, !dbg !79
  %122 = bitcast i32 %121 to float, !dbg !79
  %123 = fsub float %122, %112, !dbg !80
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %94, i32 0, i1 %94) #1, !dbg !81
  %125 = bitcast i32 %124 to float, !dbg !81
  %126 = fmul float %123, %125, !dbg !82
  %127 = fadd float %126, %112, !dbg !83
  %128 = fsub float %127, %96, !dbg !84
  %129 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %94, i32 0, i1 %94) #1, !dbg !85
  %130 = bitcast i32 %129 to float, !dbg !85
  %131 = fmul float %128, %130, !dbg !86
  %132 = fadd float %131, %96, !dbg !87
  %133 = select i1 %89, float %132, float 0.000000e+00, !dbg !88
  %134 = select i1 %35, float %88, float %133, !dbg !89
  %135 = sext i32 %17 to i64, !dbg !90
  %136 = getelementptr float, ptr addrspace(1) %10, i64 %135, !dbg !90
  %137 = bitcast float %134 to i32, !dbg !91
  %138 = select i1 %26, i32 %33, i32 %137, !dbg !92
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %138, ptr addrspace(1) %136, i1 %18) #1, !dbg !91
  ret void, !dbg !93
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqiifpxntxbkjx3mousb4ro32ke25gqyt5hfys3cmvmdmidfik4c.py", directory: "inductor_cache/qi")
!4 = !{ptr @triton_poi_fused_cat_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_6", linkageName: "triton_poi_fused_cat_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 27, column: 26, scope: !7)
!21 = !DILocation(line: 28, column: 19, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 35, scope: !7)
!24 = !DILocation(line: 35, column: 48, scope: !7)
!25 = !DILocation(line: 35, column: 45, scope: !7)
!26 = !DILocation(line: 35, column: 30, scope: !7)
!27 = !DILocation(line: 35, column: 60, scope: !7)
!28 = !DILocation(line: 35, column: 53, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 40, scope: !7)
!31 = !DILocation(line: 40, column: 36, scope: !7)
!32 = !DILocation(line: 40, column: 53, scope: !7)
!33 = !DILocation(line: 40, column: 31, scope: !7)
!34 = !DILocation(line: 40, column: 68, scope: !7)
!35 = !DILocation(line: 40, column: 61, scope: !7)
!36 = !DILocation(line: 41, column: 31, scope: !7)
!37 = !DILocation(line: 41, column: 36, scope: !7)
!38 = !DILocation(line: 45, column: 35, scope: !7)
!39 = !DILocation(line: 46, column: 31, scope: !7)
!40 = !DILocation(line: 46, column: 36, scope: !7)
!41 = !DILocation(line: 49, column: 35, scope: !7)
!42 = !DILocation(line: 50, column: 41, scope: !7)
!43 = !DILocation(line: 50, column: 49, scope: !7)
!44 = !DILocation(line: 50, column: 66, scope: !7)
!45 = !DILocation(line: 50, column: 31, scope: !7)
!46 = !DILocation(line: 50, column: 74, scope: !7)
!47 = !DILocation(line: 51, column: 31, scope: !7)
!48 = !DILocation(line: 51, column: 36, scope: !7)
!49 = !DILocation(line: 54, column: 35, scope: !7)
!50 = !DILocation(line: 55, column: 31, scope: !7)
!51 = !DILocation(line: 55, column: 74, scope: !7)
!52 = !DILocation(line: 56, column: 20, scope: !7)
!53 = !DILocation(line: 57, column: 31, scope: !7)
!54 = !DILocation(line: 57, column: 36, scope: !7)
!55 = !DILocation(line: 58, column: 20, scope: !7)
!56 = !DILocation(line: 59, column: 20, scope: !7)
!57 = !DILocation(line: 60, column: 20, scope: !7)
!58 = !DILocation(line: 61, column: 31, scope: !7)
!59 = !DILocation(line: 61, column: 36, scope: !7)
!60 = !DILocation(line: 62, column: 20, scope: !7)
!61 = !DILocation(line: 63, column: 20, scope: !7)
!62 = !DILocation(line: 66, column: 20, scope: !7)
!63 = !DILocation(line: 69, column: 40, scope: !7)
!64 = !DILocation(line: 69, column: 53, scope: !7)
!65 = !DILocation(line: 69, column: 31, scope: !7)
!66 = !DILocation(line: 69, column: 69, scope: !7)
!67 = !DILocation(line: 69, column: 61, scope: !7)
!68 = !DILocation(line: 70, column: 36, scope: !7)
!69 = !DILocation(line: 74, column: 35, scope: !7)
!70 = !DILocation(line: 75, column: 36, scope: !7)
!71 = !DILocation(line: 78, column: 35, scope: !7)
!72 = !DILocation(line: 79, column: 41, scope: !7)
!73 = !DILocation(line: 79, column: 49, scope: !7)
!74 = !DILocation(line: 79, column: 31, scope: !7)
!75 = !DILocation(line: 79, column: 74, scope: !7)
!76 = !DILocation(line: 80, column: 36, scope: !7)
!77 = !DILocation(line: 83, column: 35, scope: !7)
!78 = !DILocation(line: 84, column: 31, scope: !7)
!79 = !DILocation(line: 84, column: 74, scope: !7)
!80 = !DILocation(line: 85, column: 20, scope: !7)
!81 = !DILocation(line: 86, column: 36, scope: !7)
!82 = !DILocation(line: 87, column: 20, scope: !7)
!83 = !DILocation(line: 88, column: 20, scope: !7)
!84 = !DILocation(line: 89, column: 20, scope: !7)
!85 = !DILocation(line: 90, column: 36, scope: !7)
!86 = !DILocation(line: 91, column: 20, scope: !7)
!87 = !DILocation(line: 92, column: 20, scope: !7)
!88 = !DILocation(line: 94, column: 35, scope: !7)
!89 = !DILocation(line: 0, scope: !7)
!90 = !DILocation(line: 97, column: 25, scope: !7)
!91 = !DILocation(line: 97, column: 37, scope: !7)
!92 = !DILocation(line: 96, column: 33, scope: !7)
!93 = !DILocation(line: 97, column: 4, scope: !7)
