#loc = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0)
module {
  tt.func public @triton_poi_fused_clone_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0), %arg5: i32 loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<1x32xi32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999997E-7> : tensor<1x32xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4.000000e+00> : tensor<1x32xf32> loc(#loc1)
    %cst_2 = arith.constant dense<48> : tensor<1x32xi32> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<1x32xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<4x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x32xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<4x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<1x32xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x32xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x32xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<1x32xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c4_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<4x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<4x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_6 : tensor<4x1xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_5 : tensor<1x32xi32> loc(#loc14)
    %15 = arith.divsi %5, %cst_5 : tensor<1x32xi32> loc(#loc15)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x1x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.addptr %16, %12 : tensor<4x1x!tt.ptr<f32>>, tensor<4x1xi32> loc(#loc16)
    %18 = tt.load %17, %13 evictionPolicy = evict_last : tensor<4x1x!tt.ptr<f32>> loc(#loc17)
    %19 = arith.muli %12, %cst_4 : tensor<4x1xi32> loc(#loc18)
    %20 = tt.broadcast %14 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc19)
    %21 = tt.broadcast %19 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc19)
    %22 = arith.addi %20, %21 : tensor<4x32xi32> loc(#loc19)
    %23 = arith.muli %15, %cst_7 : tensor<1x32xi32> loc(#loc20)
    %24 = tt.broadcast %23 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc21)
    %25 = arith.addi %22, %24 : tensor<4x32xi32> loc(#loc21)
    %26 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc22)
    %27 = tt.addptr %26, %25 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc22)
    %28 = tt.broadcast %13 : tensor<4x1xi1> -> tensor<4x32xi1> loc(#loc23)
    %29 = tt.broadcast %6 : tensor<1x32xi1> -> tensor<4x32xi1> loc(#loc23)
    %30 = arith.andi %28, %29 : tensor<4x32xi1> loc(#loc23)
    %31 = tt.load %27, %30 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc24)
    %32 = arith.addi %14, %23 : tensor<1x32xi32> loc(#loc25)
    %33 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc26)
    %34 = tt.addptr %33, %32 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc26)
    %35 = tt.load %34, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc27)
    %36 = arith.addi %14, %cst_5 : tensor<1x32xi32> loc(#loc28)
    %37 = arith.addi %36, %23 : tensor<1x32xi32> loc(#loc29)
    %38 = tt.addptr %33, %37 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc30)
    %39 = tt.load %38, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc31)
    %40 = arith.addi %14, %cst_3 : tensor<1x32xi32> loc(#loc32)
    %41 = arith.addi %40, %23 : tensor<1x32xi32> loc(#loc33)
    %42 = tt.addptr %33, %41 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc34)
    %43 = tt.load %42, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc35)
    %44 = arith.addi %14, %cst_2 : tensor<1x32xi32> loc(#loc36)
    %45 = arith.addi %44, %23 : tensor<1x32xi32> loc(#loc37)
    %46 = tt.addptr %33, %45 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc38)
    %47 = tt.load %46, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc39)
    %48 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x1x!tt.ptr<f32>> loc(#loc40)
    %49 = tt.addptr %48, %12 : tensor<4x1x!tt.ptr<f32>>, tensor<4x1xi32> loc(#loc40)
    %50 = tt.load %49, %13 evictionPolicy = evict_last : tensor<4x1x!tt.ptr<f32>> loc(#loc41)
    %51 = arith.mulf %35, %35 : tensor<1x32xf32> loc(#loc42)
    %52 = arith.mulf %39, %39 : tensor<1x32xf32> loc(#loc43)
    %53 = arith.addf %51, %52 : tensor<1x32xf32> loc(#loc44)
    %54 = arith.mulf %43, %43 : tensor<1x32xf32> loc(#loc45)
    %55 = arith.addf %53, %54 : tensor<1x32xf32> loc(#loc46)
    %56 = arith.mulf %47, %47 : tensor<1x32xf32> loc(#loc47)
    %57 = arith.addf %55, %56 : tensor<1x32xf32> loc(#loc48)
    %58 = arith.divf %57, %cst_1 : tensor<1x32xf32> loc(#loc49)
    %59 = arith.addf %58, %cst_0 : tensor<1x32xf32> loc(#loc50)
    %60 = tt.extern_elementwise %59 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x32xf32>) -> tensor<1x32xf32> loc(#loc51)
    %61 = tt.broadcast %60 : tensor<1x32xf32> -> tensor<4x32xf32> loc(#loc52)
    %62 = arith.divf %31, %61 : tensor<4x32xf32> loc(#loc52)
    %63 = tt.broadcast %18 : tensor<4x1xf32> -> tensor<4x32xf32> loc(#loc53)
    %64 = arith.mulf %63, %62 : tensor<4x32xf32> loc(#loc53)
    %65 = tt.broadcast %50 : tensor<4x1xf32> -> tensor<4x32xf32> loc(#loc54)
    %66 = arith.addf %64, %65 : tensor<4x32xf32> loc(#loc54)
    %67 = arith.muli %5, %cst : tensor<1x32xi32> loc(#loc55)
    %68 = tt.broadcast %12 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc56)
    %69 = tt.broadcast %67 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc56)
    %70 = arith.addi %68, %69 : tensor<4x32xi32> loc(#loc56)
    %71 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc57)
    %72 = tt.addptr %71, %70 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc57)
    tt.store %72, %66, %30 : tensor<4x32x!tt.ptr<f32>> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":22:28)
#loc3 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":22:33)
#loc4 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":23:36)
#loc5 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":23:44)
#loc6 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":23:23)
#loc7 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":24:21)
#loc8 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":25:28)
#loc9 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":25:33)
#loc10 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":26:36)
#loc11 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":26:44)
#loc12 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":26:23)
#loc13 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":27:21)
#loc14 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":29:19)
#loc15 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":30:19)
#loc16 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":32:30)
#loc17 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":32:35)
#loc18 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:38)
#loc19 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:35)
#loc20 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:46)
#loc21 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:43)
#loc22 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:30)
#loc23 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:59)
#loc24 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":33:51)
#loc25 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":34:35)
#loc26 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":34:30)
#loc27 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":34:43)
#loc28 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":35:35)
#loc29 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":35:40)
#loc30 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":35:30)
#loc31 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":35:48)
#loc32 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":36:35)
#loc33 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":36:40)
#loc34 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":36:30)
#loc35 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":36:48)
#loc36 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":37:36)
#loc37 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":37:41)
#loc38 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":37:31)
#loc39 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":37:49)
#loc40 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":38:31)
#loc41 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":38:36)
#loc42 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":39:18)
#loc43 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":40:18)
#loc44 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":41:18)
#loc45 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":42:18)
#loc46 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":43:18)
#loc47 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":44:20)
#loc48 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":45:19)
#loc49 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":47:20)
#loc50 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":49:20)
#loc51 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":50:27)
#loc52 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":51:19)
#loc53 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":52:19)
#loc54 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":53:20)
#loc55 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":54:32)
#loc56 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":54:30)
#loc57 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":54:25)
#loc58 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":54:44)
#loc59 = loc("inductor_cache/s6/cs6immknniutr3rvplcyinx4i7ba34n3ba5l4pembyglc6zfe7nj.py":54:4)
