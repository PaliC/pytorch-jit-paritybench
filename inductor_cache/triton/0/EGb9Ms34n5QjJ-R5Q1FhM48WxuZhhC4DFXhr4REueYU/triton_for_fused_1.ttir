#loc = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0)
module {
  tt.func public @triton_for_fused_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0), %arg3: !tt.ptr<f32> loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0), %arg4: !tt.ptr<f32> loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0), %arg5: !tt.ptr<f32> loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":16:0)) attributes {noinline = false} {
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %cst = arith.constant dense<3> : tensor<1024xi32> loc(#loc1)
    %cst_0 = arith.constant dense<12> : tensor<1024xi32> loc(#loc1)
    %cst_1 = arith.constant dense<10> : tensor<1024xi32> loc(#loc1)
    %cst_2 = arith.constant dense<40> : tensor<1024xi32> loc(#loc1)
    %cst_3 = arith.constant dense<161> : tensor<1024xi32> loc(#loc1)
    %cst_4 = arith.constant dense<144> : tensor<1024xi32> loc(#loc1)
    %cst_5 = arith.constant dense<576> : tensor<1024xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c1_i32 : i32 loc(#loc3)
    scf.if %1 {
      %2 = arith.muli %0, %c1024_i32 : i32 loc(#loc5)
      %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc6)
      %4 = tt.splat %2 : i32 -> tensor<1024xi32> loc(#loc7)
      %5 = arith.addi %4, %3 : tensor<1024xi32> loc(#loc7)
      %6 = arith.cmpi slt, %5, %cst_5 : tensor<1024xi32> loc(#loc8)
      %7 = arith.remsi %5, %cst_4 : tensor<1024xi32> loc(#loc9)
      %8 = arith.divsi %5, %cst_4 : tensor<1024xi32> loc(#loc10)
      %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc11)
      %10 = tt.addptr %9, %7 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc11)
      %11 = tt.load %10, %6 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc12)
      %12 = arith.muli %8, %cst_3 : tensor<1024xi32> loc(#loc13)
      %13 = arith.addi %7, %12 : tensor<1024xi32> loc(#loc14)
      %14 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc15)
      %15 = tt.addptr %14, %13 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc15)
      tt.store %15, %11, %6 : tensor<1024x!tt.ptr<f32>> loc(#loc16)
    } else {
      %2 = arith.cmpi slt, %0, %c2_i32 : i32 loc(#loc17)
      scf.if %2 {
        %3 = arith.subi %0, %c1_i32 : i32 loc(#loc19)
        %4 = arith.muli %3, %c1024_i32 : i32 loc(#loc20)
        %5 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc21)
        %6 = tt.splat %4 : i32 -> tensor<1024xi32> loc(#loc22)
        %7 = arith.addi %6, %5 : tensor<1024xi32> loc(#loc22)
        %8 = arith.cmpi slt, %7, %cst_2 : tensor<1024xi32> loc(#loc23)
        %9 = arith.remsi %7, %cst_1 : tensor<1024xi32> loc(#loc24)
        %10 = arith.divsi %7, %cst_1 : tensor<1024xi32> loc(#loc25)
        %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc26)
        %12 = tt.addptr %11, %9 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc26)
        %13 = tt.load %12, %8 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc27)
        %14 = arith.muli %10, %cst_3 : tensor<1024xi32> loc(#loc28)
        %15 = arith.addi %9, %14 : tensor<1024xi32> loc(#loc29)
        %16 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc30)
        %17 = tt.addptr %16, %15 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc30)
        tt.store %17, %13, %8 : tensor<1024x!tt.ptr<f32>> loc(#loc31)
      } else {
        %3 = arith.cmpi slt, %0, %c3_i32 : i32 loc(#loc32)
        scf.if %3 {
          %4 = arith.subi %0, %c2_i32 : i32 loc(#loc34)
          %5 = arith.muli %4, %c1024_i32 : i32 loc(#loc35)
          %6 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc36)
          %7 = tt.splat %5 : i32 -> tensor<1024xi32> loc(#loc37)
          %8 = arith.addi %7, %6 : tensor<1024xi32> loc(#loc37)
          %9 = arith.cmpi slt, %8, %cst_0 : tensor<1024xi32> loc(#loc38)
          %10 = arith.remsi %8, %cst : tensor<1024xi32> loc(#loc39)
          %11 = arith.divsi %8, %cst : tensor<1024xi32> loc(#loc40)
          %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc41)
          %13 = tt.addptr %12, %10 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc41)
          %14 = tt.load %13, %9 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc42)
          %15 = arith.muli %11, %cst_3 : tensor<1024xi32> loc(#loc43)
          %16 = arith.addi %10, %15 : tensor<1024xi32> loc(#loc44)
          %17 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc45)
          %18 = tt.addptr %17, %16 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc45)
          tt.store %18, %14, %9 : tensor<1024x!tt.ptr<f32>> loc(#loc46)
        } loc(#loc33)
      } loc(#loc18)
    } loc(#loc4)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":17:24)
#loc3 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":22:13)
#loc4 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":22:7)
#loc5 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":26:31)
#loc6 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":27:40)
#loc7 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":27:27)
#loc8 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":28:25)
#loc9 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":29:23)
#loc10 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":30:23)
#loc11 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":31:34)
#loc12 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":31:39)
#loc13 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":32:38)
#loc14 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":32:34)
#loc15 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":32:29)
#loc16 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":32:49)
#loc17 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":33:15)
#loc18 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":33:9)
#loc19 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":34:27)
#loc20 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":37:31)
#loc21 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":38:40)
#loc22 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":38:27)
#loc23 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":39:25)
#loc24 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":40:23)
#loc25 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":41:23)
#loc26 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":42:34)
#loc27 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":42:39)
#loc28 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":43:38)
#loc29 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":43:34)
#loc30 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":43:29)
#loc31 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":43:49)
#loc32 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":44:15)
#loc33 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":44:9)
#loc34 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":45:27)
#loc35 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":48:31)
#loc36 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":49:40)
#loc37 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":49:27)
#loc38 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":50:25)
#loc39 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":51:23)
#loc40 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":52:23)
#loc41 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":53:34)
#loc42 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":53:39)
#loc43 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":54:38)
#loc44 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":54:34)
#loc45 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":54:29)
#loc46 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":54:49)
#loc47 = loc("inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py":22:4)
