//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_for_fused_1      // -- Begin function triton_for_fused_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_for_fused_1
.visible .entry triton_for_fused_1(
	.param .u64 .ptr .global .align 1 triton_for_fused_1_param_0,
	.param .u64 .ptr .global .align 1 triton_for_fused_1_param_1,
	.param .u64 .ptr .global .align 1 triton_for_fused_1_param_2,
	.param .u64 .ptr .global .align 1 triton_for_fused_1_param_3,
	.param .u64 .ptr .global .align 1 triton_for_fused_1_param_4,
	.param .u64 .ptr .global .align 1 triton_for_fused_1_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b16 	%rs<52>;
	.reg .b32 	%r<121>;
	.reg .b64 	%rd<65>;
$L__func_begin0:

// %bb.0:
	.loc	1 17 24                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:17:24
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 22 13                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:22:13
	setp.gt.s32 	%p1, %r2, 0;
	.loc	1 22 7                          // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:22:7
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 33 15                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:33:15
	setp.ne.s32 	%p2, %r2, 1;
	.loc	1 33 9                          // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:33:9
	@%p2 bra 	$L__BB0_4;
// %bb.3:
	.loc	1 0 9                           // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:0:9
	ld.param.u64 	%rd5, [triton_for_fused_1_param_4];
	ld.param.u64 	%rd2, [triton_for_fused_1_param_1];
	.loc	1 38 40                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:38:40
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r45, %r44, 2;
	and.b32  	%r46, %r45, 1020;
	and.b32  	%r47, %r44, 255;
	.loc	1 39 25                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:39:25
	setp.lt.u32 	%p13, %r46, 40;
	setp.lt.u32 	%p16, %r47, 40;
	.loc	1 40 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:40:23
	cvt.u16.u32 	%rs30, %r46;
	mul.hi.u16 	%rs31, %rs30, 6554;
	mul.lo.s16 	%rs32, %rs31, 10;
	sub.s16 	%rs33, %rs30, %rs32;
	or.b16  	%rs34, %rs30, 2;
	mul.hi.u16 	%rs35, %rs34, 6554;
	mul.lo.s16 	%rs36, %rs35, 10;
	sub.s16 	%rs37, %rs34, %rs36;
	.loc	1 41 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:41:23
	cvt.u16.u32 	%rs38, %r44;
	and.b16  	%rs39, %rs38, 255;
	mul.lo.s16 	%rs40, %rs39, 205;
	shr.u16 	%rs41, %rs40, 11;
	cvt.u32.u16 	%r48, %rs41;
	cvt.u16.u32 	%rs42, %r47;
	or.b16  	%rs43, %rs42, 256;
	mul.hi.u16 	%rs44, %rs43, 6554;
	or.b16  	%rs45, %rs42, 512;
	mul.hi.u16 	%rs46, %rs45, 6554;
	or.b16  	%rs47, %rs42, 768;
	mul.hi.u16 	%rs48, %rs47, 6554;
	.loc	1 42 34                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:42:34
	cvt.u32.u16 	%r49, %rs33;
	mul.wide.u32 	%rd39, %r49, 4;
	add.s64 	%rd33, %rd2, %rd39;
	cvt.u32.u16 	%r50, %rs37;
	mul.wide.u32 	%rd40, %r50, 4;
	add.s64 	%rd34, %rd2, %rd40;
	.loc	1 42 39                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:42:39
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p13 ld.global.L1::evict_last.v2.b32 { %r36, %r37 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p13 ld.global.L1::evict_last.v2.b32 { %r38, %r39 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 43 34                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:43:34
	mad.lo.s32 	%r51, %r48, 151, %r47;
	mul.lo.s16 	%rs49, %rs44, 151;
	mul.lo.s16 	%rs50, %rs46, 151;
	mul.lo.s16 	%rs51, %rs48, 151;
	.loc	1 43 29                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:43:29
	mul.wide.u32 	%rd41, %r51, 4;
	add.s64 	%rd35, %rd5, %rd41;
	cvt.u64.u16 	%rd42, %rs49;
	cvt.u64.u32 	%rd43, %r47;
	add.s64 	%rd44, %rd43, %rd42;
	shl.b64 	%rd45, %rd44, 2;
	add.s64 	%rd46, %rd5, %rd45;
	add.s64 	%rd36, %rd46, 1024;
	cvt.u64.u16 	%rd47, %rs50;
	add.s64 	%rd48, %rd43, %rd47;
	shl.b64 	%rd49, %rd48, 2;
	add.s64 	%rd50, %rd5, %rd49;
	add.s64 	%rd37, %rd50, 2048;
	cvt.u64.u16 	%rd51, %rs51;
	add.s64 	%rd52, %rd43, %rd51;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd54, %rd5, %rd53;
	add.s64 	%rd38, %rd54, 3072;
	.loc	1 43 49                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:43:49
	shl.b32 	%r52, %r46, 2;
	mov.u32 	%r53, global_smem;
	add.s32 	%r35, %r53, %r52;
	mov.pred 	%p15, -1;
	// begin inline asm
	@%p15 st.shared.v4.b32 [ %r35 + 0 ], { %r36, %r37, %r38, %r39 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r54, %r47, 2;
	add.s32 	%r55, %r53, %r54;
	ld.shared.u32 	%r40, [%r55];
	ld.shared.u32 	%r41, [%r55+1024];
	ld.shared.u32 	%r42, [%r55+2048];
	ld.shared.u32 	%r43, [%r55+3072];
	// begin inline asm
	@%p16 st.global.b32 [ %rd35 + 0 ], { %r40 };
	// end inline asm
	mov.pred 	%p17, 0;
	// begin inline asm
	@%p17 st.global.b32 [ %rd36 + 0 ], { %r41 };
	// end inline asm
	// begin inline asm
	@%p17 st.global.b32 [ %rd37 + 0 ], { %r42 };
	// end inline asm
	// begin inline asm
	@%p17 st.global.b32 [ %rd38 + 0 ], { %r43 };
	// end inline asm
	.loc	1 33 9                          // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:33:9
	bra.uni 	$L__BB0_6;
$L__BB0_1:
	.loc	1 0 9                           // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:0:9
	ld.param.u64 	%rd4, [triton_for_fused_1_param_3];
	ld.param.u64 	%rd1, [triton_for_fused_1_param_0];
	.loc	1 26 31                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:26:31
	shl.b32 	%r69, %r2, 10;
	.loc	1 27 40                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:27:40
	mov.u32 	%r70, %tid.x;
	shl.b32 	%r71, %r70, 2;
	and.b32  	%r72, %r71, 1020;
	and.b32  	%r73, %r70, 255;
	.loc	1 27 27                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:27:27
	or.b32  	%r74, %r69, %r72;
	or.b32  	%r75, %r69, %r73;
	or.b32  	%r76, %r75, 256;
	or.b32  	%r77, %r75, 512;
	or.b32  	%r78, %r75, 768;
	.loc	1 28 25                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:28:25
	setp.lt.s32 	%p20, %r74, 576;
	setp.lt.s32 	%p22, %r75, 576;
	setp.lt.s32 	%p23, %r76, 576;
	setp.lt.s32 	%p24, %r77, 576;
	setp.lt.s32 	%p25, %r78, 576;
	.loc	1 29 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:29:23
	mul.hi.s32 	%r79, %r74, 954437177;
	shr.u32 	%r80, %r79, 31;
	shr.s32 	%r81, %r79, 5;
	add.s32 	%r82, %r81, %r80;
	mul.lo.s32 	%r83, %r82, 144;
	sub.s32 	%r84, %r74, %r83;
	.loc	1 30 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:30:23
	mul.hi.s32 	%r86, %r75, 954437177;
	shr.u32 	%r87, %r86, 31;
	shr.s32 	%r88, %r86, 5;
	add.s32 	%r89, %r88, %r87;
	.loc	1 29 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:29:23
	mul.lo.s32 	%r90, %r89, 144;
	sub.s32 	%r91, %r75, %r90;
	.loc	1 30 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:30:23
	mul.hi.s32 	%r93, %r76, 954437177;
	shr.u32 	%r94, %r93, 31;
	shr.s32 	%r95, %r93, 5;
	add.s32 	%r96, %r95, %r94;
	.loc	1 29 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:29:23
	mul.lo.s32 	%r97, %r96, 144;
	sub.s32 	%r98, %r76, %r97;
	.loc	1 30 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:30:23
	mul.hi.s32 	%r100, %r77, 954437177;
	shr.u32 	%r101, %r100, 31;
	shr.s32 	%r102, %r100, 5;
	add.s32 	%r103, %r102, %r101;
	.loc	1 29 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:29:23
	mul.lo.s32 	%r104, %r103, 144;
	sub.s32 	%r105, %r77, %r104;
	.loc	1 30 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:30:23
	mul.hi.s32 	%r107, %r78, 954437177;
	shr.u32 	%r108, %r107, 31;
	shr.s32 	%r109, %r107, 5;
	add.s32 	%r110, %r109, %r108;
	.loc	1 29 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:29:23
	mul.lo.s32 	%r111, %r110, 144;
	sub.s32 	%r112, %r78, %r111;
	.loc	1 31 34                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:31:34
	mul.wide.s32 	%rd60, %r84, 4;
	add.s64 	%rd55, %rd1, %rd60;
	.loc	1 31 39                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:31:39
	// begin inline asm
	mov.u32 %r61, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	@%p20 ld.global.L1::evict_last.v4.b32 { %r61, %r62, %r63, %r64 }, [ %rd55 + 0 ];
	// end inline asm
	.loc	1 32 34                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:32:34
	mad.lo.s32 	%r113, %r89, 161, %r91;
	mad.lo.s32 	%r114, %r96, 161, %r98;
	mad.lo.s32 	%r115, %r103, 161, %r105;
	mad.lo.s32 	%r116, %r110, 161, %r112;
	.loc	1 32 29                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:32:29
	mul.wide.s32 	%rd61, %r113, 4;
	add.s64 	%rd56, %rd4, %rd61;
	mul.wide.s32 	%rd62, %r114, 4;
	add.s64 	%rd57, %rd4, %rd62;
	mul.wide.s32 	%rd63, %r115, 4;
	add.s64 	%rd58, %rd4, %rd63;
	mul.wide.s32 	%rd64, %r116, 4;
	add.s64 	%rd59, %rd4, %rd64;
	.loc	1 32 49                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:32:49
	shl.b32 	%r117, %r72, 2;
	mov.u32 	%r118, global_smem;
	add.s32 	%r60, %r118, %r117;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.v4.b32 [ %r60 + 0 ], { %r61, %r62, %r63, %r64 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r119, %r73, 2;
	add.s32 	%r120, %r118, %r119;
	ld.shared.u32 	%r65, [%r120];
	ld.shared.u32 	%r66, [%r120+1024];
	ld.shared.u32 	%r67, [%r120+2048];
	ld.shared.u32 	%r68, [%r120+3072];
	// begin inline asm
	@%p22 st.global.b32 [ %rd56 + 0 ], { %r65 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.b32 [ %rd57 + 0 ], { %r66 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.b32 [ %rd58 + 0 ], { %r67 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.b32 [ %rd59 + 0 ], { %r68 };
	// end inline asm
	.loc	1 22 7                          // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:22:7
	bra.uni 	$L__BB0_6;
$L__BB0_4:
	.loc	1 44 15                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:44:15
	setp.gt.u32 	%p3, %r2, 2;
	.loc	1 44 9                          // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:44:9
	@%p3 bra 	$L__BB0_6;
// %bb.5:
	.loc	1 0 9                           // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:0:9
	ld.param.u64 	%rd6, [triton_for_fused_1_param_5];
	ld.param.u64 	%rd3, [triton_for_fused_1_param_2];
	.loc	1 49 40                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:49:40
	mov.u32 	%r16, %tid.x;
	shl.b32 	%r17, %r16, 2;
	and.b32  	%r18, %r17, 1020;
	and.b32  	%r19, %r16, 255;
	.loc	1 50 25                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:50:25
	setp.lt.u32 	%p4, %r18, 12;
	setp.lt.u32 	%p9, %r19, 12;
	.loc	1 51 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:51:23
	cvt.u16.u32 	%rs1, %r18;
	mul.hi.u16 	%rs2, %rs1, 21846;
	mul.lo.s16 	%rs3, %rs2, 3;
	sub.s16 	%rs4, %rs1, %rs3;
	or.b16  	%rs5, %rs1, 1;
	mul.hi.u16 	%rs6, %rs5, 21846;
	mul.lo.s16 	%rs7, %rs6, 3;
	sub.s16 	%rs8, %rs5, %rs7;
	or.b16  	%rs9, %rs1, 2;
	mul.hi.u16 	%rs10, %rs9, 21846;
	mul.lo.s16 	%rs11, %rs10, 3;
	sub.s16 	%rs12, %rs9, %rs11;
	or.b16  	%rs13, %rs1, 3;
	mul.hi.u16 	%rs14, %rs13, 21846;
	mul.lo.s16 	%rs15, %rs14, 3;
	sub.s16 	%rs16, %rs13, %rs15;
	.loc	1 52 23                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:52:23
	cvt.u16.u32 	%rs17, %r16;
	and.b16  	%rs18, %rs17, 255;
	mul.lo.s16 	%rs19, %rs18, 171;
	shr.u16 	%rs20, %rs19, 9;
	cvt.u32.u16 	%r20, %rs20;
	cvt.u16.u32 	%rs21, %r19;
	or.b16  	%rs22, %rs21, 256;
	mul.hi.u16 	%rs23, %rs22, 21846;
	or.b16  	%rs24, %rs21, 512;
	mul.hi.u16 	%rs25, %rs24, 21846;
	or.b16  	%rs26, %rs21, 768;
	mul.hi.u16 	%rs27, %rs26, 21846;
	.loc	1 53 34                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:53:34
	cvt.u32.u16 	%r21, %rs4;
	mul.wide.u32 	%rd15, %r21, 4;
	add.s64 	%rd7, %rd3, %rd15;
	cvt.u32.u16 	%r22, %rs8;
	mul.wide.u32 	%rd16, %r22, 4;
	add.s64 	%rd8, %rd3, %rd16;
	cvt.u32.u16 	%r23, %rs12;
	mul.wide.u32 	%rd17, %r23, 4;
	add.s64 	%rd9, %rd3, %rd17;
	cvt.u32.u16 	%r24, %rs16;
	mul.wide.u32 	%rd18, %r24, 4;
	add.s64 	%rd10, %rd3, %rd18;
	.loc	1 53 39                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:53:39
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 54 34                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:54:34
	mad.lo.s32 	%r25, %r20, 158, %r19;
	mul.lo.s16 	%rs28, %rs23, 158;
	mul.lo.s16 	%rs29, %rs25, 158;
	mul.wide.u16 	%r26, %rs27, 158;
	.loc	1 54 29                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:54:29
	mul.wide.u32 	%rd19, %r25, 4;
	add.s64 	%rd11, %rd6, %rd19;
	cvt.u64.u16 	%rd20, %rs28;
	cvt.u64.u32 	%rd21, %r19;
	add.s64 	%rd22, %rd21, %rd20;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd6, %rd23;
	add.s64 	%rd12, %rd24, 1024;
	cvt.u64.u16 	%rd25, %rs29;
	add.s64 	%rd26, %rd21, %rd25;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd6, %rd27;
	add.s64 	%rd13, %rd28, 2048;
	cvt.u64.u32 	%rd29, %r26;
	add.s64 	%rd30, %rd29, %rd21;
	shl.b64 	%rd31, %rd30, 2;
	add.s64 	%rd32, %rd6, %rd31;
	add.s64 	%rd14, %rd32, 3072;
	.loc	1 54 49                         // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:54:49
	shl.b32 	%r27, %r18, 2;
	mov.u32 	%r28, global_smem;
	add.s32 	%r7, %r28, %r27;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.v4.b32 [ %r7 + 0 ], { %r8, %r9, %r10, %r11 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r29, %r19, 2;
	add.s32 	%r30, %r28, %r29;
	ld.shared.u32 	%r12, [%r30];
	ld.shared.u32 	%r13, [%r30+1024];
	ld.shared.u32 	%r14, [%r30+2048];
	ld.shared.u32 	%r15, [%r30+3072];
	// begin inline asm
	@%p9 st.global.b32 [ %rd11 + 0 ], { %r12 };
	// end inline asm
	mov.pred 	%p10, 0;
	// begin inline asm
	@%p10 st.global.b32 [ %rd12 + 0 ], { %r13 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.b32 [ %rd13 + 0 ], { %r14 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.b32 [ %rd14 + 0 ], { %r15 };
	// end inline asm
$L__BB0_6:
	.loc	1 22 4                          // cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py:22:4
	ret;
$L__tmp0:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/z4/cz4trrbegroqd3vpmedymrjkhdol3kaarqcend6fugyr4bijgjne.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 52
.b8 116
.b8 114
.b8 114
.b8 98
.b8 101
.b8 103
.b8 114
.b8 111
.b8 113
.b8 100
.b8 51
.b8 118
.b8 112
.b8 109
.b8 101
.b8 100
.b8 121
.b8 109
.b8 114
.b8 106
.b8 107
.b8 104
.b8 100
.b8 111
.b8 108
.b8 51
.b8 107
.b8 97
.b8 97
.b8 114
.b8 113
.b8 99
.b8 101
.b8 110
.b8 100
.b8 54
.b8 102
.b8 117
.b8 103
.b8 121
.b8 114
.b8 52
.b8 98
.b8 105
.b8 106
.b8 103
.b8 106
.b8 110
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
