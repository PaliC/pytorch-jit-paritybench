#loc = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":19:0)
module {
  tt.func public @triton_poi_fused_add_convolution_div_eq_masked_fill_ones_like_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<16xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_1 : tensor<16xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc8)
    %9 = tt.load %8, %5 : tensor<16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc10)
    %12 = tt.load %11, %5 : tensor<16x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %6 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc12)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.cmpf oeq, %9, %cst_0 : tensor<16xf32> loc(#loc14)
    %17 = arith.addf %12, %15 : tensor<16xf32> loc(#loc15)
    %18 = arith.subf %17, %15 : tensor<16xf32> loc(#loc16)
    %19 = arith.select %16, %cst, %9 : tensor<16xi1>, tensor<16xf32> loc(#loc17)
    %20 = arith.divf %18, %19 : tensor<16xf32> loc(#loc18)
    %21 = arith.addf %20, %15 : tensor<16xf32> loc(#loc19)
    %22 = arith.select %16, %cst_0, %21 : tensor<16xi1>, tensor<16xf32> loc(#loc20)
    %23 = arith.select %16, %cst_0, %cst : tensor<16xi1>, tensor<16xf32> loc(#loc21)
    tt.store %11, %22, %5 : tensor<16x!tt.ptr<f32>> loc(#loc22)
    %24 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc23)
    %25 = tt.addptr %24, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc23)
    tt.store %25, %23, %5 : tensor<16x!tt.ptr<f32>> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":21:28)
#loc3 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":21:33)
#loc4 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":22:36)
#loc5 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":22:23)
#loc6 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":23:21)
#loc7 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":25:19)
#loc8 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":26:30)
#loc9 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":26:35)
#loc10 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":27:34)
#loc11 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":27:39)
#loc12 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":28:30)
#loc13 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":28:35)
#loc14 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":30:19)
#loc15 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":31:18)
#loc16 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":32:18)
#loc17 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":34:32)
#loc18 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":35:18)
#loc19 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":36:19)
#loc20 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":37:33)
#loc21 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":38:33)
#loc22 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":39:40)
#loc23 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":40:25)
#loc24 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":40:37)
#loc25 = loc("inductor_cache/r3/cr36u2k3zwthv5hrw7sve7mrgyp63od75cpxawu4vucioimen7ag.py":40:4)
