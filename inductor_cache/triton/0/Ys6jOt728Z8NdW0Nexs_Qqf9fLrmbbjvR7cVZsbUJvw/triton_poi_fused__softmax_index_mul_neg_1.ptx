//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__softmax_index_mul_neg_1 // -- Begin function triton_poi_fused__softmax_index_mul_neg_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 109, 117, 47, 99, 109, 117, 51, 120, 114, 121, 52, 104, 117, 98, 105, 99, 54, 114, 101, 120, 100, 52, 108, 100, 53, 106, 118, 97, 120, 113, 122, 113, 120, 55, 122, 55, 100, 103, 99, 105, 108, 107, 100, 110, 114, 122, 109, 116, 99, 113, 110, 52, 50, 119, 109, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
                                        // @triton_poi_fused__softmax_index_mul_neg_1
.visible .entry triton_poi_fused__softmax_index_mul_neg_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_index_mul_neg_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_index_mul_neg_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_index_mul_neg_1_param_2,
	.param .u32 triton_poi_fused__softmax_index_mul_neg_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<38>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<30>;
	.loc	1 19 0                          // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused__softmax_index_mul_neg_1_param_0];
$L__tmp0:
	.loc	1 21 28                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:21:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:21:33
	shl.b32 	%r5, %r4, 7;
	.loc	1 22 36                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:22:36
	mov.u32 	%r6, %tid.x;
	and.b32  	%r7, %r6, 127;
	.loc	1 22 23                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:22:23
	or.b32  	%r1, %r5, %r7;
	.loc	1 23 21                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:23:21
	setp.gt.s32 	%p2, %r1, 255;
	setp.lt.s32 	%p1, %r1, 256;
	.loc	1 24 21                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:24:21
	shr.s32 	%r8, %r1, 31;
	shr.u32 	%r9, %r8, 28;
	add.s32 	%r10, %r1, %r9;
	shr.s32 	%r3, %r10, 4;
	.loc	1 24 27                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:24:27
	shr.u32 	%r11, %r3, 30;
	add.s32 	%r12, %r3, %r11;
	and.b32  	%r13, %r12, -4;
	sub.s32 	%r14, %r3, %r13;
	.loc	1 29 30                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:29:30
	mul.wide.s32 	%rd7, %r14, 8;
	add.s64 	%rd5, %rd6, %rd7;
	.loc	1 29 35                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:29:35
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 32                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:33:32
	shr.u64 	%rd8, %rd4, 61;
	and.b64  	%rd9, %rd8, 4;
	add.s64 	%rd1, %rd9, %rd4;
	.loc	1 34 37                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:34:37
	setp.lt.u64 	%p3, %rd1, 4;
	.loc	1 34 60                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:34:60
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:0:60
	ld.param.u64 	%rd3, [triton_poi_fused__softmax_index_mul_neg_1_param_2];
	ld.param.u64 	%rd2, [triton_poi_fused__softmax_index_mul_neg_1_param_1];
	.loc	1 27 21                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:27:21
	shr.u32 	%r25, %r8, 30;
	add.s32 	%r26, %r1, %r25;
	shr.s32 	%r27, %r26, 2;
	.loc	1 27 26                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:27:26
	shr.u32 	%r28, %r27, 30;
	add.s32 	%r29, %r27, %r28;
	and.b32  	%r30, %r29, 1073741820;
	sub.s32 	%r31, %r27, %r30;
	.loc	1 26 19                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:26:19
	shl.b32 	%r32, %r3, 4;
	sub.s32 	%r33, %r1, %r32;
	.loc	1 25 19                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:25:19
	shr.u32 	%r34, %r8, 26;
	add.s32 	%r35, %r1, %r34;
	.loc	1 34 60                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:34:60
	bar.sync 	0;
	.loc	1 35 48                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:35:48
	and.b32  	%r36, %r35, -64;
	.loc	1 35 30                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:35:30
	shl.b64 	%rd16, %rd1, 6;
	add.s64 	%rd17, %rd2, %rd16;
	mul.wide.s32 	%rd18, %r33, 4;
	add.s64 	%rd19, %rd17, %rd18;
	mul.wide.s32 	%rd20, %r36, 4;
	add.s64 	%rd10, %rd19, %rd20;
	.loc	1 35 53                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:35:53
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.b32 { %r21 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 32                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:36:32
	shl.b32 	%r37, %r31, 2;
	.loc	1 36 30                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:36:30
	mul.wide.s32 	%rd21, %r37, 4;
	add.s64 	%rd22, %rd17, %rd21;
	add.s64 	%rd11, %rd22, %rd20;
	.loc	1 36 55                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:36:55
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r16;
	.loc	1 37 30                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:37:30
	add.s64 	%rd12, %rd11, 4;
	.loc	1 37 59                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:37:59
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r17;
	.loc	1 38 18                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:38:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 39 31                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:39:31
	add.s64 	%rd13, %rd11, 8;
	.loc	1 39 60                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:39:60
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r18;
	.loc	1 40 19                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:40:19
	add.f32 	%f5, %f3, %f4;
	.loc	1 41 31                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:41:31
	add.s64 	%rd14, %rd11, 12;
	.loc	1 41 60                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:41:60
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r19;
	.loc	1 42 20                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:42:20
	add.f32 	%f7, %f5, %f6;
	.loc	1 43 19                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:43:19
	mov.b32 	%r22, %f7;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f8, %r20;
	mov.f32 	%f9, 0f00000000;
	.loc	1 44 13                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:44:13
	sub.f32 	%f10, %f9, %f8;
	.loc	1 47 25                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:47:25
	mul.wide.s32 	%rd23, %r1, 4;
	add.s64 	%rd15, %rd3, %rd23;
	.loc	1 47 37                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:47:37
	mov.b32 	%r23, %f10;
	// begin inline asm
	@%p1 st.global.b32 [ %rd15 + 0 ], { %r23 };
	// end inline asm
	.loc	1 47 4                          // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:47:4
	ret;
$L__BB0_1:
	.loc	1 34 60                         // cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py:34:60
	mov.u64 	%rd24, assertMessage_0;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, assertFile_0;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, assertFunc_0;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd25;
	.param .b64 param1;
	st.param.b64 	[param1], %rd27;
	.param .b32 param2;
	st.param.b32 	[param2], 34;
	.param .b64 param3;
	st.param.b64 	[param3], %rd29;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 117
.b8 51
.b8 120
.b8 114
.b8 121
.b8 52
.b8 104
.b8 117
.b8 98
.b8 105
.b8 99
.b8 54
.b8 114
.b8 101
.b8 120
.b8 100
.b8 52
.b8 108
.b8 100
.b8 53
.b8 106
.b8 118
.b8 97
.b8 120
.b8 113
.b8 122
.b8 113
.b8 120
.b8 55
.b8 122
.b8 55
.b8 100
.b8 103
.b8 99
.b8 105
.b8 108
.b8 107
.b8 100
.b8 110
.b8 114
.b8 122
.b8 109
.b8 116
.b8 99
.b8 113
.b8 110
.b8 52
.b8 50
.b8 119
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
