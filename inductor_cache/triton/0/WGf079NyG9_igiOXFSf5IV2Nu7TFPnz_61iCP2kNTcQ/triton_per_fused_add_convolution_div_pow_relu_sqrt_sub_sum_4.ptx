//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4 // -- Begin function triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4
.visible .entry triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_3,
	.param .u32 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_4,
	.param .u32 triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<134>;
	.reg .f32 	%f<141>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd12, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_0];
	ld.param.u64 	%rd13, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_1];
$L__tmp0:
	.loc	1 23 28                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd14, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_2];
	ld.param.u64 	%rd15, [triton_per_fused_add_convolution_div_pow_relu_sqrt_sub_sum_4_param_3];
	.loc	1 24 44                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:24:44
	mov.u32 	%r94, %tid.x;
	.loc	1 26 34                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:26:34
	shl.b32 	%r95, %r94, 2;
	and.b32  	%r96, %r95, 60;
	.loc	1 24 23                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:24:23
	shl.b32 	%r97, %r1, 11;
	and.b32  	%r98, %r95, 960;
	or.b32  	%r99, %r97, %r98;
	.loc	1 31 42                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:42
	or.b32  	%r100, %r99, %r96;
	.loc	1 31 39                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:39
	or.b32  	%r101, %r100, 1024;
	.loc	1 31 34                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:34
	mul.wide.s32 	%rd16, %r100, 4;
	add.s64 	%rd1, %rd12, %rd16;
	mul.wide.s32 	%rd17, %r101, 4;
	add.s64 	%rd2, %rd12, %rd17;
	mov.pred 	%p1, -1;
	.loc	1 31 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:31:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:32:30
	mul.wide.u32 	%rd18, %r96, 4;
	add.s64 	%rd3, %rd14, %rd18;
	.loc	1 32 35                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:32:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 34                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:33:34
	add.s64 	%rd4, %rd13, %rd16;
	add.s64 	%rd5, %rd13, %rd17;
	.loc	1 33 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:33:47
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r21;
	mov.b32 	%f2, %r20;
	mov.b32 	%f3, %r19;
	mov.b32 	%f4, %r18;
	.loc	1 32 35                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:32:35
	mov.b32 	%f5, %r13;
	mov.b32 	%f6, %r12;
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r10;
	mov.b32 	%f9, %r17;
	mov.b32 	%f10, %r16;
	mov.b32 	%f11, %r15;
	mov.b32 	%f12, %r14;
	mov.b32 	%f13, %r9;
	mov.b32 	%f14, %r8;
	mov.b32 	%f15, %r7;
	mov.b32 	%f16, %r6;
	mov.b32 	%f17, %r5;
	mov.b32 	%f18, %r4;
	mov.b32 	%f19, %r3;
	mov.b32 	%f20, %r2;
	.loc	1 37 18                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:37:18
	add.f32 	%f21, %f8, %f20;
	add.f32 	%f22, %f7, %f19;
	add.f32 	%f23, %f6, %f18;
	add.f32 	%f24, %f5, %f17;
	add.f32 	%f25, %f8, %f16;
	add.f32 	%f26, %f7, %f15;
	add.f32 	%f27, %f6, %f14;
	add.f32 	%f28, %f5, %f13;
	add.f32 	%f29, %f8, %f12;
	add.f32 	%f30, %f7, %f11;
	add.f32 	%f31, %f6, %f10;
	add.f32 	%f32, %f5, %f9;
	add.f32 	%f33, %f4, %f8;
	add.f32 	%f34, %f3, %f7;
	add.f32 	%f35, %f2, %f6;
	add.f32 	%f36, %f1, %f5;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p12, %f36, 0f00000000;
	setp.lt.f32 	%p13, %f35, 0f00000000;
	setp.lt.f32 	%p14, %f34, 0f00000000;
	setp.lt.f32 	%p15, %f33, 0f00000000;
	setp.lt.f32 	%p16, %f32, 0f00000000;
	setp.lt.f32 	%p17, %f31, 0f00000000;
	setp.lt.f32 	%p18, %f30, 0f00000000;
	setp.lt.f32 	%p19, %f29, 0f00000000;
	setp.lt.f32 	%p20, %f28, 0f00000000;
	setp.lt.f32 	%p21, %f27, 0f00000000;
	setp.lt.f32 	%p22, %f26, 0f00000000;
	setp.lt.f32 	%p23, %f25, 0f00000000;
	setp.lt.f32 	%p24, %f24, 0f00000000;
	setp.lt.f32 	%p25, %f23, 0f00000000;
	setp.lt.f32 	%p26, %f22, 0f00000000;
	setp.lt.f32 	%p27, %f21, 0f00000000;
$L__tmp2:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, 0f00000000, %f21, %p27;
	selp.f32 	%f38, 0f00000000, %f22, %p26;
	selp.f32 	%f39, 0f00000000, %f23, %p25;
	selp.f32 	%f40, 0f00000000, %f24, %p24;
	selp.f32 	%f41, 0f00000000, %f25, %p23;
	selp.f32 	%f42, 0f00000000, %f26, %p22;
	selp.f32 	%f43, 0f00000000, %f27, %p21;
	selp.f32 	%f44, 0f00000000, %f28, %p20;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f45, 0f00000000, %f29, %p19;
	selp.f32 	%f46, 0f00000000, %f30, %p18;
	selp.f32 	%f47, 0f00000000, %f31, %p17;
	selp.f32 	%f48, 0f00000000, %f32, %p16;
	selp.f32 	%f49, 0f00000000, %f33, %p15;
	selp.f32 	%f50, 0f00000000, %f34, %p14;
	selp.f32 	%f51, 0f00000000, %f35, %p13;
	selp.f32 	%f52, 0f00000000, %f36, %p12;
$L__tmp4:
	.loc	1 39 18                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:39:18
	mul.f32 	%f53, %f38, %f38;
	mul.f32 	%f54, %f42, %f42;
$L__tmp5:
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f55, %f37, %f37, %f53;
	fma.rn.f32 	%f56, %f39, %f39, %f55;
	fma.rn.f32 	%f57, %f40, %f40, %f56;
	fma.rn.f32 	%f58, %f41, %f41, %f54;
	fma.rn.f32 	%f59, %f43, %f43, %f58;
	fma.rn.f32 	%f60, %f44, %f44, %f59;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f57;
	shfl.sync.bfly.b32	%r103, %r102, 8, 31, -1;
	mov.b32 	%f61, %r103;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f62, %f57, %f61;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f62;
	shfl.sync.bfly.b32	%r105, %r104, 4, 31, -1;
	mov.b32 	%f63, %r105;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f64;
	shfl.sync.bfly.b32	%r107, %r106, 2, 31, -1;
	mov.b32 	%f65, %r107;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f66;
	shfl.sync.bfly.b32	%r109, %r108, 1, 31, -1;
	mov.b32 	%f67, %r109;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f60;
	shfl.sync.bfly.b32	%r111, %r110, 8, 31, -1;
	mov.b32 	%f69, %r111;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f70, %f60, %f69;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f70;
	shfl.sync.bfly.b32	%r113, %r112, 4, 31, -1;
	mov.b32 	%f71, %r113;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r114, %f72;
	shfl.sync.bfly.b32	%r115, %r114, 2, 31, -1;
	mov.b32 	%f73, %r115;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f74;
	shfl.sync.bfly.b32	%r117, %r116, 1, 31, -1;
	mov.b32 	%f75, %r117;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
$L__tmp6:
	.loc	1 42 19                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:42:19
	mul.f32 	%f77, %f46, %f46;
	mul.f32 	%f78, %f50, %f50;
$L__tmp7:
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f79, %f45, %f45, %f77;
	fma.rn.f32 	%f80, %f47, %f47, %f79;
	fma.rn.f32 	%f81, %f48, %f48, %f80;
	fma.rn.f32 	%f82, %f49, %f49, %f78;
	fma.rn.f32 	%f83, %f51, %f51, %f82;
	fma.rn.f32 	%f84, %f52, %f52, %f83;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f81;
	shfl.sync.bfly.b32	%r119, %r118, 8, 31, -1;
	mov.b32 	%f85, %r119;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f86, %f81, %f85;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f86;
	shfl.sync.bfly.b32	%r121, %r120, 4, 31, -1;
	mov.b32 	%f87, %r121;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r122, %f88;
	shfl.sync.bfly.b32	%r123, %r122, 2, 31, -1;
	mov.b32 	%f89, %r123;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f90;
	shfl.sync.bfly.b32	%r125, %r124, 1, 31, -1;
	mov.b32 	%f91, %r125;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f84;
	shfl.sync.bfly.b32	%r127, %r126, 8, 31, -1;
	mov.b32 	%f93, %r127;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f94, %f84, %f93;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f94;
	shfl.sync.bfly.b32	%r129, %r128, 4, 31, -1;
	mov.b32 	%f95, %r129;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r130, %f96;
	shfl.sync.bfly.b32	%r131, %r130, 2, 31, -1;
	mov.b32 	%f97, %r131;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f98, %f96, %f97;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r132, %f98;
	shfl.sync.bfly.b32	%r133, %r132, 1, 31, -1;
	mov.b32 	%f99, %r133;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f100, %f98, %f99;
$L__tmp8:
	.loc	1 45 27                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:45:27
	sqrt.approx.ftz.f32 	%f101, %f68;
	sqrt.approx.ftz.f32 	%f102, %f76;
	.loc	1 47 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:47:20
	add.f32 	%f103, %f101, 0f2EDBE6FF;
	add.f32 	%f104, %f102, 0f2EDBE6FF;
	.loc	1 48 19                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:48:19
	mov.b32 	%r24, %f103;
	mov.b32 	%r23, %f37;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f105, %r22;
	mov.b32 	%r26, %f38;
	// begin inline asm
	div.full.f32 %r25, %r26, %r24;
	// end inline asm
	mov.b32 	%f106, %r25;
	mov.b32 	%r29, %f39;
	// begin inline asm
	div.full.f32 %r28, %r29, %r24;
	// end inline asm
	mov.b32 	%f107, %r28;
	mov.b32 	%r32, %f40;
	// begin inline asm
	div.full.f32 %r31, %r32, %r24;
	// end inline asm
	mov.b32 	%f108, %r31;
	mov.b32 	%r36, %f104;
	mov.b32 	%r35, %f41;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f109, %r34;
	mov.b32 	%r38, %f42;
	// begin inline asm
	div.full.f32 %r37, %r38, %r36;
	// end inline asm
	mov.b32 	%f110, %r37;
	mov.b32 	%r41, %f43;
	// begin inline asm
	div.full.f32 %r40, %r41, %r36;
	// end inline asm
	mov.b32 	%f111, %r40;
	mov.b32 	%r44, %f44;
	// begin inline asm
	div.full.f32 %r43, %r44, %r36;
	// end inline asm
	mov.b32 	%f112, %r43;
	.loc	1 49 27                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:49:27
	sqrt.approx.ftz.f32 	%f113, %f92;
	sqrt.approx.ftz.f32 	%f114, %f100;
	.loc	1 50 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:50:20
	add.f32 	%f115, %f113, 0f2EDBE6FF;
	add.f32 	%f116, %f114, 0f2EDBE6FF;
	.loc	1 51 19                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:51:19
	mov.b32 	%r48, %f115;
	mov.b32 	%r47, %f45;
	// begin inline asm
	div.full.f32 %r46, %r47, %r48;
	// end inline asm
	mov.b32 	%f117, %r46;
	mov.b32 	%r50, %f46;
	// begin inline asm
	div.full.f32 %r49, %r50, %r48;
	// end inline asm
	mov.b32 	%f118, %r49;
	mov.b32 	%r53, %f47;
	// begin inline asm
	div.full.f32 %r52, %r53, %r48;
	// end inline asm
	mov.b32 	%f119, %r52;
	mov.b32 	%r56, %f48;
	// begin inline asm
	div.full.f32 %r55, %r56, %r48;
	// end inline asm
	mov.b32 	%f120, %r55;
	mov.b32 	%r60, %f116;
	mov.b32 	%r59, %f49;
	// begin inline asm
	div.full.f32 %r58, %r59, %r60;
	// end inline asm
	mov.b32 	%f121, %r58;
	mov.b32 	%r62, %f50;
	// begin inline asm
	div.full.f32 %r61, %r62, %r60;
	// end inline asm
	mov.b32 	%f122, %r61;
	mov.b32 	%r65, %f51;
	// begin inline asm
	div.full.f32 %r64, %r65, %r60;
	// end inline asm
	mov.b32 	%f123, %r64;
	mov.b32 	%r68, %f52;
	// begin inline asm
	div.full.f32 %r67, %r68, %r60;
	// end inline asm
	mov.b32 	%f124, %r67;
	.loc	1 52 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:52:20
	sub.f32 	%f125, %f105, %f117;
	sub.f32 	%f126, %f106, %f118;
	sub.f32 	%f127, %f107, %f119;
	sub.f32 	%f128, %f108, %f120;
	sub.f32 	%f129, %f109, %f121;
	sub.f32 	%f130, %f110, %f122;
	sub.f32 	%f131, %f111, %f123;
	sub.f32 	%f132, %f112, %f124;
	.loc	1 53 20                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:53:20
	mul.f32 	%f133, %f125, %f125;
	mul.f32 	%f134, %f126, %f126;
	mul.f32 	%f135, %f127, %f127;
	mul.f32 	%f136, %f128, %f128;
	mul.f32 	%f137, %f129, %f129;
	mul.f32 	%f138, %f130, %f130;
	mul.f32 	%f139, %f131, %f131;
	mul.f32 	%f140, %f132, %f132;
	.loc	1 54 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:54:47
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r23, %r26, %r29, %r32 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r35, %r38, %r41, %r44 };
	// end inline asm
	.loc	1 55 47                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:55:47
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd4 + 0 ], { %r47, %r50, %r53, %r56 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r59, %r62, %r65, %r68 };
	// end inline asm
	.loc	1 56 25                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:56:25
	add.s64 	%rd10, %rd15, %rd16;
	add.s64 	%rd11, %rd15, %rd17;
	.loc	1 56 45                         // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:56:45
	mov.b32 	%r86, %f133;
	mov.b32 	%r87, %f134;
	mov.b32 	%r88, %f135;
	mov.b32 	%r89, %f136;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r86, %r87, %r88, %r89 };
	// end inline asm
	mov.b32 	%r90, %f137;
	mov.b32 	%r91, %f138;
	mov.b32 	%r92, %f139;
	mov.b32 	%r93, %f140;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r90, %r91, %r92, %r93 };
	// end inline asm
	.loc	1 56 4                          // cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py:56:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ik/cikukn7ysiu5mudtsv4guw4abtyturbcwx7uyk32idcq24k4r2ok.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 277                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x10e DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 107
.b8 117
.b8 107
.b8 110
.b8 55
.b8 121
.b8 115
.b8 105
.b8 117
.b8 53
.b8 109
.b8 117
.b8 100
.b8 116
.b8 115
.b8 118
.b8 52
.b8 103
.b8 117
.b8 119
.b8 52
.b8 97
.b8 98
.b8 116
.b8 121
.b8 116
.b8 117
.b8 114
.b8 98
.b8 99
.b8 119
.b8 120
.b8 55
.b8 117
.b8 121
.b8 107
.b8 51
.b8 50
.b8 105
.b8 100
.b8 99
.b8 113
.b8 50
.b8 52
.b8 107
.b8 52
.b8 114
.b8 50
.b8 111
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xff:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
