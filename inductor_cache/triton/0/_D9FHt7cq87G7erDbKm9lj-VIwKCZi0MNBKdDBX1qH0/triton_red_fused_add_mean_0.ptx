//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_mean_0 // -- Begin function triton_red_fused_add_mean_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_add_mean_0
.visible .entry triton_red_fused_add_mean_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mean_0_param_3,
	.param .u32 triton_red_fused_add_mean_0_param_4,
	.param .u32 triton_red_fused_add_mean_0_param_5
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_red_fused_add_mean_0_param_0];
	ld.param.u64 	%rd9, [triton_red_fused_add_mean_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:24:21
	setp.lt.s32 	%p1, %r1, 256;
	ld.param.u64 	%rd10, [triton_red_fused_add_mean_0_param_2];
	ld.param.u64 	%rd11, [triton_red_fused_add_mean_0_param_3];
	.loc	1 25 33                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:25:33
	mov.u32 	%r52, %tid.x;
	shl.b32 	%r53, %r52, 2;
	and.b32  	%r54, %r53, 2044;
	.loc	1 32 44                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:32:44
	shl.b32 	%r55, %r1, 12;
	or.b32  	%r56, %r55, %r54;
	.loc	1 32 34                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:32:34
	mul.wide.s32 	%rd12, %r56, 4;
	add.s64 	%rd1, %rd9, %rd12;
	mov.b32 	%r6, 0;
	.loc	1 32 49                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:32:49
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 33 34                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:33:34
	add.s64 	%rd2, %rd10, %rd12;
	.loc	1 33 49                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:33:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f3, %r12;
	mov.b32 	%f4, %r13;
	.loc	1 34 22                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:34:22
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 36 23                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:36:23
	add.f32 	%f7, %f5, 0f00000000;
	add.f32 	%f8, %f6, 0f00000000;
	.loc	1 38 29                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:38:29
	add.s64 	%rd3, %rd11, %rd12;
	.loc	1 38 50                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:38:50
	mov.b32 	%r20, %f5;
	mov.b32 	%r21, %f6;
	.loc	1 32 34                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:32:34
	add.s64 	%rd4, %rd1, 8192;
	.loc	1 33 34                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:33:34
	add.s64 	%rd5, %rd2, 8192;
	.loc	1 32 49                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:32:49
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	.loc	1 33 49                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:33:49
	mov.b32 	%f11, %r10;
	mov.b32 	%f12, %r11;
	.loc	1 34 22                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:34:22
	add.f32 	%f13, %f10, %f12;
	add.f32 	%f14, %f9, %f11;
	.loc	1 36 23                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:36:23
	add.f32 	%f15, %f14, 0f00000000;
	add.f32 	%f16, %f13, 0f00000000;
	.loc	1 34 22                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:34:22
	mov.b32 	%r18, %f14;
	mov.b32 	%r19, %f13;
	.loc	1 38 50                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:38:50
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	.loc	1 32 49                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:32:49
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r22, %r6;
	@!%p1 mov.u32 %r23, %r6;
	@!%p1 mov.u32 %r24, %r6;
	@!%p1 mov.u32 %r25, %r6;
	// end inline asm
	mov.b32 	%f17, %r23;
	mov.b32 	%f18, %r22;
	mov.b32 	%f19, %r24;
	mov.b32 	%f20, %r25;
	.loc	1 33 49                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:33:49
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r30, %r6;
	@!%p1 mov.u32 %r31, %r6;
	@!%p1 mov.u32 %r32, %r6;
	@!%p1 mov.u32 %r33, %r6;
	// end inline asm
	mov.b32 	%f21, %r31;
	mov.b32 	%f22, %r30;
	mov.b32 	%f23, %r32;
	mov.b32 	%f24, %r33;
	.loc	1 34 22                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:34:22
	add.f32 	%f25, %f18, %f22;
	add.f32 	%f26, %f17, %f21;
	add.f32 	%f27, %f19, %f23;
	add.f32 	%f28, %f20, %f24;
	.loc	1 36 23                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:36:23
	add.f32 	%f29, %f16, %f26;
	add.f32 	%f30, %f15, %f25;
	add.f32 	%f31, %f7, %f27;
	add.f32 	%f32, %f8, %f28;
	.loc	1 38 29                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:38:29
	add.s64 	%rd6, %rd3, 8192;
	.loc	1 34 22                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:34:22
	mov.b32 	%r38, %f25;
	mov.b32 	%r39, %f26;
	.loc	1 38 50                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:38:50
	mov.b32 	%r40, %f27;
	mov.b32 	%r41, %f28;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r38, %r39, %r40, %r41 };
	// end inline asm
	.loc	1 25 33                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:25:33
	and.b32  	%r57, %r52, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f30, %f29;
	add.f32 	%f34, %f31, %f33;
	add.f32 	%f35, %f32, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f36;
	shfl.sync.bfly.b32	%r59, %r58, 16, 31, -1;
	mov.b32 	%f37, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f38;
	shfl.sync.bfly.b32	%r61, %r60, 8, 31, -1;
	mov.b32 	%f39, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f40;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f41, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f42;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f43, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f44;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f45, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p23, %r57, 0;
	shr.u32 	%r68, %r52, 3;
	and.b32  	%r69, %r68, 60;
	mov.u32 	%r70, global_smem;
	add.s32 	%r42, %r70, %r69;
	mov.b32 	%r43, %f46;
	// begin inline asm
	@%p23 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p24, %r52, 16;
	add.s32 	%r45, %r70, %r53;
	// begin inline asm
	@%p24 ld.shared.b32 %r44, [ %r45 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r44;
	shfl.sync.bfly.b32	%r71, %r44, 8, 31, -1;
	mov.b32 	%f48, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f49;
	shfl.sync.bfly.b32	%r73, %r72, 4, 31, -1;
	mov.b32 	%f50, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f51;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f52, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f53;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f54, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r78, %r52, 15;
	setp.eq.s32 	%p27, %r78, 0;
	and.pred  	%p25, %p24, %p27;
	mov.b32 	%r47, %f55;
	// begin inline asm
	@%p25 st.shared.b32 [ %r45 + 0 ], %r47;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 41 18                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:41:18
	ld.shared.u32 	%r49, [global_smem];
	mov.b32 	%r50, 1166016512;
	// begin inline asm
	div.full.f32 %r51, %r49, %r50;
	// end inline asm
	.loc	1 42 4                          // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:42:4
	bar.sync 	0;
	.loc	1 43 28                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:43:28
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd7, %rd8, %rd13;
	.loc	1 43 39                         // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:43:39
	and.b32  	%r79, %r52, 511;
	setp.eq.s32 	%p28, %r79, 0;
	and.pred  	%p26, %p28, %p1;
	// begin inline asm
	@%p26 st.global.b32 [ %rd7 + 0 ], { %r51 };
	// end inline asm
	.loc	1 43 4                          // cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xl/cxl24k2cdfc76aluvnrcrwayoxh4b3aymxysqgcv2burytxe3j3c.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 108
.b8 50
.b8 52
.b8 107
.b8 50
.b8 99
.b8 100
.b8 102
.b8 99
.b8 55
.b8 54
.b8 97
.b8 108
.b8 117
.b8 118
.b8 110
.b8 114
.b8 99
.b8 114
.b8 119
.b8 97
.b8 121
.b8 111
.b8 120
.b8 104
.b8 52
.b8 98
.b8 51
.b8 97
.b8 121
.b8 109
.b8 120
.b8 121
.b8 115
.b8 113
.b8 103
.b8 99
.b8 118
.b8 50
.b8 98
.b8 117
.b8 114
.b8 121
.b8 116
.b8 120
.b8 101
.b8 51
.b8 106
.b8 51
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
