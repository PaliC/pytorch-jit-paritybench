//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_log_sum_0 // -- Begin function triton_per_fused_add_div_log_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_div_log_sum_0
.visible .entry triton_per_fused_add_div_log_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_log_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_log_sum_0_param_1,
	.param .u32 triton_per_fused_add_div_log_sum_0_param_2
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<39>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<6>;
	.loc	1 19 0                          // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused_add_div_log_sum_0_param_1];
	ld.param.u64 	%rd3, [triton_per_fused_add_div_log_sum_0_param_0];
$L__tmp0:
	.loc	1 26 34                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:26:34
	mov.u32 	%r1, %tid.x;
	.loc	1 29 19                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:29:19
	and.b32  	%r6, %r1, 15;
	.loc	1 31 38                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:31:38
	shl.b32 	%r7, %r1, 2;
	and.b32  	%r8, %r7, 192;
	.loc	1 31 35                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:31:35
	or.b32  	%r9, %r8, %r6;
	.loc	1 31 30                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:31:30
	mul.wide.u32 	%rd4, %r9, 4;
	add.s64 	%rd2, %rd3, %rd4;
	mov.pred 	%p1, -1;
	.loc	1 31 43                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:31:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r4;
	.loc	1 33 18                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:33:18
	add.f32 	%f6, %f5, 0f3F400002;
	.loc	1 34 18                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:34:18
	mov.b32 	%r5, %f6;
	// begin inline asm
	div.full.f32 %r3, %r4, %r5;
	// end inline asm
	mov.b32 	%f7, %r3;
	.loc	1 35 23                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:35:23
	setp.lt.f32 	%p2, %f7, 0f00800000;
	mul.f32 	%f8, %f7, 0f4B000000;
	selp.f32 	%f1, %f8, %f7, %p2;
	selp.f32 	%f9, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	%r10, %f1;
	add.s32 	%r11, %r10, -1059760811;
	and.b32  	%r12, %r11, -8388608;
	sub.s32 	%r13, %r10, %r12;
	mov.b32 	%f10, %r13;
	cvt.rn.f32.s32 	%f11, %r12;
	mov.f32 	%f12, 0f34000000;
	fma.rn.ftz.f32 	%f13, %f11, %f12, %f9;
	add.f32 	%f14, %f10, 0fBF800000;
	mov.f32 	%f15, 0f3E1039F6;
	mov.f32 	%f16, 0fBE055027;
	fma.rn.ftz.f32 	%f17, %f16, %f14, %f15;
	mov.f32 	%f18, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f19, %f17, %f14, %f18;
	mov.f32 	%f20, 0f3E0F2955;
	fma.rn.ftz.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f23, %f21, %f14, %f22;
	mov.f32 	%f24, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f25, %f23, %f14, %f24;
	mov.f32 	%f26, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f27, %f25, %f14, %f26;
	mov.f32 	%f28, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f29, %f27, %f14, %f28;
	mov.f32 	%f30, 0fBF000000;
	fma.rn.ftz.f32 	%f31, %f29, %f14, %f30;
	mul.f32 	%f32, %f14, %f31;
	fma.rn.ftz.f32 	%f33, %f32, %f14, %f14;
	mov.f32 	%f34, 0f3F317218;
	fma.rn.ftz.f32 	%f50, %f13, %f34, %f33;
	setp.lt.u32 	%p3, %r10, 2139095040;
	@%p3 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 23                          // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:0:23
	mov.f32 	%f35, 0f7F800000;
	fma.rn.ftz.f32 	%f50, %f1, %f35, %f35;
$L__BB0_2:                              // %__nv_logf.exit
	.loc	1 26 34                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:26:34
	and.b32  	%r21, %r1, 31;
	.loc	1 35 23                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:35:23
	setp.eq.f32 	%p8, %f1, 0f00000000;
	selp.f32 	%f36, 0fFF800000, %f50, %p8;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f36;
	shfl.sync.bfly.b32	%r23, %r22, 16, 31, -1;
	mov.b32 	%f37, %r23;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f38;
	shfl.sync.bfly.b32	%r25, %r24, 8, 31, -1;
	mov.b32 	%f39, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f40;
	shfl.sync.bfly.b32	%r27, %r26, 4, 31, -1;
	mov.b32 	%f41, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f42;
	shfl.sync.bfly.b32	%r29, %r28, 2, 31, -1;
	mov.b32 	%f43, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f44;
	shfl.sync.bfly.b32	%r31, %r30, 1, 31, -1;
	mov.b32 	%f45, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r21, 0;
	shr.u32 	%r32, %r1, 3;
	and.b32  	%r33, %r32, 4;
	mov.u32 	%r34, global_smem;
	add.s32 	%r14, %r34, %r33;
	mov.b32 	%r15, %f46;
	// begin inline asm
	@%p4 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r1, 2;
	add.s32 	%r17, %r34, %r7;
	// begin inline asm
	@%p5 ld.shared.b32 %r16, [ %r17 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r16;
	shfl.sync.bfly.b32	%r36, %r16, 1, 31, -1;
	mov.b32 	%f48, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r37, %r1, 1;
	setp.eq.b32 	%p9, %r37, 1;
	not.pred 	%p10, %p9;
	and.pred  	%p6, %p5, %p10;
	mov.b32 	%r19, %f49;
	// begin inline asm
	@%p6 st.shared.b32 [ %r17 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r20, [global_smem];
$L__tmp2:
	.loc	1 38 67                         // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:38:67
	and.b32  	%r38, %r1, 63;
	setp.eq.s32 	%p7, %r38, 0;
	// begin inline asm
	@%p7 st.global.b32 [ %rd5 + 0 ], { %r20 };
	// end inline asm
	.loc	1 38 4                          // cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py:38:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/pn/cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 179                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xac DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 110
.b8 52
.b8 107
.b8 112
.b8 55
.b8 52
.b8 50
.b8 54
.b8 118
.b8 55
.b8 112
.b8 114
.b8 117
.b8 99
.b8 55
.b8 98
.b8 51
.b8 113
.b8 118
.b8 122
.b8 54
.b8 117
.b8 52
.b8 53
.b8 103
.b8 116
.b8 50
.b8 116
.b8 120
.b8 99
.b8 122
.b8 113
.b8 53
.b8 108
.b8 105
.b8 110
.b8 102
.b8 122
.b8 104
.b8 115
.b8 107
.b8 52
.b8 111
.b8 106
.b8 100
.b8 120
.b8 97
.b8 108
.b8 105
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x25 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
