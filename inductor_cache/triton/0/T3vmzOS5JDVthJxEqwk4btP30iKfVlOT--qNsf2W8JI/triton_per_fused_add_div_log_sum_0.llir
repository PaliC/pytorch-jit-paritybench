; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_div_log_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 15, !dbg !11
  %6 = shl i32 %4, 2, !dbg !12
  %7 = and i32 %6, 192, !dbg !12
  %8 = or disjoint i32 %7, %5, !dbg !13
  %9 = zext nneg i32 %8 to i64, !dbg !14
  %10 = getelementptr float, ptr addrspace(1) %0, i64 %9, !dbg !14
  %11 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %10, i1 true) #4, !dbg !15
  %12 = bitcast i32 %11 to float, !dbg !15
  %13 = fadd float %12, 0x3FE8000040000000, !dbg !16
  %14 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %12, float %13) #4, !dbg !17
  %15 = fcmp olt float %14, 0x3810000000000000, !dbg !18
  %16 = fmul float %14, 0x4160000000000000, !dbg !18
  %.02.i = select i1 %15, float %16, float %14, !dbg !18
  %i.i.0.i = select i1 %15, float -2.300000e+01, float 0.000000e+00, !dbg !18
  %17 = bitcast float %.02.i to i32, !dbg !18
  %18 = add i32 %17, -1059760811, !dbg !18
  %19 = and i32 %18, -8388608, !dbg !18
  %20 = sub i32 %17, %19, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = sitofp i32 %19 to float, !dbg !18
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not.i = icmp eq i32 %23, 0, !dbg !18
  %24 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %22, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !18
  %25 = tail call float @llvm.nvvm.fma.rn.f(float %22, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !18
  %.08.i = select i1 %.not.i, float %25, float %24, !dbg !18
  %26 = fadd float %21, -1.000000e+00, !dbg !18
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not1.i = icmp eq i32 %27, 0, !dbg !18
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %26, float 0x3FC2073EC0000000) #4, !dbg !18
  %29 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %26, float 0x3FC2073EC0000000) #4, !dbg !18
  %.010.i = select i1 %.not1.i, float %29, float %28, !dbg !18
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not2.i = icmp eq i32 %30, 0, !dbg !18
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %26, float 0xBFBF19B980000000) #4, !dbg !18
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %26, float 0xBFBF19B980000000) #4, !dbg !18
  %.011.i = select i1 %.not2.i, float %32, float %31, !dbg !18
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not3.i = icmp eq i32 %33, 0, !dbg !18
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %26, float 0x3FC1E52AA0000000) #4, !dbg !18
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %26, float 0x3FC1E52AA0000000) #4, !dbg !18
  %.012.i = select i1 %.not3.i, float %35, float %34, !dbg !18
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not4.i = icmp eq i32 %36, 0, !dbg !18
  %37 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %26, float 0xBFC55B1720000000) #4, !dbg !18
  %38 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %26, float 0xBFC55B1720000000) #4, !dbg !18
  %.09.i = select i1 %.not4.i, float %38, float %37, !dbg !18
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not5.i = icmp eq i32 %39, 0, !dbg !18
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %26, float 0x3FC99DA160000000) #4, !dbg !18
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %26, float 0x3FC99DA160000000) #4, !dbg !18
  %.05.i = select i1 %.not5.i, float %41, float %40, !dbg !18
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not6.i = icmp eq i32 %42, 0, !dbg !18
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %26, float 0xBFCFFFE440000000) #4, !dbg !18
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %26, float 0xBFCFFFE440000000) #4, !dbg !18
  %.01.i = select i1 %.not6.i, float %44, float %43, !dbg !18
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not7.i = icmp eq i32 %45, 0, !dbg !18
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %26, float 0x3FD5554F00000000) #4, !dbg !18
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %26, float 0x3FD5554F00000000) #4, !dbg !18
  %.0.i = select i1 %.not7.i, float %47, float %46, !dbg !18
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not8.i = icmp eq i32 %48, 0, !dbg !18
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %26, float -5.000000e-01) #4, !dbg !18
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %26, float -5.000000e-01) #4, !dbg !18
  %.07.i = select i1 %.not8.i, float %50, float %49, !dbg !18
  %51 = fmul float %26, %.07.i, !dbg !18
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not9.i = icmp eq i32 %52, 0, !dbg !18
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %51, float %26, float %26) #4, !dbg !18
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %51, float %26, float %26) #4, !dbg !18
  %.06.i = select i1 %.not9.i, float %54, float %53, !dbg !18
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not10.i = icmp eq i32 %55, 0, !dbg !18
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !18
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !18
  %.04.i = select i1 %.not10.i, float %57, float %56, !dbg !18
  %58 = icmp ugt i32 %17, 2139095039, !dbg !18
  br i1 %58, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !18

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not11.i = icmp eq i32 %59, 0, !dbg !18
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !18
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !18
  %.03.i = select i1 %.not11.i, float %61, float %60, !dbg !18
  br label %__nv_logf.exit, !dbg !18

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %3 ], !dbg !18
  %62 = lshr i32 %4, 5, !dbg !10
  %63 = and i32 %4, 31, !dbg !10
  %64 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !18
  %r.i.1.i = select i1 %64, float 0xFFF0000000000000, float %r.i.0.i, !dbg !18
  %65 = bitcast float %r.i.1.i to i32, !dbg !19
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 16, i32 31), !dbg !19
  %67 = bitcast i32 %66 to float, !dbg !19
  %68 = fadd float %r.i.1.i, %67, !dbg !23
  %69 = bitcast float %68 to i32, !dbg !19
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 8, i32 31), !dbg !19
  %71 = bitcast i32 %70 to float, !dbg !19
  %72 = fadd float %68, %71, !dbg !23
  %73 = bitcast float %72 to i32, !dbg !19
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 4, i32 31), !dbg !19
  %75 = bitcast i32 %74 to float, !dbg !19
  %76 = fadd float %72, %75, !dbg !23
  %77 = bitcast float %76 to i32, !dbg !19
  %78 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %77, i32 2, i32 31), !dbg !19
  %79 = bitcast i32 %78 to float, !dbg !19
  %80 = fadd float %76, %79, !dbg !23
  %81 = bitcast float %80 to i32, !dbg !19
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 1, i32 31), !dbg !19
  %83 = bitcast i32 %82 to float, !dbg !19
  %84 = fadd float %80, %83, !dbg !23
  %85 = icmp eq i32 %63, 0, !dbg !19
  %86 = and i32 %62, 1, !dbg !19
  %87 = zext nneg i32 %86 to i64, !dbg !19
  %88 = getelementptr float, ptr addrspace(3) @global_smem, i64 %87, !dbg !19
  %89 = bitcast float %84 to <1 x i32>, !dbg !19
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %88, <1 x i32> %89, i1 %85) #4, !dbg !19
  tail call void @llvm.nvvm.barrier0(), !dbg !19
  %90 = icmp slt i32 %4, 2, !dbg !19
  %91 = sext i32 %4 to i64, !dbg !19
  %92 = getelementptr float, ptr addrspace(3) @global_smem, i64 %91, !dbg !19
  %93 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %92, i1 %90) #4, !dbg !19
  %94 = bitcast i32 %93 to float, !dbg !19
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 1, i32 31), !dbg !19
  %96 = bitcast i32 %95 to float, !dbg !19
  %97 = fadd float %94, %96, !dbg !23
  %98 = and i32 %4, 1, !dbg !19
  %99 = icmp eq i32 %98, 0, !dbg !19
  %100 = and i1 %90, %99, !dbg !19
  %101 = bitcast float %97 to <1 x i32>, !dbg !19
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %92, <1 x i32> %101, i1 %100) #4, !dbg !19
  tail call void @llvm.nvvm.barrier0(), !dbg !19
  %102 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !19
  %urem = and i32 %4, 63, !dbg !25
  %103 = icmp eq i32 %urem, 0, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %102, ptr addrspace(1) %1, i1 %103) #4, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpn4kp7426v7pruc7b3qvz6u45gt2txczq5linfzhsk4ojdxaliz.py", directory: "inductor_cache/pn")
!4 = !{ptr @triton_per_fused_add_div_log_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_log_sum_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_log_sum_0", linkageName: "triton_per_fused_add_div_log_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 29, column: 19, scope: !7)
!12 = !DILocation(line: 31, column: 38, scope: !7)
!13 = !DILocation(line: 31, column: 35, scope: !7)
!14 = !DILocation(line: 31, column: 30, scope: !7)
!15 = !DILocation(line: 31, column: 43, scope: !7)
!16 = !DILocation(line: 33, column: 18, scope: !7)
!17 = !DILocation(line: 34, column: 18, scope: !7)
!18 = !DILocation(line: 35, column: 23, scope: !7)
!19 = !DILocation(line: 267, column: 36, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = !DILocation(line: 37, column: 24, scope: !7)
!23 = !DILocation(line: 256, column: 15, scope: !24, inlinedAt: !22)
!24 = distinct !DILexicalBlockFile(scope: !20, file: !21, discriminator: 0)
!25 = !DILocation(line: 38, column: 67, scope: !7)
!26 = !DILocation(line: 38, column: 4, scope: !7)
