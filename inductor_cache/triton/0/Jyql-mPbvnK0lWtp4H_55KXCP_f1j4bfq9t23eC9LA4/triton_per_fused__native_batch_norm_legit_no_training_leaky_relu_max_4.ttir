#loc = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0)
#loc1 = loc(unknown)
#loc29 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":54:39)
#loc36 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":56:71)
#loc58 = loc(callsite(#loc1 at #loc29))
#loc64 = loc(callsite(#loc1 at #loc36))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_leaky_relu_max_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %true = arith.constant true loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e-01> : tensor<1x64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc4)
    %3 = arith.remsi %0, %c1024_i32 : i32 loc(#loc5)
    %4 = arith.muli %0, %c64_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<1x64xi32> loc(#loc7)
    %6 = arith.addi %2, %5 : tensor<1x64xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %9 = tt.load %8 : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %arg1, %3 : !tt.ptr<f32>, i32 loc(#loc10)
    %11 = tt.splat %10 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %arg2, %3 : !tt.ptr<f32>, i32 loc(#loc12)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %arg3, %3 : !tt.ptr<f32>, i32 loc(#loc14)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %arg4, %3 : !tt.ptr<f32>, i32 loc(#loc16)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.broadcast %12 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc18)
    %23 = arith.subf %9, %22 : tensor<1x64xf32> loc(#loc18)
    %24 = arith.addf %15, %cst_2 : tensor<1x1xf32> loc(#loc19)
    %25 = tt.extern_elementwise %24 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc20)
    %26 = arith.divf %cst, %25 : tensor<1x1xf32> loc(#loc21)
    %27 = tt.broadcast %26 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc22)
    %28 = arith.mulf %23, %27 : tensor<1x64xf32> loc(#loc22)
    %29 = tt.broadcast %18 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc23)
    %30 = arith.mulf %28, %29 : tensor<1x64xf32> loc(#loc23)
    %31 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc24)
    %32 = arith.addf %30, %31 : tensor<1x64xf32> loc(#loc24)
    %33 = arith.cmpf ogt, %32, %cst_1 : tensor<1x64xf32> loc(#loc25)
    %34 = arith.mulf %32, %cst_0 : tensor<1x64xf32> loc(#loc26)
    %35 = arith.select %33, %32, %34 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc27)
    %36 = "tt.reduce"(%35) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc29)), %arg10: f32 loc(callsite(#loc1 at #loc29))):
      %45 = arith.cmpf ogt, %arg9, %arg10 : f32 loc(#loc79)
      %46 = arith.cmpf une, %arg9, %arg9 : f32 loc(#loc80)
      %47 = arith.ori %45, %46 : i1 loc(#loc81)
      %48 = arith.select %47, %arg9, %arg10 : f32 loc(#loc82)
      tt.reduce.return %48 : f32 loc(#loc57)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc57)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc34)
    %38:2 = "tt.reduce"(%35, %2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc36)), %arg10: i32 loc(callsite(#loc1 at #loc36)), %arg11: f32 loc(callsite(#loc1 at #loc36)), %arg12: i32 loc(callsite(#loc1 at #loc36))):
      %45 = arith.cmpf ogt, %arg9, %arg11 : f32 loc(#loc83)
      %46 = arith.cmpf oeq, %arg9, %arg11 : f32 loc(#loc84)
      %47 = arith.cmpf une, %arg9, %arg9 : f32 loc(#loc85)
      %48 = arith.cmpf une, %arg11, %arg11 : f32 loc(#loc86)
      %49 = arith.xori %48, %true : i1 loc(#loc87)
      %50 = arith.andi %47, %49 : i1 loc(#loc88)
      %51 = arith.ori %45, %50 : i1 loc(#loc89)
      %52 = arith.andi %47, %48 : i1 loc(#loc90)
      %53 = arith.ori %46, %52 : i1 loc(#loc91)
      %54 = arith.cmpi slt, %arg10, %arg12 : i32 loc(#loc92)
      %55 = arith.andi %53, %54 : i1 loc(#loc93)
      %56 = arith.ori %51, %55 : i1 loc(#loc94)
      %57 = arith.select %56, %arg9, %arg11 : f32 loc(#loc95)
      %58 = arith.select %56, %arg10, %arg12 : i32 loc(#loc96)
      tt.reduce.return %57, %58 : f32, i32 loc(#loc63)
    }) : (tensor<1x64xf32>, tensor<1x64xi32>) -> (tensor<1xf32>, tensor<1xi32>) loc(#loc63)
    %39 = tt.expand_dims %38#1 {axis = 1 : i32} : tensor<1xi32> -> tensor<1x1xi32> loc(#loc51)
    %40 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc52)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc52)
    tt.store %41, %37 : tensor<1x1x!tt.ptr<f32>> loc(#loc53)
    %42 = tt.addptr %arg6, %0 : !tt.ptr<i64>, i32 loc(#loc54)
    %43 = tt.splat %42 : !tt.ptr<i64> -> tensor<1x1x!tt.ptr<i64>> loc(#loc54)
    %44 = arith.extsi %39 : tensor<1x1xi32> to tensor<1x1xi64> loc(#loc55)
    tt.store %43, %44 : tensor<1x1x!tt.ptr<i64>> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":23:28)
#loc3 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":26:26)
#loc4 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":26:34)
#loc5 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":31:19)
#loc6 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:38)
#loc7 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:35)
#loc8 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:30)
#loc9 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":32:43)
#loc10 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":33:30)
#loc11 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":33:35)
#loc12 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":34:30)
#loc13 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":34:35)
#loc14 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":35:31)
#loc15 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":35:36)
#loc16 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":36:31)
#loc17 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":36:36)
#loc18 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":37:18)
#loc19 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":39:18)
#loc20 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":40:26)
#loc21 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":42:18)
#loc22 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":45:19)
#loc23 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":46:20)
#loc24 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":47:20)
#loc25 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":49:20)
#loc26 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":51:20)
#loc27 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":52:35)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc34 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":54:42)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":173:42)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":152:21)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":153:23)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":155:29)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":156:29)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:32)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:28)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":157:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:29)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":159:17)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:31)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":162:12)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:35)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":163:69)
#loc51 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":57:22)
#loc52 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":58:25)
#loc53 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":58:37)
#loc54 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":59:25)
#loc55 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":59:37)
#loc56 = loc("inductor_cache/56/c56myxijulxrfxlcyl7fteri2mrlsb3ztldnjth35itvlytjfmif.py":59:4)
#loc57 = loc(callsite(#loc28 at #loc29))
#loc59 = loc(callsite(#loc30 at #loc28))
#loc60 = loc(callsite(#loc31 at #loc28))
#loc61 = loc(callsite(#loc32 at #loc28))
#loc62 = loc(callsite(#loc33 at #loc28))
#loc63 = loc(callsite(#loc35 at #loc36))
#loc65 = loc(callsite(#loc37 at #loc35))
#loc66 = loc(callsite(#loc38 at #loc35))
#loc67 = loc(callsite(#loc39 at #loc35))
#loc68 = loc(callsite(#loc40 at #loc35))
#loc69 = loc(callsite(#loc41 at #loc35))
#loc70 = loc(callsite(#loc42 at #loc35))
#loc71 = loc(callsite(#loc43 at #loc35))
#loc72 = loc(callsite(#loc44 at #loc35))
#loc73 = loc(callsite(#loc45 at #loc35))
#loc74 = loc(callsite(#loc46 at #loc35))
#loc75 = loc(callsite(#loc47 at #loc35))
#loc76 = loc(callsite(#loc48 at #loc35))
#loc77 = loc(callsite(#loc49 at #loc35))
#loc78 = loc(callsite(#loc50 at #loc35))
#loc79 = loc(callsite(#loc59 at #loc29))
#loc80 = loc(callsite(#loc60 at #loc29))
#loc81 = loc(callsite(#loc61 at #loc29))
#loc82 = loc(callsite(#loc62 at #loc29))
#loc83 = loc(callsite(#loc65 at #loc36))
#loc84 = loc(callsite(#loc66 at #loc36))
#loc85 = loc(callsite(#loc67 at #loc36))
#loc86 = loc(callsite(#loc68 at #loc36))
#loc87 = loc(callsite(#loc69 at #loc36))
#loc88 = loc(callsite(#loc70 at #loc36))
#loc89 = loc(callsite(#loc71 at #loc36))
#loc90 = loc(callsite(#loc72 at #loc36))
#loc91 = loc(callsite(#loc73 at #loc36))
#loc92 = loc(callsite(#loc74 at #loc36))
#loc93 = loc(callsite(#loc75 at #loc36))
#loc94 = loc(callsite(#loc76 at #loc36))
#loc95 = loc(callsite(#loc77 at #loc36))
#loc96 = loc(callsite(#loc78 at #loc36))
