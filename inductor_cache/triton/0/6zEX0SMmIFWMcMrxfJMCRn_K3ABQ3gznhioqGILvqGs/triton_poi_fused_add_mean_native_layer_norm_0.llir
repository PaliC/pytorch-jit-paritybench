; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_mean_native_layer_norm_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 2, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 28, !dbg !12
  %9 = and i32 %7, 3, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 4, !dbg !14
  %12 = shl i32 %10, 4, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = or disjoint i32 %12, 4, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = or disjoint i32 %12, 8, !dbg !21
  %23 = sext i32 %22 to i64, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !22
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !23
  %26 = bitcast i32 %25 to float, !dbg !23
  %27 = or disjoint i32 %12, 12, !dbg !24
  %28 = sext i32 %27 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #1, !dbg !26
  %31 = bitcast i32 %30 to float, !dbg !26
  %32 = or disjoint i32 %12, 1, !dbg !27
  %33 = sext i32 %32 to i64, !dbg !28
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !28
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %11) #1, !dbg !29
  %36 = bitcast i32 %35 to float, !dbg !29
  %37 = or disjoint i32 %12, 5, !dbg !30
  %38 = sext i32 %37 to i64, !dbg !31
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !31
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #1, !dbg !32
  %41 = bitcast i32 %40 to float, !dbg !32
  %42 = or disjoint i32 %12, 9, !dbg !33
  %43 = sext i32 %42 to i64, !dbg !34
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !34
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %11) #1, !dbg !35
  %46 = bitcast i32 %45 to float, !dbg !35
  %47 = or disjoint i32 %12, 13, !dbg !36
  %48 = sext i32 %47 to i64, !dbg !37
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !37
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %11) #1, !dbg !38
  %51 = bitcast i32 %50 to float, !dbg !38
  %52 = or disjoint i32 %12, 2, !dbg !39
  %53 = sext i32 %52 to i64, !dbg !40
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !40
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %11) #1, !dbg !41
  %56 = bitcast i32 %55 to float, !dbg !41
  %57 = or disjoint i32 %12, 6, !dbg !42
  %58 = sext i32 %57 to i64, !dbg !43
  %59 = getelementptr float, ptr addrspace(1) %0, i64 %58, !dbg !43
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %11) #1, !dbg !44
  %61 = bitcast i32 %60 to float, !dbg !44
  %62 = or disjoint i32 %12, 10, !dbg !45
  %63 = sext i32 %62 to i64, !dbg !46
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !46
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %11) #1, !dbg !47
  %66 = bitcast i32 %65 to float, !dbg !47
  %67 = or disjoint i32 %12, 14, !dbg !48
  %68 = sext i32 %67 to i64, !dbg !49
  %69 = getelementptr float, ptr addrspace(1) %0, i64 %68, !dbg !49
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %11) #1, !dbg !50
  %71 = bitcast i32 %70 to float, !dbg !50
  %72 = or disjoint i32 %12, 3, !dbg !51
  %73 = sext i32 %72 to i64, !dbg !52
  %74 = getelementptr float, ptr addrspace(1) %0, i64 %73, !dbg !52
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 %11) #1, !dbg !53
  %76 = bitcast i32 %75 to float, !dbg !53
  %77 = or disjoint i32 %12, 7, !dbg !54
  %78 = sext i32 %77 to i64, !dbg !55
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !55
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 %11) #1, !dbg !56
  %81 = bitcast i32 %80 to float, !dbg !56
  %82 = or disjoint i32 %12, 11, !dbg !57
  %83 = sext i32 %82 to i64, !dbg !58
  %84 = getelementptr float, ptr addrspace(1) %0, i64 %83, !dbg !58
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 %11) #1, !dbg !59
  %86 = bitcast i32 %85 to float, !dbg !59
  %87 = or disjoint i32 %12, 15, !dbg !60
  %88 = sext i32 %87 to i64, !dbg !61
  %89 = getelementptr float, ptr addrspace(1) %0, i64 %88, !dbg !61
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %89, i1 %11) #1, !dbg !62
  %91 = bitcast i32 %90 to float, !dbg !62
  %92 = fadd float %16, %21, !dbg !63
  %93 = fadd float %92, %26, !dbg !64
  %94 = fadd float %93, %31, !dbg !65
  %95 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %94, float 4.000000e+00) #1, !dbg !66
  %96 = fadd float %95, 0.000000e+00, !dbg !67
  %97 = fadd float %36, %41, !dbg !68
  %98 = fadd float %97, %46, !dbg !69
  %99 = fadd float %98, %51, !dbg !70
  %100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %99, float 4.000000e+00) #1, !dbg !71
  %101 = fadd float %100, 0.000000e+00, !dbg !72
  %102 = fadd float %96, %101, !dbg !73
  %103 = fadd float %56, %61, !dbg !74
  %104 = fadd float %103, %66, !dbg !75
  %105 = fadd float %104, %71, !dbg !76
  %106 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %105, float 4.000000e+00) #1, !dbg !77
  %107 = fadd float %106, 0.000000e+00, !dbg !78
  %108 = fadd float %102, %107, !dbg !79
  %109 = fadd float %76, %81, !dbg !80
  %110 = fadd float %109, %86, !dbg !81
  %111 = fadd float %110, %91, !dbg !82
  %112 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %111, float 4.000000e+00) #1, !dbg !83
  %113 = fadd float %112, 0.000000e+00, !dbg !84
  %114 = fadd float %108, %113, !dbg !85
  %115 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %114, float 4.000000e+00) #1, !dbg !86
  %116 = fsub float %96, %115, !dbg !87
  %117 = fmul float %116, %116, !dbg !88
  %118 = fsub float %101, %115, !dbg !89
  %119 = fmul float %118, %118, !dbg !90
  %120 = fadd float %117, %119, !dbg !91
  %121 = fsub float %107, %115, !dbg !92
  %122 = fmul float %121, %121, !dbg !93
  %123 = fadd float %122, %120, !dbg !94
  %124 = fsub float %113, %115, !dbg !95
  %125 = fmul float %124, %124, !dbg !96
  %126 = fadd float %125, %123, !dbg !97
  %127 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %126, float 4.000000e+00) #1, !dbg !98
  %128 = sext i32 %10 to i64, !dbg !99
  %129 = getelementptr float, ptr addrspace(1) %1, i64 %128, !dbg !99
  %130 = icmp eq i32 %8, 0, !dbg !100
  %131 = bitcast float %115 to i32, !dbg !100
  %132 = and i1 %130, %11, !dbg !100
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %131, ptr addrspace(1) %129, i1 %132) #1, !dbg !100
  %133 = getelementptr float, ptr addrspace(1) %2, i64 %128, !dbg !101
  %134 = bitcast float %127 to i32, !dbg !102
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %134, ptr addrspace(1) %133, i1 %132) #1, !dbg !102
  ret void, !dbg !103
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cae3shigxzpbq6yfhn77o6cvodg56sedcmqbtxjyxk773asr4vzh.py", directory: "inductor_cache/ae")
!4 = !{ptr @triton_poi_fused_add_mean_native_layer_norm_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mean_native_layer_norm_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mean_native_layer_norm_0", linkageName: "triton_poi_fused_add_mean_native_layer_norm_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 38, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 42, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 35, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 43, scope: !7)
!27 = !DILocation(line: 29, column: 35, scope: !7)
!28 = !DILocation(line: 29, column: 31, scope: !7)
!29 = !DILocation(line: 29, column: 43, scope: !7)
!30 = !DILocation(line: 30, column: 35, scope: !7)
!31 = !DILocation(line: 30, column: 31, scope: !7)
!32 = !DILocation(line: 30, column: 43, scope: !7)
!33 = !DILocation(line: 31, column: 35, scope: !7)
!34 = !DILocation(line: 31, column: 31, scope: !7)
!35 = !DILocation(line: 31, column: 43, scope: !7)
!36 = !DILocation(line: 32, column: 36, scope: !7)
!37 = !DILocation(line: 32, column: 31, scope: !7)
!38 = !DILocation(line: 32, column: 44, scope: !7)
!39 = !DILocation(line: 33, column: 35, scope: !7)
!40 = !DILocation(line: 33, column: 31, scope: !7)
!41 = !DILocation(line: 33, column: 43, scope: !7)
!42 = !DILocation(line: 34, column: 35, scope: !7)
!43 = !DILocation(line: 34, column: 31, scope: !7)
!44 = !DILocation(line: 34, column: 43, scope: !7)
!45 = !DILocation(line: 35, column: 36, scope: !7)
!46 = !DILocation(line: 35, column: 31, scope: !7)
!47 = !DILocation(line: 35, column: 44, scope: !7)
!48 = !DILocation(line: 36, column: 36, scope: !7)
!49 = !DILocation(line: 36, column: 31, scope: !7)
!50 = !DILocation(line: 36, column: 44, scope: !7)
!51 = !DILocation(line: 37, column: 35, scope: !7)
!52 = !DILocation(line: 37, column: 31, scope: !7)
!53 = !DILocation(line: 37, column: 43, scope: !7)
!54 = !DILocation(line: 38, column: 35, scope: !7)
!55 = !DILocation(line: 38, column: 31, scope: !7)
!56 = !DILocation(line: 38, column: 43, scope: !7)
!57 = !DILocation(line: 39, column: 36, scope: !7)
!58 = !DILocation(line: 39, column: 31, scope: !7)
!59 = !DILocation(line: 39, column: 44, scope: !7)
!60 = !DILocation(line: 40, column: 36, scope: !7)
!61 = !DILocation(line: 40, column: 31, scope: !7)
!62 = !DILocation(line: 40, column: 44, scope: !7)
!63 = !DILocation(line: 41, column: 18, scope: !7)
!64 = !DILocation(line: 42, column: 18, scope: !7)
!65 = !DILocation(line: 43, column: 18, scope: !7)
!66 = !DILocation(line: 45, column: 18, scope: !7)
!67 = !DILocation(line: 47, column: 19, scope: !7)
!68 = !DILocation(line: 48, column: 20, scope: !7)
!69 = !DILocation(line: 49, column: 20, scope: !7)
!70 = !DILocation(line: 50, column: 20, scope: !7)
!71 = !DILocation(line: 51, column: 20, scope: !7)
!72 = !DILocation(line: 52, column: 20, scope: !7)
!73 = !DILocation(line: 53, column: 20, scope: !7)
!74 = !DILocation(line: 54, column: 20, scope: !7)
!75 = !DILocation(line: 55, column: 20, scope: !7)
!76 = !DILocation(line: 56, column: 20, scope: !7)
!77 = !DILocation(line: 57, column: 20, scope: !7)
!78 = !DILocation(line: 58, column: 20, scope: !7)
!79 = !DILocation(line: 59, column: 20, scope: !7)
!80 = !DILocation(line: 60, column: 20, scope: !7)
!81 = !DILocation(line: 61, column: 20, scope: !7)
!82 = !DILocation(line: 62, column: 20, scope: !7)
!83 = !DILocation(line: 63, column: 20, scope: !7)
!84 = !DILocation(line: 64, column: 20, scope: !7)
!85 = !DILocation(line: 65, column: 20, scope: !7)
!86 = !DILocation(line: 66, column: 20, scope: !7)
!87 = !DILocation(line: 67, column: 20, scope: !7)
!88 = !DILocation(line: 68, column: 20, scope: !7)
!89 = !DILocation(line: 69, column: 20, scope: !7)
!90 = !DILocation(line: 70, column: 20, scope: !7)
!91 = !DILocation(line: 71, column: 20, scope: !7)
!92 = !DILocation(line: 72, column: 20, scope: !7)
!93 = !DILocation(line: 73, column: 20, scope: !7)
!94 = !DILocation(line: 74, column: 20, scope: !7)
!95 = !DILocation(line: 75, column: 20, scope: !7)
!96 = !DILocation(line: 76, column: 20, scope: !7)
!97 = !DILocation(line: 77, column: 20, scope: !7)
!98 = !DILocation(line: 78, column: 20, scope: !7)
!99 = !DILocation(line: 79, column: 25, scope: !7)
!100 = !DILocation(line: 79, column: 37, scope: !7)
!101 = !DILocation(line: 80, column: 25, scope: !7)
!102 = !DILocation(line: 80, column: 37, scope: !7)
!103 = !DILocation(line: 80, column: 4, scope: !7)
