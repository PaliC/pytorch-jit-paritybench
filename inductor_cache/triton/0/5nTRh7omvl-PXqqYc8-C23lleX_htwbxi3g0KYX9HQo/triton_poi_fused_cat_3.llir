; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, ptr addrspace(1) %12, ptr addrspace(1) %13, i32 %14) local_unnamed_addr !dbg !7 {
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %17 = shl i32 %16, 7, !dbg !11
  %18 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %19 = and i32 %18, 127, !dbg !12
  %20 = or disjoint i32 %17, %19, !dbg !13
  %21 = icmp slt i32 %20, 644, !dbg !14
  %.frozen = freeze i32 %20, !dbg !15
  %22 = sdiv i32 %.frozen, 161, !dbg !15
  %23 = mul i32 %22, 161, !dbg !16
  %.decomposed = sub i32 %.frozen, %23, !dbg !16
  %24 = icmp slt i32 %.decomposed, 4, !dbg !17
  %25 = mul nsw i32 %22, 161, !dbg !18
  %26 = add i32 %25, %.decomposed, !dbg !19
  %27 = sext i32 %26 to i64, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !20
  %29 = and i1 %21, %24, !dbg !21
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %29, i32 0, i1 %29) #1, !dbg !22
  %31 = add nsw i32 %.decomposed, -4, !dbg !23
  %32 = icmp ult i32 %31, 144, !dbg !23
  %33 = mul nsw i32 %22, 144, !dbg !24
  %34 = add nsw i32 %33, %31, !dbg !25
  %35 = sext i32 %34 to i64, !dbg !26
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !26
  %37 = and i1 %21, %32, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %37, i32 0, i1 %37) #1, !dbg !28
  %39 = bitcast i32 %38 to float, !dbg !28
  %40 = sext i32 %31 to i64, !dbg !29
  %41 = getelementptr float, ptr addrspace(1) %2, i64 %40, !dbg !29
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %37, i32 0, i1 %37) #1, !dbg !30
  %43 = bitcast i32 %42 to float, !dbg !30
  %44 = fadd float %39, %43, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %3, i64 %35, !dbg !32
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %37, i32 0, i1 %37) #1, !dbg !33
  %47 = bitcast i32 %46 to float, !dbg !33
  %48 = fadd float %43, %47, !dbg !34
  %49 = getelementptr float, ptr addrspace(1) %4, i64 %40, !dbg !35
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %37, i32 0, i1 %37) #1, !dbg !36
  %51 = bitcast i32 %50 to float, !dbg !36
  %52 = fadd float %48, %51, !dbg !37
  %53 = fadd float %44, %52, !dbg !38
  %54 = add nsw i32 %.decomposed, -148, !dbg !39
  %55 = icmp ult i32 %54, 10, !dbg !39
  %56 = mul nsw i32 %22, 10, !dbg !40
  %57 = add nsw i32 %56, %54, !dbg !41
  %58 = sext i32 %57 to i64, !dbg !42
  %59 = getelementptr float, ptr addrspace(1) %5, i64 %58, !dbg !42
  %60 = and i1 %21, %55, !dbg !43
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %60, i32 0, i1 %60) #1, !dbg !44
  %62 = bitcast i32 %61 to float, !dbg !44
  %63 = sext i32 %54 to i64, !dbg !45
  %64 = getelementptr float, ptr addrspace(1) %6, i64 %63, !dbg !45
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %60, i32 0, i1 %60) #1, !dbg !46
  %66 = bitcast i32 %65 to float, !dbg !46
  %67 = fadd float %62, %66, !dbg !47
  %68 = getelementptr float, ptr addrspace(1) %7, i64 %58, !dbg !48
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %60, i32 0, i1 %60) #1, !dbg !49
  %70 = bitcast i32 %69 to float, !dbg !49
  %71 = fadd float %66, %70, !dbg !50
  %72 = getelementptr float, ptr addrspace(1) %8, i64 %63, !dbg !51
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %60, i32 0, i1 %60) #1, !dbg !52
  %74 = bitcast i32 %73 to float, !dbg !52
  %75 = fadd float %71, %74, !dbg !53
  %76 = fadd float %67, %75, !dbg !54
  %77 = icmp sgt i32 %.decomposed, 157, !dbg !55
  %78 = mul nsw i32 %22, 3, !dbg !56
  %79 = add nsw i32 %.decomposed, -158, !dbg !57
  %80 = add nsw i32 %78, %79, !dbg !58
  %81 = sext i32 %80 to i64, !dbg !59
  %82 = getelementptr float, ptr addrspace(1) %9, i64 %81, !dbg !59
  %83 = and i1 %21, %77, !dbg !60
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %82, i1 %83, i32 0, i1 %83) #1, !dbg !61
  %85 = bitcast i32 %84 to float, !dbg !61
  %86 = sext i32 %79 to i64, !dbg !62
  %87 = getelementptr float, ptr addrspace(1) %10, i64 %86, !dbg !62
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %83, i32 0, i1 %83) #1, !dbg !63
  %89 = bitcast i32 %88 to float, !dbg !63
  %90 = fadd float %85, %89, !dbg !64
  %91 = getelementptr float, ptr addrspace(1) %11, i64 %81, !dbg !65
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %91, i1 %83, i32 0, i1 %83) #1, !dbg !66
  %93 = bitcast i32 %92 to float, !dbg !66
  %94 = fadd float %89, %93, !dbg !67
  %95 = getelementptr float, ptr addrspace(1) %12, i64 %86, !dbg !68
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %95, i1 %83, i32 0, i1 %83) #1, !dbg !69
  %97 = bitcast i32 %96 to float, !dbg !69
  %98 = fadd float %94, %97, !dbg !70
  %99 = fadd float %90, %98, !dbg !71
  %100 = select i1 %77, float %99, float 0.000000e+00, !dbg !72
  %101 = select i1 %55, float %76, float %100, !dbg !73
  %102 = select i1 %32, float %53, float %101, !dbg !73
  %103 = sext i32 %20 to i64, !dbg !74
  %104 = getelementptr float, ptr addrspace(1) %13, i64 %103, !dbg !74
  %105 = bitcast float %102 to i32, !dbg !75
  %106 = select i1 %24, i32 %30, i32 %105, !dbg !76
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %106, ptr addrspace(1) %104, i1 %21) #1, !dbg !75
  ret void, !dbg !77
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckmfmmiiosvr2msuaftf64dzad6jmo3756elwtxsukhdq5iva4hv.py", directory: "inductor_cache/km")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 40, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 53, scope: !7)
!22 = !DILocation(line: 32, column: 46, scope: !7)
!23 = !DILocation(line: 36, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 35, scope: !7)
!25 = !DILocation(line: 37, column: 41, scope: !7)
!26 = !DILocation(line: 37, column: 31, scope: !7)
!27 = !DILocation(line: 37, column: 61, scope: !7)
!28 = !DILocation(line: 37, column: 54, scope: !7)
!29 = !DILocation(line: 38, column: 31, scope: !7)
!30 = !DILocation(line: 38, column: 43, scope: !7)
!31 = !DILocation(line: 39, column: 20, scope: !7)
!32 = !DILocation(line: 40, column: 31, scope: !7)
!33 = !DILocation(line: 40, column: 54, scope: !7)
!34 = !DILocation(line: 41, column: 20, scope: !7)
!35 = !DILocation(line: 42, column: 31, scope: !7)
!36 = !DILocation(line: 42, column: 43, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 50, column: 20, scope: !7)
!40 = !DILocation(line: 51, column: 34, scope: !7)
!41 = !DILocation(line: 51, column: 40, scope: !7)
!42 = !DILocation(line: 51, column: 31, scope: !7)
!43 = !DILocation(line: 51, column: 63, scope: !7)
!44 = !DILocation(line: 51, column: 55, scope: !7)
!45 = !DILocation(line: 52, column: 31, scope: !7)
!46 = !DILocation(line: 52, column: 45, scope: !7)
!47 = !DILocation(line: 53, column: 20, scope: !7)
!48 = !DILocation(line: 54, column: 31, scope: !7)
!49 = !DILocation(line: 54, column: 55, scope: !7)
!50 = !DILocation(line: 55, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 31, scope: !7)
!52 = !DILocation(line: 56, column: 45, scope: !7)
!53 = !DILocation(line: 57, column: 20, scope: !7)
!54 = !DILocation(line: 58, column: 20, scope: !7)
!55 = !DILocation(line: 61, column: 20, scope: !7)
!56 = !DILocation(line: 64, column: 33, scope: !7)
!57 = !DILocation(line: 64, column: 48, scope: !7)
!58 = !DILocation(line: 64, column: 39, scope: !7)
!59 = !DILocation(line: 64, column: 31, scope: !7)
!60 = !DILocation(line: 64, column: 62, scope: !7)
!61 = !DILocation(line: 64, column: 54, scope: !7)
!62 = !DILocation(line: 65, column: 32, scope: !7)
!63 = !DILocation(line: 65, column: 46, scope: !7)
!64 = !DILocation(line: 66, column: 20, scope: !7)
!65 = !DILocation(line: 67, column: 32, scope: !7)
!66 = !DILocation(line: 67, column: 55, scope: !7)
!67 = !DILocation(line: 68, column: 20, scope: !7)
!68 = !DILocation(line: 69, column: 32, scope: !7)
!69 = !DILocation(line: 69, column: 46, scope: !7)
!70 = !DILocation(line: 70, column: 20, scope: !7)
!71 = !DILocation(line: 71, column: 20, scope: !7)
!72 = !DILocation(line: 73, column: 35, scope: !7)
!73 = !DILocation(line: 0, scope: !7)
!74 = !DILocation(line: 77, column: 25, scope: !7)
!75 = !DILocation(line: 77, column: 37, scope: !7)
!76 = !DILocation(line: 76, column: 33, scope: !7)
!77 = !DILocation(line: 77, column: 4, scope: !7)
