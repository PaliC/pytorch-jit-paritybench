#loc = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":38:37)
#loc34 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":43:25)
#loc49 = loc(callsite(#loc1 at #loc24))
#loc55 = loc(callsite(#loc1 at #loc34))
module {
  tt.func public @triton_per_fused__log_softmax_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0), %arg3: i32 loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1000> : tensor<8x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<100> : tensor<8x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<10> : tensor<8x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<10> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<400> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_4 : tensor<1x16xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_3 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_3 : tensor<8x1xi32> loc(#loc12)
    %12 = arith.remsi %11, %cst_3 : tensor<8x1xi32> loc(#loc13)
    %13 = arith.divsi %5, %cst_2 : tensor<8x1xi32> loc(#loc14)
    %14 = arith.muli %8, %cst_4 : tensor<1x16xi32> loc(#loc15)
    %15 = tt.broadcast %10 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc16)
    %16 = tt.broadcast %14 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<8x16xi32> loc(#loc16)
    %18 = arith.muli %11, %cst_2 : tensor<8x1xi32> loc(#loc17)
    %19 = tt.broadcast %18 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc18)
    %20 = arith.addi %17, %19 : tensor<8x16xi32> loc(#loc18)
    %21 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.addptr %21, %20 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc19)
    %23 = tt.broadcast %9 : tensor<1x16xi1> -> tensor<8x16xi1> loc(#loc20)
    %24 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc20)
    %25 = arith.andi %23, %24 : tensor<8x16xi1> loc(#loc20)
    %26 = tt.load %22, %25, %cst_1 : tensor<8x16x!tt.ptr<f32>> loc(#loc21)
    %27 = arith.select %25, %26, %cst_0 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc22)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc24)), %arg5: f32 loc(callsite(#loc1 at #loc24))):
      %51 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc57)
      %52 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc58)
      %53 = arith.ori %51, %52 : i1 loc(#loc59)
      %54 = arith.select %53, %arg4, %arg5 : f32 loc(#loc60)
      tt.reduce.return %54 : f32 loc(#loc48)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc48)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc29)
    %30 = tt.broadcast %29 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc30)
    %31 = arith.subf %26, %30 : tensor<8x16xf32> loc(#loc30)
    %32 = math.exp %31 : tensor<8x16xf32> loc(#loc31)
    %33 = arith.select %25, %32, %cst_1 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc32)
    %34 = "tt.reduce"(%33) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc34)), %arg5: f32 loc(callsite(#loc1 at #loc34))):
      %51 = arith.addf %arg4, %arg5 : f32 loc(#loc61)
      tt.reduce.return %51 : f32 loc(#loc54)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc54)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc36)
    %36 = math.log %35 : tensor<8x1xf32> loc(#loc37)
    %37 = tt.broadcast %36 : tensor<8x1xf32> -> tensor<8x16xf32> loc(#loc38)
    %38 = arith.subf %31, %37 : tensor<8x16xf32> loc(#loc38)
    %39 = arith.muli %12, %cst_3 : tensor<8x1xi32> loc(#loc39)
    %40 = tt.broadcast %8 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc40)
    %41 = tt.broadcast %39 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc40)
    %42 = arith.addi %40, %41 : tensor<8x16xi32> loc(#loc40)
    %43 = arith.muli %10, %cst_2 : tensor<8x1xi32> loc(#loc41)
    %44 = tt.broadcast %43 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc42)
    %45 = arith.addi %42, %44 : tensor<8x16xi32> loc(#loc42)
    %46 = arith.muli %13, %cst : tensor<8x1xi32> loc(#loc43)
    %47 = tt.broadcast %46 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc44)
    %48 = arith.addi %45, %47 : tensor<8x16xi32> loc(#loc44)
    %49 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc45)
    %50 = tt.addptr %49, %48 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc45)
    tt.store %50, %38, %25 : tensor<8x16x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":23:28)
#loc3 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":23:33)
#loc4 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":24:36)
#loc5 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":24:44)
#loc6 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":24:23)
#loc7 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":25:21)
#loc8 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":26:26)
#loc9 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":26:34)
#loc10 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":28:21)
#loc11 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":30:19)
#loc12 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":31:19)
#loc13 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":33:27)
#loc14 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":34:19)
#loc15 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:38)
#loc16 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:35)
#loc17 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:47)
#loc18 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:43)
#loc19 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:30)
#loc20 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:60)
#loc21 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":35:52)
#loc22 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":37:41)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc29 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":38:40)
#loc30 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":39:18)
#loc31 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":40:23)
#loc32 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":42:41)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc36 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":43:28)
#loc37 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":44:24)
#loc38 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":45:19)
#loc39 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:33)
#loc40 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:30)
#loc41 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:42)
#loc42 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:38)
#loc43 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:52)
#loc44 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:47)
#loc45 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:25)
#loc46 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:64)
#loc47 = loc("inductor_cache/l5/cl5qdgzbjrig5bbojivrthwbvd4i3ou5ysya2c2c7mpuf5mz4yjz.py":46:4)
#loc48 = loc(callsite(#loc23 at #loc24))
#loc50 = loc(callsite(#loc25 at #loc23))
#loc51 = loc(callsite(#loc26 at #loc23))
#loc52 = loc(callsite(#loc27 at #loc23))
#loc53 = loc(callsite(#loc28 at #loc23))
#loc54 = loc(callsite(#loc33 at #loc34))
#loc56 = loc(callsite(#loc35 at #loc33))
#loc57 = loc(callsite(#loc50 at #loc24))
#loc58 = loc(callsite(#loc51 at #loc24))
#loc59 = loc(callsite(#loc52 at #loc24))
#loc60 = loc(callsite(#loc53 at #loc24))
#loc61 = loc(callsite(#loc56 at #loc34))
