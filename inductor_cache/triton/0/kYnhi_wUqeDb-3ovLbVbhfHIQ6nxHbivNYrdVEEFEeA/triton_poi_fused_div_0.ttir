#loc = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":19:0)
module {
  tt.func public @triton_poi_fused_div_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":19:0), %arg3: i32 loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999996E-13> : tensor<1x32xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x32xi32> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<1x32xi32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<1x32xi32> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<1x32xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<4x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<4x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<1x32xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x32xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x32xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<1x32xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c4_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<4x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<4x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_5 : tensor<4x1xi32> loc(#loc13)
    %14 = arith.muli %12, %cst_4 : tensor<4x1xi32> loc(#loc14)
    %15 = arith.divsi %5, %cst_3 : tensor<1x32xi32> loc(#loc15)
    %16 = arith.muli %15, %cst_6 : tensor<1x32xi32> loc(#loc16)
    %17 = tt.broadcast %14 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc17)
    %18 = tt.broadcast %16 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc17)
    %19 = arith.addi %17, %18 : tensor<4x32xi32> loc(#loc17)
    %20 = arith.remsi %5, %cst_3 : tensor<1x32xi32> loc(#loc18)
    %21 = tt.broadcast %20 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc19)
    %22 = arith.addi %19, %21 : tensor<4x32xi32> loc(#loc19)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc20)
    %24 = tt.addptr %23, %22 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc20)
    %25 = tt.broadcast %13 : tensor<4x1xi1> -> tensor<4x32xi1> loc(#loc21)
    %26 = tt.broadcast %6 : tensor<1x32xi1> -> tensor<4x32xi1> loc(#loc21)
    %27 = arith.andi %25, %26 : tensor<4x32xi1> loc(#loc21)
    %28 = tt.load %24, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc22)
    %29 = arith.addi %16, %20 : tensor<1x32xi32> loc(#loc23)
    %30 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc24)
    %31 = tt.addptr %30, %29 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc24)
    %32 = tt.load %31, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc25)
    %33 = arith.addi %16, %cst_3 : tensor<1x32xi32> loc(#loc26)
    %34 = arith.addi %33, %20 : tensor<1x32xi32> loc(#loc27)
    %35 = tt.addptr %30, %34 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc28)
    %36 = tt.load %35, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc29)
    %37 = arith.addi %16, %cst_2 : tensor<1x32xi32> loc(#loc30)
    %38 = arith.addi %37, %20 : tensor<1x32xi32> loc(#loc31)
    %39 = tt.addptr %30, %38 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc32)
    %40 = tt.load %39, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc33)
    %41 = arith.addi %16, %cst_1 : tensor<1x32xi32> loc(#loc34)
    %42 = arith.addi %41, %20 : tensor<1x32xi32> loc(#loc35)
    %43 = tt.addptr %30, %42 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc36)
    %44 = tt.load %43, %6 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>> loc(#loc37)
    %45 = arith.mulf %32, %32 : tensor<1x32xf32> loc(#loc38)
    %46 = arith.mulf %36, %36 : tensor<1x32xf32> loc(#loc39)
    %47 = arith.addf %45, %46 : tensor<1x32xf32> loc(#loc40)
    %48 = arith.mulf %40, %40 : tensor<1x32xf32> loc(#loc41)
    %49 = arith.addf %47, %48 : tensor<1x32xf32> loc(#loc42)
    %50 = arith.mulf %44, %44 : tensor<1x32xf32> loc(#loc43)
    %51 = arith.addf %49, %50 : tensor<1x32xf32> loc(#loc44)
    %52 = tt.extern_elementwise %51 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x32xf32>) -> tensor<1x32xf32> loc(#loc45)
    %53 = arith.cmpf ogt, %52, %cst : tensor<1x32xf32> loc(#loc57)
    %54 = arith.cmpf une, %52, %52 : tensor<1x32xf32> loc(#loc58)
    %55 = arith.ori %53, %54 : tensor<1x32xi1> loc(#loc59)
    %56 = arith.select %55, %52, %cst : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc60)
    %57 = tt.broadcast %56 : tensor<1x32xf32> -> tensor<4x32xf32> loc(#loc51)
    %58 = arith.divf %28, %57 : tensor<4x32xf32> loc(#loc51)
    %59 = arith.muli %5, %cst_0 : tensor<1x32xi32> loc(#loc52)
    %60 = tt.broadcast %12 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc53)
    %61 = tt.broadcast %59 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc53)
    %62 = arith.addi %60, %61 : tensor<4x32xi32> loc(#loc53)
    %63 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc54)
    %64 = tt.addptr %63, %62 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc54)
    tt.store %64, %58, %27 : tensor<4x32x!tt.ptr<f32>> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":22:28)
#loc3 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":22:33)
#loc4 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":23:36)
#loc5 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":23:44)
#loc6 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":23:23)
#loc7 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":24:21)
#loc8 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":25:28)
#loc9 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":25:33)
#loc10 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":26:36)
#loc11 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":26:44)
#loc12 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":26:23)
#loc13 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":27:21)
#loc14 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:33)
#loc15 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:48)
#loc16 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:42)
#loc17 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:38)
#loc18 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:61)
#loc19 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:56)
#loc20 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:30)
#loc21 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:76)
#loc22 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":30:68)
#loc23 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":31:48)
#loc24 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":31:30)
#loc25 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":31:60)
#loc26 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":32:35)
#loc27 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":32:53)
#loc28 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":32:30)
#loc29 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":32:65)
#loc30 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":33:35)
#loc31 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":33:53)
#loc32 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":33:30)
#loc33 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":33:65)
#loc34 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":34:35)
#loc35 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":34:53)
#loc36 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":34:30)
#loc37 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":34:65)
#loc38 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":35:18)
#loc39 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":36:18)
#loc40 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":37:18)
#loc41 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":38:18)
#loc42 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":39:18)
#loc43 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":40:19)
#loc44 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":41:19)
#loc45 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":42:27)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc47 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":44:42)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc51 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":45:19)
#loc52 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":46:32)
#loc53 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":46:30)
#loc54 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":46:25)
#loc55 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":46:44)
#loc56 = loc("inductor_cache/w2/cw2hyq5zyi7artezfgfp7knkoodwk3q3p7ioevdc42fvetzd5drb.py":46:4)
#loc57 = loc(callsite(#loc46 at #loc47))
#loc58 = loc(callsite(#loc48 at #loc47))
#loc59 = loc(callsite(#loc49 at #loc47))
#loc60 = loc(callsite(#loc50 at #loc47))
