; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_leaky_relu_mul_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 256, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = srem i32 %12, 4, !dbg !16
  %14 = mul i32 %12, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %14, !dbg !17
  %15 = srem i32 %10, 4, !dbg !17
  %16 = sdiv i32 %9, 16, !dbg !18
  %17 = sitofp i32 %13 to float, !dbg !19
  %18 = fadd float %17, 5.000000e-01, !dbg !20
  %19 = fadd float %18, -5.000000e-01, !dbg !21
  %20 = fcmp ogt float %19, 0.000000e+00, !dbg !22
  %21 = select i1 %20, float %19, float 0.000000e+00, !dbg !26
  %22 = fptosi float %21 to i32, !dbg !27
  %23 = sitofp i32 %.decomposed to float, !dbg !28
  %24 = sitofp i32 %15 to float, !dbg !28
  %25 = fadd float %23, 5.000000e-01, !dbg !29
  %26 = fadd float %24, 5.000000e-01, !dbg !29
  %27 = fadd float %25, -5.000000e-01, !dbg !30
  %28 = fadd float %26, -5.000000e-01, !dbg !30
  %29 = fcmp ogt float %27, 0.000000e+00, !dbg !31
  %30 = fcmp ogt float %28, 0.000000e+00, !dbg !31
  %31 = select i1 %29, float %27, float 0.000000e+00, !dbg !33
  %32 = select i1 %30, float %28, float 0.000000e+00, !dbg !33
  %33 = fptosi float %31 to i32, !dbg !34
  %34 = fptosi float %32 to i32, !dbg !34
  %35 = sext i32 %33 to i64, !dbg !35
  %36 = sext i32 %34 to i64, !dbg !35
  %37 = tail call i64 @llvm.smin.i64(i64 %35, i64 2), !dbg !36
  %38 = tail call i64 @llvm.smin.i64(i64 %36, i64 2), !dbg !36
  %39 = shl i32 %22, 2, !dbg !38
  %40 = sext i32 %39 to i64, !dbg !39
  %41 = shl nsw i32 %16, 4, !dbg !40
  %42 = sext i32 %41 to i64, !dbg !41
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !42
  %44 = getelementptr i8, ptr addrspace(1) %43, i64 4, !dbg !42
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %40, !dbg !42
  %46 = getelementptr float, ptr addrspace(1) %45, i64 %42, !dbg !42
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !42
  %48 = getelementptr i8, ptr addrspace(1) %47, i64 4, !dbg !42
  %49 = getelementptr float, ptr addrspace(1) %48, i64 %40, !dbg !42
  %50 = getelementptr float, ptr addrspace(1) %49, i64 %42, !dbg !42
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %11) #2, !dbg !43
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %11) #2, !dbg !43
  %53 = add i32 %39, %41, !dbg !44
  %54 = add i32 %53, %33, !dbg !45
  %55 = add i32 %53, %34, !dbg !45
  %56 = sext i32 %54 to i64, !dbg !46
  %57 = getelementptr float, ptr addrspace(1) %1, i64 %56, !dbg !46
  %58 = sext i32 %55 to i64, !dbg !46
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !46
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %11) #2, !dbg !47
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %11) #2, !dbg !47
  %62 = tail call i32 @llvm.smin.i32(i32 %22, i32 2), !dbg !48
  %narrow = add nsw i32 %62, 1, !dbg !48
  %63 = sext i32 %narrow to i64, !dbg !48
  %64 = shl nsw i64 %63, 2, !dbg !50
  %65 = getelementptr float, ptr addrspace(1) %44, i64 %64, !dbg !51
  %66 = getelementptr float, ptr addrspace(1) %65, i64 %42, !dbg !51
  %67 = getelementptr float, ptr addrspace(1) %48, i64 %64, !dbg !51
  %68 = getelementptr float, ptr addrspace(1) %67, i64 %42, !dbg !51
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 %11) #2, !dbg !52
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %11) #2, !dbg !52
  %71 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !53
  %72 = getelementptr float, ptr addrspace(1) %71, i64 %35, !dbg !53
  %73 = getelementptr float, ptr addrspace(1) %72, i64 %42, !dbg !53
  %74 = getelementptr float, ptr addrspace(1) %71, i64 %36, !dbg !53
  %75 = getelementptr float, ptr addrspace(1) %74, i64 %42, !dbg !53
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %11) #2, !dbg !54
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %11) #2, !dbg !54
  %78 = sitofp i32 %33 to float, !dbg !55
  %79 = sitofp i32 %34 to float, !dbg !55
  %80 = fsub float %31, %78, !dbg !56
  %81 = fsub float %32, %79, !dbg !56
  %82 = fcmp ogt float %80, 0.000000e+00, !dbg !57
  %83 = fcmp ogt float %81, 0.000000e+00, !dbg !57
  %84 = select i1 %82, float %80, float 0.000000e+00, !dbg !59
  %85 = select i1 %83, float %81, float 0.000000e+00, !dbg !59
  %86 = fcmp olt float %84, 1.000000e+00, !dbg !60
  %87 = fcmp olt float %85, 1.000000e+00, !dbg !60
  %88 = select i1 %86, float %84, float 1.000000e+00, !dbg !62
  %89 = select i1 %87, float %85, float 1.000000e+00, !dbg !62
  %90 = insertelement <2 x i32> poison, i32 %69, i64 0, !dbg !52
  %91 = insertelement <2 x i32> %90, i32 %51, i64 1, !dbg !52
  %92 = bitcast <2 x i32> %91 to <2 x float>, !dbg !52
  %93 = fcmp ogt <2 x float> %92, zeroinitializer, !dbg !63
  %94 = fmul <2 x float> %92, splat (float 0x3FC99999A0000000), !dbg !64
  %95 = select <2 x i1> %93, <2 x float> %92, <2 x float> %94, !dbg !65
  %96 = insertelement <2 x i32> poison, i32 %76, i64 0, !dbg !54
  %97 = insertelement <2 x i32> %96, i32 %60, i64 1, !dbg !54
  %98 = bitcast <2 x i32> %97 to <2 x float>, !dbg !54
  %99 = fcmp ogt <2 x float> %98, zeroinitializer, !dbg !66
  %100 = fmul <2 x float> %98, splat (float 0x3FC99999A0000000), !dbg !67
  %101 = select <2 x i1> %99, <2 x float> %98, <2 x float> %100, !dbg !68
  %102 = fsub <2 x float> %95, %101, !dbg !69
  %103 = insertelement <2 x float> poison, float %88, i64 0, !dbg !70
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !70
  %105 = fmul <2 x float> %102, %104, !dbg !70
  %106 = fadd <2 x float> %101, %105, !dbg !71
  %107 = insertelement <2 x i32> poison, i32 %70, i64 0, !dbg !52
  %108 = insertelement <2 x i32> %107, i32 %52, i64 1, !dbg !52
  %109 = bitcast <2 x i32> %108 to <2 x float>, !dbg !52
  %110 = fcmp ogt <2 x float> %109, zeroinitializer, !dbg !63
  %111 = fmul <2 x float> %109, splat (float 0x3FC99999A0000000), !dbg !64
  %112 = select <2 x i1> %110, <2 x float> %109, <2 x float> %111, !dbg !65
  %113 = insertelement <2 x i32> poison, i32 %77, i64 0, !dbg !54
  %114 = insertelement <2 x i32> %113, i32 %61, i64 1, !dbg !54
  %115 = bitcast <2 x i32> %114 to <2 x float>, !dbg !54
  %116 = fcmp ogt <2 x float> %115, zeroinitializer, !dbg !66
  %117 = fmul <2 x float> %115, splat (float 0x3FC99999A0000000), !dbg !67
  %118 = select <2 x i1> %116, <2 x float> %115, <2 x float> %117, !dbg !68
  %119 = fsub <2 x float> %112, %118, !dbg !69
  %120 = insertelement <2 x float> poison, float %89, i64 0, !dbg !70
  %121 = shufflevector <2 x float> %120, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !70
  %122 = fmul <2 x float> %121, %119, !dbg !70
  %123 = fadd <2 x float> %118, %122, !dbg !71
  %124 = extractelement <2 x float> %106, i64 0, !dbg !72
  %125 = extractelement <2 x float> %106, i64 1, !dbg !73
  %126 = fsub float %124, %125, !dbg !72
  %127 = extractelement <2 x float> %123, i64 0, !dbg !72
  %128 = extractelement <2 x float> %123, i64 1, !dbg !73
  %129 = fsub float %127, %128, !dbg !72
  %130 = sitofp i32 %22 to float, !dbg !74
  %131 = fsub float %21, %130, !dbg !75
  %132 = fcmp ogt float %131, 0.000000e+00, !dbg !76
  %133 = select i1 %132, float %131, float 0.000000e+00, !dbg !78
  %134 = fcmp olt float %133, 1.000000e+00, !dbg !79
  %135 = select i1 %134, float %133, float 1.000000e+00, !dbg !81
  %136 = fmul float %135, %126, !dbg !82
  %137 = fmul float %129, %135, !dbg !82
  %138 = fadd float %125, %136, !dbg !73
  %139 = fadd float %128, %137, !dbg !73
  %140 = sext i32 %9 to i64, !dbg !83
  %141 = getelementptr float, ptr addrspace(1) %0, i64 %140, !dbg !83
  %142 = bitcast float %138 to i32, !dbg !84
  %143 = bitcast float %139 to i32, !dbg !84
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %142, i32 %143, ptr addrspace(1) %141, i1 %11) #2, !dbg !84
  ret void, !dbg !85
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chceld3qnllw7figer5r6fck7agziow7l76xaannrp3ob7biu7ui.py", directory: "inductor_cache/hc")
!4 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_leaky_relu_mul_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_leaky_relu_mul_sub_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_leaky_relu_mul_sub_0", linkageName: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_leaky_relu_mul_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 31, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 36, column: 40, scope: !7)
!26 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !25)
!27 = !DILocation(line: 37, column: 19, scope: !7)
!28 = !DILocation(line: 39, column: 21, scope: !7)
!29 = !DILocation(line: 40, column: 20, scope: !7)
!30 = !DILocation(line: 42, column: 20, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !32)
!32 = !DILocation(line: 43, column: 42, scope: !7)
!33 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !32)
!34 = !DILocation(line: 44, column: 21, scope: !7)
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !37)
!37 = !DILocation(line: 48, column: 42, scope: !7)
!38 = !DILocation(line: 49, column: 41, scope: !7)
!39 = !DILocation(line: 49, column: 39, scope: !7)
!40 = !DILocation(line: 49, column: 51, scope: !7)
!41 = !DILocation(line: 49, column: 48, scope: !7)
!42 = !DILocation(line: 49, column: 31, scope: !7)
!43 = !DILocation(line: 49, column: 56, scope: !7)
!44 = !DILocation(line: 54, column: 39, scope: !7)
!45 = !DILocation(line: 54, column: 48, scope: !7)
!46 = !DILocation(line: 54, column: 31, scope: !7)
!47 = !DILocation(line: 54, column: 56, scope: !7)
!48 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !49)
!49 = !DILocation(line: 60, column: 42, scope: !7)
!50 = !DILocation(line: 61, column: 41, scope: !7)
!51 = !DILocation(line: 61, column: 31, scope: !7)
!52 = !DILocation(line: 61, column: 57, scope: !7)
!53 = !DILocation(line: 65, column: 31, scope: !7)
!54 = !DILocation(line: 65, column: 57, scope: !7)
!55 = !DILocation(line: 70, column: 21, scope: !7)
!56 = !DILocation(line: 71, column: 20, scope: !7)
!57 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !58)
!58 = !DILocation(line: 72, column: 42, scope: !7)
!59 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !58)
!60 = !DILocation(line: 110, column: 15, scope: !23, inlinedAt: !61)
!61 = !DILocation(line: 73, column: 42, scope: !7)
!62 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !61)
!63 = !DILocation(line: 62, column: 20, scope: !7)
!64 = !DILocation(line: 63, column: 20, scope: !7)
!65 = !DILocation(line: 64, column: 35, scope: !7)
!66 = !DILocation(line: 66, column: 20, scope: !7)
!67 = !DILocation(line: 67, column: 20, scope: !7)
!68 = !DILocation(line: 68, column: 35, scope: !7)
!69 = !DILocation(line: 69, column: 20, scope: !7)
!70 = !DILocation(line: 74, column: 20, scope: !7)
!71 = !DILocation(line: 75, column: 20, scope: !7)
!72 = !DILocation(line: 78, column: 20, scope: !7)
!73 = !DILocation(line: 84, column: 20, scope: !7)
!74 = !DILocation(line: 79, column: 20, scope: !7)
!75 = !DILocation(line: 80, column: 19, scope: !7)
!76 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !77)
!77 = !DILocation(line: 81, column: 42, scope: !7)
!78 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !77)
!79 = !DILocation(line: 110, column: 15, scope: !23, inlinedAt: !80)
!80 = !DILocation(line: 82, column: 42, scope: !7)
!81 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !80)
!82 = !DILocation(line: 83, column: 20, scope: !7)
!83 = !DILocation(line: 85, column: 28, scope: !7)
!84 = !DILocation(line: 85, column: 40, scope: !7)
!85 = !DILocation(line: 85, column: 4, scope: !7)
