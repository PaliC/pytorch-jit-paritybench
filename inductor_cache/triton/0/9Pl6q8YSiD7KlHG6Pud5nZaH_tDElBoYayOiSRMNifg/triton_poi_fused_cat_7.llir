; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 16, !dbg !14
  %12 = srem i32 %11, 1024, !dbg !15
  %13 = mul i32 %11, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %.frozen1 = freeze i32 %10, !dbg !17
  %14 = sdiv i32 %.frozen1, 16384, !dbg !17
  %15 = icmp slt i32 %12, 512, !dbg !18
  %16 = mul i32 %14, 16384, !dbg !19
  %srem.decomposed = sub i32 %.frozen1, %16, !dbg !19
  %17 = shl nsw i32 %14, 13, !dbg !20
  %18 = add nsw i32 %17, %srem.decomposed, !dbg !21
  %19 = sext i32 %18 to i64, !dbg !22
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !22
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %20, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #1, !dbg !23
  %22 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !23
  %23 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !23
  %24 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !23
  %25 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !23
  %26 = bitcast i32 %22 to float, !dbg !23
  %27 = bitcast i32 %23 to float, !dbg !23
  %28 = bitcast i32 %24 to float, !dbg !23
  %29 = bitcast i32 %25 to float, !dbg !23
  %30 = fcmp ogt float %26, 0.000000e+00, !dbg !24
  %31 = fcmp ogt float %27, 0.000000e+00, !dbg !24
  %32 = fcmp ogt float %28, 0.000000e+00, !dbg !24
  %33 = fcmp ogt float %29, 0.000000e+00, !dbg !24
  %34 = fmul float %26, 0x3FC99999A0000000, !dbg !25
  %35 = fmul float %27, 0x3FC99999A0000000, !dbg !25
  %36 = fmul float %28, 0x3FC99999A0000000, !dbg !25
  %37 = fmul float %29, 0x3FC99999A0000000, !dbg !25
  %38 = select i1 %30, float %26, float %34, !dbg !26
  %39 = select i1 %31, float %27, float %35, !dbg !26
  %40 = select i1 %32, float %28, float %36, !dbg !26
  %41 = select i1 %33, float %29, float %37, !dbg !26
  %42 = icmp sgt i32 %12, 511, !dbg !27
  %43 = shl nsw i32 %12, 4, !dbg !28
  %44 = add nsw i32 %.decomposed, -8192, !dbg !28
  %45 = add nsw i32 %44, %17, !dbg !29
  %46 = add nsw i32 %45, %43, !dbg !30
  %47 = sext i32 %46 to i64, !dbg !31
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !31
  %49 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %48, i1 %42, i32 0, i1 %42, i32 0, i1 %42, i32 0, i1 %42, i32 0, i1 %42) #1, !dbg !32
  %50 = extractvalue { i32, i32, i32, i32 } %49, 0, !dbg !32
  %51 = extractvalue { i32, i32, i32, i32 } %49, 1, !dbg !32
  %52 = extractvalue { i32, i32, i32, i32 } %49, 2, !dbg !32
  %53 = extractvalue { i32, i32, i32, i32 } %49, 3, !dbg !32
  %54 = bitcast i32 %50 to float, !dbg !32
  %55 = bitcast i32 %51 to float, !dbg !32
  %56 = bitcast i32 %52 to float, !dbg !32
  %57 = bitcast i32 %53 to float, !dbg !32
  %58 = fcmp ogt float %54, 0.000000e+00, !dbg !33
  %59 = fcmp ogt float %55, 0.000000e+00, !dbg !33
  %60 = fcmp ogt float %56, 0.000000e+00, !dbg !33
  %61 = fcmp ogt float %57, 0.000000e+00, !dbg !33
  %62 = fmul float %54, 0x3FC99999A0000000, !dbg !34
  %63 = fmul float %55, 0x3FC99999A0000000, !dbg !34
  %64 = fmul float %56, 0x3FC99999A0000000, !dbg !34
  %65 = fmul float %57, 0x3FC99999A0000000, !dbg !34
  %66 = select i1 %58, float %54, float %62, !dbg !35
  %67 = select i1 %59, float %55, float %63, !dbg !35
  %68 = select i1 %60, float %56, float %64, !dbg !35
  %69 = select i1 %61, float %57, float %65, !dbg !35
  %70 = select i1 %15, float %38, float %66, !dbg !36
  %71 = select i1 %15, float %39, float %67, !dbg !36
  %72 = select i1 %15, float %40, float %68, !dbg !36
  %73 = select i1 %15, float %41, float %69, !dbg !36
  %74 = sext i32 %10 to i64, !dbg !37
  %75 = getelementptr float, ptr addrspace(1) %2, i64 %74, !dbg !37
  %76 = bitcast float %70 to i32, !dbg !38
  %77 = bitcast float %71 to i32, !dbg !38
  %78 = bitcast float %72 to i32, !dbg !38
  %79 = bitcast float %73 to i32, !dbg !38
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %76, i32 %77, i32 %78, i32 %79, ptr addrspace(1) %75, i1 true) #1, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctcj5vfmkpdgqmssumlog7q3sxle5swzhj76y5raaouggsdjapl2.py", directory: "inductor_cache/tc")
!4 = !{ptr @triton_poi_fused_cat_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_7", linkageName: "triton_poi_fused_cat_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 50, scope: !7)
!21 = !DILocation(line: 33, column: 45, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 55, scope: !7)
!24 = !DILocation(line: 35, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 33, scope: !7)
!27 = !DILocation(line: 41, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 40, scope: !7)
!29 = !DILocation(line: 44, column: 36, scope: !7)
!30 = !DILocation(line: 44, column: 55, scope: !7)
!31 = !DILocation(line: 44, column: 31, scope: !7)
!32 = !DILocation(line: 44, column: 65, scope: !7)
!33 = !DILocation(line: 46, column: 20, scope: !7)
!34 = !DILocation(line: 48, column: 20, scope: !7)
!35 = !DILocation(line: 49, column: 35, scope: !7)
!36 = !DILocation(line: 0, scope: !7)
!37 = !DILocation(line: 53, column: 25, scope: !7)
!38 = !DILocation(line: 53, column: 37, scope: !7)
!39 = !DILocation(line: 53, column: 4, scope: !7)
