; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_abs_div_isnan_lt_mul_pow_sub_where_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %11) #2, !dbg !16
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !16
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = bitcast i32 %16 to float, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %11) #2, !dbg !18
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not.i = icmp eq i32 %25, 0, !dbg !19
  %26 = tail call float @llvm.nvvm.fabs.ftz.f(float %23) #2, !dbg !19
  %27 = tail call float @llvm.nvvm.fabs.f(float %23) #2, !dbg !19
  %.0.i = select i1 %.not.i, float %27, float %26, !dbg !19
  %28 = fcmp ord float %.0.i, 0.000000e+00, !dbg !19
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not.i2 = icmp eq i32 %29, 0, !dbg !19
  %30 = tail call float @llvm.nvvm.fabs.ftz.f(float %24) #2, !dbg !19
  %31 = tail call float @llvm.nvvm.fabs.f(float %24) #2, !dbg !19
  %.0.i3 = select i1 %.not.i2, float %31, float %30, !dbg !19
  %32 = fcmp ord float %.0.i3, 0.000000e+00, !dbg !19
  %33 = select i1 %28, float %23, float %17, !dbg !20
  %34 = select i1 %32, float %24, float %18, !dbg !20
  %35 = fsub float %17, %33, !dbg !21
  %36 = fsub float %18, %34, !dbg !21
  %37 = tail call float @llvm.fabs.f32(float %35), !dbg !22
  %38 = tail call float @llvm.fabs.f32(float %36), !dbg !22
  %39 = fcmp olt float %37, 0x3FBC71C720000000, !dbg !23
  %40 = fcmp olt float %38, 0x3FBC71C720000000, !dbg !23
  %41 = fmul float %35, %35, !dbg !24
  %42 = fmul float %36, %36, !dbg !24
  %43 = fmul float %41, 5.000000e-01, !dbg !25
  %44 = fmul float %42, 5.000000e-01, !dbg !25
  %45 = fmul float %43, 9.000000e+00, !dbg !26
  %46 = fmul float %44, 9.000000e+00, !dbg !26
  %47 = fadd float %37, 0xBFAC71C720000000, !dbg !27
  %48 = fadd float %38, 0xBFAC71C720000000, !dbg !27
  %49 = select i1 %39, float %45, float %47, !dbg !28
  %50 = select i1 %40, float %46, float %48, !dbg !28
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !29
  %52 = bitcast float %49 to i32, !dbg !30
  %53 = bitcast float %50 to i32, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %52, i32 %53, ptr addrspace(1) %51, i1 %11) #2, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ct4m4d32b3ipvdubnbnkovp7t7fl545otsjboahapkedotalrdg4.py", directory: "inductor_cache/t4")
!4 = !{ptr @triton_poi_fused_abs_div_isnan_lt_mul_pow_sub_where_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_div_isnan_lt_mul_pow_sub_where_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_div_isnan_lt_mul_pow_sub_where_0", linkageName: "triton_poi_fused_abs_div_isnan_lt_mul_pow_sub_where_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 27, scope: !7)
!20 = !DILocation(line: 28, column: 32, scope: !7)
!21 = !DILocation(line: 29, column: 18, scope: !7)
!22 = !DILocation(line: 30, column: 23, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 35, column: 19, scope: !7)
!26 = !DILocation(line: 37, column: 20, scope: !7)
!27 = !DILocation(line: 39, column: 19, scope: !7)
!28 = !DILocation(line: 40, column: 34, scope: !7)
!29 = !DILocation(line: 41, column: 25, scope: !7)
!30 = !DILocation(line: 41, column: 37, scope: !7)
!31 = !DILocation(line: 41, column: 4, scope: !7)
