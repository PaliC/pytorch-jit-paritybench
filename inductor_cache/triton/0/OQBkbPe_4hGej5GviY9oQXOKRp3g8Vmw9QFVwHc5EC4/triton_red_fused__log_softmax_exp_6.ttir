#loc = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":36:38)
#loc40 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":49:25)
#loc66 = loc(callsite(#loc1 at #loc22))
#loc72 = loc(callsite(#loc1 at #loc40))
module {
  tt.func public @triton_red_fused__log_softmax_exp_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":19:0)) attributes {noinline = false} {
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4672_i32 = arith.constant 4672 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4672> : tensor<1x2048xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.muli %0, %c4672_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2048xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc9)
    %9 = scf.for %arg6 = %c0_i32 to %c4672_i32 step %c2048_i32 iter_args(%arg7 = %cst_1) -> (tensor<1x2048xf32>)  : i32 {
      %32 = tt.splat %arg6 : i32 -> tensor<1x2048xi32> loc(#loc11)
      %33 = arith.addi %32, %4 : tensor<1x2048xi32> loc(#loc11)
      %34 = arith.cmpi slt, %33, %cst_0 : tensor<1x2048xi32> loc(#loc12)
      %35 = arith.addi %33, %6 : tensor<1x2048xi32> loc(#loc7)
      %36 = tt.addptr %7, %35 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc8)
      %37 = arith.andi %34, %8 : tensor<1x2048xi1> loc(#loc9)
      %38 = tt.load %36, %37, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc13)
      %39 = arith.cmpf ogt, %arg7, %38 : tensor<1x2048xf32> loc(#loc61)
      %40 = arith.cmpf une, %arg7, %arg7 : tensor<1x2048xf32> loc(#loc62)
      %41 = arith.ori %39, %40 : tensor<1x2048xi1> loc(#loc63)
      %42 = arith.select %41, %arg7, %38 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc64)
      %43 = arith.select %37, %42, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc19)
      scf.yield %43 : tensor<1x2048xf32> loc(#loc20)
    } loc(#loc10)
    %10 = "tt.reduce"(%9) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc22)), %arg7: f32 loc(callsite(#loc1 at #loc22))):
      %32 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc74)
      %33 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc75)
      %34 = arith.ori %32, %33 : i1 loc(#loc76)
      %35 = arith.select %34, %arg6, %arg7 : f32 loc(#loc77)
      tt.reduce.return %35 : f32 loc(#loc65)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc65)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc23)
    %12 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc24)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    tt.store %13, %11, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    %14 = arith.muli %0, %c4672_i32 : i32 loc(#loc26)
    %15 = tt.splat %14 : i32 -> tensor<1x2048xi32> loc(#loc27)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc28)
    %17 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc29)
    %18 = tt.broadcast %11 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc30)
    %19 = scf.for %arg6 = %c0_i32 to %c4672_i32 step %c2048_i32 iter_args(%arg7 = %cst) -> (tensor<1x2048xf32>)  : i32 {
      %32 = tt.splat %arg6 : i32 -> tensor<1x2048xi32> loc(#loc32)
      %33 = arith.addi %32, %4 : tensor<1x2048xi32> loc(#loc32)
      %34 = arith.cmpi slt, %33, %cst_0 : tensor<1x2048xi32> loc(#loc33)
      %35 = arith.addi %33, %15 : tensor<1x2048xi32> loc(#loc27)
      %36 = tt.addptr %16, %35 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc28)
      %37 = arith.andi %34, %17 : tensor<1x2048xi1> loc(#loc29)
      %38 = tt.load %36, %37, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc34)
      %39 = arith.subf %38, %18 : tensor<1x2048xf32> loc(#loc30)
      %40 = math.exp %39 : tensor<1x2048xf32> loc(#loc35)
      %41 = arith.addf %arg7, %40 : tensor<1x2048xf32> loc(#loc36)
      %42 = arith.select %37, %41, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc37)
      scf.yield %42 : tensor<1x2048xf32> loc(#loc38)
    } loc(#loc31)
    %20 = "tt.reduce"(%19) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc40)), %arg7: f32 loc(callsite(#loc1 at #loc40))):
      %32 = arith.addf %arg6, %arg7 : f32 loc(#loc78)
      tt.reduce.return %32 : f32 loc(#loc71)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc71)
    %21 = tt.expand_dims %20 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc42)
    %22 = math.log %21 : tensor<1x1xf32> loc(#loc43)
    gpu.barrier loc(#loc44)
    %23 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc45)
    %24 = tt.splat %23 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    tt.store %24, %22, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    %25 = arith.muli %0, %c4672_i32 : i32 loc(#loc47)
    %26 = tt.splat %25 : i32 -> tensor<1x2048xi32> loc(#loc48)
    %27 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc49)
    %28 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc50)
    %29 = tt.broadcast %11 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc51)
    %30 = tt.broadcast %22 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc52)
    %31 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc53)
    scf.for %arg6 = %c0_i32 to %c4672_i32 step %c2048_i32  : i32 {
      %32 = tt.splat %arg6 : i32 -> tensor<1x2048xi32> loc(#loc55)
      %33 = arith.addi %32, %4 : tensor<1x2048xi32> loc(#loc55)
      %34 = arith.cmpi slt, %33, %cst_0 : tensor<1x2048xi32> loc(#loc56)
      %35 = arith.addi %33, %26 : tensor<1x2048xi32> loc(#loc48)
      %36 = tt.addptr %27, %35 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc49)
      %37 = arith.andi %34, %28 : tensor<1x2048xi1> loc(#loc50)
      %38 = tt.load %36, %37, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc57)
      %39 = arith.subf %38, %29 : tensor<1x2048xf32> loc(#loc51)
      %40 = arith.subf %39, %30 : tensor<1x2048xf32> loc(#loc52)
      %41 = math.exp %40 : tensor<1x2048xf32> loc(#loc58)
      %42 = tt.addptr %31, %35 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc53)
      tt.store %42, %41, %37 : tensor<1x2048x!tt.ptr<f32>> loc(#loc59)
    } loc(#loc54)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":22:28)
#loc3 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":24:21)
#loc4 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":25:25)
#loc5 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":25:33)
#loc6 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":32:44)
#loc7 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":32:39)
#loc8 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":32:34)
#loc9 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":32:57)
#loc10 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":28:36)
#loc11 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":29:27)
#loc12 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":30:25)
#loc13 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":32:49)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc15 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":34:45)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc19 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":35:46)
#loc20 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":35:8)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc23 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":36:41)
#loc24 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":37:25)
#loc25 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":37:36)
#loc26 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":43:44)
#loc27 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":43:39)
#loc28 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":43:34)
#loc29 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":43:57)
#loc30 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":44:22)
#loc31 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":39:36)
#loc32 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":40:27)
#loc33 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":41:25)
#loc34 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":43:49)
#loc35 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":45:27)
#loc36 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":47:23)
#loc37 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":48:46)
#loc38 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":48:8)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc42 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":49:28)
#loc43 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":50:24)
#loc44 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":51:4)
#loc45 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":52:28)
#loc46 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":52:40)
#loc47 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":57:45)
#loc48 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":57:40)
#loc49 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":57:35)
#loc50 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":57:58)
#loc51 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":58:24)
#loc52 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":59:24)
#loc53 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":61:29)
#loc54 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":53:36)
#loc55 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":54:27)
#loc56 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":55:25)
#loc57 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":57:50)
#loc58 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":60:28)
#loc59 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":61:51)
#loc60 = loc("inductor_cache/ik/cik6q3p5wkfild6aohqu7dzm6eexarcyhbmu3an7gpxlugofmo2n.py":53:4)
#loc61 = loc(callsite(#loc14 at #loc15))
#loc62 = loc(callsite(#loc16 at #loc15))
#loc63 = loc(callsite(#loc17 at #loc15))
#loc64 = loc(callsite(#loc18 at #loc15))
#loc65 = loc(callsite(#loc21 at #loc22))
#loc67 = loc(callsite(#loc14 at #loc21))
#loc68 = loc(callsite(#loc16 at #loc21))
#loc69 = loc(callsite(#loc17 at #loc21))
#loc70 = loc(callsite(#loc18 at #loc21))
#loc71 = loc(callsite(#loc39 at #loc40))
#loc73 = loc(callsite(#loc41 at #loc39))
#loc74 = loc(callsite(#loc67 at #loc22))
#loc75 = loc(callsite(#loc68 at #loc22))
#loc76 = loc(callsite(#loc69 at #loc22))
#loc77 = loc(callsite(#loc70 at #loc22))
#loc78 = loc(callsite(#loc73 at #loc40))
