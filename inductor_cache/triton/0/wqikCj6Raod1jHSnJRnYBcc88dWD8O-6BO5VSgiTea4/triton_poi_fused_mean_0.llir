; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mean_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 16, !dbg !12
  %8 = and i32 %6, 15, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 16, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 4, !dbg !15
  %12 = mul i32 %11, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = shl i32 %9, 4, !dbg !17
  %14 = sext i32 %13 to i64, !dbg !18
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !18
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %10) #1, !dbg !19
  %17 = bitcast i32 %16 to float, !dbg !19
  %18 = or disjoint i32 %13, 1, !dbg !20
  %19 = sext i32 %18 to i64, !dbg !21
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %10) #1, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = or disjoint i32 %13, 2, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %10) #1, !dbg !25
  %27 = bitcast i32 %26 to float, !dbg !25
  %28 = or disjoint i32 %13, 3, !dbg !26
  %29 = sext i32 %28 to i64, !dbg !27
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !27
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %10) #1, !dbg !28
  %32 = bitcast i32 %31 to float, !dbg !28
  %33 = or disjoint i32 %13, 4, !dbg !29
  %34 = sext i32 %33 to i64, !dbg !30
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !30
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %10) #1, !dbg !31
  %37 = bitcast i32 %36 to float, !dbg !31
  %38 = or disjoint i32 %13, 5, !dbg !32
  %39 = sext i32 %38 to i64, !dbg !33
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !33
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !34
  %42 = bitcast i32 %41 to float, !dbg !34
  %43 = or disjoint i32 %13, 6, !dbg !35
  %44 = sext i32 %43 to i64, !dbg !36
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !36
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %10) #1, !dbg !37
  %47 = bitcast i32 %46 to float, !dbg !37
  %48 = or disjoint i32 %13, 7, !dbg !38
  %49 = sext i32 %48 to i64, !dbg !39
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !39
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %10) #1, !dbg !40
  %52 = bitcast i32 %51 to float, !dbg !40
  %53 = or disjoint i32 %13, 8, !dbg !41
  %54 = sext i32 %53 to i64, !dbg !42
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !42
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %10) #1, !dbg !43
  %57 = bitcast i32 %56 to float, !dbg !43
  %58 = or disjoint i32 %13, 9, !dbg !44
  %59 = sext i32 %58 to i64, !dbg !45
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !45
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %10) #1, !dbg !46
  %62 = bitcast i32 %61 to float, !dbg !46
  %63 = or disjoint i32 %13, 10, !dbg !47
  %64 = sext i32 %63 to i64, !dbg !48
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !48
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %10) #1, !dbg !49
  %67 = bitcast i32 %66 to float, !dbg !49
  %68 = or disjoint i32 %13, 11, !dbg !50
  %69 = sext i32 %68 to i64, !dbg !51
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !51
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 %10) #1, !dbg !52
  %72 = bitcast i32 %71 to float, !dbg !52
  %73 = or disjoint i32 %13, 12, !dbg !53
  %74 = sext i32 %73 to i64, !dbg !54
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !54
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %10) #1, !dbg !55
  %77 = bitcast i32 %76 to float, !dbg !55
  %78 = or disjoint i32 %13, 13, !dbg !56
  %79 = sext i32 %78 to i64, !dbg !57
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !57
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %10) #1, !dbg !58
  %82 = bitcast i32 %81 to float, !dbg !58
  %83 = or disjoint i32 %13, 14, !dbg !59
  %84 = sext i32 %83 to i64, !dbg !60
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !60
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 %10) #1, !dbg !61
  %87 = bitcast i32 %86 to float, !dbg !61
  %88 = or disjoint i32 %13, 15, !dbg !62
  %89 = sext i32 %88 to i64, !dbg !63
  %90 = getelementptr float, ptr addrspace(1) %0, i64 %89, !dbg !63
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %90, i1 %10) #1, !dbg !64
  %92 = bitcast i32 %91 to float, !dbg !64
  %93 = fadd float %17, %22, !dbg !65
  %94 = fadd float %93, %27, !dbg !66
  %95 = fadd float %94, %32, !dbg !67
  %96 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %95, float 4.000000e+00) #1, !dbg !68
  %97 = fadd float %37, %42, !dbg !69
  %98 = fadd float %97, %47, !dbg !70
  %99 = fadd float %98, %52, !dbg !71
  %100 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %99, float 4.000000e+00) #1, !dbg !72
  %101 = fadd float %96, %100, !dbg !73
  %102 = fadd float %57, %62, !dbg !74
  %103 = fadd float %102, %67, !dbg !75
  %104 = fadd float %103, %72, !dbg !76
  %105 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %104, float 4.000000e+00) #1, !dbg !77
  %106 = fadd float %101, %105, !dbg !78
  %107 = fadd float %77, %82, !dbg !79
  %108 = fadd float %107, %87, !dbg !80
  %109 = fadd float %108, %92, !dbg !81
  %110 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %109, float 4.000000e+00) #1, !dbg !82
  %111 = fadd float %106, %110, !dbg !83
  %112 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %111, float 4.000000e+00) #1, !dbg !84
  %113 = mul i32 %11, 161, !dbg !85
  %114 = add i32 %113, %.decomposed, !dbg !86
  %115 = sext i32 %114 to i64, !dbg !87
  %116 = getelementptr float, ptr addrspace(1) %1, i64 %115, !dbg !87
  %117 = icmp eq i32 %7, 0, !dbg !88
  %118 = bitcast float %112 to i32, !dbg !88
  %119 = and i1 %117, %10, !dbg !88
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %118, ptr addrspace(1) %116, i1 %119) #1, !dbg !88
  ret void, !dbg !89
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbqdb4r55v4dfu7yp23w475k3vxnxmyd7uikkm7k555tgnba5n6g.py", directory: "inductor_cache/bq")
!4 = !{ptr @triton_poi_fused_mean_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_0", linkageName: "triton_poi_fused_mean_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 33, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 42, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 42, scope: !7)
!26 = !DILocation(line: 30, column: 34, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 42, scope: !7)
!29 = !DILocation(line: 31, column: 34, scope: !7)
!30 = !DILocation(line: 31, column: 30, scope: !7)
!31 = !DILocation(line: 31, column: 42, scope: !7)
!32 = !DILocation(line: 32, column: 35, scope: !7)
!33 = !DILocation(line: 32, column: 31, scope: !7)
!34 = !DILocation(line: 32, column: 43, scope: !7)
!35 = !DILocation(line: 33, column: 35, scope: !7)
!36 = !DILocation(line: 33, column: 31, scope: !7)
!37 = !DILocation(line: 33, column: 43, scope: !7)
!38 = !DILocation(line: 34, column: 35, scope: !7)
!39 = !DILocation(line: 34, column: 31, scope: !7)
!40 = !DILocation(line: 34, column: 43, scope: !7)
!41 = !DILocation(line: 35, column: 35, scope: !7)
!42 = !DILocation(line: 35, column: 31, scope: !7)
!43 = !DILocation(line: 35, column: 43, scope: !7)
!44 = !DILocation(line: 36, column: 35, scope: !7)
!45 = !DILocation(line: 36, column: 31, scope: !7)
!46 = !DILocation(line: 36, column: 43, scope: !7)
!47 = !DILocation(line: 37, column: 36, scope: !7)
!48 = !DILocation(line: 37, column: 31, scope: !7)
!49 = !DILocation(line: 37, column: 44, scope: !7)
!50 = !DILocation(line: 38, column: 36, scope: !7)
!51 = !DILocation(line: 38, column: 31, scope: !7)
!52 = !DILocation(line: 38, column: 44, scope: !7)
!53 = !DILocation(line: 39, column: 36, scope: !7)
!54 = !DILocation(line: 39, column: 31, scope: !7)
!55 = !DILocation(line: 39, column: 44, scope: !7)
!56 = !DILocation(line: 40, column: 36, scope: !7)
!57 = !DILocation(line: 40, column: 31, scope: !7)
!58 = !DILocation(line: 40, column: 44, scope: !7)
!59 = !DILocation(line: 41, column: 36, scope: !7)
!60 = !DILocation(line: 41, column: 31, scope: !7)
!61 = !DILocation(line: 41, column: 44, scope: !7)
!62 = !DILocation(line: 42, column: 36, scope: !7)
!63 = !DILocation(line: 42, column: 31, scope: !7)
!64 = !DILocation(line: 42, column: 44, scope: !7)
!65 = !DILocation(line: 43, column: 18, scope: !7)
!66 = !DILocation(line: 44, column: 18, scope: !7)
!67 = !DILocation(line: 45, column: 18, scope: !7)
!68 = !DILocation(line: 47, column: 18, scope: !7)
!69 = !DILocation(line: 48, column: 19, scope: !7)
!70 = !DILocation(line: 49, column: 20, scope: !7)
!71 = !DILocation(line: 50, column: 20, scope: !7)
!72 = !DILocation(line: 51, column: 20, scope: !7)
!73 = !DILocation(line: 52, column: 19, scope: !7)
!74 = !DILocation(line: 53, column: 20, scope: !7)
!75 = !DILocation(line: 54, column: 20, scope: !7)
!76 = !DILocation(line: 55, column: 20, scope: !7)
!77 = !DILocation(line: 56, column: 20, scope: !7)
!78 = !DILocation(line: 57, column: 20, scope: !7)
!79 = !DILocation(line: 58, column: 20, scope: !7)
!80 = !DILocation(line: 59, column: 20, scope: !7)
!81 = !DILocation(line: 60, column: 20, scope: !7)
!82 = !DILocation(line: 61, column: 20, scope: !7)
!83 = !DILocation(line: 62, column: 20, scope: !7)
!84 = !DILocation(line: 63, column: 20, scope: !7)
!85 = !DILocation(line: 64, column: 34, scope: !7)
!86 = !DILocation(line: 64, column: 30, scope: !7)
!87 = !DILocation(line: 64, column: 25, scope: !7)
!88 = !DILocation(line: 64, column: 46, scope: !7)
!89 = !DILocation(line: 64, column: 4, scope: !7)
