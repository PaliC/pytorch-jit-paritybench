; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_33(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 7, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 127, !dbg !12
  %11 = or disjoint i32 %8, %10, !dbg !13
  %12 = icmp slt i32 %11, 14336, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = srem i32 %13, 224, !dbg !16
  %15 = mul i32 %13, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %15, !dbg !17
  %.frozen7 = freeze i32 %11, !dbg !18
  %16 = sdiv i32 %.frozen7, 3584, !dbg !18
  %17 = icmp slt i32 %14, 128, !dbg !19
  %18 = mul i32 %16, 3584, !dbg !20
  %srem.decomposed = sub i32 %.frozen7, %18, !dbg !20
  %19 = shl nsw i32 %16, 11, !dbg !21
  %20 = add nsw i32 %19, %srem.decomposed, !dbg !22
  %21 = sdiv i32 %20, 2048, !dbg !23
  %22 = srem i32 %21, 4, !dbg !24
  %23 = shl nsw i32 %22, 11, !dbg !25
  %.lhs.trunc = trunc nsw i32 %srem.decomposed to i16, !dbg !26
  %24 = srem i16 %.lhs.trunc, 2048, !dbg !26
  %.sext = sext i16 %24 to i32, !dbg !26
  %25 = add nsw i32 %23, %.sext, !dbg !27
  %26 = sext i32 %25 to i64, !dbg !28
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !28
  %28 = and i1 %12, %17, !dbg !29
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #1, !dbg !30
  %30 = bitcast i32 %29 to float, !dbg !30
  %31 = srem i16 %.lhs.trunc, 32, !dbg !31
  %32 = sext i16 %31 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !32
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %28, i32 0, i1 %28) #1, !dbg !33
  %35 = bitcast i32 %34 to float, !dbg !33
  %36 = fadd float %30, %35, !dbg !34
  %37 = icmp sgt i32 %14, 127, !dbg !35
  %38 = shl nsw i32 %14, 4, !dbg !36
  %39 = add nsw i32 %.decomposed, -2048, !dbg !36
  %40 = add nsw i32 %39, %38, !dbg !37
  %41 = mul nsw i32 %16, 1536, !dbg !38
  %42 = add nsw i32 %40, %41, !dbg !39
  %43 = sdiv i32 %42, 1536, !dbg !40
  %44 = srem i32 %43, 4, !dbg !41
  %45 = mul nsw i32 %44, 1536, !dbg !42
  %.lhs.trunc3 = trunc nsw i32 %40 to i16, !dbg !43
  %46 = srem i16 %.lhs.trunc3, 1536, !dbg !43
  %.sext4 = sext i16 %46 to i32, !dbg !43
  %47 = add nsw i32 %45, %.sext4, !dbg !44
  %48 = sext i32 %47 to i64, !dbg !45
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !45
  %50 = and i1 %12, %37, !dbg !46
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %50, i32 0, i1 %50) #1, !dbg !47
  %52 = bitcast i32 %51 to float, !dbg !47
  %53 = srem i16 %.lhs.trunc3, 96, !dbg !48
  %54 = sext i16 %53 to i64, !dbg !49
  %55 = getelementptr float, ptr addrspace(1) %3, i64 %54, !dbg !49
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %50, i32 0, i1 %50) #1, !dbg !50
  %57 = bitcast i32 %56 to float, !dbg !50
  %58 = fadd float %52, %57, !dbg !51
  %59 = select i1 %17, float %36, float %58, !dbg !52
  %60 = sext i32 %11 to i64, !dbg !53
  %61 = getelementptr float, ptr addrspace(1) %4, i64 %60, !dbg !53
  %62 = bitcast float %59 to i32, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %62, ptr addrspace(1) %61, i1 %12) #1, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cquwzjux752ghr2uwny36kfyzzcksx5mwht4e5yf5nl3fvvglt53.py", directory: "inductor_cache/qu")
!4 = !{ptr @triton_poi_fused_cat_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_33, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_33", linkageName: "triton_poi_fused_cat_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 44, scope: !7)
!21 = !DILocation(line: 33, column: 59, scope: !7)
!22 = !DILocation(line: 33, column: 54, scope: !7)
!23 = !DILocation(line: 33, column: 66, scope: !7)
!24 = !DILocation(line: 33, column: 74, scope: !7)
!25 = !DILocation(line: 33, column: 37, scope: !7)
!26 = !DILocation(line: 33, column: 99, scope: !7)
!27 = !DILocation(line: 33, column: 82, scope: !7)
!28 = !DILocation(line: 33, column: 30, scope: !7)
!29 = !DILocation(line: 33, column: 115, scope: !7)
!30 = !DILocation(line: 33, column: 108, scope: !7)
!31 = !DILocation(line: 34, column: 48, scope: !7)
!32 = !DILocation(line: 34, column: 31, scope: !7)
!33 = !DILocation(line: 34, column: 54, scope: !7)
!34 = !DILocation(line: 35, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 20, scope: !7)
!36 = !DILocation(line: 41, column: 49, scope: !7)
!37 = !DILocation(line: 41, column: 45, scope: !7)
!38 = !DILocation(line: 41, column: 69, scope: !7)
!39 = !DILocation(line: 41, column: 64, scope: !7)
!40 = !DILocation(line: 41, column: 76, scope: !7)
!41 = !DILocation(line: 41, column: 84, scope: !7)
!42 = !DILocation(line: 41, column: 38, scope: !7)
!43 = !DILocation(line: 41, column: 118, scope: !7)
!44 = !DILocation(line: 41, column: 92, scope: !7)
!45 = !DILocation(line: 41, column: 31, scope: !7)
!46 = !DILocation(line: 41, column: 135, scope: !7)
!47 = !DILocation(line: 41, column: 127, scope: !7)
!48 = !DILocation(line: 42, column: 58, scope: !7)
!49 = !DILocation(line: 42, column: 32, scope: !7)
!50 = !DILocation(line: 42, column: 64, scope: !7)
!51 = !DILocation(line: 43, column: 20, scope: !7)
!52 = !DILocation(line: 0, scope: !7)
!53 = !DILocation(line: 47, column: 25, scope: !7)
!54 = !DILocation(line: 47, column: 37, scope: !7)
!55 = !DILocation(line: 47, column: 4, scope: !7)
