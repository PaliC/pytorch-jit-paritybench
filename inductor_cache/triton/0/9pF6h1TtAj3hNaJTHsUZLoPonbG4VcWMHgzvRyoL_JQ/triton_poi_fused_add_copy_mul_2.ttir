#loc = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":19:0)
module {
  tt.func public @triton_poi_fused_add_copy_mul_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":19:0), %arg2: i32 loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":19:0), %arg3: i32 loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<64x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<-1.880000e-01> : tensor<64x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4.500000e-01> : tensor<64x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<89401> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<268203> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<178802> : tensor<64x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<89401> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<12> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_8 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c64_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<64x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<64x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_7 : tensor<64x1xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_6 : tensor<1x16xi32> loc(#loc14)
    %15 = arith.divsi %5, %cst_6 : tensor<1x16xi32> loc(#loc15)
    %16 = arith.addi %12, %cst_5 : tensor<64x1xi32> loc(#loc16)
    %17 = arith.muli %15, %cst_4 : tensor<1x16xi32> loc(#loc17)
    %18 = tt.broadcast %16 : tensor<64x1xi32> -> tensor<64x16xi32> loc(#loc18)
    %19 = tt.broadcast %17 : tensor<1x16xi32> -> tensor<64x16xi32> loc(#loc18)
    %20 = arith.addi %18, %19 : tensor<64x16xi32> loc(#loc18)
    %21 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x16x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.addptr %21, %20 : tensor<64x16x!tt.ptr<f32>>, tensor<64x16xi32> loc(#loc19)
    %23 = tt.broadcast %13 : tensor<64x1xi1> -> tensor<64x16xi1> loc(#loc20)
    %24 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<64x16xi1> loc(#loc20)
    %25 = arith.andi %23, %24 : tensor<64x16xi1> loc(#loc20)
    %26 = tt.load %22, %25 evictionPolicy = evict_last : tensor<64x16x!tt.ptr<f32>> loc(#loc21)
    %27 = arith.muli %5, %cst_3 : tensor<1x16xi32> loc(#loc22)
    %28 = tt.broadcast %12 : tensor<64x1xi32> -> tensor<64x16xi32> loc(#loc23)
    %29 = tt.broadcast %27 : tensor<1x16xi32> -> tensor<64x16xi32> loc(#loc23)
    %30 = arith.addi %28, %29 : tensor<64x16xi32> loc(#loc23)
    %31 = tt.addptr %21, %30 : tensor<64x16x!tt.ptr<f32>>, tensor<64x16xi32> loc(#loc24)
    %32 = tt.load %31, %25 evictionPolicy = evict_last : tensor<64x16x!tt.ptr<f32>> loc(#loc25)
    %33 = arith.cmpi eq, %14, %cst_2 : tensor<1x16xi32> loc(#loc26)
    %34 = arith.mulf %26, %cst_1 : tensor<64x16xf32> loc(#loc27)
    %35 = arith.addf %34, %cst_0 : tensor<64x16xf32> loc(#loc28)
    %36 = tt.broadcast %33 : tensor<1x16xi1> -> tensor<64x16xi1> loc(#loc29)
    %37 = arith.select %36, %35, %32 : tensor<64x16xi1>, tensor<64x16xf32> loc(#loc29)
    %38 = arith.muli %12, %cst : tensor<64x1xi32> loc(#loc30)
    %39 = tt.broadcast %14 : tensor<1x16xi32> -> tensor<64x16xi32> loc(#loc31)
    %40 = tt.broadcast %38 : tensor<64x1xi32> -> tensor<64x16xi32> loc(#loc31)
    %41 = arith.addi %39, %40 : tensor<64x16xi32> loc(#loc31)
    %42 = arith.addi %41, %19 : tensor<64x16xi32> loc(#loc32)
    %43 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x16x!tt.ptr<f32>> loc(#loc33)
    %44 = tt.addptr %43, %42 : tensor<64x16x!tt.ptr<f32>>, tensor<64x16xi32> loc(#loc33)
    tt.store %44, %37, %25 : tensor<64x16x!tt.ptr<f32>> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":22:28)
#loc3 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":22:33)
#loc4 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":23:36)
#loc5 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":23:44)
#loc6 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":23:23)
#loc7 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":24:21)
#loc8 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":25:28)
#loc9 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":25:33)
#loc10 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":26:36)
#loc11 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":26:44)
#loc12 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":26:23)
#loc13 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":27:21)
#loc14 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":28:19)
#loc15 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":30:19)
#loc16 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":32:39)
#loc17 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":32:51)
#loc18 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":32:44)
#loc19 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":32:30)
#loc20 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":32:64)
#loc21 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":32:56)
#loc22 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":33:41)
#loc23 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":33:35)
#loc24 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":33:30)
#loc25 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":33:46)
#loc26 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":36:19)
#loc27 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":38:18)
#loc28 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":40:18)
#loc29 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":41:32)
#loc30 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":42:32)
#loc31 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":42:30)
#loc32 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":42:37)
#loc33 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":42:25)
#loc34 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":42:55)
#loc35 = loc("inductor_cache/77/c772l3mg7zavmmaixhfdywjbaqm6raf6coeh7gu2x533uv3jzbet.py":42:4)
