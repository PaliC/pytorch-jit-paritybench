; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__weight_norm_interface_25(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 2, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 3, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 4, !dbg !14
  %10 = shl i32 %8, 2, !dbg !15
  %11 = sext i32 %10 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #3, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = or disjoint i32 %10, 1, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %9) #3, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = or disjoint i32 %10, 2, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %9) #3, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = or disjoint i32 %10, 3, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %9) #3, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = fmul float %14, %14, !dbg !27
  %31 = fmul float %19, %19, !dbg !28
  %32 = fadd float %30, %31, !dbg !29
  %33 = fmul float %24, %24, !dbg !30
  %34 = fadd float %32, %33, !dbg !31
  %35 = fmul float %29, %29, !dbg !32
  %36 = fadd float %34, %35, !dbg !33
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i = icmp eq i32 %37, 0, !dbg !34
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !34
  %.not1.i = icmp eq i32 %38, 0, !dbg !34
  br i1 %.not.i, label %44, label %39, !dbg !34

39:                                               ; preds = %3
  br i1 %.not1.i, label %42, label %40, !dbg !34

40:                                               ; preds = %39
  %41 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %36) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

42:                                               ; preds = %39
  %43 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %36) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

44:                                               ; preds = %3
  br i1 %.not1.i, label %47, label %45, !dbg !34

45:                                               ; preds = %44
  %46 = tail call float @llvm.nvvm.sqrt.rn.f(float %36) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

47:                                               ; preds = %44
  %48 = tail call float @llvm.nvvm.sqrt.approx.f(float %36) #3, !dbg !34
  br label %__nv_sqrtf.exit, !dbg !34

__nv_sqrtf.exit:                                  ; preds = %40, %42, %45, %47
  %.0.i = phi float [ %41, %40 ], [ %43, %42 ], [ %46, %45 ], [ %48, %47 ], !dbg !34
  %49 = and i32 %6, 28, !dbg !12
  %50 = sext i32 %8 to i64, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !35
  %52 = icmp eq i32 %49, 0, !dbg !36
  %53 = bitcast float %.0.i to i32, !dbg !36
  %54 = and i1 %52, %9, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %53, ptr addrspace(1) %51, i1 %54) #3, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyvqjlassnu3evi4law4tkwpci5rcj64djoovjk7dzpzoeuwn2jm.py", directory: "inductor_cache/yv")
!4 = !{ptr @triton_poi_fused__weight_norm_interface_25, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__weight_norm_interface_25, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__weight_norm_interface_25", linkageName: "triton_poi_fused__weight_norm_interface_25", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 41, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 41, scope: !7)
!24 = !DILocation(line: 28, column: 34, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 41, scope: !7)
!27 = !DILocation(line: 29, column: 18, scope: !7)
!28 = !DILocation(line: 30, column: 18, scope: !7)
!29 = !DILocation(line: 31, column: 18, scope: !7)
!30 = !DILocation(line: 32, column: 18, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 34, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 19, scope: !7)
!34 = !DILocation(line: 36, column: 27, scope: !7)
!35 = !DILocation(line: 37, column: 25, scope: !7)
!36 = !DILocation(line: 37, column: 37, scope: !7)
!37 = !DILocation(line: 37, column: 4, scope: !7)
