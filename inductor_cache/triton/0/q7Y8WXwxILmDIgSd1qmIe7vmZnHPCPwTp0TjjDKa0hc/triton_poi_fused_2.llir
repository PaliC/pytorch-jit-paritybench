; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = sdiv i32 %9, 4, !dbg !15
  %12 = add i32 %9, 128, !dbg !16
  %13 = sext i32 %12 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !17
  %15 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %14, i1 %10) #1, !dbg !18
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !18
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !18
  %18 = bitcast i32 %16 to float, !dbg !18
  %19 = bitcast i32 %17 to float, !dbg !18
  %20 = shl nsw i32 %11, 2, !dbg !19
  %21 = add i32 %20, 128, !dbg !20
  %22 = sext i32 %21 to i64, !dbg !21
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !21
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %10) #1, !dbg !22
  %25 = bitcast i32 %24 to float, !dbg !22
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %10) #1, !dbg !22
  %27 = bitcast i32 %26 to float, !dbg !22
  %28 = add i32 %20, 129, !dbg !23
  %29 = sext i32 %28 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !24
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %10) #1, !dbg !25
  %32 = bitcast i32 %31 to float, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %10) #1, !dbg !25
  %34 = bitcast i32 %33 to float, !dbg !25
  %35 = add i32 %20, 130, !dbg !26
  %36 = sext i32 %35 to i64, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %10) #1, !dbg !28
  %39 = bitcast i32 %38 to float, !dbg !28
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %10) #1, !dbg !28
  %41 = bitcast i32 %40 to float, !dbg !28
  %42 = add i32 %20, 131, !dbg !29
  %43 = sext i32 %42 to i64, !dbg !30
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !30
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %10) #1, !dbg !31
  %46 = bitcast i32 %45 to float, !dbg !31
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %10) #1, !dbg !31
  %48 = bitcast i32 %47 to float, !dbg !31
  %49 = fcmp ogt float %25, %32, !dbg !32
  %50 = fcmp ogt float %27, %34, !dbg !32
  %51 = fcmp uno float %25, 0.000000e+00, !dbg !36
  %52 = fcmp uno float %27, 0.000000e+00, !dbg !36
  %53 = or i1 %51, %49, !dbg !37
  %54 = or i1 %52, %50, !dbg !37
  %55 = select i1 %53, float %25, float %32, !dbg !38
  %56 = select i1 %54, float %27, float %34, !dbg !38
  %57 = fcmp ogt float %55, %39, !dbg !39
  %58 = fcmp ogt float %56, %41, !dbg !39
  %59 = fcmp uno float %55, 0.000000e+00, !dbg !41
  %60 = fcmp uno float %56, 0.000000e+00, !dbg !41
  %61 = or i1 %57, %59, !dbg !42
  %62 = or i1 %58, %60, !dbg !42
  %63 = select i1 %61, float %55, float %39, !dbg !43
  %64 = select i1 %62, float %56, float %41, !dbg !43
  %65 = fcmp ogt float %63, %46, !dbg !44
  %66 = fcmp ogt float %64, %48, !dbg !44
  %67 = fcmp uno float %63, 0.000000e+00, !dbg !46
  %68 = fcmp uno float %64, 0.000000e+00, !dbg !46
  %69 = or i1 %65, %67, !dbg !47
  %70 = or i1 %66, %68, !dbg !47
  %71 = select i1 %69, float %63, float %46, !dbg !48
  %72 = select i1 %70, float %64, float %48, !dbg !48
  %73 = fsub float %18, %71, !dbg !49
  %74 = fsub float %19, %72, !dbg !49
  %75 = fmul float %73, 1.000000e+01, !dbg !50
  %76 = fmul float %74, 1.000000e+01, !dbg !50
  %77 = sext i32 %9 to i64, !dbg !51
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %77, !dbg !51
  %79 = bitcast float %75 to i32, !dbg !52
  %80 = bitcast float %76 to i32, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %79, i32 %80, ptr addrspace(1) %78, i1 %10) #1, !dbg !52
  ret void, !dbg !53
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwzllsrrg3iurvcjimnzb7tx53cfdmxsfcxo73jfuvbqquxqwaap.py", directory: "inductor_cache/wz")
!4 = !{ptr @triton_poi_fused_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_2", linkageName: "triton_poi_fused_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 36, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 41, scope: !7)
!19 = !DILocation(line: 27, column: 38, scope: !7)
!20 = !DILocation(line: 27, column: 36, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 43, scope: !7)
!23 = !DILocation(line: 28, column: 36, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 43, scope: !7)
!26 = !DILocation(line: 29, column: 36, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 43, scope: !7)
!29 = !DILocation(line: 30, column: 37, scope: !7)
!30 = !DILocation(line: 30, column: 31, scope: !7)
!31 = !DILocation(line: 30, column: 44, scope: !7)
!32 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 35, column: 40, scope: !7)
!36 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !35)
!37 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !35)
!38 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!39 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !40)
!40 = !DILocation(line: 37, column: 41, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !40)
!44 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !45)
!45 = !DILocation(line: 39, column: 42, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !45)
!49 = !DILocation(line: 40, column: 19, scope: !7)
!50 = !DILocation(line: 42, column: 20, scope: !7)
!51 = !DILocation(line: 43, column: 25, scope: !7)
!52 = !DILocation(line: 43, column: 37, scope: !7)
!53 = !DILocation(line: 43, column: 4, scope: !7)
