#loc = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-192> : tensor<512xi32> loc(#loc1)
    %cst_1 = arith.constant dense<-128> : tensor<512xi32> loc(#loc1)
    %cst_2 = arith.constant dense<192> : tensor<512xi64> loc(#loc1)
    %cst_3 = arith.constant dense<-64> : tensor<512xi32> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<512xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<512xi32> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<512xi64> loc(#loc1)
    %cst_8 = arith.constant dense<256> : tensor<512xi32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_8 : tensor<512xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_8 : tensor<512xi32> loc(#loc7)
    %7 = arith.extsi %5 : tensor<512xi32> to tensor<512xi64> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_7 : tensor<512xi64> loc(#loc8)
    %9 = arith.muli %6, %cst_6 : tensor<512xi32> loc(#loc9)
    %10 = arith.addi %9, %5 : tensor<512xi32> loc(#loc10)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc11)
    %13 = tt.load %12, %8, %cst_5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc12)
    %14 = arith.subf %cst_5, %13 : tensor<512xf32> loc(#loc48)
    %15 = math.exp %14 : tensor<512xf32> loc(#loc49)
    %16 = arith.addf %15, %cst : tensor<512xf32> loc(#loc50)
    %17 = arith.divf %cst, %16 : tensor<512xf32> loc(#loc51)
    %18 = arith.mulf %13, %17 : tensor<512xf32> loc(#loc18)
    %19 = arith.cmpi sge, %7, %cst_7 : tensor<512xi64> loc(#loc19)
    %20 = arith.cmpi slt, %7, %cst_4 : tensor<512xi64> loc(#loc20)
    %21 = arith.andi %19, %20 : tensor<512xi1> loc(#loc21)
    %22 = arith.addi %5, %cst_3 : tensor<512xi32> loc(#loc22)
    %23 = arith.addi %9, %22 : tensor<512xi32> loc(#loc23)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.addptr %24, %23 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc24)
    %26 = tt.load %25, %21, %cst_5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc25)
    %27 = arith.cmpi sge, %7, %cst_4 : tensor<512xi64> loc(#loc26)
    %28 = arith.cmpi slt, %7, %cst_2 : tensor<512xi64> loc(#loc27)
    %29 = arith.andi %27, %28 : tensor<512xi1> loc(#loc28)
    %30 = arith.addi %5, %cst_1 : tensor<512xi32> loc(#loc29)
    %31 = arith.addi %9, %30 : tensor<512xi32> loc(#loc30)
    %32 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc31)
    %33 = tt.addptr %32, %31 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc31)
    %34 = tt.load %33, %29, %cst_5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc32)
    %35 = arith.cmpi sge, %7, %cst_2 : tensor<512xi64> loc(#loc33)
    %36 = arith.addi %5, %cst_0 : tensor<512xi32> loc(#loc34)
    %37 = arith.addi %9, %36 : tensor<512xi32> loc(#loc35)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc36)
    %39 = tt.addptr %38, %37 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc36)
    %40 = tt.load %39, %35, %cst_5 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc37)
    %41 = arith.subf %cst_5, %40 : tensor<512xf32> loc(#loc52)
    %42 = math.exp %41 : tensor<512xf32> loc(#loc53)
    %43 = arith.addf %42, %cst : tensor<512xf32> loc(#loc54)
    %44 = arith.divf %cst, %43 : tensor<512xf32> loc(#loc55)
    %45 = arith.mulf %40, %44 : tensor<512xf32> loc(#loc39)
    %46 = arith.select %35, %45, %cst_5 : tensor<512xi1>, tensor<512xf32> loc(#loc40)
    %47 = arith.select %29, %34, %46 : tensor<512xi1>, tensor<512xf32> loc(#loc41)
    %48 = arith.select %21, %26, %47 : tensor<512xi1>, tensor<512xf32> loc(#loc42)
    %49 = arith.select %8, %18, %48 : tensor<512xi1>, tensor<512xf32> loc(#loc56)
    %50 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc45)
    %51 = tt.addptr %50, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc45)
    tt.store %51, %49 : tensor<512x!tt.ptr<f32>> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":21:28)
#loc3 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":21:33)
#loc4 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":22:36)
#loc5 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":22:23)
#loc6 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":24:19)
#loc7 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":25:19)
#loc8 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":31:18)
#loc9 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":32:33)
#loc10 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":32:39)
#loc11 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":32:30)
#loc12 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":32:45)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc14 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":33:22)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc18 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":34:18)
#loc19 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":37:20)
#loc20 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":39:19)
#loc21 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":40:20)
#loc22 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":41:48)
#loc23 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":41:40)
#loc24 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":41:31)
#loc25 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":41:54)
#loc26 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":42:20)
#loc27 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":44:19)
#loc28 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":45:20)
#loc29 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":46:49)
#loc30 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":46:40)
#loc31 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":46:31)
#loc32 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":46:55)
#loc33 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":47:20)
#loc34 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":50:49)
#loc35 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":50:40)
#loc36 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":50:31)
#loc37 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":50:55)
#loc38 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":51:23)
#loc39 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":52:20)
#loc40 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":54:35)
#loc41 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":55:35)
#loc42 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":56:35)
#loc43 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":57:33)
#loc44 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":36:32)
#loc45 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":58:25)
#loc46 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":58:37)
#loc47 = loc("inductor_cache/3f/c3fcn52cga2w7wpsv3j7nbmaoytdmwrj63ed5nddsfznwopigdmg.py":58:4)
#loc48 = loc(callsite(#loc13 at #loc14))
#loc49 = loc(callsite(#loc15 at #loc14))
#loc50 = loc(callsite(#loc16 at #loc14))
#loc51 = loc(callsite(#loc17 at #loc14))
#loc52 = loc(callsite(#loc13 at #loc38))
#loc53 = loc(callsite(#loc15 at #loc38))
#loc54 = loc(callsite(#loc16 at #loc38))
#loc55 = loc(callsite(#loc17 at #loc38))
#loc56 = loc(fused[#loc43, #loc44])
