//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_native_group_norm_0 // -- Begin function triton_per_fused_convolution_native_group_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_convolution_native_group_norm_0
.visible .entry triton_per_fused_convolution_native_group_norm_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_0_param_4,
	.param .u32 triton_per_fused_convolution_native_group_norm_0_param_5,
	.param .u32 triton_per_fused_convolution_native_group_norm_0_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<152>;
	.reg .f32 	%f<52>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_convolution_native_group_norm_0_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_convolution_native_group_norm_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:23:33
	shl.b32 	%r59, %r1, 3;
	ld.param.u64 	%rd12, [triton_per_fused_convolution_native_group_norm_0_param_2];
	ld.param.u64 	%rd13, [triton_per_fused_convolution_native_group_norm_0_param_3];
	.loc	1 24 44                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:24:44
	mov.u32 	%r60, %tid.x;
	ld.param.u64 	%rd14, [triton_per_fused_convolution_native_group_norm_0_param_4];
	bfe.u32 	%r61, %r60, 5, 3;
	and.b32  	%r62, %r60, 31;
	and.b32  	%r63, %r60, 7;
	.loc	1 24 23                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:24:23
	or.b32  	%r64, %r59, %r61;
	or.b32  	%r65, %r59, %r63;
	.loc	1 25 21                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:25:21
	setp.lt.s32 	%p10, %r65, 64;
	setp.lt.s32 	%p1, %r64, 64;
	.loc	1 26 34                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:26:34
	shl.b32 	%r66, %r60, 2;
	and.b32  	%r67, %r66, 124;
	.loc	1 32 19                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:32:19
	bfe.s32 	%r68, %r1, 28, 1;
	shr.u32 	%r69, %r68, 28;
	add.s32 	%r70, %r65, %r69;
	and.b32  	%r71, %r70, 2147483632;
	sub.s32 	%r72, %r65, %r71;
	.loc	1 33 43                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:43
	shl.b32 	%r73, %r64, 7;
	.loc	1 33 39                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:39
	or.b32  	%r74, %r73, %r67;
	.loc	1 33 34                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:34
	mul.wide.s32 	%rd15, %r74, 4;
	add.s64 	%rd1, %rd10, %rd15;
	mov.b32 	%r6, 0;
	.loc	1 33 48                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:33:48
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r11, %r13, %r15, %r17 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r13, %r6;
	@!%p1 mov.u32 %r15, %r6;
	@!%p1 mov.u32 %r17, %r6;
	// end inline asm
	shl.b32 	%r75, %r60, 5;
	and.b32  	%r76, %r75, 992;
	or.b32  	%r77, %r76, %r61;
	and.b32  	%r78, %r60, 255;
	shr.u32 	%r79, %r76, 1;
	mov.u32 	%r80, global_smem;
	add.s32 	%r81, %r80, %r79;
	shl.b32 	%r82, %r77, 2;
	add.s32 	%r10, %r81, %r82;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	or.b32  	%r83, %r76, 8;
	shr.u32 	%r84, %r83, 1;
	add.s32 	%r85, %r80, %r84;
	add.s32 	%r86, %r85, %r82;
	add.s32 	%r12, %r86, 32;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	or.b32  	%r87, %r76, 16;
	shr.u32 	%r88, %r87, 1;
	add.s32 	%r89, %r80, %r88;
	add.s32 	%r90, %r89, %r82;
	add.s32 	%r14, %r90, 64;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	or.b32  	%r91, %r76, 24;
	shr.u32 	%r92, %r91, 1;
	add.s32 	%r93, %r80, %r92;
	add.s32 	%r94, %r93, %r82;
	add.s32 	%r16, %r94, 96;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r95, %r60, 1;
	and.b32  	%r96, %r95, 124;
	add.s32 	%r97, %r80, %r96;
	shl.b32 	%r98, %r78, 2;
	add.s32 	%r99, %r97, %r98;
	ld.shared.f32 	%f1, [%r99];
	or.b32  	%r100, %r78, 256;
	shr.u32 	%r101, %r100, 1;
	and.b32  	%r102, %r101, 252;
	add.s32 	%r103, %r80, %r102;
	add.s32 	%r104, %r103, %r98;
	ld.shared.f32 	%f2, [%r104+1024];
	or.b32  	%r105, %r78, 512;
	shr.u32 	%r106, %r105, 1;
	and.b32  	%r107, %r106, 380;
	add.s32 	%r108, %r80, %r107;
	add.s32 	%r109, %r108, %r98;
	ld.shared.f32 	%f3, [%r109+2048];
	or.b32  	%r110, %r78, 768;
	shr.u32 	%r111, %r110, 1;
	and.b32  	%r112, %r111, 508;
	add.s32 	%r113, %r80, %r112;
	add.s32 	%r114, %r113, %r98;
	ld.shared.f32 	%f4, [%r114+3072];
	.loc	1 34 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:34:37
	shl.b32 	%r115, %r72, 1;
	.loc	1 34 30                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:34:30
	mul.wide.s32 	%rd16, %r115, 4;
	add.s64 	%rd2, %rd11, %rd16;
	add.s64 	%rd4, %rd2, 4;
	.loc	1 34 42                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:34:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r18 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r18, %r6;
	// end inline asm
	mov.b32 	%f5, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r20 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r20, %r6;
	// end inline asm
	mov.b32 	%f6, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r22 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r22, %r6;
	// end inline asm
	mov.b32 	%f7, %r22;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r24 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r24, %r6;
	// end inline asm
	mov.b32 	%f8, %r24;
	.loc	1 35 18                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:35:18
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f9, %f10;
	add.f32 	%f14, %f13, %f11;
	add.f32 	%f15, %f14, %f12;
	selp.f32 	%f16, %f15, 0f00000000, %p10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f16;
	shfl.sync.bfly.b32	%r117, %r116, 16, 31, -1;
	mov.b32 	%f17, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f18;
	shfl.sync.bfly.b32	%r119, %r118, 8, 31, -1;
	mov.b32 	%f19, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p18, %r62, 8;
	shl.b32 	%r120, %r63, 5;
	shl.b32 	%r121, %r61, 2;
	or.b32  	%r122, %r120, %r121;
	add.s32 	%r26, %r80, %r122;
	mov.b32 	%r27, %f20;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r60, 64;
	add.s32 	%r29, %r80, %r66;
	// begin inline asm
	@%p19 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r28;
	shfl.sync.bfly.b32	%r123, %r28, 4, 31, -1;
	mov.b32 	%f22, %r123;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r124, %f23;
	shfl.sync.bfly.b32	%r125, %r124, 2, 31, -1;
	mov.b32 	%f24, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f25;
	shfl.sync.bfly.b32	%r127, %r126, 1, 31, -1;
	mov.b32 	%f26, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p32, %r63, 0;
	and.pred  	%p20, %p19, %p32;
	mov.b32 	%r31, %f27;
	// begin inline asm
	@%p20 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r128, %r80, %r120;
$L__tmp2:
	.loc	1 43 19                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:43:19
	ld.shared.u32 	%r33, [%r128];
	mov.b32 	%r34, 1124073472;
	// begin inline asm
	div.full.f32 %r57, %r33, %r34;
	// end inline asm
	mov.b32 	%f28, %r57;
	.loc	1 44 19                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:44:19
	sub.f32 	%f29, %f9, %f28;
	sub.f32 	%f30, %f10, %f28;
	sub.f32 	%f31, %f11, %f28;
	sub.f32 	%f32, %f12, %f28;
	.loc	1 45 20                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:45:20
	mul.f32 	%f33, %f30, %f30;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f34, %f29, %f29, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	fma.rn.f32 	%f36, %f32, %f32, %f35;
	selp.f32 	%f37, %f36, 0f00000000, %p10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r129, %f37;
	shfl.sync.bfly.b32	%r130, %r129, 16, 31, -1;
	mov.b32 	%f38, %r130;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r131, %f39;
	shfl.sync.bfly.b32	%r132, %r131, 8, 31, -1;
	mov.b32 	%f40, %r132;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f41;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p19 ld.shared.b32 %r37, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r37;
	shfl.sync.bfly.b32	%r133, %r37, 4, 31, -1;
	mov.b32 	%f43, %r133;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r134, %f44;
	shfl.sync.bfly.b32	%r135, %r134, 2, 31, -1;
	mov.b32 	%f45, %r135;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r136, %f46;
	shfl.sync.bfly.b32	%r137, %r136, 1, 31, -1;
	mov.b32 	%f47, %r137;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f48;
	// begin inline asm
	@%p20 st.shared.b32 [ %r29 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:50:20
	ld.shared.u32 	%r42, [%r128];
	// begin inline asm
	div.full.f32 %r41, %r42, %r34;
	// end inline asm
	mov.b32 	%f49, %r41;
	.loc	1 52 20                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:52:20
	add.f32 	%f50, %f49, 0f3727C5AC;
	.loc	1 53 28                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:53:28
	rsqrt.approx.ftz.f32 	%f51, %f50;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bfe.u32 	%r138, %r60, 3, 2;
$L__tmp6:
	.loc	1 54 48                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:54:48
	bar.sync 	0;
	shl.b32 	%r139, %r60, 7;
	and.b32  	%r140, %r139, 896;
	bfe.u32 	%r141, %r60, 3, 5;
	or.b32  	%r142, %r140, %r141;
	shr.u32 	%r143, %r140, 3;
	add.s32 	%r144, %r80, %r143;
	shl.b32 	%r145, %r142, 2;
	add.s32 	%r44, %r144, %r145;
	mov.b32 	%r45, %f9;
	// begin inline asm
	@%p6 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r44, 128;
	mov.b32 	%r47, %f10;
	// begin inline asm
	@%p6 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r44, 256;
	mov.b32 	%r49, %f11;
	// begin inline asm
	@%p6 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r44, 384;
	mov.b32 	%r51, %f12;
	// begin inline asm
	@%p6 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r146, %r95, 112;
	add.s32 	%r147, %r80, %r146;
	shl.b32 	%r148, %r60, 4;
	and.b32  	%r149, %r148, 4080;
	add.s32 	%r150, %r147, %r149;
	ld.shared.v4.u32 	{%r52, %r53, %r54, %r55}, [%r150];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r52, %r53, %r54, %r55 };
	// end inline asm
	.loc	1 55 25                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:55:25
	mul.wide.s32 	%rd17, %r65, 4;
	add.s64 	%rd7, %rd14, %rd17;
	.loc	1 55 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:55:37
	or.b32  	%r151, %r121, %r138;
	setp.eq.s32 	%p33, %r151, 0;
	mov.b32 	%r56, %f51;
	and.pred  	%p29, %p33, %p10;
	// begin inline asm
	@%p29 st.global.b32 [ %rd7 + 0 ], { %r56 };
	// end inline asm
	.loc	1 56 25                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:56:25
	add.s64 	%rd8, %rd12, %rd17;
	.loc	1 56 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:56:37
	// begin inline asm
	@%p29 st.global.b32 [ %rd8 + 0 ], { %r57 };
	// end inline asm
	.loc	1 57 25                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:57:25
	add.s64 	%rd9, %rd13, %rd17;
	.loc	1 57 37                         // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:57:37
	// begin inline asm
	@%p29 st.global.b32 [ %rd9 + 0 ], { %r42 };
	// end inline asm
	.loc	1 57 4                          // cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py:57:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/em/cemfxvutksyd2efpo5qschmjbras5lkuotdig3djlwccl4hkxxi6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 109
.b8 102
.b8 120
.b8 118
.b8 117
.b8 116
.b8 107
.b8 115
.b8 121
.b8 100
.b8 50
.b8 101
.b8 102
.b8 112
.b8 111
.b8 53
.b8 113
.b8 115
.b8 99
.b8 104
.b8 109
.b8 106
.b8 98
.b8 114
.b8 97
.b8 115
.b8 53
.b8 108
.b8 107
.b8 117
.b8 111
.b8 116
.b8 100
.b8 105
.b8 103
.b8 51
.b8 100
.b8 106
.b8 108
.b8 119
.b8 99
.b8 99
.b8 108
.b8 52
.b8 104
.b8 107
.b8 120
.b8 120
.b8 105
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
