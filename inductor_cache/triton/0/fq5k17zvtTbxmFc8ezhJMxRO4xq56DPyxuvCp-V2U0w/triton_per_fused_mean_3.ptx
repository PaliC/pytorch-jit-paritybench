//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_3 // -- Begin function triton_per_fused_mean_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_3
.visible .entry triton_per_fused_mean_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_1,
	.param .u32 triton_per_fused_mean_3_param_2,
	.param .u32 triton_per_fused_mean_3_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<123>;
	.reg .f32 	%f<57>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_mean_3_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_mean_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:23:33
	shl.b32 	%r67, %r1, 7;
	.loc	1 24 44                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:24:44
	mov.u32 	%r68, %tid.x;
	shl.b32 	%r69, %r68, 2;
	and.b32  	%r70, %r69, 124;
	and.b32  	%r71, %r68, 127;
	.loc	1 24 23                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:24:23
	or.b32  	%r72, %r67, %r70;
	or.b32  	%r73, %r67, %r71;
	.loc	1 25 21                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:25:21
	setp.lt.s32 	%p1, %r72, 2048;
	setp.lt.s32 	%p35, %r73, 2048;
	.loc	1 31 19                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:31:19
	shr.s32 	%r75, %r72, 31;
	shr.u32 	%r76, %r75, 23;
	add.s32 	%r77, %r72, %r76;
	.loc	1 30 19                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:30:19
	and.b32  	%r78, %r77, -512;
	sub.s32 	%r79, %r72, %r78;
	.loc	1 33 39                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:33:39
	shl.b32 	%r80, %r68, 4;
	and.b32  	%r81, %r80, 3584;
	.loc	1 33 50                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:33:50
	shl.b32 	%r82, %r77, 5;
	and.b32  	%r83, %r82, -16384;
	.loc	1 33 35                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:33:35
	add.s32 	%r84, %r83, %r79;
	.loc	1 33 44                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:33:44
	add.s32 	%r85, %r84, %r81;
	add.s32 	%r86, %r85, 4096;
	add.s32 	%r87, %r85, 8192;
	add.s32 	%r88, %r85, 12288;
	.loc	1 33 30                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:33:30
	mul.wide.s32 	%rd8, %r85, 4;
	add.s64 	%rd1, %rd7, %rd8;
	mul.wide.s32 	%rd9, %r86, 4;
	add.s64 	%rd2, %rd7, %rd9;
	mul.wide.s32 	%rd10, %r87, 4;
	add.s64 	%rd3, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r88, 4;
	add.s64 	%rd4, %rd7, %rd11;
	mov.b32 	%r6, 0;
	.loc	1 33 55                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:33:55
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f1, %f5;
	add.f32 	%f18, %f2, %f6;
	add.f32 	%f19, %f3, %f7;
	add.f32 	%f20, %f4, %f8;
	add.f32 	%f21, %f17, %f9;
	add.f32 	%f22, %f18, %f10;
	add.f32 	%f23, %f19, %f11;
	add.f32 	%f24, %f20, %f12;
	add.f32 	%f25, %f21, %f13;
	add.f32 	%f26, %f22, %f14;
	add.f32 	%f27, %f23, %f15;
	add.f32 	%f28, %f24, %f16;
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r89, %r68, 3;
	and.b32  	%r90, %r89, 28;
	shl.b32 	%r91, %r70, 5;
	or.b32  	%r92, %r91, %r90;
	mov.u32 	%r93, global_smem;
	add.s32 	%r34, %r93, %r92;
	mov.b32 	%r94, %f25;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r35, %r94, 0, %p1;
	mov.pred 	%p21, -1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	add.s32 	%r36, %r34, 32;
	mov.b32 	%r95, %f26;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r37, %r95, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	add.s32 	%r38, %r34, 64;
	mov.b32 	%r96, %f27;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r39, %r96, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	add.s32 	%r40, %r34, 96;
	mov.b32 	%r97, %f28;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r41, %r97, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p25, %r68, 1024;
	add.s32 	%r43, %r93, %r69;
	// begin inline asm
	@%p25 ld.shared.b32 %r42, [ %r43 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r42;
	shfl.sync.bfly.b32	%r98, %r42, 4, 31, -1;
	mov.b32 	%f30, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f31;
	shfl.sync.bfly.b32	%r100, %r99, 2, 31, -1;
	mov.b32 	%f32, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f33;
	shfl.sync.bfly.b32	%r102, %r101, 1, 31, -1;
	mov.b32 	%f34, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r103, %r68, 7;
	setp.eq.s32 	%p36, %r103, 0;
	and.pred  	%p26, %p25, %p36;
	mov.b32 	%r45, %f35;
	// begin inline asm
	@%p26 st.shared.b32 [ %r43 + 0 ], %r45;
	// end inline asm
	add.s32 	%r47, %r43, 1024;
	// begin inline asm
	@%p25 ld.shared.b32 %r46, [ %r47 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r46;
	shfl.sync.bfly.b32	%r104, %r46, 4, 31, -1;
	mov.b32 	%f37, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f38;
	shfl.sync.bfly.b32	%r106, %r105, 2, 31, -1;
	mov.b32 	%f39, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f40;
	shfl.sync.bfly.b32	%r108, %r107, 1, 31, -1;
	mov.b32 	%f41, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f42;
	// begin inline asm
	@%p26 st.shared.b32 [ %r47 + 0 ], %r49;
	// end inline asm
	add.s32 	%r51, %r43, 2048;
	// begin inline asm
	@%p25 ld.shared.b32 %r50, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f43, %r50;
	shfl.sync.bfly.b32	%r109, %r50, 4, 31, -1;
	mov.b32 	%f44, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f45;
	shfl.sync.bfly.b32	%r111, %r110, 2, 31, -1;
	mov.b32 	%f46, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f47;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f48, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f49;
	// begin inline asm
	@%p26 st.shared.b32 [ %r51 + 0 ], %r53;
	// end inline asm
	add.s32 	%r55, %r43, 3072;
	// begin inline asm
	@%p25 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r54;
	shfl.sync.bfly.b32	%r114, %r54, 4, 31, -1;
	mov.b32 	%f51, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f52;
	shfl.sync.bfly.b32	%r116, %r115, 2, 31, -1;
	mov.b32 	%f53, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f54;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	mov.b32 	%f55, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f56;
	// begin inline asm
	@%p26 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r119, %r93, %r91;
	ld.shared.u32 	%r59, [%r119];
	ld.shared.u32 	%r60, [%r119+32];
	ld.shared.u32 	%r61, [%r119+64];
	ld.shared.u32 	%r62, [%r119+96];
$L__tmp2:
	.loc	1 38 18                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:38:18
	bar.sync 	0;
	mad.lo.s32 	%r58, %r70, -28, %r119;
	// begin inline asm
	@%p21 st.shared.v4.b32 [ %r58 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r120, %r71, 2;
	add.s32 	%r121, %r93, %r120;
	ld.shared.u32 	%r64, [%r121];
	mov.b32 	%r65, 1166016512;
	// begin inline asm
	div.full.f32 %r66, %r64, %r65;
	// end inline asm
	.loc	1 39 4                          // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:39:4
	bar.sync 	0;
	.loc	1 40 28                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:40:28
	mul.wide.s32 	%rd12, %r73, 4;
	add.s64 	%rd5, %rd6, %rd12;
	.loc	1 40 39                         // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:40:39
	and.b32  	%r122, %r68, 128;
	setp.eq.s32 	%p37, %r122, 0;
	and.pred  	%p34, %p37, %p35;
	// begin inline asm
	@%p34 st.global.b32 [ %rd5 + 0 ], { %r66 };
	// end inline asm
	.loc	1 40 4                          // cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/p3/cp3z6e4umd4t22wqe5fzehsr4mtscpwnm45tl6zr2gy6q4o2x7uv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 51
.b8 122
.b8 54
.b8 101
.b8 52
.b8 117
.b8 109
.b8 100
.b8 52
.b8 116
.b8 50
.b8 50
.b8 119
.b8 113
.b8 101
.b8 53
.b8 102
.b8 122
.b8 101
.b8 104
.b8 115
.b8 114
.b8 52
.b8 109
.b8 116
.b8 115
.b8 99
.b8 112
.b8 119
.b8 110
.b8 109
.b8 52
.b8 53
.b8 116
.b8 108
.b8 54
.b8 122
.b8 114
.b8 50
.b8 103
.b8 121
.b8 54
.b8 113
.b8 52
.b8 111
.b8 50
.b8 120
.b8 55
.b8 117
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
