; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, i32 %11) local_unnamed_addr !dbg !7 {
  %13 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %14 = shl i32 %13, 7, !dbg !11
  %15 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %16 = and i32 %15, 127, !dbg !12
  %17 = or disjoint i32 %14, %16, !dbg !13
  %18 = icmp slt i32 %17, 1536, !dbg !14
  %.frozen = freeze i32 %17, !dbg !15
  %19 = sdiv i32 %.frozen, 16, !dbg !15
  %20 = srem i32 %19, 24, !dbg !16
  %21 = mul i32 %19, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %21, !dbg !17
  %.frozen1 = freeze i32 %17, !dbg !18
  %22 = sdiv i32 %.frozen1, 384, !dbg !18
  %23 = icmp slt i32 %20, 4, !dbg !19
  %24 = mul i32 %22, 384, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %24, !dbg !20
  %25 = shl nsw i32 %22, 6, !dbg !21
  %26 = add nsw i32 %25, %srem.decomposed, !dbg !22
  %27 = sext i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !23
  %29 = and i1 %18, %23, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %29, i32 0, i1 %29) #3, !dbg !25
  %31 = and i32 %20, -4, !dbg !26
  %32 = icmp eq i32 %31, 4, !dbg !26
  %33 = shl nsw i32 %20, 4, !dbg !27
  %34 = add nsw i32 %25, %.decomposed, !dbg !27
  %35 = add nsw i32 %34, -64, !dbg !28
  %36 = add nsw i32 %35, %33, !dbg !29
  %37 = sext i32 %36 to i64, !dbg !30
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !30
  %39 = and i1 %18, %32, !dbg !31
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %39, i32 0, i1 %39) #3, !dbg !32
  %41 = icmp eq i32 %31, 8, !dbg !33
  %42 = add nsw i32 %34, -128, !dbg !34
  %43 = add nsw i32 %42, %33, !dbg !35
  %44 = sext i32 %43 to i64, !dbg !36
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !36
  %46 = and i1 %18, %41, !dbg !37
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %46, i32 0, i1 %46) #3, !dbg !38
  %48 = icmp eq i32 %31, 12, !dbg !39
  %49 = add nsw i32 %34, -192, !dbg !40
  %50 = add nsw i32 %49, %33, !dbg !41
  %51 = sext i32 %50 to i64, !dbg !42
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %51, !dbg !42
  %53 = and i1 %18, %48, !dbg !43
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %53, i32 0, i1 %53) #3, !dbg !44
  %55 = icmp eq i32 %31, 16, !dbg !45
  %56 = add nsw i32 %34, -256, !dbg !46
  %57 = add nsw i32 %56, %33, !dbg !47
  %58 = sext i32 %57 to i64, !dbg !48
  %59 = getelementptr float, ptr addrspace(1) %4, i64 %58, !dbg !48
  %60 = and i1 %18, %55, !dbg !49
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %60, i32 0, i1 %60) #3, !dbg !50
  %62 = icmp sgt i32 %20, 19, !dbg !51
  %63 = add nsw i32 %20, -20, !dbg !52
  %64 = shl nsw i32 %63, 4, !dbg !53
  %65 = add nsw i32 %34, %64, !dbg !54
  %66 = sext i32 %65 to i64, !dbg !55
  %67 = getelementptr float, ptr addrspace(1) %5, i64 %66, !dbg !55
  %68 = and i1 %18, %62, !dbg !56
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %68, i32 0, i1 %68) #3, !dbg !57
  %70 = sext i32 %63 to i64, !dbg !58
  %71 = getelementptr float, ptr addrspace(1) %6, i64 %70, !dbg !58
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %68, i32 0, i1 %68) #3, !dbg !59
  %73 = getelementptr float, ptr addrspace(1) %7, i64 %70, !dbg !60
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %68, i32 0, i1 %68) #3, !dbg !61
  %75 = bitcast i32 %74 to float, !dbg !61
  %76 = fadd float %75, 0x3EE4F8B580000000, !dbg !62
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !63
  %.not.i = icmp eq i32 %77, 0, !dbg !63
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !63
  %.not1.i = icmp eq i32 %78, 0, !dbg !63
  br i1 %.not.i, label %84, label %79, !dbg !63

79:                                               ; preds = %12
  br i1 %.not1.i, label %82, label %80, !dbg !63

80:                                               ; preds = %79
  %81 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %76) #3, !dbg !63
  br label %__nv_sqrtf.exit, !dbg !63

82:                                               ; preds = %79
  %83 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %76) #3, !dbg !63
  br label %__nv_sqrtf.exit, !dbg !63

84:                                               ; preds = %12
  br i1 %.not1.i, label %87, label %85, !dbg !63

85:                                               ; preds = %84
  %86 = tail call float @llvm.nvvm.sqrt.rn.f(float %76) #3, !dbg !63
  br label %__nv_sqrtf.exit, !dbg !63

87:                                               ; preds = %84
  %88 = tail call float @llvm.nvvm.sqrt.approx.f(float %76) #3, !dbg !63
  br label %__nv_sqrtf.exit, !dbg !63

__nv_sqrtf.exit:                                  ; preds = %80, %82, %85, %87
  %.0.i = phi float [ %81, %80 ], [ %83, %82 ], [ %86, %85 ], [ %88, %87 ], !dbg !63
  %89 = bitcast i32 %69 to float, !dbg !57
  %90 = bitcast i32 %72 to float, !dbg !59
  %91 = fsub float %89, %90, !dbg !64
  %92 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !65
  %93 = fmul float %91, %92, !dbg !66
  %94 = getelementptr float, ptr addrspace(1) %8, i64 %70, !dbg !67
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %68, i32 0, i1 %68) #3, !dbg !68
  %96 = bitcast i32 %95 to float, !dbg !68
  %97 = fmul float %93, %96, !dbg !69
  %98 = getelementptr float, ptr addrspace(1) %9, i64 %70, !dbg !70
  %99 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %98, i1 %68, i32 0, i1 %68) #3, !dbg !71
  %100 = bitcast i32 %99 to float, !dbg !71
  %101 = fadd float %97, %100, !dbg !72
  %.inv = fcmp ole float %101, 0.000000e+00, !dbg !73
  %102 = select i1 %.inv, float 0.000000e+00, float %101, !dbg !73
  %103 = fcmp olt float %102, 6.000000e+00, !dbg !77
  %104 = fcmp uno float %102, 0.000000e+00, !dbg !79
  %105 = or i1 %103, %104, !dbg !80
  %106 = sext i32 %17 to i64, !dbg !81
  %107 = getelementptr float, ptr addrspace(1) %10, i64 %106, !dbg !81
  %108 = bitcast float %102 to i32, !dbg !82
  %109 = select i1 %105, i32 %108, i32 1086324736, !dbg !83
  %110 = select i1 %62, i32 %109, i32 0, !dbg !84
  %111 = select i1 %55, i32 %61, i32 %110, !dbg !85
  %112 = select i1 %48, i32 %54, i32 %111, !dbg !86
  %113 = select i1 %41, i32 %47, i32 %112, !dbg !87
  %114 = select i1 %32, i32 %40, i32 %113, !dbg !88
  %115 = select i1 %23, i32 %30, i32 %114, !dbg !89
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %115, ptr addrspace(1) %107, i1 %18) #3, !dbg !82
  ret void, !dbg !90
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbs6lrtfctzgmpxc3p6u7j6fbr5sh7ra6afot2vgbdrngvsnjayg.py", directory: "inductor_cache/bs")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 48, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 37, column: 18, scope: !7)
!27 = !DILocation(line: 38, column: 40, scope: !7)
!28 = !DILocation(line: 38, column: 36, scope: !7)
!29 = !DILocation(line: 38, column: 53, scope: !7)
!30 = !DILocation(line: 38, column: 31, scope: !7)
!31 = !DILocation(line: 38, column: 68, scope: !7)
!32 = !DILocation(line: 38, column: 61, scope: !7)
!33 = !DILocation(line: 42, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 36, scope: !7)
!35 = !DILocation(line: 43, column: 53, scope: !7)
!36 = !DILocation(line: 43, column: 31, scope: !7)
!37 = !DILocation(line: 43, column: 69, scope: !7)
!38 = !DILocation(line: 43, column: 61, scope: !7)
!39 = !DILocation(line: 47, column: 20, scope: !7)
!40 = !DILocation(line: 48, column: 36, scope: !7)
!41 = !DILocation(line: 48, column: 54, scope: !7)
!42 = !DILocation(line: 48, column: 31, scope: !7)
!43 = !DILocation(line: 48, column: 70, scope: !7)
!44 = !DILocation(line: 48, column: 62, scope: !7)
!45 = !DILocation(line: 52, column: 20, scope: !7)
!46 = !DILocation(line: 53, column: 36, scope: !7)
!47 = !DILocation(line: 53, column: 54, scope: !7)
!48 = !DILocation(line: 53, column: 31, scope: !7)
!49 = !DILocation(line: 53, column: 70, scope: !7)
!50 = !DILocation(line: 53, column: 62, scope: !7)
!51 = !DILocation(line: 54, column: 20, scope: !7)
!52 = !DILocation(line: 57, column: 48, scope: !7)
!53 = !DILocation(line: 57, column: 40, scope: !7)
!54 = !DILocation(line: 57, column: 54, scope: !7)
!55 = !DILocation(line: 57, column: 31, scope: !7)
!56 = !DILocation(line: 57, column: 70, scope: !7)
!57 = !DILocation(line: 57, column: 62, scope: !7)
!58 = !DILocation(line: 58, column: 31, scope: !7)
!59 = !DILocation(line: 58, column: 44, scope: !7)
!60 = !DILocation(line: 60, column: 31, scope: !7)
!61 = !DILocation(line: 60, column: 44, scope: !7)
!62 = !DILocation(line: 62, column: 20, scope: !7)
!63 = !DILocation(line: 63, column: 27, scope: !7)
!64 = !DILocation(line: 59, column: 20, scope: !7)
!65 = !DILocation(line: 65, column: 20, scope: !7)
!66 = !DILocation(line: 68, column: 20, scope: !7)
!67 = !DILocation(line: 69, column: 31, scope: !7)
!68 = !DILocation(line: 69, column: 44, scope: !7)
!69 = !DILocation(line: 70, column: 20, scope: !7)
!70 = !DILocation(line: 71, column: 31, scope: !7)
!71 = !DILocation(line: 71, column: 44, scope: !7)
!72 = !DILocation(line: 72, column: 20, scope: !7)
!73 = !DILocation(line: 121, column: 29, scope: !74, inlinedAt: !76)
!74 = distinct !DILexicalBlockFile(scope: !7, file: !75, discriminator: 0)
!75 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!76 = !DILocation(line: 74, column: 42, scope: !7)
!77 = !DILocation(line: 110, column: 15, scope: !74, inlinedAt: !78)
!78 = !DILocation(line: 76, column: 42, scope: !7)
!79 = !DILocation(line: 112, column: 21, scope: !74, inlinedAt: !78)
!80 = !DILocation(line: 112, column: 16, scope: !74, inlinedAt: !78)
!81 = !DILocation(line: 84, column: 25, scope: !7)
!82 = !DILocation(line: 84, column: 37, scope: !7)
!83 = !DILocation(line: 113, column: 29, scope: !74, inlinedAt: !78)
!84 = !DILocation(line: 78, column: 35, scope: !7)
!85 = !DILocation(line: 79, column: 35, scope: !7)
!86 = !DILocation(line: 80, column: 35, scope: !7)
!87 = !DILocation(line: 81, column: 35, scope: !7)
!88 = !DILocation(line: 82, column: 34, scope: !7)
!89 = !DILocation(line: 83, column: 33, scope: !7)
!90 = !DILocation(line: 84, column: 4, scope: !7)
