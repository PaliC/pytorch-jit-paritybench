//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_native_layer_norm_8 // -- Begin function triton_poi_fused_add_native_layer_norm_8
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_native_layer_norm_8
.visible .entry triton_poi_fused_add_native_layer_norm_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_8_param_4,
	.param .u32 triton_poi_fused_add_native_layer_norm_8_param_5,
	.param .u32 triton_poi_fused_add_native_layer_norm_8_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<64>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_add_native_layer_norm_8_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_native_layer_norm_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:22:33
	shl.b32 	%r11, %r1, 2;
	ld.param.u64 	%rd9, [triton_poi_fused_add_native_layer_norm_8_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_add_native_layer_norm_8_param_3];
	.loc	1 23 44                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:23:44
	mov.u32 	%r12, %tid.x;
	ld.param.u64 	%rd11, [triton_poi_fused_add_native_layer_norm_8_param_4];
	bfe.u32 	%r13, %r12, 5, 2;
	and.b32  	%r14, %r12, 3;
	.loc	1 23 23                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:23:23
	or.b32  	%r15, %r11, %r13;
	or.b32  	%r16, %r11, %r14;
	.loc	1 24 21                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:24:21
	setp.lt.s32 	%p8, %r15, 4;
	setp.lt.s32 	%p9, %r16, 4;
	.loc	1 25 28                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:25:33
	shl.b32 	%r17, %r2, 5;
	.loc	1 26 44                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:26:44
	and.b32  	%r18, %r12, 31;
	bfe.u32 	%r19, %r12, 2, 5;
	.loc	1 26 23                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:26:23
	or.b32  	%r20, %r17, %r18;
	or.b32  	%r21, %r17, %r19;
	.loc	1 27 21                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:27:21
	setp.lt.s32 	%p5, %r20, 64;
	setp.lt.s32 	%p2, %r21, 64;
	.loc	1 29 19                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:29:19
	shr.s32 	%r23, %r21, 31;
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r21, %r24;
	shr.s32 	%r26, %r25, 2;
	.loc	1 28 19                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:28:19
	and.b32  	%r27, %r25, -4;
	sub.s32 	%r28, %r21, %r27;
	bfe.s32 	%r29, %r2, 26, 1;
	shr.u32 	%r30, %r29, 30;
	add.s32 	%r31, %r20, %r30;
	and.b32  	%r32, %r31, -4;
	sub.s32 	%r33, %r20, %r32;
	.loc	1 32 44                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:44
	shr.u32 	%r34, %r26, 30;
	add.s32 	%r35, %r26, %r34;
	and.b32  	%r36, %r35, 1073741820;
	sub.s32 	%r37, %r26, %r36;
	.loc	1 32 39                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:39
	shl.b32 	%r38, %r37, 2;
	.loc	1 32 53                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:53
	shl.b32 	%r39, %r28, 4;
	.loc	1 32 68                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:68
	shr.u32 	%r40, %r29, 28;
	add.s32 	%r41, %r21, %r40;
	shr.s32 	%r42, %r41, 4;
	.loc	1 32 62                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:62
	shl.b32 	%r43, %r42, 6;
	.loc	1 32 35                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:35
	add.s32 	%r44, %r39, %r16;
	.loc	1 32 50                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:50
	add.s32 	%r45, %r44, %r43;
	.loc	1 32 58                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:58
	add.s32 	%r46, %r45, %r38;
	.loc	1 32 30                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:30
	mul.wide.s32 	%rd12, %r46, 4;
	add.s64 	%rd1, %rd8, %rd12;
	.loc	1 32 81                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:81
	and.pred  	%p4, %p8, %p5;
	and.pred  	%p1, %p9, %p2;
	.loc	1 32 73                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:32:73
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 33 38                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:33:38
	shl.b32 	%r47, %r42, 2;
	.loc	1 33 35                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:33:35
	add.s32 	%r48, %r47, %r28;
	.loc	1 33 30                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:33:30
	mul.wide.s32 	%rd13, %r48, 4;
	add.s64 	%rd2, %rd9, %rd13;
	.loc	1 33 49                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:33:49
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 34 30                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:34:30
	mul.wide.s32 	%rd14, %r28, 4;
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 34 35                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:34:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 35 42                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:35:42
	shl.b32 	%r49, %r15, 6;
	.loc	1 35 39                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:35:39
	add.s32 	%r50, %r20, %r49;
	.loc	1 35 34                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:35:34
	mul.wide.s32 	%rd15, %r50, 4;
	add.s64 	%rd4, %rd7, %rd15;
	.loc	1 35 47                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:35:47
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 36 30                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:36:30
	mul.wide.s32 	%rd16, %r33, 4;
	add.s64 	%rd5, %rd11, %rd16;
	.loc	1 36 35                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:36:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	.loc	1 37 18                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:37:18
	add.f32 	%f6, %f2, %f3;
	.loc	1 38 18                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:38:18
	add.f32 	%f7, %f6, %f1;
	shl.b32 	%r51, %r12, 5;
	and.b32  	%r52, %r51, 96;
	or.b32  	%r53, %r52, %r19;
	and.b32  	%r54, %r12, 127;
	shr.u32 	%r55, %r52, 3;
	mov.u32 	%r56, global_smem;
	add.s32 	%r57, %r56, %r55;
	shl.b32 	%r58, %r53, 2;
	add.s32 	%r8, %r57, %r58;
	mov.b32 	%r9, %f7;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r59, %r12, 3;
	and.b32  	%r60, %r59, 12;
	add.s32 	%r61, %r56, %r60;
	shl.b32 	%r62, %r54, 2;
	add.s32 	%r63, %r61, %r62;
	ld.shared.f32 	%f8, [%r63];
	.loc	1 39 18                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:39:18
	add.f32 	%f9, %f4, %f5;
	.loc	1 40 18                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:40:18
	add.f32 	%f10, %f9, %f8;
	.loc	1 41 4                          // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:41:4
	bar.sync 	0;
	.loc	1 42 47                         // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:42:47
	mov.b32 	%r10, %f10;
	// begin inline asm
	@%p4 st.global.b32 [ %rd4 + 0 ], { %r10 };
	// end inline asm
	.loc	1 42 4                          // ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ed/ced23cxwsfif2qbvjlnemete2vd4f4kilh32wmkj3zzjkkbwni2u.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 100
.b8 50
.b8 51
.b8 99
.b8 120
.b8 119
.b8 115
.b8 102
.b8 105
.b8 102
.b8 50
.b8 113
.b8 98
.b8 118
.b8 106
.b8 108
.b8 110
.b8 101
.b8 109
.b8 101
.b8 116
.b8 101
.b8 50
.b8 118
.b8 100
.b8 52
.b8 102
.b8 52
.b8 107
.b8 105
.b8 108
.b8 104
.b8 51
.b8 50
.b8 119
.b8 109
.b8 107
.b8 106
.b8 51
.b8 122
.b8 122
.b8 106
.b8 107
.b8 107
.b8 98
.b8 119
.b8 110
.b8 105
.b8 50
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
