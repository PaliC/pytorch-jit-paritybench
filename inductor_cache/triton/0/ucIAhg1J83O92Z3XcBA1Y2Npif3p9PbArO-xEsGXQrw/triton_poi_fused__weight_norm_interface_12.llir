; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__weight_norm_interface_12(ptr addrspace(1) %0, ptr addrspace(1) %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #3, !dbg !10
  %4 = bitcast i32 %3 to float, !dbg !10
  %5 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !11
  %6 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #3, !dbg !12
  %7 = bitcast i32 %6 to float, !dbg !12
  %8 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !13
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #3, !dbg !14
  %10 = bitcast i32 %9 to float, !dbg !14
  %11 = getelementptr i8, ptr addrspace(1) %0, i64 12, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #3, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = getelementptr i8, ptr addrspace(1) %0, i64 16, !dbg !17
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #3, !dbg !18
  %16 = bitcast i32 %15 to float, !dbg !18
  %17 = getelementptr i8, ptr addrspace(1) %0, i64 20, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #3, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = getelementptr i8, ptr addrspace(1) %0, i64 24, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #3, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = fmul float %4, %4, !dbg !23
  %24 = fmul float %7, %7, !dbg !24
  %25 = fadd float %23, %24, !dbg !25
  %26 = fmul float %10, %10, !dbg !26
  %27 = fadd float %25, %26, !dbg !27
  %28 = fmul float %13, %13, !dbg !28
  %29 = fadd float %27, %28, !dbg !29
  %30 = fmul float %16, %16, !dbg !30
  %31 = fadd float %29, %30, !dbg !31
  %32 = fmul float %19, %19, !dbg !32
  %33 = fadd float %31, %32, !dbg !33
  %34 = fmul float %22, %22, !dbg !34
  %35 = fadd float %33, %34, !dbg !35
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i = icmp eq i32 %36, 0, !dbg !36
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !36
  %.not1.i = icmp eq i32 %37, 0, !dbg !36
  br i1 %.not.i, label %43, label %38, !dbg !36

38:                                               ; preds = %2
  br i1 %.not1.i, label %41, label %39, !dbg !36

39:                                               ; preds = %38
  %40 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %35) #3, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

41:                                               ; preds = %38
  %42 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %35) #3, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

43:                                               ; preds = %2
  br i1 %.not1.i, label %46, label %44, !dbg !36

44:                                               ; preds = %43
  %45 = tail call float @llvm.nvvm.sqrt.rn.f(float %35) #3, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

46:                                               ; preds = %43
  %47 = tail call float @llvm.nvvm.sqrt.approx.f(float %35) #3, !dbg !36
  br label %__nv_sqrtf.exit, !dbg !36

__nv_sqrtf.exit:                                  ; preds = %39, %41, %44, %46
  %.0.i = phi float [ %40, %39 ], [ %42, %41 ], [ %45, %44 ], [ %47, %46 ], !dbg !36
  %48 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !37
  %49 = and i32 %48, 31, !dbg !37
  %50 = icmp eq i32 %49, 0, !dbg !37
  %51 = bitcast float %.0.i to i32, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %51, ptr addrspace(1) %1, i1 %50) #3, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnvsdowl4or5kk3owet6vydo6ltirkp25rutjt25dah27tef24pk.py", directory: "inductor_cache/nv")
!4 = !{ptr @triton_poi_fused__weight_norm_interface_12, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__weight_norm_interface_12, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__weight_norm_interface_12", linkageName: "triton_poi_fused__weight_norm_interface_12", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 30, scope: !7)
!12 = !DILocation(line: 26, column: 19, scope: !7)
!13 = !DILocation(line: 28, column: 30, scope: !7)
!14 = !DILocation(line: 28, column: 19, scope: !7)
!15 = !DILocation(line: 30, column: 31, scope: !7)
!16 = !DILocation(line: 30, column: 20, scope: !7)
!17 = !DILocation(line: 32, column: 31, scope: !7)
!18 = !DILocation(line: 32, column: 20, scope: !7)
!19 = !DILocation(line: 34, column: 31, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 36, column: 31, scope: !7)
!22 = !DILocation(line: 36, column: 20, scope: !7)
!23 = !DILocation(line: 38, column: 18, scope: !7)
!24 = !DILocation(line: 39, column: 18, scope: !7)
!25 = !DILocation(line: 40, column: 18, scope: !7)
!26 = !DILocation(line: 41, column: 18, scope: !7)
!27 = !DILocation(line: 42, column: 19, scope: !7)
!28 = !DILocation(line: 43, column: 20, scope: !7)
!29 = !DILocation(line: 44, column: 20, scope: !7)
!30 = !DILocation(line: 45, column: 20, scope: !7)
!31 = !DILocation(line: 46, column: 20, scope: !7)
!32 = !DILocation(line: 47, column: 20, scope: !7)
!33 = !DILocation(line: 48, column: 20, scope: !7)
!34 = !DILocation(line: 49, column: 20, scope: !7)
!35 = !DILocation(line: 50, column: 20, scope: !7)
!36 = !DILocation(line: 51, column: 27, scope: !7)
!37 = !DILocation(line: 52, column: 65, scope: !7)
!38 = !DILocation(line: 52, column: 4, scope: !7)
