; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 16, !dbg !14
  %17 = srem i32 %16, 64, !dbg !15
  %.frozen3 = freeze i32 %15, !dbg !16
  %18 = sdiv i32 %.frozen3, 1024, !dbg !16
  %19 = mul i32 %16, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %19, !dbg !17
  %.frozen1 = freeze i32 %15, !dbg !18
  %20 = sdiv i32 %.frozen1, 4, !dbg !18
  %21 = srem i32 %20, 4, !dbg !19
  %22 = mul i32 %20, 4, !dbg !20
  %.decomposed2 = sub i32 %.frozen1, %22, !dbg !20
  %23 = icmp slt i32 %17, 32, !dbg !21
  %24 = mul i32 %18, 1024, !dbg !22
  %srem.decomposed = sub i32 %.frozen3, %24, !dbg !22
  %25 = shl nsw i32 %18, 9, !dbg !23
  %26 = add nsw i32 %25, %srem.decomposed, !dbg !24
  %27 = sext i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %23, i32 0, i1 %23) #1, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = sext i32 %21 to i64, !dbg !27
  %32 = getelementptr i64, ptr addrspace(1) %1, i64 %31, !dbg !27
  %33 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %32, i1 %23, i1 %23) #1, !dbg !28
  %34 = lshr i64 %33, 62, !dbg !29
  %35 = and i64 %34, 2, !dbg !29
  %36 = add i64 %35, %33, !dbg !29
  %37 = sext i32 %.decomposed2 to i64, !dbg !30
  %38 = getelementptr i64, ptr addrspace(1) %2, i64 %37, !dbg !30
  %39 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %38, i1 %23, i1 %23) #1, !dbg !31
  %40 = lshr i64 %39, 62, !dbg !32
  %41 = and i64 %40, 2, !dbg !32
  %42 = shl i64 %36, 1, !dbg !33
  %43 = shl nsw i32 %17, 2, !dbg !34
  %44 = sext i32 %43 to i64, !dbg !35
  %45 = shl nsw i32 %18, 7, !dbg !36
  %46 = sext i32 %45 to i64, !dbg !37
  %47 = getelementptr float, ptr addrspace(1) %3, i64 %39, !dbg !38
  %48 = getelementptr float, ptr addrspace(1) %47, i64 %41, !dbg !38
  %49 = getelementptr float, ptr addrspace(1) %48, i64 %42, !dbg !38
  %50 = getelementptr float, ptr addrspace(1) %49, i64 %44, !dbg !38
  %51 = getelementptr float, ptr addrspace(1) %50, i64 %46, !dbg !38
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %23, i32 0, i1 %23) #1, !dbg !39
  %53 = bitcast i32 %52 to float, !dbg !39
  %54 = getelementptr i64, ptr addrspace(1) %4, i64 %37, !dbg !40
  %55 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u64 $0, 0x0;", "=l,l,b,b"(ptr addrspace(1) %54, i1 %23, i1 %23) #1, !dbg !41
  %56 = lshr i64 %55, 62, !dbg !42
  %57 = and i64 %56, 2, !dbg !42
  %58 = getelementptr float, ptr addrspace(1) %3, i64 %55, !dbg !43
  %59 = getelementptr float, ptr addrspace(1) %58, i64 %57, !dbg !43
  %60 = getelementptr float, ptr addrspace(1) %59, i64 %42, !dbg !43
  %61 = getelementptr float, ptr addrspace(1) %60, i64 %44, !dbg !43
  %62 = getelementptr float, ptr addrspace(1) %61, i64 %46, !dbg !43
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %23, i32 0, i1 %23) #1, !dbg !44
  %64 = bitcast i32 %63 to float, !dbg !44
  %65 = fsub float %64, %53, !dbg !45
  %66 = getelementptr float, ptr addrspace(1) %5, i64 %37, !dbg !46
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %23, i32 0, i1 %23) #1, !dbg !47
  %68 = bitcast i32 %67 to float, !dbg !47
  %69 = fmul float %65, %68, !dbg !48
  %70 = fadd float %69, %53, !dbg !49
  %71 = fsub float %70, %30, !dbg !50
  %72 = getelementptr float, ptr addrspace(1) %6, i64 %31, !dbg !51
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %23, i32 0, i1 %23) #1, !dbg !52
  %74 = bitcast i32 %73 to float, !dbg !52
  %75 = fmul float %71, %74, !dbg !53
  %76 = fadd float %75, %30, !dbg !54
  %77 = icmp sgt i32 %17, 31, !dbg !55
  %78 = shl nsw i32 %17, 4, !dbg !56
  %79 = add nsw i32 %.decomposed, -512, !dbg !56
  %80 = add nsw i32 %79, %25, !dbg !57
  %81 = add nsw i32 %80, %78, !dbg !58
  %82 = sext i32 %81 to i64, !dbg !59
  %83 = getelementptr float, ptr addrspace(1) %7, i64 %82, !dbg !59
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %83, i1 %77, i32 0, i1 %77) #1, !dbg !60
  %85 = sext i32 %15 to i64, !dbg !61
  %86 = getelementptr float, ptr addrspace(1) %8, i64 %85, !dbg !61
  %87 = bitcast float %76 to i32, !dbg !62
  %88 = select i1 %23, i32 %87, i32 %84, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %86, i1 true) #1, !dbg !62
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csz2nkkakcpbe46dun346pdkca4byzakptkzscd2asrpdrebe2za.py", directory: "inductor_cache/sz")
!4 = !{ptr @triton_poi_fused_cat_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_24, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_24", linkageName: "triton_poi_fused_cat_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 27, column: 26, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 35, scope: !7)
!23 = !DILocation(line: 35, column: 49, scope: !7)
!24 = !DILocation(line: 35, column: 45, scope: !7)
!25 = !DILocation(line: 35, column: 30, scope: !7)
!26 = !DILocation(line: 35, column: 54, scope: !7)
!27 = !DILocation(line: 36, column: 30, scope: !7)
!28 = !DILocation(line: 36, column: 35, scope: !7)
!29 = !DILocation(line: 40, column: 33, scope: !7)
!30 = !DILocation(line: 41, column: 31, scope: !7)
!31 = !DILocation(line: 41, column: 36, scope: !7)
!32 = !DILocation(line: 44, column: 35, scope: !7)
!33 = !DILocation(line: 45, column: 41, scope: !7)
!34 = !DILocation(line: 45, column: 52, scope: !7)
!35 = !DILocation(line: 45, column: 49, scope: !7)
!36 = !DILocation(line: 45, column: 62, scope: !7)
!37 = !DILocation(line: 45, column: 58, scope: !7)
!38 = !DILocation(line: 45, column: 31, scope: !7)
!39 = !DILocation(line: 45, column: 67, scope: !7)
!40 = !DILocation(line: 46, column: 31, scope: !7)
!41 = !DILocation(line: 46, column: 36, scope: !7)
!42 = !DILocation(line: 49, column: 35, scope: !7)
!43 = !DILocation(line: 50, column: 31, scope: !7)
!44 = !DILocation(line: 50, column: 67, scope: !7)
!45 = !DILocation(line: 51, column: 20, scope: !7)
!46 = !DILocation(line: 52, column: 31, scope: !7)
!47 = !DILocation(line: 52, column: 36, scope: !7)
!48 = !DILocation(line: 53, column: 20, scope: !7)
!49 = !DILocation(line: 54, column: 20, scope: !7)
!50 = !DILocation(line: 55, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 31, scope: !7)
!52 = !DILocation(line: 56, column: 36, scope: !7)
!53 = !DILocation(line: 57, column: 20, scope: !7)
!54 = !DILocation(line: 58, column: 19, scope: !7)
!55 = !DILocation(line: 61, column: 20, scope: !7)
!56 = !DILocation(line: 64, column: 40, scope: !7)
!57 = !DILocation(line: 64, column: 36, scope: !7)
!58 = !DILocation(line: 64, column: 54, scope: !7)
!59 = !DILocation(line: 64, column: 31, scope: !7)
!60 = !DILocation(line: 64, column: 63, scope: !7)
!61 = !DILocation(line: 66, column: 25, scope: !7)
!62 = !DILocation(line: 66, column: 37, scope: !7)
!63 = !DILocation(line: 0, scope: !7)
!64 = !DILocation(line: 66, column: 4, scope: !7)
