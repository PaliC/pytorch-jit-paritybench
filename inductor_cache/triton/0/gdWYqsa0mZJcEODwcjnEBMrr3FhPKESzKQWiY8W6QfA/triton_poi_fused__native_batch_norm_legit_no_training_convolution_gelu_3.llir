; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 10, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 2, !dbg !12
  %13 = and i32 %12, 508, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = or disjoint i32 %14, 512, !dbg !13
  %16 = srem i32 %14, 48, !dbg !14
  %17 = srem i32 %15, 48, !dbg !14
  %18 = sext i32 %14 to i64, !dbg !15
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !15
  %20 = sext i32 %15 to i64, !dbg !15
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !15
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #3, !dbg !16
  %23 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !16
  %24 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !16
  %25 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !16
  %26 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !16
  %27 = bitcast i32 %23 to float, !dbg !16
  %28 = bitcast i32 %24 to float, !dbg !16
  %29 = bitcast i32 %25 to float, !dbg !16
  %30 = bitcast i32 %26 to float, !dbg !16
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #3, !dbg !16
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !16
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !16
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !16
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !16
  %36 = bitcast i32 %32 to float, !dbg !16
  %37 = bitcast i32 %33 to float, !dbg !16
  %38 = bitcast i32 %34 to float, !dbg !16
  %39 = bitcast i32 %35 to float, !dbg !16
  %40 = sext i32 %16 to i64, !dbg !17
  %41 = getelementptr float, ptr addrspace(1) %2, i64 %40, !dbg !17
  %42 = sext i32 %17 to i64, !dbg !17
  %43 = getelementptr float, ptr addrspace(1) %2, i64 %42, !dbg !17
  %44 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %41, i1 true) #3, !dbg !18
  %45 = extractvalue { i32, i32, i32, i32 } %44, 0, !dbg !18
  %46 = extractvalue { i32, i32, i32, i32 } %44, 1, !dbg !18
  %47 = extractvalue { i32, i32, i32, i32 } %44, 2, !dbg !18
  %48 = extractvalue { i32, i32, i32, i32 } %44, 3, !dbg !18
  %49 = bitcast i32 %45 to float, !dbg !18
  %50 = bitcast i32 %46 to float, !dbg !18
  %51 = bitcast i32 %47 to float, !dbg !18
  %52 = bitcast i32 %48 to float, !dbg !18
  %53 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %43, i1 true) #3, !dbg !18
  %54 = extractvalue { i32, i32, i32, i32 } %53, 0, !dbg !18
  %55 = extractvalue { i32, i32, i32, i32 } %53, 1, !dbg !18
  %56 = extractvalue { i32, i32, i32, i32 } %53, 2, !dbg !18
  %57 = extractvalue { i32, i32, i32, i32 } %53, 3, !dbg !18
  %58 = bitcast i32 %54 to float, !dbg !18
  %59 = bitcast i32 %55 to float, !dbg !18
  %60 = bitcast i32 %56 to float, !dbg !18
  %61 = bitcast i32 %57 to float, !dbg !18
  %62 = getelementptr float, ptr addrspace(1) %3, i64 %40, !dbg !19
  %63 = getelementptr float, ptr addrspace(1) %3, i64 %42, !dbg !19
  %64 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !20
  %65 = extractvalue { i32, i32, i32, i32 } %64, 0, !dbg !20
  %66 = extractvalue { i32, i32, i32, i32 } %64, 1, !dbg !20
  %67 = extractvalue { i32, i32, i32, i32 } %64, 2, !dbg !20
  %68 = extractvalue { i32, i32, i32, i32 } %64, 3, !dbg !20
  %69 = bitcast i32 %65 to float, !dbg !20
  %70 = bitcast i32 %66 to float, !dbg !20
  %71 = bitcast i32 %67 to float, !dbg !20
  %72 = bitcast i32 %68 to float, !dbg !20
  %73 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %63, i1 true) #3, !dbg !20
  %74 = extractvalue { i32, i32, i32, i32 } %73, 0, !dbg !20
  %75 = extractvalue { i32, i32, i32, i32 } %73, 1, !dbg !20
  %76 = extractvalue { i32, i32, i32, i32 } %73, 2, !dbg !20
  %77 = extractvalue { i32, i32, i32, i32 } %73, 3, !dbg !20
  %78 = bitcast i32 %74 to float, !dbg !20
  %79 = bitcast i32 %75 to float, !dbg !20
  %80 = bitcast i32 %76 to float, !dbg !20
  %81 = bitcast i32 %77 to float, !dbg !20
  %82 = getelementptr float, ptr addrspace(1) %4, i64 %40, !dbg !21
  %83 = getelementptr float, ptr addrspace(1) %4, i64 %42, !dbg !21
  %84 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %82, i1 true) #3, !dbg !22
  %85 = extractvalue { i32, i32, i32, i32 } %84, 0, !dbg !22
  %86 = extractvalue { i32, i32, i32, i32 } %84, 1, !dbg !22
  %87 = extractvalue { i32, i32, i32, i32 } %84, 2, !dbg !22
  %88 = extractvalue { i32, i32, i32, i32 } %84, 3, !dbg !22
  %89 = bitcast i32 %85 to float, !dbg !22
  %90 = bitcast i32 %86 to float, !dbg !22
  %91 = bitcast i32 %87 to float, !dbg !22
  %92 = bitcast i32 %88 to float, !dbg !22
  %93 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %83, i1 true) #3, !dbg !22
  %94 = extractvalue { i32, i32, i32, i32 } %93, 0, !dbg !22
  %95 = extractvalue { i32, i32, i32, i32 } %93, 1, !dbg !22
  %96 = extractvalue { i32, i32, i32, i32 } %93, 2, !dbg !22
  %97 = extractvalue { i32, i32, i32, i32 } %93, 3, !dbg !22
  %98 = bitcast i32 %94 to float, !dbg !22
  %99 = bitcast i32 %95 to float, !dbg !22
  %100 = bitcast i32 %96 to float, !dbg !22
  %101 = bitcast i32 %97 to float, !dbg !22
  %102 = getelementptr float, ptr addrspace(1) %5, i64 %40, !dbg !23
  %103 = getelementptr float, ptr addrspace(1) %5, i64 %42, !dbg !23
  %104 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %102, i1 true) #3, !dbg !24
  %105 = extractvalue { i32, i32, i32, i32 } %104, 0, !dbg !24
  %106 = extractvalue { i32, i32, i32, i32 } %104, 1, !dbg !24
  %107 = extractvalue { i32, i32, i32, i32 } %104, 2, !dbg !24
  %108 = extractvalue { i32, i32, i32, i32 } %104, 3, !dbg !24
  %109 = bitcast i32 %105 to float, !dbg !24
  %110 = bitcast i32 %106 to float, !dbg !24
  %111 = bitcast i32 %107 to float, !dbg !24
  %112 = bitcast i32 %108 to float, !dbg !24
  %113 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %103, i1 true) #3, !dbg !24
  %114 = extractvalue { i32, i32, i32, i32 } %113, 0, !dbg !24
  %115 = extractvalue { i32, i32, i32, i32 } %113, 1, !dbg !24
  %116 = extractvalue { i32, i32, i32, i32 } %113, 2, !dbg !24
  %117 = extractvalue { i32, i32, i32, i32 } %113, 3, !dbg !24
  %118 = bitcast i32 %114 to float, !dbg !24
  %119 = bitcast i32 %115 to float, !dbg !24
  %120 = bitcast i32 %116 to float, !dbg !24
  %121 = bitcast i32 %117 to float, !dbg !24
  %122 = getelementptr float, ptr addrspace(1) %6, i64 %40, !dbg !25
  %123 = getelementptr float, ptr addrspace(1) %6, i64 %42, !dbg !25
  %124 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %122, i1 true) #3, !dbg !26
  %125 = extractvalue { i32, i32, i32, i32 } %124, 0, !dbg !26
  %126 = extractvalue { i32, i32, i32, i32 } %124, 1, !dbg !26
  %127 = extractvalue { i32, i32, i32, i32 } %124, 2, !dbg !26
  %128 = extractvalue { i32, i32, i32, i32 } %124, 3, !dbg !26
  %129 = bitcast i32 %125 to float, !dbg !26
  %130 = bitcast i32 %126 to float, !dbg !26
  %131 = bitcast i32 %127 to float, !dbg !26
  %132 = bitcast i32 %128 to float, !dbg !26
  %133 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %123, i1 true) #3, !dbg !26
  %134 = extractvalue { i32, i32, i32, i32 } %133, 0, !dbg !26
  %135 = extractvalue { i32, i32, i32, i32 } %133, 1, !dbg !26
  %136 = extractvalue { i32, i32, i32, i32 } %133, 2, !dbg !26
  %137 = extractvalue { i32, i32, i32, i32 } %133, 3, !dbg !26
  %138 = bitcast i32 %134 to float, !dbg !26
  %139 = bitcast i32 %135 to float, !dbg !26
  %140 = bitcast i32 %136 to float, !dbg !26
  %141 = bitcast i32 %137 to float, !dbg !26
  %142 = fadd float %27, %49, !dbg !27
  %143 = fadd float %28, %50, !dbg !27
  %144 = fadd float %29, %51, !dbg !27
  %145 = fadd float %30, %52, !dbg !27
  %146 = fadd float %36, %58, !dbg !27
  %147 = fadd float %37, %59, !dbg !27
  %148 = fadd float %38, %60, !dbg !27
  %149 = fadd float %39, %61, !dbg !27
  %150 = fsub float %142, %69, !dbg !28
  %151 = fsub float %143, %70, !dbg !28
  %152 = fsub float %144, %71, !dbg !28
  %153 = fsub float %145, %72, !dbg !28
  %154 = fsub float %146, %78, !dbg !28
  %155 = fsub float %147, %79, !dbg !28
  %156 = fsub float %148, %80, !dbg !28
  %157 = fsub float %149, %81, !dbg !28
  %158 = fadd float %89, 0x3EE4F8B580000000, !dbg !29
  %159 = fadd float %90, 0x3EE4F8B580000000, !dbg !29
  %160 = fadd float %91, 0x3EE4F8B580000000, !dbg !29
  %161 = fadd float %92, 0x3EE4F8B580000000, !dbg !29
  %162 = fadd float %98, 0x3EE4F8B580000000, !dbg !29
  %163 = fadd float %99, 0x3EE4F8B580000000, !dbg !29
  %164 = fadd float %100, 0x3EE4F8B580000000, !dbg !29
  %165 = fadd float %101, 0x3EE4F8B580000000, !dbg !29
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %166, 0, !dbg !30
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i = icmp eq i32 %167, 0, !dbg !30
  br i1 %.not.i, label %173, label %168, !dbg !30

168:                                              ; preds = %8
  br i1 %.not1.i, label %171, label %169, !dbg !30

169:                                              ; preds = %168
  %170 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %158) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

171:                                              ; preds = %168
  %172 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %158) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

173:                                              ; preds = %8
  br i1 %.not1.i, label %176, label %174, !dbg !30

174:                                              ; preds = %173
  %175 = tail call float @llvm.nvvm.sqrt.rn.f(float %158) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

176:                                              ; preds = %173
  %177 = tail call float @llvm.nvvm.sqrt.approx.f(float %158) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

__nv_sqrtf.exit:                                  ; preds = %169, %171, %174, %176
  %.0.i = phi float [ %170, %169 ], [ %172, %171 ], [ %175, %174 ], [ %177, %176 ], !dbg !30
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i1 = icmp eq i32 %178, 0, !dbg !30
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i4 = icmp eq i32 %179, 0, !dbg !30
  br i1 %.not.i1, label %185, label %180, !dbg !30

180:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %183, label %181, !dbg !30

181:                                              ; preds = %180
  %182 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %159) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

183:                                              ; preds = %180
  %184 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %159) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

185:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %188, label %186, !dbg !30

186:                                              ; preds = %185
  %187 = tail call float @llvm.nvvm.sqrt.rn.f(float %159) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

188:                                              ; preds = %185
  %189 = tail call float @llvm.nvvm.sqrt.approx.f(float %159) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

__nv_sqrtf.exit5:                                 ; preds = %181, %183, %186, %188
  %.0.i3 = phi float [ %182, %181 ], [ %184, %183 ], [ %187, %186 ], [ %189, %188 ], !dbg !30
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i6 = icmp eq i32 %190, 0, !dbg !30
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i9 = icmp eq i32 %191, 0, !dbg !30
  br i1 %.not.i6, label %197, label %192, !dbg !30

192:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %195, label %193, !dbg !30

193:                                              ; preds = %192
  %194 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %160) #3, !dbg !30
  br label %__nv_sqrtf.exit10, !dbg !30

195:                                              ; preds = %192
  %196 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %160) #3, !dbg !30
  br label %__nv_sqrtf.exit10, !dbg !30

197:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %200, label %198, !dbg !30

198:                                              ; preds = %197
  %199 = tail call float @llvm.nvvm.sqrt.rn.f(float %160) #3, !dbg !30
  br label %__nv_sqrtf.exit10, !dbg !30

200:                                              ; preds = %197
  %201 = tail call float @llvm.nvvm.sqrt.approx.f(float %160) #3, !dbg !30
  br label %__nv_sqrtf.exit10, !dbg !30

__nv_sqrtf.exit10:                                ; preds = %193, %195, %198, %200
  %.0.i8 = phi float [ %194, %193 ], [ %196, %195 ], [ %199, %198 ], [ %201, %200 ], !dbg !30
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i11 = icmp eq i32 %202, 0, !dbg !30
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i14 = icmp eq i32 %203, 0, !dbg !30
  br i1 %.not.i11, label %209, label %204, !dbg !30

204:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %207, label %205, !dbg !30

205:                                              ; preds = %204
  %206 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %161) #3, !dbg !30
  br label %__nv_sqrtf.exit15, !dbg !30

207:                                              ; preds = %204
  %208 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %161) #3, !dbg !30
  br label %__nv_sqrtf.exit15, !dbg !30

209:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %212, label %210, !dbg !30

210:                                              ; preds = %209
  %211 = tail call float @llvm.nvvm.sqrt.rn.f(float %161) #3, !dbg !30
  br label %__nv_sqrtf.exit15, !dbg !30

212:                                              ; preds = %209
  %213 = tail call float @llvm.nvvm.sqrt.approx.f(float %161) #3, !dbg !30
  br label %__nv_sqrtf.exit15, !dbg !30

__nv_sqrtf.exit15:                                ; preds = %205, %207, %210, %212
  %.0.i13 = phi float [ %206, %205 ], [ %208, %207 ], [ %211, %210 ], [ %213, %212 ], !dbg !30
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i16 = icmp eq i32 %214, 0, !dbg !30
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i19 = icmp eq i32 %215, 0, !dbg !30
  br i1 %.not.i16, label %221, label %216, !dbg !30

216:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %219, label %217, !dbg !30

217:                                              ; preds = %216
  %218 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %162) #3, !dbg !30
  br label %__nv_sqrtf.exit20, !dbg !30

219:                                              ; preds = %216
  %220 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %162) #3, !dbg !30
  br label %__nv_sqrtf.exit20, !dbg !30

221:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %224, label %222, !dbg !30

222:                                              ; preds = %221
  %223 = tail call float @llvm.nvvm.sqrt.rn.f(float %162) #3, !dbg !30
  br label %__nv_sqrtf.exit20, !dbg !30

224:                                              ; preds = %221
  %225 = tail call float @llvm.nvvm.sqrt.approx.f(float %162) #3, !dbg !30
  br label %__nv_sqrtf.exit20, !dbg !30

__nv_sqrtf.exit20:                                ; preds = %217, %219, %222, %224
  %.0.i18 = phi float [ %218, %217 ], [ %220, %219 ], [ %223, %222 ], [ %225, %224 ], !dbg !30
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i21 = icmp eq i32 %226, 0, !dbg !30
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i24 = icmp eq i32 %227, 0, !dbg !30
  br i1 %.not.i21, label %233, label %228, !dbg !30

228:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %231, label %229, !dbg !30

229:                                              ; preds = %228
  %230 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %163) #3, !dbg !30
  br label %__nv_sqrtf.exit25, !dbg !30

231:                                              ; preds = %228
  %232 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %163) #3, !dbg !30
  br label %__nv_sqrtf.exit25, !dbg !30

233:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %236, label %234, !dbg !30

234:                                              ; preds = %233
  %235 = tail call float @llvm.nvvm.sqrt.rn.f(float %163) #3, !dbg !30
  br label %__nv_sqrtf.exit25, !dbg !30

236:                                              ; preds = %233
  %237 = tail call float @llvm.nvvm.sqrt.approx.f(float %163) #3, !dbg !30
  br label %__nv_sqrtf.exit25, !dbg !30

__nv_sqrtf.exit25:                                ; preds = %229, %231, %234, %236
  %.0.i23 = phi float [ %230, %229 ], [ %232, %231 ], [ %235, %234 ], [ %237, %236 ], !dbg !30
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i26 = icmp eq i32 %238, 0, !dbg !30
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i29 = icmp eq i32 %239, 0, !dbg !30
  br i1 %.not.i26, label %245, label %240, !dbg !30

240:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %243, label %241, !dbg !30

241:                                              ; preds = %240
  %242 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %164) #3, !dbg !30
  br label %__nv_sqrtf.exit30, !dbg !30

243:                                              ; preds = %240
  %244 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %164) #3, !dbg !30
  br label %__nv_sqrtf.exit30, !dbg !30

245:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %248, label %246, !dbg !30

246:                                              ; preds = %245
  %247 = tail call float @llvm.nvvm.sqrt.rn.f(float %164) #3, !dbg !30
  br label %__nv_sqrtf.exit30, !dbg !30

248:                                              ; preds = %245
  %249 = tail call float @llvm.nvvm.sqrt.approx.f(float %164) #3, !dbg !30
  br label %__nv_sqrtf.exit30, !dbg !30

__nv_sqrtf.exit30:                                ; preds = %241, %243, %246, %248
  %.0.i28 = phi float [ %242, %241 ], [ %244, %243 ], [ %247, %246 ], [ %249, %248 ], !dbg !30
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i31 = icmp eq i32 %250, 0, !dbg !30
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i34 = icmp eq i32 %251, 0, !dbg !30
  br i1 %.not.i31, label %257, label %252, !dbg !30

252:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %255, label %253, !dbg !30

253:                                              ; preds = %252
  %254 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %165) #3, !dbg !30
  br label %__nv_sqrtf.exit35, !dbg !30

255:                                              ; preds = %252
  %256 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %165) #3, !dbg !30
  br label %__nv_sqrtf.exit35, !dbg !30

257:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %260, label %258, !dbg !30

258:                                              ; preds = %257
  %259 = tail call float @llvm.nvvm.sqrt.rn.f(float %165) #3, !dbg !30
  br label %__nv_sqrtf.exit35, !dbg !30

260:                                              ; preds = %257
  %261 = tail call float @llvm.nvvm.sqrt.approx.f(float %165) #3, !dbg !30
  br label %__nv_sqrtf.exit35, !dbg !30

__nv_sqrtf.exit35:                                ; preds = %253, %255, %258, %260
  %.0.i33 = phi float [ %254, %253 ], [ %256, %255 ], [ %259, %258 ], [ %261, %260 ], !dbg !30
  %262 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !31
  %263 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !31
  %264 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !31
  %265 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !31
  %266 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i18) #3, !dbg !31
  %267 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i23) #3, !dbg !31
  %268 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i28) #3, !dbg !31
  %269 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i33) #3, !dbg !31
  %270 = fmul float %150, %262, !dbg !32
  %271 = fmul float %151, %263, !dbg !32
  %272 = fmul float %152, %264, !dbg !32
  %273 = fmul float %153, %265, !dbg !32
  %274 = fmul float %154, %266, !dbg !32
  %275 = fmul float %155, %267, !dbg !32
  %276 = fmul float %156, %268, !dbg !32
  %277 = fmul float %157, %269, !dbg !32
  %278 = fmul float %270, %109, !dbg !33
  %279 = fmul float %271, %110, !dbg !33
  %280 = fmul float %272, %111, !dbg !33
  %281 = fmul float %273, %112, !dbg !33
  %282 = fmul float %274, %118, !dbg !33
  %283 = fmul float %275, %119, !dbg !33
  %284 = fmul float %276, %120, !dbg !33
  %285 = fmul float %277, %121, !dbg !33
  %286 = fadd float %278, %129, !dbg !34
  %287 = fadd float %279, %130, !dbg !34
  %288 = fadd float %280, %131, !dbg !34
  %289 = fadd float %281, %132, !dbg !34
  %290 = fadd float %282, %138, !dbg !34
  %291 = fadd float %283, %139, !dbg !34
  %292 = fadd float %284, %140, !dbg !34
  %293 = fadd float %285, %141, !dbg !34
  %294 = fmul float %286, 0x3FE6A09E60000000, !dbg !35
  %295 = fmul float %287, 0x3FE6A09E60000000, !dbg !35
  %296 = fmul float %288, 0x3FE6A09E60000000, !dbg !35
  %297 = fmul float %289, 0x3FE6A09E60000000, !dbg !35
  %298 = fmul float %290, 0x3FE6A09E60000000, !dbg !35
  %299 = fmul float %291, 0x3FE6A09E60000000, !dbg !35
  %300 = fmul float %292, 0x3FE6A09E60000000, !dbg !35
  %301 = fmul float %293, 0x3FE6A09E60000000, !dbg !35
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i36 = icmp eq i32 %302, 0, !dbg !36
  %303 = tail call float @llvm.nvvm.fabs.ftz.f(float %294) #3, !dbg !36
  %304 = tail call float @llvm.nvvm.fabs.f(float %294) #3, !dbg !36
  %.0.i37 = select i1 %.not.i36, float %304, float %303, !dbg !36
  %305 = fcmp oge float %.0.i37, 0x3FF00C1FC0000000, !dbg !36
  br i1 %305, label %__nv_fabsf.exit1.i, label %307, !dbg !36

__nv_fabsf.exit1.i:                               ; preds = %__nv_sqrtf.exit35
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i39 = icmp eq i32 %306, 0, !dbg !36
  %.01.i = select i1 %.not1.i39, float %304, float %303, !dbg !36
  br label %__internal_fmad.exit.i, !dbg !36

307:                                              ; preds = %__nv_sqrtf.exit35
  %308 = fmul float %294, %294, !dbg !36
  br label %__internal_fmad.exit.i, !dbg !36

__internal_fmad.exit.i:                           ; preds = %307, %__nv_fabsf.exit1.i
  %309 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %307 ], !dbg !36
  %310 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %307 ], !dbg !36
  %311 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %307 ], !dbg !36
  %312 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %307 ], !dbg !36
  %313 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %307 ], !dbg !36
  %314 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %307 ], !dbg !36
  %315 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %307 ], !dbg !36
  %316 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %308, %307 ], !dbg !36
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i38 = icmp eq i32 %317, 0, !dbg !36
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %315, float %316, float %314) #3, !dbg !36
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %315, float %316, float %314) #3, !dbg !36
  %.02.i = select i1 %.not2.i38, float %319, float %318, !dbg !36
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i = icmp eq i32 %320, 0, !dbg !36
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %316, float %313) #3, !dbg !36
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %316, float %313) #3, !dbg !36
  %.03.i = select i1 %.not3.i, float %322, float %321, !dbg !36
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i = icmp eq i32 %323, 0, !dbg !36
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %316, float %312) #3, !dbg !36
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %316, float %312) #3, !dbg !36
  %.04.i = select i1 %.not4.i, float %325, float %324, !dbg !36
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i = icmp eq i32 %326, 0, !dbg !36
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %316, float %311) #3, !dbg !36
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %316, float %311) #3, !dbg !36
  %.05.i = select i1 %.not5.i, float %328, float %327, !dbg !36
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i = icmp eq i32 %329, 0, !dbg !36
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %316, float %310) #3, !dbg !36
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %316, float %310) #3, !dbg !36
  %.06.i = select i1 %.not6.i, float %331, float %330, !dbg !36
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i = icmp eq i32 %332, 0, !dbg !36
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %316, float %309) #3, !dbg !36
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %316, float %309) #3, !dbg !36
  %.07.i = select i1 %.not7.i, float %334, float %333, !dbg !36
  %335 = fneg float %316, !dbg !36
  %336 = select i1 %305, float %335, float %294, !dbg !36
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i = icmp eq i32 %337, 0, !dbg !36
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %336, float %336) #3, !dbg !36
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %336, float %336) #3, !dbg !36
  %.08.i = select i1 %.not8.i, float %339, float %338, !dbg !36
  br i1 %305, label %340, label %__nv_erff.exit, !dbg !36

340:                                              ; preds = %__internal_fmad.exit.i
  %341 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !36
  %342 = fsub float 1.000000e+00, %341, !dbg !36
  %343 = bitcast float %342 to i32, !dbg !36
  %344 = bitcast float %294 to i32, !dbg !36
  %345 = and i32 %344, -2147483648, !dbg !36
  %346 = or i32 %345, %343, !dbg !36
  %347 = bitcast i32 %346 to float, !dbg !36
  br label %__nv_erff.exit, !dbg !36

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %340
  %r.0.i = phi float [ %347, %340 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !36
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i40 = icmp eq i32 %348, 0, !dbg !36
  %349 = tail call float @llvm.nvvm.fabs.ftz.f(float %295) #3, !dbg !36
  %350 = tail call float @llvm.nvvm.fabs.f(float %295) #3, !dbg !36
  %.0.i41 = select i1 %.not.i40, float %350, float %349, !dbg !36
  %351 = fcmp oge float %.0.i41, 0x3FF00C1FC0000000, !dbg !36
  br i1 %351, label %__nv_fabsf.exit1.i58, label %353, !dbg !36

__nv_fabsf.exit1.i58:                             ; preds = %__nv_erff.exit
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i59 = icmp eq i32 %352, 0, !dbg !36
  %.01.i60 = select i1 %.not1.i59, float %350, float %349, !dbg !36
  br label %__internal_fmad.exit.i42, !dbg !36

353:                                              ; preds = %__nv_erff.exit
  %354 = fmul float %295, %295, !dbg !36
  br label %__internal_fmad.exit.i42, !dbg !36

__internal_fmad.exit.i42:                         ; preds = %353, %__nv_fabsf.exit1.i58
  %355 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i58 ], [ 0x3FC06EBA60000000, %353 ], !dbg !36
  %356 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i58 ], [ 0xBFD8127580000000, %353 ], !dbg !36
  %357 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i58 ], [ 0x3FBCE315E0000000, %353 ], !dbg !36
  %358 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i58 ], [ 0xBF9B837CE0000000, %353 ], !dbg !36
  %359 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i58 ], [ 0x3F755ABD40000000, %353 ], !dbg !36
  %360 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i58 ], [ 0xBF4AE9A400000000, %353 ], !dbg !36
  %361 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i58 ], [ 0x3F163D2D40000000, %353 ], !dbg !36
  %362 = phi float [ %.01.i60, %__nv_fabsf.exit1.i58 ], [ %354, %353 ], !dbg !36
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i43 = icmp eq i32 %363, 0, !dbg !36
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %361, float %362, float %360) #3, !dbg !36
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %361, float %362, float %360) #3, !dbg !36
  %.02.i44 = select i1 %.not2.i43, float %365, float %364, !dbg !36
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i45 = icmp eq i32 %366, 0, !dbg !36
  %367 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i44, float %362, float %359) #3, !dbg !36
  %368 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i44, float %362, float %359) #3, !dbg !36
  %.03.i46 = select i1 %.not3.i45, float %368, float %367, !dbg !36
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i47 = icmp eq i32 %369, 0, !dbg !36
  %370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i46, float %362, float %358) #3, !dbg !36
  %371 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i46, float %362, float %358) #3, !dbg !36
  %.04.i48 = select i1 %.not4.i47, float %371, float %370, !dbg !36
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i49 = icmp eq i32 %372, 0, !dbg !36
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i48, float %362, float %357) #3, !dbg !36
  %374 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i48, float %362, float %357) #3, !dbg !36
  %.05.i50 = select i1 %.not5.i49, float %374, float %373, !dbg !36
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i51 = icmp eq i32 %375, 0, !dbg !36
  %376 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %362, float %356) #3, !dbg !36
  %377 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %362, float %356) #3, !dbg !36
  %.06.i52 = select i1 %.not6.i51, float %377, float %376, !dbg !36
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i53 = icmp eq i32 %378, 0, !dbg !36
  %379 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i52, float %362, float %355) #3, !dbg !36
  %380 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i52, float %362, float %355) #3, !dbg !36
  %.07.i54 = select i1 %.not7.i53, float %380, float %379, !dbg !36
  %381 = fneg float %362, !dbg !36
  %382 = select i1 %351, float %381, float %295, !dbg !36
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i55 = icmp eq i32 %383, 0, !dbg !36
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i54, float %382, float %382) #3, !dbg !36
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i54, float %382, float %382) #3, !dbg !36
  %.08.i56 = select i1 %.not8.i55, float %385, float %384, !dbg !36
  br i1 %351, label %386, label %__nv_erff.exit61, !dbg !36

386:                                              ; preds = %__internal_fmad.exit.i42
  %387 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i56) #3, !dbg !36
  %388 = fsub float 1.000000e+00, %387, !dbg !36
  %389 = bitcast float %388 to i32, !dbg !36
  %390 = bitcast float %295 to i32, !dbg !36
  %391 = and i32 %390, -2147483648, !dbg !36
  %392 = or i32 %391, %389, !dbg !36
  %393 = bitcast i32 %392 to float, !dbg !36
  br label %__nv_erff.exit61, !dbg !36

__nv_erff.exit61:                                 ; preds = %__internal_fmad.exit.i42, %386
  %r.0.i57 = phi float [ %393, %386 ], [ %.08.i56, %__internal_fmad.exit.i42 ], !dbg !36
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i62 = icmp eq i32 %394, 0, !dbg !36
  %395 = tail call float @llvm.nvvm.fabs.ftz.f(float %296) #3, !dbg !36
  %396 = tail call float @llvm.nvvm.fabs.f(float %296) #3, !dbg !36
  %.0.i63 = select i1 %.not.i62, float %396, float %395, !dbg !36
  %397 = fcmp oge float %.0.i63, 0x3FF00C1FC0000000, !dbg !36
  br i1 %397, label %__nv_fabsf.exit1.i80, label %399, !dbg !36

__nv_fabsf.exit1.i80:                             ; preds = %__nv_erff.exit61
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i81 = icmp eq i32 %398, 0, !dbg !36
  %.01.i82 = select i1 %.not1.i81, float %396, float %395, !dbg !36
  br label %__internal_fmad.exit.i64, !dbg !36

399:                                              ; preds = %__nv_erff.exit61
  %400 = fmul float %296, %296, !dbg !36
  br label %__internal_fmad.exit.i64, !dbg !36

__internal_fmad.exit.i64:                         ; preds = %399, %__nv_fabsf.exit1.i80
  %401 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i80 ], [ 0x3FC06EBA60000000, %399 ], !dbg !36
  %402 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i80 ], [ 0xBFD8127580000000, %399 ], !dbg !36
  %403 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i80 ], [ 0x3FBCE315E0000000, %399 ], !dbg !36
  %404 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i80 ], [ 0xBF9B837CE0000000, %399 ], !dbg !36
  %405 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i80 ], [ 0x3F755ABD40000000, %399 ], !dbg !36
  %406 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i80 ], [ 0xBF4AE9A400000000, %399 ], !dbg !36
  %407 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i80 ], [ 0x3F163D2D40000000, %399 ], !dbg !36
  %408 = phi float [ %.01.i82, %__nv_fabsf.exit1.i80 ], [ %400, %399 ], !dbg !36
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i65 = icmp eq i32 %409, 0, !dbg !36
  %410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %407, float %408, float %406) #3, !dbg !36
  %411 = tail call float @llvm.nvvm.fma.rn.f(float %407, float %408, float %406) #3, !dbg !36
  %.02.i66 = select i1 %.not2.i65, float %411, float %410, !dbg !36
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i67 = icmp eq i32 %412, 0, !dbg !36
  %413 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i66, float %408, float %405) #3, !dbg !36
  %414 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i66, float %408, float %405) #3, !dbg !36
  %.03.i68 = select i1 %.not3.i67, float %414, float %413, !dbg !36
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i69 = icmp eq i32 %415, 0, !dbg !36
  %416 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i68, float %408, float %404) #3, !dbg !36
  %417 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i68, float %408, float %404) #3, !dbg !36
  %.04.i70 = select i1 %.not4.i69, float %417, float %416, !dbg !36
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i71 = icmp eq i32 %418, 0, !dbg !36
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i70, float %408, float %403) #3, !dbg !36
  %420 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i70, float %408, float %403) #3, !dbg !36
  %.05.i72 = select i1 %.not5.i71, float %420, float %419, !dbg !36
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i73 = icmp eq i32 %421, 0, !dbg !36
  %422 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i72, float %408, float %402) #3, !dbg !36
  %423 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i72, float %408, float %402) #3, !dbg !36
  %.06.i74 = select i1 %.not6.i73, float %423, float %422, !dbg !36
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i75 = icmp eq i32 %424, 0, !dbg !36
  %425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i74, float %408, float %401) #3, !dbg !36
  %426 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i74, float %408, float %401) #3, !dbg !36
  %.07.i76 = select i1 %.not7.i75, float %426, float %425, !dbg !36
  %427 = fneg float %408, !dbg !36
  %428 = select i1 %397, float %427, float %296, !dbg !36
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i77 = icmp eq i32 %429, 0, !dbg !36
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i76, float %428, float %428) #3, !dbg !36
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i76, float %428, float %428) #3, !dbg !36
  %.08.i78 = select i1 %.not8.i77, float %431, float %430, !dbg !36
  br i1 %397, label %432, label %__nv_erff.exit83, !dbg !36

432:                                              ; preds = %__internal_fmad.exit.i64
  %433 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i78) #3, !dbg !36
  %434 = fsub float 1.000000e+00, %433, !dbg !36
  %435 = bitcast float %434 to i32, !dbg !36
  %436 = bitcast float %296 to i32, !dbg !36
  %437 = and i32 %436, -2147483648, !dbg !36
  %438 = or i32 %437, %435, !dbg !36
  %439 = bitcast i32 %438 to float, !dbg !36
  br label %__nv_erff.exit83, !dbg !36

__nv_erff.exit83:                                 ; preds = %__internal_fmad.exit.i64, %432
  %r.0.i79 = phi float [ %439, %432 ], [ %.08.i78, %__internal_fmad.exit.i64 ], !dbg !36
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i84 = icmp eq i32 %440, 0, !dbg !36
  %441 = tail call float @llvm.nvvm.fabs.ftz.f(float %297) #3, !dbg !36
  %442 = tail call float @llvm.nvvm.fabs.f(float %297) #3, !dbg !36
  %.0.i85 = select i1 %.not.i84, float %442, float %441, !dbg !36
  %443 = fcmp oge float %.0.i85, 0x3FF00C1FC0000000, !dbg !36
  br i1 %443, label %__nv_fabsf.exit1.i102, label %445, !dbg !36

__nv_fabsf.exit1.i102:                            ; preds = %__nv_erff.exit83
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i103 = icmp eq i32 %444, 0, !dbg !36
  %.01.i104 = select i1 %.not1.i103, float %442, float %441, !dbg !36
  br label %__internal_fmad.exit.i86, !dbg !36

445:                                              ; preds = %__nv_erff.exit83
  %446 = fmul float %297, %297, !dbg !36
  br label %__internal_fmad.exit.i86, !dbg !36

__internal_fmad.exit.i86:                         ; preds = %445, %__nv_fabsf.exit1.i102
  %447 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i102 ], [ 0x3FC06EBA60000000, %445 ], !dbg !36
  %448 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i102 ], [ 0xBFD8127580000000, %445 ], !dbg !36
  %449 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i102 ], [ 0x3FBCE315E0000000, %445 ], !dbg !36
  %450 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i102 ], [ 0xBF9B837CE0000000, %445 ], !dbg !36
  %451 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i102 ], [ 0x3F755ABD40000000, %445 ], !dbg !36
  %452 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i102 ], [ 0xBF4AE9A400000000, %445 ], !dbg !36
  %453 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i102 ], [ 0x3F163D2D40000000, %445 ], !dbg !36
  %454 = phi float [ %.01.i104, %__nv_fabsf.exit1.i102 ], [ %446, %445 ], !dbg !36
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i87 = icmp eq i32 %455, 0, !dbg !36
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %453, float %454, float %452) #3, !dbg !36
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %453, float %454, float %452) #3, !dbg !36
  %.02.i88 = select i1 %.not2.i87, float %457, float %456, !dbg !36
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i89 = icmp eq i32 %458, 0, !dbg !36
  %459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i88, float %454, float %451) #3, !dbg !36
  %460 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i88, float %454, float %451) #3, !dbg !36
  %.03.i90 = select i1 %.not3.i89, float %460, float %459, !dbg !36
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i91 = icmp eq i32 %461, 0, !dbg !36
  %462 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i90, float %454, float %450) #3, !dbg !36
  %463 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i90, float %454, float %450) #3, !dbg !36
  %.04.i92 = select i1 %.not4.i91, float %463, float %462, !dbg !36
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i93 = icmp eq i32 %464, 0, !dbg !36
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %454, float %449) #3, !dbg !36
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %454, float %449) #3, !dbg !36
  %.05.i94 = select i1 %.not5.i93, float %466, float %465, !dbg !36
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i95 = icmp eq i32 %467, 0, !dbg !36
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i94, float %454, float %448) #3, !dbg !36
  %469 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i94, float %454, float %448) #3, !dbg !36
  %.06.i96 = select i1 %.not6.i95, float %469, float %468, !dbg !36
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i97 = icmp eq i32 %470, 0, !dbg !36
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i96, float %454, float %447) #3, !dbg !36
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i96, float %454, float %447) #3, !dbg !36
  %.07.i98 = select i1 %.not7.i97, float %472, float %471, !dbg !36
  %473 = fneg float %454, !dbg !36
  %474 = select i1 %443, float %473, float %297, !dbg !36
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i99 = icmp eq i32 %475, 0, !dbg !36
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i98, float %474, float %474) #3, !dbg !36
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i98, float %474, float %474) #3, !dbg !36
  %.08.i100 = select i1 %.not8.i99, float %477, float %476, !dbg !36
  br i1 %443, label %478, label %__nv_erff.exit105, !dbg !36

478:                                              ; preds = %__internal_fmad.exit.i86
  %479 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i100) #3, !dbg !36
  %480 = fsub float 1.000000e+00, %479, !dbg !36
  %481 = bitcast float %480 to i32, !dbg !36
  %482 = bitcast float %297 to i32, !dbg !36
  %483 = and i32 %482, -2147483648, !dbg !36
  %484 = or i32 %483, %481, !dbg !36
  %485 = bitcast i32 %484 to float, !dbg !36
  br label %__nv_erff.exit105, !dbg !36

__nv_erff.exit105:                                ; preds = %__internal_fmad.exit.i86, %478
  %r.0.i101 = phi float [ %485, %478 ], [ %.08.i100, %__internal_fmad.exit.i86 ], !dbg !36
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i106 = icmp eq i32 %486, 0, !dbg !36
  %487 = tail call float @llvm.nvvm.fabs.ftz.f(float %298) #3, !dbg !36
  %488 = tail call float @llvm.nvvm.fabs.f(float %298) #3, !dbg !36
  %.0.i107 = select i1 %.not.i106, float %488, float %487, !dbg !36
  %489 = fcmp oge float %.0.i107, 0x3FF00C1FC0000000, !dbg !36
  br i1 %489, label %__nv_fabsf.exit1.i124, label %491, !dbg !36

__nv_fabsf.exit1.i124:                            ; preds = %__nv_erff.exit105
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i125 = icmp eq i32 %490, 0, !dbg !36
  %.01.i126 = select i1 %.not1.i125, float %488, float %487, !dbg !36
  br label %__internal_fmad.exit.i108, !dbg !36

491:                                              ; preds = %__nv_erff.exit105
  %492 = fmul float %298, %298, !dbg !36
  br label %__internal_fmad.exit.i108, !dbg !36

__internal_fmad.exit.i108:                        ; preds = %491, %__nv_fabsf.exit1.i124
  %493 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i124 ], [ 0x3FC06EBA60000000, %491 ], !dbg !36
  %494 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i124 ], [ 0xBFD8127580000000, %491 ], !dbg !36
  %495 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i124 ], [ 0x3FBCE315E0000000, %491 ], !dbg !36
  %496 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i124 ], [ 0xBF9B837CE0000000, %491 ], !dbg !36
  %497 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i124 ], [ 0x3F755ABD40000000, %491 ], !dbg !36
  %498 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i124 ], [ 0xBF4AE9A400000000, %491 ], !dbg !36
  %499 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i124 ], [ 0x3F163D2D40000000, %491 ], !dbg !36
  %500 = phi float [ %.01.i126, %__nv_fabsf.exit1.i124 ], [ %492, %491 ], !dbg !36
  %501 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i109 = icmp eq i32 %501, 0, !dbg !36
  %502 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %499, float %500, float %498) #3, !dbg !36
  %503 = tail call float @llvm.nvvm.fma.rn.f(float %499, float %500, float %498) #3, !dbg !36
  %.02.i110 = select i1 %.not2.i109, float %503, float %502, !dbg !36
  %504 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i111 = icmp eq i32 %504, 0, !dbg !36
  %505 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i110, float %500, float %497) #3, !dbg !36
  %506 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i110, float %500, float %497) #3, !dbg !36
  %.03.i112 = select i1 %.not3.i111, float %506, float %505, !dbg !36
  %507 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i113 = icmp eq i32 %507, 0, !dbg !36
  %508 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i112, float %500, float %496) #3, !dbg !36
  %509 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i112, float %500, float %496) #3, !dbg !36
  %.04.i114 = select i1 %.not4.i113, float %509, float %508, !dbg !36
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i115 = icmp eq i32 %510, 0, !dbg !36
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i114, float %500, float %495) #3, !dbg !36
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i114, float %500, float %495) #3, !dbg !36
  %.05.i116 = select i1 %.not5.i115, float %512, float %511, !dbg !36
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i117 = icmp eq i32 %513, 0, !dbg !36
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i116, float %500, float %494) #3, !dbg !36
  %515 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i116, float %500, float %494) #3, !dbg !36
  %.06.i118 = select i1 %.not6.i117, float %515, float %514, !dbg !36
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i119 = icmp eq i32 %516, 0, !dbg !36
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i118, float %500, float %493) #3, !dbg !36
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i118, float %500, float %493) #3, !dbg !36
  %.07.i120 = select i1 %.not7.i119, float %518, float %517, !dbg !36
  %519 = fneg float %500, !dbg !36
  %520 = select i1 %489, float %519, float %298, !dbg !36
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i121 = icmp eq i32 %521, 0, !dbg !36
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i120, float %520, float %520) #3, !dbg !36
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i120, float %520, float %520) #3, !dbg !36
  %.08.i122 = select i1 %.not8.i121, float %523, float %522, !dbg !36
  br i1 %489, label %524, label %__nv_erff.exit127, !dbg !36

524:                                              ; preds = %__internal_fmad.exit.i108
  %525 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i122) #3, !dbg !36
  %526 = fsub float 1.000000e+00, %525, !dbg !36
  %527 = bitcast float %526 to i32, !dbg !36
  %528 = bitcast float %298 to i32, !dbg !36
  %529 = and i32 %528, -2147483648, !dbg !36
  %530 = or i32 %529, %527, !dbg !36
  %531 = bitcast i32 %530 to float, !dbg !36
  br label %__nv_erff.exit127, !dbg !36

__nv_erff.exit127:                                ; preds = %__internal_fmad.exit.i108, %524
  %r.0.i123 = phi float [ %531, %524 ], [ %.08.i122, %__internal_fmad.exit.i108 ], !dbg !36
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i128 = icmp eq i32 %532, 0, !dbg !36
  %533 = tail call float @llvm.nvvm.fabs.ftz.f(float %299) #3, !dbg !36
  %534 = tail call float @llvm.nvvm.fabs.f(float %299) #3, !dbg !36
  %.0.i129 = select i1 %.not.i128, float %534, float %533, !dbg !36
  %535 = fcmp oge float %.0.i129, 0x3FF00C1FC0000000, !dbg !36
  br i1 %535, label %__nv_fabsf.exit1.i146, label %537, !dbg !36

__nv_fabsf.exit1.i146:                            ; preds = %__nv_erff.exit127
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i147 = icmp eq i32 %536, 0, !dbg !36
  %.01.i148 = select i1 %.not1.i147, float %534, float %533, !dbg !36
  br label %__internal_fmad.exit.i130, !dbg !36

537:                                              ; preds = %__nv_erff.exit127
  %538 = fmul float %299, %299, !dbg !36
  br label %__internal_fmad.exit.i130, !dbg !36

__internal_fmad.exit.i130:                        ; preds = %537, %__nv_fabsf.exit1.i146
  %539 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i146 ], [ 0x3FC06EBA60000000, %537 ], !dbg !36
  %540 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i146 ], [ 0xBFD8127580000000, %537 ], !dbg !36
  %541 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i146 ], [ 0x3FBCE315E0000000, %537 ], !dbg !36
  %542 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i146 ], [ 0xBF9B837CE0000000, %537 ], !dbg !36
  %543 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i146 ], [ 0x3F755ABD40000000, %537 ], !dbg !36
  %544 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i146 ], [ 0xBF4AE9A400000000, %537 ], !dbg !36
  %545 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i146 ], [ 0x3F163D2D40000000, %537 ], !dbg !36
  %546 = phi float [ %.01.i148, %__nv_fabsf.exit1.i146 ], [ %538, %537 ], !dbg !36
  %547 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i131 = icmp eq i32 %547, 0, !dbg !36
  %548 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %545, float %546, float %544) #3, !dbg !36
  %549 = tail call float @llvm.nvvm.fma.rn.f(float %545, float %546, float %544) #3, !dbg !36
  %.02.i132 = select i1 %.not2.i131, float %549, float %548, !dbg !36
  %550 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i133 = icmp eq i32 %550, 0, !dbg !36
  %551 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i132, float %546, float %543) #3, !dbg !36
  %552 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i132, float %546, float %543) #3, !dbg !36
  %.03.i134 = select i1 %.not3.i133, float %552, float %551, !dbg !36
  %553 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i135 = icmp eq i32 %553, 0, !dbg !36
  %554 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i134, float %546, float %542) #3, !dbg !36
  %555 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i134, float %546, float %542) #3, !dbg !36
  %.04.i136 = select i1 %.not4.i135, float %555, float %554, !dbg !36
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i137 = icmp eq i32 %556, 0, !dbg !36
  %557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i136, float %546, float %541) #3, !dbg !36
  %558 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i136, float %546, float %541) #3, !dbg !36
  %.05.i138 = select i1 %.not5.i137, float %558, float %557, !dbg !36
  %559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i139 = icmp eq i32 %559, 0, !dbg !36
  %560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i138, float %546, float %540) #3, !dbg !36
  %561 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i138, float %546, float %540) #3, !dbg !36
  %.06.i140 = select i1 %.not6.i139, float %561, float %560, !dbg !36
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i141 = icmp eq i32 %562, 0, !dbg !36
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i140, float %546, float %539) #3, !dbg !36
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i140, float %546, float %539) #3, !dbg !36
  %.07.i142 = select i1 %.not7.i141, float %564, float %563, !dbg !36
  %565 = fneg float %546, !dbg !36
  %566 = select i1 %535, float %565, float %299, !dbg !36
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i143 = icmp eq i32 %567, 0, !dbg !36
  %568 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i142, float %566, float %566) #3, !dbg !36
  %569 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i142, float %566, float %566) #3, !dbg !36
  %.08.i144 = select i1 %.not8.i143, float %569, float %568, !dbg !36
  br i1 %535, label %570, label %__nv_erff.exit149, !dbg !36

570:                                              ; preds = %__internal_fmad.exit.i130
  %571 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i144) #3, !dbg !36
  %572 = fsub float 1.000000e+00, %571, !dbg !36
  %573 = bitcast float %572 to i32, !dbg !36
  %574 = bitcast float %299 to i32, !dbg !36
  %575 = and i32 %574, -2147483648, !dbg !36
  %576 = or i32 %575, %573, !dbg !36
  %577 = bitcast i32 %576 to float, !dbg !36
  br label %__nv_erff.exit149, !dbg !36

__nv_erff.exit149:                                ; preds = %__internal_fmad.exit.i130, %570
  %r.0.i145 = phi float [ %577, %570 ], [ %.08.i144, %__internal_fmad.exit.i130 ], !dbg !36
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i150 = icmp eq i32 %578, 0, !dbg !36
  %579 = tail call float @llvm.nvvm.fabs.ftz.f(float %300) #3, !dbg !36
  %580 = tail call float @llvm.nvvm.fabs.f(float %300) #3, !dbg !36
  %.0.i151 = select i1 %.not.i150, float %580, float %579, !dbg !36
  %581 = fcmp oge float %.0.i151, 0x3FF00C1FC0000000, !dbg !36
  br i1 %581, label %__nv_fabsf.exit1.i168, label %583, !dbg !36

__nv_fabsf.exit1.i168:                            ; preds = %__nv_erff.exit149
  %582 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i169 = icmp eq i32 %582, 0, !dbg !36
  %.01.i170 = select i1 %.not1.i169, float %580, float %579, !dbg !36
  br label %__internal_fmad.exit.i152, !dbg !36

583:                                              ; preds = %__nv_erff.exit149
  %584 = fmul float %300, %300, !dbg !36
  br label %__internal_fmad.exit.i152, !dbg !36

__internal_fmad.exit.i152:                        ; preds = %583, %__nv_fabsf.exit1.i168
  %585 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i168 ], [ 0x3FC06EBA60000000, %583 ], !dbg !36
  %586 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i168 ], [ 0xBFD8127580000000, %583 ], !dbg !36
  %587 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i168 ], [ 0x3FBCE315E0000000, %583 ], !dbg !36
  %588 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i168 ], [ 0xBF9B837CE0000000, %583 ], !dbg !36
  %589 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i168 ], [ 0x3F755ABD40000000, %583 ], !dbg !36
  %590 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i168 ], [ 0xBF4AE9A400000000, %583 ], !dbg !36
  %591 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i168 ], [ 0x3F163D2D40000000, %583 ], !dbg !36
  %592 = phi float [ %.01.i170, %__nv_fabsf.exit1.i168 ], [ %584, %583 ], !dbg !36
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i153 = icmp eq i32 %593, 0, !dbg !36
  %594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %591, float %592, float %590) #3, !dbg !36
  %595 = tail call float @llvm.nvvm.fma.rn.f(float %591, float %592, float %590) #3, !dbg !36
  %.02.i154 = select i1 %.not2.i153, float %595, float %594, !dbg !36
  %596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i155 = icmp eq i32 %596, 0, !dbg !36
  %597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i154, float %592, float %589) #3, !dbg !36
  %598 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i154, float %592, float %589) #3, !dbg !36
  %.03.i156 = select i1 %.not3.i155, float %598, float %597, !dbg !36
  %599 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i157 = icmp eq i32 %599, 0, !dbg !36
  %600 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i156, float %592, float %588) #3, !dbg !36
  %601 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i156, float %592, float %588) #3, !dbg !36
  %.04.i158 = select i1 %.not4.i157, float %601, float %600, !dbg !36
  %602 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i159 = icmp eq i32 %602, 0, !dbg !36
  %603 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i158, float %592, float %587) #3, !dbg !36
  %604 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i158, float %592, float %587) #3, !dbg !36
  %.05.i160 = select i1 %.not5.i159, float %604, float %603, !dbg !36
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i161 = icmp eq i32 %605, 0, !dbg !36
  %606 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i160, float %592, float %586) #3, !dbg !36
  %607 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i160, float %592, float %586) #3, !dbg !36
  %.06.i162 = select i1 %.not6.i161, float %607, float %606, !dbg !36
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i163 = icmp eq i32 %608, 0, !dbg !36
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i162, float %592, float %585) #3, !dbg !36
  %610 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i162, float %592, float %585) #3, !dbg !36
  %.07.i164 = select i1 %.not7.i163, float %610, float %609, !dbg !36
  %611 = fneg float %592, !dbg !36
  %612 = select i1 %581, float %611, float %300, !dbg !36
  %613 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i165 = icmp eq i32 %613, 0, !dbg !36
  %614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i164, float %612, float %612) #3, !dbg !36
  %615 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i164, float %612, float %612) #3, !dbg !36
  %.08.i166 = select i1 %.not8.i165, float %615, float %614, !dbg !36
  br i1 %581, label %616, label %__nv_erff.exit171, !dbg !36

616:                                              ; preds = %__internal_fmad.exit.i152
  %617 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i166) #3, !dbg !36
  %618 = fsub float 1.000000e+00, %617, !dbg !36
  %619 = bitcast float %618 to i32, !dbg !36
  %620 = bitcast float %300 to i32, !dbg !36
  %621 = and i32 %620, -2147483648, !dbg !36
  %622 = or i32 %621, %619, !dbg !36
  %623 = bitcast i32 %622 to float, !dbg !36
  br label %__nv_erff.exit171, !dbg !36

__nv_erff.exit171:                                ; preds = %__internal_fmad.exit.i152, %616
  %r.0.i167 = phi float [ %623, %616 ], [ %.08.i166, %__internal_fmad.exit.i152 ], !dbg !36
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i172 = icmp eq i32 %624, 0, !dbg !36
  %625 = tail call float @llvm.nvvm.fabs.ftz.f(float %301) #3, !dbg !36
  %626 = tail call float @llvm.nvvm.fabs.f(float %301) #3, !dbg !36
  %.0.i173 = select i1 %.not.i172, float %626, float %625, !dbg !36
  %627 = fcmp oge float %.0.i173, 0x3FF00C1FC0000000, !dbg !36
  br i1 %627, label %__nv_fabsf.exit1.i190, label %629, !dbg !36

__nv_fabsf.exit1.i190:                            ; preds = %__nv_erff.exit171
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not1.i191 = icmp eq i32 %628, 0, !dbg !36
  %.01.i192 = select i1 %.not1.i191, float %626, float %625, !dbg !36
  br label %__internal_fmad.exit.i174, !dbg !36

629:                                              ; preds = %__nv_erff.exit171
  %630 = fmul float %301, %301, !dbg !36
  br label %__internal_fmad.exit.i174, !dbg !36

__internal_fmad.exit.i174:                        ; preds = %629, %__nv_fabsf.exit1.i190
  %631 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i190 ], [ 0x3FC06EBA60000000, %629 ], !dbg !36
  %632 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i190 ], [ 0xBFD8127580000000, %629 ], !dbg !36
  %633 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i190 ], [ 0x3FBCE315E0000000, %629 ], !dbg !36
  %634 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i190 ], [ 0xBF9B837CE0000000, %629 ], !dbg !36
  %635 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i190 ], [ 0x3F755ABD40000000, %629 ], !dbg !36
  %636 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i190 ], [ 0xBF4AE9A400000000, %629 ], !dbg !36
  %637 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i190 ], [ 0x3F163D2D40000000, %629 ], !dbg !36
  %638 = phi float [ %.01.i192, %__nv_fabsf.exit1.i190 ], [ %630, %629 ], !dbg !36
  %639 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not2.i175 = icmp eq i32 %639, 0, !dbg !36
  %640 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %637, float %638, float %636) #3, !dbg !36
  %641 = tail call float @llvm.nvvm.fma.rn.f(float %637, float %638, float %636) #3, !dbg !36
  %.02.i176 = select i1 %.not2.i175, float %641, float %640, !dbg !36
  %642 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not3.i177 = icmp eq i32 %642, 0, !dbg !36
  %643 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i176, float %638, float %635) #3, !dbg !36
  %644 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i176, float %638, float %635) #3, !dbg !36
  %.03.i178 = select i1 %.not3.i177, float %644, float %643, !dbg !36
  %645 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not4.i179 = icmp eq i32 %645, 0, !dbg !36
  %646 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i178, float %638, float %634) #3, !dbg !36
  %647 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i178, float %638, float %634) #3, !dbg !36
  %.04.i180 = select i1 %.not4.i179, float %647, float %646, !dbg !36
  %648 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not5.i181 = icmp eq i32 %648, 0, !dbg !36
  %649 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i180, float %638, float %633) #3, !dbg !36
  %650 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i180, float %638, float %633) #3, !dbg !36
  %.05.i182 = select i1 %.not5.i181, float %650, float %649, !dbg !36
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not6.i183 = icmp eq i32 %651, 0, !dbg !36
  %652 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i182, float %638, float %632) #3, !dbg !36
  %653 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i182, float %638, float %632) #3, !dbg !36
  %.06.i184 = select i1 %.not6.i183, float %653, float %652, !dbg !36
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not7.i185 = icmp eq i32 %654, 0, !dbg !36
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i184, float %638, float %631) #3, !dbg !36
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i184, float %638, float %631) #3, !dbg !36
  %.07.i186 = select i1 %.not7.i185, float %656, float %655, !dbg !36
  %657 = fneg float %638, !dbg !36
  %658 = select i1 %627, float %657, float %301, !dbg !36
  %659 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i187 = icmp eq i32 %659, 0, !dbg !36
  %660 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i186, float %658, float %658) #3, !dbg !36
  %661 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i186, float %658, float %658) #3, !dbg !36
  %.08.i188 = select i1 %.not8.i187, float %661, float %660, !dbg !36
  br i1 %627, label %662, label %__nv_erff.exit193, !dbg !36

662:                                              ; preds = %__internal_fmad.exit.i174
  %663 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i188) #3, !dbg !36
  %664 = fsub float 1.000000e+00, %663, !dbg !36
  %665 = bitcast float %664 to i32, !dbg !36
  %666 = bitcast float %301 to i32, !dbg !36
  %667 = and i32 %666, -2147483648, !dbg !36
  %668 = or i32 %667, %665, !dbg !36
  %669 = bitcast i32 %668 to float, !dbg !36
  br label %__nv_erff.exit193, !dbg !36

__nv_erff.exit193:                                ; preds = %__internal_fmad.exit.i174, %662
  %r.0.i189 = phi float [ %669, %662 ], [ %.08.i188, %__internal_fmad.exit.i174 ], !dbg !36
  %670 = fmul float %293, 5.000000e-01, !dbg !37
  %671 = fmul float %292, 5.000000e-01, !dbg !37
  %672 = fmul float %291, 5.000000e-01, !dbg !37
  %673 = fmul float %290, 5.000000e-01, !dbg !37
  %674 = fmul float %289, 5.000000e-01, !dbg !37
  %675 = fmul float %288, 5.000000e-01, !dbg !37
  %676 = fmul float %287, 5.000000e-01, !dbg !37
  %677 = fmul float %286, 5.000000e-01, !dbg !37
  %678 = fadd float %r.0.i, 1.000000e+00, !dbg !38
  %679 = fadd float %r.0.i57, 1.000000e+00, !dbg !38
  %680 = fadd float %r.0.i79, 1.000000e+00, !dbg !38
  %681 = fadd float %r.0.i101, 1.000000e+00, !dbg !38
  %682 = fadd float %r.0.i123, 1.000000e+00, !dbg !38
  %683 = fadd float %r.0.i145, 1.000000e+00, !dbg !38
  %684 = fadd float %r.0.i167, 1.000000e+00, !dbg !38
  %685 = fadd float %r.0.i189, 1.000000e+00, !dbg !38
  %686 = fmul float %677, %678, !dbg !39
  %687 = fmul float %676, %679, !dbg !39
  %688 = fmul float %675, %680, !dbg !39
  %689 = fmul float %674, %681, !dbg !39
  %690 = fmul float %673, %682, !dbg !39
  %691 = fmul float %672, %683, !dbg !39
  %692 = fmul float %671, %684, !dbg !39
  %693 = fmul float %670, %685, !dbg !39
  %694 = bitcast float %142 to i32, !dbg !40
  %695 = bitcast float %143 to i32, !dbg !40
  %696 = bitcast float %144 to i32, !dbg !40
  %697 = bitcast float %145 to i32, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %694, i32 %695, i32 %696, i32 %697, ptr addrspace(1) %19, i1 true) #3, !dbg !40
  %698 = bitcast float %146 to i32, !dbg !40
  %699 = bitcast float %147 to i32, !dbg !40
  %700 = bitcast float %148 to i32, !dbg !40
  %701 = bitcast float %149 to i32, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %698, i32 %699, i32 %700, i32 %701, ptr addrspace(1) %21, i1 true) #3, !dbg !40
  %702 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !41
  %703 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !41
  %704 = bitcast float %686 to i32, !dbg !42
  %705 = bitcast float %687 to i32, !dbg !42
  %706 = bitcast float %688 to i32, !dbg !42
  %707 = bitcast float %689 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %704, i32 %705, i32 %706, i32 %707, ptr addrspace(1) %702, i1 true) #3, !dbg !42
  %708 = bitcast float %690 to i32, !dbg !42
  %709 = bitcast float %691 to i32, !dbg !42
  %710 = bitcast float %692 to i32, !dbg !42
  %711 = bitcast float %693 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %708, i32 %709, i32 %710, i32 %711, ptr addrspace(1) %703, i1 true) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpshesj2k3qlpvbf2ujg6y5btytsanip44qaipllaectiuj2sabu.py", directory: "inductor_cache/ps")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 33, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 36, column: 26, scope: !7)
!31 = !DILocation(line: 38, column: 19, scope: !7)
!32 = !DILocation(line: 41, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 20, scope: !7)
!35 = !DILocation(line: 47, column: 20, scope: !7)
!36 = !DILocation(line: 48, column: 26, scope: !7)
!37 = !DILocation(line: 45, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 20, scope: !7)
!39 = !DILocation(line: 50, column: 20, scope: !7)
!40 = !DILocation(line: 51, column: 39, scope: !7)
!41 = !DILocation(line: 52, column: 28, scope: !7)
!42 = !DILocation(line: 52, column: 40, scope: !7)
!43 = !DILocation(line: 52, column: 4, scope: !7)
