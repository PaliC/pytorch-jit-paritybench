#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [16, 2, 1], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [8, 2, 2], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#loc = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0)
#loc1 = loc(unknown)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc33 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":49:71)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc91 = loc(callsite(#loc1 at #loc42))
#loc97 = loc(callsite(#loc1 at #loc47))
#loc121 = loc(callsite(#loc91 at #loc37))
#loc127 = loc(callsite(#loc97 at #loc37))
#loc148 = loc(callsite(#loc121 at #loc32))
#loc154 = loc(callsite(#loc127 at #loc32))
#loc171 = loc(callsite(#loc148 at #loc33))
#loc174 = loc(callsite(#loc154 at #loc33))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_cumsum_max_sort_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0), %arg5: i32 loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":24:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<8x4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<8x4xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked2> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<8x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<8x1xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<8x1xi32, #blocked> loc(#loc6)
    %7 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc7)
    %9 = arith.muli %5, %cst_6 : tensor<8x1xi32, #blocked> loc(#loc8)
    %10 = tt.broadcast %8 : tensor<1x4xi32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc9)
    %11 = tt.broadcast %9 : tensor<8x1xi32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc9)
    %12 = arith.addi %10, %11 : tensor<8x4xi32, #blocked> loc(#loc9)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc10)
    %14 = tt.addptr %13, %12 : tensor<8x4x!tt.ptr<f32>, #blocked>, tensor<8x4xi32, #blocked> loc(#loc10)
    %15 = tt.broadcast %6 : tensor<8x1xi1, #blocked> -> tensor<8x4xi1, #blocked> loc(#loc11)
    %16 = tt.load %14, %15, %cst : tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc11)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc12)
    %18 = tt.addptr %17, %9 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc12)
    %19 = tt.load %18, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %20 = arith.addi %9, %cst_5 : tensor<8x1xi32, #blocked> loc(#loc14)
    %21 = tt.addptr %17, %20 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc15)
    %22 = tt.load %21, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc16)
    %23 = arith.addi %9, %cst_4 : tensor<8x1xi32, #blocked> loc(#loc17)
    %24 = tt.addptr %17, %23 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc18)
    %25 = tt.load %24, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc19)
    %26 = arith.addi %9, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc20)
    %27 = tt.addptr %17, %26 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc21)
    %28 = tt.load %27, %6 evictionPolicy = evict_last : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc22)
    %29 = arith.cmpf ogt, %19, %22 : tensor<8x1xf32, #blocked> loc(#loc71)
    %30 = arith.cmpf une, %19, %19 : tensor<8x1xf32, #blocked> loc(#loc72)
    %31 = arith.ori %29, %30 : tensor<8x1xi1, #blocked> loc(#loc73)
    %32 = arith.select %31, %19, %22 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc74)
    %33 = arith.cmpf ogt, %32, %25 : tensor<8x1xf32, #blocked> loc(#loc75)
    %34 = arith.cmpf une, %32, %32 : tensor<8x1xf32, #blocked> loc(#loc76)
    %35 = arith.ori %33, %34 : tensor<8x1xi1, #blocked> loc(#loc77)
    %36 = arith.select %35, %32, %25 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc78)
    %37 = arith.cmpf ogt, %36, %28 : tensor<8x1xf32, #blocked> loc(#loc79)
    %38 = arith.cmpf une, %36, %36 : tensor<8x1xf32, #blocked> loc(#loc80)
    %39 = arith.ori %37, %38 : tensor<8x1xi1, #blocked> loc(#loc81)
    %40 = arith.select %39, %36, %28 : tensor<8x1xi1, #blocked>, tensor<8x1xf32, #blocked> loc(#loc82)
    %41 = tt.broadcast %40 : tensor<8x1xf32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc30)
    %42 = arith.subf %16, %41 : tensor<8x4xf32, #blocked> loc(#loc30)
    %43 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> loc(#loc113)
    %44 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc113)
    %45 = tt.expand_dims %43 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> loc(#loc113)
    %46 = tt.expand_dims %44 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc113)
    %47 = tt.expand_dims %45 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> -> tensor<1x2x1xi32, #blocked2> loc(#loc113)
    %48 = tt.expand_dims %46 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<1x2x1xi32, #blocked1> loc(#loc113)
    %49 = tt.broadcast %47 : tensor<1x2x1xi32, #blocked2> -> tensor<8x2x2xi32, #blocked2> loc(#loc114)
    %50 = tt.reshape %49 : tensor<8x2x2xi32, #blocked2> -> tensor<8x4xi32, #blocked> loc(#loc115)
    %51 = tt.reshape %42 : tensor<8x4xf32, #blocked> -> tensor<16x2x1xf32, #blocked1> loc(#loc143)
    %52 = tt.bitcast %51 : tensor<16x2x1xf32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc144)
    %53 = arith.subi %cst_2, %47 : tensor<1x2x1xi32, #blocked2> loc(#loc145)
    %54 = arith.subi %cst_1, %48 : tensor<1x2x1xi32, #blocked1> loc(#loc145)
    %55 = tt.broadcast %54 : tensor<1x2x1xi32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc146)
    %56 = arith.muli %52, %55 : tensor<16x2x1xi32, #blocked1> loc(#loc146)
    %57 = "tt.reduce"(%56) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc148 at #loc33)), %arg7: i32 loc(callsite(#loc148 at #loc33))):
      %126 = arith.addi %arg6, %arg7 : i32 loc(#loc176)
      tt.reduce.return %126 : i32 loc(#loc170)
    }) : (tensor<16x2x1xi32, #blocked1>) -> tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc170)
    %58 = tt.expand_dims %57 {axis = 1 : i32} : tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1x1xi32, #blocked1> loc(#loc150)
    %59 = tt.broadcast %58 : tensor<16x1x1xi32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc151)
    %60 = tt.broadcast %48 : tensor<1x2x1xi32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc152)
    %61 = arith.muli %52, %60 : tensor<16x2x1xi32, #blocked1> loc(#loc152)
    %62 = "tt.reduce"(%61) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc154 at #loc33)), %arg7: i32 loc(callsite(#loc154 at #loc33))):
      %126 = arith.addi %arg6, %arg7 : i32 loc(#loc177)
      tt.reduce.return %126 : i32 loc(#loc173)
    }) : (tensor<16x2x1xi32, #blocked1>) -> tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc173)
    %63 = tt.expand_dims %62 {axis = 1 : i32} : tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1x1xi32, #blocked1> loc(#loc156)
    %64 = tt.broadcast %63 : tensor<16x1x1xi32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc157)
    %65 = tt.reshape %59 : tensor<16x2x1xi32, #blocked1> -> tensor<8x4xi32, #blocked> loc(#loc158)
    %66 = tt.reshape %64 : tensor<16x2x1xi32, #blocked1> -> tensor<8x4xi32, #blocked> loc(#loc159)
    %67 = tt.bitcast %65 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc160)
    %68 = tt.bitcast %66 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc161)
    %69 = tt.bitcast %42 : tensor<8x4xf32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc162)
    %70 = arith.cmpf olt, %67, %68 : tensor<8x4xf32, #blocked> loc(#loc163)
    %71 = arith.extui %70 : tensor<8x4xi1, #blocked> to tensor<8x4xi32, #blocked> loc(#loc164)
    %72 = arith.xori %71, %50 : tensor<8x4xi32, #blocked> loc(#loc164)
    %73 = arith.cmpi ne, %72, %cst_0 : tensor<8x4xi32, #blocked> loc(#loc165)
    %74 = arith.xori %65, %66 : tensor<8x4xi32, #blocked> loc(#loc166)
    %75 = arith.select %73, %74, %cst_0 : tensor<8x4xi1, #blocked>, tensor<8x4xi32, #blocked> loc(#loc167)
    %76 = arith.xori %69, %75 : tensor<8x4xi32, #blocked> loc(#loc168)
    %77 = tt.bitcast %76 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc169)
    %78 = tt.reshape %77 : tensor<8x4xf32, #blocked> -> tensor<8x2x2xf32, #blocked2> loc(#loc143)
    %79 = tt.bitcast %78 : tensor<8x2x2xf32, #blocked2> -> tensor<8x2x2xi32, #blocked2> loc(#loc144)
    %80 = tt.broadcast %53 : tensor<1x2x1xi32, #blocked2> -> tensor<8x2x2xi32, #blocked2> loc(#loc146)
    %81 = arith.muli %79, %80 : tensor<8x2x2xi32, #blocked2> loc(#loc146)
    %82 = "tt.reduce"(%81) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc148 at #loc33)), %arg7: i32 loc(callsite(#loc148 at #loc33))):
      %126 = arith.addi %arg6, %arg7 : i32 loc(#loc176)
      tt.reduce.return %126 : i32 loc(#loc170)
    }) : (tensor<8x2x2xi32, #blocked2>) -> tensor<8x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc170)
    %83 = tt.expand_dims %82 {axis = 1 : i32} : tensor<8x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<8x1x2xi32, #blocked2> loc(#loc150)
    %84 = tt.broadcast %83 : tensor<8x1x2xi32, #blocked2> -> tensor<8x2x2xi32, #blocked2> loc(#loc151)
    %85 = arith.muli %79, %49 : tensor<8x2x2xi32, #blocked2> loc(#loc152)
    %86 = "tt.reduce"(%85) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc154 at #loc33)), %arg7: i32 loc(callsite(#loc154 at #loc33))):
      %126 = arith.addi %arg6, %arg7 : i32 loc(#loc177)
      tt.reduce.return %126 : i32 loc(#loc173)
    }) : (tensor<8x2x2xi32, #blocked2>) -> tensor<8x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc173)
    %87 = tt.expand_dims %86 {axis = 1 : i32} : tensor<8x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<8x1x2xi32, #blocked2> loc(#loc156)
    %88 = tt.broadcast %87 : tensor<8x1x2xi32, #blocked2> -> tensor<8x2x2xi32, #blocked2> loc(#loc157)
    %89 = tt.reshape %84 : tensor<8x2x2xi32, #blocked2> -> tensor<8x4xi32, #blocked> loc(#loc158)
    %90 = tt.reshape %88 : tensor<8x2x2xi32, #blocked2> -> tensor<8x4xi32, #blocked> loc(#loc159)
    %91 = tt.bitcast %89 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc160)
    %92 = tt.bitcast %90 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc161)
    %93 = tt.bitcast %77 : tensor<8x4xf32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc162)
    %94 = arith.cmpf olt, %91, %92 : tensor<8x4xf32, #blocked> loc(#loc163)
    %95 = arith.xori %89, %90 : tensor<8x4xi32, #blocked> loc(#loc166)
    %96 = arith.select %94, %95, %cst_0 : tensor<8x4xi1, #blocked>, tensor<8x4xi32, #blocked> loc(#loc167)
    %97 = arith.xori %93, %96 : tensor<8x4xi32, #blocked> loc(#loc168)
    %98 = tt.bitcast %97 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc169)
    %99 = tt.reshape %98 : tensor<8x4xf32, #blocked> -> tensor<16x2x1xf32, #blocked1> loc(#loc143)
    %100 = tt.bitcast %99 : tensor<16x2x1xf32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc144)
    %101 = arith.muli %100, %55 : tensor<16x2x1xi32, #blocked1> loc(#loc146)
    %102 = "tt.reduce"(%101) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc148 at #loc33)), %arg7: i32 loc(callsite(#loc148 at #loc33))):
      %126 = arith.addi %arg6, %arg7 : i32 loc(#loc176)
      tt.reduce.return %126 : i32 loc(#loc170)
    }) : (tensor<16x2x1xi32, #blocked1>) -> tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc170)
    %103 = tt.expand_dims %102 {axis = 1 : i32} : tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1x1xi32, #blocked1> loc(#loc150)
    %104 = tt.broadcast %103 : tensor<16x1x1xi32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc151)
    %105 = arith.muli %100, %60 : tensor<16x2x1xi32, #blocked1> loc(#loc152)
    %106 = "tt.reduce"(%105) <{axis = 1 : i32}> ({
    ^bb0(%arg6: i32 loc(callsite(#loc154 at #loc33)), %arg7: i32 loc(callsite(#loc154 at #loc33))):
      %126 = arith.addi %arg6, %arg7 : i32 loc(#loc177)
      tt.reduce.return %126 : i32 loc(#loc173)
    }) : (tensor<16x2x1xi32, #blocked1>) -> tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc173)
    %107 = tt.expand_dims %106 {axis = 1 : i32} : tensor<16x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<16x1x1xi32, #blocked1> loc(#loc156)
    %108 = tt.broadcast %107 : tensor<16x1x1xi32, #blocked1> -> tensor<16x2x1xi32, #blocked1> loc(#loc157)
    %109 = tt.reshape %104 : tensor<16x2x1xi32, #blocked1> -> tensor<8x4xi32, #blocked> loc(#loc158)
    %110 = tt.reshape %108 : tensor<16x2x1xi32, #blocked1> -> tensor<8x4xi32, #blocked> loc(#loc159)
    %111 = tt.bitcast %109 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc160)
    %112 = tt.bitcast %110 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc161)
    %113 = tt.bitcast %98 : tensor<8x4xf32, #blocked> -> tensor<8x4xi32, #blocked> loc(#loc162)
    %114 = arith.cmpf olt, %111, %112 : tensor<8x4xf32, #blocked> loc(#loc163)
    %115 = arith.xori %109, %110 : tensor<8x4xi32, #blocked> loc(#loc166)
    %116 = arith.select %114, %115, %cst_0 : tensor<8x4xi1, #blocked>, tensor<8x4xi32, #blocked> loc(#loc167)
    %117 = arith.xori %113, %116 : tensor<8x4xi32, #blocked> loc(#loc168)
    %118 = tt.bitcast %117 : tensor<8x4xi32, #blocked> -> tensor<8x4xf32, #blocked> loc(#loc169)
    %119 = "tt.scan"(%118) <{axis = 1 : i32, reverse = false}> ({
    ^bb0(%arg6: f32 loc(unknown), %arg7: f32 loc(unknown)):
      %126 = arith.addf %arg6, %arg7 : f32 loc(#loc112)
      tt.scan.return %126 : f32 loc(#loc62)
    }) : (tensor<8x4xf32, #blocked>) -> tensor<8x4xf32, #blocked> loc(#loc62)
    %120 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc64)
    %121 = tt.addptr %120, %12 : tensor<8x4x!tt.ptr<f32>, #blocked>, tensor<8x4xi32, #blocked> loc(#loc64)
    tt.store %121, %42, %15 : tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc65)
    %122 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc66)
    %123 = tt.addptr %122, %12 : tensor<8x4x!tt.ptr<f32>, #blocked>, tensor<8x4xi32, #blocked> loc(#loc66)
    tt.store %123, %118, %15 : tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc67)
    %124 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc68)
    %125 = tt.addptr %124, %12 : tensor<8x4x!tt.ptr<f32>, #blocked>, tensor<8x4xi32, #blocked> loc(#loc68)
    tt.store %125, %119, %15 : tensor<8x4x!tt.ptr<f32>, #blocked> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":28:28)
#loc3 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":28:33)
#loc4 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":29:44)
#loc5 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":29:23)
#loc6 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":30:21)
#loc7 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":31:34)
#loc8 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:37)
#loc9 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:35)
#loc10 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:30)
#loc11 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":36:42)
#loc12 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":37:30)
#loc13 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":37:37)
#loc14 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":38:34)
#loc15 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":38:30)
#loc16 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":38:41)
#loc17 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":39:34)
#loc18 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":39:30)
#loc19 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":39:41)
#loc20 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":40:34)
#loc21 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":40:30)
#loc22 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":40:41)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc24 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":41:40)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc28 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":42:40)
#loc29 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":43:40)
#loc30 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":44:18)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":502:14)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":510:20)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":511:22)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":533:14)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":536:22)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":551:18)
#loc62 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":52:46)
#loc63 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":13:20)
#loc64 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":53:25)
#loc65 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":53:43)
#loc66 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":54:25)
#loc67 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":54:44)
#loc68 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":55:25)
#loc69 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":55:44)
#loc70 = loc("inductor_cache/oy/coy54v5gczpdyyjcmc7glxfj4npjfpmmaqhytnymflg24ruwva5c.py":55:4)
#loc71 = loc(callsite(#loc23 at #loc24))
#loc72 = loc(callsite(#loc25 at #loc24))
#loc73 = loc(callsite(#loc26 at #loc24))
#loc74 = loc(callsite(#loc27 at #loc24))
#loc75 = loc(callsite(#loc23 at #loc28))
#loc76 = loc(callsite(#loc25 at #loc28))
#loc77 = loc(callsite(#loc26 at #loc28))
#loc78 = loc(callsite(#loc27 at #loc28))
#loc79 = loc(callsite(#loc23 at #loc29))
#loc80 = loc(callsite(#loc25 at #loc29))
#loc81 = loc(callsite(#loc26 at #loc29))
#loc82 = loc(callsite(#loc27 at #loc29))
#loc83 = loc(callsite(#loc31 at #loc32))
#loc84 = loc(callsite(#loc34 at #loc32))
#loc85 = loc(callsite(#loc35 at #loc32))
#loc86 = loc(callsite(#loc36 at #loc37))
#loc87 = loc(callsite(#loc38 at #loc37))
#loc88 = loc(callsite(#loc39 at #loc37))
#loc89 = loc(callsite(#loc40 at #loc37))
#loc90 = loc(callsite(#loc41 at #loc42))
#loc92 = loc(callsite(#loc43 at #loc41))
#loc93 = loc(callsite(#loc44 at #loc37))
#loc94 = loc(callsite(#loc45 at #loc37))
#loc95 = loc(callsite(#loc46 at #loc37))
#loc96 = loc(callsite(#loc41 at #loc47))
#loc98 = loc(callsite(#loc48 at #loc37))
#loc99 = loc(callsite(#loc49 at #loc37))
#loc100 = loc(callsite(#loc50 at #loc37))
#loc101 = loc(callsite(#loc51 at #loc37))
#loc102 = loc(callsite(#loc52 at #loc37))
#loc103 = loc(callsite(#loc53 at #loc37))
#loc104 = loc(callsite(#loc54 at #loc37))
#loc105 = loc(callsite(#loc55 at #loc37))
#loc106 = loc(callsite(#loc56 at #loc37))
#loc107 = loc(callsite(#loc57 at #loc37))
#loc108 = loc(callsite(#loc58 at #loc37))
#loc109 = loc(callsite(#loc59 at #loc37))
#loc110 = loc(callsite(#loc60 at #loc37))
#loc111 = loc(callsite(#loc61 at #loc37))
#loc112 = loc(callsite(#loc63 at #loc62))
#loc113 = loc(callsite(#loc83 at #loc33))
#loc114 = loc(callsite(#loc84 at #loc33))
#loc115 = loc(callsite(#loc85 at #loc33))
#loc116 = loc(callsite(#loc86 at #loc32))
#loc117 = loc(callsite(#loc87 at #loc32))
#loc118 = loc(callsite(#loc88 at #loc32))
#loc119 = loc(callsite(#loc89 at #loc32))
#loc120 = loc(callsite(#loc90 at #loc37))
#loc122 = loc(callsite(#loc92 at #loc42))
#loc123 = loc(callsite(#loc93 at #loc32))
#loc124 = loc(callsite(#loc94 at #loc32))
#loc125 = loc(callsite(#loc95 at #loc32))
#loc126 = loc(callsite(#loc96 at #loc37))
#loc128 = loc(callsite(#loc92 at #loc47))
#loc129 = loc(callsite(#loc98 at #loc32))
#loc130 = loc(callsite(#loc99 at #loc32))
#loc131 = loc(callsite(#loc100 at #loc32))
#loc132 = loc(callsite(#loc101 at #loc32))
#loc133 = loc(callsite(#loc102 at #loc32))
#loc134 = loc(callsite(#loc103 at #loc32))
#loc135 = loc(callsite(#loc104 at #loc32))
#loc136 = loc(callsite(#loc105 at #loc32))
#loc137 = loc(callsite(#loc106 at #loc32))
#loc138 = loc(callsite(#loc107 at #loc32))
#loc139 = loc(callsite(#loc108 at #loc32))
#loc140 = loc(callsite(#loc109 at #loc32))
#loc141 = loc(callsite(#loc110 at #loc32))
#loc142 = loc(callsite(#loc111 at #loc32))
#loc143 = loc(callsite(#loc116 at #loc33))
#loc144 = loc(callsite(#loc117 at #loc33))
#loc145 = loc(callsite(#loc118 at #loc33))
#loc146 = loc(callsite(#loc119 at #loc33))
#loc147 = loc(callsite(#loc120 at #loc32))
#loc149 = loc(callsite(#loc122 at #loc37))
#loc150 = loc(callsite(#loc123 at #loc33))
#loc151 = loc(callsite(#loc124 at #loc33))
#loc152 = loc(callsite(#loc125 at #loc33))
#loc153 = loc(callsite(#loc126 at #loc32))
#loc155 = loc(callsite(#loc128 at #loc37))
#loc156 = loc(callsite(#loc129 at #loc33))
#loc157 = loc(callsite(#loc130 at #loc33))
#loc158 = loc(callsite(#loc131 at #loc33))
#loc159 = loc(callsite(#loc132 at #loc33))
#loc160 = loc(callsite(#loc133 at #loc33))
#loc161 = loc(callsite(#loc134 at #loc33))
#loc162 = loc(callsite(#loc135 at #loc33))
#loc163 = loc(callsite(#loc136 at #loc33))
#loc164 = loc(callsite(#loc137 at #loc33))
#loc165 = loc(callsite(#loc138 at #loc33))
#loc166 = loc(callsite(#loc139 at #loc33))
#loc167 = loc(callsite(#loc140 at #loc33))
#loc168 = loc(callsite(#loc141 at #loc33))
#loc169 = loc(callsite(#loc142 at #loc33))
#loc170 = loc(callsite(#loc147 at #loc33))
#loc172 = loc(callsite(#loc149 at #loc32))
#loc173 = loc(callsite(#loc153 at #loc33))
#loc175 = loc(callsite(#loc155 at #loc32))
#loc176 = loc(callsite(#loc172 at #loc33))
#loc177 = loc(callsite(#loc175 at #loc33))
