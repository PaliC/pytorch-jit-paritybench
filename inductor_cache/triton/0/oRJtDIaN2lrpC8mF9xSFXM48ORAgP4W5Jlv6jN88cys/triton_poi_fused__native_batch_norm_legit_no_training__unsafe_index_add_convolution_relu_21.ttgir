#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_convolution_relu_21(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg7: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg13: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg15: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg16: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg17: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg18: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0), %arg19: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<9.99999974E-6> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_7 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_6 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_6 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc11)
    %12 = tt.load %11 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc13)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc15)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = tt.addptr %19, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc17)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = tt.addptr %22, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc19)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc20)
    %25 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc21)
    %26 = tt.addptr %25, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc21)
    %27 = tt.load %26 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc22)
    %28 = tt.splat %arg7 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc23)
    %29 = tt.addptr %28, %8 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc23)
    %30 = tt.load %29 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc24)
    %31 = tt.addptr %28, %9 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc25)
    %32 = tt.load %31 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc26)
    %33 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc27)
    %34 = tt.addptr %33, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc27)
    %35 = tt.load %34 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc28)
    %36 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc29)
    %37 = tt.addptr %36, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc29)
    %38 = tt.load %37 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc30)
    %39 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc31)
    %40 = tt.addptr %39, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc31)
    %41 = tt.load %40 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc32)
    %42 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc33)
    %43 = tt.addptr %42, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc33)
    %44 = tt.load %43 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc34)
    %45 = tt.splat %arg13 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc35)
    %46 = tt.addptr %45, %8 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc35)
    %47 = tt.load %46 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc36)
    %48 = tt.addptr %45, %9 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc37)
    %49 = tt.load %48 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc38)
    %50 = tt.splat %arg15 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc39)
    %51 = tt.addptr %50, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc39)
    %52 = tt.load %51 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc40)
    %53 = tt.splat %arg16 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc41)
    %54 = tt.addptr %53, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc41)
    %55 = tt.load %54 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc42)
    %56 = tt.splat %arg17 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc43)
    %57 = tt.addptr %56, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc43)
    %58 = tt.load %57 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc44)
    %59 = tt.splat %arg18 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc45)
    %60 = tt.addptr %59, %6 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc45)
    %61 = tt.load %60 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc46)
    %62 = arith.addf %12, %15 : tensor<128xf32, #blocked> loc(#loc47)
    %63 = arith.subf %62, %18 : tensor<128xf32, #blocked> loc(#loc48)
    %64 = arith.addf %21, %cst_5 : tensor<128xf32, #blocked> loc(#loc49)
    %65 = tt.extern_elementwise %64 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32, #blocked>) -> tensor<128xf32, #blocked> loc(#loc50)
    %66 = arith.divf %cst_1, %65 : tensor<128xf32, #blocked> loc(#loc51)
    %67 = arith.mulf %63, %66 : tensor<128xf32, #blocked> loc(#loc52)
    %68 = arith.mulf %67, %24 : tensor<128xf32, #blocked> loc(#loc53)
    %69 = arith.addf %68, %27 : tensor<128xf32, #blocked> loc(#loc54)
    %70 = arith.cmpf ogt, %cst, %69 : tensor<128xf32, #blocked> loc(#loc102)
    %71 = arith.select %70, %cst, %69 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc103)
    %72 = arith.addi %30, %cst_4 : tensor<128xi64, #blocked> loc(#loc58)
    %73 = arith.cmpi slt, %30, %cst_0 : tensor<128xi64, #blocked> loc(#loc59)
    %74 = arith.select %73, %72, %30 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc60)
    %75 = arith.addi %32, %cst_4 : tensor<128xi64, #blocked> loc(#loc61)
    %76 = arith.cmpi slt, %32, %cst_0 : tensor<128xi64, #blocked> loc(#loc62)
    %77 = arith.select %76, %75, %32 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc63)
    %78 = arith.muli %74, %cst_4 : tensor<128xi64, #blocked> loc(#loc64)
    %79 = arith.addi %77, %78 : tensor<128xi64, #blocked> loc(#loc65)
    %80 = arith.muli %5, %cst_3 : tensor<128xi32, #blocked> loc(#loc66)
    %81 = arith.extsi %80 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc67)
    %82 = arith.addi %79, %81 : tensor<128xi64, #blocked> loc(#loc67)
    %83 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc68)
    %84 = tt.addptr %83, %82 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc68)
    %85 = tt.load %84 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc69)
    %86 = arith.subf %85, %35 : tensor<128xf32, #blocked> loc(#loc70)
    %87 = arith.addf %38, %cst_5 : tensor<128xf32, #blocked> loc(#loc71)
    %88 = tt.extern_elementwise %87 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32, #blocked>) -> tensor<128xf32, #blocked> loc(#loc72)
    %89 = arith.divf %cst_1, %88 : tensor<128xf32, #blocked> loc(#loc73)
    %90 = arith.mulf %86, %89 : tensor<128xf32, #blocked> loc(#loc74)
    %91 = arith.mulf %90, %41 : tensor<128xf32, #blocked> loc(#loc75)
    %92 = arith.addf %91, %44 : tensor<128xf32, #blocked> loc(#loc76)
    %93 = arith.addf %71, %92 : tensor<128xf32, #blocked> loc(#loc77)
    %94 = arith.addi %47, %cst_2 : tensor<128xi64, #blocked> loc(#loc78)
    %95 = arith.cmpi slt, %47, %cst_0 : tensor<128xi64, #blocked> loc(#loc79)
    %96 = arith.select %95, %94, %47 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc80)
    %97 = arith.addi %49, %cst_2 : tensor<128xi64, #blocked> loc(#loc81)
    %98 = arith.cmpi slt, %49, %cst_0 : tensor<128xi64, #blocked> loc(#loc82)
    %99 = arith.select %98, %97, %49 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc83)
    %100 = arith.muli %96, %cst_2 : tensor<128xi64, #blocked> loc(#loc84)
    %101 = arith.addi %99, %100 : tensor<128xi64, #blocked> loc(#loc85)
    %102 = arith.muli %5, %cst_6 : tensor<128xi32, #blocked> loc(#loc86)
    %103 = arith.extsi %102 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc87)
    %104 = arith.addi %101, %103 : tensor<128xi64, #blocked> loc(#loc87)
    %105 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc88)
    %106 = tt.addptr %105, %104 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc88)
    %107 = tt.load %106 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc89)
    %108 = arith.subf %107, %52 : tensor<128xf32, #blocked> loc(#loc90)
    %109 = arith.addf %55, %cst_5 : tensor<128xf32, #blocked> loc(#loc91)
    %110 = tt.extern_elementwise %109 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32, #blocked>) -> tensor<128xf32, #blocked> loc(#loc92)
    %111 = arith.divf %cst_1, %110 : tensor<128xf32, #blocked> loc(#loc93)
    %112 = arith.mulf %108, %111 : tensor<128xf32, #blocked> loc(#loc94)
    %113 = arith.mulf %112, %58 : tensor<128xf32, #blocked> loc(#loc95)
    %114 = arith.addf %113, %61 : tensor<128xf32, #blocked> loc(#loc96)
    %115 = arith.addf %93, %114 : tensor<128xf32, #blocked> loc(#loc97)
    tt.store %11, %62 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc98)
    %116 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc99)
    %117 = tt.addptr %116, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc99)
    tt.store %117, %115 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc100)
    tt.return loc(#loc101)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":21:28)
#loc3 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":21:33)
#loc4 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":22:36)
#loc5 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":22:23)
#loc6 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":25:21)
#loc7 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":25:28)
#loc8 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":26:21)
#loc9 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":26:27)
#loc10 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":27:19)
#loc11 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":29:34)
#loc12 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":29:39)
#loc13 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":30:30)
#loc14 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":30:35)
#loc15 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":31:30)
#loc16 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":31:35)
#loc17 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":32:30)
#loc18 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":32:35)
#loc19 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":33:31)
#loc20 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":33:36)
#loc21 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":34:31)
#loc22 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":34:36)
#loc23 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":35:31)
#loc24 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":35:36)
#loc25 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":36:31)
#loc26 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":36:36)
#loc27 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":37:31)
#loc28 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":37:36)
#loc29 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":38:31)
#loc30 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":38:36)
#loc31 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":39:31)
#loc32 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":39:36)
#loc33 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":40:32)
#loc34 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":40:37)
#loc35 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":41:32)
#loc36 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":41:37)
#loc37 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":42:32)
#loc38 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":42:37)
#loc39 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":43:32)
#loc40 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":43:37)
#loc41 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":44:32)
#loc42 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":44:37)
#loc43 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":45:32)
#loc44 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":45:37)
#loc45 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":46:32)
#loc46 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":46:37)
#loc47 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":47:18)
#loc48 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":48:18)
#loc49 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":50:18)
#loc50 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":51:26)
#loc51 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":53:19)
#loc52 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":56:19)
#loc53 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":57:20)
#loc54 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":58:20)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc56 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":60:42)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc58 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":62:20)
#loc59 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":63:20)
#loc60 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":64:35)
#loc61 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":65:20)
#loc62 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":66:20)
#loc63 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":67:35)
#loc64 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":68:41)
#loc65 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":68:39)
#loc66 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":68:52)
#loc67 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":68:49)
#loc68 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":68:31)
#loc69 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":68:57)
#loc70 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":69:20)
#loc71 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":70:20)
#loc72 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":71:27)
#loc73 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":72:19)
#loc74 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":74:20)
#loc75 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":75:20)
#loc76 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":76:20)
#loc77 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":77:20)
#loc78 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":79:20)
#loc79 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":80:20)
#loc80 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":81:35)
#loc81 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":82:20)
#loc82 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":83:20)
#loc83 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":84:35)
#loc84 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":85:42)
#loc85 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":85:40)
#loc86 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":85:53)
#loc87 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":85:50)
#loc88 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":85:32)
#loc89 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":85:58)
#loc90 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":86:20)
#loc91 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":87:20)
#loc92 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":88:27)
#loc93 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":89:19)
#loc94 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":91:20)
#loc95 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":92:20)
#loc96 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":93:20)
#loc97 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":94:20)
#loc98 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":95:39)
#loc99 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":96:28)
#loc100 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":96:40)
#loc101 = loc("inductor_cache/yr/cyrsxhwxkgnk4j7o6sdnxv3lhdk5cojsegk7q242oehiqnpseiv7.py":96:4)
#loc102 = loc(callsite(#loc55 at #loc56))
#loc103 = loc(callsite(#loc57 at #loc56))
