; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 768, !dbg !14
  %14 = sdiv i32 %12, 16, !dbg !15
  %.frozen = freeze i32 %12, !dbg !16
  %15 = sdiv i32 %.frozen, 192, !dbg !16
  %16 = mul i32 %15, 192, !dbg !17
  %srem.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = shl nsw i32 %15, 7, !dbg !18
  %18 = add nsw i32 %17, %srem.decomposed, !dbg !19
  %19 = sext i32 %18 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !20
  %21 = shl nsw i32 %15, 6, !dbg !21
  %22 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !22
  %23 = insertelement <2 x i32> %22, i32 %14, i64 1, !dbg !22
  %24 = srem <2 x i32> %23, <i32 16, i32 12>, !dbg !22
  %25 = extractelement <2 x i32> %24, i64 1, !dbg !23
  %26 = icmp slt i32 %25, 8, !dbg !24
  %27 = and i1 %13, %26, !dbg !25
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %27, i32 0, i1 %27, i32 0, i1 %27) #1, !dbg !26
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !26
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !26
  %31 = icmp sgt i32 %25, 7, !dbg !23
  %32 = insertelement <2 x i32> <i32 poison, i32 -8>, i32 %21, i64 0, !dbg !27
  %33 = add nsw <2 x i32> %32, %24, !dbg !27
  %34 = extractelement <2 x i32> %33, i64 1, !dbg !28
  %35 = shl nsw i32 %34, 4, !dbg !28
  %36 = extractelement <2 x i32> %33, i64 0, !dbg !29
  %37 = add nsw i32 %36, %35, !dbg !29
  %38 = sext i32 %37 to i64, !dbg !30
  %39 = getelementptr i1, ptr addrspace(1) %1, i64 %38, !dbg !30
  %40 = and i1 %13, %31, !dbg !31
  %41 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];\0A\09@!$3 mov.u16 $0, 0x0;", "=c,l,b,b"(ptr addrspace(1) %39, i1 %40, i1 %40) #1, !dbg !32
  %42 = bitcast i16 %41 to <2 x i8>, !dbg !32
  %43 = icmp eq <2 x i8> %42, zeroinitializer, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %38, !dbg !33
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %44, i1 %40, i32 0, i1 %40, i32 0, i1 %40) #1, !dbg !34
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !34
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !34
  %48 = bitcast i32 %46 to float, !dbg !34
  %49 = bitcast i32 %47 to float, !dbg !34
  %50 = sext i32 %34 to i64, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %3, i64 %50, !dbg !35
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %40, i32 0, i1 %40) #1, !dbg !36
  %53 = bitcast i32 %52 to float, !dbg !36
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %40, i32 0, i1 %40) #1, !dbg !36
  %55 = bitcast i32 %54 to float, !dbg !36
  %56 = fadd float %48, %53, !dbg !37
  %57 = fadd float %49, %55, !dbg !37
  %58 = fmul float %56, 0x3F847AE140000000, !dbg !38
  %59 = fmul float %57, 0x3F847AE140000000, !dbg !38
  %60 = extractelement <2 x i1> %43, i64 0, !dbg !39
  %61 = select i1 %60, float %58, float %56, !dbg !39
  %62 = extractelement <2 x i1> %43, i64 1, !dbg !39
  %63 = select i1 %62, float %59, float %57, !dbg !39
  %64 = sext i32 %12 to i64, !dbg !40
  %65 = getelementptr float, ptr addrspace(1) %4, i64 %64, !dbg !40
  %66 = bitcast float %61 to i32, !dbg !41
  %67 = select i1 %26, i32 %29, i32 %66, !dbg !42
  %68 = bitcast float %63 to i32, !dbg !41
  %69 = select i1 %26, i32 %30, i32 %68, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %67, i32 %69, ptr addrspace(1) %65, i1 %13) #1, !dbg !41
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "com2st3bjgcqfm2f5u7nrldllyvusy5g3ax3azdb7b4yjrze2g7s.py", directory: "inductor_cache/om")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 49, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 37, column: 55, scope: !7)
!22 = !DILocation(line: 25, column: 19, scope: !7)
!23 = !DILocation(line: 34, column: 19, scope: !7)
!24 = !DILocation(line: 32, column: 18, scope: !7)
!25 = !DILocation(line: 33, column: 61, scope: !7)
!26 = !DILocation(line: 33, column: 54, scope: !7)
!27 = !DILocation(line: 37, column: 35, scope: !7)
!28 = !DILocation(line: 37, column: 39, scope: !7)
!29 = !DILocation(line: 37, column: 52, scope: !7)
!30 = !DILocation(line: 37, column: 30, scope: !7)
!31 = !DILocation(line: 37, column: 67, scope: !7)
!32 = !DILocation(line: 37, column: 60, scope: !7)
!33 = !DILocation(line: 38, column: 31, scope: !7)
!34 = !DILocation(line: 38, column: 61, scope: !7)
!35 = !DILocation(line: 39, column: 31, scope: !7)
!36 = !DILocation(line: 39, column: 43, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 42, column: 20, scope: !7)
!39 = !DILocation(line: 43, column: 34, scope: !7)
!40 = !DILocation(line: 47, column: 25, scope: !7)
!41 = !DILocation(line: 47, column: 37, scope: !7)
!42 = !DILocation(line: 46, column: 33, scope: !7)
!43 = !DILocation(line: 47, column: 4, scope: !7)
