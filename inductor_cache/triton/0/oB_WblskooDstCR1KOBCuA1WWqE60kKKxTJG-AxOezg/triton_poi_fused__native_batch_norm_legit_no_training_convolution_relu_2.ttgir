#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4256> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<4225> : tensor<1024xi32, #blocked1> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<110323200> : tensor<1024xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<110323200> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<143650> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<192> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.cmpi slt, %6, %cst_5 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = arith.cmpi slt, %7, %cst_4 : tensor<1024xi32, #blocked1> loc(#loc6)
    %10 = arith.divsi %6, %cst_6 : tensor<1024xi32, #blocked> loc(#loc7)
    %11 = arith.remsi %10, %cst_7 : tensor<1024xi32, #blocked> loc(#loc8)
    %12 = arith.remsi %7, %cst_3 : tensor<1024xi32, #blocked1> loc(#loc9)
    %13 = arith.divsi %7, %cst_3 : tensor<1024xi32, #blocked1> loc(#loc10)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc11)
    %15 = tt.addptr %14, %6 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc11)
    %16 = tt.load %15, %8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc12)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc13)
    %18 = tt.addptr %17, %11 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc13)
    %19 = tt.load %18, %8 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc14)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc15)
    %21 = tt.addptr %20, %11 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc15)
    %22 = tt.load %21, %8 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc16)
    %23 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc17)
    %24 = tt.addptr %23, %11 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc17)
    %25 = tt.load %24, %8 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc18)
    %26 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc19)
    %27 = tt.addptr %26, %11 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc19)
    %28 = tt.load %27, %8 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc20)
    %29 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc21)
    %30 = tt.addptr %29, %11 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc21)
    %31 = tt.load %30, %8 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc22)
    %32 = arith.addf %16, %19 : tensor<1024xf32, #blocked> loc(#loc23)
    %33 = arith.subf %32, %22 : tensor<1024xf32, #blocked> loc(#loc24)
    %34 = arith.addf %25, %cst : tensor<1024xf32, #blocked> loc(#loc25)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1024xf32, #blocked>) -> tensor<1024xf32, #blocked> loc(#loc26)
    %36 = arith.divf %cst_0, %35 : tensor<1024xf32, #blocked> loc(#loc27)
    %37 = arith.mulf %33, %36 : tensor<1024xf32, #blocked> loc(#loc28)
    %38 = arith.mulf %37, %28 : tensor<1024xf32, #blocked> loc(#loc29)
    %39 = arith.addf %38, %31 : tensor<1024xf32, #blocked> loc(#loc30)
    %40 = arith.cmpf ogt, %cst_1, %39 : tensor<1024xf32, #blocked> loc(#loc40)
    %41 = arith.select %40, %cst_1, %39 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc41)
    tt.store %15, %32, %8 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc34)
    %42 = arith.muli %13, %cst_2 : tensor<1024xi32, #blocked1> loc(#loc35)
    %43 = arith.addi %12, %42 : tensor<1024xi32, #blocked1> loc(#loc36)
    %44 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc37)
    %45 = tt.addptr %44, %43 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc37)
    %46 = triton_gpu.convert_layout %41 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc38)
    tt.store %45, %46, %9 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":21:28)
#loc3 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":21:33)
#loc4 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":22:36)
#loc5 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":22:23)
#loc6 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":23:21)
#loc7 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":25:21)
#loc8 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":25:31)
#loc9 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":26:19)
#loc10 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":27:19)
#loc11 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":28:34)
#loc12 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":28:39)
#loc13 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":29:30)
#loc14 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":29:35)
#loc15 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":30:30)
#loc16 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":30:35)
#loc17 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":31:30)
#loc18 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":31:35)
#loc19 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":32:31)
#loc20 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":32:36)
#loc21 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":33:31)
#loc22 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":33:36)
#loc23 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":34:18)
#loc24 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":35:18)
#loc25 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":37:18)
#loc26 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":38:26)
#loc27 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":40:19)
#loc28 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":43:19)
#loc29 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":44:20)
#loc30 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":45:20)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc32 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":47:42)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc34 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":48:39)
#loc35 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":49:35)
#loc36 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":49:30)
#loc37 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":49:25)
#loc38 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":49:47)
#loc39 = loc("inductor_cache/ev/cev5rh47nsyt76hcjumtfektp6d6zggq5q466a4p7t6vyz7bklpg.py":49:4)
#loc40 = loc(callsite(#loc31 at #loc32))
#loc41 = loc(callsite(#loc33 at #loc32))
