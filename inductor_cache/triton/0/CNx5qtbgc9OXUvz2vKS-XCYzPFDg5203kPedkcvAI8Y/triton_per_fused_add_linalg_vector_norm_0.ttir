#loc = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":19:0)
#loc1 = loc(unknown)
#loc17 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":36:24)
#loc21 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":39:24)
#loc24 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":42:26)
#loc27 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":45:26)
#loc41 = loc(callsite(#loc1 at #loc17))
#loc44 = loc(callsite(#loc1 at #loc21))
#loc46 = loc(callsite(#loc1 at #loc24))
#loc48 = loc(callsite(#loc1 at #loc27))
module {
  tt.func public @triton_per_fused_add_linalg_vector_norm_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<192> : tensor<1x64xi32> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x64x!tt.ptr<f32>> loc(#loc5)
    %5 = arith.addi %1, %cst_1 : tensor<1x64xi32> loc(#loc6)
    %6 = tt.addptr %2, %5 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc7)
    %7 = tt.load %6 : tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %8 = arith.addi %1, %cst_0 : tensor<1x64xi32> loc(#loc9)
    %9 = tt.addptr %2, %8 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %10 = tt.load %9 : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %11 = arith.addi %1, %cst : tensor<1x64xi32> loc(#loc12)
    %12 = tt.addptr %2, %11 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc13)
    %13 = tt.load %12 : tensor<1x64x!tt.ptr<f32>> loc(#loc14)
    %14 = arith.mulf %4, %4 : tensor<1x64xf32> loc(#loc15)
    %15 = "tt.reduce"(%14) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc17)), %arg4: f32 loc(callsite(#loc1 at #loc17))):
      %35 = arith.addf %arg3, %arg4 : f32 loc(#loc49)
      tt.reduce.return %35 : f32 loc(#loc40)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc40)
    %16 = tt.expand_dims %15 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc19)
    %17 = arith.mulf %7, %7 : tensor<1x64xf32> loc(#loc20)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc21)), %arg4: f32 loc(callsite(#loc1 at #loc21))):
      %35 = arith.addf %arg3, %arg4 : f32 loc(#loc50)
      tt.reduce.return %35 : f32 loc(#loc43)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc43)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc22)
    %20 = arith.mulf %10, %10 : tensor<1x64xf32> loc(#loc23)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc24)), %arg4: f32 loc(callsite(#loc1 at #loc24))):
      %35 = arith.addf %arg3, %arg4 : f32 loc(#loc51)
      tt.reduce.return %35 : f32 loc(#loc45)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc45)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc25)
    %23 = arith.mulf %13, %13 : tensor<1x64xf32> loc(#loc26)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc27)), %arg4: f32 loc(callsite(#loc1 at #loc27))):
      %35 = arith.addf %arg3, %arg4 : f32 loc(#loc52)
      tt.reduce.return %35 : f32 loc(#loc47)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc47)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc28)
    %26 = tt.extern_elementwise %16 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc29)
    %27 = tt.extern_elementwise %19 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc30)
    %28 = arith.addf %26, %27 : tensor<1x1xf32> loc(#loc31)
    %29 = tt.extern_elementwise %22 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc32)
    %30 = arith.addf %28, %29 : tensor<1x1xf32> loc(#loc33)
    %31 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc34)
    %32 = arith.addf %30, %31 : tensor<1x1xf32> loc(#loc35)
    gpu.barrier loc(#loc36)
    %33 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc37)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    tt.store %34, %32 : tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":26:26)
#loc3 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":26:34)
#loc4 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":30:30)
#loc5 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":30:35)
#loc6 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":31:35)
#loc7 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":31:30)
#loc8 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":31:40)
#loc9 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":32:37)
#loc10 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":32:31)
#loc11 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":32:42)
#loc12 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":33:37)
#loc13 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":33:31)
#loc14 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":33:42)
#loc15 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":34:18)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc19 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":36:27)
#loc20 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":37:18)
#loc22 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":39:27)
#loc23 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":40:20)
#loc25 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":42:29)
#loc26 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":43:20)
#loc28 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":45:29)
#loc29 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":46:27)
#loc30 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":47:27)
#loc31 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":48:20)
#loc32 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":49:27)
#loc33 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":50:20)
#loc34 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":51:27)
#loc35 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":52:20)
#loc36 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":53:4)
#loc37 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":54:28)
#loc38 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":54:71)
#loc39 = loc("inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py":54:4)
#loc40 = loc(callsite(#loc16 at #loc17))
#loc42 = loc(callsite(#loc18 at #loc16))
#loc43 = loc(callsite(#loc16 at #loc21))
#loc45 = loc(callsite(#loc16 at #loc24))
#loc47 = loc(callsite(#loc16 at #loc27))
#loc49 = loc(callsite(#loc42 at #loc17))
#loc50 = loc(callsite(#loc42 at #loc21))
#loc51 = loc(callsite(#loc42 at #loc24))
#loc52 = loc(callsite(#loc42 at #loc27))
