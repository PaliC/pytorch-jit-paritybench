//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_linalg_vector_norm_0 // -- Begin function triton_per_fused_add_linalg_vector_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_linalg_vector_norm_0
.visible .entry triton_per_fused_add_linalg_vector_norm_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_linalg_vector_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_linalg_vector_norm_0_param_1,
	.param .u32 triton_per_fused_add_linalg_vector_norm_0_param_2
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<82>;
	.reg .f32 	%f<72>;
	.reg .b64 	%rd<8>;
	.loc	1 19 0                          // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused_add_linalg_vector_norm_0_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_add_linalg_vector_norm_0_param_1];
$L__tmp0:
	.loc	1 26 34                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:26:34
	mov.u32 	%r30, %tid.x;
	and.b32  	%r31, %r30, 31;
	and.b32  	%r32, %r30, 63;
	.loc	1 30 30                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:30:30
	mul.wide.u32 	%rd7, %r32, 4;
	add.s64 	%rd1, %rd6, %rd7;
	mov.pred 	%p1, -1;
	.loc	1 30 35                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:30:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 31 30                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:31:30
	add.s64 	%rd2, %rd1, 256;
	.loc	1 31 40                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:31:40
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 32 31                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:32:31
	add.s64 	%rd3, %rd1, 512;
	.loc	1 32 42                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:32:42
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 33 31                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:33:31
	add.s64 	%rd4, %rd1, 768;
	.loc	1 33 42                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:33:42
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 34 18                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:34:18
	mul.f32 	%f5, %f1, %f1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f5;
	shfl.sync.bfly.b32	%r34, %r33, 16, 31, -1;
	mov.b32 	%f6, %r34;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f7, %f1, %f1, %f6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f7;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f8, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f9;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f10, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f11;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f12, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f13;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f14, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r31, 0;
	shr.u32 	%r43, %r30, 3;
	and.b32  	%r44, %r43, 4;
	mov.u32 	%r45, global_smem;
	add.s32 	%r5, %r45, %r44;
	mov.b32 	%r6, %f15;
	// begin inline asm
	@%p5 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r30, 2;
	shl.b32 	%r46, %r30, 2;
	add.s32 	%r8, %r45, %r46;
	// begin inline asm
	@%p6 ld.shared.b32 %r7, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r7;
	shfl.sync.bfly.b32	%r47, %r7, 1, 31, -1;
	mov.b32 	%f17, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r48, %r30, 1;
	setp.eq.b32 	%p18, %r48, 1;
	not.pred 	%p19, %p18;
	and.pred  	%p7, %p6, %p19;
	mov.b32 	%r10, %f18;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f19, [global_smem];
$L__tmp2:
	.loc	1 37 18                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:37:18
	mul.f32 	%f20, %f2, %f2;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r49, %f20;
	shfl.sync.bfly.b32	%r50, %r49, 16, 31, -1;
	mov.b32 	%f21, %r50;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f22, %f2, %f2, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f22;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f23, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f24;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f25, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f26;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f27, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f28;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f29, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r12, %f30;
	// begin inline asm
	@%p5 st.shared.b32 [ %r5 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r13, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r13;
	shfl.sync.bfly.b32	%r59, %r13, 1, 31, -1;
	mov.b32 	%f32, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f33;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f34, [global_smem];
$L__tmp4:
	.loc	1 40 20                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:40:20
	mul.f32 	%f35, %f3, %f3;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r60, %f35;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f36, %r61;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f37, %f3, %f3, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f37;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f38, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f39;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f40, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f41;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f42, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f43;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f44, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f45;
	// begin inline asm
	@%p5 st.shared.b32 [ %r5 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r19, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r19;
	shfl.sync.bfly.b32	%r70, %r19, 1, 31, -1;
	mov.b32 	%f47, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f48;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f49, [global_smem];
$L__tmp6:
	.loc	1 43 20                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:43:20
	mul.f32 	%f50, %f4, %f4;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r71, %f50;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f51, %r72;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f52, %f4, %f4, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f52;
	shfl.sync.bfly.b32	%r74, %r73, 8, 31, -1;
	mov.b32 	%f53, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f54;
	shfl.sync.bfly.b32	%r76, %r75, 4, 31, -1;
	mov.b32 	%f55, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f56;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	mov.b32 	%f57, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f58;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f59, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f60;
	// begin inline asm
	@%p5 st.shared.b32 [ %r5 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r25, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f61, %r25;
	shfl.sync.bfly.b32	%r81, %r25, 1, 31, -1;
	mov.b32 	%f62, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f63;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f64, [global_smem];
$L__tmp8:
	.loc	1 46 27                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:46:27
	sqrt.approx.ftz.f32 	%f65, %f19;
	.loc	1 47 27                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:47:27
	sqrt.approx.ftz.f32 	%f66, %f34;
	.loc	1 49 27                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:49:27
	sqrt.approx.ftz.f32 	%f67, %f49;
	.loc	1 51 27                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:51:27
	sqrt.approx.ftz.f32 	%f68, %f64;
	.loc	1 48 20                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:48:20
	add.f32 	%f69, %f65, %f66;
	.loc	1 50 20                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:50:20
	add.f32 	%f70, %f69, %f67;
	.loc	1 52 20                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:52:20
	add.f32 	%f71, %f70, %f68;
	.loc	1 53 4                          // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:53:4
	bar.sync 	0;
	.loc	1 54 71                         // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:54:71
	setp.eq.s32 	%p17, %r32, 0;
	mov.b32 	%r29, %f71;
	// begin inline asm
	@%p17 st.global.b32 [ %rd5 + 0 ], { %r29 };
	// end inline asm
	.loc	1 54 4                          // cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py:54:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fu/cfus57u4isxxkvvjwxql3lrwlduivi6fdejyoeyzu7fiyckfmyep.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 258                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xfb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 117
.b8 115
.b8 53
.b8 55
.b8 117
.b8 52
.b8 105
.b8 115
.b8 120
.b8 120
.b8 107
.b8 118
.b8 118
.b8 106
.b8 119
.b8 120
.b8 113
.b8 108
.b8 51
.b8 108
.b8 114
.b8 119
.b8 108
.b8 100
.b8 117
.b8 105
.b8 118
.b8 105
.b8 54
.b8 102
.b8 100
.b8 101
.b8 106
.b8 121
.b8 111
.b8 101
.b8 121
.b8 122
.b8 117
.b8 55
.b8 102
.b8 105
.b8 121
.b8 99
.b8 107
.b8 102
.b8 109
.b8 121
.b8 101
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 117
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xec:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
