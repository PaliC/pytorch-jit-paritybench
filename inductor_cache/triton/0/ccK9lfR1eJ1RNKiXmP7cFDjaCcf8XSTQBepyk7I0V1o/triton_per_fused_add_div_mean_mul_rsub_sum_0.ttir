#loc = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":40:58)
#loc30 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":45:59)
#loc34 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":49:59)
#loc59 = loc(callsite(#loc1 at #loc24))
#loc63 = loc(callsite(#loc1 at #loc30))
#loc66 = loc(callsite(#loc1 at #loc34))
module {
  tt.func public @triton_per_fused_add_div_mean_mul_rsub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_1 = arith.constant 2.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_3 = arith.constant dense<0.999998986> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999997E-7> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.subf %cst_5, %3 : tensor<256xf32> loc(#loc46)
    %8 = math.exp %7 : tensor<256xf32> loc(#loc47)
    %9 = arith.addf %8, %cst_6 : tensor<256xf32> loc(#loc48)
    %10 = arith.divf %cst_6, %9 : tensor<256xf32> loc(#loc49)
    %11 = arith.cmpf ogt, %10, %cst_4 : tensor<256xf32> loc(#loc50)
    %12 = arith.cmpf une, %10, %10 : tensor<256xf32> loc(#loc51)
    %13 = arith.ori %11, %12 : tensor<256xi1> loc(#loc52)
    %14 = arith.select %13, %10, %cst_4 : tensor<256xi1>, tensor<256xf32> loc(#loc53)
    %15 = arith.cmpf olt, %14, %cst_3 : tensor<256xf32> loc(#loc54)
    %16 = arith.cmpf une, %14, %14 : tensor<256xf32> loc(#loc55)
    %17 = arith.ori %15, %16 : tensor<256xi1> loc(#loc56)
    %18 = arith.select %17, %14, %cst_3 : tensor<256xi1>, tensor<256xf32> loc(#loc57)
    %19 = arith.mulf %18, %6 : tensor<256xf32> loc(#loc22)
    %20 = "tt.reduce"(%19) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc24)), %arg5: f32 loc(callsite(#loc1 at #loc24))):
      %39 = arith.addf %arg4, %arg5 : f32 loc(#loc68)
      tt.reduce.return %39 : f32 loc(#loc58)
    }) : (tensor<256xf32>) -> f32 loc(#loc58)
    %21 = arith.addf %20, %cst_2 : f32 loc(#loc61)
    %22 = arith.subf %cst_6, %18 : tensor<256xf32> loc(#loc28)
    %23 = arith.mulf %22, %6 : tensor<256xf32> loc(#loc29)
    %24 = "tt.reduce"(%23) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc30)), %arg5: f32 loc(callsite(#loc1 at #loc30))):
      %39 = arith.addf %arg4, %arg5 : f32 loc(#loc69)
      tt.reduce.return %39 : f32 loc(#loc62)
    }) : (tensor<256xf32>) -> f32 loc(#loc62)
    %25 = arith.addf %24, %cst_2 : f32 loc(#loc64)
    %26 = arith.subf %cst_6, %6 : tensor<256xf32> loc(#loc32)
    %27 = arith.mulf %18, %26 : tensor<256xf32> loc(#loc33)
    %28 = "tt.reduce"(%27) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc34)), %arg5: f32 loc(callsite(#loc1 at #loc34))):
      %39 = arith.addf %arg4, %arg5 : f32 loc(#loc70)
      tt.reduce.return %39 : f32 loc(#loc65)
    }) : (tensor<256xf32>) -> f32 loc(#loc65)
    %29 = arith.addf %28, %cst_2 : f32 loc(#loc67)
    %30 = arith.mulf %21, %cst_1 : f32 loc(#loc36)
    %31 = arith.addf %30, %25 : f32 loc(#loc37)
    %32 = arith.addf %31, %29 : f32 loc(#loc38)
    %33 = arith.addf %32, %cst_0 : f32 loc(#loc39)
    %34 = arith.divf %30, %33 : f32 loc(#loc40)
    %35 = arith.subf %cst, %34 : f32 loc(#loc41)
    %36 = tt.splat %35 : f32 -> tensor<1xf32> loc(#loc41)
    gpu.barrier loc(#loc42)
    %37 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc43)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc43)
    tt.store %38, %36 : tensor<1x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":27:26)
#loc3 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":31:30)
#loc4 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":31:35)
#loc5 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":32:30)
#loc6 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":32:35)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc8 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":33:22)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":35:40)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc18 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":37:40)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc22 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":38:18)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc27 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":40:45)
#loc28 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":42:20)
#loc29 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":43:20)
#loc31 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":45:45)
#loc32 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":46:20)
#loc33 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":47:19)
#loc35 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":49:45)
#loc36 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":51:20)
#loc37 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":52:20)
#loc38 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":53:20)
#loc39 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":54:20)
#loc40 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":55:20)
#loc41 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":56:20)
#loc42 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":58:4)
#loc43 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":59:28)
#loc44 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":59:63)
#loc45 = loc("inductor_cache/5b/c5blac2kjteyfc7taet3l2w5hy4ruqyldp3qxcpps6jare4msa5y.py":59:4)
#loc46 = loc(callsite(#loc7 at #loc8))
#loc47 = loc(callsite(#loc9 at #loc8))
#loc48 = loc(callsite(#loc10 at #loc8))
#loc49 = loc(callsite(#loc11 at #loc8))
#loc50 = loc(callsite(#loc12 at #loc13))
#loc51 = loc(callsite(#loc14 at #loc13))
#loc52 = loc(callsite(#loc15 at #loc13))
#loc53 = loc(callsite(#loc16 at #loc13))
#loc54 = loc(callsite(#loc17 at #loc18))
#loc55 = loc(callsite(#loc19 at #loc18))
#loc56 = loc(callsite(#loc20 at #loc18))
#loc57 = loc(callsite(#loc21 at #loc18))
#loc58 = loc(callsite(#loc23 at #loc24))
#loc60 = loc(callsite(#loc25 at #loc23))
#loc61 = loc(callsite(#loc26 at #loc27))
#loc62 = loc(callsite(#loc23 at #loc30))
#loc64 = loc(callsite(#loc26 at #loc31))
#loc65 = loc(callsite(#loc23 at #loc34))
#loc67 = loc(callsite(#loc26 at #loc35))
#loc68 = loc(callsite(#loc60 at #loc24))
#loc69 = loc(callsite(#loc60 at #loc30))
#loc70 = loc(callsite(#loc60 at #loc34))
