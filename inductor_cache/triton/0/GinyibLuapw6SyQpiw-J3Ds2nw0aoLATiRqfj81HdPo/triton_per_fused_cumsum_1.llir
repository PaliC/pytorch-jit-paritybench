; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_cumsum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 3, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 2, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 16, !dbg !14
  %12 = and i32 %7, 3, !dbg !15
  %13 = shl i32 %10, 2, !dbg !16
  %14 = or disjoint i32 %13, %12, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %11, i32 0, i1 %11) #2, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %17, i32 1, i32 0), !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %.not = icmp eq i32 %12, 0, !dbg !20
  %21 = fadd float %18, %20, !dbg !21
  %22 = select i1 %.not, float %18, float %21, !dbg !20
  %23 = bitcast float %22 to i32, !dbg !20
  %24 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %23, i32 2, i32 0), !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = icmp samesign ugt i32 %12, 1, !dbg !20
  %27 = fadd float %22, %25, !dbg !21
  %28 = select i1 %26, float %27, float %22, !dbg !20
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !23
  %30 = and i32 %7, 32, !dbg !24
  %31 = icmp eq i32 %30, 0, !dbg !24
  %32 = bitcast float %28 to i32, !dbg !24
  %33 = and i1 %31, %11, !dbg !24
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %32, ptr addrspace(1) %29, i1 %33) #2, !dbg !24
  ret void, !dbg !25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.up.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ce3uzcejywe7g3wr2tneqam2gso66qphwtgpqveot3ayctvo3e3v.py", directory: "inductor_cache/e3")
!4 = !{ptr @triton_per_fused_cumsum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_cumsum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_cumsum_1", linkageName: "triton_per_fused_cumsum_1", scope: !3, file: !3, line: 24, type: !8, scopeLine: 24, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 28, column: 28, scope: !7)
!11 = !DILocation(line: 28, column: 33, scope: !7)
!12 = !DILocation(line: 29, column: 44, scope: !7)
!13 = !DILocation(line: 29, column: 23, scope: !7)
!14 = !DILocation(line: 30, column: 21, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 36, column: 37, scope: !7)
!17 = !DILocation(line: 36, column: 35, scope: !7)
!18 = !DILocation(line: 36, column: 30, scope: !7)
!19 = !DILocation(line: 36, column: 42, scope: !7)
!20 = !DILocation(line: 39, column: 44, scope: !7)
!21 = !DILocation(line: 13, column: 20, scope: !22, inlinedAt: !20)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !3, discriminator: 0)
!23 = !DILocation(line: 40, column: 25, scope: !7)
!24 = !DILocation(line: 40, column: 43, scope: !7)
!25 = !DILocation(line: 40, column: 4, scope: !7)
