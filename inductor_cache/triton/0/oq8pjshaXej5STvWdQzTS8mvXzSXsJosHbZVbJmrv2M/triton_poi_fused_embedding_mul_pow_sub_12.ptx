//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_embedding_mul_pow_sub_12 // -- Begin function triton_poi_fused_embedding_mul_pow_sub_12
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 98, 104, 47, 99, 98, 104, 116, 103, 120, 111, 120, 118, 104, 110, 102, 52, 99, 52, 119, 97, 50, 110, 118, 102, 103, 112, 120, 54, 110, 52, 100, 52, 55, 51, 109, 108, 119, 54, 119, 116, 108, 103, 104, 110, 100, 106, 116, 97, 105, 119, 120, 111, 101, 109, 104, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[38] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 49, 48, 50, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_embedding_mul_pow_sub_12
.visible .entry triton_poi_fused_embedding_mul_pow_sub_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_pow_sub_12_param_4,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_5,
	.param .u32 triton_poi_fused_embedding_mul_pow_sub_12_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<79>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<50>;
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_embedding_mul_pow_sub_12_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:28
	// begin inline asm
	mov.u32 %r11, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:22:33
	shl.b32 	%r21, %r11, 3;
	ld.param.u64 	%rd20, [triton_poi_fused_embedding_mul_pow_sub_12_param_2];
	.loc	1 23 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:44
	mov.u32 	%r22, %tid.x;
	ld.param.u64 	%rd21, [triton_poi_fused_embedding_mul_pow_sub_12_param_3];
	and.b32  	%r2, %r22, 1;
	shl.b32 	%r23, %r2, 2;
	bfe.u32 	%r24, %r22, 4, 3;
	and.b32  	%r25, %r22, 7;
	.loc	1 23 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:23:23
	or.b32  	%r26, %r21, %r23;
	or.b32  	%r3, %r21, %r24;
	or.b32  	%r27, %r21, %r25;
	.loc	1 25 28                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:28
	// begin inline asm
	mov.u32 %r12, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:25:33
	shl.b32 	%r4, %r12, 6;
	.loc	1 26 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:44
	bfe.u32 	%r5, %r22, 1, 6;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	or.b32  	%r28, %r4, %r5;
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p6, %r28, 64;
	.loc	1 31 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:31:19
	bfe.s32 	%r29, %r11, 28, 1;
	shr.u32 	%r30, %r29, 24;
	add.s32 	%r31, %r26, %r30;
	.loc	1 30 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:30:19
	and.b32  	%r32, %r31, -256;
	sub.s32 	%r33, %r26, %r32;
	.loc	1 32 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:30
	mul.wide.s32 	%rd22, %r3, 8;
	add.s64 	%rd5, %rd19, %rd22;
	mul.wide.s32 	%rd23, %r27, 8;
	add.s64 	%rd13, %rd19, %rd23;
	mov.pred 	%p5, -1;
	.loc	1 32 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:32:35
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p5 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 33 39                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:39
	shl.b32 	%r34, %r28, 8;
	.loc	1 33 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:35
	add.s32 	%r35, %r34, %r33;
	.loc	1 33 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:50
	shl.b32 	%r36, %r31, 6;
	and.b32  	%r37, %r36, -16384;
	.loc	1 33 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:44
	add.s32 	%r38, %r35, %r37;
	.loc	1 33 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:30
	mul.wide.s32 	%rd24, %r38, 4;
	add.s64 	%rd14, %rd20, %rd24;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:30
	mul.wide.s32 	%rd25, %r28, 4;
	add.s64 	%rd15, %rd21, %rd25;
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r17 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r18 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r19 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r20 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 38 32                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:38:32
	shr.u64 	%rd26, %rd12, 53;
	and.b64  	%rd27, %rd26, 1024;
	add.s64 	%rd28, %rd27, %rd12;
	.loc	1 39 36                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:36
	setp.lt.u64 	%p11, %rd28, 1024;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	@%p11 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 50                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:0:50
	ld.param.u64 	%rd3, [triton_poi_fused_embedding_mul_pow_sub_12_param_4];
	ld.param.u64 	%rd2, [triton_poi_fused_embedding_mul_pow_sub_12_param_1];
	.loc	1 34 35                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:34:35
	mov.b32 	%f1, %r20;
	.loc	1 33 55                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:33:55
	mov.b32 	%f2, %r16;
	mov.b32 	%f3, %r15;
	mov.b32 	%f4, %r14;
	mov.b32 	%f5, %r13;
	.loc	1 26 44                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:44
	shl.b32 	%r55, %r22, 2;
	and.b32  	%r56, %r55, 60;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	or.b32  	%r57, %r4, %r56;
	.loc	1 27 21                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:27:21
	setp.lt.s32 	%p12, %r57, 64;
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	bar.sync 	0;
	.loc	1 26 23                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:26:23
	shl.b32 	%r58, %r57, 10;
	.loc	1 40 42                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:42
	or.b32  	%r59, %r58, 1024;
	or.b32  	%r60, %r58, 2048;
	or.b32  	%r61, %r58, 3072;
	.loc	1 40 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:30
	shl.b64 	%rd34, %rd10, 2;
	add.s64 	%rd35, %rd2, %rd34;
	shr.u64 	%rd36, %rd10, 51;
	and.b64  	%rd37, %rd36, 4096;
	add.s64 	%rd38, %rd35, %rd37;
	mul.wide.s32 	%rd39, %r58, 4;
	add.s64 	%rd29, %rd38, %rd39;
	mul.wide.s32 	%rd40, %r59, 4;
	add.s64 	%rd30, %rd38, %rd40;
	mul.wide.s32 	%rd41, %r60, 4;
	add.s64 	%rd31, %rd38, %rd41;
	mul.wide.s32 	%rd42, %r61, 4;
	add.s64 	%rd32, %rd38, %rd42;
	.loc	1 40 47                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:40:47
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r39 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r39;
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r40 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r40;
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r41 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r41;
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p12 ld.global.L1::evict_last.b32 { %r42 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r42;
	.loc	1 41 18                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:41:18
	add.f32 	%f10, %f5, %f1;
	add.f32 	%f11, %f4, %f1;
	add.f32 	%f12, %f3, %f1;
	add.f32 	%f13, %f2, %f1;
	shl.b32 	%r62, %r2, 8;
	or.b32  	%r63, %r62, %r5;
	shl.b32 	%r64, %r2, 4;
	mov.u32 	%r65, global_smem;
	add.s32 	%r66, %r65, %r64;
	shl.b32 	%r67, %r63, 2;
	add.s32 	%r43, %r66, %r67;
	mov.b32 	%r44, %f10;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	shr.u32 	%r68, %r62, 4;
	add.s32 	%r69, %r65, %r68;
	add.s32 	%r70, %r69, %r67;
	add.s32 	%r45, %r70, 260;
	mov.b32 	%r46, %f11;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r70, 520;
	mov.b32 	%r48, %f12;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r70, 780;
	mov.b32 	%r50, %f13;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r71, %r22, 2;
	and.b32  	%r72, %r71, 28;
	add.s32 	%r73, %r65, %r72;
	shl.b32 	%r74, %r22, 4;
	and.b32  	%r75, %r74, 2032;
	add.s32 	%r76, %r73, %r75;
	ld.shared.f32 	%f14, [%r76];
	ld.shared.f32 	%f15, [%r76+4];
	ld.shared.f32 	%f16, [%r76+8];
	ld.shared.f32 	%f17, [%r76+12];
	.loc	1 42 19                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:42:19
	sub.f32 	%f18, %f6, %f14;
	sub.f32 	%f19, %f7, %f15;
	sub.f32 	%f20, %f8, %f16;
	sub.f32 	%f21, %f9, %f17;
	.loc	1 44 20                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:44:20
	add.f32 	%f22, %f18, %f18;
	add.f32 	%f23, %f19, %f19;
	add.f32 	%f24, %f20, %f20;
	add.f32 	%f25, %f21, %f21;
	.loc	1 45 33                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:33
	shl.b32 	%r77, %r3, 6;
	.loc	1 45 30                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:30
	add.s32 	%r78, %r57, %r77;
	.loc	1 45 25                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:25
	mul.wide.s32 	%rd43, %r78, 4;
	add.s64 	%rd33, %rd3, %rd43;
	.loc	1 45 45                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:45
	mov.b32 	%r51, %f22;
	mov.b32 	%r52, %f23;
	mov.b32 	%r53, %f24;
	mov.b32 	%r54, %f25;
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd33 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	.loc	1 45 4                          // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:45:4
	ret;
$L__BB0_1:
	.loc	1 39 50                         // cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py:39:50
	mov.u64 	%rd44, assertMessage_0;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, assertFile_0;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, assertFunc_0;
	cvta.global.u64 	%rd49, %rd48;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd45;
	.param .b64 param1;
	st.param.b64 	[param1], %rd47;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd49;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bh/cbhtgxoxvhnf4c4wa2nvfgpx6n4d473mlw6wtlghndjtaiwxoemh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 104
.b8 116
.b8 103
.b8 120
.b8 111
.b8 120
.b8 118
.b8 104
.b8 110
.b8 102
.b8 52
.b8 99
.b8 52
.b8 119
.b8 97
.b8 50
.b8 110
.b8 118
.b8 102
.b8 103
.b8 112
.b8 120
.b8 54
.b8 110
.b8 52
.b8 100
.b8 52
.b8 55
.b8 51
.b8 109
.b8 108
.b8 119
.b8 54
.b8 119
.b8 116
.b8 108
.b8 103
.b8 104
.b8 110
.b8 100
.b8 106
.b8 116
.b8 97
.b8 105
.b8 119
.b8 120
.b8 111
.b8 101
.b8 109
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
