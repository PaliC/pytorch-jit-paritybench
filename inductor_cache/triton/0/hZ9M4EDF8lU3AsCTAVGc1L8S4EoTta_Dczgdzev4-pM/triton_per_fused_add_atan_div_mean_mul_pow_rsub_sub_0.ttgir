#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":19:0)
#loc1 = loc(unknown)
#loc97 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":105:26)
#loc150 = loc(callsite(#loc1 at #loc97))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_atan_div_mean_mul_pow_rsub_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<16> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<48> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2.500000e-01> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999997E-7> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0.405284733> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<6.400000e+01> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc2)
    %2 = arith.remsi %1, %cst : tensor<1x64xi32, #blocked> loc(#loc3)
    %3 = arith.divsi %1, %cst : tensor<1x64xi32, #blocked> loc(#loc4)
    %4 = arith.muli %3, %cst_0 : tensor<1x64xi32, #blocked> loc(#loc5)
    %5 = arith.addi %2, %4 : tensor<1x64xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc7)
    %8 = tt.load %7 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = arith.addi %2, %cst_1 : tensor<1x64xi32, #blocked> loc(#loc9)
    %10 = arith.addi %9, %4 : tensor<1x64xi32, #blocked> loc(#loc10)
    %11 = tt.addptr %6, %10 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc11)
    %12 = tt.load %11 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %5 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc13)
    %15 = tt.load %14 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.addptr %13, %10 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc15)
    %17 = tt.load %16 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc16)
    %18 = arith.addi %2, %cst : tensor<1x64xi32, #blocked> loc(#loc17)
    %19 = arith.addi %18, %4 : tensor<1x64xi32, #blocked> loc(#loc18)
    %20 = tt.addptr %6, %19 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc19)
    %21 = tt.load %20 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = arith.addi %2, %cst_2 : tensor<1x64xi32, #blocked> loc(#loc21)
    %23 = arith.addi %22, %4 : tensor<1x64xi32, #blocked> loc(#loc22)
    %24 = tt.addptr %6, %23 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc23)
    %25 = tt.load %24 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc24)
    %26 = tt.addptr %13, %19 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc25)
    %27 = tt.load %26 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc26)
    %28 = tt.addptr %13, %23 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc27)
    %29 = tt.load %28 : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc28)
    %30 = arith.addf %8, %12 : tensor<1x64xf32, #blocked> loc(#loc29)
    %31 = arith.addf %15, %17 : tensor<1x64xf32, #blocked> loc(#loc30)
    %32 = arith.subf %30, %31 : tensor<1x64xf32, #blocked> loc(#loc31)
    %33 = arith.mulf %32, %32 : tensor<1x64xf32, #blocked> loc(#loc32)
    %34 = arith.mulf %33, %cst_3 : tensor<1x64xf32, #blocked> loc(#loc33)
    %35 = arith.addf %21, %25 : tensor<1x64xf32, #blocked> loc(#loc34)
    %36 = arith.addf %27, %29 : tensor<1x64xf32, #blocked> loc(#loc35)
    %37 = arith.subf %35, %36 : tensor<1x64xf32, #blocked> loc(#loc36)
    %38 = arith.mulf %37, %37 : tensor<1x64xf32, #blocked> loc(#loc37)
    %39 = arith.mulf %38, %cst_3 : tensor<1x64xf32, #blocked> loc(#loc38)
    %40 = arith.addf %34, %39 : tensor<1x64xf32, #blocked> loc(#loc39)
    %41 = arith.cmpf ogt, %17, %12 : tensor<1x64xf32, #blocked> loc(#loc105)
    %42 = arith.cmpf une, %17, %17 : tensor<1x64xf32, #blocked> loc(#loc106)
    %43 = arith.ori %41, %42 : tensor<1x64xi1, #blocked> loc(#loc107)
    %44 = arith.select %43, %17, %12 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc108)
    %45 = arith.cmpf olt, %15, %8 : tensor<1x64xf32, #blocked> loc(#loc109)
    %46 = arith.cmpf une, %15, %15 : tensor<1x64xf32, #blocked> loc(#loc110)
    %47 = arith.ori %45, %46 : tensor<1x64xi1, #blocked> loc(#loc111)
    %48 = arith.select %47, %15, %8 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc112)
    %49 = arith.subf %44, %48 : tensor<1x64xf32, #blocked> loc(#loc50)
    %50 = arith.cmpf ogt, %49, %cst_7 : tensor<1x64xf32, #blocked> loc(#loc113)
    %51 = arith.cmpf une, %49, %49 : tensor<1x64xf32, #blocked> loc(#loc114)
    %52 = arith.ori %50, %51 : tensor<1x64xi1, #blocked> loc(#loc115)
    %53 = arith.select %52, %49, %cst_7 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc116)
    %54 = arith.mulf %53, %53 : tensor<1x64xf32, #blocked> loc(#loc52)
    %55 = arith.cmpf ogt, %29, %25 : tensor<1x64xf32, #blocked> loc(#loc117)
    %56 = arith.cmpf une, %29, %29 : tensor<1x64xf32, #blocked> loc(#loc118)
    %57 = arith.ori %55, %56 : tensor<1x64xi1, #blocked> loc(#loc119)
    %58 = arith.select %57, %29, %25 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc120)
    %59 = arith.cmpf olt, %27, %21 : tensor<1x64xf32, #blocked> loc(#loc121)
    %60 = arith.cmpf une, %27, %27 : tensor<1x64xf32, #blocked> loc(#loc122)
    %61 = arith.ori %59, %60 : tensor<1x64xi1, #blocked> loc(#loc123)
    %62 = arith.select %61, %27, %21 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc124)
    %63 = arith.subf %58, %62 : tensor<1x64xf32, #blocked> loc(#loc55)
    %64 = arith.cmpf ogt, %63, %cst_7 : tensor<1x64xf32, #blocked> loc(#loc125)
    %65 = arith.cmpf une, %63, %63 : tensor<1x64xf32, #blocked> loc(#loc126)
    %66 = arith.ori %64, %65 : tensor<1x64xi1, #blocked> loc(#loc127)
    %67 = arith.select %66, %63, %cst_7 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc128)
    %68 = arith.mulf %67, %67 : tensor<1x64xf32, #blocked> loc(#loc57)
    %69 = arith.addf %54, %68 : tensor<1x64xf32, #blocked> loc(#loc58)
    %70 = arith.addf %69, %cst_4 : tensor<1x64xf32, #blocked> loc(#loc59)
    %71 = arith.divf %40, %70 : tensor<1x64xf32, #blocked> loc(#loc60)
    %72 = arith.subf %12, %8 : tensor<1x64xf32, #blocked> loc(#loc61)
    %73 = arith.subf %25, %21 : tensor<1x64xf32, #blocked> loc(#loc62)
    %74 = arith.addf %73, %cst_4 : tensor<1x64xf32, #blocked> loc(#loc63)
    %75 = arith.divf %72, %74 : tensor<1x64xf32, #blocked> loc(#loc64)
    %76 = tt.extern_elementwise %75 {libname = "", libpath = "", pure = true, symbol = "__nv_atanf"} : (tensor<1x64xf32, #blocked>) -> tensor<1x64xf32, #blocked> loc(#loc65)
    %77 = arith.subf %17, %15 : tensor<1x64xf32, #blocked> loc(#loc66)
    %78 = arith.subf %29, %27 : tensor<1x64xf32, #blocked> loc(#loc67)
    %79 = arith.addf %78, %cst_4 : tensor<1x64xf32, #blocked> loc(#loc68)
    %80 = arith.divf %77, %79 : tensor<1x64xf32, #blocked> loc(#loc69)
    %81 = tt.extern_elementwise %80 {libname = "", libpath = "", pure = true, symbol = "__nv_atanf"} : (tensor<1x64xf32, #blocked>) -> tensor<1x64xf32, #blocked> loc(#loc70)
    %82 = arith.subf %76, %81 : tensor<1x64xf32, #blocked> loc(#loc71)
    %83 = arith.mulf %82, %82 : tensor<1x64xf32, #blocked> loc(#loc72)
    %84 = arith.mulf %83, %cst_5 : tensor<1x64xf32, #blocked> loc(#loc73)
    %85 = arith.cmpf olt, %17, %12 : tensor<1x64xf32, #blocked> loc(#loc129)
    %86 = arith.ori %85, %42 : tensor<1x64xi1, #blocked> loc(#loc130)
    %87 = arith.select %86, %17, %12 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc131)
    %88 = arith.cmpf ogt, %15, %8 : tensor<1x64xf32, #blocked> loc(#loc132)
    %89 = arith.ori %88, %46 : tensor<1x64xi1, #blocked> loc(#loc133)
    %90 = arith.select %89, %15, %8 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc134)
    %91 = arith.subf %87, %90 : tensor<1x64xf32, #blocked> loc(#loc76)
    %92 = arith.cmpf ogt, %91, %cst_7 : tensor<1x64xf32, #blocked> loc(#loc135)
    %93 = arith.cmpf une, %91, %91 : tensor<1x64xf32, #blocked> loc(#loc136)
    %94 = arith.ori %92, %93 : tensor<1x64xi1, #blocked> loc(#loc137)
    %95 = arith.select %94, %91, %cst_7 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc138)
    %96 = arith.cmpf olt, %29, %25 : tensor<1x64xf32, #blocked> loc(#loc139)
    %97 = arith.ori %96, %56 : tensor<1x64xi1, #blocked> loc(#loc140)
    %98 = arith.select %97, %29, %25 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc141)
    %99 = arith.cmpf ogt, %27, %21 : tensor<1x64xf32, #blocked> loc(#loc142)
    %100 = arith.ori %99, %60 : tensor<1x64xi1, #blocked> loc(#loc143)
    %101 = arith.select %100, %27, %21 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc144)
    %102 = arith.subf %98, %101 : tensor<1x64xf32, #blocked> loc(#loc80)
    %103 = arith.cmpf ogt, %102, %cst_7 : tensor<1x64xf32, #blocked> loc(#loc145)
    %104 = arith.cmpf une, %102, %102 : tensor<1x64xf32, #blocked> loc(#loc146)
    %105 = arith.ori %103, %104 : tensor<1x64xi1, #blocked> loc(#loc147)
    %106 = arith.select %105, %102, %cst_7 : tensor<1x64xi1, #blocked>, tensor<1x64xf32, #blocked> loc(#loc148)
    %107 = arith.mulf %95, %106 : tensor<1x64xf32, #blocked> loc(#loc82)
    %108 = arith.mulf %77, %78 : tensor<1x64xf32, #blocked> loc(#loc83)
    %109 = arith.mulf %72, %73 : tensor<1x64xf32, #blocked> loc(#loc84)
    %110 = arith.addf %108, %109 : tensor<1x64xf32, #blocked> loc(#loc85)
    %111 = arith.subf %110, %107 : tensor<1x64xf32, #blocked> loc(#loc86)
    %112 = arith.addf %111, %cst_4 : tensor<1x64xf32, #blocked> loc(#loc87)
    %113 = arith.divf %107, %112 : tensor<1x64xf32, #blocked> loc(#loc88)
    %114 = arith.mulf %84, %84 : tensor<1x64xf32, #blocked> loc(#loc89)
    %115 = arith.subf %cst_6, %113 : tensor<1x64xf32, #blocked> loc(#loc90)
    %116 = arith.addf %115, %84 : tensor<1x64xf32, #blocked> loc(#loc91)
    %117 = arith.divf %114, %116 : tensor<1x64xf32, #blocked> loc(#loc92)
    %118 = arith.addf %71, %117 : tensor<1x64xf32, #blocked> loc(#loc93)
    %119 = arith.subf %113, %118 : tensor<1x64xf32, #blocked> loc(#loc94)
    %120 = arith.subf %cst_6, %119 : tensor<1x64xf32, #blocked> loc(#loc95)
    %121 = "tt.reduce"(%120) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc97)), %arg5: f32 loc(callsite(#loc1 at #loc97))):
      %127 = arith.addf %arg4, %arg5 : f32 loc(#loc152)
      tt.reduce.return %127 : f32 loc(#loc149)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc149)
    %122 = triton_gpu.convert_layout %121 {fastmath = #arith.fastmath<none>} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc99)
    %123 = tt.expand_dims %122 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc100)
    %124 = arith.divf %123, %cst_8 : tensor<1x1xf32, #blocked1> loc(#loc99)
    gpu.barrier loc(#loc101)
    %125 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc102)
    %126 = tt.splat %125 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc103)
    tt.store %126, %124 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc103)
    tt.return loc(#loc104)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":26:34)
#loc3 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":29:19)
#loc4 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":30:19)
#loc5 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":32:38)
#loc6 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":32:35)
#loc7 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":32:30)
#loc8 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":32:43)
#loc9 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":33:35)
#loc10 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":33:40)
#loc11 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":33:30)
#loc12 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":33:48)
#loc13 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":34:30)
#loc14 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":34:43)
#loc15 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":35:30)
#loc16 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":35:48)
#loc17 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":36:36)
#loc18 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":36:41)
#loc19 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":36:31)
#loc20 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":36:49)
#loc21 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":37:36)
#loc22 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":37:41)
#loc23 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":37:31)
#loc24 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":37:49)
#loc25 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":38:31)
#loc26 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":38:49)
#loc27 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":39:31)
#loc28 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":39:49)
#loc29 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":40:18)
#loc30 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":41:18)
#loc31 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":42:18)
#loc32 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":43:18)
#loc33 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":45:18)
#loc34 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":46:20)
#loc35 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":47:20)
#loc36 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":48:20)
#loc37 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":49:20)
#loc38 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":50:20)
#loc39 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":51:19)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc41 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":52:41)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc46 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":53:41)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc50 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":54:20)
#loc51 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":56:42)
#loc52 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":57:20)
#loc53 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":58:42)
#loc54 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":59:42)
#loc55 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":60:20)
#loc56 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":61:42)
#loc57 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":62:20)
#loc58 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":63:20)
#loc59 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":65:20)
#loc60 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":66:20)
#loc61 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":67:19)
#loc62 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":68:20)
#loc63 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":69:20)
#loc64 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":70:20)
#loc65 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":71:27)
#loc66 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":72:19)
#loc67 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":73:20)
#loc68 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":74:20)
#loc69 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":75:20)
#loc70 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":76:27)
#loc71 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":77:20)
#loc72 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":78:20)
#loc73 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":80:20)
#loc74 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":81:41)
#loc75 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":82:41)
#loc76 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":83:20)
#loc77 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":84:42)
#loc78 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":85:42)
#loc79 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":86:42)
#loc80 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":87:20)
#loc81 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":88:42)
#loc82 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":89:20)
#loc83 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":90:20)
#loc84 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":91:20)
#loc85 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":92:20)
#loc86 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":93:20)
#loc87 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":94:20)
#loc88 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":95:20)
#loc89 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":96:20)
#loc90 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":98:20)
#loc91 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":99:20)
#loc92 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":100:20)
#loc93 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":101:20)
#loc94 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":102:20)
#loc95 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":103:20)
#loc96 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc98 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc99 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":107:20)
#loc100 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":105:29)
#loc101 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":109:4)
#loc102 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":110:28)
#loc103 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":110:71)
#loc104 = loc("inductor_cache/kx/ckx4neweb4a4g4qthiwbrwqbpvuxlytl7n3kjr3l74o3ixns37i4.py":110:4)
#loc105 = loc(callsite(#loc40 at #loc41))
#loc106 = loc(callsite(#loc42 at #loc41))
#loc107 = loc(callsite(#loc43 at #loc41))
#loc108 = loc(callsite(#loc44 at #loc41))
#loc109 = loc(callsite(#loc45 at #loc46))
#loc110 = loc(callsite(#loc47 at #loc46))
#loc111 = loc(callsite(#loc48 at #loc46))
#loc112 = loc(callsite(#loc49 at #loc46))
#loc113 = loc(callsite(#loc40 at #loc51))
#loc114 = loc(callsite(#loc42 at #loc51))
#loc115 = loc(callsite(#loc43 at #loc51))
#loc116 = loc(callsite(#loc44 at #loc51))
#loc117 = loc(callsite(#loc40 at #loc53))
#loc118 = loc(callsite(#loc42 at #loc53))
#loc119 = loc(callsite(#loc43 at #loc53))
#loc120 = loc(callsite(#loc44 at #loc53))
#loc121 = loc(callsite(#loc45 at #loc54))
#loc122 = loc(callsite(#loc47 at #loc54))
#loc123 = loc(callsite(#loc48 at #loc54))
#loc124 = loc(callsite(#loc49 at #loc54))
#loc125 = loc(callsite(#loc40 at #loc56))
#loc126 = loc(callsite(#loc42 at #loc56))
#loc127 = loc(callsite(#loc43 at #loc56))
#loc128 = loc(callsite(#loc44 at #loc56))
#loc129 = loc(callsite(#loc45 at #loc74))
#loc130 = loc(callsite(#loc48 at #loc74))
#loc131 = loc(callsite(#loc49 at #loc74))
#loc132 = loc(callsite(#loc40 at #loc75))
#loc133 = loc(callsite(#loc43 at #loc75))
#loc134 = loc(callsite(#loc44 at #loc75))
#loc135 = loc(callsite(#loc40 at #loc77))
#loc136 = loc(callsite(#loc42 at #loc77))
#loc137 = loc(callsite(#loc43 at #loc77))
#loc138 = loc(callsite(#loc44 at #loc77))
#loc139 = loc(callsite(#loc45 at #loc78))
#loc140 = loc(callsite(#loc48 at #loc78))
#loc141 = loc(callsite(#loc49 at #loc78))
#loc142 = loc(callsite(#loc40 at #loc79))
#loc143 = loc(callsite(#loc43 at #loc79))
#loc144 = loc(callsite(#loc44 at #loc79))
#loc145 = loc(callsite(#loc40 at #loc81))
#loc146 = loc(callsite(#loc42 at #loc81))
#loc147 = loc(callsite(#loc43 at #loc81))
#loc148 = loc(callsite(#loc44 at #loc81))
#loc149 = loc(callsite(#loc96 at #loc97))
#loc151 = loc(callsite(#loc98 at #loc96))
#loc152 = loc(callsite(#loc151 at #loc97))
