; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_elu_33(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = srem i32 %9, 128, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 true) #3, !dbg !16
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !16
  %16 = bitcast i32 %14 to float, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = sext i32 %10 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #3, !dbg !18
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = fadd float %16, %23, !dbg !19
  %26 = fadd float %17, %24, !dbg !19
  %27 = fmul float %25, 0x3FF7154760000000, !dbg !20
  %28 = tail call float @llvm.nvvm.round.f(float %27) #3, !dbg !20
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %.not.i = icmp eq i32 %29, 0, !dbg !20
  %30 = tail call float @llvm.nvvm.fabs.ftz.f(float %25) #3, !dbg !20
  %31 = tail call float @llvm.nvvm.fabs.f(float %25) #3, !dbg !20
  %.03.i = select i1 %.not.i, float %31, float %30, !dbg !20
  %32 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !20
  %t.0.i = select i1 %32, float 0.000000e+00, float %28, !dbg !20
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %35 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !20
  %j.0.i = select i1 %35, float 1.270000e+02, float %t.0.i, !dbg !20
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %.not8.i = icmp eq i32 %41, 0, !dbg !20
  br i1 %.not8.i, label %44, label %42, !dbg !20

42:                                               ; preds = %3
  %43 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !20
  br label %__nv_expm1f.exit, !dbg !20

44:                                               ; preds = %3
  %45 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !20
  br label %__nv_expm1f.exit, !dbg !20

__nv_expm1f.exit:                                 ; preds = %42, %44
  %.0.i = phi float [ %43, %42 ], [ %45, %44 ], !dbg !20
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %47 = fmul float %26, 0x3FF7154760000000, !dbg !20
  %48 = tail call float @llvm.nvvm.round.f(float %47) #3, !dbg !20
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %.not.i1 = icmp eq i32 %49, 0, !dbg !20
  %50 = tail call float @llvm.nvvm.fabs.ftz.f(float %26) #3, !dbg !20
  %51 = tail call float @llvm.nvvm.fabs.f(float %26) #3, !dbg !20
  %.03.i2 = select i1 %.not.i1, float %51, float %50, !dbg !20
  %52 = fcmp olt float %.03.i2, 0x3FDA3D70A0000000, !dbg !20
  %t.0.i3 = select i1 %52, float 0.000000e+00, float %48, !dbg !20
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %55 = fcmp oeq float %t.0.i3, 1.280000e+02, !dbg !20
  %j.0.i4 = select i1 %55, float 1.270000e+02, float %t.0.i3, !dbg !20
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %.not8.i5 = icmp eq i32 %61, 0, !dbg !20
  br i1 %.not8.i5, label %64, label %62, !dbg !20

62:                                               ; preds = %__nv_expm1f.exit
  %63 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i4) #3, !dbg !20
  br label %__nv_expm1f.exit27, !dbg !20

64:                                               ; preds = %__nv_expm1f.exit
  %65 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i4) #3, !dbg !20
  br label %__nv_expm1f.exit27, !dbg !20

__nv_expm1f.exit27:                               ; preds = %62, %64
  %.0.i6 = phi float [ %63, %62 ], [ %65, %64 ], !dbg !20
  %66 = fcmp oeq float %25, 0.000000e+00, !dbg !20
  %67 = fadd float %25, %25, !dbg !20
  %68 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !20
  %69 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !20
  %.not9.i = icmp eq i32 %46, 0, !dbg !20
  %.not7.i = icmp eq i32 %40, 0, !dbg !20
  %.not6.i = icmp eq i32 %39, 0, !dbg !20
  %.not5.i = icmp eq i32 %38, 0, !dbg !20
  %.not4.i = icmp eq i32 %37, 0, !dbg !20
  %.not3.i = icmp eq i32 %36, 0, !dbg !20
  %.not2.i = icmp eq i32 %34, 0, !dbg !20
  %70 = fneg float %t.0.i, !dbg !20
  %.not1.i = icmp eq i32 %33, 0, !dbg !20
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %70, float 0x3FE62E4000000000, float %25) #3, !dbg !20
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %70, float 0x3FE62E4000000000, float %25) #3, !dbg !20
  %.04.i = select i1 %.not1.i, float %71, float %72, !dbg !20
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %70, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !20
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %70, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !20
  %.05.i = select i1 %.not2.i, float %73, float %74, !dbg !20
  %75 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !20
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !20
  %.07.i = select i1 %.not3.i, float %75, float %76, !dbg !20
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !20
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !20
  %.08.i = select i1 %.not4.i, float %77, float %78, !dbg !20
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !20
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !20
  %.09.i = select i1 %.not5.i, float %79, float %80, !dbg !20
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !20
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !20
  %.06.i = select i1 %.not6.i, float %81, float %82, !dbg !20
  %83 = fmul float %.05.i, %.06.i, !dbg !20
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %.05.i, float %.05.i) #3, !dbg !20
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %.05.i, float %.05.i) #3, !dbg !20
  %.01.i = select i1 %.not7.i, float %84, float %85, !dbg !20
  %86 = fadd float %.0.i, -1.000000e+00, !dbg !20
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %86) #3, !dbg !20
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %86) #3, !dbg !20
  %.02.i = select i1 %.not9.i, float %87, float %88, !dbg !20
  %89 = fadd float %.02.i, %.02.i, !dbg !20
  %u.0.i = select i1 %35, float %89, float %.02.i, !dbg !20
  %u.1.i = select i1 %69, float 0x7FF0000000000000, float %u.0.i, !dbg !20
  %u.2.i = select i1 %68, float -1.000000e+00, float %u.1.i, !dbg !20
  %u.3.i = select i1 %66, float %67, float %u.2.i, !dbg !20
  %90 = fcmp ogt float %26, 0.000000e+00, !dbg !21
  %91 = fcmp ogt float %25, 0.000000e+00, !dbg !21
  %.not7.i7 = icmp eq i32 %60, 0, !dbg !20
  %.not6.i8 = icmp eq i32 %59, 0, !dbg !20
  %.not5.i9 = icmp eq i32 %58, 0, !dbg !20
  %.not4.i10 = icmp eq i32 %57, 0, !dbg !20
  %.not3.i11 = icmp eq i32 %56, 0, !dbg !20
  %.not2.i12 = icmp eq i32 %54, 0, !dbg !20
  %92 = fneg float %t.0.i3, !dbg !20
  %.not1.i13 = icmp eq i32 %53, 0, !dbg !20
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %92, float 0x3FE62E4000000000, float %26) #3, !dbg !20
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %92, float 0x3FE62E4000000000, float %26) #3, !dbg !20
  %.04.i14 = select i1 %.not1.i13, float %93, float %94, !dbg !20
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %92, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !20
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %92, float 0x3EB7F7D1C0000000, float %.04.i14) #3, !dbg !20
  %.05.i15 = select i1 %.not2.i12, float %95, float %96, !dbg !20
  %97 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !20
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i15, float 0x3F812ACC60000000) #3, !dbg !20
  %.07.i16 = select i1 %.not3.i11, float %97, float %98, !dbg !20
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !20
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i16, float %.05.i15, float 0x3FA5557C60000000) #3, !dbg !20
  %.08.i17 = select i1 %.not4.i10, float %99, float %100, !dbg !20
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !20
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i17, float %.05.i15, float 0x3FC5553EC0000000) #3, !dbg !20
  %.09.i18 = select i1 %.not5.i9, float %101, float %102, !dbg !20
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !20
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i18, float %.05.i15, float 0x3FDFFFFFC0000000) #3, !dbg !20
  %.06.i19 = select i1 %.not6.i8, float %103, float %104, !dbg !20
  %105 = fmul float %.05.i15, %.06.i19, !dbg !20
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %105, float %.05.i15, float %.05.i15) #3, !dbg !20
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %105, float %.05.i15, float %.05.i15) #3, !dbg !20
  %.01.i20 = select i1 %.not7.i7, float %106, float %107, !dbg !20
  %108 = fadd float %.0.i6, -1.000000e+00, !dbg !20
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !20
  %.not9.i21 = icmp eq i32 %109, 0, !dbg !20
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i20, float %.0.i6, float %108) #3, !dbg !20
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i20, float %.0.i6, float %108) #3, !dbg !20
  %.02.i22 = select i1 %.not9.i21, float %111, float %110, !dbg !20
  %112 = fadd float %.02.i22, %.02.i22, !dbg !20
  %u.0.i23 = select i1 %55, float %112, float %.02.i22, !dbg !20
  %113 = fcmp ogt float %j.0.i4, 1.280000e+02, !dbg !20
  %u.1.i24 = select i1 %113, float 0x7FF0000000000000, float %u.0.i23, !dbg !20
  %114 = fcmp olt float %j.0.i4, -2.500000e+01, !dbg !20
  %u.2.i25 = select i1 %114, float -1.000000e+00, float %u.1.i24, !dbg !20
  %115 = fcmp oeq float %26, 0.000000e+00, !dbg !20
  %116 = fadd float %26, %26, !dbg !20
  %u.3.i26 = select i1 %115, float %116, float %u.2.i25, !dbg !20
  %117 = select i1 %91, float %25, float %u.3.i, !dbg !22
  %118 = select i1 %90, float %26, float %u.3.i26, !dbg !22
  %119 = bitcast float %117 to i32, !dbg !23
  %120 = bitcast float %118 to i32, !dbg !23
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %119, i32 %120, ptr addrspace(1) %12, i1 true) #3, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cx2ocfzn44v7vi6j6jldex5dhu3vk73d3q3lgiu37qn6aa6qfy5u.py", directory: "inductor_cache/x2")
!4 = !{ptr @triton_poi_fused_convolution_elu_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_elu_33, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_elu_33", linkageName: "triton_poi_fused_convolution_elu_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 27, scope: !7)
!21 = !DILocation(line: 30, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 32, scope: !7)
!23 = !DILocation(line: 36, column: 39, scope: !7)
!24 = !DILocation(line: 36, column: 4, scope: !7)
