; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__log_softmax_4(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 3, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = lshr i32 %6, 3, !dbg !12
  %8 = and i32 %7, 7, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 25, !dbg !14
  %11 = shl i32 %6, 1, !dbg !15
  %12 = and i32 %11, 14, !dbg !15
  %13 = icmp samesign ult i32 %12, 10, !dbg !16
  %14 = mul i32 %9, 10, !dbg !17
  %15 = add i32 %14, %12, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = and i1 %13, %10, !dbg !20
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #3, !dbg !21
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !21
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !21
  %22 = bitcast i32 %20 to float, !dbg !21
  %23 = bitcast i32 %21 to float, !dbg !21
  %24 = select i1 %18, float %22, float 0xFFF0000000000000, !dbg !22
  %25 = select i1 %18, float %23, float 0xFFF0000000000000, !dbg !22
  %26 = fcmp ogt float %24, %25, !dbg !23
  %27 = fcmp uno float %24, 0.000000e+00, !dbg !28
  %28 = or i1 %26, %27, !dbg !29
  %29 = select i1 %28, float %24, float %25, !dbg !30
  %30 = bitcast float %29 to i32, !dbg !31
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 4, i32 31), !dbg !31
  %32 = bitcast i32 %31 to float, !dbg !31
  %33 = fcmp ogt float %29, %32, !dbg !23
  %34 = fcmp uno float %29, 0.000000e+00, !dbg !28
  %35 = or i1 %33, %34, !dbg !29
  %36 = select i1 %35, float %29, float %32, !dbg !30
  %37 = bitcast float %36 to i32, !dbg !31
  %38 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %37, i32 2, i32 31), !dbg !31
  %39 = bitcast i32 %38 to float, !dbg !31
  %40 = fcmp ogt float %36, %39, !dbg !23
  %41 = fcmp uno float %36, 0.000000e+00, !dbg !28
  %42 = or i1 %40, %41, !dbg !29
  %43 = select i1 %42, float %36, float %39, !dbg !30
  %44 = bitcast float %43 to i32, !dbg !31
  %45 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %44, i32 1, i32 31), !dbg !31
  %46 = bitcast i32 %45 to float, !dbg !31
  %47 = fcmp ogt float %43, %46, !dbg !23
  %48 = fcmp uno float %43, 0.000000e+00, !dbg !28
  %49 = or i1 %47, %48, !dbg !29
  %50 = select i1 %49, float %43, float %46, !dbg !30
  %51 = fsub float %22, %50, !dbg !32
  %52 = fsub float %23, %50, !dbg !32
  %53 = fmul float %51, 0x3FF7154760000000, !dbg !33
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #3, !dbg !33
  %55 = fmul float %52, 0x3FF7154760000000, !dbg !33
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #3, !dbg !33
  %57 = fadd float %54, %56, !dbg !34
  %58 = select i1 %18, float %57, float 0.000000e+00, !dbg !34
  %59 = bitcast float %58 to i32, !dbg !39
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 4, i32 31), !dbg !39
  %61 = bitcast i32 %60 to float, !dbg !39
  %62 = fadd float %58, %61, !dbg !34
  %63 = bitcast float %62 to i32, !dbg !39
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 2, i32 31), !dbg !39
  %65 = bitcast i32 %64 to float, !dbg !39
  %66 = fadd float %62, %65, !dbg !34
  %67 = bitcast float %66 to i32, !dbg !39
  %68 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %67, i32 1, i32 31), !dbg !39
  %69 = bitcast i32 %68 to float, !dbg !39
  %70 = fadd float %66, %69, !dbg !34
  %71 = fcmp olt float %70, 0x3810000000000000, !dbg !40
  %72 = fmul float %70, 0x4160000000000000, !dbg !40
  %.02.i = select i1 %71, float %72, float %70, !dbg !40
  %i.i.0.i = select i1 %71, float -2.300000e+01, float 0.000000e+00, !dbg !40
  %73 = bitcast float %.02.i to i32, !dbg !40
  %74 = add i32 %73, -1059760811, !dbg !40
  %75 = and i32 %74, -8388608, !dbg !40
  %76 = sub i32 %73, %75, !dbg !40
  %77 = bitcast i32 %76 to float, !dbg !40
  %78 = sitofp i32 %75 to float, !dbg !40
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %78, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !40
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %78, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !40
  %82 = fadd float %77, -1.000000e+00, !dbg !40
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %82, float 0x3FC2073EC0000000) #3, !dbg !40
  %85 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %82, float 0x3FC2073EC0000000) #3, !dbg !40
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %95 = icmp ugt i32 %73, 2139095039, !dbg !40
  br i1 %95, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !40

__nv_fmaf_rn.exit.i.i:                            ; preds = %3
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  br label %__nv_logf.exit, !dbg !40

__nv_logf.exit:                                   ; preds = %3, %__nv_fmaf_rn.exit.i.i
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i3 = icmp eq i32 %97, 0, !dbg !40
  %.08.i4 = select i1 %.not.i3, float %81, float %80, !dbg !40
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not1.i5 = icmp eq i32 %98, 0, !dbg !40
  %.010.i6 = select i1 %.not1.i5, float %85, float %84, !dbg !40
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not2.i7 = icmp eq i32 %99, 0, !dbg !40
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %82, float 0xBFBF19B980000000) #3, !dbg !40
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %82, float 0xBFBF19B980000000) #3, !dbg !40
  %.011.i8 = select i1 %.not2.i7, float %101, float %100, !dbg !40
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not3.i9 = icmp eq i32 %102, 0, !dbg !40
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %82, float 0x3FC1E52AA0000000) #3, !dbg !40
  %104 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %82, float 0x3FC1E52AA0000000) #3, !dbg !40
  %.012.i10 = select i1 %.not3.i9, float %104, float %103, !dbg !40
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not4.i11 = icmp eq i32 %105, 0, !dbg !40
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %82, float 0xBFC55B1720000000) #3, !dbg !40
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %82, float 0xBFC55B1720000000) #3, !dbg !40
  %.09.i12 = select i1 %.not4.i11, float %107, float %106, !dbg !40
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not5.i13 = icmp eq i32 %108, 0, !dbg !40
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %82, float 0x3FC99DA160000000) #3, !dbg !40
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %82, float 0x3FC99DA160000000) #3, !dbg !40
  %.05.i14 = select i1 %.not5.i13, float %110, float %109, !dbg !40
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not6.i15 = icmp eq i32 %111, 0, !dbg !40
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %82, float 0xBFCFFFE440000000) #3, !dbg !40
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %82, float 0xBFCFFFE440000000) #3, !dbg !40
  %.01.i16 = select i1 %.not6.i15, float %113, float %112, !dbg !40
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not7.i17 = icmp eq i32 %114, 0, !dbg !40
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %82, float 0x3FD5554F00000000) #3, !dbg !40
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %82, float 0x3FD5554F00000000) #3, !dbg !40
  %.0.i18 = select i1 %.not7.i17, float %116, float %115, !dbg !40
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not8.i19 = icmp eq i32 %117, 0, !dbg !40
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %82, float -5.000000e-01) #3, !dbg !40
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %82, float -5.000000e-01) #3, !dbg !40
  %.07.i20 = select i1 %.not8.i19, float %119, float %118, !dbg !40
  %120 = fmul float %82, %.07.i20, !dbg !40
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not9.i21 = icmp eq i32 %121, 0, !dbg !40
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %120, float %82, float %82) #3, !dbg !40
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %120, float %82, float %82) #3, !dbg !40
  %.06.i22 = select i1 %.not9.i21, float %123, float %122, !dbg !40
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not10.i23 = icmp eq i32 %124, 0, !dbg !40
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #3, !dbg !40
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #3, !dbg !40
  %.04.i24 = select i1 %.not10.i23, float %126, float %125, !dbg !40
  br i1 %95, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !40

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not11.i28 = icmp eq i32 %127, 0, !dbg !40
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !40
  %.03.i29 = select i1 %.not11.i28, float %129, float %128, !dbg !40
  br label %__nv_logf.exit30, !dbg !40

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !40
  %130 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !40
  %r.i.1.i26 = select i1 %130, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !40
  %131 = fsub float %51, %r.i.1.i26, !dbg !41
  %132 = fsub float %52, %r.i.1.i26, !dbg !41
  %133 = bitcast float %131 to i32, !dbg !42
  %134 = bitcast float %132 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %133, i32 %134, ptr addrspace(1) %17, i1 %18) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py", directory: "inductor_cache/ac")
!4 = !{ptr @triton_per_fused__log_softmax_4, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__log_softmax_4, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__log_softmax_4", linkageName: "triton_per_fused__log_softmax_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 42, scope: !7)
!18 = !DILocation(line: 31, column: 39, scope: !7)
!19 = !DILocation(line: 31, column: 34, scope: !7)
!20 = !DILocation(line: 31, column: 55, scope: !7)
!21 = !DILocation(line: 31, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !27)
!24 = distinct !DILexicalBlockFile(scope: !26, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!27 = !DILocation(line: 34, column: 37, scope: !7)
!28 = !DILocation(line: 120, column: 21, scope: !24, inlinedAt: !27)
!29 = !DILocation(line: 120, column: 16, scope: !24, inlinedAt: !27)
!30 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !27)
!31 = !DILocation(line: 131, column: 29, scope: !26, inlinedAt: !27)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 23, scope: !7)
!34 = !DILocation(line: 256, column: 15, scope: !35, inlinedAt: !38)
!35 = distinct !DILexicalBlockFile(scope: !37, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!38 = !DILocation(line: 39, column: 25, scope: !7)
!39 = !DILocation(line: 267, column: 36, scope: !37, inlinedAt: !38)
!40 = !DILocation(line: 40, column: 24, scope: !7)
!41 = !DILocation(line: 41, column: 19, scope: !7)
!42 = !DILocation(line: 42, column: 48, scope: !7)
!43 = !DILocation(line: 42, column: 4, scope: !7)
