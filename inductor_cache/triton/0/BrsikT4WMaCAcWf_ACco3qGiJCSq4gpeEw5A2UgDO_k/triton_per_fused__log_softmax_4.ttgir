#blocked = #triton_gpu.blocked<{sizePerThread = [1, 2], threadsPerWarp = [4, 8], warpsPerCTA = [2, 1], order = [1, 0]}>
#loc = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":34:37)
#loc26 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":39:25)
#loc34 = loc(callsite(#loc1 at #loc16))
#loc40 = loc(callsite(#loc1 at #loc26))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__log_softmax_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":19:0), %arg1: i32 loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":19:0), %arg2: i32 loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8x16xf32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<25> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<10> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<10> : tensor<8x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<8x1xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc6)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc7)
    %9 = arith.cmpi slt, %8, %cst_2 : tensor<1x16xi32, #blocked> loc(#loc8)
    %10 = arith.muli %5, %cst_3 : tensor<8x1xi32, #blocked> loc(#loc9)
    %11 = tt.broadcast %8 : tensor<1x16xi32, #blocked> -> tensor<8x16xi32, #blocked> loc(#loc10)
    %12 = tt.broadcast %10 : tensor<8x1xi32, #blocked> -> tensor<8x16xi32, #blocked> loc(#loc10)
    %13 = arith.addi %11, %12 : tensor<8x16xi32, #blocked> loc(#loc10)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %15 = tt.addptr %14, %13 : tensor<8x16x!tt.ptr<f32>, #blocked>, tensor<8x16xi32, #blocked> loc(#loc11)
    %16 = tt.broadcast %9 : tensor<1x16xi1, #blocked> -> tensor<8x16xi1, #blocked> loc(#loc12)
    %17 = tt.broadcast %6 : tensor<8x1xi1, #blocked> -> tensor<8x16xi1, #blocked> loc(#loc12)
    %18 = arith.andi %16, %17 : tensor<8x16xi1, #blocked> loc(#loc12)
    %19 = tt.load %15, %18, %cst : tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %20 = arith.select %18, %19, %cst_0 : tensor<8x16xi1, #blocked>, tensor<8x16xf32, #blocked> loc(#loc14)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc16)), %arg4: f32 loc(callsite(#loc1 at #loc16))):
      %32 = arith.cmpf ogt, %arg3, %arg4 : f32 loc(#loc42)
      %33 = arith.cmpf une, %arg3, %arg3 : f32 loc(#loc43)
      %34 = arith.ori %32, %33 : i1 loc(#loc44)
      %35 = arith.select %34, %arg3, %arg4 : f32 loc(#loc45)
      tt.reduce.return %35 : f32 loc(#loc33)
    }) : (tensor<8x16xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc33)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc21)
    %23 = tt.broadcast %22 : tensor<8x1xf32, #blocked> -> tensor<8x16xf32, #blocked> loc(#loc22)
    %24 = arith.subf %19, %23 : tensor<8x16xf32, #blocked> loc(#loc22)
    %25 = math.exp %24 : tensor<8x16xf32, #blocked> loc(#loc23)
    %26 = arith.select %18, %25, %cst : tensor<8x16xi1, #blocked>, tensor<8x16xf32, #blocked> loc(#loc24)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc26)), %arg4: f32 loc(callsite(#loc1 at #loc26))):
      %32 = arith.addf %arg3, %arg4 : f32 loc(#loc46)
      tt.reduce.return %32 : f32 loc(#loc39)
    }) : (tensor<8x16xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc39)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc28)
    %29 = math.log %28 : tensor<8x1xf32, #blocked> loc(#loc29)
    %30 = tt.broadcast %29 : tensor<8x1xf32, #blocked> -> tensor<8x16xf32, #blocked> loc(#loc30)
    %31 = arith.subf %24, %30 : tensor<8x16xf32, #blocked> loc(#loc30)
    tt.store %15, %31, %18 : tensor<8x16x!tt.ptr<f32>, #blocked> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":23:28)
#loc3 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":23:33)
#loc4 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":24:44)
#loc5 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":24:23)
#loc6 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":25:21)
#loc7 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":26:34)
#loc8 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":28:21)
#loc9 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":31:42)
#loc10 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":31:39)
#loc11 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":31:34)
#loc12 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":31:55)
#loc13 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":31:47)
#loc14 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":33:41)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":34:40)
#loc22 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":35:18)
#loc23 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":36:23)
#loc24 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":38:41)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":39:28)
#loc29 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":40:24)
#loc30 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":41:19)
#loc31 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":42:48)
#loc32 = loc("inductor_cache/ac/cacchtit2knuchjpydaxsykd6gr2omerggzae3zxvuuob55sz7eq.py":42:4)
#loc33 = loc(callsite(#loc15 at #loc16))
#loc35 = loc(callsite(#loc17 at #loc15))
#loc36 = loc(callsite(#loc18 at #loc15))
#loc37 = loc(callsite(#loc19 at #loc15))
#loc38 = loc(callsite(#loc20 at #loc15))
#loc39 = loc(callsite(#loc25 at #loc26))
#loc41 = loc(callsite(#loc27 at #loc25))
#loc42 = loc(callsite(#loc35 at #loc16))
#loc43 = loc(callsite(#loc36 at #loc16))
#loc44 = loc(callsite(#loc37 at #loc16))
#loc45 = loc(callsite(#loc38 at #loc16))
#loc46 = loc(callsite(#loc41 at #loc26))
