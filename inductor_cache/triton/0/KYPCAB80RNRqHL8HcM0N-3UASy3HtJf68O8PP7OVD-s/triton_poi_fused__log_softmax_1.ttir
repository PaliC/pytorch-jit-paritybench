#loc = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":19:0)
module {
  tt.func public @triton_poi_fused__log_softmax_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":19:0), %arg3: i32 loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<24576> : tensor<1x512xi32> loc(#loc1)
    %cst_0 = arith.constant dense<6> : tensor<1x512xi32> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1x512xi32> loc(#loc1)
    %cst_2 = arith.constant dense<8192> : tensor<1x512xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4096> : tensor<2x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<12288> : tensor<1x512xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<1x512xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<1x512xi32> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<2x1xi32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<512xi32> -> tensor<1x512xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x512xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x512xi32> loc(#loc6)
    %6 = tt.get_program_id x : i32 loc(#loc7)
    %7 = arith.muli %6, %c2_i32 : i32 loc(#loc8)
    %8 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32> loc(#loc9)
    %9 = tt.expand_dims %8 {axis = 1 : i32} : tensor<2xi32> -> tensor<2x1xi32> loc(#loc10)
    %10 = tt.splat %7 : i32 -> tensor<2x1xi32> loc(#loc11)
    %11 = arith.addi %10, %9 : tensor<2x1xi32> loc(#loc11)
    %12 = arith.cmpi slt, %11, %cst_7 : tensor<2x1xi32> loc(#loc12)
    %13 = arith.remsi %5, %cst_6 : tensor<1x512xi32> loc(#loc13)
    %14 = arith.divsi %5, %cst_6 : tensor<1x512xi32> loc(#loc14)
    %15 = arith.remsi %14, %cst_5 : tensor<1x512xi32> loc(#loc15)
    %16 = arith.divsi %5, %cst_4 : tensor<1x512xi32> loc(#loc16)
    %17 = arith.muli %11, %cst_3 : tensor<2x1xi32> loc(#loc17)
    %18 = tt.broadcast %13 : tensor<1x512xi32> -> tensor<2x512xi32> loc(#loc18)
    %19 = tt.broadcast %17 : tensor<2x1xi32> -> tensor<2x512xi32> loc(#loc18)
    %20 = arith.addi %18, %19 : tensor<2x512xi32> loc(#loc18)
    %21 = arith.muli %14, %cst_2 : tensor<1x512xi32> loc(#loc19)
    %22 = tt.broadcast %21 : tensor<1x512xi32> -> tensor<2x512xi32> loc(#loc20)
    %23 = arith.addi %20, %22 : tensor<2x512xi32> loc(#loc20)
    %24 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<2x512x!tt.ptr<f32>> loc(#loc21)
    %25 = tt.addptr %24, %23 : tensor<2x512x!tt.ptr<f32>>, tensor<2x512xi32> loc(#loc21)
    %26 = tt.broadcast %12 : tensor<2x1xi1> -> tensor<2x512xi1> loc(#loc22)
    %27 = tt.load %25, %26 evictionPolicy = evict_last : tensor<2x512x!tt.ptr<f32>> loc(#loc22)
    %28 = arith.addi %13, %21 : tensor<1x512xi32> loc(#loc23)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x512x!tt.ptr<f32>> loc(#loc24)
    %30 = tt.addptr %29, %28 : tensor<1x512x!tt.ptr<f32>>, tensor<1x512xi32> loc(#loc24)
    %31 = tt.load %30 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>> loc(#loc25)
    %32 = arith.addi %13, %cst_6 : tensor<1x512xi32> loc(#loc26)
    %33 = arith.addi %32, %21 : tensor<1x512xi32> loc(#loc27)
    %34 = tt.addptr %29, %33 : tensor<1x512x!tt.ptr<f32>>, tensor<1x512xi32> loc(#loc28)
    %35 = tt.load %34 evictionPolicy = evict_last : tensor<1x512x!tt.ptr<f32>> loc(#loc29)
    %36 = math.exp %31 : tensor<1x512xf32> loc(#loc30)
    %37 = math.exp %35 : tensor<1x512xf32> loc(#loc31)
    %38 = arith.addf %36, %37 : tensor<1x512xf32> loc(#loc32)
    %39 = math.log %38 : tensor<1x512xf32> loc(#loc33)
    %40 = tt.broadcast %39 : tensor<1x512xf32> -> tensor<2x512xf32> loc(#loc34)
    %41 = arith.subf %27, %40 : tensor<2x512xf32> loc(#loc34)
    %42 = arith.muli %15, %cst_1 : tensor<1x512xi32> loc(#loc35)
    %43 = tt.broadcast %11 : tensor<2x1xi32> -> tensor<2x512xi32> loc(#loc36)
    %44 = tt.broadcast %42 : tensor<1x512xi32> -> tensor<2x512xi32> loc(#loc36)
    %45 = arith.addi %43, %44 : tensor<2x512xi32> loc(#loc36)
    %46 = arith.muli %13, %cst_0 : tensor<1x512xi32> loc(#loc37)
    %47 = tt.broadcast %46 : tensor<1x512xi32> -> tensor<2x512xi32> loc(#loc38)
    %48 = arith.addi %45, %47 : tensor<2x512xi32> loc(#loc38)
    %49 = arith.muli %16, %cst : tensor<1x512xi32> loc(#loc39)
    %50 = tt.broadcast %49 : tensor<1x512xi32> -> tensor<2x512xi32> loc(#loc40)
    %51 = arith.addi %48, %50 : tensor<2x512xi32> loc(#loc40)
    %52 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2x512x!tt.ptr<f32>> loc(#loc41)
    %53 = tt.addptr %52, %51 : tensor<2x512x!tt.ptr<f32>>, tensor<2x512xi32> loc(#loc41)
    tt.store %53, %41, %26 : tensor<2x512x!tt.ptr<f32>> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":22:28)
#loc3 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":22:33)
#loc4 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":23:36)
#loc5 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":23:44)
#loc6 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":23:23)
#loc7 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":25:28)
#loc8 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":25:33)
#loc9 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":26:36)
#loc10 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":26:44)
#loc11 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":26:23)
#loc12 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":27:21)
#loc13 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":29:19)
#loc14 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":30:19)
#loc15 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":31:29)
#loc16 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":32:19)
#loc17 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":33:40)
#loc18 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":33:35)
#loc19 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":33:50)
#loc20 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":33:45)
#loc21 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":33:30)
#loc22 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":33:55)
#loc23 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":34:35)
#loc24 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":34:30)
#loc25 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":34:45)
#loc26 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":35:37)
#loc27 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":35:42)
#loc28 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":35:30)
#loc29 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":35:52)
#loc30 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":36:23)
#loc31 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":37:23)
#loc32 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":38:18)
#loc33 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":39:23)
#loc34 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":40:18)
#loc35 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:32)
#loc36 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:30)
#loc37 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:39)
#loc38 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:37)
#loc39 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:50)
#loc40 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:44)
#loc41 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:25)
#loc42 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:61)
#loc43 = loc("inductor_cache/7x/c7x27ybmq7pplqqvavrkfsioku6ee74xppsefhktmdodhezxmxxb.py":41:4)
