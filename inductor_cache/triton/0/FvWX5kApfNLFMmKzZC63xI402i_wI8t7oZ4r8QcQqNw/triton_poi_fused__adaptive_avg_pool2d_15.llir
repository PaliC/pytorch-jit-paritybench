; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__adaptive_avg_pool2d_15(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 256, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %10, 4, !dbg !16
  %.frozen1 = freeze i32 %9, !dbg !17
  %15 = sdiv i32 %.frozen1, 64, !dbg !17
  %16 = mul i32 %15, 64, !dbg !18
  %.decomposed2 = sub i32 %.frozen1, %16, !dbg !18
  %17 = shl nsw i32 %.decomposed, 1, !dbg !19
  %18 = shl nsw i32 %14, 1, !dbg !19
  %19 = shl i32 %12, 4, !dbg !20
  %20 = add i32 %17, %19, !dbg !21
  %21 = add i32 %19, %18, !dbg !21
  %22 = sext i32 %20 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = sext i32 %21 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !22
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %11) #1, !dbg !23
  %27 = bitcast i32 %26 to float, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %11) #1, !dbg !23
  %29 = bitcast i32 %28 to float, !dbg !23
  %30 = or disjoint i32 %20, 1, !dbg !24
  %31 = or disjoint i32 %21, 1, !dbg !24
  %32 = sext i32 %30 to i64, !dbg !25
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !25
  %34 = sext i32 %31 to i64, !dbg !25
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !25
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %11) #1, !dbg !26
  %37 = bitcast i32 %36 to float, !dbg !26
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %11) #1, !dbg !26
  %39 = bitcast i32 %38 to float, !dbg !26
  %40 = add i32 %20, 8, !dbg !27
  %41 = add i32 %21, 8, !dbg !27
  %42 = sext i32 %40 to i64, !dbg !28
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !28
  %44 = sext i32 %41 to i64, !dbg !28
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !28
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %11) #1, !dbg !29
  %47 = bitcast i32 %46 to float, !dbg !29
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %11) #1, !dbg !29
  %49 = bitcast i32 %48 to float, !dbg !29
  %50 = add i32 %20, 9, !dbg !30
  %51 = add i32 %21, 9, !dbg !30
  %52 = sext i32 %50 to i64, !dbg !31
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !31
  %54 = sext i32 %51 to i64, !dbg !31
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !31
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %11) #1, !dbg !32
  %57 = bitcast i32 %56 to float, !dbg !32
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %11) #1, !dbg !32
  %59 = bitcast i32 %58 to float, !dbg !32
  %60 = fadd float %27, %37, !dbg !33
  %61 = fadd float %29, %39, !dbg !33
  %62 = fadd float %60, %47, !dbg !34
  %63 = fadd float %61, %49, !dbg !34
  %64 = fadd float %62, %57, !dbg !35
  %65 = fadd float %63, %59, !dbg !35
  %66 = fmul float %64, 2.500000e-01, !dbg !36
  %67 = fmul float %65, 2.500000e-01, !dbg !36
  %68 = mul i32 %15, 320, !dbg !37
  %69 = add i32 %68, %.decomposed2, !dbg !38
  %70 = sext i32 %69 to i64, !dbg !39
  %71 = getelementptr float, ptr addrspace(1) %1, i64 %70, !dbg !39
  %72 = bitcast float %66 to i32, !dbg !40
  %73 = bitcast float %67 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %72, i32 %73, ptr addrspace(1) %71, i1 %11) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czpxq3heqsnumwwhtham2hycz2pqtpn77mxxwi2a4du7wtrb7dqq.py", directory: "inductor_cache/zp")
!4 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_15, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__adaptive_avg_pool2d_15, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__adaptive_avg_pool2d_15", linkageName: "triton_poi_fused__adaptive_avg_pool2d_15", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 32, scope: !7)
!20 = !DILocation(line: 28, column: 40, scope: !7)
!21 = !DILocation(line: 28, column: 37, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 45, scope: !7)
!24 = !DILocation(line: 29, column: 41, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 49, scope: !7)
!27 = !DILocation(line: 30, column: 41, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 49, scope: !7)
!30 = !DILocation(line: 31, column: 41, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 49, scope: !7)
!33 = !DILocation(line: 32, column: 18, scope: !7)
!34 = !DILocation(line: 33, column: 18, scope: !7)
!35 = !DILocation(line: 34, column: 18, scope: !7)
!36 = !DILocation(line: 36, column: 18, scope: !7)
!37 = !DILocation(line: 37, column: 34, scope: !7)
!38 = !DILocation(line: 37, column: 30, scope: !7)
!39 = !DILocation(line: 37, column: 25, scope: !7)
!40 = !DILocation(line: 37, column: 45, scope: !7)
!41 = !DILocation(line: 37, column: 4, scope: !7)
