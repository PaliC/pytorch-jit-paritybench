; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %7 = icmp slt i32 %6, 576, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %10 = icmp samesign ult i32 %9, 9, !dbg !13
  %11 = srem i32 %6, 9, !dbg !14
  %.frozen = freeze i32 %6, !dbg !15
  %12 = sdiv i32 %.frozen, 144, !dbg !15
  %13 = mul i32 %12, 144, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = mul i32 %6, 9, !dbg !17
  %15 = add i32 %14, %9, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = and i1 %10, %7, !dbg !20
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %18, i32 0, i1 %18) #2, !dbg !21
  %20 = bitcast i32 %19 to float, !dbg !21
  %21 = mul nsw i32 %11, 9, !dbg !22
  %22 = add nsw i32 %21, %9, !dbg !23
  %23 = sext i32 %22 to i64, !dbg !24
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !24
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %18, i32 0, i1 %18) #2, !dbg !25
  %26 = bitcast i32 %25 to float, !dbg !25
  %27 = fadd float %20, %26, !dbg !26
  %28 = select i1 %18, float %27, float 0xFFF0000000000000, !dbg !27
  %29 = bitcast float %28 to i32, !dbg !28
  %30 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %29, i32 8, i32 31), !dbg !28
  %31 = bitcast i32 %30 to float, !dbg !28
  %32 = fcmp ogt float %28, %31, !dbg !32
  %33 = fcmp uno float %28, 0.000000e+00, !dbg !34
  %34 = or i1 %32, %33, !dbg !35
  %35 = select i1 %34, float %28, float %31, !dbg !36
  %36 = bitcast float %35 to i32, !dbg !28
  %37 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %36, i32 4, i32 31), !dbg !28
  %38 = bitcast i32 %37 to float, !dbg !28
  %39 = fcmp ogt float %35, %38, !dbg !32
  %40 = fcmp uno float %35, 0.000000e+00, !dbg !34
  %41 = or i1 %39, %40, !dbg !35
  %42 = select i1 %41, float %35, float %38, !dbg !36
  %43 = bitcast float %42 to i32, !dbg !28
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 2, i32 31), !dbg !28
  %45 = bitcast i32 %44 to float, !dbg !28
  %46 = fcmp ogt float %42, %45, !dbg !32
  %47 = fcmp uno float %42, 0.000000e+00, !dbg !34
  %48 = or i1 %46, %47, !dbg !35
  %49 = select i1 %48, float %42, float %45, !dbg !36
  %50 = bitcast float %49 to i32, !dbg !28
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 1, i32 31), !dbg !28
  %52 = bitcast i32 %51 to float, !dbg !28
  %53 = fcmp ogt float %49, %52, !dbg !32
  %54 = fcmp uno float %49, 0.000000e+00, !dbg !34
  %55 = or i1 %53, %54, !dbg !35
  %56 = select i1 %55, float %49, float %52, !dbg !36
  %57 = fsub float %27, %56, !dbg !37
  %58 = fmul float %57, 5.000000e-01, !dbg !38
  %59 = fmul float %58, 0x3FF7154760000000, !dbg !39
  %60 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %59) #2, !dbg !39
  %61 = select i1 %18, float %60, float 0.000000e+00, !dbg !40
  %62 = bitcast float %61 to i32, !dbg !41
  %63 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %62, i32 8, i32 31), !dbg !41
  %64 = bitcast i32 %63 to float, !dbg !41
  %65 = fadd float %61, %64, !dbg !45
  %66 = bitcast float %65 to i32, !dbg !41
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 4, i32 31), !dbg !41
  %68 = bitcast i32 %67 to float, !dbg !41
  %69 = fadd float %65, %68, !dbg !45
  %70 = bitcast float %69 to i32, !dbg !41
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 2, i32 31), !dbg !41
  %72 = bitcast i32 %71 to float, !dbg !41
  %73 = fadd float %69, %72, !dbg !45
  %74 = bitcast float %73 to i32, !dbg !41
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 1, i32 31), !dbg !41
  %76 = bitcast i32 %75 to float, !dbg !41
  %77 = fadd float %73, %76, !dbg !45
  %78 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %60, float %77) #2, !dbg !47
  %79 = mul nsw i32 %.decomposed, 9, !dbg !48
  %80 = add nsw i32 %79, %9, !dbg !49
  %81 = mul i32 %12, 1312, !dbg !50
  %82 = add i32 %80, %81, !dbg !51
  %83 = sext i32 %82 to i64, !dbg !52
  %84 = getelementptr float, ptr addrspace(1) %2, i64 %83, !dbg !52
  %85 = and i32 %8, 48, !dbg !53
  %86 = icmp eq i32 %85, 0, !dbg !53
  %87 = bitcast float %78 to i32, !dbg !53
  %88 = and i1 %86, %18, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %87, ptr addrspace(1) %84, i1 %88) #2, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cm24beoylaw6rnmk6nwat23o2tqr6wa5mmujgmz5kbjozqh72vfa.py", directory: "inductor_cache/m2")
!4 = !{ptr @triton_per_fused__softmax_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_2", linkageName: "triton_per_fused__softmax_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 28, column: 21, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 32, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 19, scope: !7)
!17 = !DILocation(line: 34, column: 37, scope: !7)
!18 = !DILocation(line: 34, column: 35, scope: !7)
!19 = !DILocation(line: 34, column: 30, scope: !7)
!20 = !DILocation(line: 34, column: 50, scope: !7)
!21 = !DILocation(line: 34, column: 42, scope: !7)
!22 = !DILocation(line: 35, column: 37, scope: !7)
!23 = !DILocation(line: 35, column: 35, scope: !7)
!24 = !DILocation(line: 35, column: 30, scope: !7)
!25 = !DILocation(line: 35, column: 42, scope: !7)
!26 = !DILocation(line: 36, column: 18, scope: !7)
!27 = !DILocation(line: 40, column: 41, scope: !7)
!28 = !DILocation(line: 131, column: 29, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 41, column: 37, scope: !7)
!32 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !31)
!33 = distinct !DILexicalBlockFile(scope: !29, file: !30, discriminator: 0)
!34 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !31)
!35 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !31)
!36 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !31)
!37 = !DILocation(line: 42, column: 18, scope: !7)
!38 = !DILocation(line: 44, column: 19, scope: !7)
!39 = !DILocation(line: 45, column: 24, scope: !7)
!40 = !DILocation(line: 47, column: 43, scope: !7)
!41 = !DILocation(line: 267, column: 36, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !7, file: !43, discriminator: 0)
!43 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!44 = !DILocation(line: 48, column: 26, scope: !7)
!45 = !DILocation(line: 256, column: 15, scope: !46, inlinedAt: !44)
!46 = distinct !DILexicalBlockFile(scope: !42, file: !43, discriminator: 0)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 50, column: 32, scope: !7)
!49 = !DILocation(line: 50, column: 30, scope: !7)
!50 = !DILocation(line: 50, column: 42, scope: !7)
!51 = !DILocation(line: 50, column: 37, scope: !7)
!52 = !DILocation(line: 50, column: 25, scope: !7)
!53 = !DILocation(line: 50, column: 54, scope: !7)
!54 = !DILocation(line: 50, column: 4, scope: !7)
