#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#loc = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":42:39)
#loc28 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":49:26)
#loc35 = loc(callsite(#loc1 at #loc16))
#loc41 = loc(callsite(#loc1 at #loc28))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__softmax_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant -1.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<1x16xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = arith.muli %0, %c16_i32 : i32 loc(#loc5)
    %5 = tt.splat %4 : i32 -> tensor<1x16xi32, #blocked> loc(#loc6)
    %6 = arith.addi %3, %5 : tensor<1x16xi32, #blocked> loc(#loc6)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.addptr %7, %6 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc7)
    %9 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked> loc(#loc8)
    %10 = tt.load %8, %9, %cst : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %11 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc9)
    %12 = tt.load %11 : !tt.ptr<f32> loc(#loc10)
    %13 = arith.cmpf oge, %12, %cst_2 : f32 loc(#loc11)
    %14 = arith.select %13, %cst_1, %cst_0 : f32 loc(#loc12)
    %15 = tt.splat %14 : f32 -> tensor<1x16xf32, #blocked> loc(#loc12)
    %16 = arith.mulf %10, %15 : tensor<1x16xf32, #blocked> loc(#loc13)
    %17 = arith.select %9, %16, %cst_3 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc16)), %arg5: f32 loc(callsite(#loc1 at #loc16))):
      %31 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc43)
      %32 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc44)
      %33 = arith.ori %31, %32 : i1 loc(#loc45)
      %34 = arith.select %33, %arg4, %arg5 : f32 loc(#loc46)
      tt.reduce.return %34 : f32 loc(#loc34)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc34)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc21)
    %20 = tt.broadcast %19 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc22)
    %21 = arith.subf %16, %20 : tensor<1x16xf32, #blocked> loc(#loc22)
    %22 = arith.mulf %14, %12 : f32 loc(#loc23)
    %23 = tt.splat %22 : f32 -> tensor<1x16xf32, #blocked> loc(#loc23)
    %24 = arith.divf %21, %23 : tensor<1x16xf32, #blocked> loc(#loc24)
    %25 = math.exp %24 : tensor<1x16xf32, #blocked> loc(#loc25)
    %26 = arith.select %9, %25, %cst : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc26)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc28)), %arg5: f32 loc(callsite(#loc1 at #loc28))):
      %31 = arith.addf %arg4, %arg5 : f32 loc(#loc47)
      tt.reduce.return %31 : f32 loc(#loc40)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc40)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc30)
    %29 = tt.broadcast %28 : tensor<1x1xf32, #blocked> -> tensor<1x16xf32, #blocked> loc(#loc31)
    %30 = arith.divf %25, %29 : tensor<1x16xf32, #blocked> loc(#loc31)
    tt.store %8, %30, %9 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":23:28)
#loc3 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":25:21)
#loc4 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":26:34)
#loc5 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":31:42)
#loc6 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":31:39)
#loc7 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":31:34)
#loc8 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":31:47)
#loc9 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":32:30)
#loc10 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":32:19)
#loc11 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":35:19)
#loc12 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":38:32)
#loc13 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":39:18)
#loc14 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":41:34)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":42:42)
#loc22 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":43:19)
#loc23 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":44:19)
#loc24 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":45:20)
#loc25 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":46:24)
#loc26 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":48:35)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc30 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":49:29)
#loc31 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":50:20)
#loc32 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":51:48)
#loc33 = loc("inductor_cache/36/c36th37g4qtvxricdofulydbooxq3b5mj6ifc7gpqiayjp34xk2v.py":51:4)
#loc34 = loc(callsite(#loc15 at #loc16))
#loc36 = loc(callsite(#loc17 at #loc15))
#loc37 = loc(callsite(#loc18 at #loc15))
#loc38 = loc(callsite(#loc19 at #loc15))
#loc39 = loc(callsite(#loc20 at #loc15))
#loc40 = loc(callsite(#loc27 at #loc28))
#loc42 = loc(callsite(#loc29 at #loc27))
#loc43 = loc(callsite(#loc36 at #loc16))
#loc44 = loc(callsite(#loc37 at #loc16))
#loc45 = loc(callsite(#loc38 at #loc16))
#loc46 = loc(callsite(#loc39 at #loc16))
#loc47 = loc(callsite(#loc42 at #loc28))
