//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_addmm_mul_86 // -- Begin function triton_poi_fused_add_addmm_mul_86
                                        // @triton_poi_fused_add_addmm_mul_86
.visible .entry triton_poi_fused_add_addmm_mul_86(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_addmm_mul_86_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_addmm_mul_86_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_addmm_mul_86_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_addmm_mul_86_param_3,
	.param .u32 triton_poi_fused_add_addmm_mul_86_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<43>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_add_addmm_mul_86_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_addmm_mul_86_param_1];
$L__tmp0:
	.loc	1 21 28                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:21:33
	shl.b32 	%r14, %r1, 8;
	ld.param.u64 	%rd9, [triton_poi_fused_add_addmm_mul_86_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused_add_addmm_mul_86_param_3];
	.loc	1 22 36                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:22:36
	mov.u32 	%r15, %tid.x;
	shl.b32 	%r16, %r15, 1;
	and.b32  	%r17, %r16, 254;
	.loc	1 22 23                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:22:23
	or.b32  	%r18, %r14, %r17;
	.loc	1 24 21                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:24:21
	shr.s32 	%r20, %r18, 31;
	shr.u32 	%r21, %r20, 23;
	add.s32 	%r22, %r18, %r21;
	shr.s32 	%r23, %r22, 9;
	.loc	1 24 28                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:24:28
	mul.hi.s32 	%r24, %r23, 954437177;
	shr.u32 	%r25, %r24, 31;
	shr.s32 	%r26, %r24, 2;
	add.s32 	%r27, %r26, %r25;
	mul.lo.s32 	%r28, %r27, 18;
	sub.s32 	%r29, %r23, %r28;
	.loc	1 25 19                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:25:19
	and.b32  	%r30, %r22, -512;
	sub.s32 	%r31, %r18, %r30;
	.loc	1 26 19                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:26:19
	mul.hi.s32 	%r32, %r18, 954437177;
	shr.u32 	%r33, %r32, 31;
	shr.s32 	%r34, %r32, 11;
	add.s32 	%r35, %r34, %r33;
	.loc	1 28 37                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:28:37
	mad.lo.s32 	%r36, %r35, 9216, %r31;
	.loc	1 28 30                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:28:30
	mul.wide.s32 	%rd11, %r36, 4;
	add.s64 	%rd12, %rd7, %rd11;
	add.s64 	%rd1, %rd12, 30720;
	mov.pred 	%p1, -1;
	.loc	1 28 52                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:28:52
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 42                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:29:42
	add.s32 	%r37, %r36, 8192;
	.loc	1 29 30                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:29:30
	mul.wide.s32 	%rd13, %r37, 4;
	add.s64 	%rd2, %rd7, %rd13;
	.loc	1 29 52                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:29:52
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r4, %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 30 35                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:30:35
	mad.lo.s32 	%r38, %r35, -8704, %r36;
	.loc	1 30 30                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:30:30
	mul.wide.s32 	%rd14, %r38, 4;
	add.s64 	%rd3, %rd8, %rd14;
	.loc	1 30 44                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:30:44
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	.loc	1 31 30                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:31:30
	mul.wide.s32 	%rd15, %r31, 4;
	add.s64 	%rd4, %rd9, %rd15;
	.loc	1 31 35                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:31:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r8;
	mov.b32 	%f6, %r9;
	.loc	1 32 31                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:32:31
	mul.wide.s32 	%rd16, %r18, 4;
	add.s64 	%rd5, %rd7, %rd16;
	.loc	1 32 36                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:32:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 19                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:35:19
	setp.eq.s32 	%p7, %r29, 16;
	.loc	1 41 19                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:41:19
	add.f32 	%f7, %f3, %f5;
	add.f32 	%f8, %f4, %f6;
	.loc	1 42 19                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:42:19
	add.f32 	%f9, %f7, %f1;
	add.f32 	%f10, %f8, %f2;
	.loc	1 43 20                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:43:20
	setp.eq.s32 	%p8, %r29, 15;
	.loc	1 44 34                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:44:34
	selp.b32 	%r39, %r2, %r10, %p8;
	selp.b32 	%r40, %r3, %r11, %p8;
	.loc	1 46 25                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:46:25
	add.s64 	%rd6, %rd10, %rd16;
	.loc	1 46 37                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:46:37
	mov.b32 	%r41, %f9;
	.loc	1 45 34                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:45:34
	selp.b32 	%r12, %r41, %r39, %p7;
	.loc	1 46 37                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:46:37
	mov.b32 	%r42, %f10;
	.loc	1 45 34                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:45:34
	selp.b32 	%r13, %r42, %r40, %p7;
	.loc	1 46 37                         // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:46:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r12, %r13 };
	// end inline asm
	.loc	1 46 4                          // c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py:46:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6l/c6l5wwjqdbl45fwcps246nmufm3btsgmslxv5sahkna35um54zi2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 108
.b8 53
.b8 119
.b8 119
.b8 106
.b8 113
.b8 100
.b8 98
.b8 108
.b8 52
.b8 53
.b8 102
.b8 119
.b8 99
.b8 112
.b8 115
.b8 50
.b8 52
.b8 54
.b8 110
.b8 109
.b8 117
.b8 102
.b8 109
.b8 51
.b8 98
.b8 116
.b8 115
.b8 103
.b8 109
.b8 115
.b8 108
.b8 120
.b8 118
.b8 53
.b8 115
.b8 97
.b8 104
.b8 107
.b8 110
.b8 97
.b8 51
.b8 53
.b8 117
.b8 109
.b8 53
.b8 52
.b8 122
.b8 105
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
