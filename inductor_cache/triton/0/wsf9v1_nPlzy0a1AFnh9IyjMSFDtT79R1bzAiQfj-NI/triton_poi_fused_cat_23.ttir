#loc = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_23(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-1024> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1024> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<2048> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_4 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_4 : tensor<256xi32> loc(#loc7)
    %7 = arith.extsi %5 : tensor<256xi32> to tensor<256xi64> loc(#loc8)
    %8 = arith.cmpi slt, %7, %cst_3 : tensor<256xi64> loc(#loc8)
    %9 = arith.muli %6, %cst_2 : tensor<256xi32> loc(#loc9)
    %10 = arith.addi %9, %5 : tensor<256xi32> loc(#loc10)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %11, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %13 = tt.load %12, %8, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %14 = arith.subf %cst_1, %13 : tensor<256xf32> loc(#loc35)
    %15 = math.exp %14 : tensor<256xf32> loc(#loc36)
    %16 = arith.addf %15, %cst : tensor<256xf32> loc(#loc37)
    %17 = arith.divf %cst, %16 : tensor<256xf32> loc(#loc38)
    %18 = arith.mulf %13, %17 : tensor<256xf32> loc(#loc18)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc19)
    %20 = tt.addptr %19, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %21 = tt.load %20, %8, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %22 = arith.addf %18, %21 : tensor<256xf32> loc(#loc21)
    %23 = arith.cmpi sge, %7, %cst_3 : tensor<256xi64> loc(#loc22)
    %24 = arith.addi %5, %cst_0 : tensor<256xi32> loc(#loc23)
    %25 = arith.addi %9, %24 : tensor<256xi32> loc(#loc24)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc25)
    %27 = tt.addptr %26, %25 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %28 = tt.load %27, %23, %cst_1 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc26)
    %29 = arith.subf %cst_1, %28 : tensor<256xf32> loc(#loc39)
    %30 = math.exp %29 : tensor<256xf32> loc(#loc40)
    %31 = arith.addf %30, %cst : tensor<256xf32> loc(#loc41)
    %32 = arith.divf %cst, %31 : tensor<256xf32> loc(#loc42)
    %33 = arith.mulf %28, %32 : tensor<256xf32> loc(#loc28)
    %34 = arith.select %23, %33, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc29)
    %35 = arith.select %8, %22, %34 : tensor<256xi1>, tensor<256xf32> loc(#loc43)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc32)
    %37 = tt.addptr %36, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc32)
    tt.store %37, %35 : tensor<256x!tt.ptr<f32>> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":21:28)
#loc3 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":21:33)
#loc4 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":22:36)
#loc5 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":22:23)
#loc6 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":24:19)
#loc7 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":25:19)
#loc8 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":31:18)
#loc9 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":32:35)
#loc10 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":32:41)
#loc11 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":32:30)
#loc12 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":32:47)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc14 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":33:22)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc18 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":34:18)
#loc19 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":35:30)
#loc20 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":35:47)
#loc21 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":36:18)
#loc22 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":39:20)
#loc23 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":42:52)
#loc24 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":42:42)
#loc25 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":42:31)
#loc26 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":42:58)
#loc27 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":43:23)
#loc28 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":44:20)
#loc29 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":46:35)
#loc30 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":47:34)
#loc31 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":38:33)
#loc32 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":48:25)
#loc33 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":48:37)
#loc34 = loc("inductor_cache/25/c25pa2ddamrpohf6zrxo5afh7e4hmrirptyx5flpleqjqlniczfw.py":48:4)
#loc35 = loc(callsite(#loc13 at #loc14))
#loc36 = loc(callsite(#loc15 at #loc14))
#loc37 = loc(callsite(#loc16 at #loc14))
#loc38 = loc(callsite(#loc17 at #loc14))
#loc39 = loc(callsite(#loc13 at #loc27))
#loc40 = loc(callsite(#loc15 at #loc27))
#loc41 = loc(callsite(#loc16 at #loc27))
#loc42 = loc(callsite(#loc17 at #loc27))
#loc43 = loc(fused[#loc30, #loc31])
