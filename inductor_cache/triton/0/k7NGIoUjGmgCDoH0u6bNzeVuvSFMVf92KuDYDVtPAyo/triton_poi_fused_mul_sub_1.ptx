//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_sub_1 // -- Begin function triton_poi_fused_mul_sub_1
                                        // @triton_poi_fused_mul_sub_1
.visible .entry triton_poi_fused_mul_sub_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sub_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_sub_1_param_1,
	.param .u32 triton_poi_fused_mul_sub_1_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<41>;
	.reg .f32 	%f<12>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_mul_sub_1_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_mul_sub_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:21:33
	shl.b32 	%r16, %r1, 7;
	.loc	1 22 36                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:22:36
	mov.u32 	%r17, %tid.x;
	and.b32  	%r18, %r17, 127;
	.loc	1 22 23                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:22:23
	or.b32  	%r19, %r16, %r18;
	.loc	1 23 21                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:23:21
	setp.lt.s32 	%p1, %r19, 128;
	.loc	1 24 21                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:24:21
	shr.s32 	%r21, %r19, 31;
	shr.u32 	%r22, %r21, 28;
	add.s32 	%r23, %r19, %r22;
	shr.s32 	%r24, %r23, 4;
	.loc	1 24 27                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:24:27
	shr.u32 	%r25, %r23, 31;
	add.s32 	%r26, %r24, %r25;
	and.b32  	%r27, %r26, -2;
	sub.s32 	%r28, %r24, %r27;
	.loc	1 25 19                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:25:19
	and.b32  	%r29, %r23, -16;
	sub.s32 	%r30, %r19, %r29;
	.loc	1 26 19                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:26:19
	shr.u32 	%r31, %r21, 27;
	add.s32 	%r32, %r19, %r31;
	shr.s32 	%r33, %r32, 5;
	.loc	1 27 19                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:27:19
	and.b32  	%r34, %r32, -32;
	sub.s32 	%r35, %r19, %r34;
	.loc	1 29 38                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:29:38
	mul.lo.s32 	%r36, %r33, 48;
	.loc	1 29 35                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:29:35
	add.s32 	%r37, %r36, %r30;
	.loc	1 29 30                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:29:30
	mul.wide.s32 	%rd8, %r37, 4;
	add.s64 	%rd1, %rd6, %rd8;
	.loc	1 29 43                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:29:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 30 40                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:30:40
	add.s32 	%r38, %r37, 32;
	.loc	1 30 30                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:30:30
	mul.wide.s32 	%rd9, %r38, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 30 48                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:30:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	.loc	1 31 41                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:31:41
	add.s32 	%r39, %r37, 16;
	.loc	1 31 31                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:31:31
	mul.wide.s32 	%rd10, %r39, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 31 49                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:31:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 36                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:32:36
	add.s32 	%r40, %r36, %r35;
	.loc	1 32 31                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:32:31
	mul.wide.s32 	%rd11, %r40, 4;
	add.s64 	%rd4, %rd6, %rd11;
	.loc	1 32 44                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:32:44
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 19                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:35:19
	setp.eq.s32 	%p6, %r28, 1;
	.loc	1 41 19                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:41:19
	add.f32 	%f2, %f1, 0f33D6BF95;
	.loc	1 42 19                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:42:19
	mov.b32 	%r8, %f2;
	// begin inline asm
	div.full.f32 %r6, %r7, %r8;
	// end inline asm
	mov.b32 	%f3, %r6;
	.loc	1 44 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:44:20
	mul.f32 	%f4, %f3, 0f3EAAAAAB;
	.loc	1 46 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:46:20
	// begin inline asm
	div.full.f32 %r9, %r10, %r8;
	// end inline asm
	mov.b32 	%f5, %r9;
	.loc	1 49 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:49:20
	mul.f32 	%f6, %f5, 0f3EAAAAAB;
	.loc	1 51 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:51:20
	setp.eq.s32 	%p7, %r28, 0;
	.loc	1 52 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:52:20
	// begin inline asm
	div.full.f32 %r12, %r13, %r8;
	// end inline asm
	mov.b32 	%f7, %r12;
	.loc	1 0 0                           // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:0:0
	selp.f32 	%f8, %f4, %f7, %p7;
	selp.f32 	%f9, %f6, %f8, %p6;
	.loc	1 58 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:58:20
	add.f32 	%f10, %f9, 0fBF000000;
	.loc	1 60 20                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:60:20
	add.f32 	%f11, %f10, %f10;
	.loc	1 61 25                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:61:25
	mul.wide.s32 	%rd12, %r19, 4;
	add.s64 	%rd5, %rd7, %rd12;
	.loc	1 61 37                         // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:61:37
	mov.b32 	%r15, %f11;
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r15 };
	// end inline asm
	.loc	1 61 4                          // cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py:61:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wl/cwlj47r4zzonoehxz4rm4umgfmghpqt5gj23vytniv3sgv5bxk5x.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 108
.b8 106
.b8 52
.b8 55
.b8 114
.b8 52
.b8 122
.b8 122
.b8 111
.b8 110
.b8 111
.b8 101
.b8 104
.b8 120
.b8 122
.b8 52
.b8 114
.b8 109
.b8 52
.b8 117
.b8 109
.b8 103
.b8 102
.b8 109
.b8 103
.b8 104
.b8 112
.b8 113
.b8 116
.b8 53
.b8 103
.b8 106
.b8 50
.b8 51
.b8 118
.b8 121
.b8 116
.b8 110
.b8 105
.b8 118
.b8 51
.b8 115
.b8 103
.b8 118
.b8 53
.b8 98
.b8 120
.b8 107
.b8 53
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
