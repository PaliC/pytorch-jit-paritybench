#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0)
#loc1 = loc(unknown)
#loc75 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":81:27)
#loc88 = loc(callsite(#loc1 at #loc75))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg15: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4.096000e+03> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %4 = arith.remsi %0, %c64_i32 : i32 loc(#loc5)
    %5 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc6)
    %6 = tt.splat %5 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc7)
    %7 = tt.splat %5 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc7)
    %9 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc7)
    %10 = tt.load %6, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc7)
    %11 = tt.load %7, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc7)
    %12 = tt.addptr %arg4, %4 : !tt.ptr<f32>, i32 loc(#loc8)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc9)
    %14 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc9)
    %15 = tt.load %13, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc9)
    %16 = tt.load %14, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc9)
    %17 = tt.addptr %arg5, %4 : !tt.ptr<f32>, i32 loc(#loc10)
    %18 = tt.splat %17 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %19 = tt.load %18, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc11)
    %20 = tt.addptr %arg6, %4 : !tt.ptr<f32>, i32 loc(#loc12)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %22 = tt.load %21, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc13)
    %23 = tt.addptr %arg7, %4 : !tt.ptr<f32>, i32 loc(#loc14)
    %24 = tt.splat %23 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %25 = tt.load %24, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc15)
    %26 = tt.addptr %arg8, %4 : !tt.ptr<f32>, i32 loc(#loc16)
    %27 = tt.splat %26 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %28 = tt.load %27, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %29 = arith.addf %10, %15 : tensor<1x1xf32, #blocked1> loc(#loc18)
    %30 = arith.addf %11, %16 : tensor<1x1xf32, #blocked> loc(#loc18)
    %31 = arith.subf %30, %19 : tensor<1x1xf32, #blocked> loc(#loc19)
    %32 = arith.addf %22, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc20)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc21)
    %34 = arith.divf %cst_3, %33 : tensor<1x1xf32, #blocked> loc(#loc22)
    %35 = arith.mulf %31, %34 : tensor<1x1xf32, #blocked> loc(#loc23)
    %36 = arith.mulf %35, %25 : tensor<1x1xf32, #blocked> loc(#loc24)
    %37 = arith.addf %36, %28 : tensor<1x1xf32, #blocked> loc(#loc25)
    gpu.barrier loc(#loc26)
    tt.store %6, %29, %8 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc27)
    %38 = tt.addptr %arg9, %4 : !tt.ptr<f32>, i32 loc(#loc28)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc29)
    %40 = tt.load %39, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc29)
    %41 = tt.addptr %arg10, %4 : !tt.ptr<f32>, i32 loc(#loc30)
    %42 = tt.splat %41 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %43 = tt.load %42, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %44 = tt.addptr %arg11, %4 : !tt.ptr<f32>, i32 loc(#loc32)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %46 = tt.load %45, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %47 = tt.addptr %arg12, %4 : !tt.ptr<f32>, i32 loc(#loc34)
    %48 = tt.splat %47 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %49 = tt.load %48, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %50 = tt.addptr %arg13, %4 : !tt.ptr<f32>, i32 loc(#loc36)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    %52 = tt.load %51, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc37)
    %53 = arith.muli %0, %c4096_i32 : i32 loc(#loc38)
    %54 = tt.splat %53 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc39)
    %55 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc40)
    %56 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc41)
    %57 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc42)
    %58 = tt.splat %arg15 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc43)
    %59 = tt.broadcast %40 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc44)
    %60 = tt.broadcast %43 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc45)
    %61 = arith.addf %46, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc46)
    %62 = tt.extern_elementwise %61 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc47)
    %63 = arith.divf %cst_3, %62 : tensor<1x1xf32, #blocked> loc(#loc48)
    %64 = tt.broadcast %63 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc49)
    %65 = tt.broadcast %49 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc50)
    %66 = tt.broadcast %52 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc51)
    %67 = tt.broadcast %37 : tensor<1x1xf32, #blocked> -> tensor<1x2048xf32, #blocked> loc(#loc52)
    %68 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc53)
    %69 = scf.for %arg18 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg19 = %cst) -> (tensor<1x2048xf32, #blocked>)  : i32 {
      %76 = tt.splat %arg18 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc55)
      %77 = arith.addi %76, %3 : tensor<1x2048xi32, #blocked> loc(#loc55)
      %78 = arith.cmpi slt, %77, %cst_2 : tensor<1x2048xi32, #blocked> loc(#loc56)
      %79 = arith.addi %77, %54 : tensor<1x2048xi32, #blocked> loc(#loc39)
      %80 = tt.addptr %55, %79 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc40)
      %81 = arith.andi %78, %56 : tensor<1x2048xi1, #blocked> loc(#loc41)
      %82 = tt.load %80, %81, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc57)
      %83 = tt.addptr %57, %79 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc42)
      %84 = tt.load %83, %81, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc58)
      %85 = tt.addptr %58, %79 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc43)
      %86 = tt.load %85, %81, %cst evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc59)
      %87 = arith.addf %82, %59 : tensor<1x2048xf32, #blocked> loc(#loc44)
      %88 = arith.subf %87, %60 : tensor<1x2048xf32, #blocked> loc(#loc45)
      %89 = arith.mulf %88, %64 : tensor<1x2048xf32, #blocked> loc(#loc49)
      %90 = arith.mulf %89, %65 : tensor<1x2048xf32, #blocked> loc(#loc50)
      %91 = arith.addf %90, %66 : tensor<1x2048xf32, #blocked> loc(#loc51)
      %92 = arith.addf %91, %67 : tensor<1x2048xf32, #blocked> loc(#loc52)
      %93 = arith.subf %cst, %92 : tensor<1x2048xf32, #blocked> loc(#loc83)
      %94 = math.exp %93 : tensor<1x2048xf32, #blocked> loc(#loc84)
      %95 = arith.addf %94, %cst_0 : tensor<1x2048xf32, #blocked> loc(#loc85)
      %96 = arith.divf %cst_0, %95 : tensor<1x2048xf32, #blocked> loc(#loc86)
      %97 = arith.mulf %84, %96 : tensor<1x2048xf32, #blocked> loc(#loc65)
      %98 = arith.subf %cst_0, %96 : tensor<1x2048xf32, #blocked> loc(#loc66)
      %99 = arith.mulf %86, %98 : tensor<1x2048xf32, #blocked> loc(#loc67)
      %100 = arith.addf %97, %99 : tensor<1x2048xf32, #blocked> loc(#loc68)
      %101 = arith.addf %arg19, %100 : tensor<1x2048xf32, #blocked> loc(#loc69)
      %102 = arith.select %81, %101, %arg19 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc70)
      tt.store %80, %87, %81 : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc71)
      %103 = tt.addptr %68, %79 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc53)
      tt.store %103, %100, %81 : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc72)
      scf.yield %102 : tensor<1x2048xf32, #blocked> loc(#loc73)
    } loc(#loc54)
    %70 = "tt.reduce"(%69) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc75)), %arg19: f32 loc(callsite(#loc1 at #loc75))):
      %76 = arith.addf %arg18, %arg19 : f32 loc(#loc90)
      tt.reduce.return %76 : f32 loc(#loc87)
    }) : (tensor<1x2048xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc87)
    %71 = triton_gpu.convert_layout %70 {fastmath = #arith.fastmath<none>} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc77)
    %72 = tt.expand_dims %71 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc78)
    %73 = arith.divf %72, %cst_4 : tensor<1x1xf32, #blocked1> loc(#loc77)
    gpu.barrier loc(#loc79)
    %74 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc80)
    %75 = tt.splat %74 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc81)
    tt.store %75, %73, %8 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc81)
    tt.return loc(#loc82)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":22:28)
#loc3 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":24:21)
#loc4 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":25:33)
#loc5 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":27:19)
#loc6 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":28:34)
#loc7 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":28:39)
#loc8 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":29:30)
#loc9 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":29:35)
#loc10 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":30:30)
#loc11 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":30:35)
#loc12 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":31:30)
#loc13 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":31:35)
#loc14 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":32:31)
#loc15 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":32:36)
#loc16 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":33:31)
#loc17 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":33:36)
#loc18 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":34:18)
#loc19 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":35:18)
#loc20 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":37:18)
#loc21 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":38:26)
#loc22 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":40:19)
#loc23 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":43:19)
#loc24 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":44:20)
#loc25 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":45:20)
#loc26 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":46:4)
#loc27 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":47:39)
#loc28 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":48:31)
#loc29 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":48:36)
#loc30 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":49:31)
#loc31 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":49:36)
#loc32 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":50:31)
#loc33 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":50:36)
#loc34 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":51:31)
#loc35 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":51:36)
#loc36 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":52:31)
#loc37 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":52:36)
#loc38 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:49)
#loc39 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:44)
#loc40 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:39)
#loc41 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:62)
#loc42 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":59:36)
#loc43 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":60:36)
#loc44 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":61:24)
#loc45 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":62:24)
#loc46 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":63:24)
#loc47 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":64:31)
#loc48 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":65:23)
#loc49 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":67:24)
#loc50 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":68:24)
#loc51 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":69:24)
#loc52 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":70:24)
#loc53 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":80:32)
#loc54 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":54:36)
#loc55 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":55:27)
#loc56 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":56:25)
#loc57 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:54)
#loc58 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":59:51)
#loc59 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":60:51)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc61 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":71:27)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc65 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":72:24)
#loc66 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":73:24)
#loc67 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":74:24)
#loc68 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":75:24)
#loc69 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":77:25)
#loc70 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":78:48)
#loc71 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":79:54)
#loc72 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":80:54)
#loc73 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":80:8)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc77 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":83:20)
#loc78 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":81:30)
#loc79 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":84:4)
#loc80 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":85:28)
#loc81 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":85:40)
#loc82 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":85:4)
#loc83 = loc(callsite(#loc60 at #loc61))
#loc84 = loc(callsite(#loc62 at #loc61))
#loc85 = loc(callsite(#loc63 at #loc61))
#loc86 = loc(callsite(#loc64 at #loc61))
#loc87 = loc(callsite(#loc74 at #loc75))
#loc89 = loc(callsite(#loc76 at #loc74))
#loc90 = loc(callsite(#loc89 at #loc75))
