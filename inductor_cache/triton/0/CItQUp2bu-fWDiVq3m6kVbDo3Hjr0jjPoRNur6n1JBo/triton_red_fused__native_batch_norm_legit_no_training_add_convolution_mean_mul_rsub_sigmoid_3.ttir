#loc = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0)
#loc1 = loc(unknown)
#loc76 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":81:27)
#loc89 = loc(callsite(#loc1 at #loc76))
module {
  tt.func public @triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg15: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.remsi %0, %c64_i32 : i32 loc(#loc6)
    %6 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc7)
    %7 = tt.splat %6 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.load %7, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %arg4, %5 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.load %10, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.addptr %arg5, %5 : !tt.ptr<f32>, i32 loc(#loc11)
    %13 = tt.splat %12 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.load %13, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.addptr %arg6, %5 : !tt.ptr<f32>, i32 loc(#loc13)
    %16 = tt.splat %15 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.load %16, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.addptr %arg7, %5 : !tt.ptr<f32>, i32 loc(#loc15)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %20 = tt.load %19, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %arg8, %5 : !tt.ptr<f32>, i32 loc(#loc17)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.load %22, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.addf %8, %11 : tensor<1x1xf32> loc(#loc19)
    %25 = arith.subf %24, %14 : tensor<1x1xf32> loc(#loc20)
    %26 = arith.addf %17, %cst_4 : tensor<1x1xf32> loc(#loc21)
    %27 = tt.extern_elementwise %26 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc22)
    %28 = arith.divf %cst, %27 : tensor<1x1xf32> loc(#loc23)
    %29 = arith.mulf %25, %28 : tensor<1x1xf32> loc(#loc24)
    %30 = arith.mulf %29, %20 : tensor<1x1xf32> loc(#loc25)
    %31 = arith.addf %30, %23 : tensor<1x1xf32> loc(#loc26)
    gpu.barrier loc(#loc27)
    tt.store %7, %24, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    %32 = tt.addptr %arg9, %5 : !tt.ptr<f32>, i32 loc(#loc29)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    %34 = tt.load %33, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc30)
    %35 = tt.addptr %arg10, %5 : !tt.ptr<f32>, i32 loc(#loc31)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc31)
    %37 = tt.load %36, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc32)
    %38 = tt.addptr %arg11, %5 : !tt.ptr<f32>, i32 loc(#loc33)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc33)
    %40 = tt.load %39, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    %41 = tt.addptr %arg12, %5 : !tt.ptr<f32>, i32 loc(#loc35)
    %42 = tt.splat %41 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    %43 = tt.load %42, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc36)
    %44 = tt.addptr %arg13, %5 : !tt.ptr<f32>, i32 loc(#loc37)
    %45 = tt.splat %44 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    %46 = tt.load %45, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    %47 = arith.muli %0, %c4096_i32 : i32 loc(#loc39)
    %48 = tt.splat %47 : i32 -> tensor<1x2048xi32> loc(#loc40)
    %49 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc41)
    %50 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc42)
    %51 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc43)
    %52 = tt.splat %arg15 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc44)
    %53 = tt.broadcast %34 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc45)
    %54 = tt.broadcast %37 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc46)
    %55 = arith.addf %40, %cst_4 : tensor<1x1xf32> loc(#loc47)
    %56 = tt.extern_elementwise %55 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc48)
    %57 = arith.divf %cst, %56 : tensor<1x1xf32> loc(#loc49)
    %58 = tt.broadcast %57 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc50)
    %59 = tt.broadcast %43 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc51)
    %60 = tt.broadcast %46 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc52)
    %61 = tt.broadcast %31 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc53)
    %62 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc54)
    %63 = scf.for %arg18 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg19 = %cst_3) -> (tensor<1x2048xf32>)  : i32 {
      %69 = tt.splat %arg18 : i32 -> tensor<1x2048xi32> loc(#loc56)
      %70 = arith.addi %69, %4 : tensor<1x2048xi32> loc(#loc56)
      %71 = arith.cmpi slt, %70, %cst_2 : tensor<1x2048xi32> loc(#loc57)
      %72 = arith.addi %70, %48 : tensor<1x2048xi32> loc(#loc40)
      %73 = tt.addptr %49, %72 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc41)
      %74 = arith.andi %71, %50 : tensor<1x2048xi1> loc(#loc42)
      %75 = tt.load %73, %74, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc58)
      %76 = tt.addptr %51, %72 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc43)
      %77 = tt.load %76, %74, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc59)
      %78 = tt.addptr %52, %72 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc44)
      %79 = tt.load %78, %74, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc60)
      %80 = arith.addf %75, %53 : tensor<1x2048xf32> loc(#loc45)
      %81 = arith.subf %80, %54 : tensor<1x2048xf32> loc(#loc46)
      %82 = arith.mulf %81, %58 : tensor<1x2048xf32> loc(#loc50)
      %83 = arith.mulf %82, %59 : tensor<1x2048xf32> loc(#loc51)
      %84 = arith.addf %83, %60 : tensor<1x2048xf32> loc(#loc52)
      %85 = arith.addf %84, %61 : tensor<1x2048xf32> loc(#loc53)
      %86 = arith.subf %cst_3, %85 : tensor<1x2048xf32> loc(#loc84)
      %87 = math.exp %86 : tensor<1x2048xf32> loc(#loc85)
      %88 = arith.addf %87, %cst_1 : tensor<1x2048xf32> loc(#loc86)
      %89 = arith.divf %cst_1, %88 : tensor<1x2048xf32> loc(#loc87)
      %90 = arith.mulf %77, %89 : tensor<1x2048xf32> loc(#loc66)
      %91 = arith.subf %cst_1, %89 : tensor<1x2048xf32> loc(#loc67)
      %92 = arith.mulf %79, %91 : tensor<1x2048xf32> loc(#loc68)
      %93 = arith.addf %90, %92 : tensor<1x2048xf32> loc(#loc69)
      %94 = arith.addf %arg19, %93 : tensor<1x2048xf32> loc(#loc70)
      %95 = arith.select %74, %94, %arg19 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc71)
      tt.store %73, %80, %74 : tensor<1x2048x!tt.ptr<f32>> loc(#loc72)
      %96 = tt.addptr %62, %72 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc54)
      tt.store %96, %93, %74 : tensor<1x2048x!tt.ptr<f32>> loc(#loc73)
      scf.yield %95 : tensor<1x2048xf32> loc(#loc74)
    } loc(#loc55)
    %64 = "tt.reduce"(%63) <{axis = 1 : i32}> ({
    ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc76)), %arg19: f32 loc(callsite(#loc1 at #loc76))):
      %69 = arith.addf %arg18, %arg19 : f32 loc(#loc91)
      tt.reduce.return %69 : f32 loc(#loc88)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc88)
    %65 = tt.expand_dims %64 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc78)
    %66 = arith.divf %65, %cst_0 : tensor<1x1xf32> loc(#loc79)
    gpu.barrier loc(#loc80)
    %67 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc81)
    %68 = tt.splat %67 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc81)
    tt.store %68, %66, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc82)
    tt.return loc(#loc83)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":22:28)
#loc3 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":24:21)
#loc4 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":25:25)
#loc5 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":25:33)
#loc6 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":27:19)
#loc7 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":28:34)
#loc8 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":28:39)
#loc9 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":29:30)
#loc10 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":29:35)
#loc11 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":30:30)
#loc12 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":30:35)
#loc13 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":31:30)
#loc14 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":31:35)
#loc15 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":32:31)
#loc16 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":32:36)
#loc17 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":33:31)
#loc18 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":33:36)
#loc19 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":34:18)
#loc20 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":35:18)
#loc21 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":37:18)
#loc22 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":38:26)
#loc23 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":40:19)
#loc24 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":43:19)
#loc25 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":44:20)
#loc26 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":45:20)
#loc27 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":46:4)
#loc28 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":47:39)
#loc29 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":48:31)
#loc30 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":48:36)
#loc31 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":49:31)
#loc32 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":49:36)
#loc33 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":50:31)
#loc34 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":50:36)
#loc35 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":51:31)
#loc36 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":51:36)
#loc37 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":52:31)
#loc38 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":52:36)
#loc39 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:49)
#loc40 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:44)
#loc41 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:39)
#loc42 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:62)
#loc43 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":59:36)
#loc44 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":60:36)
#loc45 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":61:24)
#loc46 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":62:24)
#loc47 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":63:24)
#loc48 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":64:31)
#loc49 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":65:23)
#loc50 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":67:24)
#loc51 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":68:24)
#loc52 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":69:24)
#loc53 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":70:24)
#loc54 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":80:32)
#loc55 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":54:36)
#loc56 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":55:27)
#loc57 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":56:25)
#loc58 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":58:54)
#loc59 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":59:51)
#loc60 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":60:51)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc62 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":71:27)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc66 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":72:24)
#loc67 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":73:24)
#loc68 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":74:24)
#loc69 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":75:24)
#loc70 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":77:25)
#loc71 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":78:48)
#loc72 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":79:54)
#loc73 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":80:54)
#loc74 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":80:8)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc78 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":81:30)
#loc79 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":83:20)
#loc80 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":84:4)
#loc81 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":85:28)
#loc82 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":85:40)
#loc83 = loc("inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py":85:4)
#loc84 = loc(callsite(#loc61 at #loc62))
#loc85 = loc(callsite(#loc63 at #loc62))
#loc86 = loc(callsite(#loc64 at #loc62))
#loc87 = loc(callsite(#loc65 at #loc62))
#loc88 = loc(callsite(#loc75 at #loc76))
#loc90 = loc(callsite(#loc77 at #loc75))
#loc91 = loc(callsite(#loc90 at #loc76))
