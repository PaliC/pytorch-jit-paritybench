//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_9,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_10,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_11,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_12,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_13,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_14,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_15,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_16,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_17
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<88>;
	.reg .b32 	%r<186>;
	.reg .f32 	%f<189>;
	.reg .b64 	%rd<78>;
	.loc	1 19 0                          // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd59, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_0];
	ld.param.u64 	%rd60, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:24:21
	setp.lt.s32 	%p1, %r1, 256;
	ld.param.u64 	%rd61, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_2];
	ld.param.u64 	%rd62, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_3];
	.loc	1 25 33                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:25:33
	mov.u32 	%r153, %tid.x;
	.loc	1 27 19                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:27:19
	shr.s32 	%r154, %r1, 31;
	shr.u32 	%r155, %r154, 26;
	add.s32 	%r156, %r1, %r155;
	and.b32  	%r157, %r156, -64;
	sub.s32 	%r158, %r1, %r157;
	ld.param.u64 	%rd63, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_4];
	ld.param.u64 	%rd64, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_5];
	.loc	1 28 34                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:28:34
	mul.wide.s32 	%rd65, %r1, 4;
	add.s64 	%rd1, %rd59, %rd65;
	ld.param.u64 	%rd66, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_6];
	.loc	1 28 39                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:28:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd67, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_7];
	mov.b32 	%f17, %r2;
	ld.param.u64 	%rd68, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_8];
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd69, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_9];
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd70, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_10];
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd71, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_11];
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd72, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_12];
	ld.param.u64 	%rd73, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_13];
	.loc	1 29 30                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:29:30
	mul.wide.s32 	%rd74, %r158, 4;
	add.s64 	%rd6, %rd63, %rd74;
	ld.param.u64 	%rd75, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_14];
	.loc	1 29 35                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:29:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	ld.param.u64 	%rd76, [triton_red_fused__native_batch_norm_legit_no_training_add_convolution_mean_mul_rsub_sigmoid_3_param_15];
	mov.b32 	%f18, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 30 30                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:30:30
	add.s64 	%rd11, %rd64, %rd74;
	.loc	1 30 35                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:30:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 31 30                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:31:30
	add.s64 	%rd15, %rd66, %rd74;
	.loc	1 31 35                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:31:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r19;
	.loc	1 32 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:32:31
	add.s64 	%rd19, %rd67, %rd74;
	.loc	1 32 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:32:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 33 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:33:31
	add.s64 	%rd23, %rd68, %rd74;
	.loc	1 33 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:33:36
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 34 18                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:34:18
	add.f32 	%f20, %f17, %f18;
	.loc	1 37 18                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:37:18
	add.f32 	%f21, %f19, 0f3727C5AC;
	.loc	1 38 26                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:38:26
	sqrt.approx.ftz.f32 	%f22, %f21;
	.loc	1 40 19                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:40:19
	mov.b32 	%r30, %f22;
	mov.b32 	%r29, 1065353216;
	// begin inline asm
	div.full.f32 %r28, %r29, %r30;
	// end inline asm
	mov.b32 	%f23, %r28;
	.loc	1 46 4                          // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:46:4
	bar.sync 	0;
	.loc	1 47 39                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:47:39
	and.b32  	%r159, %r153, 511;
	setp.eq.s32 	%p86, %r159, 0;
	mov.b32 	%r31, %f20;
	and.pred  	%p27, %p86, %p1;
	// begin inline asm
	@%p27 st.global.b32 [ %rd1 + 0 ], { %r31 };
	// end inline asm
	.loc	1 48 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:48:31
	add.s64 	%rd28, %rd69, %rd74;
	.loc	1 48 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:48:36
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r33 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r34 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r35 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 49 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:49:31
	add.s64 	%rd32, %rd70, %rd74;
	.loc	1 49 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:49:36
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r36 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r37 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r39 }, [ %rd32 + 0 ];
	// end inline asm
	.loc	1 50 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:50:31
	add.s64 	%rd36, %rd71, %rd74;
	.loc	1 50 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:50:36
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r40 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r41 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r42 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r43 }, [ %rd36 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r43;
	.loc	1 51 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:51:31
	add.s64 	%rd40, %rd72, %rd74;
	.loc	1 51 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:51:36
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r44 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r45 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r46 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r47 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 52 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:52:31
	add.s64 	%rd44, %rd73, %rd74;
	.loc	1 52 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:52:36
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r48 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r49 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r50 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r51 }, [ %rd44 + 0 ];
	// end inline asm
	.loc	1 63 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:63:24
	add.f32 	%f25, %f24, 0f3727C5AC;
	.loc	1 64 31                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:64:31
	sqrt.approx.ftz.f32 	%f26, %f25;
	.loc	1 65 23                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:65:23
	mov.b32 	%r54, %f26;
	// begin inline asm
	div.full.f32 %r52, %r29, %r54;
	// end inline asm
	mov.b32 	%f27, %r52;
	.loc	1 58 49                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:58:49
	shl.b32 	%r160, %r1, 12;
	.loc	1 25 33                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:25:33
	shl.b32 	%r161, %r153, 2;
	and.b32  	%r162, %r161, 2044;
	or.b32  	%r163, %r160, %r162;
	.loc	1 52 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:52:36
	mov.b32 	%f28, %r51;
	.loc	1 51 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:51:36
	mov.b32 	%f29, %r47;
	.loc	1 49 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:49:36
	mov.b32 	%f30, %r39;
	.loc	1 48 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:48:36
	mov.b32 	%f31, %r35;
	.loc	1 28 39                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:28:39
	mov.b32 	%f32, %r6;
	.loc	1 29 35                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:29:35
	mov.b32 	%f33, %r11;
	.loc	1 34 18                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:34:18
	add.f32 	%f34, %f32, %f33;
	.loc	1 30 35                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:30:35
	mov.b32 	%f35, %r15;
	.loc	1 35 18                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:35:18
	sub.f32 	%f36, %f34, %f35;
	.loc	1 43 19                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:43:19
	mul.f32 	%f37, %f36, %f23;
	.loc	1 32 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:32:36
	mov.b32 	%f38, %r23;
	.loc	1 33 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:33:36
	mov.b32 	%f39, %r27;
	.loc	1 45 20                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:45:20
	fma.rn.f32 	%f40, %f37, %f38, %f39;
	.loc	1 58 39                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:58:39
	mul.wide.s32 	%rd77, %r163, 4;
	add.s64 	%rd48, %rd60, %rd77;
	mov.b32 	%r59, 0;
	.loc	1 58 54                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:58:54
	// begin inline asm
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd48 + 0 ];
	@!%p1 mov.u32 %r55, %r59;
	@!%p1 mov.u32 %r56, %r59;
	@!%p1 mov.u32 %r57, %r59;
	@!%p1 mov.u32 %r58, %r59;
	// end inline asm
	mov.b32 	%f41, %r55;
	mov.b32 	%f42, %r56;
	mov.b32 	%f43, %r57;
	mov.b32 	%f44, %r58;
	.loc	1 59 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:59:36
	add.s64 	%rd49, %rd75, %rd77;
	.loc	1 59 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:59:51
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd49 + 0 ];
	@!%p1 mov.u32 %r63, %r59;
	@!%p1 mov.u32 %r64, %r59;
	@!%p1 mov.u32 %r65, %r59;
	@!%p1 mov.u32 %r66, %r59;
	// end inline asm
	.loc	1 60 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:60:36
	add.s64 	%rd50, %rd76, %rd77;
	.loc	1 60 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:60:51
	// begin inline asm
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r71, %r72, %r73, %r74 }, [ %rd50 + 0 ];
	@!%p1 mov.u32 %r71, %r59;
	@!%p1 mov.u32 %r72, %r59;
	@!%p1 mov.u32 %r73, %r59;
	@!%p1 mov.u32 %r74, %r59;
	// end inline asm
	.loc	1 61 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:61:24
	add.f32 	%f45, %f31, %f41;
	add.f32 	%f46, %f31, %f42;
	add.f32 	%f47, %f31, %f43;
	add.f32 	%f48, %f31, %f44;
	.loc	1 62 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:62:24
	sub.f32 	%f49, %f45, %f30;
	sub.f32 	%f50, %f46, %f30;
	sub.f32 	%f51, %f47, %f30;
	sub.f32 	%f52, %f48, %f30;
	.loc	1 67 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:67:24
	mul.f32 	%f53, %f27, %f49;
	mul.f32 	%f54, %f27, %f50;
	mul.f32 	%f55, %f27, %f51;
	mul.f32 	%f56, %f27, %f52;
	.loc	1 69 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:69:24
	fma.rn.f32 	%f57, %f53, %f29, %f28;
	fma.rn.f32 	%f58, %f54, %f29, %f28;
	fma.rn.f32 	%f59, %f55, %f29, %f28;
	fma.rn.f32 	%f60, %f56, %f29, %f28;
	.loc	1 70 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:70:24
	add.f32 	%f61, %f40, %f57;
	add.f32 	%f62, %f40, %f58;
	add.f32 	%f63, %f40, %f59;
	add.f32 	%f64, %f40, %f60;
	mov.f32 	%f65, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f66, %f65, %f61;
	sub.f32 	%f67, %f65, %f62;
	sub.f32 	%f68, %f65, %f63;
	sub.f32 	%f69, %f65, %f64;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f66, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f67, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f68, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f69, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f70, %f1, 0f3F800000;
	add.f32 	%f71, %f3, 0f3F800000;
	add.f32 	%f72, %f5, 0f3F800000;
	add.f32 	%f73, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r81, %f70;
	// begin inline asm
	div.full.f32 %r79, %r29, %r81;
	// end inline asm
	mov.b32 	%f74, %r79;
	mov.b32 	%r84, %f71;
	// begin inline asm
	div.full.f32 %r82, %r29, %r84;
	// end inline asm
	mov.b32 	%f75, %r82;
	mov.b32 	%r87, %f72;
	// begin inline asm
	div.full.f32 %r85, %r29, %r87;
	// end inline asm
	mov.b32 	%f76, %r85;
	mov.b32 	%r90, %f73;
	// begin inline asm
	div.full.f32 %r88, %r29, %r90;
	// end inline asm
	mov.b32 	%f77, %r88;
$L__tmp2:
	.loc	1 59 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:59:51
	mov.b32 	%f78, %r66;
	mov.b32 	%f79, %r65;
	mov.b32 	%f80, %r64;
	mov.b32 	%f81, %r63;
	.loc	1 60 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:60:51
	mov.b32 	%f82, %r71;
	mov.b32 	%f83, %r72;
	mov.b32 	%f84, %r73;
	mov.b32 	%f85, %r74;
	mov.f32 	%f86, 0f3F800000;
	.loc	1 73 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:73:24
	sub.f32 	%f87, %f86, %f74;
	sub.f32 	%f88, %f86, %f75;
	sub.f32 	%f89, %f86, %f76;
	sub.f32 	%f90, %f86, %f77;
	.loc	1 74 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:74:24
	mul.f32 	%f91, %f90, %f85;
	mul.f32 	%f92, %f89, %f84;
	mul.f32 	%f93, %f88, %f83;
	mul.f32 	%f94, %f87, %f82;
	.loc	1 75 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:75:24
	fma.rn.f32 	%f95, %f74, %f81, %f94;
	fma.rn.f32 	%f96, %f75, %f80, %f93;
	fma.rn.f32 	%f97, %f76, %f79, %f92;
	fma.rn.f32 	%f98, %f77, %f78, %f91;
	.loc	1 77 25                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:77:25
	add.f32 	%f99, %f98, 0f00000000;
	add.f32 	%f100, %f97, 0f00000000;
	add.f32 	%f101, %f96, 0f00000000;
	add.f32 	%f102, %f95, 0f00000000;
	.loc	1 79 54                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:79:54
	mov.b32 	%r91, %f45;
	mov.b32 	%r92, %f46;
	mov.b32 	%r93, %f47;
	mov.b32 	%r94, %f48;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd48 + 0 ], { %r91, %r92, %r93, %r94 };
	// end inline asm
	.loc	1 80 32                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:80:32
	add.s64 	%rd52, %rd61, %rd77;
	.loc	1 80 54                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:80:54
	mov.b32 	%r95, %f95;
	mov.b32 	%r96, %f96;
	mov.b32 	%r97, %f97;
	mov.b32 	%r98, %f98;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd52 + 0 ], { %r95, %r96, %r97, %r98 };
	// end inline asm
	.loc	1 58 39                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:58:39
	add.s64 	%rd53, %rd48, 8192;
	.loc	1 58 54                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:58:54
	// begin inline asm
	mov.u32 %r99, 0x0;
	mov.u32 %r100, 0x0;
	mov.u32 %r101, 0x0;
	mov.u32 %r102, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r99, %r100, %r101, %r102 }, [ %rd53 + 0 ];
	@!%p1 mov.u32 %r99, %r59;
	@!%p1 mov.u32 %r100, %r59;
	@!%p1 mov.u32 %r101, %r59;
	@!%p1 mov.u32 %r102, %r59;
	// end inline asm
	mov.b32 	%f103, %r99;
	mov.b32 	%f104, %r100;
	mov.b32 	%f105, %r101;
	mov.b32 	%f106, %r102;
	.loc	1 59 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:59:36
	add.s64 	%rd54, %rd49, 8192;
	.loc	1 59 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:59:51
	// begin inline asm
	mov.u32 %r107, 0x0;
	mov.u32 %r108, 0x0;
	mov.u32 %r109, 0x0;
	mov.u32 %r110, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r107, %r108, %r109, %r110 }, [ %rd54 + 0 ];
	@!%p1 mov.u32 %r107, %r59;
	@!%p1 mov.u32 %r108, %r59;
	@!%p1 mov.u32 %r109, %r59;
	@!%p1 mov.u32 %r110, %r59;
	// end inline asm
	.loc	1 60 36                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:60:36
	add.s64 	%rd55, %rd50, 8192;
	.loc	1 60 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:60:51
	// begin inline asm
	mov.u32 %r115, 0x0;
	mov.u32 %r116, 0x0;
	mov.u32 %r117, 0x0;
	mov.u32 %r118, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r115, %r116, %r117, %r118 }, [ %rd55 + 0 ];
	@!%p1 mov.u32 %r115, %r59;
	@!%p1 mov.u32 %r116, %r59;
	@!%p1 mov.u32 %r117, %r59;
	@!%p1 mov.u32 %r118, %r59;
	// end inline asm
	.loc	1 61 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:61:24
	add.f32 	%f107, %f31, %f103;
	add.f32 	%f108, %f31, %f104;
	add.f32 	%f109, %f31, %f105;
	add.f32 	%f110, %f31, %f106;
	.loc	1 62 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:62:24
	sub.f32 	%f111, %f107, %f30;
	sub.f32 	%f112, %f108, %f30;
	sub.f32 	%f113, %f109, %f30;
	sub.f32 	%f114, %f110, %f30;
	.loc	1 67 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:67:24
	mul.f32 	%f115, %f27, %f111;
	mul.f32 	%f116, %f27, %f112;
	mul.f32 	%f117, %f27, %f113;
	mul.f32 	%f118, %f27, %f114;
	.loc	1 69 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:69:24
	fma.rn.f32 	%f119, %f115, %f29, %f28;
	fma.rn.f32 	%f120, %f116, %f29, %f28;
	fma.rn.f32 	%f121, %f117, %f29, %f28;
	fma.rn.f32 	%f122, %f118, %f29, %f28;
	.loc	1 70 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:70:24
	add.f32 	%f123, %f40, %f119;
	add.f32 	%f124, %f40, %f120;
	add.f32 	%f125, %f40, %f121;
	add.f32 	%f126, %f40, %f122;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f127, %f65, %f123;
	sub.f32 	%f128, %f65, %f124;
	sub.f32 	%f129, %f65, %f125;
	sub.f32 	%f130, %f65, %f126;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f10, %f127, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f128, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f129, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f130, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f131, %f9, 0f3F800000;
	add.f32 	%f132, %f11, 0f3F800000;
	add.f32 	%f133, %f13, 0f3F800000;
	add.f32 	%f134, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r125, %f131;
	// begin inline asm
	div.full.f32 %r123, %r29, %r125;
	// end inline asm
	mov.b32 	%f135, %r123;
	mov.b32 	%r128, %f132;
	// begin inline asm
	div.full.f32 %r126, %r29, %r128;
	// end inline asm
	mov.b32 	%f136, %r126;
	mov.b32 	%r131, %f133;
	// begin inline asm
	div.full.f32 %r129, %r29, %r131;
	// end inline asm
	mov.b32 	%f137, %r129;
	mov.b32 	%r134, %f134;
	// begin inline asm
	div.full.f32 %r132, %r29, %r134;
	// end inline asm
	mov.b32 	%f138, %r132;
$L__tmp4:
	.loc	1 59 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:59:51
	mov.b32 	%f139, %r107;
	mov.b32 	%f140, %r108;
	mov.b32 	%f141, %r109;
	mov.b32 	%f142, %r110;
	.loc	1 60 51                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:60:51
	mov.b32 	%f143, %r118;
	mov.b32 	%f144, %r117;
	mov.b32 	%f145, %r116;
	mov.b32 	%f146, %r115;
	.loc	1 73 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:73:24
	sub.f32 	%f147, %f86, %f138;
	sub.f32 	%f148, %f86, %f137;
	sub.f32 	%f149, %f86, %f136;
	sub.f32 	%f150, %f86, %f135;
	.loc	1 74 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:74:24
	mul.f32 	%f151, %f150, %f146;
	mul.f32 	%f152, %f149, %f145;
	mul.f32 	%f153, %f148, %f144;
	mul.f32 	%f154, %f147, %f143;
	.loc	1 75 24                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:75:24
	fma.rn.f32 	%f155, %f138, %f142, %f154;
	fma.rn.f32 	%f156, %f137, %f141, %f153;
	fma.rn.f32 	%f157, %f136, %f140, %f152;
	fma.rn.f32 	%f158, %f135, %f139, %f151;
	.loc	1 77 25                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:77:25
	add.f32 	%f159, %f102, %f158;
	add.f32 	%f160, %f101, %f157;
	add.f32 	%f161, %f100, %f156;
	add.f32 	%f162, %f99, %f155;
	.loc	1 78 48                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:78:48
	selp.f32 	%f163, %f162, 0f00000000, %p1;
	selp.f32 	%f164, %f161, 0f00000000, %p1;
	selp.f32 	%f165, %f160, 0f00000000, %p1;
	selp.f32 	%f166, %f159, 0f00000000, %p1;
	.loc	1 79 54                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:79:54
	mov.b32 	%r135, %f107;
	mov.b32 	%r136, %f108;
	mov.b32 	%r137, %f109;
	mov.b32 	%r138, %f110;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd53 + 0 ], { %r135, %r136, %r137, %r138 };
	// end inline asm
	.loc	1 80 32                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:80:32
	add.s64 	%rd57, %rd52, 8192;
	.loc	1 80 54                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:80:54
	mov.b32 	%r139, %f158;
	mov.b32 	%r140, %f157;
	mov.b32 	%r141, %f156;
	mov.b32 	%r142, %f155;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd57 + 0 ], { %r139, %r140, %r141, %r142 };
	// end inline asm
	.loc	1 25 33                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:25:33
	and.b32  	%r164, %r153, 31;
$L__tmp5:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f166, %f165;
	add.f32 	%f168, %f164, %f167;
	add.f32 	%f169, %f163, %f168;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f169;
	shfl.sync.bfly.b32	%r166, %r165, 16, 31, -1;
	mov.b32 	%f170, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f171, %f169, %f170;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f171;
	shfl.sync.bfly.b32	%r168, %r167, 8, 31, -1;
	mov.b32 	%f172, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f173, %f171, %f172;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f173;
	shfl.sync.bfly.b32	%r170, %r169, 4, 31, -1;
	mov.b32 	%f174, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f175, %f173, %f174;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r171, %f175;
	shfl.sync.bfly.b32	%r172, %r171, 2, 31, -1;
	mov.b32 	%f176, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f177, %f175, %f176;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r173, %f177;
	shfl.sync.bfly.b32	%r174, %r173, 1, 31, -1;
	mov.b32 	%f178, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f179, %f177, %f178;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p82, %r164, 0;
	shr.u32 	%r175, %r153, 3;
	and.b32  	%r176, %r175, 60;
	mov.u32 	%r177, global_smem;
	add.s32 	%r143, %r177, %r176;
	mov.b32 	%r144, %f179;
	// begin inline asm
	@%p82 st.shared.b32 [ %r143 + 0 ], %r144;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p83, %r153, 16;
	add.s32 	%r146, %r177, %r161;
	// begin inline asm
	@%p83 ld.shared.b32 %r145, [ %r146 + 0 ];
	// end inline asm
	mov.b32 	%f180, %r145;
	shfl.sync.bfly.b32	%r178, %r145, 8, 31, -1;
	mov.b32 	%f181, %r178;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f182, %f180, %f181;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r179, %f182;
	shfl.sync.bfly.b32	%r180, %r179, 4, 31, -1;
	mov.b32 	%f183, %r180;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f184, %f182, %f183;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r181, %f184;
	shfl.sync.bfly.b32	%r182, %r181, 2, 31, -1;
	mov.b32 	%f185, %r182;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f186, %f184, %f185;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r183, %f186;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f187, %r184;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f188, %f186, %f187;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r185, %r153, 15;
	setp.eq.s32 	%p87, %r185, 0;
	and.pred  	%p84, %p83, %p87;
	mov.b32 	%r148, %f188;
	// begin inline asm
	@%p84 st.shared.b32 [ %r146 + 0 ], %r148;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 83 20                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:83:20
	ld.shared.u32 	%r150, [global_smem];
	mov.b32 	%r151, 1166016512;
	// begin inline asm
	div.full.f32 %r152, %r150, %r151;
	// end inline asm
	.loc	1 84 4                          // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:84:4
	bar.sync 	0;
	.loc	1 85 28                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:85:28
	add.s64 	%rd58, %rd62, %rd65;
	.loc	1 85 40                         // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:85:40
	// begin inline asm
	@%p27 st.global.b32 [ %rd58 + 0 ], { %r152 };
	// end inline asm
	.loc	1 85 4                          // ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py:85:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ty/ctyzoedebtzha5dntjtsbzowqg3j7oqt3q5zw7bfqfvspvdzzx6o.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 262                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xff DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 121
.b8 122
.b8 111
.b8 101
.b8 100
.b8 101
.b8 98
.b8 116
.b8 122
.b8 104
.b8 97
.b8 53
.b8 100
.b8 110
.b8 116
.b8 106
.b8 116
.b8 115
.b8 98
.b8 122
.b8 111
.b8 119
.b8 113
.b8 103
.b8 51
.b8 106
.b8 55
.b8 111
.b8 113
.b8 116
.b8 51
.b8 113
.b8 53
.b8 122
.b8 119
.b8 55
.b8 98
.b8 102
.b8 113
.b8 102
.b8 118
.b8 115
.b8 112
.b8 118
.b8 100
.b8 122
.b8 122
.b8 120
.b8 54
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x60 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc3:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 71                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 81                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
