; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_mul_sin_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %12, i1 %10) #4, !dbg !16
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !16
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !16
  %16 = bitcast i32 %14 to float, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = fmul float %16, 3.000000e+01, !dbg !17
  %19 = fmul float %17, 3.000000e+01, !dbg !17
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !18
  %20 = fmul float %18, 0x3FE45F3060000000, !dbg !18
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not.i = icmp eq i32 %21, 0, !dbg !18
  %22 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %20) #4, !dbg !18
  %23 = tail call i32 @llvm.nvvm.f2i.rn(float %20) #4, !dbg !18
  %.01.i = select i1 %.not.i, i32 %23, i32 %22, !dbg !18
  %24 = sitofp i32 %.01.i to float, !dbg !18
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not15.i = icmp eq i32 %25, 0, !dbg !18
  %26 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %24, float 0xBFF921FB40000000, float %18) #4, !dbg !18
  %27 = tail call float @llvm.nvvm.fma.rn.f(float %24, float 0xBFF921FB40000000, float %18) #4, !dbg !18
  %.02.i = select i1 %.not15.i, float %27, float %26, !dbg !18
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not16.i = icmp eq i32 %28, 0, !dbg !18
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %24, float 0xBE74442D00000000, float %.02.i) #4, !dbg !18
  %30 = tail call float @llvm.nvvm.fma.rn.f(float %24, float 0xBE74442D00000000, float %.02.i) #4, !dbg !18
  %.03.i = select i1 %.not16.i, float %30, float %29, !dbg !18
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not17.i = icmp eq i32 %31, 0, !dbg !18
  %32 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %24, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !18
  %33 = tail call float @llvm.nvvm.fma.rn.f(float %24, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !18
  %.04.i = select i1 %.not17.i, float %33, float %32, !dbg !18
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not18.i = icmp eq i32 %34, 0, !dbg !18
  %35 = tail call float @llvm.nvvm.fabs.ftz.f(float %18) #4, !dbg !18
  %36 = tail call float @llvm.nvvm.fabs.f(float %18) #4, !dbg !18
  %.06.i = select i1 %.not18.i, float %36, float %35, !dbg !18
  %37 = fcmp ult float %.06.i, 1.056150e+05, !dbg !18
  br i1 %37, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !18

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not19.i = icmp eq i32 %38, 0, !dbg !18
  %.07.i = select i1 %.not19.i, float %36, float %35, !dbg !18
  %39 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !18
  br i1 %39, label %__nv_fmul_rn.exit.i.i.i, label %43, !dbg !18

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not27.i = icmp eq i32 %40, 0, !dbg !18
  %41 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %18, float 0.000000e+00) #4, !dbg !18
  %42 = tail call float @llvm.nvvm.mul.rn.f(float %18, float 0.000000e+00) #4, !dbg !18
  %.08.i = select i1 %.not27.i, float %42, float %41, !dbg !18
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !18

43:                                               ; preds = %__nv_isinff.exit.i.i.i
  %44 = bitcast float %18 to i32, !dbg !18
  %45 = lshr i32 %44, 23, !dbg !18
  %46 = and i32 %45, 224, !dbg !18
  %47 = add nsw i32 %46, -128, !dbg !18
  %48 = shl i32 %44, 8, !dbg !18
  %49 = or i32 %48, -2147483648, !dbg !18
  %50 = lshr exact i32 %47, 5, !dbg !18
  br label %51, !dbg !18

51:                                               ; preds = %43, %51
  %indvars.iv = phi i64 [ 0, %43 ], [ %indvars.iv.next, %51 ]
  %hi.i.i.i.0.i56 = phi i32 [ 0, %43 ], [ %56, %51 ]
  %52 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !18
  %53 = load i32, ptr addrspace(1) %52, align 4, !dbg !18
  %54 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %53, i32 %49, i32 %hi.i.i.i.0.i56) #5, !dbg !18, !srcloc !19
  %55 = extractvalue { i32, i32 } %54, 0, !dbg !18
  %56 = extractvalue { i32, i32 } %54, 1, !dbg !18
  %57 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !18
  store i32 %55, ptr %57, align 4, !dbg !18
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !18
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !18
  br i1 %exitcond.not, label %58, label %51, !dbg !18, !llvm.loop !20

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !18
  store i32 %56, ptr %59, align 4, !dbg !18
  %60 = and i32 %45, 31, !dbg !18
  %61 = sub nsw i32 6, %50, !dbg !18
  %62 = sext i32 %61 to i64, !dbg !18
  %63 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %62, !dbg !18
  %64 = load i32, ptr %63, align 4, !dbg !18
  %65 = sub nsw i32 5, %50, !dbg !18
  %66 = sext i32 %65 to i64, !dbg !18
  %67 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %66, !dbg !18
  %68 = load i32, ptr %67, align 4, !dbg !18
  %.not20.i = icmp eq i32 %60, 0, !dbg !18
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %69, !dbg !18

69:                                               ; preds = %58
  %70 = sub nsw i32 4, %50, !dbg !18
  %71 = sub nuw nsw i32 32, %60, !dbg !18
  %72 = shl i32 %64, %60, !dbg !18
  %73 = lshr i32 %68, %71, !dbg !18
  %74 = add i32 %73, %72, !dbg !18
  %75 = shl i32 %68, %60, !dbg !18
  %76 = sext i32 %70 to i64, !dbg !18
  %77 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %76, !dbg !18
  %78 = load i32, ptr %77, align 4, !dbg !18
  %79 = lshr i32 %78, %71, !dbg !18
  %80 = add i32 %79, %75, !dbg !18
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !18

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %69, %58
  %hi.i.i.i.1.i = phi i32 [ %74, %69 ], [ %64, %58 ], !dbg !18
  %lo.i.i.i.0.i = phi i32 [ %80, %69 ], [ %68, %58 ], !dbg !18
  %81 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !18
  %82 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !18
  %83 = shl i32 %lo.i.i.i.0.i, 2, !dbg !18
  %84 = lshr i32 %82, 31, !dbg !18
  %85 = add nuw nsw i32 %84, %81, !dbg !18
  %86 = sub nsw i32 0, %85, !dbg !18
  %.not2123.i = icmp slt i32 %44, 0, !dbg !18
  %spec.select.i = select i1 %.not2123.i, i32 %86, i32 %85, !dbg !18
  %87 = xor i32 %82, %44, !dbg !18
  %.lobit.i = ashr i32 %82, 31, !dbg !18
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %82, !dbg !18
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %83, !dbg !18
  %88 = zext i32 %hi.i.i.i.2.i to i64, !dbg !18
  %89 = shl nuw i64 %88, 32, !dbg !18
  %90 = zext i32 %lo.i.i.i.1.i to i64, !dbg !18
  %91 = or disjoint i64 %89, %90, !dbg !18
  %92 = sitofp i64 %91 to double, !dbg !18
  %93 = fmul double %92, 0x3BF921FB54442D19, !dbg !18
  %94 = fptrunc double %93 to float, !dbg !18
  %95 = fneg float %94, !dbg !18
  %.not2526.i = icmp slt i32 %87, 0, !dbg !18
  %r.i.i.i.0.i = select i1 %.not2526.i, float %95, float %94, !dbg !18
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !18

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !18
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !18
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not28.i = icmp eq i32 %96, 0, !dbg !18
  %97 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !18
  %98 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !18
  %.011.i = select i1 %.not28.i, float %98, float %97, !dbg !18
  %99 = and i32 %i.i.1.i, 1, !dbg !18
  %.not29.i = icmp eq i32 %99, 0, !dbg !18
  %100 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !18
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not30.i = icmp eq i32 %101, 0, !dbg !18
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %100, float 0.000000e+00) #4, !dbg !18
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %100, float 0.000000e+00) #4, !dbg !18
  %.012.i = select i1 %.not30.i, float %103, float %102, !dbg !18
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !18

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not31.i = icmp eq i32 %104, 0, !dbg !18
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !18
  %106 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !18
  %.013.i = select i1 %.not31.i, float %106, float %105, !dbg !18
  br label %__internal_fmad.exit2.i.i.i, !dbg !18

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %107 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !18
  %108 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !18
  %109 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !18
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not32.i = icmp eq i32 %110, 0, !dbg !18
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %109, float %.011.i, float %108) #4, !dbg !18
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %109, float %.011.i, float %108) #4, !dbg !18
  %.010.i = select i1 %.not32.i, float %112, float %111, !dbg !18
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not33.i = icmp eq i32 %113, 0, !dbg !18
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %107) #4, !dbg !18
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %107) #4, !dbg !18
  %.09.i = select i1 %.not33.i, float %115, float %114, !dbg !18
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not34.i = icmp eq i32 %116, 0, !dbg !18
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %100) #4, !dbg !18
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %100) #4, !dbg !18
  %.05.i = select i1 %.not34.i, float %118, float %117, !dbg !18
  %119 = and i32 %i.i.1.i, 2, !dbg !18
  %.not35.i = icmp eq i32 %119, 0, !dbg !18
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !18

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not36.i = icmp eq i32 %120, 0, !dbg !18
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !18
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !18
  %.0.i = select i1 %.not36.i, float %122, float %121, !dbg !18
  br label %__nv_sinf.exit, !dbg !18

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !18
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !18
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !18
  %123 = fmul float %19, 0x3FE45F3060000000, !dbg !18
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not.i2 = icmp eq i32 %124, 0, !dbg !18
  %125 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %123) #4, !dbg !18
  %126 = tail call i32 @llvm.nvvm.f2i.rn(float %123) #4, !dbg !18
  %.01.i3 = select i1 %.not.i2, i32 %126, i32 %125, !dbg !18
  %127 = sitofp i32 %.01.i3 to float, !dbg !18
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not15.i4 = icmp eq i32 %128, 0, !dbg !18
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %127, float 0xBFF921FB40000000, float %19) #4, !dbg !18
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %127, float 0xBFF921FB40000000, float %19) #4, !dbg !18
  %.02.i5 = select i1 %.not15.i4, float %130, float %129, !dbg !18
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not16.i6 = icmp eq i32 %131, 0, !dbg !18
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %127, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !18
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %127, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !18
  %.03.i7 = select i1 %.not16.i6, float %133, float %132, !dbg !18
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not17.i8 = icmp eq i32 %134, 0, !dbg !18
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %127, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !18
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %127, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !18
  %.04.i9 = select i1 %.not17.i8, float %136, float %135, !dbg !18
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not18.i10 = icmp eq i32 %137, 0, !dbg !18
  %138 = tail call float @llvm.nvvm.fabs.ftz.f(float %19) #4, !dbg !18
  %139 = tail call float @llvm.nvvm.fabs.f(float %19) #4, !dbg !18
  %.06.i11 = select i1 %.not18.i10, float %139, float %138, !dbg !18
  %140 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !18
  br i1 %140, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !18

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not19.i13 = icmp eq i32 %141, 0, !dbg !18
  %.07.i14 = select i1 %.not19.i13, float %139, float %138, !dbg !18
  %142 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !18
  br i1 %142, label %__nv_fmul_rn.exit.i.i.i52, label %146, !dbg !18

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not27.i53 = icmp eq i32 %143, 0, !dbg !18
  %144 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %19, float 0.000000e+00) #4, !dbg !18
  %145 = tail call float @llvm.nvvm.mul.rn.f(float %19, float 0.000000e+00) #4, !dbg !18
  %.08.i54 = select i1 %.not27.i53, float %145, float %144, !dbg !18
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !18

146:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %147 = bitcast float %19 to i32, !dbg !18
  %148 = lshr i32 %147, 23, !dbg !18
  %149 = and i32 %148, 224, !dbg !18
  %150 = add nsw i32 %149, -128, !dbg !18
  %151 = shl i32 %147, 8, !dbg !18
  %152 = or i32 %151, -2147483648, !dbg !18
  %153 = lshr exact i32 %150, 5, !dbg !18
  br label %154, !dbg !18

154:                                              ; preds = %146, %154
  %indvars.iv63 = phi i64 [ 0, %146 ], [ %indvars.iv.next64, %154 ]
  %hi.i.i.i.0.i1558 = phi i32 [ 0, %146 ], [ %159, %154 ]
  %155 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv63, !dbg !18
  %156 = load i32, ptr addrspace(1) %155, align 4, !dbg !18
  %157 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %156, i32 %152, i32 %hi.i.i.i.0.i1558) #5, !dbg !18, !srcloc !19
  %158 = extractvalue { i32, i32 } %157, 0, !dbg !18
  %159 = extractvalue { i32, i32 } %157, 1, !dbg !18
  %160 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv63, !dbg !18
  store i32 %158, ptr %160, align 4, !dbg !18
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1, !dbg !18
  %exitcond65.not = icmp eq i64 %indvars.iv.next64, 6, !dbg !18
  br i1 %exitcond65.not, label %161, label %154, !dbg !18, !llvm.loop !22

161:                                              ; preds = %154
  %162 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !18
  store i32 %159, ptr %162, align 4, !dbg !18
  %163 = and i32 %148, 31, !dbg !18
  %164 = sub nsw i32 6, %153, !dbg !18
  %165 = sext i32 %164 to i64, !dbg !18
  %166 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %165, !dbg !18
  %167 = load i32, ptr %166, align 4, !dbg !18
  %168 = sub nsw i32 5, %153, !dbg !18
  %169 = sext i32 %168 to i64, !dbg !18
  %170 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %169, !dbg !18
  %171 = load i32, ptr %170, align 4, !dbg !18
  %.not20.i17 = icmp eq i32 %163, 0, !dbg !18
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %172, !dbg !18

172:                                              ; preds = %161
  %173 = sub nsw i32 4, %153, !dbg !18
  %174 = sub nuw nsw i32 32, %163, !dbg !18
  %175 = shl i32 %167, %163, !dbg !18
  %176 = lshr i32 %171, %174, !dbg !18
  %177 = add i32 %176, %175, !dbg !18
  %178 = shl i32 %171, %163, !dbg !18
  %179 = sext i32 %173 to i64, !dbg !18
  %180 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %179, !dbg !18
  %181 = load i32, ptr %180, align 4, !dbg !18
  %182 = lshr i32 %181, %174, !dbg !18
  %183 = add i32 %182, %178, !dbg !18
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !18

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %172, %161
  %hi.i.i.i.1.i19 = phi i32 [ %177, %172 ], [ %167, %161 ], !dbg !18
  %lo.i.i.i.0.i20 = phi i32 [ %183, %172 ], [ %171, %161 ], !dbg !18
  %184 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !18
  %185 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !18
  %186 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !18
  %187 = lshr i32 %185, 31, !dbg !18
  %188 = add nuw nsw i32 %187, %184, !dbg !18
  %189 = sub nsw i32 0, %188, !dbg !18
  %.not2123.i21 = icmp slt i32 %147, 0, !dbg !18
  %spec.select.i22 = select i1 %.not2123.i21, i32 %189, i32 %188, !dbg !18
  %190 = xor i32 %185, %147, !dbg !18
  %.lobit.i23 = ashr i32 %185, 31, !dbg !18
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %185, !dbg !18
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %186, !dbg !18
  %191 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !18
  %192 = shl nuw i64 %191, 32, !dbg !18
  %193 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !18
  %194 = or disjoint i64 %192, %193, !dbg !18
  %195 = sitofp i64 %194 to double, !dbg !18
  %196 = fmul double %195, 0x3BF921FB54442D19, !dbg !18
  %197 = fptrunc double %196 to float, !dbg !18
  %198 = fneg float %197, !dbg !18
  %.not2526.i27 = icmp slt i32 %190, 0, !dbg !18
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %198, float %197, !dbg !18
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !18

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !18
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !18
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not28.i32 = icmp eq i32 %199, 0, !dbg !18
  %200 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !18
  %201 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !18
  %.011.i33 = select i1 %.not28.i32, float %201, float %200, !dbg !18
  %202 = and i32 %i.i.1.i30, 1, !dbg !18
  %.not29.i34 = icmp eq i32 %202, 0, !dbg !18
  %203 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !18
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not30.i35 = icmp eq i32 %204, 0, !dbg !18
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %203, float 0.000000e+00) #4, !dbg !18
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %203, float 0.000000e+00) #4, !dbg !18
  %.012.i36 = select i1 %.not30.i35, float %206, float %205, !dbg !18
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !18

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not31.i38 = icmp eq i32 %207, 0, !dbg !18
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !18
  %209 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !18
  %.013.i39 = select i1 %.not31.i38, float %209, float %208, !dbg !18
  br label %__internal_fmad.exit2.i.i.i40, !dbg !18

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %210 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !18
  %211 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !18
  %212 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !18
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not32.i41 = icmp eq i32 %213, 0, !dbg !18
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float %.011.i33, float %211) #4, !dbg !18
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float %.011.i33, float %211) #4, !dbg !18
  %.010.i42 = select i1 %.not32.i41, float %215, float %214, !dbg !18
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not33.i43 = icmp eq i32 %216, 0, !dbg !18
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %210) #4, !dbg !18
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %210) #4, !dbg !18
  %.09.i44 = select i1 %.not33.i43, float %218, float %217, !dbg !18
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not34.i45 = icmp eq i32 %219, 0, !dbg !18
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %203) #4, !dbg !18
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %203) #4, !dbg !18
  %.05.i46 = select i1 %.not34.i45, float %221, float %220, !dbg !18
  %222 = and i32 %i.i.1.i30, 2, !dbg !18
  %.not35.i47 = icmp eq i32 %222, 0, !dbg !18
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !18

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !18
  %.not36.i49 = icmp eq i32 %223, 0, !dbg !18
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !18
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !18
  %.0.i50 = select i1 %.not36.i49, float %225, float %224, !dbg !18
  br label %__nv_sinf.exit55, !dbg !18

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !18
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !18
  %226 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !23
  %227 = bitcast float %z.i.i.0.i to i32, !dbg !24
  %228 = bitcast float %z.i.i.0.i51 to i32, !dbg !24
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %227, i32 %228, ptr addrspace(1) %226, i1 %10) #4, !dbg !24
  ret void, !dbg !25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cslcd76vpj4lvvprnverto2mj5aki7k25xi3rccwyipv3ak6b7pc.py", directory: "inductor_cache/sl")
!4 = !{ptr @triton_poi_fused_mul_sin_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sin_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sin_0", linkageName: "triton_poi_fused_mul_sin_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 18, scope: !7)
!18 = !DILocation(line: 28, column: 23, scope: !7)
!19 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.count", i32 1}
!22 = distinct !{!22, !21}
!23 = !DILocation(line: 29, column: 25, scope: !7)
!24 = !DILocation(line: 29, column: 36, scope: !7)
!25 = !DILocation(line: 29, column: 4, scope: !7)
