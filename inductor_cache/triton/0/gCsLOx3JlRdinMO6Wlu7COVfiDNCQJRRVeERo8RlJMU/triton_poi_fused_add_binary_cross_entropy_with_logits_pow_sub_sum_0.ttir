#loc = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":19:0)
module {
  tt.func public @triton_poi_fused_add_binary_cross_entropy_with_logits_pow_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":19:0), %arg3: i32 loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<4xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<4xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<4xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<4xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<4xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<4xi32> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<4xi32> loc(#loc6)
    %6 = arith.muli %4, %cst_4 : tensor<4xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc10)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc11)
    %13 = arith.addi %6, %cst_3 : tensor<4xi32> loc(#loc12)
    %14 = tt.addptr %7, %13 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %10, %13 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.addi %6, %cst_2 : tensor<4xi32> loc(#loc17)
    %19 = tt.addptr %7, %18 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc18)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc19)
    %21 = tt.addptr %10, %18 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc20)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc21)
    %23 = arith.addi %6, %cst_1 : tensor<4xi32> loc(#loc22)
    %24 = tt.addptr %7, %23 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc23)
    %25 = tt.load %24, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc24)
    %26 = tt.addptr %10, %23 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc25)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<4x!tt.ptr<f32>> loc(#loc26)
    %28 = arith.subf %cst_0, %9 : tensor<4xf32> loc(#loc27)
    %29 = arith.mulf %28, %12 : tensor<4xf32> loc(#loc28)
    %30 = arith.cmpf olt, %cst, %12 : tensor<4xf32> loc(#loc72)
    %31 = arith.select %30, %cst, %12 : tensor<4xi1>, tensor<4xf32> loc(#loc73)
    %32 = math.absf %12 : tensor<4xf32> loc(#loc32)
    %33 = arith.subf %cst, %32 : tensor<4xf32> loc(#loc33)
    %34 = math.exp %33 : tensor<4xf32> loc(#loc34)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<4xf32>) -> tensor<4xf32> loc(#loc35)
    %36 = arith.subf %31, %35 : tensor<4xf32> loc(#loc36)
    %37 = arith.subf %29, %36 : tensor<4xf32> loc(#loc37)
    %38 = arith.subf %cst_0, %15 : tensor<4xf32> loc(#loc38)
    %39 = arith.mulf %38, %17 : tensor<4xf32> loc(#loc39)
    %40 = arith.cmpf olt, %cst, %17 : tensor<4xf32> loc(#loc74)
    %41 = arith.select %40, %cst, %17 : tensor<4xi1>, tensor<4xf32> loc(#loc75)
    %42 = math.absf %17 : tensor<4xf32> loc(#loc41)
    %43 = arith.subf %cst, %42 : tensor<4xf32> loc(#loc42)
    %44 = math.exp %43 : tensor<4xf32> loc(#loc43)
    %45 = tt.extern_elementwise %44 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<4xf32>) -> tensor<4xf32> loc(#loc44)
    %46 = arith.subf %41, %45 : tensor<4xf32> loc(#loc45)
    %47 = arith.subf %39, %46 : tensor<4xf32> loc(#loc46)
    %48 = arith.addf %37, %47 : tensor<4xf32> loc(#loc47)
    %49 = arith.subf %cst_0, %20 : tensor<4xf32> loc(#loc48)
    %50 = arith.mulf %49, %22 : tensor<4xf32> loc(#loc49)
    %51 = arith.cmpf olt, %cst, %22 : tensor<4xf32> loc(#loc76)
    %52 = arith.select %51, %cst, %22 : tensor<4xi1>, tensor<4xf32> loc(#loc77)
    %53 = math.absf %22 : tensor<4xf32> loc(#loc51)
    %54 = arith.subf %cst, %53 : tensor<4xf32> loc(#loc52)
    %55 = math.exp %54 : tensor<4xf32> loc(#loc53)
    %56 = tt.extern_elementwise %55 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<4xf32>) -> tensor<4xf32> loc(#loc54)
    %57 = arith.subf %52, %56 : tensor<4xf32> loc(#loc55)
    %58 = arith.subf %50, %57 : tensor<4xf32> loc(#loc56)
    %59 = arith.addf %48, %58 : tensor<4xf32> loc(#loc57)
    %60 = arith.subf %cst_0, %25 : tensor<4xf32> loc(#loc58)
    %61 = arith.mulf %60, %27 : tensor<4xf32> loc(#loc59)
    %62 = arith.cmpf olt, %cst, %27 : tensor<4xf32> loc(#loc78)
    %63 = arith.select %62, %cst, %27 : tensor<4xi1>, tensor<4xf32> loc(#loc79)
    %64 = math.absf %27 : tensor<4xf32> loc(#loc61)
    %65 = arith.subf %cst, %64 : tensor<4xf32> loc(#loc62)
    %66 = math.exp %65 : tensor<4xf32> loc(#loc63)
    %67 = tt.extern_elementwise %66 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<4xf32>) -> tensor<4xf32> loc(#loc64)
    %68 = arith.subf %63, %67 : tensor<4xf32> loc(#loc65)
    %69 = arith.subf %61, %68 : tensor<4xf32> loc(#loc66)
    %70 = arith.addf %59, %69 : tensor<4xf32> loc(#loc67)
    %71 = arith.addf %70, %cst : tensor<4xf32> loc(#loc68)
    %72 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>> loc(#loc69)
    %73 = tt.addptr %72, %4 : tensor<4x!tt.ptr<f32>>, tensor<4xi32> loc(#loc69)
    tt.store %73, %71, %5 : tensor<4x!tt.ptr<f32>> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":21:28)
#loc3 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":21:33)
#loc4 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":22:36)
#loc5 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":22:23)
#loc6 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":23:21)
#loc7 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":25:32)
#loc8 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":25:30)
#loc9 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":25:37)
#loc10 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":26:30)
#loc11 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":26:37)
#loc12 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":27:35)
#loc13 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":27:31)
#loc14 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":27:42)
#loc15 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":28:31)
#loc16 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":28:42)
#loc17 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":29:35)
#loc18 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":29:31)
#loc19 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":29:42)
#loc20 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":30:31)
#loc21 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":30:42)
#loc22 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":31:35)
#loc23 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":31:31)
#loc24 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":31:42)
#loc25 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":32:31)
#loc26 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":32:42)
#loc27 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":34:18)
#loc28 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":35:18)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc30 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":37:40)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc32 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":38:23)
#loc33 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":39:12)
#loc34 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":40:23)
#loc35 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":41:28)
#loc36 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":42:19)
#loc37 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":43:19)
#loc38 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":44:19)
#loc39 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":45:20)
#loc40 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":46:41)
#loc41 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":47:24)
#loc42 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":48:13)
#loc43 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":49:24)
#loc44 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":50:28)
#loc45 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":51:20)
#loc46 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":52:20)
#loc47 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":53:20)
#loc48 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":54:19)
#loc49 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":55:20)
#loc50 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":56:41)
#loc51 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":57:24)
#loc52 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":58:13)
#loc53 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":59:24)
#loc54 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":60:28)
#loc55 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":61:20)
#loc56 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":62:20)
#loc57 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":63:20)
#loc58 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":64:19)
#loc59 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":65:20)
#loc60 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":66:41)
#loc61 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":67:24)
#loc62 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":68:13)
#loc63 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":69:24)
#loc64 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":70:28)
#loc65 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":71:20)
#loc66 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":72:20)
#loc67 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":73:20)
#loc68 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":74:19)
#loc69 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":75:28)
#loc70 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":75:40)
#loc71 = loc("inductor_cache/fm/cfmbhp3jfcnc2mfkuk3da676llpawcaj4xzpwzggjqa4stw6y2d6.py":75:4)
#loc72 = loc(callsite(#loc29 at #loc30))
#loc73 = loc(callsite(#loc31 at #loc30))
#loc74 = loc(callsite(#loc29 at #loc40))
#loc75 = loc(callsite(#loc31 at #loc40))
#loc76 = loc(callsite(#loc29 at #loc50))
#loc77 = loc(callsite(#loc31 at #loc50))
#loc78 = loc(callsite(#loc29 at #loc60))
#loc79 = loc(callsite(#loc31 at #loc60))
