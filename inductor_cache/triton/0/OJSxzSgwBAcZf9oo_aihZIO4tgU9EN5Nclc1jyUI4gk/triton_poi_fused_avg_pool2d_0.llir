; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = shl i32 %8, 4, !dbg !14
  %10 = sext i32 %9 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #1, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = or disjoint i32 %9, 1, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = or disjoint i32 %9, 2, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = or disjoint i32 %9, 3, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !25
  %28 = bitcast i32 %27 to float, !dbg !25
  %29 = or disjoint i32 %9, 4, !dbg !26
  %30 = sext i32 %29 to i64, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !28
  %33 = bitcast i32 %32 to float, !dbg !28
  %34 = or disjoint i32 %9, 5, !dbg !29
  %35 = sext i32 %34 to i64, !dbg !30
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !30
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #1, !dbg !31
  %38 = bitcast i32 %37 to float, !dbg !31
  %39 = or disjoint i32 %9, 6, !dbg !32
  %40 = sext i32 %39 to i64, !dbg !33
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !33
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !34
  %43 = bitcast i32 %42 to float, !dbg !34
  %44 = or disjoint i32 %9, 7, !dbg !35
  %45 = sext i32 %44 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !36
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !37
  %48 = bitcast i32 %47 to float, !dbg !37
  %49 = or disjoint i32 %9, 8, !dbg !38
  %50 = sext i32 %49 to i64, !dbg !39
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !39
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !40
  %53 = bitcast i32 %52 to float, !dbg !40
  %54 = or disjoint i32 %9, 9, !dbg !41
  %55 = sext i32 %54 to i64, !dbg !42
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !42
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #1, !dbg !43
  %58 = bitcast i32 %57 to float, !dbg !43
  %59 = or disjoint i32 %9, 10, !dbg !44
  %60 = sext i32 %59 to i64, !dbg !45
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !45
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !46
  %63 = bitcast i32 %62 to float, !dbg !46
  %64 = or disjoint i32 %9, 11, !dbg !47
  %65 = sext i32 %64 to i64, !dbg !48
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !48
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 true) #1, !dbg !49
  %68 = bitcast i32 %67 to float, !dbg !49
  %69 = or disjoint i32 %9, 12, !dbg !50
  %70 = sext i32 %69 to i64, !dbg !51
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !51
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 true) #1, !dbg !52
  %73 = bitcast i32 %72 to float, !dbg !52
  %74 = or disjoint i32 %9, 13, !dbg !53
  %75 = sext i32 %74 to i64, !dbg !54
  %76 = getelementptr float, ptr addrspace(1) %0, i64 %75, !dbg !54
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %76, i1 true) #1, !dbg !55
  %78 = bitcast i32 %77 to float, !dbg !55
  %79 = or disjoint i32 %9, 14, !dbg !56
  %80 = sext i32 %79 to i64, !dbg !57
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !57
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 true) #1, !dbg !58
  %83 = bitcast i32 %82 to float, !dbg !58
  %84 = or disjoint i32 %9, 15, !dbg !59
  %85 = sext i32 %84 to i64, !dbg !60
  %86 = getelementptr float, ptr addrspace(1) %0, i64 %85, !dbg !60
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %86, i1 true) #1, !dbg !61
  %88 = bitcast i32 %87 to float, !dbg !61
  %89 = fadd float %13, %18, !dbg !62
  %90 = fadd float %89, %23, !dbg !63
  %91 = fadd float %90, %28, !dbg !64
  %92 = fadd float %91, %33, !dbg !65
  %93 = fadd float %92, %38, !dbg !66
  %94 = fadd float %93, %43, !dbg !67
  %95 = fadd float %94, %48, !dbg !68
  %96 = fadd float %95, %53, !dbg !69
  %97 = fadd float %96, %58, !dbg !70
  %98 = fadd float %97, %63, !dbg !71
  %99 = fadd float %98, %68, !dbg !72
  %100 = fadd float %99, %73, !dbg !73
  %101 = fadd float %100, %78, !dbg !74
  %102 = fadd float %101, %83, !dbg !75
  %103 = fadd float %102, %88, !dbg !76
  %104 = fmul float %103, 6.250000e-02, !dbg !77
  %105 = sext i32 %8 to i64, !dbg !78
  %106 = getelementptr float, ptr addrspace(1) %1, i64 %105, !dbg !78
  %107 = bitcast float %104 to i32, !dbg !79
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %107, ptr addrspace(1) %106, i1 true) #1, !dbg !79
  ret void, !dbg !80
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py", directory: "inductor_cache/ll")
!4 = !{ptr @triton_poi_fused_avg_pool2d_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_0", linkageName: "triton_poi_fused_avg_pool2d_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 33, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 38, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 42, scope: !7)
!20 = !DILocation(line: 27, column: 34, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 42, scope: !7)
!23 = !DILocation(line: 28, column: 34, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 42, scope: !7)
!26 = !DILocation(line: 29, column: 34, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 42, scope: !7)
!29 = !DILocation(line: 30, column: 34, scope: !7)
!30 = !DILocation(line: 30, column: 30, scope: !7)
!31 = !DILocation(line: 30, column: 42, scope: !7)
!32 = !DILocation(line: 31, column: 35, scope: !7)
!33 = !DILocation(line: 31, column: 31, scope: !7)
!34 = !DILocation(line: 31, column: 43, scope: !7)
!35 = !DILocation(line: 32, column: 35, scope: !7)
!36 = !DILocation(line: 32, column: 31, scope: !7)
!37 = !DILocation(line: 32, column: 43, scope: !7)
!38 = !DILocation(line: 33, column: 35, scope: !7)
!39 = !DILocation(line: 33, column: 31, scope: !7)
!40 = !DILocation(line: 33, column: 43, scope: !7)
!41 = !DILocation(line: 34, column: 35, scope: !7)
!42 = !DILocation(line: 34, column: 31, scope: !7)
!43 = !DILocation(line: 34, column: 43, scope: !7)
!44 = !DILocation(line: 35, column: 36, scope: !7)
!45 = !DILocation(line: 35, column: 31, scope: !7)
!46 = !DILocation(line: 35, column: 44, scope: !7)
!47 = !DILocation(line: 36, column: 36, scope: !7)
!48 = !DILocation(line: 36, column: 31, scope: !7)
!49 = !DILocation(line: 36, column: 44, scope: !7)
!50 = !DILocation(line: 37, column: 36, scope: !7)
!51 = !DILocation(line: 37, column: 31, scope: !7)
!52 = !DILocation(line: 37, column: 44, scope: !7)
!53 = !DILocation(line: 38, column: 36, scope: !7)
!54 = !DILocation(line: 38, column: 31, scope: !7)
!55 = !DILocation(line: 38, column: 44, scope: !7)
!56 = !DILocation(line: 39, column: 36, scope: !7)
!57 = !DILocation(line: 39, column: 31, scope: !7)
!58 = !DILocation(line: 39, column: 44, scope: !7)
!59 = !DILocation(line: 40, column: 36, scope: !7)
!60 = !DILocation(line: 40, column: 31, scope: !7)
!61 = !DILocation(line: 40, column: 44, scope: !7)
!62 = !DILocation(line: 41, column: 18, scope: !7)
!63 = !DILocation(line: 42, column: 18, scope: !7)
!64 = !DILocation(line: 43, column: 18, scope: !7)
!65 = !DILocation(line: 44, column: 18, scope: !7)
!66 = !DILocation(line: 45, column: 19, scope: !7)
!67 = !DILocation(line: 46, column: 20, scope: !7)
!68 = !DILocation(line: 47, column: 20, scope: !7)
!69 = !DILocation(line: 48, column: 20, scope: !7)
!70 = !DILocation(line: 49, column: 20, scope: !7)
!71 = !DILocation(line: 50, column: 20, scope: !7)
!72 = !DILocation(line: 51, column: 20, scope: !7)
!73 = !DILocation(line: 52, column: 20, scope: !7)
!74 = !DILocation(line: 53, column: 20, scope: !7)
!75 = !DILocation(line: 54, column: 20, scope: !7)
!76 = !DILocation(line: 55, column: 20, scope: !7)
!77 = !DILocation(line: 57, column: 20, scope: !7)
!78 = !DILocation(line: 58, column: 25, scope: !7)
!79 = !DILocation(line: 58, column: 37, scope: !7)
!80 = !DILocation(line: 58, column: 4, scope: !7)
