//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_embedding_mean_pow_sub_3 // -- Begin function triton_red_fused_add_embedding_mean_pow_sub_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 121, 110, 47, 99, 121, 110, 115, 55, 106, 105, 103, 120, 97, 54, 112, 103, 117, 115, 122, 103, 101, 55, 108, 120, 121, 117, 51, 108, 102, 120, 116, 104, 97, 109, 122, 98, 109, 112, 105, 97, 115, 117, 122, 108, 111, 107, 101, 114, 119, 103, 114, 53, 122, 121, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_add_embedding_mean_pow_sub_3
.visible .entry triton_red_fused_add_embedding_mean_pow_sub_3(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_embedding_mean_pow_sub_3_param_4,
	.param .u32 triton_red_fused_add_embedding_mean_pow_sub_3_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<39>;
	.reg .b32 	%r<57>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<70>;
	.loc	1 19 0                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_red_fused_add_embedding_mean_pow_sub_3_param_2];
$L__tmp0:
	.loc	1 25 33                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:25:33
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd16, [triton_red_fused_add_embedding_mean_pow_sub_3_param_1];
	and.b32  	%r8, %r1, 63;
	.loc	1 33 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:34
	mul.wide.u32 	%rd17, %r8, 4;
	add.s64 	%rd13, %rd16, %rd17;
	mov.b32 	%r7, 0;
	mov.pred 	%p4, -1;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r6 }, [ %rd13 + 0 ];
	@!%p4 mov.u32 %r6, %r7;
	// end inline asm
	.loc	1 34 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:34
	mul.wide.u32 	%rd18, %r8, 2;
	and.b64  	%rd19, %rd18, 120;
	add.s64 	%rd15, %rd10, %rd19;
	.loc	1 34 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:39
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd14 }, [ %rd15 + 0 ];
	@!%p4 mov.u64 %rd14, 0x0;
	// end inline asm
	.loc	1 38 36                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:38:36
	shr.u64 	%rd20, %rd14, 61;
	and.b64  	%rd21, %rd20, 4;
	add.s64 	%rd4, %rd21, %rd14;
	.loc	1 39 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:41
	setp.lt.u64 	%p5, %rd4, 4;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 64                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:0:64
	ld.param.u64 	%rd12, [triton_red_fused_add_embedding_mean_pow_sub_3_param_4];
	ld.param.u64 	%rd11, [triton_red_fused_add_embedding_mean_pow_sub_3_param_3];
	shl.b32 	%r9, %r1, 2;
	and.b32  	%r10, %r9, 12;
	cvt.u64.u32 	%rd1, %r10;
	cvt.u64.u32 	%rd2, %r8;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	mov.b32 	%f4, %r6;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	bar.sync 	0;
	.loc	1 40 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:41
	or.b64  	%rd27, %rd4, %rd1;
	.loc	1 40 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:34
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd22, %rd11, %rd28;
	.loc	1 40 48                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:48
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r11 }, [ %rd22 + 0 ];
	@!%p4 mov.u32 %r11, %r7;
	// end inline asm
	mov.b32 	%f5, %r11;
	.loc	1 41 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:41:22
	sub.f32 	%f1, %f5, %f4;
	.loc	1 42 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:42:22
	add.f32 	%f6, %f1, %f4;
	.loc	1 47 29                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:29
	shl.b64 	%rd29, %rd2, 2;
	add.s64 	%rd23, %rd12, %rd29;
	.loc	1 47 75                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:75
	mov.b32 	%r13, %f6;
	// begin inline asm
	@%p4 st.global.b32 [ %rd23 + 0 ], { %r13 };
	// end inline asm
	.loc	1 28 27                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:28:27
	shl.b64 	%rd30, %rd2, 1;
	.loc	1 33 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:34
	add.s64 	%rd24, %rd13, 256;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r14 }, [ %rd24 + 0 ];
	@!%p4 mov.u32 %r14, %r7;
	// end inline asm
	.loc	1 34 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:34
	or.b64  	%rd31, %rd30, 128;
	and.b64  	%rd32, %rd31, 248;
	add.s64 	%rd26, %rd10, %rd32;
	.loc	1 34 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:39
	// begin inline asm
	mov.u64 %rd25, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd25 }, [ %rd26 + 0 ];
	@!%p4 mov.u64 %rd25, 0x0;
	// end inline asm
	.loc	1 38 36                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:38:36
	shr.u64 	%rd33, %rd25, 61;
	and.b64  	%rd34, %rd33, 4;
	add.s64 	%rd6, %rd34, %rd25;
	.loc	1 39 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:41
	setp.gt.u64 	%p13, %rd6, 3;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	@%p13 bra 	$L__BB0_1;
// %bb.3:
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	mov.b32 	%f7, %r14;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	bar.sync 	0;
	.loc	1 40 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:41
	or.b64  	%rd40, %rd6, %rd1;
	.loc	1 40 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:34
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd35, %rd11, %rd41;
	.loc	1 40 48                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:48
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r16 }, [ %rd35 + 0 ];
	@!%p4 mov.u32 %r16, %r7;
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 41 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:41:22
	sub.f32 	%f2, %f8, %f7;
	.loc	1 42 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:42:22
	add.f32 	%f9, %f2, %f7;
	.loc	1 47 29                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:29
	add.s64 	%rd36, %rd23, 256;
	.loc	1 47 75                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:75
	mov.b32 	%r18, %f9;
	// begin inline asm
	@%p4 st.global.b32 [ %rd36 + 0 ], { %r18 };
	// end inline asm
	.loc	1 33 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:34
	add.s64 	%rd37, %rd13, 512;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r19 }, [ %rd37 + 0 ];
	@!%p4 mov.u32 %r19, %r7;
	// end inline asm
	.loc	1 34 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:34
	or.b64  	%rd43, %rd30, 256;
	and.b64  	%rd44, %rd43, 376;
	add.s64 	%rd39, %rd10, %rd44;
	.loc	1 34 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:39
	// begin inline asm
	mov.u64 %rd38, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd38 }, [ %rd39 + 0 ];
	@!%p4 mov.u64 %rd38, 0x0;
	// end inline asm
	.loc	1 38 36                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:38:36
	shr.u64 	%rd45, %rd38, 61;
	and.b64  	%rd46, %rd45, 4;
	add.s64 	%rd7, %rd46, %rd38;
	.loc	1 39 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:41
	setp.gt.u64 	%p21, %rd7, 3;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	@%p21 bra 	$L__BB0_1;
// %bb.4:
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	mov.b32 	%f10, %r19;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	bar.sync 	0;
	.loc	1 40 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:41
	or.b64  	%rd52, %rd7, %rd1;
	.loc	1 40 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:34
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd47, %rd11, %rd53;
	.loc	1 40 48                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:48
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r21 }, [ %rd47 + 0 ];
	@!%p4 mov.u32 %r21, %r7;
	// end inline asm
	mov.b32 	%f11, %r21;
	.loc	1 41 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:41:22
	sub.f32 	%f3, %f11, %f10;
	.loc	1 42 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:42:22
	add.f32 	%f12, %f3, %f10;
	.loc	1 47 29                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:29
	add.s64 	%rd48, %rd23, 512;
	.loc	1 47 75                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:75
	mov.b32 	%r23, %f12;
	// begin inline asm
	@%p4 st.global.b32 [ %rd48 + 0 ], { %r23 };
	// end inline asm
	.loc	1 33 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:34
	add.s64 	%rd49, %rd13, 768;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r24 }, [ %rd49 + 0 ];
	@!%p4 mov.u32 %r24, %r7;
	// end inline asm
	.loc	1 34 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:34
	or.b64  	%rd55, %rd30, 384;
	and.b64  	%rd56, %rd55, 504;
	add.s64 	%rd51, %rd10, %rd56;
	.loc	1 34 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:34:39
	// begin inline asm
	mov.u64 %rd50, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd50 }, [ %rd51 + 0 ];
	@!%p4 mov.u64 %rd50, 0x0;
	// end inline asm
	.loc	1 38 36                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:38:36
	shr.u64 	%rd57, %rd50, 61;
	and.b64  	%rd58, %rd57, 4;
	add.s64 	%rd8, %rd58, %rd50;
	.loc	1 39 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:41
	setp.gt.u64 	%p29, %rd8, 3;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	@%p29 bra 	$L__BB0_1;
// %bb.5:
	.loc	1 0 64                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:0:64
	ld.param.u64 	%rd61, [triton_red_fused_add_embedding_mean_pow_sub_3_param_0];
	cvt.u32.u64 	%r39, %rd2;
	.loc	1 43 23                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:43:23
	mul.f32 	%f13, %f2, %f2;
	.loc	1 45 25                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:45:25
	fma.rn.f32 	%f14, %f1, %f1, %f13;
	fma.rn.f32 	%f15, %f3, %f3, %f14;
	.loc	1 33 39                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:33:39
	mov.b32 	%f16, %r24;
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	bar.sync 	0;
	.loc	1 40 41                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:41
	or.b64  	%rd62, %rd8, %rd1;
	.loc	1 40 34                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:34
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd59, %rd11, %rd63;
	.loc	1 40 48                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:40:48
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r26 }, [ %rd59 + 0 ];
	@!%p4 mov.u32 %r26, %r7;
	// end inline asm
	mov.b32 	%f17, %r26;
	.loc	1 41 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:41:22
	sub.f32 	%f18, %f17, %f16;
	.loc	1 42 22                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:42:22
	add.f32 	%f19, %f18, %f16;
	.loc	1 45 25                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:45:25
	fma.rn.f32 	%f20, %f18, %f18, %f15;
	.loc	1 47 29                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:29
	add.s64 	%rd60, %rd23, 768;
	.loc	1 47 75                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:47:75
	mov.b32 	%r28, %f19;
	// begin inline asm
	@%p4 st.global.b32 [ %rd60 + 0 ], { %r28 };
	// end inline asm
	.loc	1 25 33                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:25:33
	and.b32  	%r40, %r1, 31;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f20;
	shfl.sync.bfly.b32	%r42, %r41, 16, 31, -1;
	mov.b32 	%f21, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f22;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f23, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f24;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f25, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f26;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f27, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f28;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f29, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p33, %r40, 0;
	shr.u32 	%r51, %r1, 3;
	and.b32  	%r52, %r51, 4;
	mov.u32 	%r53, global_smem;
	add.s32 	%r29, %r53, %r52;
	mov.b32 	%r30, %f30;
	// begin inline asm
	@%p33 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p34, %r1, 2;
	add.s32 	%r32, %r53, %r9;
	// begin inline asm
	@%p34 ld.shared.b32 %r31, [ %r32 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r31;
	shfl.sync.bfly.b32	%r55, %r31, 1, 31, -1;
	mov.b32 	%f32, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r56, %r1, 1;
	setp.eq.b32 	%p37, %r56, 1;
	not.pred 	%p38, %p37;
	and.pred  	%p35, %p34, %p38;
	mov.b32 	%r34, %f33;
	// begin inline asm
	@%p35 st.shared.b32 [ %r32 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 50 20                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:50:20
	ld.shared.u32 	%r36, [global_smem];
	mov.b32 	%r37, 1132462080;
	// begin inline asm
	div.full.f32 %r38, %r36, %r37;
	// end inline asm
	.loc	1 51 4                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:51:4
	bar.sync 	0;
	.loc	1 52 71                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:52:71
	setp.eq.s32 	%p36, %r39, 0;
	// begin inline asm
	@%p36 st.global.b32 [ %rd61 + 0 ], { %r38 };
	// end inline asm
	.loc	1 52 4                          // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:52:4
	ret;
$L__BB0_1:
	.loc	1 39 64                         // cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py:39:64
	mov.u64 	%rd64, assertMessage_0;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, assertFile_0;
	cvta.global.u64 	%rd67, %rd66;
	mov.u64 	%rd68, assertFunc_0;
	cvta.global.u64 	%rd69, %rd68;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd65;
	.param .b64 param1;
	st.param.b64 	[param1], %rd67;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd69;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yn/cyns7jigxa6pguszge7lxyu3lfxthamzbmpiasuzlokerwgr5zyb.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 190                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 110
.b8 115
.b8 55
.b8 106
.b8 105
.b8 103
.b8 120
.b8 97
.b8 54
.b8 112
.b8 103
.b8 117
.b8 115
.b8 122
.b8 103
.b8 101
.b8 55
.b8 108
.b8 120
.b8 121
.b8 117
.b8 51
.b8 108
.b8 102
.b8 120
.b8 116
.b8 104
.b8 97
.b8 109
.b8 122
.b8 98
.b8 109
.b8 112
.b8 105
.b8 97
.b8 115
.b8 117
.b8 122
.b8 108
.b8 111
.b8 107
.b8 101
.b8 114
.b8 119
.b8 103
.b8 114
.b8 53
.b8 122
.b8 121
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x30 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x93:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
