#loc = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":19:0)
#loc1 = loc(unknown)
#loc70 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":104:26)
#loc98 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":129:26)
#loc113 = loc(callsite(#loc1 at #loc70))
#loc118 = loc(callsite(#loc1 at #loc98))
module {
  tt.func public @triton_per_fused_add_exp_mean_mul_stack_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":19:0), %arg4: i32 loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 2.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 1.600000e+01 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<1.200000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<-5.000000e-03> : tensor<1x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<-2.000000e-02> : tensor<1x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<-5.000000e-01> : tensor<1x16xf32> loc(#loc1)
    %cst_5 = arith.constant dense<-9> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<1x16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<1x16xi64> loc(#loc1)
    %cst_8 = arith.constant dense<-6> : tensor<1x16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<9> : tensor<1x16xi64> loc(#loc1)
    %cst_10 = arith.constant dense<6> : tensor<1x16xi32> loc(#loc1)
    %cst_11 = arith.constant dense<-1> : tensor<1x16xi32> loc(#loc1)
    %cst_12 = arith.constant dense<1> : tensor<1x16xi64> loc(#loc1)
    %cst_13 = arith.constant dense<-3> : tensor<1x16xi32> loc(#loc1)
    %cst_14 = arith.constant dense<6> : tensor<1x16xi64> loc(#loc1)
    %cst_15 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_16 = arith.constant dense<1> : tensor<1x16xi32> loc(#loc1)
    %cst_17 = arith.constant dense<3> : tensor<1x16xi64> loc(#loc1)
    %c11_i32 = arith.constant 11 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst_18 = arith.constant dense<12> : tensor<1x16xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_18 : tensor<1x16xi32> loc(#loc4)
    %3 = tt.addptr %arg1, %c4_i32 : !tt.ptr<f32>, i32 loc(#loc5)
    %4 = tt.load %3 : !tt.ptr<f32> loc(#loc6)
    %5 = tt.splat %4 : f32 -> tensor<1x16xf32> loc(#loc7)
    %6 = tt.addptr %arg1, %c11_i32 : !tt.ptr<f32>, i32 loc(#loc8)
    %7 = tt.load %6 : !tt.ptr<f32> loc(#loc9)
    %8 = tt.splat %7 : f32 -> tensor<1x16xf32> loc(#loc10)
    %9 = tt.addptr %arg2, %c4_i32 : !tt.ptr<f32>, i32 loc(#loc11)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc12)
    %11 = tt.splat %10 : f32 -> tensor<1x16xf32> loc(#loc13)
    %12 = tt.addptr %arg2, %c11_i32 : !tt.ptr<f32>, i32 loc(#loc14)
    %13 = tt.load %12 : !tt.ptr<f32> loc(#loc15)
    %14 = tt.splat %13 : f32 -> tensor<1x16xf32> loc(#loc16)
    %15 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc17)
    %16 = tt.load %15 : !tt.ptr<f32> loc(#loc18)
    %17 = arith.extsi %1 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc19)
    %18 = arith.cmpi slt, %17, %cst_17 : tensor<1x16xi64> loc(#loc19)
    %19 = arith.addi %1, %cst_16 : tensor<1x16xi32> loc(#loc20)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc21)
    %21 = tt.addptr %20, %19 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %22 = arith.andi %2, %18 : tensor<1x16xi1> loc(#loc22)
    %23 = tt.load %21, %22, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.cmpi sge, %17, %cst_17 : tensor<1x16xi64> loc(#loc24)
    %25 = arith.cmpi slt, %17, %cst_14 : tensor<1x16xi64> loc(#loc25)
    %26 = arith.andi %24, %25 : tensor<1x16xi1> loc(#loc26)
    %27 = arith.addi %1, %cst_13 : tensor<1x16xi32> loc(#loc27)
    %28 = arith.extsi %27 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc28)
    %29 = arith.cmpi slt, %28, %cst_12 : tensor<1x16xi64> loc(#loc28)
    %30 = arith.cmpi sge, %28, %cst_12 : tensor<1x16xi64> loc(#loc29)
    %31 = arith.andi %30, %26 : tensor<1x16xi1> loc(#loc30)
    %32 = arith.addi %27, %cst_11 : tensor<1x16xi32> loc(#loc31)
    %33 = arith.addi %32, %cst_10 : tensor<1x16xi32> loc(#loc32)
    %34 = tt.addptr %20, %33 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc33)
    %35 = arith.andi %2, %31 : tensor<1x16xi1> loc(#loc34)
    %36 = tt.load %34, %35, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc35)
    %37 = arith.select %29, %5, %36 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc36)
    %38 = arith.cmpi sge, %17, %cst_14 : tensor<1x16xi64> loc(#loc37)
    %39 = arith.cmpi slt, %17, %cst_9 : tensor<1x16xi64> loc(#loc38)
    %40 = arith.andi %38, %39 : tensor<1x16xi1> loc(#loc39)
    %41 = arith.addi %1, %cst_8 : tensor<1x16xi32> loc(#loc40)
    %42 = arith.extsi %41 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc41)
    %43 = arith.cmpi slt, %42, %cst_7 : tensor<1x16xi64> loc(#loc41)
    %44 = arith.andi %43, %40 : tensor<1x16xi1> loc(#loc42)
    %45 = arith.addi %41, %cst_6 : tensor<1x16xi32> loc(#loc43)
    %46 = tt.addptr %20, %45 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc44)
    %47 = arith.andi %2, %44 : tensor<1x16xi1> loc(#loc45)
    %48 = tt.load %46, %47, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc46)
    %49 = arith.select %43, %48, %8 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc47)
    %50 = arith.cmpi sge, %17, %cst_9 : tensor<1x16xi64> loc(#loc48)
    %51 = arith.addi %1, %cst_5 : tensor<1x16xi32> loc(#loc49)
    %52 = arith.addi %51, %cst_18 : tensor<1x16xi32> loc(#loc50)
    %53 = tt.addptr %20, %52 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc51)
    %54 = arith.andi %2, %50 : tensor<1x16xi1> loc(#loc52)
    %55 = tt.load %53, %54, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc53)
    %56 = arith.select %40, %49, %55 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc110)
    %57 = arith.select %26, %37, %56 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc111)
    %58 = arith.select %18, %23, %57 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc58)
    %59 = arith.mulf %58, %cst_4 : tensor<1x16xf32> loc(#loc59)
    %60 = math.exp %59 : tensor<1x16xf32> loc(#loc60)
    %61 = arith.addf %60, %cst_15 : tensor<1x16xf32> loc(#loc61)
    %62 = arith.mulf %58, %cst_3 : tensor<1x16xf32> loc(#loc62)
    %63 = math.exp %62 : tensor<1x16xf32> loc(#loc63)
    %64 = arith.addf %61, %63 : tensor<1x16xf32> loc(#loc64)
    %65 = arith.mulf %58, %cst_2 : tensor<1x16xf32> loc(#loc65)
    %66 = math.exp %65 : tensor<1x16xf32> loc(#loc66)
    %67 = arith.addf %64, %66 : tensor<1x16xf32> loc(#loc67)
    %68 = arith.select %2, %67, %cst_15 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc68)
    %69 = "tt.reduce"(%68) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc70)), %arg6: f32 loc(callsite(#loc1 at #loc70))):
      %106 = arith.addf %arg5, %arg6 : f32 loc(#loc119)
      tt.reduce.return %106 : f32 loc(#loc112)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc112)
    %70 = tt.expand_dims %69 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc72)
    %71 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc73)
    %72 = tt.addptr %71, %19 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc73)
    %73 = tt.load %72, %22, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc74)
    %74 = tt.addptr %71, %33 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc75)
    %75 = tt.load %74, %35, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc76)
    %76 = arith.select %29, %11, %75 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc77)
    %77 = tt.addptr %71, %45 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc78)
    %78 = tt.load %77, %47, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc79)
    %79 = arith.select %43, %78, %14 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc80)
    %80 = tt.addptr %71, %52 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc81)
    %81 = tt.load %80, %54, %cst_15 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc82)
    %82 = arith.select %40, %79, %81 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc115)
    %83 = arith.select %26, %76, %82 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc116)
    %84 = arith.select %18, %73, %83 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc87)
    %85 = arith.mulf %84, %cst_4 : tensor<1x16xf32> loc(#loc88)
    %86 = math.exp %85 : tensor<1x16xf32> loc(#loc89)
    %87 = arith.addf %86, %cst_15 : tensor<1x16xf32> loc(#loc90)
    %88 = arith.mulf %84, %cst_3 : tensor<1x16xf32> loc(#loc91)
    %89 = math.exp %88 : tensor<1x16xf32> loc(#loc92)
    %90 = arith.addf %87, %89 : tensor<1x16xf32> loc(#loc93)
    %91 = arith.mulf %84, %cst_2 : tensor<1x16xf32> loc(#loc94)
    %92 = math.exp %91 : tensor<1x16xf32> loc(#loc95)
    %93 = arith.addf %90, %92 : tensor<1x16xf32> loc(#loc96)
    %94 = arith.select %2, %93, %cst_15 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc97)
    %95 = "tt.reduce"(%94) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc98)), %arg6: f32 loc(callsite(#loc1 at #loc98))):
      %106 = arith.addf %arg5, %arg6 : f32 loc(#loc120)
      tt.reduce.return %106 : f32 loc(#loc117)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc117)
    %96 = tt.expand_dims %95 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc99)
    %97 = arith.divf %70, %cst_1 : tensor<1x1xf32> loc(#loc100)
    %98 = arith.divf %96, %cst_1 : tensor<1x1xf32> loc(#loc101)
    %99 = arith.addf %97, %98 : tensor<1x1xf32> loc(#loc102)
    %100 = arith.divf %16, %cst_0 : f32 loc(#loc103)
    %101 = arith.mulf %100, %cst : f32 loc(#loc104)
    %102 = tt.splat %101 : f32 -> tensor<1x1xf32> loc(#loc104)
    %103 = arith.subf %99, %102 : tensor<1x1xf32> loc(#loc105)
    gpu.barrier loc(#loc106)
    %104 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc107)
    %105 = tt.splat %104 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc107)
    tt.store %105, %103 : tensor<1x1x!tt.ptr<f32>> loc(#loc108)
    tt.return loc(#loc109)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":26:26)
#loc3 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":26:34)
#loc4 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":28:21)
#loc5 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":30:31)
#loc6 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":30:20)
#loc7 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":31:35)
#loc8 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":32:31)
#loc9 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":32:20)
#loc10 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":33:35)
#loc11 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":34:31)
#loc12 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":34:20)
#loc13 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":35:35)
#loc14 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":36:31)
#loc15 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":36:20)
#loc16 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":37:35)
#loc17 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":38:32)
#loc18 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":38:21)
#loc19 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":44:18)
#loc20 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":45:51)
#loc21 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":45:30)
#loc22 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":45:84)
#loc23 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":45:76)
#loc24 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":46:19)
#loc25 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":48:18)
#loc26 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":49:18)
#loc27 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":50:35)
#loc28 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":54:20)
#loc29 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":56:21)
#loc30 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":59:20)
#loc31 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":60:60)
#loc32 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":60:52)
#loc33 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":60:31)
#loc34 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":60:101)
#loc35 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":60:93)
#loc36 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":61:35)
#loc37 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":64:20)
#loc38 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":66:19)
#loc39 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":67:20)
#loc40 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":68:35)
#loc41 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":72:20)
#loc42 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":73:20)
#loc43 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":74:52)
#loc44 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":74:31)
#loc45 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":74:92)
#loc46 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":74:84)
#loc47 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":79:35)
#loc48 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":82:20)
#loc49 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":85:60)
#loc50 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":85:53)
#loc51 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":85:31)
#loc52 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":85:93)
#loc53 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":85:85)
#loc54 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":86:35)
#loc55 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":81:35)
#loc56 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":87:34)
#loc57 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":63:34)
#loc58 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":88:33)
#loc59 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":90:20)
#loc60 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":91:24)
#loc61 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":93:20)
#loc62 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":95:20)
#loc63 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":96:24)
#loc64 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":97:20)
#loc65 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":99:20)
#loc66 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":100:24)
#loc67 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":101:20)
#loc68 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":103:35)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc72 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":104:29)
#loc73 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":105:31)
#loc74 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":105:77)
#loc75 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":106:31)
#loc76 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":106:93)
#loc77 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":107:35)
#loc78 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":110:31)
#loc79 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":110:84)
#loc80 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":111:35)
#loc81 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":114:31)
#loc82 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":114:85)
#loc83 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":115:35)
#loc84 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":113:35)
#loc85 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":116:34)
#loc86 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":109:34)
#loc87 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":117:34)
#loc88 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":118:20)
#loc89 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":119:24)
#loc90 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":120:20)
#loc91 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":121:20)
#loc92 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":122:24)
#loc93 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":123:20)
#loc94 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":124:20)
#loc95 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":125:24)
#loc96 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":126:20)
#loc97 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":128:35)
#loc99 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":129:29)
#loc100 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":131:21)
#loc101 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":132:21)
#loc102 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":133:22)
#loc103 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":135:22)
#loc104 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":137:22)
#loc105 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":138:22)
#loc106 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":139:4)
#loc107 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":140:28)
#loc108 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":140:72)
#loc109 = loc("inductor_cache/5f/c5frlkre2od4th5r447dzpxlychbmsdo6xdrymzttksck3y6kro7.py":140:4)
#loc110 = loc(fused[#loc54, #loc55])
#loc111 = loc(fused[#loc56, #loc57])
#loc112 = loc(callsite(#loc69 at #loc70))
#loc114 = loc(callsite(#loc71 at #loc69))
#loc115 = loc(fused[#loc83, #loc84])
#loc116 = loc(fused[#loc85, #loc86])
#loc117 = loc(callsite(#loc69 at #loc98))
#loc119 = loc(callsite(#loc114 at #loc70))
#loc120 = loc(callsite(#loc114 at #loc98))
