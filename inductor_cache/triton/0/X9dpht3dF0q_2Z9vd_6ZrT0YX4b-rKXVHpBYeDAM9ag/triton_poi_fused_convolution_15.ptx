//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_15 // -- Begin function triton_poi_fused_convolution_15
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_15
.visible .entry triton_poi_fused_convolution_15(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_15_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_15_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_15_param_2,
	.param .u32 triton_poi_fused_convolution_15_param_3,
	.param .u32 triton_poi_fused_convolution_15_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<155>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_15_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_15_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:22:33
	shl.b32 	%r71, %r1, 6;
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_15_param_2];
	.loc	1 23 44                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:23:44
	mov.u32 	%r72, %tid.x;
	shl.b32 	%r73, %r72, 2;
	and.b32  	%r74, %r73, 60;
	bfe.u32 	%r75, %r72, 4, 4;
	or.b32  	%r76, %r75, 16;
	or.b32  	%r77, %r75, 32;
	or.b32  	%r78, %r75, 48;
	.loc	1 23 23                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:23:23
	or.b32  	%r79, %r71, %r74;
	or.b32  	%r80, %r71, %r75;
	or.b32  	%r81, %r71, %r76;
	or.b32  	%r82, %r71, %r77;
	or.b32  	%r83, %r71, %r78;
	.loc	1 24 21                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:24:21
	setp.lt.s32 	%p5, %r79, 512;
	setp.lt.s32 	%p26, %r80, 512;
	setp.lt.s32 	%p27, %r81, 512;
	setp.lt.s32 	%p28, %r82, 512;
	setp.lt.s32 	%p29, %r83, 512;
	.loc	1 25 28                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:25:33
	shl.b32 	%r84, %r2, 6;
	.loc	1 26 23                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:26:23
	or.b32  	%r85, %r84, %r75;
	or.b32  	%r86, %r84, %r76;
	or.b32  	%r87, %r84, %r77;
	or.b32  	%r88, %r84, %r78;
	or.b32  	%r89, %r84, %r74;
	.loc	1 27 21                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:27:21
	setp.lt.s32 	%p30, %r85, 64;
	setp.lt.s32 	%p31, %r86, 64;
	setp.lt.s32 	%p32, %r87, 64;
	setp.lt.s32 	%p33, %r88, 64;
	setp.lt.s32 	%p34, %r89, 64;
	.loc	1 30 19                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:30:19
	shr.s32 	%r91, %r79, 31;
	shr.u32 	%r92, %r91, 25;
	add.s32 	%r93, %r79, %r92;
	.loc	1 29 19                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:29:19
	and.b32  	%r94, %r93, -128;
	sub.s32 	%r95, %r79, %r94;
	.loc	1 32 39                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:39
	shl.b32 	%r96, %r85, 7;
	shl.b32 	%r97, %r86, 7;
	shl.b32 	%r98, %r87, 7;
	shl.b32 	%r99, %r88, 7;
	.loc	1 32 49                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:49
	shl.b32 	%r100, %r93, 6;
	and.b32  	%r101, %r100, -8192;
	.loc	1 32 35                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:35
	add.s32 	%r102, %r101, %r95;
	.loc	1 32 44                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:44
	add.s32 	%r103, %r102, %r96;
	add.s32 	%r104, %r102, %r97;
	add.s32 	%r105, %r102, %r98;
	add.s32 	%r106, %r102, %r99;
	.loc	1 32 30                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:30
	mul.wide.s32 	%rd13, %r103, 4;
	add.s64 	%rd1, %rd10, %rd13;
	mul.wide.s32 	%rd14, %r104, 4;
	add.s64 	%rd2, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r105, 4;
	add.s64 	%rd3, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r106, 4;
	add.s64 	%rd4, %rd10, %rd16;
	.loc	1 32 62                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:62
	and.pred  	%p1, %p5, %p30;
	and.pred  	%p2, %p5, %p31;
	and.pred  	%p3, %p5, %p32;
	and.pred  	%p4, %p5, %p33;
	and.pred  	%p22, %p26, %p34;
	and.pred  	%p23, %p27, %p34;
	and.pred  	%p24, %p28, %p34;
	and.pred  	%p25, %p29, %p34;
	.loc	1 32 54                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:32:54
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 33 30                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:33:30
	mul.wide.s32 	%rd17, %r95, 4;
	add.s64 	%rd5, %rd11, %rd17;
	.loc	1 33 35                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	.loc	1 34 18                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:34:18
	add.f32 	%f21, %f1, %f17;
	add.f32 	%f22, %f2, %f18;
	add.f32 	%f23, %f3, %f19;
	add.f32 	%f24, %f4, %f20;
	add.f32 	%f25, %f5, %f17;
	add.f32 	%f26, %f6, %f18;
	add.f32 	%f27, %f7, %f19;
	add.f32 	%f28, %f8, %f20;
	add.f32 	%f29, %f9, %f17;
	add.f32 	%f30, %f10, %f18;
	add.f32 	%f31, %f11, %f19;
	add.f32 	%f32, %f12, %f20;
	add.f32 	%f33, %f13, %f17;
	add.f32 	%f34, %f14, %f18;
	add.f32 	%f35, %f15, %f19;
	add.f32 	%f36, %f16, %f20;
	.loc	1 35 33                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:35:33
	shl.b32 	%r107, %r80, 6;
	shl.b32 	%r108, %r81, 6;
	shl.b32 	%r109, %r82, 6;
	shl.b32 	%r110, %r83, 6;
	.loc	1 35 30                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:35:30
	add.s32 	%r111, %r89, %r107;
	add.s32 	%r112, %r89, %r108;
	add.s32 	%r113, %r89, %r109;
	add.s32 	%r114, %r89, %r110;
	.loc	1 35 25                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:35:25
	mul.wide.s32 	%rd18, %r111, 4;
	add.s64 	%rd6, %rd12, %rd18;
	mul.wide.s32 	%rd19, %r112, 4;
	add.s64 	%rd7, %rd12, %rd19;
	mul.wide.s32 	%rd20, %r113, 4;
	add.s64 	%rd8, %rd12, %rd20;
	mul.wide.s32 	%rd21, %r114, 4;
	add.s64 	%rd9, %rd12, %rd21;
	.loc	1 35 44                         // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:35:44
	shl.b32 	%r115, %r72, 8;
	and.b32  	%r116, %r115, 3840;
	or.b32  	%r117, %r116, %r75;
	and.b32  	%r118, %r73, 1020;
	shr.u32 	%r119, %r116, 4;
	mov.u32 	%r120, global_smem;
	add.s32 	%r121, %r120, %r119;
	shl.b32 	%r122, %r117, 2;
	add.s32 	%r23, %r121, %r122;
	mov.b32 	%r24, %f21;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r123, %r116, 64;
	shr.u32 	%r124, %r123, 4;
	add.s32 	%r125, %r120, %r124;
	add.s32 	%r126, %r125, %r122;
	add.s32 	%r25, %r126, 256;
	mov.b32 	%r26, %f22;
	// begin inline asm
	@%p6 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r127, %r116, 128;
	shr.u32 	%r128, %r127, 4;
	add.s32 	%r129, %r120, %r128;
	add.s32 	%r130, %r129, %r122;
	add.s32 	%r27, %r130, 512;
	mov.b32 	%r28, %f23;
	// begin inline asm
	@%p6 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r131, %r116, 192;
	shr.u32 	%r132, %r131, 4;
	add.s32 	%r133, %r120, %r132;
	add.s32 	%r134, %r133, %r122;
	add.s32 	%r29, %r134, 768;
	mov.b32 	%r30, %f24;
	// begin inline asm
	@%p6 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r23, 64;
	mov.b32 	%r32, %f25;
	// begin inline asm
	@%p6 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r126, 320;
	mov.b32 	%r34, %f26;
	// begin inline asm
	@%p6 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r130, 576;
	mov.b32 	%r36, %f27;
	// begin inline asm
	@%p6 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r134, 832;
	mov.b32 	%r38, %f28;
	// begin inline asm
	@%p6 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r23, 128;
	mov.b32 	%r40, %f29;
	// begin inline asm
	@%p6 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r126, 384;
	mov.b32 	%r42, %f30;
	// begin inline asm
	@%p6 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r130, 640;
	mov.b32 	%r44, %f31;
	// begin inline asm
	@%p6 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r134, 896;
	mov.b32 	%r46, %f32;
	// begin inline asm
	@%p6 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r23, 192;
	mov.b32 	%r48, %f33;
	// begin inline asm
	@%p6 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r126, 448;
	mov.b32 	%r50, %f34;
	// begin inline asm
	@%p6 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r130, 704;
	mov.b32 	%r52, %f35;
	// begin inline asm
	@%p6 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r134, 960;
	mov.b32 	%r54, %f36;
	// begin inline asm
	@%p6 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r135, %r72, 2;
	and.b32  	%r136, %r135, 60;
	add.s32 	%r137, %r120, %r136;
	shl.b32 	%r138, %r118, 2;
	add.s32 	%r139, %r137, %r138;
	ld.shared.u32 	%r55, [%r139];
	ld.shared.u32 	%r56, [%r139+4];
	ld.shared.u32 	%r57, [%r139+8];
	ld.shared.u32 	%r58, [%r139+12];
	or.b32  	%r140, %r118, 1024;
	shr.u32 	%r141, %r140, 4;
	and.b32  	%r142, %r141, 124;
	add.s32 	%r143, %r120, %r142;
	add.s32 	%r144, %r143, %r138;
	ld.shared.u32 	%r59, [%r144+4096];
	ld.shared.u32 	%r60, [%r144+4100];
	ld.shared.u32 	%r61, [%r144+4104];
	ld.shared.u32 	%r62, [%r144+4108];
	or.b32  	%r145, %r118, 2048;
	shr.u32 	%r146, %r145, 4;
	and.b32  	%r147, %r146, 188;
	add.s32 	%r148, %r120, %r147;
	add.s32 	%r149, %r148, %r138;
	ld.shared.u32 	%r63, [%r149+8192];
	ld.shared.u32 	%r64, [%r149+8196];
	ld.shared.u32 	%r65, [%r149+8200];
	ld.shared.u32 	%r66, [%r149+8204];
	or.b32  	%r150, %r118, 3072;
	shr.u32 	%r151, %r150, 4;
	and.b32  	%r152, %r151, 252;
	add.s32 	%r153, %r120, %r152;
	add.s32 	%r154, %r153, %r138;
	ld.shared.u32 	%r67, [%r154+12288];
	ld.shared.u32 	%r68, [%r154+12292];
	ld.shared.u32 	%r69, [%r154+12296];
	ld.shared.u32 	%r70, [%r154+12300];
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd6 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd7 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd8 + 0 ], { %r63, %r64, %r65, %r66 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd9 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	.loc	1 35 4                          // cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mg/cmgdrr5pcdnx6opjt4cdxisrig7vlyfnvsbjkyaliv7cy2lpdlc2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 103
.b8 100
.b8 114
.b8 114
.b8 53
.b8 112
.b8 99
.b8 100
.b8 110
.b8 120
.b8 54
.b8 111
.b8 112
.b8 106
.b8 116
.b8 52
.b8 99
.b8 100
.b8 120
.b8 105
.b8 115
.b8 114
.b8 105
.b8 103
.b8 55
.b8 118
.b8 108
.b8 121
.b8 102
.b8 110
.b8 118
.b8 115
.b8 98
.b8 106
.b8 107
.b8 121
.b8 97
.b8 108
.b8 105
.b8 118
.b8 55
.b8 99
.b8 121
.b8 50
.b8 108
.b8 112
.b8 100
.b8 108
.b8 99
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
