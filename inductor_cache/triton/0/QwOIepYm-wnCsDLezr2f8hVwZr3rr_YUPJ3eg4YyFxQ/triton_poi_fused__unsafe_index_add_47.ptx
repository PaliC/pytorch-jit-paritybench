//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_47 // -- Begin function triton_poi_fused__unsafe_index_add_47
                                        // @triton_poi_fused__unsafe_index_add_47
.visible .entry triton_poi_fused__unsafe_index_add_47(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_47_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_47_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_47_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_47_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_47_param_4,
	.param .u32 triton_poi_fused__unsafe_index_add_47_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<36>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<49>;
	.loc	1 19 0                          // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:19:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_poi_fused__unsafe_index_add_47_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused__unsafe_index_add_47_param_1];
$L__tmp0:
	.loc	1 21 28                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:21:33
	shl.b32 	%r10, %r1, 9;
	ld.param.u64 	%rd17, [triton_poi_fused__unsafe_index_add_47_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused__unsafe_index_add_47_param_3];
	.loc	1 22 36                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:22:36
	mov.u32 	%r11, %tid.x;
	shl.b32 	%r12, %r11, 1;
	ld.param.u64 	%rd19, [triton_poi_fused__unsafe_index_add_47_param_4];
	and.b32  	%r13, %r12, 510;
	.loc	1 22 23                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:22:23
	or.b32  	%r14, %r10, %r13;
	.loc	1 24 21                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:24:21
	shr.s32 	%r16, %r14, 31;
	shr.u32 	%r17, %r16, 29;
	add.s32 	%r18, %r14, %r17;
	shr.s32 	%r19, %r18, 3;
	.loc	1 24 26                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:24:26
	shr.u32 	%r20, %r19, 29;
	add.s32 	%r21, %r19, %r20;
	and.b32  	%r22, %r21, -8;
	sub.s32 	%r23, %r19, %r22;
	.loc	1 25 19                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:25:19
	and.b32  	%r24, %r18, -8;
	sub.s32 	%r25, %r14, %r24;
	.loc	1 26 19                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:26:19
	bfe.s32 	%r26, %r1, 22, 1;
	shr.u32 	%r27, %r26, 26;
	add.s32 	%r28, %r14, %r27;
	shr.s32 	%r29, %r28, 6;
	.loc	1 27 27                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:27:27
	shr.s32 	%r30, %r28, 31;
	shr.u32 	%r31, %r30, 23;
	add.s32 	%r32, %r29, %r31;
	and.b32  	%r33, %r32, -512;
	sub.s32 	%r34, %r29, %r33;
	.loc	1 29 30                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:29:30
	mul.wide.s32 	%rd20, %r23, 8;
	add.s64 	%rd2, %rd15, %rd20;
	mov.pred 	%p1, -1;
	.loc	1 29 35                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:29:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:30:30
	mul.wide.s32 	%rd21, %r25, 8;
	add.s64 	%rd7, %rd15, %rd21;
	.loc	1 30 35                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:30:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	mov.u64 %rd6, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd5, %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 31 31                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:31:31
	mul.wide.s32 	%rd22, %r34, 4;
	add.s64 	%rd8, %rd18, %rd22;
	.loc	1 31 36                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:31:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 35 32                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:35:32
	shr.u64 	%rd23, %rd1, 61;
	and.b64  	%rd24, %rd23, 4;
	add.s64 	%rd25, %rd24, %rd1;
	.loc	1 38 32                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:38:32
	shr.u64 	%rd26, %rd5, 61;
	and.b64  	%rd27, %rd26, 4;
	add.s64 	%rd28, %rd27, %rd5;
	shr.u64 	%rd29, %rd6, 61;
	and.b64  	%rd30, %rd29, 4;
	add.s64 	%rd31, %rd30, %rd6;
	.loc	1 39 49                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:39:49
	shl.b32 	%r35, %r29, 4;
	.loc	1 39 30                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:39:30
	shl.b64 	%rd32, %rd28, 2;
	add.s64 	%rd33, %rd16, %rd32;
	shl.b64 	%rd34, %rd25, 4;
	add.s64 	%rd35, %rd33, %rd34;
	mul.wide.s32 	%rd36, %r35, 4;
	add.s64 	%rd10, %rd35, %rd36;
	shl.b64 	%rd37, %rd31, 2;
	add.s64 	%rd38, %rd16, %rd37;
	add.s64 	%rd39, %rd38, %rd34;
	add.s64 	%rd11, %rd39, %rd36;
	.loc	1 39 54                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:39:54
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 40 31                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:40:31
	shl.b64 	%rd40, %rd28, 13;
	add.s64 	%rd41, %rd17, %rd40;
	mul.wide.s32 	%rd42, %r29, 4;
	add.s64 	%rd43, %rd41, %rd42;
	shl.b64 	%rd44, %rd25, 15;
	add.s64 	%rd12, %rd43, %rd44;
	shl.b64 	%rd45, %rd31, 13;
	add.s64 	%rd46, %rd17, %rd45;
	add.s64 	%rd47, %rd46, %rd42;
	add.s64 	%rd13, %rd47, %rd44;
	.loc	1 40 60                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:40:60
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 41 20                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:41:20
	add.f32 	%f7, %f1, %f5;
	add.f32 	%f8, %f2, %f6;
	.loc	1 42 19                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:42:19
	add.f32 	%f9, %f7, %f3;
	add.f32 	%f10, %f8, %f4;
	.loc	1 43 25                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:43:25
	mul.wide.s32 	%rd48, %r14, 4;
	add.s64 	%rd14, %rd19, %rd48;
	.loc	1 43 37                         // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:43:37
	mov.b32 	%r8, %f9;
	mov.b32 	%r9, %f10;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd14 + 0 ], { %r8, %r9 };
	// end inline asm
	.loc	1 43 4                          // cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py:43:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ft/cftlmlazzv4f4jjxtgfh3fgvua4pupg2rnp2lx4s5whvozgslogf.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 116
.b8 108
.b8 109
.b8 108
.b8 97
.b8 122
.b8 122
.b8 118
.b8 52
.b8 102
.b8 52
.b8 106
.b8 106
.b8 120
.b8 116
.b8 103
.b8 102
.b8 104
.b8 51
.b8 102
.b8 103
.b8 118
.b8 117
.b8 97
.b8 52
.b8 112
.b8 117
.b8 112
.b8 103
.b8 50
.b8 114
.b8 110
.b8 112
.b8 50
.b8 108
.b8 120
.b8 52
.b8 115
.b8 53
.b8 119
.b8 104
.b8 118
.b8 111
.b8 122
.b8 103
.b8 115
.b8 108
.b8 111
.b8 103
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
