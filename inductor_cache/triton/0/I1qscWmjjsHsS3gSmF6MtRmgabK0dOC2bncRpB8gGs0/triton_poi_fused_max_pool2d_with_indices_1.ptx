//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_max_pool2d_with_indices_1 // -- Begin function triton_poi_fused_max_pool2d_with_indices_1
                                        // @triton_poi_fused_max_pool2d_with_indices_1
.visible .entry triton_poi_fused_max_pool2d_with_indices_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_pool2d_with_indices_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_pool2d_with_indices_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_pool2d_with_indices_1_param_2,
	.param .u32 triton_poi_fused_max_pool2d_with_indices_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<37>;
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_max_pool2d_with_indices_1_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_max_pool2d_with_indices_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:21:33
	shl.b32 	%r12, %r1, 8;
	ld.param.u64 	%rd9, [triton_poi_fused_max_pool2d_with_indices_1_param_2];
	.loc	1 22 36                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:22:36
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r15, %r13, 1;
	and.b32  	%r16, %r15, 254;
	.loc	1 22 23                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:22:23
	or.b32  	%r17, %r12, %r16;
	or.b32  	%r18, %r17, 1;
	.loc	1 23 21                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:23:21
	setp.lt.s32 	%p9, %r17, 320;
	.loc	1 25 19                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:25:19
	mul.hi.s32 	%r19, %r17, 1717986919;
	shr.u32 	%r20, %r19, 31;
	shr.s32 	%r21, %r19, 1;
	add.s32 	%r22, %r21, %r20;
	.loc	1 24 19                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:24:19
	mul.lo.s32 	%r23, %r22, 5;
	sub.s32 	%r24, %r17, %r23;
	.loc	1 25 19                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:25:19
	mul.hi.s32 	%r25, %r18, 1717986919;
	shr.u32 	%r26, %r25, 31;
	shr.s32 	%r27, %r25, 1;
	add.s32 	%r28, %r27, %r26;
	.loc	1 24 19                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:24:19
	mul.lo.s32 	%r29, %r28, 5;
	sub.s32 	%r30, %r18, %r29;
	.loc	1 33 19                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:33:19
	setp.gt.s32 	%p11, %r24, 0;
	setp.gt.s32 	%p12, %r30, 0;
	.loc	1 38 45                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:38:45
	shl.b32 	%r31, %r22, 2;
	shl.b32 	%r32, %r28, 2;
	.loc	1 32 18                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:32:18
	add.s32 	%r33, %r31, %r24;
	add.s32 	%r34, %r32, %r30;
	.loc	1 38 31                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:38:31
	mul.wide.s32 	%rd10, %r33, 4;
	add.s64 	%rd3, %rd7, %rd10;
	add.s64 	%rd1, %rd3, -4;
	mul.wide.s32 	%rd11, %r34, 4;
	add.s64 	%rd4, %rd7, %rd11;
	add.s64 	%rd2, %rd4, -4;
	.loc	1 38 58                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:38:58
	and.pred  	%p1, %p9, %p11;
	and.pred  	%p3, %p12, %p9;
	mov.b32 	%r3, -8388608;
	.loc	1 38 50                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:38:50
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 42 20                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:42:20
	setp.lt.u32 	%p13, %r24, 4;
	setp.lt.u32 	%p14, %r30, 4;
	.loc	1 44 51                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:44:51
	and.pred  	%p5, %p9, %p13;
	and.pred  	%p7, %p14, %p9;
	.loc	1 44 43                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:44:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 38 50                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:38:50
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r4;
	.loc	1 44 43                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:44:43
	mov.b32 	%f3, %r8;
	.loc	1 45 20                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:45:20
	setp.gt.f32 	%p15, %f3, %f2;
	.loc	1 44 43                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:44:43
	mov.b32 	%f4, %r6;
	.loc	1 45 20                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:45:20
	setp.gt.f32 	%p16, %f4, %f1;
$L__tmp1:
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p17, %f4, %f4;
	setp.nan.f32 	%p18, %f3, %f3;
$L__tmp2:
	.loc	1 50 25                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:50:25
	cvt.s64.s32 	%rd12, %r17;
	add.s64 	%rd5, %rd8, %rd12;
	.loc	1 50 37                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:50:37
	selp.u16 	%rs2, 1, 0, %p16;
	selp.u16 	%rs3, 1, 0, %p15;
	shl.b16 	%rs4, %rs3, 8;
	or.b16  	%rs1, %rs2, %rs4;
	// begin inline asm
	@%p9 st.global.b16 [ %rd5 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 51 25                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:51:25
	mul.wide.s32 	%rd13, %r17, 4;
	add.s64 	%rd6, %rd9, %rd13;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r35, %r6, %r2, %p17;
	selp.b32 	%r10, %r6, %r35, %p16;
	selp.b32 	%r36, %r8, %r4, %p18;
	selp.b32 	%r11, %r8, %r36, %p15;
$L__tmp4:
	.loc	1 51 37                         // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:51:37
	// begin inline asm
	@%p9 st.global.v2.b32 [ %rd6 + 0 ], { %r10, %r11 };
	// end inline asm
	.loc	1 51 4                          // cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py:51:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/g3/cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 187                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 51
.b8 109
.b8 110
.b8 98
.b8 98
.b8 107
.b8 115
.b8 54
.b8 111
.b8 52
.b8 108
.b8 114
.b8 51
.b8 110
.b8 106
.b8 52
.b8 106
.b8 98
.b8 118
.b8 103
.b8 53
.b8 50
.b8 54
.b8 112
.b8 107
.b8 113
.b8 51
.b8 122
.b8 105
.b8 104
.b8 110
.b8 99
.b8 51
.b8 112
.b8 121
.b8 99
.b8 50
.b8 103
.b8 54
.b8 104
.b8 112
.b8 51
.b8 98
.b8 104
.b8 111
.b8 99
.b8 115
.b8 117
.b8 52
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 105
.b8 110
.b8 100
.b8 105
.b8 99
.b8 101
.b8 115
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x90:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
