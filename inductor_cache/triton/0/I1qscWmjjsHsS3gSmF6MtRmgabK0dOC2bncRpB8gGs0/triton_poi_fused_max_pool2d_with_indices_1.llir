; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 320, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 5, !dbg !15
  %14 = mul i32 %13, 5, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %.frozen1 = freeze i32 %11, !dbg !15
  %15 = sdiv i32 %.frozen1, 5, !dbg !15
  %16 = mul i32 %15, 5, !dbg !16
  %.decomposed2 = sub i32 %.frozen1, %16, !dbg !16
  %17 = icmp sgt i32 %.decomposed, 0, !dbg !17
  %18 = icmp sgt i32 %.decomposed2, 0, !dbg !17
  %19 = shl nsw i32 %13, 2, !dbg !18
  %20 = shl nsw i32 %15, 2, !dbg !18
  %21 = add nsw i32 %19, %.decomposed, !dbg !19
  %22 = add nsw i32 %20, %.decomposed2, !dbg !19
  %23 = sext i32 %21 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = getelementptr i8, ptr addrspace(1) %24, i64 -4, !dbg !20
  %26 = sext i32 %22 to i64, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !20
  %28 = getelementptr i8, ptr addrspace(1) %27, i64 -4, !dbg !20
  %29 = and i1 %12, %17, !dbg !21
  %30 = and i1 %18, %12, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %29, i32 -8388608, i1 %29) #1, !dbg !22
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %30, i32 -8388608, i1 %30) #1, !dbg !22
  %33 = icmp ult i32 %.decomposed, 4, !dbg !23
  %34 = icmp ult i32 %.decomposed2, 4, !dbg !23
  %35 = sext i32 %21 to i64, !dbg !24
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !24
  %37 = sext i32 %22 to i64, !dbg !24
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !24
  %39 = and i1 %12, %33, !dbg !25
  %40 = and i1 %34, %12, !dbg !25
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %39, i32 -8388608, i1 %39) #1, !dbg !26
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %40, i32 -8388608, i1 %40) #1, !dbg !26
  %43 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !22
  %44 = insertelement <2 x i32> %43, i32 %32, i64 1, !dbg !22
  %45 = bitcast <2 x i32> %44 to <2 x float>, !dbg !22
  %46 = insertelement <2 x i32> poison, i32 %41, i64 0, !dbg !26
  %47 = insertelement <2 x i32> %46, i32 %42, i64 1, !dbg !26
  %48 = bitcast <2 x i32> %47 to <2 x float>, !dbg !26
  %49 = fcmp ogt <2 x float> %48, %45, !dbg !27
  %50 = bitcast i32 %41 to float, !dbg !28
  %51 = fcmp uno float %50, 0.000000e+00, !dbg !28
  %52 = bitcast i32 %42 to float, !dbg !28
  %53 = fcmp uno float %52, 0.000000e+00, !dbg !28
  %54 = extractelement <2 x i1> %49, i64 0, !dbg !32
  %55 = or i1 %54, %51, !dbg !32
  %56 = extractelement <2 x i1> %49, i64 1, !dbg !32
  %57 = or i1 %56, %53, !dbg !32
  %58 = sext i32 %10 to i64, !dbg !33
  %59 = getelementptr i8, ptr addrspace(1) %1, i64 %58, !dbg !33
  %60 = zext <2 x i1> %49 to <2 x i8>, !dbg !34
  %61 = bitcast <2 x i8> %60 to i16, !dbg !34
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %61, ptr addrspace(1) %59, i1 %12) #1, !dbg !34
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %58, !dbg !35
  %63 = select i1 %55, i32 %41, i32 %31, !dbg !36
  %64 = select i1 %57, i32 %42, i32 %32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %63, i32 %64, ptr addrspace(1) %62, i1 %12) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cg3mnbbks6o4lr3nj4jbvg526pkq3zihnc3pyc2g6hp3bhocsu4l.py", directory: "inductor_cache/g3")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_1", linkageName: "triton_poi_fused_max_pool2d_with_indices_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 19, scope: !7)
!18 = !DILocation(line: 38, column: 45, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 38, column: 31, scope: !7)
!21 = !DILocation(line: 38, column: 58, scope: !7)
!22 = !DILocation(line: 38, column: 50, scope: !7)
!23 = !DILocation(line: 42, column: 20, scope: !7)
!24 = !DILocation(line: 44, column: 31, scope: !7)
!25 = !DILocation(line: 44, column: 51, scope: !7)
!26 = !DILocation(line: 44, column: 43, scope: !7)
!27 = !DILocation(line: 45, column: 20, scope: !7)
!28 = !DILocation(line: 120, column: 21, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!31 = !DILocation(line: 49, column: 42, scope: !7)
!32 = !DILocation(line: 120, column: 16, scope: !29, inlinedAt: !31)
!33 = !DILocation(line: 50, column: 25, scope: !7)
!34 = !DILocation(line: 50, column: 37, scope: !7)
!35 = !DILocation(line: 51, column: 25, scope: !7)
!36 = !DILocation(line: 121, column: 29, scope: !29, inlinedAt: !31)
!37 = !DILocation(line: 51, column: 37, scope: !7)
!38 = !DILocation(line: 51, column: 4, scope: !7)
