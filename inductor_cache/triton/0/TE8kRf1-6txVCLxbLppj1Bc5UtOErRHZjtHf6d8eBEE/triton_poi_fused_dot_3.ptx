//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_dot_3  // -- Begin function triton_poi_fused_dot_3
                                        // @triton_poi_fused_dot_3
.visible .entry triton_poi_fused_dot_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_dot_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_dot_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_dot_3_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<12>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<10>;
	.loc	1 19 0                          // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_poi_fused_dot_3_param_0];
	mov.pred 	%p1, -1;
$L__tmp0:
	.loc	1 24 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:24:19
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd2, [triton_poi_fused_dot_3_param_1];
	.loc	1 26 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:26:19
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd9, [triton_poi_fused_dot_3_param_2];
	.loc	1 28 30                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:28:30
	add.s64 	%rd3, %rd1, 4;
	.loc	1 28 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:28:19
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:30:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 30 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:30:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:32:31
	add.s64 	%rd5, %rd1, 8;
	.loc	1 32 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:32:20
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:34:31
	add.s64 	%rd6, %rd2, 8;
	.loc	1 34 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:34:20
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:36:31
	add.s64 	%rd7, %rd1, 12;
	.loc	1 36 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:36:20
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:38:31
	add.s64 	%rd8, %rd2, 12;
	.loc	1 38 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:38:20
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 24 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:24:19
	mov.b32 	%f1, %r1;
	mov.b32 	%f2, %r3;
	.loc	1 26 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:26:19
	mov.b32 	%f3, %r2;
	mov.b32 	%f4, %r4;
	.loc	1 40 18                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:40:18
	mul.f32 	%f5, %f2, %f4;
	.loc	1 42 19                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:42:19
	fma.rn.f32 	%f6, %f1, %f3, %f5;
	.loc	1 32 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:32:20
	mov.b32 	%f7, %r7;
	mov.b32 	%f8, %r5;
	.loc	1 34 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:34:20
	mov.b32 	%f9, %r8;
	mov.b32 	%f10, %r6;
	.loc	1 44 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:44:20
	fma.rn.f32 	%f11, %f8, %f10, %f6;
	.loc	1 46 20                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:46:20
	fma.rn.f32 	%f12, %f7, %f9, %f11;
	.loc	1 47 65                         // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:47:65
	mov.u32 	%r10, %tid.x;
	and.b32  	%r11, %r10, 31;
	setp.eq.s32 	%p9, %r11, 0;
	mov.b32 	%r9, %f12;
	// begin inline asm
	@%p9 st.global.b32 [ %rd9 + 0 ], { %r9 };
	// end inline asm
	.loc	1 47 4                          // cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/md/cmdmkqgcswdu2gaitzckmsdt3jisvfsfyn2yhdtvmk4b4zay5qm3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 100
.b8 109
.b8 107
.b8 113
.b8 103
.b8 99
.b8 115
.b8 119
.b8 100
.b8 117
.b8 50
.b8 103
.b8 97
.b8 105
.b8 116
.b8 122
.b8 99
.b8 107
.b8 109
.b8 115
.b8 100
.b8 116
.b8 51
.b8 106
.b8 105
.b8 115
.b8 118
.b8 102
.b8 115
.b8 102
.b8 121
.b8 110
.b8 50
.b8 121
.b8 104
.b8 100
.b8 116
.b8 118
.b8 109
.b8 107
.b8 52
.b8 98
.b8 52
.b8 122
.b8 97
.b8 121
.b8 53
.b8 113
.b8 109
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 100
.b8 0
	}
	.section	.debug_macinfo	{	}
