; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 10, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 2, !dbg !12
  %13 = and i32 %12, 508, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = or disjoint i32 %14, 512, !dbg !13
  %16 = srem i32 %14, 512, !dbg !14
  %17 = sext i32 %14 to i64, !dbg !15
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !15
  %19 = sext i32 %15 to i64, !dbg !15
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !15
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !16
  %22 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !16
  %23 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !16
  %24 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !16
  %25 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !16
  %26 = bitcast i32 %22 to float, !dbg !16
  %27 = bitcast i32 %23 to float, !dbg !16
  %28 = bitcast i32 %24 to float, !dbg !16
  %29 = bitcast i32 %25 to float, !dbg !16
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %20, i1 true) #3, !dbg !16
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !16
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !16
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !16
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !16
  %35 = bitcast i32 %31 to float, !dbg !16
  %36 = bitcast i32 %32 to float, !dbg !16
  %37 = bitcast i32 %33 to float, !dbg !16
  %38 = bitcast i32 %34 to float, !dbg !16
  %39 = sext i32 %16 to i64, !dbg !17
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !17
  %41 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !18
  %42 = extractvalue { i32, i32, i32, i32 } %41, 0, !dbg !18
  %43 = extractvalue { i32, i32, i32, i32 } %41, 1, !dbg !18
  %44 = extractvalue { i32, i32, i32, i32 } %41, 2, !dbg !18
  %45 = extractvalue { i32, i32, i32, i32 } %41, 3, !dbg !18
  %46 = bitcast i32 %42 to float, !dbg !18
  %47 = bitcast i32 %43 to float, !dbg !18
  %48 = bitcast i32 %44 to float, !dbg !18
  %49 = bitcast i32 %45 to float, !dbg !18
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %40, i1 true) #3, !dbg !18
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !18
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !18
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !18
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !18
  %55 = bitcast i32 %51 to float, !dbg !18
  %56 = bitcast i32 %52 to float, !dbg !18
  %57 = bitcast i32 %53 to float, !dbg !18
  %58 = bitcast i32 %54 to float, !dbg !18
  %59 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !19
  %60 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %59, i1 true) #3, !dbg !20
  %61 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %59, i1 true) #3, !dbg !20
  %62 = getelementptr float, ptr addrspace(1) %3, i64 %39, !dbg !21
  %63 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !22
  %64 = extractvalue { i32, i32, i32, i32 } %63, 0, !dbg !22
  %65 = extractvalue { i32, i32, i32, i32 } %63, 1, !dbg !22
  %66 = extractvalue { i32, i32, i32, i32 } %63, 2, !dbg !22
  %67 = extractvalue { i32, i32, i32, i32 } %63, 3, !dbg !22
  %68 = bitcast i32 %64 to float, !dbg !22
  %69 = bitcast i32 %65 to float, !dbg !22
  %70 = bitcast i32 %66 to float, !dbg !22
  %71 = bitcast i32 %67 to float, !dbg !22
  %72 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %62, i1 true) #3, !dbg !22
  %73 = extractvalue { i32, i32, i32, i32 } %72, 0, !dbg !22
  %74 = extractvalue { i32, i32, i32, i32 } %72, 1, !dbg !22
  %75 = extractvalue { i32, i32, i32, i32 } %72, 2, !dbg !22
  %76 = extractvalue { i32, i32, i32, i32 } %72, 3, !dbg !22
  %77 = bitcast i32 %73 to float, !dbg !22
  %78 = bitcast i32 %74 to float, !dbg !22
  %79 = bitcast i32 %75 to float, !dbg !22
  %80 = bitcast i32 %76 to float, !dbg !22
  %81 = getelementptr float, ptr addrspace(1) %4, i64 %39, !dbg !23
  %82 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %81, i1 true) #3, !dbg !24
  %83 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %81, i1 true) #3, !dbg !24
  %84 = getelementptr float, ptr addrspace(1) %5, i64 %39, !dbg !25
  %85 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %84, i1 true) #3, !dbg !26
  %86 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %84, i1 true) #3, !dbg !26
  %87 = fadd float %26, %46, !dbg !27
  %88 = fadd float %27, %47, !dbg !27
  %89 = fadd float %28, %48, !dbg !27
  %90 = fadd float %29, %49, !dbg !27
  %91 = fadd float %35, %55, !dbg !27
  %92 = fadd float %36, %56, !dbg !27
  %93 = fadd float %37, %57, !dbg !27
  %94 = fadd float %38, %58, !dbg !27
  %95 = fmul float %87, 0x3FE6A09E60000000, !dbg !28
  %96 = fmul float %88, 0x3FE6A09E60000000, !dbg !28
  %97 = fmul float %89, 0x3FE6A09E60000000, !dbg !28
  %98 = fmul float %90, 0x3FE6A09E60000000, !dbg !28
  %99 = fmul float %91, 0x3FE6A09E60000000, !dbg !28
  %100 = fmul float %92, 0x3FE6A09E60000000, !dbg !28
  %101 = fmul float %93, 0x3FE6A09E60000000, !dbg !28
  %102 = fmul float %94, 0x3FE6A09E60000000, !dbg !28
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i36 = icmp eq i32 %103, 0, !dbg !29
  %104 = tail call float @llvm.nvvm.fabs.ftz.f(float %95) #3, !dbg !29
  %105 = tail call float @llvm.nvvm.fabs.f(float %95) #3, !dbg !29
  %.0.i37 = select i1 %.not.i36, float %105, float %104, !dbg !29
  %106 = fcmp oge float %.0.i37, 0x3FF00C1FC0000000, !dbg !29
  br i1 %106, label %__nv_fabsf.exit1.i, label %108, !dbg !29

__nv_fabsf.exit1.i:                               ; preds = %8
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i39 = icmp eq i32 %107, 0, !dbg !29
  %.01.i = select i1 %.not1.i39, float %105, float %104, !dbg !29
  br label %__internal_fmad.exit.i, !dbg !29

108:                                              ; preds = %8
  %109 = fmul float %95, %95, !dbg !29
  br label %__internal_fmad.exit.i, !dbg !29

__internal_fmad.exit.i:                           ; preds = %108, %__nv_fabsf.exit1.i
  %110 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %108 ], !dbg !29
  %111 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %108 ], !dbg !29
  %112 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %108 ], !dbg !29
  %113 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %108 ], !dbg !29
  %114 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %108 ], !dbg !29
  %115 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %108 ], !dbg !29
  %116 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %108 ], !dbg !29
  %117 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %109, %108 ], !dbg !29
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i38 = icmp eq i32 %118, 0, !dbg !29
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %116, float %117, float %115) #3, !dbg !29
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %116, float %117, float %115) #3, !dbg !29
  %.02.i = select i1 %.not2.i38, float %120, float %119, !dbg !29
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i = icmp eq i32 %121, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %117, float %114) #3, !dbg !29
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %117, float %114) #3, !dbg !29
  %.03.i = select i1 %.not3.i, float %123, float %122, !dbg !29
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i = icmp eq i32 %124, 0, !dbg !29
  %125 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %117, float %113) #3, !dbg !29
  %126 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %117, float %113) #3, !dbg !29
  %.04.i = select i1 %.not4.i, float %126, float %125, !dbg !29
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i = icmp eq i32 %127, 0, !dbg !29
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %117, float %112) #3, !dbg !29
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %117, float %112) #3, !dbg !29
  %.05.i = select i1 %.not5.i, float %129, float %128, !dbg !29
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i = icmp eq i32 %130, 0, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %117, float %111) #3, !dbg !29
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %117, float %111) #3, !dbg !29
  %.06.i = select i1 %.not6.i, float %132, float %131, !dbg !29
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i = icmp eq i32 %133, 0, !dbg !29
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %117, float %110) #3, !dbg !29
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %117, float %110) #3, !dbg !29
  %.07.i = select i1 %.not7.i, float %135, float %134, !dbg !29
  %136 = fneg float %117, !dbg !29
  %137 = select i1 %106, float %136, float %95, !dbg !29
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i = icmp eq i32 %138, 0, !dbg !29
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %137, float %137) #3, !dbg !29
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %137, float %137) #3, !dbg !29
  %.08.i = select i1 %.not8.i, float %140, float %139, !dbg !29
  br i1 %106, label %141, label %__nv_erff.exit, !dbg !29

141:                                              ; preds = %__internal_fmad.exit.i
  %142 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !29
  %143 = fsub float 1.000000e+00, %142, !dbg !29
  %144 = bitcast float %143 to i32, !dbg !29
  %145 = bitcast float %95 to i32, !dbg !29
  %146 = and i32 %145, -2147483648, !dbg !29
  %147 = or i32 %146, %144, !dbg !29
  %148 = bitcast i32 %147 to float, !dbg !29
  br label %__nv_erff.exit, !dbg !29

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %141
  %r.0.i = phi float [ %148, %141 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !29
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i40 = icmp eq i32 %149, 0, !dbg !29
  %150 = tail call float @llvm.nvvm.fabs.ftz.f(float %96) #3, !dbg !29
  %151 = tail call float @llvm.nvvm.fabs.f(float %96) #3, !dbg !29
  %.0.i41 = select i1 %.not.i40, float %151, float %150, !dbg !29
  %152 = fcmp oge float %.0.i41, 0x3FF00C1FC0000000, !dbg !29
  br i1 %152, label %__nv_fabsf.exit1.i58, label %154, !dbg !29

__nv_fabsf.exit1.i58:                             ; preds = %__nv_erff.exit
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i59 = icmp eq i32 %153, 0, !dbg !29
  %.01.i60 = select i1 %.not1.i59, float %151, float %150, !dbg !29
  br label %__internal_fmad.exit.i42, !dbg !29

154:                                              ; preds = %__nv_erff.exit
  %155 = fmul float %96, %96, !dbg !29
  br label %__internal_fmad.exit.i42, !dbg !29

__internal_fmad.exit.i42:                         ; preds = %154, %__nv_fabsf.exit1.i58
  %156 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i58 ], [ 0x3FC06EBA60000000, %154 ], !dbg !29
  %157 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i58 ], [ 0xBFD8127580000000, %154 ], !dbg !29
  %158 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i58 ], [ 0x3FBCE315E0000000, %154 ], !dbg !29
  %159 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i58 ], [ 0xBF9B837CE0000000, %154 ], !dbg !29
  %160 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i58 ], [ 0x3F755ABD40000000, %154 ], !dbg !29
  %161 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i58 ], [ 0xBF4AE9A400000000, %154 ], !dbg !29
  %162 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i58 ], [ 0x3F163D2D40000000, %154 ], !dbg !29
  %163 = phi float [ %.01.i60, %__nv_fabsf.exit1.i58 ], [ %155, %154 ], !dbg !29
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i43 = icmp eq i32 %164, 0, !dbg !29
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float %163, float %161) #3, !dbg !29
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %162, float %163, float %161) #3, !dbg !29
  %.02.i44 = select i1 %.not2.i43, float %166, float %165, !dbg !29
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i45 = icmp eq i32 %167, 0, !dbg !29
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i44, float %163, float %160) #3, !dbg !29
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i44, float %163, float %160) #3, !dbg !29
  %.03.i46 = select i1 %.not3.i45, float %169, float %168, !dbg !29
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i47 = icmp eq i32 %170, 0, !dbg !29
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i46, float %163, float %159) #3, !dbg !29
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i46, float %163, float %159) #3, !dbg !29
  %.04.i48 = select i1 %.not4.i47, float %172, float %171, !dbg !29
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i49 = icmp eq i32 %173, 0, !dbg !29
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i48, float %163, float %158) #3, !dbg !29
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i48, float %163, float %158) #3, !dbg !29
  %.05.i50 = select i1 %.not5.i49, float %175, float %174, !dbg !29
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i51 = icmp eq i32 %176, 0, !dbg !29
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %163, float %157) #3, !dbg !29
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %163, float %157) #3, !dbg !29
  %.06.i52 = select i1 %.not6.i51, float %178, float %177, !dbg !29
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i53 = icmp eq i32 %179, 0, !dbg !29
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i52, float %163, float %156) #3, !dbg !29
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i52, float %163, float %156) #3, !dbg !29
  %.07.i54 = select i1 %.not7.i53, float %181, float %180, !dbg !29
  %182 = fneg float %163, !dbg !29
  %183 = select i1 %152, float %182, float %96, !dbg !29
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i55 = icmp eq i32 %184, 0, !dbg !29
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i54, float %183, float %183) #3, !dbg !29
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i54, float %183, float %183) #3, !dbg !29
  %.08.i56 = select i1 %.not8.i55, float %186, float %185, !dbg !29
  br i1 %152, label %187, label %__nv_erff.exit61, !dbg !29

187:                                              ; preds = %__internal_fmad.exit.i42
  %188 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i56) #3, !dbg !29
  %189 = fsub float 1.000000e+00, %188, !dbg !29
  %190 = bitcast float %189 to i32, !dbg !29
  %191 = bitcast float %96 to i32, !dbg !29
  %192 = and i32 %191, -2147483648, !dbg !29
  %193 = or i32 %192, %190, !dbg !29
  %194 = bitcast i32 %193 to float, !dbg !29
  br label %__nv_erff.exit61, !dbg !29

__nv_erff.exit61:                                 ; preds = %__internal_fmad.exit.i42, %187
  %r.0.i57 = phi float [ %194, %187 ], [ %.08.i56, %__internal_fmad.exit.i42 ], !dbg !29
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i62 = icmp eq i32 %195, 0, !dbg !29
  %196 = tail call float @llvm.nvvm.fabs.ftz.f(float %97) #3, !dbg !29
  %197 = tail call float @llvm.nvvm.fabs.f(float %97) #3, !dbg !29
  %.0.i63 = select i1 %.not.i62, float %197, float %196, !dbg !29
  %198 = fcmp oge float %.0.i63, 0x3FF00C1FC0000000, !dbg !29
  br i1 %198, label %__nv_fabsf.exit1.i80, label %200, !dbg !29

__nv_fabsf.exit1.i80:                             ; preds = %__nv_erff.exit61
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i81 = icmp eq i32 %199, 0, !dbg !29
  %.01.i82 = select i1 %.not1.i81, float %197, float %196, !dbg !29
  br label %__internal_fmad.exit.i64, !dbg !29

200:                                              ; preds = %__nv_erff.exit61
  %201 = fmul float %97, %97, !dbg !29
  br label %__internal_fmad.exit.i64, !dbg !29

__internal_fmad.exit.i64:                         ; preds = %200, %__nv_fabsf.exit1.i80
  %202 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i80 ], [ 0x3FC06EBA60000000, %200 ], !dbg !29
  %203 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i80 ], [ 0xBFD8127580000000, %200 ], !dbg !29
  %204 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i80 ], [ 0x3FBCE315E0000000, %200 ], !dbg !29
  %205 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i80 ], [ 0xBF9B837CE0000000, %200 ], !dbg !29
  %206 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i80 ], [ 0x3F755ABD40000000, %200 ], !dbg !29
  %207 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i80 ], [ 0xBF4AE9A400000000, %200 ], !dbg !29
  %208 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i80 ], [ 0x3F163D2D40000000, %200 ], !dbg !29
  %209 = phi float [ %.01.i82, %__nv_fabsf.exit1.i80 ], [ %201, %200 ], !dbg !29
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i65 = icmp eq i32 %210, 0, !dbg !29
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %208, float %209, float %207) #3, !dbg !29
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %208, float %209, float %207) #3, !dbg !29
  %.02.i66 = select i1 %.not2.i65, float %212, float %211, !dbg !29
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i67 = icmp eq i32 %213, 0, !dbg !29
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i66, float %209, float %206) #3, !dbg !29
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i66, float %209, float %206) #3, !dbg !29
  %.03.i68 = select i1 %.not3.i67, float %215, float %214, !dbg !29
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i69 = icmp eq i32 %216, 0, !dbg !29
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i68, float %209, float %205) #3, !dbg !29
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i68, float %209, float %205) #3, !dbg !29
  %.04.i70 = select i1 %.not4.i69, float %218, float %217, !dbg !29
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i71 = icmp eq i32 %219, 0, !dbg !29
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i70, float %209, float %204) #3, !dbg !29
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i70, float %209, float %204) #3, !dbg !29
  %.05.i72 = select i1 %.not5.i71, float %221, float %220, !dbg !29
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i73 = icmp eq i32 %222, 0, !dbg !29
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i72, float %209, float %203) #3, !dbg !29
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i72, float %209, float %203) #3, !dbg !29
  %.06.i74 = select i1 %.not6.i73, float %224, float %223, !dbg !29
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i75 = icmp eq i32 %225, 0, !dbg !29
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i74, float %209, float %202) #3, !dbg !29
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i74, float %209, float %202) #3, !dbg !29
  %.07.i76 = select i1 %.not7.i75, float %227, float %226, !dbg !29
  %228 = fneg float %209, !dbg !29
  %229 = select i1 %198, float %228, float %97, !dbg !29
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i77 = icmp eq i32 %230, 0, !dbg !29
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i76, float %229, float %229) #3, !dbg !29
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i76, float %229, float %229) #3, !dbg !29
  %.08.i78 = select i1 %.not8.i77, float %232, float %231, !dbg !29
  br i1 %198, label %233, label %__nv_erff.exit83, !dbg !29

233:                                              ; preds = %__internal_fmad.exit.i64
  %234 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i78) #3, !dbg !29
  %235 = fsub float 1.000000e+00, %234, !dbg !29
  %236 = bitcast float %235 to i32, !dbg !29
  %237 = bitcast float %97 to i32, !dbg !29
  %238 = and i32 %237, -2147483648, !dbg !29
  %239 = or i32 %238, %236, !dbg !29
  %240 = bitcast i32 %239 to float, !dbg !29
  br label %__nv_erff.exit83, !dbg !29

__nv_erff.exit83:                                 ; preds = %__internal_fmad.exit.i64, %233
  %r.0.i79 = phi float [ %240, %233 ], [ %.08.i78, %__internal_fmad.exit.i64 ], !dbg !29
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i84 = icmp eq i32 %241, 0, !dbg !29
  %242 = tail call float @llvm.nvvm.fabs.ftz.f(float %98) #3, !dbg !29
  %243 = tail call float @llvm.nvvm.fabs.f(float %98) #3, !dbg !29
  %.0.i85 = select i1 %.not.i84, float %243, float %242, !dbg !29
  %244 = fcmp oge float %.0.i85, 0x3FF00C1FC0000000, !dbg !29
  br i1 %244, label %__nv_fabsf.exit1.i102, label %246, !dbg !29

__nv_fabsf.exit1.i102:                            ; preds = %__nv_erff.exit83
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i103 = icmp eq i32 %245, 0, !dbg !29
  %.01.i104 = select i1 %.not1.i103, float %243, float %242, !dbg !29
  br label %__internal_fmad.exit.i86, !dbg !29

246:                                              ; preds = %__nv_erff.exit83
  %247 = fmul float %98, %98, !dbg !29
  br label %__internal_fmad.exit.i86, !dbg !29

__internal_fmad.exit.i86:                         ; preds = %246, %__nv_fabsf.exit1.i102
  %248 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i102 ], [ 0x3FC06EBA60000000, %246 ], !dbg !29
  %249 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i102 ], [ 0xBFD8127580000000, %246 ], !dbg !29
  %250 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i102 ], [ 0x3FBCE315E0000000, %246 ], !dbg !29
  %251 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i102 ], [ 0xBF9B837CE0000000, %246 ], !dbg !29
  %252 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i102 ], [ 0x3F755ABD40000000, %246 ], !dbg !29
  %253 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i102 ], [ 0xBF4AE9A400000000, %246 ], !dbg !29
  %254 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i102 ], [ 0x3F163D2D40000000, %246 ], !dbg !29
  %255 = phi float [ %.01.i104, %__nv_fabsf.exit1.i102 ], [ %247, %246 ], !dbg !29
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i87 = icmp eq i32 %256, 0, !dbg !29
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %254, float %255, float %253) #3, !dbg !29
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %254, float %255, float %253) #3, !dbg !29
  %.02.i88 = select i1 %.not2.i87, float %258, float %257, !dbg !29
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i89 = icmp eq i32 %259, 0, !dbg !29
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i88, float %255, float %252) #3, !dbg !29
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i88, float %255, float %252) #3, !dbg !29
  %.03.i90 = select i1 %.not3.i89, float %261, float %260, !dbg !29
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i91 = icmp eq i32 %262, 0, !dbg !29
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i90, float %255, float %251) #3, !dbg !29
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i90, float %255, float %251) #3, !dbg !29
  %.04.i92 = select i1 %.not4.i91, float %264, float %263, !dbg !29
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i93 = icmp eq i32 %265, 0, !dbg !29
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %255, float %250) #3, !dbg !29
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %255, float %250) #3, !dbg !29
  %.05.i94 = select i1 %.not5.i93, float %267, float %266, !dbg !29
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i95 = icmp eq i32 %268, 0, !dbg !29
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i94, float %255, float %249) #3, !dbg !29
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i94, float %255, float %249) #3, !dbg !29
  %.06.i96 = select i1 %.not6.i95, float %270, float %269, !dbg !29
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i97 = icmp eq i32 %271, 0, !dbg !29
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i96, float %255, float %248) #3, !dbg !29
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i96, float %255, float %248) #3, !dbg !29
  %.07.i98 = select i1 %.not7.i97, float %273, float %272, !dbg !29
  %274 = fneg float %255, !dbg !29
  %275 = select i1 %244, float %274, float %98, !dbg !29
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i99 = icmp eq i32 %276, 0, !dbg !29
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i98, float %275, float %275) #3, !dbg !29
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i98, float %275, float %275) #3, !dbg !29
  %.08.i100 = select i1 %.not8.i99, float %278, float %277, !dbg !29
  br i1 %244, label %279, label %__nv_erff.exit105, !dbg !29

279:                                              ; preds = %__internal_fmad.exit.i86
  %280 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i100) #3, !dbg !29
  %281 = fsub float 1.000000e+00, %280, !dbg !29
  %282 = bitcast float %281 to i32, !dbg !29
  %283 = bitcast float %98 to i32, !dbg !29
  %284 = and i32 %283, -2147483648, !dbg !29
  %285 = or i32 %284, %282, !dbg !29
  %286 = bitcast i32 %285 to float, !dbg !29
  br label %__nv_erff.exit105, !dbg !29

__nv_erff.exit105:                                ; preds = %__internal_fmad.exit.i86, %279
  %r.0.i101 = phi float [ %286, %279 ], [ %.08.i100, %__internal_fmad.exit.i86 ], !dbg !29
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i106 = icmp eq i32 %287, 0, !dbg !29
  %288 = tail call float @llvm.nvvm.fabs.ftz.f(float %99) #3, !dbg !29
  %289 = tail call float @llvm.nvvm.fabs.f(float %99) #3, !dbg !29
  %.0.i107 = select i1 %.not.i106, float %289, float %288, !dbg !29
  %290 = fcmp oge float %.0.i107, 0x3FF00C1FC0000000, !dbg !29
  br i1 %290, label %__nv_fabsf.exit1.i124, label %292, !dbg !29

__nv_fabsf.exit1.i124:                            ; preds = %__nv_erff.exit105
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i125 = icmp eq i32 %291, 0, !dbg !29
  %.01.i126 = select i1 %.not1.i125, float %289, float %288, !dbg !29
  br label %__internal_fmad.exit.i108, !dbg !29

292:                                              ; preds = %__nv_erff.exit105
  %293 = fmul float %99, %99, !dbg !29
  br label %__internal_fmad.exit.i108, !dbg !29

__internal_fmad.exit.i108:                        ; preds = %292, %__nv_fabsf.exit1.i124
  %294 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i124 ], [ 0x3FC06EBA60000000, %292 ], !dbg !29
  %295 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i124 ], [ 0xBFD8127580000000, %292 ], !dbg !29
  %296 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i124 ], [ 0x3FBCE315E0000000, %292 ], !dbg !29
  %297 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i124 ], [ 0xBF9B837CE0000000, %292 ], !dbg !29
  %298 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i124 ], [ 0x3F755ABD40000000, %292 ], !dbg !29
  %299 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i124 ], [ 0xBF4AE9A400000000, %292 ], !dbg !29
  %300 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i124 ], [ 0x3F163D2D40000000, %292 ], !dbg !29
  %301 = phi float [ %.01.i126, %__nv_fabsf.exit1.i124 ], [ %293, %292 ], !dbg !29
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i109 = icmp eq i32 %302, 0, !dbg !29
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %300, float %301, float %299) #3, !dbg !29
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %300, float %301, float %299) #3, !dbg !29
  %.02.i110 = select i1 %.not2.i109, float %304, float %303, !dbg !29
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i111 = icmp eq i32 %305, 0, !dbg !29
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i110, float %301, float %298) #3, !dbg !29
  %307 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i110, float %301, float %298) #3, !dbg !29
  %.03.i112 = select i1 %.not3.i111, float %307, float %306, !dbg !29
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i113 = icmp eq i32 %308, 0, !dbg !29
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i112, float %301, float %297) #3, !dbg !29
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i112, float %301, float %297) #3, !dbg !29
  %.04.i114 = select i1 %.not4.i113, float %310, float %309, !dbg !29
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i115 = icmp eq i32 %311, 0, !dbg !29
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i114, float %301, float %296) #3, !dbg !29
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i114, float %301, float %296) #3, !dbg !29
  %.05.i116 = select i1 %.not5.i115, float %313, float %312, !dbg !29
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i117 = icmp eq i32 %314, 0, !dbg !29
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i116, float %301, float %295) #3, !dbg !29
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i116, float %301, float %295) #3, !dbg !29
  %.06.i118 = select i1 %.not6.i117, float %316, float %315, !dbg !29
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i119 = icmp eq i32 %317, 0, !dbg !29
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i118, float %301, float %294) #3, !dbg !29
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i118, float %301, float %294) #3, !dbg !29
  %.07.i120 = select i1 %.not7.i119, float %319, float %318, !dbg !29
  %320 = fneg float %301, !dbg !29
  %321 = select i1 %290, float %320, float %99, !dbg !29
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i121 = icmp eq i32 %322, 0, !dbg !29
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i120, float %321, float %321) #3, !dbg !29
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i120, float %321, float %321) #3, !dbg !29
  %.08.i122 = select i1 %.not8.i121, float %324, float %323, !dbg !29
  br i1 %290, label %325, label %__nv_erff.exit127, !dbg !29

325:                                              ; preds = %__internal_fmad.exit.i108
  %326 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i122) #3, !dbg !29
  %327 = fsub float 1.000000e+00, %326, !dbg !29
  %328 = bitcast float %327 to i32, !dbg !29
  %329 = bitcast float %99 to i32, !dbg !29
  %330 = and i32 %329, -2147483648, !dbg !29
  %331 = or i32 %330, %328, !dbg !29
  %332 = bitcast i32 %331 to float, !dbg !29
  br label %__nv_erff.exit127, !dbg !29

__nv_erff.exit127:                                ; preds = %__internal_fmad.exit.i108, %325
  %r.0.i123 = phi float [ %332, %325 ], [ %.08.i122, %__internal_fmad.exit.i108 ], !dbg !29
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i128 = icmp eq i32 %333, 0, !dbg !29
  %334 = tail call float @llvm.nvvm.fabs.ftz.f(float %100) #3, !dbg !29
  %335 = tail call float @llvm.nvvm.fabs.f(float %100) #3, !dbg !29
  %.0.i129 = select i1 %.not.i128, float %335, float %334, !dbg !29
  %336 = fcmp oge float %.0.i129, 0x3FF00C1FC0000000, !dbg !29
  br i1 %336, label %__nv_fabsf.exit1.i146, label %338, !dbg !29

__nv_fabsf.exit1.i146:                            ; preds = %__nv_erff.exit127
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i147 = icmp eq i32 %337, 0, !dbg !29
  %.01.i148 = select i1 %.not1.i147, float %335, float %334, !dbg !29
  br label %__internal_fmad.exit.i130, !dbg !29

338:                                              ; preds = %__nv_erff.exit127
  %339 = fmul float %100, %100, !dbg !29
  br label %__internal_fmad.exit.i130, !dbg !29

__internal_fmad.exit.i130:                        ; preds = %338, %__nv_fabsf.exit1.i146
  %340 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i146 ], [ 0x3FC06EBA60000000, %338 ], !dbg !29
  %341 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i146 ], [ 0xBFD8127580000000, %338 ], !dbg !29
  %342 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i146 ], [ 0x3FBCE315E0000000, %338 ], !dbg !29
  %343 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i146 ], [ 0xBF9B837CE0000000, %338 ], !dbg !29
  %344 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i146 ], [ 0x3F755ABD40000000, %338 ], !dbg !29
  %345 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i146 ], [ 0xBF4AE9A400000000, %338 ], !dbg !29
  %346 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i146 ], [ 0x3F163D2D40000000, %338 ], !dbg !29
  %347 = phi float [ %.01.i148, %__nv_fabsf.exit1.i146 ], [ %339, %338 ], !dbg !29
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i131 = icmp eq i32 %348, 0, !dbg !29
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %346, float %347, float %345) #3, !dbg !29
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %346, float %347, float %345) #3, !dbg !29
  %.02.i132 = select i1 %.not2.i131, float %350, float %349, !dbg !29
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i133 = icmp eq i32 %351, 0, !dbg !29
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i132, float %347, float %344) #3, !dbg !29
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i132, float %347, float %344) #3, !dbg !29
  %.03.i134 = select i1 %.not3.i133, float %353, float %352, !dbg !29
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i135 = icmp eq i32 %354, 0, !dbg !29
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i134, float %347, float %343) #3, !dbg !29
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i134, float %347, float %343) #3, !dbg !29
  %.04.i136 = select i1 %.not4.i135, float %356, float %355, !dbg !29
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i137 = icmp eq i32 %357, 0, !dbg !29
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i136, float %347, float %342) #3, !dbg !29
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i136, float %347, float %342) #3, !dbg !29
  %.05.i138 = select i1 %.not5.i137, float %359, float %358, !dbg !29
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i139 = icmp eq i32 %360, 0, !dbg !29
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i138, float %347, float %341) #3, !dbg !29
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i138, float %347, float %341) #3, !dbg !29
  %.06.i140 = select i1 %.not6.i139, float %362, float %361, !dbg !29
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i141 = icmp eq i32 %363, 0, !dbg !29
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i140, float %347, float %340) #3, !dbg !29
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i140, float %347, float %340) #3, !dbg !29
  %.07.i142 = select i1 %.not7.i141, float %365, float %364, !dbg !29
  %366 = fneg float %347, !dbg !29
  %367 = select i1 %336, float %366, float %100, !dbg !29
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i143 = icmp eq i32 %368, 0, !dbg !29
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i142, float %367, float %367) #3, !dbg !29
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i142, float %367, float %367) #3, !dbg !29
  %.08.i144 = select i1 %.not8.i143, float %370, float %369, !dbg !29
  br i1 %336, label %371, label %__nv_erff.exit149, !dbg !29

371:                                              ; preds = %__internal_fmad.exit.i130
  %372 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i144) #3, !dbg !29
  %373 = fsub float 1.000000e+00, %372, !dbg !29
  %374 = bitcast float %373 to i32, !dbg !29
  %375 = bitcast float %100 to i32, !dbg !29
  %376 = and i32 %375, -2147483648, !dbg !29
  %377 = or i32 %376, %374, !dbg !29
  %378 = bitcast i32 %377 to float, !dbg !29
  br label %__nv_erff.exit149, !dbg !29

__nv_erff.exit149:                                ; preds = %__internal_fmad.exit.i130, %371
  %r.0.i145 = phi float [ %378, %371 ], [ %.08.i144, %__internal_fmad.exit.i130 ], !dbg !29
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i150 = icmp eq i32 %379, 0, !dbg !29
  %380 = tail call float @llvm.nvvm.fabs.ftz.f(float %101) #3, !dbg !29
  %381 = tail call float @llvm.nvvm.fabs.f(float %101) #3, !dbg !29
  %.0.i151 = select i1 %.not.i150, float %381, float %380, !dbg !29
  %382 = fcmp oge float %.0.i151, 0x3FF00C1FC0000000, !dbg !29
  br i1 %382, label %__nv_fabsf.exit1.i168, label %384, !dbg !29

__nv_fabsf.exit1.i168:                            ; preds = %__nv_erff.exit149
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i169 = icmp eq i32 %383, 0, !dbg !29
  %.01.i170 = select i1 %.not1.i169, float %381, float %380, !dbg !29
  br label %__internal_fmad.exit.i152, !dbg !29

384:                                              ; preds = %__nv_erff.exit149
  %385 = fmul float %101, %101, !dbg !29
  br label %__internal_fmad.exit.i152, !dbg !29

__internal_fmad.exit.i152:                        ; preds = %384, %__nv_fabsf.exit1.i168
  %386 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i168 ], [ 0x3FC06EBA60000000, %384 ], !dbg !29
  %387 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i168 ], [ 0xBFD8127580000000, %384 ], !dbg !29
  %388 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i168 ], [ 0x3FBCE315E0000000, %384 ], !dbg !29
  %389 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i168 ], [ 0xBF9B837CE0000000, %384 ], !dbg !29
  %390 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i168 ], [ 0x3F755ABD40000000, %384 ], !dbg !29
  %391 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i168 ], [ 0xBF4AE9A400000000, %384 ], !dbg !29
  %392 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i168 ], [ 0x3F163D2D40000000, %384 ], !dbg !29
  %393 = phi float [ %.01.i170, %__nv_fabsf.exit1.i168 ], [ %385, %384 ], !dbg !29
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i153 = icmp eq i32 %394, 0, !dbg !29
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %392, float %393, float %391) #3, !dbg !29
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %392, float %393, float %391) #3, !dbg !29
  %.02.i154 = select i1 %.not2.i153, float %396, float %395, !dbg !29
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i155 = icmp eq i32 %397, 0, !dbg !29
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i154, float %393, float %390) #3, !dbg !29
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i154, float %393, float %390) #3, !dbg !29
  %.03.i156 = select i1 %.not3.i155, float %399, float %398, !dbg !29
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i157 = icmp eq i32 %400, 0, !dbg !29
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i156, float %393, float %389) #3, !dbg !29
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i156, float %393, float %389) #3, !dbg !29
  %.04.i158 = select i1 %.not4.i157, float %402, float %401, !dbg !29
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i159 = icmp eq i32 %403, 0, !dbg !29
  %404 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i158, float %393, float %388) #3, !dbg !29
  %405 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i158, float %393, float %388) #3, !dbg !29
  %.05.i160 = select i1 %.not5.i159, float %405, float %404, !dbg !29
  %406 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i161 = icmp eq i32 %406, 0, !dbg !29
  %407 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i160, float %393, float %387) #3, !dbg !29
  %408 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i160, float %393, float %387) #3, !dbg !29
  %.06.i162 = select i1 %.not6.i161, float %408, float %407, !dbg !29
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i163 = icmp eq i32 %409, 0, !dbg !29
  %410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i162, float %393, float %386) #3, !dbg !29
  %411 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i162, float %393, float %386) #3, !dbg !29
  %.07.i164 = select i1 %.not7.i163, float %411, float %410, !dbg !29
  %412 = fneg float %393, !dbg !29
  %413 = select i1 %382, float %412, float %101, !dbg !29
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i165 = icmp eq i32 %414, 0, !dbg !29
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i164, float %413, float %413) #3, !dbg !29
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i164, float %413, float %413) #3, !dbg !29
  %.08.i166 = select i1 %.not8.i165, float %416, float %415, !dbg !29
  br i1 %382, label %417, label %__nv_erff.exit171, !dbg !29

417:                                              ; preds = %__internal_fmad.exit.i152
  %418 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i166) #3, !dbg !29
  %419 = fsub float 1.000000e+00, %418, !dbg !29
  %420 = bitcast float %419 to i32, !dbg !29
  %421 = bitcast float %101 to i32, !dbg !29
  %422 = and i32 %421, -2147483648, !dbg !29
  %423 = or i32 %422, %420, !dbg !29
  %424 = bitcast i32 %423 to float, !dbg !29
  br label %__nv_erff.exit171, !dbg !29

__nv_erff.exit171:                                ; preds = %__internal_fmad.exit.i152, %417
  %r.0.i167 = phi float [ %424, %417 ], [ %.08.i166, %__internal_fmad.exit.i152 ], !dbg !29
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i172 = icmp eq i32 %425, 0, !dbg !29
  %426 = tail call float @llvm.nvvm.fabs.ftz.f(float %102) #3, !dbg !29
  %427 = tail call float @llvm.nvvm.fabs.f(float %102) #3, !dbg !29
  %.0.i173 = select i1 %.not.i172, float %427, float %426, !dbg !29
  %428 = fcmp oge float %.0.i173, 0x3FF00C1FC0000000, !dbg !29
  br i1 %428, label %__nv_fabsf.exit1.i190, label %430, !dbg !29

__nv_fabsf.exit1.i190:                            ; preds = %__nv_erff.exit171
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i191 = icmp eq i32 %429, 0, !dbg !29
  %.01.i192 = select i1 %.not1.i191, float %427, float %426, !dbg !29
  br label %__internal_fmad.exit.i174, !dbg !29

430:                                              ; preds = %__nv_erff.exit171
  %431 = fmul float %102, %102, !dbg !29
  br label %__internal_fmad.exit.i174, !dbg !29

__internal_fmad.exit.i174:                        ; preds = %430, %__nv_fabsf.exit1.i190
  %432 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i190 ], [ 0x3FC06EBA60000000, %430 ], !dbg !29
  %433 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i190 ], [ 0xBFD8127580000000, %430 ], !dbg !29
  %434 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i190 ], [ 0x3FBCE315E0000000, %430 ], !dbg !29
  %435 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i190 ], [ 0xBF9B837CE0000000, %430 ], !dbg !29
  %436 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i190 ], [ 0x3F755ABD40000000, %430 ], !dbg !29
  %437 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i190 ], [ 0xBF4AE9A400000000, %430 ], !dbg !29
  %438 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i190 ], [ 0x3F163D2D40000000, %430 ], !dbg !29
  %439 = phi float [ %.01.i192, %__nv_fabsf.exit1.i190 ], [ %431, %430 ], !dbg !29
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i175 = icmp eq i32 %440, 0, !dbg !29
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %438, float %439, float %437) #3, !dbg !29
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %438, float %439, float %437) #3, !dbg !29
  %.02.i176 = select i1 %.not2.i175, float %442, float %441, !dbg !29
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i177 = icmp eq i32 %443, 0, !dbg !29
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i176, float %439, float %436) #3, !dbg !29
  %445 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i176, float %439, float %436) #3, !dbg !29
  %.03.i178 = select i1 %.not3.i177, float %445, float %444, !dbg !29
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i179 = icmp eq i32 %446, 0, !dbg !29
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i178, float %439, float %435) #3, !dbg !29
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i178, float %439, float %435) #3, !dbg !29
  %.04.i180 = select i1 %.not4.i179, float %448, float %447, !dbg !29
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i181 = icmp eq i32 %449, 0, !dbg !29
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i180, float %439, float %434) #3, !dbg !29
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i180, float %439, float %434) #3, !dbg !29
  %.05.i182 = select i1 %.not5.i181, float %451, float %450, !dbg !29
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i183 = icmp eq i32 %452, 0, !dbg !29
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i182, float %439, float %433) #3, !dbg !29
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i182, float %439, float %433) #3, !dbg !29
  %.06.i184 = select i1 %.not6.i183, float %454, float %453, !dbg !29
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not7.i185 = icmp eq i32 %455, 0, !dbg !29
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i184, float %439, float %432) #3, !dbg !29
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i184, float %439, float %432) #3, !dbg !29
  %.07.i186 = select i1 %.not7.i185, float %457, float %456, !dbg !29
  %458 = fneg float %439, !dbg !29
  %459 = select i1 %428, float %458, float %102, !dbg !29
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not8.i187 = icmp eq i32 %460, 0, !dbg !29
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i186, float %459, float %459) #3, !dbg !29
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i186, float %459, float %459) #3, !dbg !29
  %.08.i188 = select i1 %.not8.i187, float %462, float %461, !dbg !29
  br i1 %428, label %463, label %__nv_erff.exit193, !dbg !29

463:                                              ; preds = %__internal_fmad.exit.i174
  %464 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i188) #3, !dbg !29
  %465 = fsub float 1.000000e+00, %464, !dbg !29
  %466 = bitcast float %465 to i32, !dbg !29
  %467 = bitcast float %102 to i32, !dbg !29
  %468 = and i32 %467, -2147483648, !dbg !29
  %469 = or i32 %468, %466, !dbg !29
  %470 = bitcast i32 %469 to float, !dbg !29
  br label %__nv_erff.exit193, !dbg !29

__nv_erff.exit193:                                ; preds = %__internal_fmad.exit.i174, %463
  %r.0.i189 = phi float [ %470, %463 ], [ %.08.i188, %__internal_fmad.exit.i174 ], !dbg !29
  %471 = fadd float %68, 0x3EE4F8B580000000, !dbg !30
  %472 = fadd float %69, 0x3EE4F8B580000000, !dbg !30
  %473 = fadd float %70, 0x3EE4F8B580000000, !dbg !30
  %474 = fadd float %71, 0x3EE4F8B580000000, !dbg !30
  %475 = fadd float %77, 0x3EE4F8B580000000, !dbg !30
  %476 = fadd float %78, 0x3EE4F8B580000000, !dbg !30
  %477 = fadd float %79, 0x3EE4F8B580000000, !dbg !30
  %478 = fadd float %80, 0x3EE4F8B580000000, !dbg !30
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %479, 0, !dbg !31
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %480, 0, !dbg !31
  br i1 %.not.i, label %486, label %481, !dbg !31

481:                                              ; preds = %__nv_erff.exit193
  br i1 %.not1.i, label %484, label %482, !dbg !31

482:                                              ; preds = %481
  %483 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %471) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

484:                                              ; preds = %481
  %485 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %471) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

486:                                              ; preds = %__nv_erff.exit193
  br i1 %.not1.i, label %489, label %487, !dbg !31

487:                                              ; preds = %486
  %488 = tail call float @llvm.nvvm.sqrt.rn.f(float %471) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

489:                                              ; preds = %486
  %490 = tail call float @llvm.nvvm.sqrt.approx.f(float %471) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %482, %484, %487, %489
  %.0.i = phi float [ %483, %482 ], [ %485, %484 ], [ %488, %487 ], [ %490, %489 ], !dbg !31
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %491, 0, !dbg !31
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %492, 0, !dbg !31
  br i1 %.not.i1, label %498, label %493, !dbg !31

493:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %496, label %494, !dbg !31

494:                                              ; preds = %493
  %495 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %472) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

496:                                              ; preds = %493
  %497 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %472) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

498:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %501, label %499, !dbg !31

499:                                              ; preds = %498
  %500 = tail call float @llvm.nvvm.sqrt.rn.f(float %472) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

501:                                              ; preds = %498
  %502 = tail call float @llvm.nvvm.sqrt.approx.f(float %472) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %494, %496, %499, %501
  %.0.i3 = phi float [ %495, %494 ], [ %497, %496 ], [ %500, %499 ], [ %502, %501 ], !dbg !31
  %503 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i6 = icmp eq i32 %503, 0, !dbg !31
  %504 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i9 = icmp eq i32 %504, 0, !dbg !31
  br i1 %.not.i6, label %510, label %505, !dbg !31

505:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %508, label %506, !dbg !31

506:                                              ; preds = %505
  %507 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %473) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

508:                                              ; preds = %505
  %509 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %473) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

510:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %513, label %511, !dbg !31

511:                                              ; preds = %510
  %512 = tail call float @llvm.nvvm.sqrt.rn.f(float %473) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

513:                                              ; preds = %510
  %514 = tail call float @llvm.nvvm.sqrt.approx.f(float %473) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

__nv_sqrtf.exit10:                                ; preds = %506, %508, %511, %513
  %.0.i8 = phi float [ %507, %506 ], [ %509, %508 ], [ %512, %511 ], [ %514, %513 ], !dbg !31
  %515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i11 = icmp eq i32 %515, 0, !dbg !31
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i14 = icmp eq i32 %516, 0, !dbg !31
  br i1 %.not.i11, label %522, label %517, !dbg !31

517:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %520, label %518, !dbg !31

518:                                              ; preds = %517
  %519 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %474) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

520:                                              ; preds = %517
  %521 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %474) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

522:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %525, label %523, !dbg !31

523:                                              ; preds = %522
  %524 = tail call float @llvm.nvvm.sqrt.rn.f(float %474) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

525:                                              ; preds = %522
  %526 = tail call float @llvm.nvvm.sqrt.approx.f(float %474) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

__nv_sqrtf.exit15:                                ; preds = %518, %520, %523, %525
  %.0.i13 = phi float [ %519, %518 ], [ %521, %520 ], [ %524, %523 ], [ %526, %525 ], !dbg !31
  %527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i16 = icmp eq i32 %527, 0, !dbg !31
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i19 = icmp eq i32 %528, 0, !dbg !31
  br i1 %.not.i16, label %534, label %529, !dbg !31

529:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %532, label %530, !dbg !31

530:                                              ; preds = %529
  %531 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %475) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

532:                                              ; preds = %529
  %533 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %475) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

534:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %537, label %535, !dbg !31

535:                                              ; preds = %534
  %536 = tail call float @llvm.nvvm.sqrt.rn.f(float %475) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

537:                                              ; preds = %534
  %538 = tail call float @llvm.nvvm.sqrt.approx.f(float %475) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

__nv_sqrtf.exit20:                                ; preds = %530, %532, %535, %537
  %.0.i18 = phi float [ %531, %530 ], [ %533, %532 ], [ %536, %535 ], [ %538, %537 ], !dbg !31
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i21 = icmp eq i32 %539, 0, !dbg !31
  %540 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i24 = icmp eq i32 %540, 0, !dbg !31
  br i1 %.not.i21, label %546, label %541, !dbg !31

541:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %544, label %542, !dbg !31

542:                                              ; preds = %541
  %543 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %476) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

544:                                              ; preds = %541
  %545 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %476) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

546:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %549, label %547, !dbg !31

547:                                              ; preds = %546
  %548 = tail call float @llvm.nvvm.sqrt.rn.f(float %476) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

549:                                              ; preds = %546
  %550 = tail call float @llvm.nvvm.sqrt.approx.f(float %476) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

__nv_sqrtf.exit25:                                ; preds = %542, %544, %547, %549
  %.0.i23 = phi float [ %543, %542 ], [ %545, %544 ], [ %548, %547 ], [ %550, %549 ], !dbg !31
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i26 = icmp eq i32 %551, 0, !dbg !31
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i29 = icmp eq i32 %552, 0, !dbg !31
  br i1 %.not.i26, label %558, label %553, !dbg !31

553:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %556, label %554, !dbg !31

554:                                              ; preds = %553
  %555 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %477) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

556:                                              ; preds = %553
  %557 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %477) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

558:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %561, label %559, !dbg !31

559:                                              ; preds = %558
  %560 = tail call float @llvm.nvvm.sqrt.rn.f(float %477) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

561:                                              ; preds = %558
  %562 = tail call float @llvm.nvvm.sqrt.approx.f(float %477) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

__nv_sqrtf.exit30:                                ; preds = %554, %556, %559, %561
  %.0.i28 = phi float [ %555, %554 ], [ %557, %556 ], [ %560, %559 ], [ %562, %561 ], !dbg !31
  %563 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i31 = icmp eq i32 %563, 0, !dbg !31
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i34 = icmp eq i32 %564, 0, !dbg !31
  br i1 %.not.i31, label %570, label %565, !dbg !31

565:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %568, label %566, !dbg !31

566:                                              ; preds = %565
  %567 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %478) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

568:                                              ; preds = %565
  %569 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %478) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

570:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %573, label %571, !dbg !31

571:                                              ; preds = %570
  %572 = tail call float @llvm.nvvm.sqrt.rn.f(float %478) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

573:                                              ; preds = %570
  %574 = tail call float @llvm.nvvm.sqrt.approx.f(float %478) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

__nv_sqrtf.exit35:                                ; preds = %566, %568, %571, %573
  %.0.i33 = phi float [ %567, %566 ], [ %569, %568 ], [ %572, %571 ], [ %574, %573 ], !dbg !31
  %575 = fmul float %94, 5.000000e-01, !dbg !32
  %576 = fadd float %r.0.i189, 1.000000e+00, !dbg !33
  %577 = fmul float %575, %576, !dbg !34
  %578 = extractvalue { i32, i32, i32, i32 } %61, 3, !dbg !20
  %579 = bitcast i32 %578 to float, !dbg !20
  %580 = fsub float %577, %579, !dbg !35
  %581 = fmul float %93, 5.000000e-01, !dbg !32
  %582 = fadd float %r.0.i167, 1.000000e+00, !dbg !33
  %583 = fmul float %581, %582, !dbg !34
  %584 = extractvalue { i32, i32, i32, i32 } %61, 2, !dbg !20
  %585 = bitcast i32 %584 to float, !dbg !20
  %586 = fsub float %583, %585, !dbg !35
  %587 = fmul float %92, 5.000000e-01, !dbg !32
  %588 = fadd float %r.0.i145, 1.000000e+00, !dbg !33
  %589 = fmul float %587, %588, !dbg !34
  %590 = extractvalue { i32, i32, i32, i32 } %61, 1, !dbg !20
  %591 = bitcast i32 %590 to float, !dbg !20
  %592 = fsub float %589, %591, !dbg !35
  %593 = fmul float %91, 5.000000e-01, !dbg !32
  %594 = fadd float %r.0.i123, 1.000000e+00, !dbg !33
  %595 = fmul float %593, %594, !dbg !34
  %596 = extractvalue { i32, i32, i32, i32 } %61, 0, !dbg !20
  %597 = bitcast i32 %596 to float, !dbg !20
  %598 = fsub float %595, %597, !dbg !35
  %599 = fmul float %90, 5.000000e-01, !dbg !32
  %600 = fadd float %r.0.i101, 1.000000e+00, !dbg !33
  %601 = fmul float %599, %600, !dbg !34
  %602 = extractvalue { i32, i32, i32, i32 } %60, 3, !dbg !20
  %603 = bitcast i32 %602 to float, !dbg !20
  %604 = fsub float %601, %603, !dbg !35
  %605 = fmul float %89, 5.000000e-01, !dbg !32
  %606 = fadd float %r.0.i79, 1.000000e+00, !dbg !33
  %607 = fmul float %605, %606, !dbg !34
  %608 = extractvalue { i32, i32, i32, i32 } %60, 2, !dbg !20
  %609 = bitcast i32 %608 to float, !dbg !20
  %610 = fsub float %607, %609, !dbg !35
  %611 = fmul float %88, 5.000000e-01, !dbg !32
  %612 = fadd float %r.0.i57, 1.000000e+00, !dbg !33
  %613 = fmul float %611, %612, !dbg !34
  %614 = extractvalue { i32, i32, i32, i32 } %60, 1, !dbg !20
  %615 = bitcast i32 %614 to float, !dbg !20
  %616 = fsub float %613, %615, !dbg !35
  %617 = fmul float %87, 5.000000e-01, !dbg !32
  %618 = fadd float %r.0.i, 1.000000e+00, !dbg !33
  %619 = fmul float %617, %618, !dbg !34
  %620 = extractvalue { i32, i32, i32, i32 } %60, 0, !dbg !20
  %621 = bitcast i32 %620 to float, !dbg !20
  %622 = fsub float %619, %621, !dbg !35
  %623 = extractvalue { i32, i32, i32, i32 } %86, 3, !dbg !26
  %624 = bitcast i32 %623 to float, !dbg !26
  %625 = extractvalue { i32, i32, i32, i32 } %86, 2, !dbg !26
  %626 = bitcast i32 %625 to float, !dbg !26
  %627 = extractvalue { i32, i32, i32, i32 } %86, 1, !dbg !26
  %628 = bitcast i32 %627 to float, !dbg !26
  %629 = extractvalue { i32, i32, i32, i32 } %86, 0, !dbg !26
  %630 = bitcast i32 %629 to float, !dbg !26
  %631 = extractvalue { i32, i32, i32, i32 } %85, 3, !dbg !26
  %632 = bitcast i32 %631 to float, !dbg !26
  %633 = extractvalue { i32, i32, i32, i32 } %85, 2, !dbg !26
  %634 = bitcast i32 %633 to float, !dbg !26
  %635 = extractvalue { i32, i32, i32, i32 } %85, 1, !dbg !26
  %636 = bitcast i32 %635 to float, !dbg !26
  %637 = extractvalue { i32, i32, i32, i32 } %85, 0, !dbg !26
  %638 = bitcast i32 %637 to float, !dbg !26
  %639 = extractvalue { i32, i32, i32, i32 } %83, 3, !dbg !24
  %640 = bitcast i32 %639 to float, !dbg !24
  %641 = extractvalue { i32, i32, i32, i32 } %83, 2, !dbg !24
  %642 = bitcast i32 %641 to float, !dbg !24
  %643 = extractvalue { i32, i32, i32, i32 } %83, 1, !dbg !24
  %644 = bitcast i32 %643 to float, !dbg !24
  %645 = extractvalue { i32, i32, i32, i32 } %83, 0, !dbg !24
  %646 = bitcast i32 %645 to float, !dbg !24
  %647 = extractvalue { i32, i32, i32, i32 } %82, 3, !dbg !24
  %648 = bitcast i32 %647 to float, !dbg !24
  %649 = extractvalue { i32, i32, i32, i32 } %82, 2, !dbg !24
  %650 = bitcast i32 %649 to float, !dbg !24
  %651 = extractvalue { i32, i32, i32, i32 } %82, 1, !dbg !24
  %652 = bitcast i32 %651 to float, !dbg !24
  %653 = extractvalue { i32, i32, i32, i32 } %82, 0, !dbg !24
  %654 = bitcast i32 %653 to float, !dbg !24
  %655 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !36
  %656 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !36
  %657 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !36
  %658 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !36
  %659 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i18) #3, !dbg !36
  %660 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i23) #3, !dbg !36
  %661 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i28) #3, !dbg !36
  %662 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i33) #3, !dbg !36
  %663 = fmul float %622, %655, !dbg !37
  %664 = fmul float %616, %656, !dbg !37
  %665 = fmul float %610, %657, !dbg !37
  %666 = fmul float %604, %658, !dbg !37
  %667 = fmul float %598, %659, !dbg !37
  %668 = fmul float %592, %660, !dbg !37
  %669 = fmul float %586, %661, !dbg !37
  %670 = fmul float %580, %662, !dbg !37
  %671 = fmul float %663, %654, !dbg !38
  %672 = fmul float %664, %652, !dbg !38
  %673 = fmul float %665, %650, !dbg !38
  %674 = fmul float %666, %648, !dbg !38
  %675 = fmul float %667, %646, !dbg !38
  %676 = fmul float %668, %644, !dbg !38
  %677 = fmul float %669, %642, !dbg !38
  %678 = fmul float %670, %640, !dbg !38
  %679 = fadd float %671, %638, !dbg !39
  %680 = fadd float %672, %636, !dbg !39
  %681 = fadd float %673, %634, !dbg !39
  %682 = fadd float %674, %632, !dbg !39
  %683 = fadd float %675, %630, !dbg !39
  %684 = fadd float %676, %628, !dbg !39
  %685 = fadd float %677, %626, !dbg !39
  %686 = fadd float %678, %624, !dbg !39
  %687 = bitcast float %87 to i32, !dbg !40
  %688 = bitcast float %88 to i32, !dbg !40
  %689 = bitcast float %89 to i32, !dbg !40
  %690 = bitcast float %90 to i32, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %687, i32 %688, i32 %689, i32 %690, ptr addrspace(1) %18, i1 true) #3, !dbg !40
  %691 = bitcast float %91 to i32, !dbg !40
  %692 = bitcast float %92 to i32, !dbg !40
  %693 = bitcast float %93 to i32, !dbg !40
  %694 = bitcast float %94 to i32, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %691, i32 %692, i32 %693, i32 %694, ptr addrspace(1) %20, i1 true) #3, !dbg !40
  %695 = getelementptr float, ptr addrspace(1) %6, i64 %17, !dbg !41
  %696 = getelementptr float, ptr addrspace(1) %6, i64 %19, !dbg !41
  %697 = bitcast float %679 to i32, !dbg !42
  %698 = bitcast float %680 to i32, !dbg !42
  %699 = bitcast float %681 to i32, !dbg !42
  %700 = bitcast float %682 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %697, i32 %698, i32 %699, i32 %700, ptr addrspace(1) %695, i1 true) #3, !dbg !42
  %701 = bitcast float %683 to i32, !dbg !42
  %702 = bitcast float %684 to i32, !dbg !42
  %703 = bitcast float %685 to i32, !dbg !42
  %704 = bitcast float %686 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %701, i32 %702, i32 %703, i32 %704, ptr addrspace(1) %696, i1 true) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cl5ndy6fdarjezbzubt36acxwmahmmkq4yvxik4rfw4zaujttwvi.py", directory: "inductor_cache/l5")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_7", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_gelu_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 28, column: 36, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 36, column: 18, scope: !7)
!29 = !DILocation(line: 37, column: 25, scope: !7)
!30 = !DILocation(line: 43, column: 20, scope: !7)
!31 = !DILocation(line: 44, column: 27, scope: !7)
!32 = !DILocation(line: 34, column: 18, scope: !7)
!33 = !DILocation(line: 39, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 20, scope: !7)
!36 = !DILocation(line: 46, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 20, scope: !7)
!39 = !DILocation(line: 50, column: 20, scope: !7)
!40 = !DILocation(line: 51, column: 39, scope: !7)
!41 = !DILocation(line: 52, column: 25, scope: !7)
!42 = !DILocation(line: 52, column: 37, scope: !7)
!43 = !DILocation(line: 52, column: 4, scope: !7)
