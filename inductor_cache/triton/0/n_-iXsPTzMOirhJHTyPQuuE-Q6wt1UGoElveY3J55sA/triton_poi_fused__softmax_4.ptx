//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__softmax_4 // -- Begin function triton_poi_fused__softmax_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__softmax_4
.visible .entry triton_poi_fused__softmax_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_4_param_1,
	.param .u32 triton_poi_fused__softmax_4_param_2,
	.param .u32 triton_poi_fused__softmax_4_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<76>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused__softmax_4_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused__softmax_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:22:33
	shl.b32 	%r25, %r1, 4;
	.loc	1 23 44                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:23:44
	mov.u32 	%r26, %tid.x;
	bfe.u32 	%r27, %r26, 3, 4;
	shl.b32 	%r28, %r26, 1;
	and.b32  	%r29, %r28, 14;
	.loc	1 23 23                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:23:23
	or.b32  	%r30, %r25, %r27;
	or.b32  	%r31, %r25, %r29;
	.loc	1 25 28                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:25:33
	shl.b32 	%r32, %r2, 4;
	.loc	1 26 23                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:26:23
	or.b32  	%r33, %r32, %r29;
	or.b32  	%r34, %r32, %r27;
	.loc	1 30 19                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:30:19
	bfe.s32 	%r35, %r2, 27, 1;
	shr.u32 	%r36, %r35, 30;
	add.s32 	%r37, %r33, %r36;
	.loc	1 32 19                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:32:19
	shr.s32 	%r39, %r31, 31;
	shr.u32 	%r40, %r39, 30;
	add.s32 	%r41, %r31, %r40;
	.loc	1 31 19                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:31:19
	and.b32  	%r42, %r41, -4;
	sub.s32 	%r43, %r31, %r42;
	.loc	1 33 38                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:33:38
	shl.b32 	%r44, %r30, 4;
	.loc	1 33 35                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:33:35
	add.s32 	%r45, %r33, %r44;
	.loc	1 33 30                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:33:30
	mul.wide.s32 	%rd13, %r45, 4;
	add.s64 	%rd1, %rd11, %rd13;
	.loc	1 33 51                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:33:51
	max.s32 	%r46, %r30, %r33;
	setp.lt.s32 	%p2, %r46, 16;
	max.s32 	%r47, %r31, %r34;
	setp.lt.s32 	%p12, %r47, 16;
	.loc	1 33 43                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:33:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r17, 0x0;
	@%p2 ld.global.v2.b32 { %r14, %r17 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 32                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:34:32
	and.b32  	%r48, %r37, -4;
	.loc	1 34 37                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:34:37
	add.s32 	%r49, %r48, %r44;
	.loc	1 34 30                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:34:30
	mul.wide.s32 	%rd14, %r49, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 34 45                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:34:45
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r6;
	.loc	1 35 41                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:35:41
	or.b32  	%r50, %r49, 1;
	.loc	1 35 30                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:35:30
	mul.wide.s32 	%rd15, %r50, 4;
	add.s64 	%rd4, %rd11, %rd15;
	.loc	1 35 49                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:35:49
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r8;
	.loc	1 36 41                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:36:41
	or.b32  	%r51, %r49, 2;
	.loc	1 36 30                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:36:30
	mul.wide.s32 	%rd16, %r51, 4;
	add.s64 	%rd6, %rd11, %rd16;
	.loc	1 36 49                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:36:49
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r10;
	.loc	1 37 41                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:37:41
	or.b32  	%r52, %r49, 3;
	.loc	1 37 30                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:37:30
	mul.wide.s32 	%rd17, %r52, 4;
	add.s64 	%rd8, %rd11, %rd17;
	.loc	1 37 49                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:37:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r12;
	.loc	1 38 18                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:38:18
	add.f32 	%f9, %f1, %f3;
	add.f32 	%f10, %f2, %f4;
	.loc	1 39 18                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:39:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 40 18                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:40:18
	add.f32 	%f13, %f11, %f7;
	add.f32 	%f14, %f12, %f8;
	.loc	1 41 18                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:41:18
	mov.b32 	%r15, %f13;
	// begin inline asm
	div.full.f32 %r20, %r14, %r15;
	// end inline asm
	mov.b32 	%r18, %f14;
	// begin inline asm
	div.full.f32 %r22, %r17, %r18;
	// end inline asm
	.loc	1 42 32                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:32
	shl.b32 	%r53, %r34, 2;
	.loc	1 42 30                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:30
	add.s32 	%r54, %r53, %r43;
	.loc	1 42 40                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:40
	shl.b32 	%r55, %r41, 4;
	and.b32  	%r56, %r55, -64;
	.loc	1 42 37                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:37
	add.s32 	%r57, %r54, %r56;
	.loc	1 42 25                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:25
	mul.wide.s32 	%rd18, %r57, 4;
	add.s64 	%rd10, %rd12, %rd18;
	.loc	1 42 51                         // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:51
	shl.b32 	%r58, %r26, 5;
	and.b32  	%r59, %r58, 224;
	or.b32  	%r60, %r59, %r27;
	and.b32  	%r61, %r28, 254;
	shr.u32 	%r62, %r59, 3;
	add.s32 	%r63, %r62, %r60;
	shl.b32 	%r64, %r63, 2;
	mov.u32 	%r65, global_smem;
	add.s32 	%r19, %r65, %r64;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r66, %r59, 16;
	shr.u32 	%r67, %r66, 3;
	add.s32 	%r68, %r67, %r60;
	shl.b32 	%r69, %r68, 2;
	add.s32 	%r70, %r65, %r69;
	add.s32 	%r21, %r70, 64;
	// begin inline asm
	@%p10 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r71, %r26, 2;
	and.b32  	%r72, %r71, 30;
	add.s32 	%r73, %r72, %r61;
	shl.b32 	%r74, %r73, 2;
	add.s32 	%r75, %r65, %r74;
	ld.shared.v2.u32 	{%r23, %r24}, [%r75];
	// begin inline asm
	@%p12 st.global.v2.b32 [ %rd10 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 42 4                          // cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bg/cbgyoscrxgzjt7rqvox3dievtltgrlzcxhpzb3kwk6h4icozdhog.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 103
.b8 121
.b8 111
.b8 115
.b8 99
.b8 114
.b8 120
.b8 103
.b8 122
.b8 106
.b8 116
.b8 55
.b8 114
.b8 113
.b8 118
.b8 111
.b8 120
.b8 51
.b8 100
.b8 105
.b8 101
.b8 118
.b8 116
.b8 108
.b8 116
.b8 103
.b8 114
.b8 108
.b8 122
.b8 99
.b8 120
.b8 104
.b8 112
.b8 122
.b8 98
.b8 51
.b8 107
.b8 119
.b8 107
.b8 54
.b8 104
.b8 52
.b8 105
.b8 99
.b8 111
.b8 122
.b8 100
.b8 104
.b8 111
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
