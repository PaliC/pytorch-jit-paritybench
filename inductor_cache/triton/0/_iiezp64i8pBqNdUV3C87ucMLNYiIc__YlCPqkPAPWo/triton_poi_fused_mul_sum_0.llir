; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 96, !dbg !14
  %11 = srem i32 %9, 6, !dbg !15
  %.frozen = freeze i32 %9, !dbg !16
  %12 = sdiv i32 %.frozen, 24, !dbg !16
  %13 = mul i32 %12, 24, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %14 = shl nsw i32 %.decomposed, 2, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !19
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !20
  %18 = or disjoint i32 %14, 1, !dbg !21
  %19 = sext i32 %18 to i64, !dbg !22
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !22
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %10) #1, !dbg !23
  %22 = or disjoint i32 %14, 2, !dbg !24
  %23 = sext i32 %22 to i64, !dbg !25
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !25
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !26
  %26 = or disjoint i32 %14, 3, !dbg !27
  %27 = sext i32 %26 to i64, !dbg !28
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !28
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !29
  %30 = icmp slt i32 %11, 3, !dbg !30
  %31 = icmp slt i32 %11, 5, !dbg !31
  %32 = select i1 %31, i64 4, i64 8, !dbg !32
  %33 = select i1 %30, i64 0, i64 %32, !dbg !33
  %34 = shl nsw i32 %12, 4, !dbg !34
  %35 = sext i32 %34 to i64, !dbg !35
  %36 = or disjoint i64 %33, %35, !dbg !35
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !36
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %10) #1, !dbg !37
  %39 = or disjoint i64 %36, 1, !dbg !38
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !39
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !40
  %42 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !20
  %43 = insertelement <2 x i32> %42, i32 %21, i64 1, !dbg !20
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !20
  %45 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !37
  %46 = insertelement <2 x i32> %45, i32 %41, i64 1, !dbg !37
  %47 = bitcast <2 x i32> %46 to <2 x float>, !dbg !37
  %48 = fmul <2 x float> %44, %47, !dbg !41
  %shift = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !42
  %49 = fadd <2 x float> %48, %shift, !dbg !42
  %50 = or disjoint i64 %36, 2, !dbg !43
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !44
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %10) #1, !dbg !45
  %53 = or disjoint i64 %36, 3, !dbg !46
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !47
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %10) #1, !dbg !48
  %56 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !26
  %57 = insertelement <2 x i32> %56, i32 %29, i64 1, !dbg !26
  %58 = bitcast <2 x i32> %57 to <2 x float>, !dbg !26
  %59 = insertelement <2 x i32> poison, i32 %52, i64 0, !dbg !45
  %60 = insertelement <2 x i32> %59, i32 %55, i64 1, !dbg !45
  %61 = bitcast <2 x i32> %60 to <2 x float>, !dbg !45
  %62 = fmul <2 x float> %58, %61, !dbg !49
  %63 = fadd <2 x float> %49, %62, !dbg !50
  %shift1 = shufflevector <2 x float> %62, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !51
  %64 = fadd <2 x float> %63, %shift1, !dbg !51
  %65 = sext i32 %9 to i64, !dbg !52
  %66 = getelementptr float, ptr addrspace(1) %2, i64 %65, !dbg !52
  %bc = bitcast <2 x float> %64 to <2 x i32>, !dbg !53
  %67 = extractelement <2 x i32> %bc, i64 0, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %66, i1 %10) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpsmdunzyz2vosncs2j2xkalvoiapdlfjq6uk6fvupfyf3himjts.py", directory: "inductor_cache/ps")
!4 = !{ptr @triton_poi_fused_mul_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sum_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sum_0", linkageName: "triton_poi_fused_mul_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 33, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 28, column: 38, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 31, scope: !7)
!23 = !DILocation(line: 29, column: 42, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 42, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 31, column: 31, scope: !7)
!29 = !DILocation(line: 31, column: 42, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 45, column: 19, scope: !7)
!32 = !DILocation(line: 47, column: 34, scope: !7)
!33 = !DILocation(line: 48, column: 33, scope: !7)
!34 = !DILocation(line: 49, column: 44, scope: !7)
!35 = !DILocation(line: 49, column: 41, scope: !7)
!36 = !DILocation(line: 49, column: 31, scope: !7)
!37 = !DILocation(line: 49, column: 49, scope: !7)
!38 = !DILocation(line: 51, column: 45, scope: !7)
!39 = !DILocation(line: 51, column: 31, scope: !7)
!40 = !DILocation(line: 51, column: 53, scope: !7)
!41 = !DILocation(line: 50, column: 20, scope: !7)
!42 = !DILocation(line: 53, column: 20, scope: !7)
!43 = !DILocation(line: 54, column: 45, scope: !7)
!44 = !DILocation(line: 54, column: 31, scope: !7)
!45 = !DILocation(line: 54, column: 53, scope: !7)
!46 = !DILocation(line: 57, column: 45, scope: !7)
!47 = !DILocation(line: 57, column: 31, scope: !7)
!48 = !DILocation(line: 57, column: 53, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 20, scope: !7)
!51 = !DILocation(line: 59, column: 20, scope: !7)
!52 = !DILocation(line: 60, column: 25, scope: !7)
!53 = !DILocation(line: 60, column: 37, scope: !7)
!54 = !DILocation(line: 60, column: 4, scope: !7)
