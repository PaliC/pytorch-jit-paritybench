//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_gather_2 // -- Begin function triton_poi_fused_gather_2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 53, 108, 47, 99, 53, 108, 122, 109, 98, 118, 111, 98, 117, 97, 119, 114, 52, 120, 97, 100, 102, 122, 99, 51, 121, 115, 50, 98, 108, 118, 107, 98, 54, 113, 119, 105, 117, 100, 122, 119, 100, 105, 108, 116, 51, 99, 117, 97, 102, 120, 114, 121, 110, 102, 52, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 51};
                                        // @triton_poi_fused_gather_2
.visible .entry triton_poi_fused_gather_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_gather_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_gather_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_gather_2_param_2,
	.param .u32 triton_poi_fused_gather_2_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<35>;
	.loc	1 19 0                          // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_gather_2_param_0];
$L__tmp0:
	.loc	1 21 28                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:21:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:21:33
	shl.b32 	%r4, %r3, 8;
	.loc	1 22 36                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:22:36
	mov.u32 	%r5, %tid.x;
	shl.b32 	%r6, %r5, 1;
	and.b32  	%r7, %r6, 254;
	.loc	1 22 23                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:22:23
	or.b32  	%r1, %r4, %r7;
	.loc	1 23 21                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:23:21
	setp.lt.s32 	%p2, %r1, 512;
	.loc	1 27 36                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:27:36
	mul.lo.s32 	%r8, %r1, 3;
	.loc	1 27 34                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:27:34
	add.s32 	%r9, %r8, 4;
	.loc	1 27 30                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:27:30
	mul.wide.s32 	%rd8, %r8, 2;
	add.s64 	%rd9, %rd7, %rd8;
	add.s64 	%rd5, %rd9, 2;
	mul.wide.s32 	%rd10, %r9, 2;
	add.s64 	%rd6, %rd7, %rd10;
	.loc	1 27 41                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:27:41
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p2 ld.global.L1::evict_last.b16 { %rs1 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs2, 0x0;
	@%p2 ld.global.L1::evict_last.b16 { %rs2 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 28 19                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:28:19
	cvt.s64.s16 	%rd11, %rs1;
	cvt.s64.s16 	%rd12, %rs2;
	.loc	1 30 18                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:30:18
	add.s64 	%rd13, %rd11, 3;
	add.s64 	%rd14, %rd12, 3;
	.loc	1 31 18                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:31:18
	setp.lt.s16 	%p3, %rs1, 0;
	setp.lt.s16 	%p4, %rs2, 0;
	.loc	1 32 32                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:32:32
	selp.b64 	%rd1, %rd13, %rd11, %p3;
	selp.b64 	%rd2, %rd14, %rd12, %p4;
	.loc	1 33 60                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:33:60
	max.u64 	%rd15, %rd1, %rd2;
	setp.gt.u64 	%p5, %rd15, 2;
	and.pred  	%p6, %p2, %p5;
	@!%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:0:60
	ld.param.u64 	%rd4, [triton_poi_fused_gather_2_param_2];
	ld.param.u64 	%rd3, [triton_poi_fused_gather_2_param_1];
	or.b32  	%r2, %r1, 1;
	.loc	1 26 19                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:26:19
	shr.s32 	%r14, %r1, 31;
	shr.u32 	%r15, %r14, 29;
	add.s32 	%r16, %r1, %r15;
	shr.s32 	%r17, %r16, 3;
	.loc	1 25 19                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:25:19
	shr.s32 	%r18, %r2, 31;
	shr.u32 	%r19, %r18, 29;
	add.s32 	%r20, %r2, %r19;
	and.b32  	%r21, %r20, -8;
	sub.s32 	%r22, %r2, %r21;
	and.b32  	%r23, %r16, -8;
	sub.s32 	%r24, %r1, %r23;
	.loc	1 33 60                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:33:60
	bar.sync 	0;
	.loc	1 34 45                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:34:45
	mul.lo.s32 	%r25, %r17, 10;
	.loc	1 34 30                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:34:30
	shl.b64 	%rd19, %rd1, 2;
	add.s64 	%rd20, %rd3, %rd19;
	mul.wide.s32 	%rd21, %r24, 4;
	add.s64 	%rd22, %rd20, %rd21;
	mul.wide.s32 	%rd23, %r25, 4;
	add.s64 	%rd16, %rd22, %rd23;
	shl.b64 	%rd24, %rd2, 2;
	add.s64 	%rd25, %rd3, %rd24;
	mul.wide.s32 	%rd26, %r22, 4;
	add.s64 	%rd27, %rd25, %rd26;
	add.s64 	%rd17, %rd27, %rd23;
	.loc	1 34 50                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:34:50
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p2 ld.global.b32 { %r12 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.b32 { %r13 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 35 25                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:35:25
	mul.wide.s32 	%rd28, %r1, 4;
	add.s64 	%rd18, %rd4, %rd28;
	.loc	1 35 36                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:35:36
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd18 + 0 ], { %r12, %r13 };
	// end inline asm
	.loc	1 35 4                          // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:35:4
	ret;
$L__BB0_1:
	.loc	1 33 60                         // c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py:33:60
	mov.u64 	%rd29, assertMessage_0;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, assertFile_0;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, assertFunc_0;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd30;
	.param .b64 param1;
	st.param.b64 	[param1], %rd32;
	.param .b32 param2;
	st.param.b32 	[param2], 33;
	.param .b64 param3;
	st.param.b64 	[param3], %rd34;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5l/c5lzmbvobuawr4xadfzc3ys2blvkb6qwiudzwdilt3cuafxrynf4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 108
.b8 122
.b8 109
.b8 98
.b8 118
.b8 111
.b8 98
.b8 117
.b8 97
.b8 119
.b8 114
.b8 52
.b8 120
.b8 97
.b8 100
.b8 102
.b8 122
.b8 99
.b8 51
.b8 121
.b8 115
.b8 50
.b8 98
.b8 108
.b8 118
.b8 107
.b8 98
.b8 54
.b8 113
.b8 119
.b8 105
.b8 117
.b8 100
.b8 122
.b8 119
.b8 100
.b8 105
.b8 108
.b8 116
.b8 51
.b8 99
.b8 117
.b8 97
.b8 102
.b8 120
.b8 114
.b8 121
.b8 110
.b8 102
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
