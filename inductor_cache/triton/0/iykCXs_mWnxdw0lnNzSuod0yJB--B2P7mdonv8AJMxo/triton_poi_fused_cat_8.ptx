//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_8  // -- Begin function triton_poi_fused_cat_8
                                        // @triton_poi_fused_cat_8
.visible .entry triton_poi_fused_cat_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_6,
	.param .u32 triton_poi_fused_cat_8_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<84>;
	.reg .f32 	%f<36>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_cat_8_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_cat_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:21:33
	shl.b32 	%r34, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused_cat_8_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused_cat_8_param_3];
	.loc	1 22 36                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:22:36
	mov.u32 	%r35, %tid.x;
	shl.b32 	%r36, %r35, 1;
	ld.param.u64 	%rd16, [triton_poi_fused_cat_8_param_4];
	and.b32  	%r37, %r36, 254;
	ld.param.u64 	%rd17, [triton_poi_fused_cat_8_param_5];
	.loc	1 22 23                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:22:23
	or.b32  	%r38, %r34, %r37;
	ld.param.u64 	%rd18, [triton_poi_fused_cat_8_param_6];
	or.b32  	%r39, %r38, 1;
	.loc	1 24 21                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:24:21
	shr.s32 	%r41, %r38, 31;
	shr.u32 	%r42, %r41, 28;
	add.s32 	%r43, %r38, %r42;
	shr.s32 	%r44, %r43, 4;
	.loc	1 24 27                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:24:27
	shr.s32 	%r45, %r43, 31;
	shr.u32 	%r46, %r45, 26;
	add.s32 	%r47, %r44, %r46;
	and.b32  	%r48, %r47, -64;
	sub.s32 	%r49, %r44, %r48;
	.loc	1 25 19                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:25:19
	bfe.s32 	%r50, %r1, 23, 1;
	.loc	1 26 21                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:26:21
	shr.u32 	%r51, %r50, 30;
	.loc	1 25 19                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:25:19
	add.s32 	%r52, %r39, %r51;
	and.b32  	%r53, %r52, 134217724;
	sub.s32 	%r54, %r39, %r53;
	.loc	1 26 21                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:26:21
	add.s32 	%r55, %r38, %r51;
	shr.s32 	%r56, %r55, 2;
	.loc	1 27 19                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:27:19
	shr.u32 	%r57, %r50, 22;
	add.s32 	%r58, %r38, %r57;
	shr.s32 	%r59, %r58, 10;
	.loc	1 28 19                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:28:19
	and.b32  	%r60, %r43, -16;
	sub.s32 	%r61, %r38, %r60;
	.loc	1 34 18                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:34:18
	setp.lt.s32 	%p1, %r49, 32;
	.loc	1 35 46                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:46
	shl.b32 	%r62, %r49, 6;
	.loc	1 35 57                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:57
	shl.b32 	%r63, %r59, 11;
	.loc	1 36 33                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:33
	shl.b32 	%r64, %r54, 5;
	.loc	1 25 19                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:25:19
	and.b32  	%r65, %r55, -4;
	sub.s32 	%r66, %r38, %r65;
	shr.u32 	%r67, %r56, 30;
	add.s32 	%r68, %r56, %r67;
	and.b32  	%r69, %r68, -4;
	sub.s32 	%r70, %r56, %r69;
	.loc	1 35 37                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:37
	shl.b32 	%r71, %r70, 3;
	.loc	1 35 35                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:35
	add.s32 	%r72, %r63, %r66;
	.loc	1 35 42                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:42
	add.s32 	%r73, %r72, %r71;
	.loc	1 35 52                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:52
	add.s32 	%r74, %r73, %r62;
	.loc	1 35 30                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:30
	mul.wide.s32 	%rd19, %r74, 4;
	add.s64 	%rd1, %rd12, %rd19;
	mov.b32 	%r4, 0;
	.loc	1 35 62                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:35:62
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
	.loc	1 36 33                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:33
	shl.b32 	%r75, %r66, 5;
	.loc	1 36 38                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:38
	add.s32 	%r76, %r49, %r63;
	.loc	1 36 47                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:47
	add.s32 	%r77, %r76, %r75;
	.loc	1 36 58                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:58
	shl.b32 	%r78, %r70, 8;
	add.s32 	%r79, %r77, %r78;
	.loc	1 36 47                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:47
	add.s32 	%r80, %r76, %r64;
	.loc	1 36 58                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:58
	add.s32 	%r81, %r80, %r78;
	.loc	1 36 30                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:30
	mul.wide.s32 	%rd20, %r79, 4;
	add.s64 	%rd2, %rd13, %rd20;
	mul.wide.s32 	%rd21, %r81, 4;
	add.s64 	%rd3, %rd13, %rd21;
	.loc	1 36 64                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:64
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	// end inline asm
	.loc	1 37 30                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:37:30
	mul.wide.s32 	%rd22, %r49, 4;
	add.s64 	%rd4, %rd14, %rd22;
	.loc	1 37 35                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:37:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r10, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r12, %r4;
	// end inline asm
	.loc	1 40 31                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:40:31
	add.s64 	%rd6, %rd15, %rd20;
	add.s64 	%rd7, %rd15, %rd21;
	.loc	1 40 65                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:40:65
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r14, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r16, %r4;
	// end inline asm
	.loc	1 41 31                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:41:31
	add.s64 	%rd8, %rd16, %rd22;
	.loc	1 41 36                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:41:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r18, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r20, %r4;
	// end inline asm
	.loc	1 36 64                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:64
	mov.b32 	%f7, %r6;
	mov.b32 	%f8, %r14;
	.loc	1 37 35                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:37:35
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r18;
	.loc	1 38 18                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:38:18
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 39 18                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:39:18
	add.f32 	%f13, %f12, %f5;
	.loc	1 36 64                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:36:64
	mov.b32 	%f14, %r8;
	mov.b32 	%f15, %r16;
	.loc	1 37 35                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:37:35
	mov.b32 	%f16, %r12;
	mov.b32 	%f17, %r20;
	.loc	1 38 18                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:38:18
	add.f32 	%f18, %f15, %f17;
	add.f32 	%f19, %f14, %f16;
	.loc	1 39 18                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:39:18
	add.f32 	%f20, %f19, %f6;
	.loc	1 43 19                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:43:19
	add.f32 	%f21, %f13, %f11;
	add.f32 	%f22, %f20, %f18;
	.loc	1 46 20                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:46:20
	setp.gt.s32 	%p20, %r49, 31;
	.loc	1 49 40                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:49:40
	shl.b32 	%r82, %r49, 4;
	.loc	1 49 58                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:49:58
	shl.b32 	%r83, %r59, 9;
	.loc	1 49 31                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:49:31
	cvt.s64.s32 	%rd23, %r82;
	cvt.s64.s32 	%rd24, %r83;
	cvt.s64.s32 	%rd25, %r61;
	add.s64 	%rd26, %rd25, %rd24;
	add.s64 	%rd27, %rd26, %rd23;
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd29, %rd17, %rd28;
	add.s64 	%rd10, %rd29, -2048;
	.loc	1 49 63                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:49:63
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p20 ld.global.v2.b32 { %r22, %r23 }, [ %rd10 + 0 ];
	@!%p20 mov.u32 %r22, %r4;
	@!%p20 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f23, %r22;
	mov.b32 	%f24, %r23;
	mov.f32 	%f25, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f26, %f25, %f23;
	sub.f32 	%f27, %f25, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f27, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f28, %f1, 0f3F800000;
	add.f32 	%f29, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r28, %f28;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f30, %r26;
	mov.b32 	%r31, %f29;
	// begin inline asm
	div.full.f32 %r29, %r27, %r31;
	// end inline asm
	mov.b32 	%f31, %r29;
$L__tmp2:
	.loc	1 51 20                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:51:20
	mul.f32 	%f32, %f30, %f23;
	mul.f32 	%f33, %f31, %f24;
	.loc	1 0 0                           // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:0:0
	selp.f32 	%f34, %f21, %f32, %p1;
	selp.f32 	%f35, %f22, %f33, %p1;
	.loc	1 55 25                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:55:25
	mul.wide.s32 	%rd30, %r38, 4;
	add.s64 	%rd11, %rd18, %rd30;
	.loc	1 55 37                         // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:55:37
	mov.b32 	%r32, %f34;
	mov.b32 	%r33, %f35;
	mov.pred 	%p23, -1;
	// begin inline asm
	@%p23 st.global.v2.b32 [ %rd11 + 0 ], { %r32, %r33 };
	// end inline asm
	.loc	1 55 4                          // ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py:55:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 52
.b8 101
.b8 114
.b8 54
.b8 50
.b8 97
.b8 112
.b8 52
.b8 51
.b8 102
.b8 122
.b8 113
.b8 122
.b8 50
.b8 106
.b8 105
.b8 99
.b8 118
.b8 103
.b8 97
.b8 97
.b8 115
.b8 121
.b8 117
.b8 114
.b8 117
.b8 121
.b8 101
.b8 99
.b8 55
.b8 115
.b8 110
.b8 119
.b8 108
.b8 114
.b8 98
.b8 53
.b8 107
.b8 121
.b8 104
.b8 51
.b8 52
.b8 98
.b8 110
.b8 106
.b8 102
.b8 108
.b8 115
.b8 99
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
