#loc = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_8(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<-32> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<2048> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<32> : tensor<256xi64> loc(#loc1)
    %cst_8 = arith.constant dense<1024> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_11 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_10 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_9 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_9 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_9 : tensor<256xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc11)
    %11 = arith.remsi %4, %cst_11 : tensor<256xi32> loc(#loc12)
    %12 = arith.extsi %6 : tensor<256xi32> to tensor<256xi64> loc(#loc13)
    %13 = arith.cmpi slt, %12, %cst_7 : tensor<256xi64> loc(#loc13)
    %14 = arith.muli %9, %cst_6 : tensor<256xi32> loc(#loc14)
    %15 = arith.addi %7, %14 : tensor<256xi32> loc(#loc15)
    %16 = arith.muli %6, %cst_10 : tensor<256xi32> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<256xi32> loc(#loc17)
    %18 = arith.muli %10, %cst_5 : tensor<256xi32> loc(#loc18)
    %19 = arith.addi %17, %18 : tensor<256xi32> loc(#loc19)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.addptr %20, %19 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc20)
    %22 = tt.load %21, %13, %cst_4 : tensor<256x!tt.ptr<f32>> loc(#loc21)
    %23 = arith.muli %7, %cst_3 : tensor<256xi32> loc(#loc22)
    %24 = arith.muli %9, %cst_2 : tensor<256xi32> loc(#loc23)
    %25 = arith.addi %23, %24 : tensor<256xi32> loc(#loc24)
    %26 = arith.addi %25, %18 : tensor<256xi32> loc(#loc25)
    %27 = arith.addi %26, %6 : tensor<256xi32> loc(#loc26)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc27)
    %29 = tt.addptr %28, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %30 = tt.load %29, %13, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %31 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc29)
    %32 = tt.addptr %31, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %33 = tt.load %32, %13, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %34 = arith.addf %30, %33 : tensor<256xf32> loc(#loc31)
    %35 = arith.addf %22, %34 : tensor<256xf32> loc(#loc32)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc33)
    %37 = tt.addptr %36, %27 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc33)
    %38 = tt.load %37, %13, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc34)
    %39 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc35)
    %40 = tt.addptr %39, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %41 = tt.load %40, %13, %cst_4 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc36)
    %42 = arith.addf %38, %41 : tensor<256xf32> loc(#loc37)
    %43 = arith.addf %35, %42 : tensor<256xf32> loc(#loc38)
    %44 = arith.cmpi sge, %12, %cst_7 : tensor<256xi64> loc(#loc39)
    %45 = arith.addi %6, %cst_1 : tensor<256xi32> loc(#loc40)
    %46 = arith.muli %45, %cst_11 : tensor<256xi32> loc(#loc41)
    %47 = arith.addi %11, %46 : tensor<256xi32> loc(#loc42)
    %48 = arith.muli %10, %cst_0 : tensor<256xi32> loc(#loc43)
    %49 = arith.addi %47, %48 : tensor<256xi32> loc(#loc44)
    %50 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc45)
    %51 = tt.addptr %50, %49 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc45)
    %52 = tt.load %51, %44, %cst_4 : tensor<256x!tt.ptr<f32>> loc(#loc46)
    %53 = arith.subf %cst_4, %52 : tensor<256xf32> loc(#loc59)
    %54 = math.exp %53 : tensor<256xf32> loc(#loc60)
    %55 = arith.addf %54, %cst : tensor<256xf32> loc(#loc61)
    %56 = arith.divf %cst, %55 : tensor<256xf32> loc(#loc62)
    %57 = arith.mulf %52, %56 : tensor<256xf32> loc(#loc52)
    %58 = arith.select %44, %57, %cst_4 : tensor<256xi1>, tensor<256xf32> loc(#loc53)
    %59 = arith.select %13, %43, %58 : tensor<256xi1>, tensor<256xf32> loc(#loc63)
    %60 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc56)
    %61 = tt.addptr %60, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc56)
    tt.store %61, %59 : tensor<256x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":21:28)
#loc3 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":21:33)
#loc4 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":22:36)
#loc5 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":22:23)
#loc6 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":24:21)
#loc7 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":24:27)
#loc8 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":25:19)
#loc9 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":26:21)
#loc10 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":26:26)
#loc11 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":27:19)
#loc12 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":28:19)
#loc13 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":34:18)
#loc14 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:37)
#loc15 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:35)
#loc16 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:46)
#loc17 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:42)
#loc18 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:57)
#loc19 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:52)
#loc20 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:30)
#loc21 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":35:62)
#loc22 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:33)
#loc23 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:42)
#loc24 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:38)
#loc25 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:47)
#loc26 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:58)
#loc27 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:30)
#loc28 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":36:64)
#loc29 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":37:30)
#loc30 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":37:35)
#loc31 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":38:18)
#loc32 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":39:18)
#loc33 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":40:31)
#loc34 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":40:65)
#loc35 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":41:31)
#loc36 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":41:36)
#loc37 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":42:20)
#loc38 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":43:19)
#loc39 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":46:20)
#loc40 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:48)
#loc41 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:40)
#loc42 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:36)
#loc43 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:58)
#loc44 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:54)
#loc45 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:31)
#loc46 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":49:63)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc48 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":50:23)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc52 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":51:20)
#loc53 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":53:35)
#loc54 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":54:34)
#loc55 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":45:34)
#loc56 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":55:25)
#loc57 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":55:37)
#loc58 = loc("inductor_cache/t4/ct4er62ap43fzqz2jicvgaasyuruyec7snwlrb5kyh34bnjflscg.py":55:4)
#loc59 = loc(callsite(#loc47 at #loc48))
#loc60 = loc(callsite(#loc49 at #loc48))
#loc61 = loc(callsite(#loc50 at #loc48))
#loc62 = loc(callsite(#loc51 at #loc48))
#loc63 = loc(fused[#loc54, #loc55])
