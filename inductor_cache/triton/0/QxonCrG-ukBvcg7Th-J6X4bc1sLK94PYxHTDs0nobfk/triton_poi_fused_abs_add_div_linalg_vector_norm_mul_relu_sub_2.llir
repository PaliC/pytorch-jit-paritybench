; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_abs_add_div_linalg_vector_norm_mul_relu_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 16, !dbg !15
  %12 = mul i32 %11, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = shl i32 %11, 6, !dbg !17
  %14 = add i32 %13, %.decomposed, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !20
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !20
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !20
  %20 = bitcast i32 %18 to float, !dbg !20
  %21 = bitcast i32 %19 to float, !dbg !20
  %22 = add i32 %14, 16, !dbg !21
  %23 = sext i32 %22 to i64, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !22
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !23
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !23
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !23
  %28 = bitcast i32 %26 to float, !dbg !23
  %29 = bitcast i32 %27 to float, !dbg !23
  %30 = add i32 %14, 32, !dbg !24
  %31 = sext i32 %30 to i64, !dbg !25
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !25
  %33 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %32, i1 %10) #1, !dbg !26
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !26
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !26
  %36 = bitcast i32 %34 to float, !dbg !26
  %37 = bitcast i32 %35 to float, !dbg !26
  %38 = add i32 %14, 48, !dbg !27
  %39 = sext i32 %38 to i64, !dbg !28
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !28
  %41 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %40, i1 %10) #1, !dbg !29
  %42 = extractvalue { i32, i32 } %41, 0, !dbg !29
  %43 = extractvalue { i32, i32 } %41, 1, !dbg !29
  %44 = bitcast i32 %42 to float, !dbg !29
  %45 = bitcast i32 %43 to float, !dbg !29
  %46 = fadd float %20, 0xBF647AE140000000, !dbg !30
  %47 = fadd float %21, 0xBF647AE140000000, !dbg !30
  %48 = fcmp olt float %46, 0.000000e+00, !dbg !31
  %49 = fcmp olt float %47, 0.000000e+00, !dbg !31
  %50 = select i1 %48, float 0.000000e+00, float %46, !dbg !35
  %51 = select i1 %49, float 0.000000e+00, float %47, !dbg !35
  %52 = fmul float %50, %20, !dbg !36
  %53 = fmul float %51, %21, !dbg !36
  %54 = tail call float @llvm.fabs.f32(float %46), !dbg !37
  %55 = tail call float @llvm.fabs.f32(float %47), !dbg !37
  %56 = fadd float %54, 0x3D71979980000000, !dbg !38
  %57 = fadd float %55, 0x3D71979980000000, !dbg !38
  %58 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float %56) #1, !dbg !39
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %53, float %57) #1, !dbg !39
  %60 = tail call float @llvm.fabs.f32(float %58), !dbg !40
  %61 = tail call float @llvm.fabs.f32(float %59), !dbg !40
  %62 = fadd float %28, 0xBF647AE140000000, !dbg !41
  %63 = fadd float %29, 0xBF647AE140000000, !dbg !41
  %64 = fcmp olt float %62, 0.000000e+00, !dbg !42
  %65 = fcmp olt float %63, 0.000000e+00, !dbg !42
  %66 = select i1 %64, float 0.000000e+00, float %62, !dbg !44
  %67 = select i1 %65, float 0.000000e+00, float %63, !dbg !44
  %68 = fmul float %66, %28, !dbg !45
  %69 = fmul float %67, %29, !dbg !45
  %70 = tail call float @llvm.fabs.f32(float %62), !dbg !46
  %71 = tail call float @llvm.fabs.f32(float %63), !dbg !46
  %72 = fadd float %70, 0x3D71979980000000, !dbg !47
  %73 = fadd float %71, 0x3D71979980000000, !dbg !47
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %68, float %72) #1, !dbg !48
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %69, float %73) #1, !dbg !48
  %76 = tail call float @llvm.fabs.f32(float %74), !dbg !49
  %77 = tail call float @llvm.fabs.f32(float %75), !dbg !49
  %78 = fadd float %60, %76, !dbg !50
  %79 = fadd float %61, %77, !dbg !50
  %80 = fadd float %36, 0xBF647AE140000000, !dbg !51
  %81 = fadd float %37, 0xBF647AE140000000, !dbg !51
  %82 = fcmp olt float %80, 0.000000e+00, !dbg !52
  %83 = fcmp olt float %81, 0.000000e+00, !dbg !52
  %84 = select i1 %82, float 0.000000e+00, float %80, !dbg !54
  %85 = select i1 %83, float 0.000000e+00, float %81, !dbg !54
  %86 = fmul float %84, %36, !dbg !55
  %87 = fmul float %85, %37, !dbg !55
  %88 = tail call float @llvm.fabs.f32(float %80), !dbg !56
  %89 = tail call float @llvm.fabs.f32(float %81), !dbg !56
  %90 = fadd float %88, 0x3D71979980000000, !dbg !57
  %91 = fadd float %89, 0x3D71979980000000, !dbg !57
  %92 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %86, float %90) #1, !dbg !58
  %93 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %87, float %91) #1, !dbg !58
  %94 = tail call float @llvm.fabs.f32(float %92), !dbg !59
  %95 = tail call float @llvm.fabs.f32(float %93), !dbg !59
  %96 = fadd float %78, %94, !dbg !60
  %97 = fadd float %79, %95, !dbg !60
  %98 = fadd float %44, 0xBF647AE140000000, !dbg !61
  %99 = fadd float %45, 0xBF647AE140000000, !dbg !61
  %100 = fcmp olt float %98, 0.000000e+00, !dbg !62
  %101 = fcmp olt float %99, 0.000000e+00, !dbg !62
  %102 = select i1 %100, float 0.000000e+00, float %98, !dbg !64
  %103 = select i1 %101, float 0.000000e+00, float %99, !dbg !64
  %104 = fmul float %102, %44, !dbg !65
  %105 = fmul float %103, %45, !dbg !65
  %106 = tail call float @llvm.fabs.f32(float %98), !dbg !66
  %107 = tail call float @llvm.fabs.f32(float %99), !dbg !66
  %108 = fadd float %106, 0x3D71979980000000, !dbg !67
  %109 = fadd float %107, 0x3D71979980000000, !dbg !67
  %110 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %104, float %108) #1, !dbg !68
  %111 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %105, float %109) #1, !dbg !68
  %112 = tail call float @llvm.fabs.f32(float %110), !dbg !69
  %113 = tail call float @llvm.fabs.f32(float %111), !dbg !69
  %114 = fadd float %96, %112, !dbg !70
  %115 = fadd float %97, %113, !dbg !70
  %116 = sext i32 %9 to i64, !dbg !71
  %117 = getelementptr float, ptr addrspace(1) %1, i64 %116, !dbg !71
  %118 = bitcast float %114 to i32, !dbg !72
  %119 = bitcast float %115 to i32, !dbg !72
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %118, i32 %119, ptr addrspace(1) %117, i1 %10) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvqc5bppvpgisdjbiwplljdzj6nfvjwxubiv2uldgnksylzu7yii.py", directory: "inductor_cache/vq")
!4 = !{ptr @triton_poi_fused_abs_add_div_linalg_vector_norm_mul_relu_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_add_div_linalg_vector_norm_mul_relu_sub_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_add_div_linalg_vector_norm_mul_relu_sub_2", linkageName: "triton_poi_fused_abs_add_div_linalg_vector_norm_mul_relu_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 38, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 31, scope: !7)
!23 = !DILocation(line: 28, column: 49, scope: !7)
!24 = !DILocation(line: 29, column: 41, scope: !7)
!25 = !DILocation(line: 29, column: 31, scope: !7)
!26 = !DILocation(line: 29, column: 49, scope: !7)
!27 = !DILocation(line: 30, column: 41, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 49, scope: !7)
!30 = !DILocation(line: 32, column: 18, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!34 = !DILocation(line: 34, column: 40, scope: !7)
!35 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 35, column: 18, scope: !7)
!37 = !DILocation(line: 36, column: 23, scope: !7)
!38 = !DILocation(line: 38, column: 18, scope: !7)
!39 = !DILocation(line: 39, column: 18, scope: !7)
!40 = !DILocation(line: 40, column: 24, scope: !7)
!41 = !DILocation(line: 41, column: 20, scope: !7)
!42 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !43)
!43 = !DILocation(line: 42, column: 41, scope: !7)
!44 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !43)
!45 = !DILocation(line: 43, column: 20, scope: !7)
!46 = !DILocation(line: 44, column: 24, scope: !7)
!47 = !DILocation(line: 45, column: 20, scope: !7)
!48 = !DILocation(line: 46, column: 20, scope: !7)
!49 = !DILocation(line: 47, column: 24, scope: !7)
!50 = !DILocation(line: 48, column: 20, scope: !7)
!51 = !DILocation(line: 49, column: 20, scope: !7)
!52 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !53)
!53 = !DILocation(line: 50, column: 41, scope: !7)
!54 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !53)
!55 = !DILocation(line: 51, column: 20, scope: !7)
!56 = !DILocation(line: 52, column: 24, scope: !7)
!57 = !DILocation(line: 53, column: 20, scope: !7)
!58 = !DILocation(line: 54, column: 20, scope: !7)
!59 = !DILocation(line: 55, column: 24, scope: !7)
!60 = !DILocation(line: 56, column: 20, scope: !7)
!61 = !DILocation(line: 57, column: 20, scope: !7)
!62 = !DILocation(line: 118, column: 15, scope: !32, inlinedAt: !63)
!63 = !DILocation(line: 58, column: 41, scope: !7)
!64 = !DILocation(line: 121, column: 29, scope: !32, inlinedAt: !63)
!65 = !DILocation(line: 59, column: 20, scope: !7)
!66 = !DILocation(line: 60, column: 24, scope: !7)
!67 = !DILocation(line: 61, column: 20, scope: !7)
!68 = !DILocation(line: 62, column: 20, scope: !7)
!69 = !DILocation(line: 63, column: 24, scope: !7)
!70 = !DILocation(line: 64, column: 20, scope: !7)
!71 = !DILocation(line: 65, column: 25, scope: !7)
!72 = !DILocation(line: 65, column: 37, scope: !7)
!73 = !DILocation(line: 65, column: 4, scope: !7)
