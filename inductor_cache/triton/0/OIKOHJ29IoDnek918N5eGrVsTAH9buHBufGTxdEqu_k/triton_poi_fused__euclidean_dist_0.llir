; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__euclidean_dist_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 384, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %12 = sdiv i32 %.frozen, 6, !dbg !15
  %13 = mul i32 %12, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %10, 6, !dbg !16
  %15 = icmp slt i32 %.decomposed, 4, !dbg !17
  %16 = shl nsw i32 %.decomposed, 4, !dbg !18
  %17 = shl nsw i32 %14, 4, !dbg !18
  %18 = sdiv i32 %9, 96, !dbg !19
  %19 = shl nsw i32 %18, 6, !dbg !20
  %20 = srem i32 %12, 16, !dbg !21
  %21 = add nsw i32 %20, %19, !dbg !22
  %22 = add nsw i32 %21, %16, !dbg !23
  %23 = add nsw i32 %21, %17, !dbg !23
  %24 = sext i32 %22 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = sext i32 %23 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !24
  %28 = and i1 %11, %15, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %28, i32 0, i1 %28) #1, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #1, !dbg !26
  %32 = bitcast i32 %31 to float, !dbg !26
  %33 = fmul float %30, -2.000000e+00, !dbg !27
  %34 = fmul float %32, -2.000000e+00, !dbg !27
  %35 = icmp sgt i32 %.decomposed, 3, !dbg !28
  %36 = icmp slt i32 %14, 5, !dbg !29
  %37 = icmp eq i32 %.decomposed, 4, !dbg !30
  %38 = and i1 %36, %35, !dbg !30
  %39 = sext i32 %21 to i64, !dbg !31
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !31
  %41 = and i1 %11, %37, !dbg !32
  %42 = and i1 %11, %38, !dbg !32
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41) #1, !dbg !33
  %44 = bitcast i32 %43 to float, !dbg !33
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %42, i32 0, i1 %42) #1, !dbg !33
  %46 = bitcast i32 %45 to float, !dbg !33
  %47 = fmul float %44, %44, !dbg !34
  %48 = fmul float %46, %46, !dbg !34
  %49 = sext i32 %21 to i64, !dbg !35
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !35
  %51 = getelementptr i8, ptr addrspace(1) %50, i64 64, !dbg !35
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %41, i32 0, i1 %41) #1, !dbg !36
  %53 = bitcast i32 %52 to float, !dbg !36
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %42, i32 0, i1 %42) #1, !dbg !36
  %55 = bitcast i32 %54 to float, !dbg !36
  %56 = fmul float %53, %53, !dbg !37
  %57 = fmul float %55, %55, !dbg !37
  %58 = fadd float %47, %56, !dbg !38
  %59 = fadd float %48, %57, !dbg !38
  %60 = sext i32 %21 to i64, !dbg !39
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !39
  %62 = getelementptr i8, ptr addrspace(1) %61, i64 128, !dbg !39
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %41, i32 0, i1 %41) #1, !dbg !40
  %64 = bitcast i32 %63 to float, !dbg !40
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %42, i32 0, i1 %42) #1, !dbg !40
  %66 = bitcast i32 %65 to float, !dbg !40
  %67 = fmul float %64, %64, !dbg !41
  %68 = fmul float %66, %66, !dbg !41
  %69 = fadd float %58, %67, !dbg !42
  %70 = fadd float %59, %68, !dbg !42
  %71 = sext i32 %21 to i64, !dbg !43
  %72 = getelementptr float, ptr addrspace(1) %0, i64 %71, !dbg !43
  %73 = getelementptr i8, ptr addrspace(1) %72, i64 192, !dbg !43
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %41, i32 0, i1 %41) #1, !dbg !44
  %75 = bitcast i32 %74 to float, !dbg !44
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %42, i32 0, i1 %42) #1, !dbg !44
  %77 = bitcast i32 %76 to float, !dbg !44
  %78 = fmul float %75, %75, !dbg !45
  %79 = fmul float %77, %77, !dbg !45
  %80 = fadd float %69, %78, !dbg !46
  %81 = fadd float %70, %79, !dbg !46
  %82 = icmp sgt i32 %.decomposed, 4, !dbg !47
  %83 = icmp sgt i32 %14, 4, !dbg !47
  %84 = select i1 %82, float 1.000000e+00, float 0.000000e+00, !dbg !48
  %85 = select i1 %83, float 1.000000e+00, float 0.000000e+00, !dbg !48
  %86 = select i1 %37, float %80, float %84, !dbg !49
  %87 = select i1 %38, float %81, float %85, !dbg !49
  %88 = select i1 %15, float %33, float %86, !dbg !49
  %89 = select i1 %15, float %34, float %87, !dbg !49
  %90 = sext i32 %9 to i64, !dbg !50
  %91 = getelementptr float, ptr addrspace(1) %1, i64 %90, !dbg !50
  %92 = bitcast float %88 to i32, !dbg !51
  %93 = bitcast float %89 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %92, i32 %93, ptr addrspace(1) %91, i1 %11) #1, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2rbkqrb4kvvv2ve5bsw2b3dlosx463pjt4eiwguv3k5xvkkpfgb.py", directory: "inductor_cache/2r")
!4 = !{ptr @triton_poi_fused__euclidean_dist_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__euclidean_dist_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__euclidean_dist_0", linkageName: "triton_poi_fused__euclidean_dist_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 50, scope: !7)
!20 = !DILocation(line: 32, column: 44, scope: !7)
!21 = !DILocation(line: 32, column: 63, scope: !7)
!22 = !DILocation(line: 32, column: 40, scope: !7)
!23 = !DILocation(line: 32, column: 58, scope: !7)
!24 = !DILocation(line: 32, column: 30, scope: !7)
!25 = !DILocation(line: 32, column: 77, scope: !7)
!26 = !DILocation(line: 32, column: 70, scope: !7)
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 20, scope: !7)
!29 = !DILocation(line: 39, column: 19, scope: !7)
!30 = !DILocation(line: 40, column: 20, scope: !7)
!31 = !DILocation(line: 41, column: 31, scope: !7)
!32 = !DILocation(line: 41, column: 69, scope: !7)
!33 = !DILocation(line: 41, column: 61, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 43, column: 31, scope: !7)
!36 = !DILocation(line: 43, column: 66, scope: !7)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 46, column: 31, scope: !7)
!40 = !DILocation(line: 46, column: 66, scope: !7)
!41 = !DILocation(line: 47, column: 20, scope: !7)
!42 = !DILocation(line: 48, column: 20, scope: !7)
!43 = !DILocation(line: 49, column: 31, scope: !7)
!44 = !DILocation(line: 49, column: 66, scope: !7)
!45 = !DILocation(line: 50, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 20, scope: !7)
!47 = !DILocation(line: 54, column: 20, scope: !7)
!48 = !DILocation(line: 59, column: 35, scope: !7)
!49 = !DILocation(line: 0, scope: !7)
!50 = !DILocation(line: 62, column: 25, scope: !7)
!51 = !DILocation(line: 62, column: 37, scope: !7)
!52 = !DILocation(line: 62, column: 4, scope: !7)
