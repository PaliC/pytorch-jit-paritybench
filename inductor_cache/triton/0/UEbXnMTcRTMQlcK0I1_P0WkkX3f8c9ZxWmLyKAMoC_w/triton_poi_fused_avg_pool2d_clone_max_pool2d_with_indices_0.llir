; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_avg_pool2d_clone_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 3, !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %10 = and i32 %7, 7, !dbg !12
  %11 = and i32 %7, 15, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %6, %11, !dbg !13
  %14 = icmp slt i32 %12, 16, !dbg !14
  %15 = icmp slt i32 %13, 16, !dbg !14
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %17 = shl i32 %16, 3, !dbg !16
  %18 = lshr i32 %7, 4, !dbg !17
  %19 = and i32 %18, 7, !dbg !17
  %20 = or disjoint i32 %17, %10, !dbg !18
  %21 = or disjoint i32 %17, %19, !dbg !18
  %22 = icmp slt i32 %20, 8, !dbg !19
  %23 = icmp slt i32 %21, 8, !dbg !19
  %.frozen = freeze i32 %20, !dbg !20
  %24 = sdiv i32 %.frozen, 4, !dbg !20
  %25 = mul i32 %24, 4, !dbg !21
  %.decomposed = sub i32 %.frozen, %25, !dbg !21
  %.frozen8 = freeze i32 %13, !dbg !22
  %26 = sdiv i32 %.frozen8, 4, !dbg !22
  %27 = mul i32 %26, 4, !dbg !23
  %.decomposed9 = sub i32 %.frozen8, %27, !dbg !23
  %28 = shl nsw i32 %24, 1, !dbg !24
  %29 = icmp sgt i32 %.decomposed, 1, !dbg !25
  %30 = shl i32 %24, 3, !dbg !26
  %31 = shl i32 %12, 4, !dbg !27
  %32 = add i32 %30, %31, !dbg !28
  %33 = add i32 %32, -6, !dbg !29
  %34 = add i32 %33, %.decomposed, !dbg !30
  %35 = sext i32 %34 to i64, !dbg !31
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !31
  %37 = and i32 %20, -4, !dbg !32
  %38 = icmp eq i32 %37, 4, !dbg !32
  %39 = and i1 %38, %29, !dbg !32
  %40 = and i1 %14, %39, !dbg !33
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %40, i32 0, i1 %40) #2, !dbg !34
  %42 = bitcast i32 %41 to float, !dbg !34
  %43 = icmp sgt i32 %.decomposed, 0, !dbg !35
  %44 = add i32 %32, -5, !dbg !36
  %45 = add nsw i32 %44, %.decomposed, !dbg !37
  %46 = sext i32 %45 to i64, !dbg !38
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !38
  %48 = and i1 %38, %43, !dbg !39
  %49 = and i1 %14, %48, !dbg !40
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %49, i32 0, i1 %49) #2, !dbg !41
  %51 = bitcast i32 %50 to float, !dbg !41
  %52 = fadd float %42, %51, !dbg !42
  %53 = icmp sgt i32 %.decomposed, -1, !dbg !43
  %54 = add i32 %32, -4, !dbg !44
  %55 = add nsw i32 %54, %.decomposed, !dbg !45
  %56 = sext i32 %55 to i64, !dbg !46
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !46
  %58 = and i1 %38, %53, !dbg !47
  %59 = and i1 %14, %58, !dbg !48
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %59, i32 0, i1 %59) #2, !dbg !49
  %61 = bitcast i32 %60 to float, !dbg !49
  %62 = fadd float %52, %61, !dbg !50
  %63 = add nsw i32 %.decomposed, 1, !dbg !51
  %64 = icmp ult i32 %63, 4, !dbg !52
  %65 = add i32 %32, -3, !dbg !53
  %66 = add i32 %65, %.decomposed, !dbg !54
  %67 = sext i32 %66 to i64, !dbg !55
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !55
  %69 = and i1 %38, %64, !dbg !56
  %70 = and i1 %14, %69, !dbg !57
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %70, i32 0, i1 %70) #2, !dbg !58
  %72 = bitcast i32 %71 to float, !dbg !58
  %73 = fadd float %62, %72, !dbg !59
  %74 = add nsw i32 %.decomposed, 2, !dbg !60
  %75 = icmp ult i32 %74, 4, !dbg !61
  %76 = add i32 %32, -2, !dbg !62
  %77 = add i32 %76, %.decomposed, !dbg !63
  %78 = sext i32 %77 to i64, !dbg !64
  %79 = getelementptr float, ptr addrspace(1) %0, i64 %78, !dbg !64
  %80 = and i1 %38, %75, !dbg !65
  %81 = and i1 %14, %80, !dbg !66
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %81, i32 0, i1 %81) #2, !dbg !67
  %83 = bitcast i32 %82 to float, !dbg !67
  %84 = fadd float %73, %83, !dbg !68
  %85 = add i32 %20, 3, !dbg !69
  %86 = icmp ult i32 %85, 11, !dbg !69
  %87 = and i1 %86, %29, !dbg !69
  %88 = and i1 %14, %87, !dbg !70
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %88, i32 0, i1 %88) #2, !dbg !71
  %90 = bitcast i32 %89 to float, !dbg !71
  %91 = fadd float %84, %90, !dbg !72
  %92 = add i32 %32, -1, !dbg !73
  %93 = add i32 %92, %.decomposed, !dbg !74
  %94 = sext i32 %93 to i64, !dbg !75
  %95 = getelementptr float, ptr addrspace(1) %0, i64 %94, !dbg !75
  %96 = and i1 %86, %43, !dbg !76
  %97 = and i1 %14, %96, !dbg !77
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %95, i1 %97, i32 0, i1 %97) #2, !dbg !78
  %99 = bitcast i32 %98 to float, !dbg !78
  %100 = fadd float %91, %99, !dbg !79
  %101 = add i32 %32, %.decomposed, !dbg !80
  %102 = sext i32 %101 to i64, !dbg !81
  %103 = getelementptr float, ptr addrspace(1) %0, i64 %102, !dbg !81
  %104 = and i1 %86, %53, !dbg !82
  %105 = and i1 %14, %104, !dbg !83
  %106 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %103, i1 %105, i32 0, i1 %105) #2, !dbg !84
  %107 = bitcast i32 %106 to float, !dbg !84
  %108 = fadd float %100, %107, !dbg !85
  %109 = add i32 %32, %63, !dbg !86
  %110 = sext i32 %109 to i64, !dbg !87
  %111 = getelementptr float, ptr addrspace(1) %0, i64 %110, !dbg !87
  %112 = and i1 %86, %64, !dbg !88
  %113 = and i1 %14, %112, !dbg !89
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %111, i1 %113, i32 0, i1 %113) #2, !dbg !90
  %115 = bitcast i32 %114 to float, !dbg !90
  %116 = fadd float %108, %115, !dbg !91
  %117 = add i32 %32, %74, !dbg !92
  %118 = sext i32 %117 to i64, !dbg !93
  %119 = getelementptr float, ptr addrspace(1) %0, i64 %118, !dbg !93
  %120 = and i1 %86, %75, !dbg !94
  %121 = and i1 %14, %120, !dbg !95
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %119, i1 %121, i32 0, i1 %121) #2, !dbg !96
  %123 = bitcast i32 %122 to float, !dbg !96
  %124 = fadd float %116, %123, !dbg !97
  %125 = or disjoint i32 %28, 1, !dbg !98
  %126 = icmp sgt i32 %20, -4, !dbg !99
  %127 = icmp slt i32 %125, 4, !dbg !100
  %128 = and i1 %126, %127, !dbg !101
  %129 = and i1 %29, %128, !dbg !102
  %130 = and i1 %22, %129, !dbg !103
  %131 = and i1 %14, %130, !dbg !104
  %132 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %119, i1 %131, i32 0, i1 %131) #2, !dbg !105
  %133 = bitcast i32 %132 to float, !dbg !105
  %134 = fadd float %124, %133, !dbg !106
  %135 = and i1 %43, %128, !dbg !107
  %136 = add nsw i32 %.decomposed, 3, !dbg !108
  %137 = add i32 %32, %136, !dbg !109
  %138 = sext i32 %137 to i64, !dbg !110
  %139 = getelementptr float, ptr addrspace(1) %0, i64 %138, !dbg !110
  %140 = and i1 %22, %135, !dbg !111
  %141 = and i1 %14, %140, !dbg !112
  %142 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %139, i1 %141, i32 0, i1 %141) #2, !dbg !113
  %143 = bitcast i32 %142 to float, !dbg !113
  %144 = fadd float %134, %143, !dbg !114
  %145 = and i1 %53, %128, !dbg !115
  %146 = or disjoint i32 %32, 4, !dbg !116
  %147 = add nsw i32 %146, %.decomposed, !dbg !117
  %148 = sext i32 %147 to i64, !dbg !118
  %149 = getelementptr float, ptr addrspace(1) %0, i64 %148, !dbg !118
  %150 = and i1 %22, %145, !dbg !119
  %151 = and i1 %14, %150, !dbg !120
  %152 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %149, i1 %151, i32 0, i1 %151) #2, !dbg !121
  %153 = bitcast i32 %152 to float, !dbg !121
  %154 = fadd float %144, %153, !dbg !122
  %155 = and i1 %64, %128, !dbg !123
  %156 = or disjoint i32 %32, 5, !dbg !124
  %157 = add i32 %156, %.decomposed, !dbg !125
  %158 = sext i32 %157 to i64, !dbg !126
  %159 = getelementptr float, ptr addrspace(1) %0, i64 %158, !dbg !126
  %160 = and i1 %22, %155, !dbg !127
  %161 = and i1 %14, %160, !dbg !128
  %162 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %159, i1 %161, i32 0, i1 %161) #2, !dbg !129
  %163 = bitcast i32 %162 to float, !dbg !129
  %164 = fadd float %154, %163, !dbg !130
  %165 = and i1 %75, %128, !dbg !131
  %166 = or disjoint i32 %32, 6, !dbg !132
  %167 = add i32 %166, %.decomposed, !dbg !133
  %168 = sext i32 %167 to i64, !dbg !134
  %169 = getelementptr float, ptr addrspace(1) %0, i64 %168, !dbg !134
  %170 = and i1 %22, %165, !dbg !135
  %171 = and i1 %14, %170, !dbg !136
  %172 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %169, i1 %171, i32 0, i1 %171) #2, !dbg !137
  %173 = bitcast i32 %172 to float, !dbg !137
  %174 = fadd float %164, %173, !dbg !138
  %175 = mul i32 %24, -4, !dbg !139
  %176 = add nsw i32 %28, 2, !dbg !140
  %177 = icmp sgt i32 %20, 7, !dbg !141
  %178 = select i1 %177, i32 5, i32 0, !dbg !142
  %179 = select i1 %22, i32 %176, i32 0, !dbg !143
  %180 = add nsw i32 %179, %178, !dbg !144
  %181 = icmp sgt i32 %.decomposed, 2, !dbg !145
  %182 = select i1 %181, i32 6, i32 0, !dbg !146
  %183 = icmp slt i32 %.decomposed, 3, !dbg !147
  %184 = select i1 %183, i32 %136, i32 0, !dbg !148
  %185 = add nuw nsw i32 %182, %184, !dbg !149
  %186 = sub nsw i32 %.decomposed, %185
  %reass.add = mul i32 %24, %186
  %reass.add5 = add i32 %reass.add, %180
  %reass.mul = shl i32 %reass.add5, 1
  %reass.add6 = sub nsw i32 %185, %.decomposed
  %reass.mul7 = mul i32 %reass.add6, %180
  %reass.sub = sub i32 %175, %.decomposed, !dbg !150
  %187 = add i32 %reass.sub, 2, !dbg !150
  %188 = add i32 %187, %185, !dbg !151
  %189 = add i32 %188, %reass.mul, !dbg !152
  %190 = add i32 %189, %reass.mul7, !dbg !153
  %191 = sitofp i32 %190 to float, !dbg !154
  %192 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %174, float %191) #2, !dbg !154
  %193 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %40, i32 -8388608, i1 %40) #2, !dbg !155
  %194 = bitcast i32 %193 to float, !dbg !155
  %195 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %49, i32 -8388608, i1 %49) #2, !dbg !156
  %196 = bitcast i32 %195 to float, !dbg !156
  %197 = fcmp ogt float %196, %194, !dbg !157
  %198 = fcmp uno float %196, 0.000000e+00, !dbg !161
  %199 = or i1 %197, %198, !dbg !162
  %200 = select i1 %199, float %196, float %194, !dbg !163
  %201 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %59, i32 -8388608, i1 %59) #2, !dbg !164
  %202 = bitcast i32 %201 to float, !dbg !164
  %203 = fcmp olt float %200, %202, !dbg !165
  %204 = fcmp uno float %202, 0.000000e+00, !dbg !167
  %205 = or i1 %204, %203, !dbg !168
  %206 = select i1 %205, float %202, float %200, !dbg !169
  %207 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %70, i32 -8388608, i1 %70) #2, !dbg !170
  %208 = bitcast i32 %207 to float, !dbg !170
  %209 = fcmp olt float %206, %208, !dbg !171
  %210 = fcmp uno float %208, 0.000000e+00, !dbg !173
  %211 = or i1 %210, %209, !dbg !174
  %212 = select i1 %211, float %208, float %206, !dbg !175
  %213 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %81, i32 -8388608, i1 %81) #2, !dbg !176
  %214 = bitcast i32 %213 to float, !dbg !176
  %215 = fcmp olt float %212, %214, !dbg !177
  %216 = fcmp uno float %214, 0.000000e+00, !dbg !179
  %217 = or i1 %216, %215, !dbg !180
  %218 = select i1 %217, float %214, float %212, !dbg !181
  %219 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %88, i32 -8388608, i1 %88) #2, !dbg !182
  %220 = bitcast i32 %219 to float, !dbg !182
  %221 = fcmp olt float %218, %220, !dbg !183
  %222 = fcmp uno float %220, 0.000000e+00, !dbg !185
  %223 = or i1 %222, %221, !dbg !186
  %224 = select i1 %223, float %220, float %218, !dbg !187
  %225 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %95, i1 %97, i32 -8388608, i1 %97) #2, !dbg !188
  %226 = bitcast i32 %225 to float, !dbg !188
  %227 = fcmp olt float %224, %226, !dbg !189
  %228 = fcmp uno float %226, 0.000000e+00, !dbg !191
  %229 = or i1 %228, %227, !dbg !192
  %230 = select i1 %229, float %226, float %224, !dbg !193
  %231 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %103, i1 %105, i32 -8388608, i1 %105) #2, !dbg !194
  %232 = bitcast i32 %231 to float, !dbg !194
  %233 = fcmp olt float %230, %232, !dbg !195
  %234 = fcmp uno float %232, 0.000000e+00, !dbg !197
  %235 = or i1 %234, %233, !dbg !198
  %236 = select i1 %235, float %232, float %230, !dbg !199
  %237 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %111, i1 %113, i32 -8388608, i1 %113) #2, !dbg !200
  %238 = bitcast i32 %237 to float, !dbg !200
  %239 = fcmp olt float %236, %238, !dbg !201
  %240 = fcmp uno float %238, 0.000000e+00, !dbg !203
  %241 = or i1 %240, %239, !dbg !204
  %242 = select i1 %241, float %238, float %236, !dbg !205
  %243 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %119, i1 %121, i32 -8388608, i1 %121) #2, !dbg !206
  %244 = bitcast i32 %243 to float, !dbg !206
  %245 = fcmp olt float %242, %244, !dbg !207
  %246 = fcmp uno float %244, 0.000000e+00, !dbg !209
  %247 = or i1 %246, %245, !dbg !210
  %248 = select i1 %247, float %244, float %242, !dbg !211
  %249 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %119, i1 %131, i32 -8388608, i1 %131) #2, !dbg !212
  %250 = bitcast i32 %249 to float, !dbg !212
  %251 = fcmp olt float %248, %250, !dbg !213
  %252 = fcmp uno float %250, 0.000000e+00, !dbg !215
  %253 = or i1 %252, %251, !dbg !216
  %254 = select i1 %253, float %250, float %248, !dbg !217
  %255 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %139, i1 %141, i32 -8388608, i1 %141) #2, !dbg !218
  %256 = bitcast i32 %255 to float, !dbg !218
  %257 = fcmp olt float %254, %256, !dbg !219
  %258 = fcmp uno float %256, 0.000000e+00, !dbg !221
  %259 = or i1 %258, %257, !dbg !222
  %260 = select i1 %259, float %256, float %254, !dbg !223
  %261 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %149, i1 %151, i32 -8388608, i1 %151) #2, !dbg !224
  %262 = bitcast i32 %261 to float, !dbg !224
  %263 = fcmp olt float %260, %262, !dbg !225
  %264 = fcmp uno float %262, 0.000000e+00, !dbg !227
  %265 = or i1 %264, %263, !dbg !228
  %266 = select i1 %265, float %262, float %260, !dbg !229
  %267 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %159, i1 %161, i32 -8388608, i1 %161) #2, !dbg !230
  %268 = bitcast i32 %267 to float, !dbg !230
  %269 = fcmp olt float %266, %268, !dbg !231
  %270 = fcmp uno float %268, 0.000000e+00, !dbg !233
  %271 = or i1 %270, %269, !dbg !234
  %272 = select i1 %271, float %268, float %266, !dbg !235
  %273 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %169, i1 %171, i32 -8388608, i1 %171) #2, !dbg !236
  %274 = bitcast i32 %273 to float, !dbg !236
  %275 = fcmp olt float %272, %274, !dbg !237
  %276 = fcmp uno float %274, 0.000000e+00, !dbg !239
  %277 = or i1 %276, %275, !dbg !240
  %278 = select i1 %277, float %274, float %272, !dbg !241
  %279 = fadd float %192, %278, !dbg !242
  %280 = fmul float %279, 5.000000e-01, !dbg !243
  %281 = shl i32 %21, 2, !dbg !244
  %282 = add i32 %281, %.decomposed9, !dbg !245
  %283 = shl i32 %26, 5, !dbg !246
  %284 = add i32 %282, %283, !dbg !247
  %285 = sext i32 %284 to i64, !dbg !248
  %286 = getelementptr float, ptr addrspace(1) %1, i64 %285, !dbg !248
  %287 = and i1 %15, %23, !dbg !249
  %288 = shl i32 %7, 4, !dbg !250
  %289 = and i32 %288, 112, !dbg !250
  %290 = or disjoint i32 %289, %9, !dbg !250
  %291 = and i32 %7, 127, !dbg !250
  %292 = lshr exact i32 %289, 2, !dbg !250
  %293 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %292, !dbg !250
  %294 = getelementptr float, ptr addrspace(3) %293, i32 %290, !dbg !250
  %295 = bitcast float %280 to <1 x i32>, !dbg !250
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %294, <1 x i32> %295, i1 true) #2, !dbg !250
  tail call void @llvm.nvvm.barrier0(), !dbg !250
  %296 = lshr i32 %291, 4, !dbg !250
  %297 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %296, !dbg !250
  %298 = getelementptr inbounds float, ptr addrspace(3) %297, i32 %291, !dbg !250
  %299 = load i32, ptr addrspace(3) %298, align 4, !dbg !250
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %299, ptr addrspace(1) %286, i1 %287) #2, !dbg !250
  ret void, !dbg !251
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnwmug5e2ecu5spyvto4zcwdymnn446p5btfyxhu5pwpwgypc3qc.py", directory: "inductor_cache/nw")
!4 = !{ptr @triton_poi_fused_avg_pool2d_clone_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_clone_max_pool2d_with_indices_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_clone_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_avg_pool2d_clone_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 33, column: 19, scope: !7)
!23 = !DILocation(line: 32, column: 19, scope: !7)
!24 = !DILocation(line: 34, column: 20, scope: !7)
!25 = !DILocation(line: 41, column: 19, scope: !7)
!26 = !DILocation(line: 45, column: 45, scope: !7)
!27 = !DILocation(line: 45, column: 53, scope: !7)
!28 = !DILocation(line: 45, column: 38, scope: !7)
!29 = !DILocation(line: 45, column: 43, scope: !7)
!30 = !DILocation(line: 45, column: 50, scope: !7)
!31 = !DILocation(line: 45, column: 31, scope: !7)
!32 = !DILocation(line: 45, column: 66, scope: !7)
!33 = !DILocation(line: 45, column: 74, scope: !7)
!34 = !DILocation(line: 45, column: 58, scope: !7)
!35 = !DILocation(line: 47, column: 21, scope: !7)
!36 = !DILocation(line: 51, column: 43, scope: !7)
!37 = !DILocation(line: 51, column: 50, scope: !7)
!38 = !DILocation(line: 51, column: 31, scope: !7)
!39 = !DILocation(line: 51, column: 66, scope: !7)
!40 = !DILocation(line: 51, column: 74, scope: !7)
!41 = !DILocation(line: 51, column: 58, scope: !7)
!42 = !DILocation(line: 52, column: 20, scope: !7)
!43 = !DILocation(line: 54, column: 21, scope: !7)
!44 = !DILocation(line: 58, column: 43, scope: !7)
!45 = !DILocation(line: 58, column: 50, scope: !7)
!46 = !DILocation(line: 58, column: 31, scope: !7)
!47 = !DILocation(line: 58, column: 66, scope: !7)
!48 = !DILocation(line: 58, column: 74, scope: !7)
!49 = !DILocation(line: 58, column: 58, scope: !7)
!50 = !DILocation(line: 59, column: 20, scope: !7)
!51 = !DILocation(line: 60, column: 16, scope: !7)
!52 = !DILocation(line: 63, column: 20, scope: !7)
!53 = !DILocation(line: 65, column: 43, scope: !7)
!54 = !DILocation(line: 65, column: 50, scope: !7)
!55 = !DILocation(line: 65, column: 31, scope: !7)
!56 = !DILocation(line: 65, column: 66, scope: !7)
!57 = !DILocation(line: 65, column: 74, scope: !7)
!58 = !DILocation(line: 65, column: 58, scope: !7)
!59 = !DILocation(line: 66, column: 20, scope: !7)
!60 = !DILocation(line: 67, column: 16, scope: !7)
!61 = !DILocation(line: 70, column: 20, scope: !7)
!62 = !DILocation(line: 72, column: 43, scope: !7)
!63 = !DILocation(line: 72, column: 50, scope: !7)
!64 = !DILocation(line: 72, column: 31, scope: !7)
!65 = !DILocation(line: 72, column: 66, scope: !7)
!66 = !DILocation(line: 72, column: 74, scope: !7)
!67 = !DILocation(line: 72, column: 58, scope: !7)
!68 = !DILocation(line: 73, column: 20, scope: !7)
!69 = !DILocation(line: 79, column: 66, scope: !7)
!70 = !DILocation(line: 79, column: 74, scope: !7)
!71 = !DILocation(line: 79, column: 58, scope: !7)
!72 = !DILocation(line: 80, column: 20, scope: !7)
!73 = !DILocation(line: 82, column: 43, scope: !7)
!74 = !DILocation(line: 82, column: 50, scope: !7)
!75 = !DILocation(line: 82, column: 31, scope: !7)
!76 = !DILocation(line: 82, column: 66, scope: !7)
!77 = !DILocation(line: 82, column: 74, scope: !7)
!78 = !DILocation(line: 82, column: 58, scope: !7)
!79 = !DILocation(line: 83, column: 20, scope: !7)
!80 = !DILocation(line: 85, column: 43, scope: !7)
!81 = !DILocation(line: 85, column: 31, scope: !7)
!82 = !DILocation(line: 85, column: 59, scope: !7)
!83 = !DILocation(line: 85, column: 67, scope: !7)
!84 = !DILocation(line: 85, column: 51, scope: !7)
!85 = !DILocation(line: 86, column: 20, scope: !7)
!86 = !DILocation(line: 88, column: 47, scope: !7)
!87 = !DILocation(line: 88, column: 31, scope: !7)
!88 = !DILocation(line: 88, column: 63, scope: !7)
!89 = !DILocation(line: 88, column: 71, scope: !7)
!90 = !DILocation(line: 88, column: 55, scope: !7)
!91 = !DILocation(line: 89, column: 20, scope: !7)
!92 = !DILocation(line: 91, column: 47, scope: !7)
!93 = !DILocation(line: 91, column: 31, scope: !7)
!94 = !DILocation(line: 91, column: 63, scope: !7)
!95 = !DILocation(line: 91, column: 71, scope: !7)
!96 = !DILocation(line: 91, column: 55, scope: !7)
!97 = !DILocation(line: 92, column: 20, scope: !7)
!98 = !DILocation(line: 93, column: 16, scope: !7)
!99 = !DILocation(line: 94, column: 21, scope: !7)
!100 = !DILocation(line: 95, column: 20, scope: !7)
!101 = !DILocation(line: 96, column: 20, scope: !7)
!102 = !DILocation(line: 97, column: 20, scope: !7)
!103 = !DILocation(line: 98, column: 63, scope: !7)
!104 = !DILocation(line: 98, column: 71, scope: !7)
!105 = !DILocation(line: 98, column: 55, scope: !7)
!106 = !DILocation(line: 99, column: 20, scope: !7)
!107 = !DILocation(line: 100, column: 20, scope: !7)
!108 = !DILocation(line: 101, column: 35, scope: !7)
!109 = !DILocation(line: 101, column: 47, scope: !7)
!110 = !DILocation(line: 101, column: 31, scope: !7)
!111 = !DILocation(line: 101, column: 63, scope: !7)
!112 = !DILocation(line: 101, column: 71, scope: !7)
!113 = !DILocation(line: 101, column: 55, scope: !7)
!114 = !DILocation(line: 102, column: 20, scope: !7)
!115 = !DILocation(line: 103, column: 20, scope: !7)
!116 = !DILocation(line: 104, column: 40, scope: !7)
!117 = !DILocation(line: 104, column: 47, scope: !7)
!118 = !DILocation(line: 104, column: 31, scope: !7)
!119 = !DILocation(line: 104, column: 63, scope: !7)
!120 = !DILocation(line: 104, column: 71, scope: !7)
!121 = !DILocation(line: 104, column: 55, scope: !7)
!122 = !DILocation(line: 105, column: 20, scope: !7)
!123 = !DILocation(line: 106, column: 20, scope: !7)
!124 = !DILocation(line: 107, column: 40, scope: !7)
!125 = !DILocation(line: 107, column: 47, scope: !7)
!126 = !DILocation(line: 107, column: 31, scope: !7)
!127 = !DILocation(line: 107, column: 63, scope: !7)
!128 = !DILocation(line: 107, column: 71, scope: !7)
!129 = !DILocation(line: 107, column: 55, scope: !7)
!130 = !DILocation(line: 108, column: 20, scope: !7)
!131 = !DILocation(line: 109, column: 20, scope: !7)
!132 = !DILocation(line: 110, column: 40, scope: !7)
!133 = !DILocation(line: 110, column: 47, scope: !7)
!134 = !DILocation(line: 110, column: 31, scope: !7)
!135 = !DILocation(line: 110, column: 63, scope: !7)
!136 = !DILocation(line: 110, column: 71, scope: !7)
!137 = !DILocation(line: 110, column: 55, scope: !7)
!138 = !DILocation(line: 111, column: 20, scope: !7)
!139 = !DILocation(line: 112, column: 34, scope: !7)
!140 = !DILocation(line: 112, column: 62, scope: !7)
!141 = !DILocation(line: 112, column: 58, scope: !7)
!142 = !DILocation(line: 112, column: 50, scope: !7)
!143 = !DILocation(line: 112, column: 85, scope: !7)
!144 = !DILocation(line: 112, column: 71, scope: !7)
!145 = !DILocation(line: 112, column: 184, scope: !7)
!146 = !DILocation(line: 112, column: 176, scope: !7)
!147 = !DILocation(line: 112, column: 219, scope: !7)
!148 = !DILocation(line: 112, column: 207, scope: !7)
!149 = !DILocation(line: 112, column: 195, scope: !7)
!150 = !DILocation(line: 112, column: 227, scope: !7)
!151 = !DILocation(line: 112, column: 301, scope: !7)
!152 = !DILocation(line: 112, column: 368, scope: !7)
!153 = !DILocation(line: 112, column: 379, scope: !7)
!154 = !DILocation(line: 113, column: 20, scope: !7)
!155 = !DILocation(line: 114, column: 58, scope: !7)
!156 = !DILocation(line: 115, column: 58, scope: !7)
!157 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !160)
!158 = distinct !DILexicalBlockFile(scope: !7, file: !159, discriminator: 0)
!159 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!160 = !DILocation(line: 116, column: 42, scope: !7)
!161 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !160)
!162 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !160)
!163 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !160)
!164 = !DILocation(line: 117, column: 58, scope: !7)
!165 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !166)
!166 = !DILocation(line: 118, column: 42, scope: !7)
!167 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !166)
!168 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !166)
!169 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !166)
!170 = !DILocation(line: 119, column: 58, scope: !7)
!171 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !172)
!172 = !DILocation(line: 120, column: 42, scope: !7)
!173 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !172)
!174 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !172)
!175 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !172)
!176 = !DILocation(line: 121, column: 58, scope: !7)
!177 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !178)
!178 = !DILocation(line: 122, column: 42, scope: !7)
!179 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !178)
!180 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !178)
!181 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !178)
!182 = !DILocation(line: 123, column: 58, scope: !7)
!183 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !184)
!184 = !DILocation(line: 124, column: 42, scope: !7)
!185 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !184)
!186 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !184)
!187 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !184)
!188 = !DILocation(line: 125, column: 58, scope: !7)
!189 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !190)
!190 = !DILocation(line: 126, column: 42, scope: !7)
!191 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !190)
!192 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !190)
!193 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !190)
!194 = !DILocation(line: 127, column: 51, scope: !7)
!195 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !196)
!196 = !DILocation(line: 128, column: 42, scope: !7)
!197 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !196)
!198 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !196)
!199 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !196)
!200 = !DILocation(line: 129, column: 55, scope: !7)
!201 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !202)
!202 = !DILocation(line: 130, column: 42, scope: !7)
!203 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !202)
!204 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !202)
!205 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !202)
!206 = !DILocation(line: 131, column: 55, scope: !7)
!207 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !208)
!208 = !DILocation(line: 132, column: 42, scope: !7)
!209 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !208)
!210 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !208)
!211 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !208)
!212 = !DILocation(line: 133, column: 55, scope: !7)
!213 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !214)
!214 = !DILocation(line: 134, column: 43, scope: !7)
!215 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !214)
!216 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !214)
!217 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !214)
!218 = !DILocation(line: 135, column: 56, scope: !7)
!219 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !220)
!220 = !DILocation(line: 136, column: 44, scope: !7)
!221 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !220)
!222 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !220)
!223 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !220)
!224 = !DILocation(line: 137, column: 56, scope: !7)
!225 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !226)
!226 = !DILocation(line: 138, column: 44, scope: !7)
!227 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !226)
!228 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !226)
!229 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !226)
!230 = !DILocation(line: 139, column: 56, scope: !7)
!231 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !232)
!232 = !DILocation(line: 140, column: 44, scope: !7)
!233 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !232)
!234 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !232)
!235 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !232)
!236 = !DILocation(line: 141, column: 56, scope: !7)
!237 = !DILocation(line: 118, column: 15, scope: !158, inlinedAt: !238)
!238 = !DILocation(line: 142, column: 44, scope: !7)
!239 = !DILocation(line: 120, column: 21, scope: !158, inlinedAt: !238)
!240 = !DILocation(line: 120, column: 16, scope: !158, inlinedAt: !238)
!241 = !DILocation(line: 121, column: 29, scope: !158, inlinedAt: !238)
!242 = !DILocation(line: 143, column: 21, scope: !7)
!243 = !DILocation(line: 145, column: 22, scope: !7)
!244 = !DILocation(line: 146, column: 32, scope: !7)
!245 = !DILocation(line: 146, column: 30, scope: !7)
!246 = !DILocation(line: 146, column: 40, scope: !7)
!247 = !DILocation(line: 146, column: 37, scope: !7)
!248 = !DILocation(line: 146, column: 25, scope: !7)
!249 = !DILocation(line: 146, column: 61, scope: !7)
!250 = !DILocation(line: 146, column: 53, scope: !7)
!251 = !DILocation(line: 146, column: 4, scope: !7)
