#loc = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":42:25)
#loc31 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @triton_red_fused_div_mse_loss_30(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":19:0)) attributes {noinline = false} {
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<7.62939453E-6> : tensor<1x2048xf32> loc(#loc1)
    %cst_0 = arith.constant dense<8192> : tensor<1x2048xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.muli %0, %c8192_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2048xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc9)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc10)
    %10 = scf.for %arg5 = %c0_i32 to %c8192_i32 step %c2048_i32 iter_args(%arg6 = %cst_1) -> (tensor<1x2048xf32>)  : i32 {
      %15 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc12)
      %16 = arith.addi %15, %4 : tensor<1x2048xi32> loc(#loc12)
      %17 = arith.cmpi slt, %16, %cst_0 : tensor<1x2048xi32> loc(#loc13)
      %18 = arith.addi %16, %6 : tensor<1x2048xi32> loc(#loc7)
      %19 = tt.addptr %7, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc8)
      %20 = arith.andi %17, %8 : tensor<1x2048xi1> loc(#loc9)
      %21 = tt.load %19, %20, %cst_1 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc14)
      %22 = tt.addptr %9, %18 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc10)
      %23 = tt.load %22, %20, %cst_1 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc15)
      %24 = arith.mulf %21, %cst : tensor<1x2048xf32> loc(#loc16)
      %25 = arith.mulf %23, %cst : tensor<1x2048xf32> loc(#loc17)
      %26 = arith.subf %24, %25 : tensor<1x2048xf32> loc(#loc18)
      %27 = arith.mulf %26, %26 : tensor<1x2048xf32> loc(#loc19)
      %28 = arith.addf %arg6, %27 : tensor<1x2048xf32> loc(#loc20)
      %29 = arith.select %20, %28, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc21)
      scf.yield %29 : tensor<1x2048xf32> loc(#loc22)
    } loc(#loc11)
    %11 = "tt.reduce"(%10) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc24)), %arg6: f32 loc(callsite(#loc1 at #loc24))):
      %15 = arith.addf %arg5, %arg6 : f32 loc(#loc33)
      tt.reduce.return %15 : f32 loc(#loc30)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc30)
    %12 = tt.expand_dims %11 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %13 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc27)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    tt.store %14, %12, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":22:28)
#loc3 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":24:21)
#loc4 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":25:25)
#loc5 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":25:33)
#loc6 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":32:44)
#loc7 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":32:39)
#loc8 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":32:34)
#loc9 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":32:57)
#loc10 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":33:34)
#loc11 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":28:36)
#loc12 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":29:27)
#loc13 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":30:25)
#loc14 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":32:49)
#loc15 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":33:49)
#loc16 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":35:22)
#loc17 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":36:22)
#loc18 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":37:22)
#loc19 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":38:22)
#loc20 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":40:23)
#loc21 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":41:46)
#loc22 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":41:8)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":42:28)
#loc27 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":43:25)
#loc28 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":43:36)
#loc29 = loc("inductor_cache/jc/cjcywkl4bggztoahiha5zr6lywhyr2zr47oniquujjvxmty2c6j7.py":43:4)
#loc30 = loc(callsite(#loc23 at #loc24))
#loc32 = loc(callsite(#loc25 at #loc23))
#loc33 = loc(callsite(#loc32 at #loc24))
