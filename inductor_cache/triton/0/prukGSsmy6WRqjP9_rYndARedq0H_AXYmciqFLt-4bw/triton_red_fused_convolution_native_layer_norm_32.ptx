//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_convolution_native_layer_norm_32 // -- Begin function triton_red_fused_convolution_native_layer_norm_32
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_convolution_native_layer_norm_32
.visible .entry triton_red_fused_convolution_native_layer_norm_32(
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_32_param_6,
	.param .u32 triton_red_fused_convolution_native_layer_norm_32_param_7,
	.param .u32 triton_red_fused_convolution_native_layer_norm_32_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b32 	%r<164>;
	.reg .f32 	%f<169>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_red_fused_convolution_native_layer_norm_32_param_0];
	ld.param.u64 	%rd11, [triton_red_fused_convolution_native_layer_norm_32_param_1];
$L__tmp0:
	.loc	1 22 28                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:24:21
	setp.lt.s32 	%p39, %r1, 16;
	ld.param.u64 	%rd12, [triton_red_fused_convolution_native_layer_norm_32_param_2];
	ld.param.u64 	%rd13, [triton_red_fused_convolution_native_layer_norm_32_param_3];
	.loc	1 25 33                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:25:33
	mov.u32 	%r106, %tid.x;
	and.b32  	%r107, %r106, 31;
	ld.param.u64 	%rd14, [triton_red_fused_convolution_native_layer_norm_32_param_4];
	ld.param.u64 	%rd15, [triton_red_fused_convolution_native_layer_norm_32_param_5];
	shl.b32 	%r108, %r106, 2;
	ld.param.u64 	%rd16, [triton_red_fused_convolution_native_layer_norm_32_param_6];
	and.b32  	%r109, %r108, 1020;
	.loc	1 31 21                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:31:21
	shr.u32 	%r110, %r1, 31;
	add.s32 	%r111, %r1, %r110;
	shr.s32 	%r112, %r111, 1;
	.loc	1 31 26                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:31:26
	shr.u32 	%r113, %r111, 31;
	add.s32 	%r114, %r112, %r113;
	and.b32  	%r115, %r114, -2;
	sub.s32 	%r116, %r112, %r115;
	and.b32  	%r117, %r111, 2147483646;
	sub.s32 	%r118, %r1, %r117;
	.loc	1 31 21                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:31:21
	shr.s32 	%r119, %r1, 31;
	.loc	1 32 19                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:32:19
	shr.u32 	%r120, %r119, 30;
	add.s32 	%r121, %r1, %r120;
	.loc	1 35 25                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:35:25
	setp.lt.u32 	%p6, %r109, 768;
	.loc	1 37 43                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:37:43
	mad.lo.s32 	%r122, %r1, 768, %r109;
	.loc	1 37 38                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:37:38
	mul.wide.s32 	%rd17, %r122, 4;
	add.s64 	%rd1, %rd10, %rd17;
	.loc	1 37 60                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:37:60
	and.pred  	%p1, %p6, %p39;
	mov.b32 	%r6, 0;
	.loc	1 37 52                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:37:52
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 38 34                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:38:34
	mul.wide.u32 	%rd18, %r109, 4;
	add.s64 	%rd2, %rd11, %rd18;
	.loc	1 38 39                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:38:39
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 39 22                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:39:22
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
	.loc	1 44 60                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:44:60
	selp.f32 	%f13, %f9, 0f00000000, %p1;
	selp.f32 	%f14, %f10, 0f00000000, %p1;
	selp.f32 	%f15, %f11, 0f00000000, %p1;
	selp.f32 	%f16, %f12, 0f00000000, %p1;
	.loc	1 46 64                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:46:64
	selp.f32 	%f17, 0f3F800000, 0f00000000, %p1;
	.loc	1 47 52                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:47:52
	mov.b32 	%r18, %f9;
	mov.b32 	%r19, %f10;
	mov.b32 	%r20, %f11;
	mov.b32 	%r21, %f12;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
$L__tmp1:
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f18, %f14, %f13;
	.loc	2 193 28                        // triton_helpers.py:193:28
	selp.f32 	%f19, 0f40000000, 0f00000000, %p1;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p40, %f19, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r23, %f17;
	mov.b32 	%r24, %f19;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f20, %r22;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f21, 0f00000000, %f20, %p40;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f22, %f21, %f18, %f13;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f23, %f18, %f18;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f24, %f17, %f23;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f25, %f21, %f24, 0f00000000;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f26, %f15, %f22;
	.loc	2 193 28                        // triton_helpers.py:193:28
	selp.f32 	%f27, 0f40400000, 0f00000000, %p1;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p41, %f27, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r27, %f27;
	// begin inline asm
	div.full.f32 %r25, %r23, %r27;
	// end inline asm
	mov.b32 	%f28, %r25;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f29, 0f00000000, %f28, %p41;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f30, %f29, %f26, %f22;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f31, %f26, %f26;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f32, %f19, %f31;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f33, %f29, %f32, %f25;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f34, %f16, %f30;
	.loc	2 193 28                        // triton_helpers.py:193:28
	selp.f32 	%f35, 0f40800000, 0f00000000, %p1;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p42, %f35, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r30, %f35;
	// begin inline asm
	div.full.f32 %r28, %r23, %r30;
	// end inline asm
	mov.b32 	%f36, %r28;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f37, 0f00000000, %f36, %p42;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f38, %f37, %f34, %f30;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f39, %f34, %f34;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f40, %f27, %f39;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f41, %f37, %f40, %f33;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r123, %f38;
	shfl.sync.bfly.b32	%r124, %r123, 16, 31, -1;
	mov.b32 	%f42, %r124;
	mov.b32 	%r125, %f41;
	shfl.sync.bfly.b32	%r126, %r125, 16, 31, -1;
	mov.b32 	%f43, %r126;
	shfl.sync.bfly.b32	%r32, %r30, 16, 31, -1;
	mov.b32 	%f44, %r32;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f45, %f42, %f38;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f46, %f35, %f44;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p43, %f46, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r33, %f46;
	// begin inline asm
	div.full.f32 %r31, %r32, %r33;
	// end inline asm
	mov.b32 	%f47, %r31;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f48, 0f00000000, %f47, %p43;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f49, %f48, %f45, %f38;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f50, %f41, %f43;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f51, %f45, %f45;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f52, %f35, %f51;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f53, %f48, %f52, %f50;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r127, %f49;
	shfl.sync.bfly.b32	%r128, %r127, 8, 31, -1;
	mov.b32 	%f54, %r128;
	mov.b32 	%r129, %f53;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	mov.b32 	%f55, %r130;
	shfl.sync.bfly.b32	%r35, %r33, 8, 31, -1;
	mov.b32 	%f56, %r35;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f57, %f54, %f49;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f58, %f46, %f56;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p44, %f58, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r36, %f58;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f59, %r34;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f60, 0f00000000, %f59, %p44;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f61, %f60, %f57, %f49;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f62, %f53, %f55;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f63, %f57, %f57;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f64, %f46, %f63;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f65, %f60, %f64, %f62;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r131, %f61;
	shfl.sync.bfly.b32	%r132, %r131, 4, 31, -1;
	mov.b32 	%f66, %r132;
	mov.b32 	%r133, %f65;
	shfl.sync.bfly.b32	%r134, %r133, 4, 31, -1;
	mov.b32 	%f67, %r134;
	shfl.sync.bfly.b32	%r38, %r36, 4, 31, -1;
	mov.b32 	%f68, %r38;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f69, %f66, %f61;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f70, %f58, %f68;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p45, %f70, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r39, %f70;
	// begin inline asm
	div.full.f32 %r37, %r38, %r39;
	// end inline asm
	mov.b32 	%f71, %r37;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f72, 0f00000000, %f71, %p45;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f73, %f72, %f69, %f61;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f74, %f65, %f67;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f75, %f69, %f69;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f76, %f58, %f75;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f77, %f72, %f76, %f74;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r135, %f73;
	shfl.sync.bfly.b32	%r136, %r135, 2, 31, -1;
	mov.b32 	%f78, %r136;
	mov.b32 	%r137, %f77;
	shfl.sync.bfly.b32	%r138, %r137, 2, 31, -1;
	mov.b32 	%f79, %r138;
	shfl.sync.bfly.b32	%r41, %r39, 2, 31, -1;
	mov.b32 	%f80, %r41;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f81, %f78, %f73;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f82, %f70, %f80;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p46, %f82, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r42, %f82;
	// begin inline asm
	div.full.f32 %r40, %r41, %r42;
	// end inline asm
	mov.b32 	%f83, %r40;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f84, 0f00000000, %f83, %p46;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f85, %f81, %f84, %f73;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f86, %f77, %f79;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f87, %f81, %f81;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f88, %f70, %f87;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f89, %f84, %f88, %f86;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r139, %f85;
	shfl.sync.bfly.b32	%r140, %r139, 1, 31, -1;
	mov.b32 	%f90, %r140;
	mov.b32 	%r141, %f89;
	shfl.sync.bfly.b32	%r142, %r141, 1, 31, -1;
	mov.b32 	%f91, %r142;
	shfl.sync.bfly.b32	%r44, %r42, 1, 31, -1;
	mov.b32 	%f92, %r44;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f93, %f90, %f85;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f94, %f82, %f92;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p47, %f94, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r45, %f94;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f95, %r43;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f96, 0f00000000, %f95, %p47;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f97, %f93, %f96, %f85;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f98, %f89, %f91;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f99, %f93, %f93;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f100, %f82, %f99;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f101, %f96, %f100, %f98;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p12, %r107, 0;
	shr.u32 	%r143, %r106, 3;
	and.b32  	%r144, %r143, 28;
	mov.u32 	%r145, global_smem;
	add.s32 	%r46, %r145, %r144;
	mov.b32 	%r47, %f97;
	// begin inline asm
	@%p12 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r146, %r145, 32;
	add.s32 	%r48, %r146, %r144;
	mov.b32 	%r49, %f101;
	// begin inline asm
	@%p12 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r147, %r145, 64;
	add.s32 	%r50, %r147, %r144;
	// begin inline asm
	@%p12 st.shared.b32 [ %r50 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r106, 8;
	add.s32 	%r53, %r145, %r108;
	// begin inline asm
	@%p15 ld.shared.b32 %r52, [ %r53 + 0 ];
	// end inline asm
	mov.b32 	%f102, %r52;
	add.s32 	%r55, %r146, %r108;
	// begin inline asm
	@%p15 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f103, %r54;
	add.s32 	%r57, %r147, %r108;
	// begin inline asm
	@%p15 ld.shared.b32 %r56, [ %r57 + 0 ];
	// end inline asm
	mov.b32 	%f104, %r56;
	shfl.sync.bfly.b32	%r148, %r52, 4, 31, -1;
	mov.b32 	%f105, %r148;
	shfl.sync.bfly.b32	%r149, %r54, 4, 31, -1;
	mov.b32 	%f106, %r149;
	shfl.sync.bfly.b32	%r59, %r56, 4, 31, -1;
	mov.b32 	%f107, %r59;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f108, %f105, %f102;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f109, %f104, %f107;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p48, %f109, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r60, %f109;
	// begin inline asm
	div.full.f32 %r58, %r59, %r60;
	// end inline asm
	mov.b32 	%f110, %r58;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f111, 0f00000000, %f110, %p48;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f112, %f108, %f111, %f102;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f113, %f103, %f106;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f114, %f108, %f108;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f115, %f114, %f104;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f116, %f115, %f111, %f113;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r150, %f112;
	shfl.sync.bfly.b32	%r151, %r150, 2, 31, -1;
	mov.b32 	%f117, %r151;
	mov.b32 	%r152, %f116;
	shfl.sync.bfly.b32	%r153, %r152, 2, 31, -1;
	mov.b32 	%f118, %r153;
	shfl.sync.bfly.b32	%r62, %r60, 2, 31, -1;
	mov.b32 	%f119, %r62;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f120, %f117, %f112;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f121, %f109, %f119;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p49, %f121, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r63, %f121;
	// begin inline asm
	div.full.f32 %r61, %r62, %r63;
	// end inline asm
	mov.b32 	%f122, %r61;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f123, 0f00000000, %f122, %p49;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f124, %f120, %f123, %f112;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f125, %f116, %f118;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f126, %f120, %f120;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f127, %f109, %f126;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f128, %f123, %f127, %f125;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r154, %f124;
	shfl.sync.bfly.b32	%r155, %r154, 1, 31, -1;
	mov.b32 	%f129, %r155;
	mov.b32 	%r156, %f128;
	shfl.sync.bfly.b32	%r157, %r156, 1, 31, -1;
	mov.b32 	%f130, %r157;
	shfl.sync.bfly.b32	%r65, %r63, 1, 31, -1;
	mov.b32 	%f131, %r65;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f132, %f129, %f124;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f133, %f121, %f131;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p50, %f133, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r66, %f133;
	// begin inline asm
	div.full.f32 %r64, %r65, %r66;
	// end inline asm
	mov.b32 	%f134, %r64;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f135, 0f00000000, %f134, %p50;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f136, %f132, %f135, %f124;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f137, %f128, %f130;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f138, %f132, %f132;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f139, %f121, %f138;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f140, %f135, %f139, %f137;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r158, %r106, 7;
	setp.eq.s32 	%p51, %r158, 0;
	and.pred  	%p18, %p15, %p51;
	mov.b32 	%r68, %f136;
	// begin inline asm
	@%p18 st.shared.b32 [ %r53 + 0 ], %r68;
	// end inline asm
	mov.b32 	%r70, %f140;
	// begin inline asm
	@%p18 st.shared.b32 [ %r55 + 0 ], %r70;
	// end inline asm
	// begin inline asm
	@%p18 st.shared.b32 [ %r57 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f141, [global_smem];
$L__tmp2:
	.loc	1 54 32                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:32
	shl.b32 	%r159, %r118, 1;
	.loc	1 54 30                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:30
	add.s32 	%r160, %r116, %r159;
	.loc	1 54 39                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:39
	and.b32  	%r161, %r121, -4;
	.loc	1 54 37                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:37
	add.s32 	%r162, %r160, %r161;
	.loc	1 54 25                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:25
	mul.wide.s32 	%rd19, %r162, 4;
	add.s64 	%rd4, %rd14, %rd19;
	.loc	1 54 50                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:50
	and.b32  	%r163, %r106, 255;
	setp.eq.s32 	%p52, %r163, 0;
	mov.b32 	%r73, %f141;
	and.pred  	%p21, %p52, %p39;
	.loc	1 56 18                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:56:18
	ld.shared.u32 	%r75, [global_smem+32];
	.loc	1 54 50                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:54:50
	// begin inline asm
	@%p21 st.global.b32 [ %rd4 + 0 ], { %r73 };
	// end inline asm
	mov.b32 	%r76, 1145044992;
	.loc	1 56 18                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:56:18
	// begin inline asm
	div.full.f32 %r74, %r75, %r76;
	// end inline asm
	mov.b32 	%f142, %r74;
	.loc	1 58 19                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:58:19
	add.f32 	%f143, %f142, 0f358637BD;
	.loc	1 59 28                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:59:28
	rsqrt.approx.ftz.f32 	%f144, %f143;
	.loc	1 60 25                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:60:25
	add.s64 	%rd5, %rd15, %rd19;
	.loc	1 60 51                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:60:51
	mov.b32 	%r77, %f144;
	// begin inline asm
	@%p21 st.global.b32 [ %rd5 + 0 ], { %r77 };
	// end inline asm
	.loc	1 65 53                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:65:53
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r78, %r6;
	@!%p1 mov.u32 %r79, %r6;
	@!%p1 mov.u32 %r80, %r6;
	@!%p1 mov.u32 %r81, %r6;
	// end inline asm
	mov.b32 	%f145, %r78;
	mov.b32 	%f146, %r79;
	mov.b32 	%f147, %r80;
	mov.b32 	%f148, %r81;
	.loc	1 66 35                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:66:35
	add.s64 	%rd7, %rd12, %rd18;
	.loc	1 66 40                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:66:40
	// begin inline asm
	mov.u32 %r86, 0x0;
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	mov.u32 %r89, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r86, %r87, %r88, %r89 }, [ %rd7 + 0 ];
	@!%p6 mov.u32 %r86, %r6;
	@!%p6 mov.u32 %r87, %r6;
	@!%p6 mov.u32 %r88, %r6;
	@!%p6 mov.u32 %r89, %r6;
	// end inline asm
	mov.b32 	%f149, %r86;
	mov.b32 	%f150, %r87;
	mov.b32 	%f151, %r88;
	mov.b32 	%f152, %r89;
	.loc	1 67 35                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:67:35
	add.s64 	%rd8, %rd13, %rd18;
	.loc	1 67 40                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:67:40
	// begin inline asm
	mov.u32 %r94, 0x0;
	mov.u32 %r95, 0x0;
	mov.u32 %r96, 0x0;
	mov.u32 %r97, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r94, %r95, %r96, %r97 }, [ %rd8 + 0 ];
	@!%p6 mov.u32 %r94, %r6;
	@!%p6 mov.u32 %r95, %r6;
	@!%p6 mov.u32 %r96, %r6;
	@!%p6 mov.u32 %r97, %r6;
	// end inline asm
	mov.b32 	%f153, %r94;
	mov.b32 	%f154, %r95;
	mov.b32 	%f155, %r96;
	mov.b32 	%f156, %r97;
	.loc	1 68 24                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:68:24
	sub.f32 	%f157, %f145, %f141;
	sub.f32 	%f158, %f146, %f141;
	sub.f32 	%f159, %f147, %f141;
	sub.f32 	%f160, %f148, %f141;
	.loc	1 69 24                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:69:24
	mul.f32 	%f161, %f144, %f157;
	mul.f32 	%f162, %f144, %f158;
	mul.f32 	%f163, %f144, %f159;
	mul.f32 	%f164, %f144, %f160;
	.loc	1 71 24                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:71:24
	fma.rn.f32 	%f165, %f161, %f149, %f153;
	fma.rn.f32 	%f166, %f162, %f150, %f154;
	fma.rn.f32 	%f167, %f163, %f151, %f155;
	fma.rn.f32 	%f168, %f164, %f152, %f156;
	.loc	1 72 29                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:72:29
	add.s64 	%rd9, %rd16, %rd17;
	.loc	1 72 50                         // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:72:50
	mov.b32 	%r102, %f165;
	mov.b32 	%r103, %f166;
	mov.b32 	%r104, %f167;
	mov.b32 	%r105, %f168;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r102, %r103, %r104, %r105 };
	// end inline asm
	.loc	1 61 4                          // coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py:61:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ol/coliphs4rxgj6boypzskjfdo22bgsfzzx6b7vmweokh2m4uncwi6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 108
.b8 105
.b8 112
.b8 104
.b8 115
.b8 52
.b8 114
.b8 120
.b8 103
.b8 106
.b8 54
.b8 98
.b8 111
.b8 121
.b8 112
.b8 122
.b8 115
.b8 107
.b8 106
.b8 102
.b8 100
.b8 111
.b8 50
.b8 50
.b8 98
.b8 103
.b8 115
.b8 102
.b8 122
.b8 122
.b8 120
.b8 54
.b8 98
.b8 55
.b8 118
.b8 109
.b8 119
.b8 101
.b8 111
.b8 107
.b8 104
.b8 50
.b8 109
.b8 52
.b8 117
.b8 110
.b8 99
.b8 119
.b8 105
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x34 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
