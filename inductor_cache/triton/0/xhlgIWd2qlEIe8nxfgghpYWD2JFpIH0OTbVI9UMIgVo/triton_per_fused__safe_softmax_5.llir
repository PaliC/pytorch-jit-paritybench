; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__safe_softmax_5(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 3, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 5, !dbg !12
  %.lobit = and i32 %8, 1, !dbg !12
  %9 = or disjoint i32 %6, %.lobit, !dbg !13
  %10 = or disjoint i32 %9, 2, !dbg !13
  %11 = or disjoint i32 %9, 4, !dbg !13
  %12 = or disjoint i32 %9, 6, !dbg !13
  %13 = icmp slt i32 %9, 272, !dbg !14
  %14 = icmp slt i32 %10, 272, !dbg !14
  %15 = icmp slt i32 %11, 272, !dbg !14
  %16 = icmp slt i32 %12, 272, !dbg !14
  %17 = and i32 %7, 31, !dbg !15
  %18 = icmp samesign ult i32 %17, 17, !dbg !16
  %.frozen = freeze i32 %9, !dbg !17
  %19 = sdiv i32 %.frozen, 68, !dbg !17
  %20 = mul i32 %19, 68, !dbg !18
  %.decomposed = sub i32 %.frozen, %20, !dbg !18
  %.frozen4 = freeze i32 %10, !dbg !17
  %21 = sdiv i32 %.frozen4, 68, !dbg !17
  %22 = mul i32 %21, 68, !dbg !18
  %.decomposed5 = sub i32 %.frozen4, %22, !dbg !18
  %.frozen6 = freeze i32 %11, !dbg !17
  %23 = sdiv i32 %.frozen6, 68, !dbg !17
  %24 = mul i32 %23, 68, !dbg !18
  %.decomposed7 = sub i32 %.frozen6, %24, !dbg !18
  %.frozen8 = freeze i32 %12, !dbg !17
  %25 = sdiv i32 %.frozen8, 68, !dbg !17
  %26 = mul i32 %25, 68, !dbg !18
  %.decomposed9 = sub i32 %.frozen8, %26, !dbg !18
  %27 = mul i32 %9, 17, !dbg !19
  %28 = mul i32 %10, 17, !dbg !19
  %29 = mul i32 %11, 17, !dbg !19
  %30 = mul i32 %12, 17, !dbg !19
  %31 = add i32 %27, %17, !dbg !20
  %32 = add i32 %28, %17, !dbg !20
  %33 = add i32 %29, %17, !dbg !20
  %34 = add i32 %30, %17, !dbg !20
  %35 = sext i32 %31 to i64, !dbg !21
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !21
  %37 = sext i32 %32 to i64, !dbg !21
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !21
  %39 = sext i32 %33 to i64, !dbg !21
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !21
  %41 = sext i32 %34 to i64, !dbg !21
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !21
  %43 = and i1 %18, %13, !dbg !22
  %44 = and i1 %18, %14, !dbg !22
  %45 = and i1 %18, %15, !dbg !22
  %46 = and i1 %18, %16, !dbg !22
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %43, i32 0, i1 %43) #2, !dbg !23
  %48 = bitcast i32 %47 to float, !dbg !23
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %44, i32 0, i1 %44) #2, !dbg !23
  %50 = bitcast i32 %49 to float, !dbg !23
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %45, i32 0, i1 %45) #2, !dbg !23
  %52 = bitcast i32 %51 to float, !dbg !23
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %46, i32 0, i1 %46) #2, !dbg !23
  %54 = bitcast i32 %53 to float, !dbg !23
  %55 = select i1 %43, float %48, float 0xFFF0000000000000, !dbg !24
  %56 = select i1 %44, float %50, float 0xFFF0000000000000, !dbg !24
  %57 = select i1 %45, float %52, float 0xFFF0000000000000, !dbg !24
  %58 = select i1 %46, float %54, float 0xFFF0000000000000, !dbg !24
  %59 = bitcast float %55 to i32, !dbg !25
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 16, i32 31), !dbg !25
  %61 = bitcast i32 %60 to float, !dbg !25
  %62 = fcmp ogt float %55, %61, !dbg !29
  %63 = fcmp uno float %55, 0.000000e+00, !dbg !31
  %64 = or i1 %63, %62, !dbg !32
  %65 = select i1 %64, float %55, float %61, !dbg !33
  %66 = bitcast float %65 to i32, !dbg !25
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 8, i32 31), !dbg !25
  %68 = bitcast i32 %67 to float, !dbg !25
  %69 = fcmp ogt float %65, %68, !dbg !29
  %70 = fcmp uno float %65, 0.000000e+00, !dbg !31
  %71 = or i1 %69, %70, !dbg !32
  %72 = select i1 %71, float %65, float %68, !dbg !33
  %73 = bitcast float %72 to i32, !dbg !25
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 4, i32 31), !dbg !25
  %75 = bitcast i32 %74 to float, !dbg !25
  %76 = fcmp ogt float %72, %75, !dbg !29
  %77 = fcmp uno float %72, 0.000000e+00, !dbg !31
  %78 = or i1 %76, %77, !dbg !32
  %79 = select i1 %78, float %72, float %75, !dbg !33
  %80 = bitcast float %79 to i32, !dbg !25
  %81 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %80, i32 2, i32 31), !dbg !25
  %82 = bitcast i32 %81 to float, !dbg !25
  %83 = fcmp ogt float %79, %82, !dbg !29
  %84 = fcmp uno float %79, 0.000000e+00, !dbg !31
  %85 = or i1 %83, %84, !dbg !32
  %86 = select i1 %85, float %79, float %82, !dbg !33
  %87 = bitcast float %86 to i32, !dbg !25
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %87, i32 1, i32 31), !dbg !25
  %89 = bitcast i32 %88 to float, !dbg !25
  %90 = fcmp ogt float %86, %89, !dbg !29
  %91 = fcmp uno float %86, 0.000000e+00, !dbg !31
  %92 = or i1 %90, %91, !dbg !32
  %93 = select i1 %92, float %86, float %89, !dbg !33
  %94 = bitcast float %56 to i32, !dbg !25
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 16, i32 31), !dbg !25
  %96 = bitcast i32 %95 to float, !dbg !25
  %97 = fcmp ogt float %56, %96, !dbg !29
  %98 = fcmp uno float %56, 0.000000e+00, !dbg !31
  %99 = or i1 %98, %97, !dbg !32
  %100 = select i1 %99, float %56, float %96, !dbg !33
  %101 = bitcast float %100 to i32, !dbg !25
  %102 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %101, i32 8, i32 31), !dbg !25
  %103 = bitcast i32 %102 to float, !dbg !25
  %104 = fcmp ogt float %100, %103, !dbg !29
  %105 = fcmp uno float %100, 0.000000e+00, !dbg !31
  %106 = or i1 %104, %105, !dbg !32
  %107 = select i1 %106, float %100, float %103, !dbg !33
  %108 = bitcast float %107 to i32, !dbg !25
  %109 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %108, i32 4, i32 31), !dbg !25
  %110 = bitcast i32 %109 to float, !dbg !25
  %111 = fcmp ogt float %107, %110, !dbg !29
  %112 = fcmp uno float %107, 0.000000e+00, !dbg !31
  %113 = or i1 %111, %112, !dbg !32
  %114 = select i1 %113, float %107, float %110, !dbg !33
  %115 = bitcast float %114 to i32, !dbg !25
  %116 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %115, i32 2, i32 31), !dbg !25
  %117 = bitcast i32 %116 to float, !dbg !25
  %118 = fcmp ogt float %114, %117, !dbg !29
  %119 = fcmp uno float %114, 0.000000e+00, !dbg !31
  %120 = or i1 %118, %119, !dbg !32
  %121 = select i1 %120, float %114, float %117, !dbg !33
  %122 = bitcast float %121 to i32, !dbg !25
  %123 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %122, i32 1, i32 31), !dbg !25
  %124 = bitcast i32 %123 to float, !dbg !25
  %125 = fcmp ogt float %121, %124, !dbg !29
  %126 = fcmp uno float %121, 0.000000e+00, !dbg !31
  %127 = or i1 %125, %126, !dbg !32
  %128 = select i1 %127, float %121, float %124, !dbg !33
  %129 = bitcast float %57 to i32, !dbg !25
  %130 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %129, i32 16, i32 31), !dbg !25
  %131 = bitcast i32 %130 to float, !dbg !25
  %132 = fcmp ogt float %57, %131, !dbg !29
  %133 = fcmp uno float %57, 0.000000e+00, !dbg !31
  %134 = or i1 %133, %132, !dbg !32
  %135 = select i1 %134, float %57, float %131, !dbg !33
  %136 = bitcast float %135 to i32, !dbg !25
  %137 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %136, i32 8, i32 31), !dbg !25
  %138 = bitcast i32 %137 to float, !dbg !25
  %139 = fcmp ogt float %135, %138, !dbg !29
  %140 = fcmp uno float %135, 0.000000e+00, !dbg !31
  %141 = or i1 %139, %140, !dbg !32
  %142 = select i1 %141, float %135, float %138, !dbg !33
  %143 = bitcast float %142 to i32, !dbg !25
  %144 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %143, i32 4, i32 31), !dbg !25
  %145 = bitcast i32 %144 to float, !dbg !25
  %146 = fcmp ogt float %142, %145, !dbg !29
  %147 = fcmp uno float %142, 0.000000e+00, !dbg !31
  %148 = or i1 %146, %147, !dbg !32
  %149 = select i1 %148, float %142, float %145, !dbg !33
  %150 = bitcast float %149 to i32, !dbg !25
  %151 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %150, i32 2, i32 31), !dbg !25
  %152 = bitcast i32 %151 to float, !dbg !25
  %153 = fcmp ogt float %149, %152, !dbg !29
  %154 = fcmp uno float %149, 0.000000e+00, !dbg !31
  %155 = or i1 %153, %154, !dbg !32
  %156 = select i1 %155, float %149, float %152, !dbg !33
  %157 = bitcast float %156 to i32, !dbg !25
  %158 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %157, i32 1, i32 31), !dbg !25
  %159 = bitcast i32 %158 to float, !dbg !25
  %160 = fcmp ogt float %156, %159, !dbg !29
  %161 = fcmp uno float %156, 0.000000e+00, !dbg !31
  %162 = or i1 %160, %161, !dbg !32
  %163 = select i1 %162, float %156, float %159, !dbg !33
  %164 = bitcast float %58 to i32, !dbg !25
  %165 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %164, i32 16, i32 31), !dbg !25
  %166 = bitcast i32 %165 to float, !dbg !25
  %167 = fcmp ogt float %58, %166, !dbg !29
  %168 = fcmp uno float %58, 0.000000e+00, !dbg !31
  %169 = or i1 %168, %167, !dbg !32
  %170 = select i1 %169, float %58, float %166, !dbg !33
  %171 = bitcast float %170 to i32, !dbg !25
  %172 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %171, i32 8, i32 31), !dbg !25
  %173 = bitcast i32 %172 to float, !dbg !25
  %174 = fcmp ogt float %170, %173, !dbg !29
  %175 = fcmp uno float %170, 0.000000e+00, !dbg !31
  %176 = or i1 %174, %175, !dbg !32
  %177 = select i1 %176, float %170, float %173, !dbg !33
  %178 = bitcast float %177 to i32, !dbg !25
  %179 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %178, i32 4, i32 31), !dbg !25
  %180 = bitcast i32 %179 to float, !dbg !25
  %181 = fcmp ogt float %177, %180, !dbg !29
  %182 = fcmp uno float %177, 0.000000e+00, !dbg !31
  %183 = or i1 %181, %182, !dbg !32
  %184 = select i1 %183, float %177, float %180, !dbg !33
  %185 = bitcast float %184 to i32, !dbg !25
  %186 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %185, i32 2, i32 31), !dbg !25
  %187 = bitcast i32 %186 to float, !dbg !25
  %188 = fcmp ogt float %184, %187, !dbg !29
  %189 = fcmp uno float %184, 0.000000e+00, !dbg !31
  %190 = or i1 %188, %189, !dbg !32
  %191 = select i1 %190, float %184, float %187, !dbg !33
  %192 = bitcast float %191 to i32, !dbg !25
  %193 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %192, i32 1, i32 31), !dbg !25
  %194 = bitcast i32 %193 to float, !dbg !25
  %195 = fcmp ogt float %191, %194, !dbg !29
  %196 = fcmp uno float %191, 0.000000e+00, !dbg !31
  %197 = or i1 %195, %196, !dbg !32
  %198 = select i1 %197, float %191, float %194, !dbg !33
  %199 = fsub float %48, %93, !dbg !34
  %200 = fsub float %50, %128, !dbg !34
  %201 = fsub float %52, %163, !dbg !34
  %202 = fsub float %54, %198, !dbg !34
  %203 = fmul float %199, 0x3FF7154760000000, !dbg !35
  %204 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %203) #2, !dbg !35
  %205 = fmul float %200, 0x3FF7154760000000, !dbg !35
  %206 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %205) #2, !dbg !35
  %207 = fmul float %201, 0x3FF7154760000000, !dbg !35
  %208 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %207) #2, !dbg !35
  %209 = fmul float %202, 0x3FF7154760000000, !dbg !35
  %210 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %209) #2, !dbg !35
  %211 = select i1 %43, float %204, float 0.000000e+00, !dbg !36
  %212 = select i1 %44, float %206, float 0.000000e+00, !dbg !36
  %213 = select i1 %45, float %208, float 0.000000e+00, !dbg !36
  %214 = select i1 %46, float %210, float 0.000000e+00, !dbg !36
  %215 = bitcast float %211 to i32, !dbg !37
  %216 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %215, i32 16, i32 31), !dbg !37
  %217 = bitcast i32 %216 to float, !dbg !37
  %218 = fadd float %211, %217, !dbg !41
  %219 = bitcast float %218 to i32, !dbg !37
  %220 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %219, i32 8, i32 31), !dbg !37
  %221 = bitcast i32 %220 to float, !dbg !37
  %222 = fadd float %218, %221, !dbg !41
  %223 = bitcast float %222 to i32, !dbg !37
  %224 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %223, i32 4, i32 31), !dbg !37
  %225 = bitcast i32 %224 to float, !dbg !37
  %226 = fadd float %222, %225, !dbg !41
  %227 = bitcast float %226 to i32, !dbg !37
  %228 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %227, i32 2, i32 31), !dbg !37
  %229 = bitcast i32 %228 to float, !dbg !37
  %230 = fadd float %226, %229, !dbg !41
  %231 = bitcast float %230 to i32, !dbg !37
  %232 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %231, i32 1, i32 31), !dbg !37
  %233 = bitcast i32 %232 to float, !dbg !37
  %234 = fadd float %230, %233, !dbg !41
  %235 = bitcast float %212 to i32, !dbg !37
  %236 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %235, i32 16, i32 31), !dbg !37
  %237 = bitcast i32 %236 to float, !dbg !37
  %238 = fadd float %212, %237, !dbg !41
  %239 = bitcast float %238 to i32, !dbg !37
  %240 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %239, i32 8, i32 31), !dbg !37
  %241 = bitcast i32 %240 to float, !dbg !37
  %242 = fadd float %238, %241, !dbg !41
  %243 = bitcast float %242 to i32, !dbg !37
  %244 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %243, i32 4, i32 31), !dbg !37
  %245 = bitcast i32 %244 to float, !dbg !37
  %246 = fadd float %242, %245, !dbg !41
  %247 = bitcast float %246 to i32, !dbg !37
  %248 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %247, i32 2, i32 31), !dbg !37
  %249 = bitcast i32 %248 to float, !dbg !37
  %250 = fadd float %246, %249, !dbg !41
  %251 = bitcast float %250 to i32, !dbg !37
  %252 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %251, i32 1, i32 31), !dbg !37
  %253 = bitcast i32 %252 to float, !dbg !37
  %254 = fadd float %250, %253, !dbg !41
  %255 = bitcast float %213 to i32, !dbg !37
  %256 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %255, i32 16, i32 31), !dbg !37
  %257 = bitcast i32 %256 to float, !dbg !37
  %258 = fadd float %213, %257, !dbg !41
  %259 = bitcast float %258 to i32, !dbg !37
  %260 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %259, i32 8, i32 31), !dbg !37
  %261 = bitcast i32 %260 to float, !dbg !37
  %262 = fadd float %258, %261, !dbg !41
  %263 = bitcast float %262 to i32, !dbg !37
  %264 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %263, i32 4, i32 31), !dbg !37
  %265 = bitcast i32 %264 to float, !dbg !37
  %266 = fadd float %262, %265, !dbg !41
  %267 = bitcast float %266 to i32, !dbg !37
  %268 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %267, i32 2, i32 31), !dbg !37
  %269 = bitcast i32 %268 to float, !dbg !37
  %270 = fadd float %266, %269, !dbg !41
  %271 = bitcast float %270 to i32, !dbg !37
  %272 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %271, i32 1, i32 31), !dbg !37
  %273 = bitcast i32 %272 to float, !dbg !37
  %274 = fadd float %270, %273, !dbg !41
  %275 = bitcast float %214 to i32, !dbg !37
  %276 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %275, i32 16, i32 31), !dbg !37
  %277 = bitcast i32 %276 to float, !dbg !37
  %278 = fadd float %214, %277, !dbg !41
  %279 = bitcast float %278 to i32, !dbg !37
  %280 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %279, i32 8, i32 31), !dbg !37
  %281 = bitcast i32 %280 to float, !dbg !37
  %282 = fadd float %278, %281, !dbg !41
  %283 = bitcast float %282 to i32, !dbg !37
  %284 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %283, i32 4, i32 31), !dbg !37
  %285 = bitcast i32 %284 to float, !dbg !37
  %286 = fadd float %282, %285, !dbg !41
  %287 = bitcast float %286 to i32, !dbg !37
  %288 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %287, i32 2, i32 31), !dbg !37
  %289 = bitcast i32 %288 to float, !dbg !37
  %290 = fadd float %286, %289, !dbg !41
  %291 = bitcast float %290 to i32, !dbg !37
  %292 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %291, i32 1, i32 31), !dbg !37
  %293 = bitcast i32 %292 to float, !dbg !37
  %294 = fadd float %290, %293, !dbg !41
  %295 = fcmp une float %48, 0xFFF0000000000000, !dbg !43
  %296 = fcmp une float %50, 0xFFF0000000000000, !dbg !43
  %297 = fcmp une float %52, 0xFFF0000000000000, !dbg !43
  %298 = fcmp une float %54, 0xFFF0000000000000, !dbg !43
  %narrow = select i1 %43, i1 %295, i1 false, !dbg !44
  %299 = zext i1 %narrow to i32, !dbg !44
  %narrow1 = select i1 %44, i1 %296, i1 false, !dbg !44
  %300 = zext i1 %narrow1 to i32, !dbg !44
  %narrow2 = select i1 %45, i1 %297, i1 false, !dbg !44
  %301 = zext i1 %narrow2 to i32, !dbg !44
  %narrow3 = select i1 %46, i1 %298, i1 false, !dbg !44
  %302 = zext i1 %narrow3 to i32, !dbg !44
  %303 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %299, i32 -1), !dbg !45
  %304 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %300, i32 -1), !dbg !45
  %305 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %301, i32 -1), !dbg !45
  %306 = tail call i32 @llvm.nvvm.redux.sync.or(i32 %302, i32 -1), !dbg !45
  %307 = icmp eq i32 %303, 0, !dbg !47
  %308 = icmp eq i32 %304, 0, !dbg !47
  %309 = icmp eq i32 %305, 0, !dbg !47
  %310 = icmp eq i32 %306, 0, !dbg !47
  %311 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %204, float %234) #2, !dbg !48
  %312 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %206, float %254) #2, !dbg !48
  %313 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %208, float %274) #2, !dbg !48
  %314 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %210, float %294) #2, !dbg !48
  %315 = mul nsw i32 %.decomposed, 17, !dbg !49
  %316 = mul nsw i32 %.decomposed5, 17, !dbg !49
  %317 = mul nsw i32 %.decomposed7, 17, !dbg !49
  %318 = mul nsw i32 %.decomposed9, 17, !dbg !49
  %319 = add nsw i32 %315, %17, !dbg !50
  %320 = add nsw i32 %316, %17, !dbg !50
  %321 = add nsw i32 %317, %17, !dbg !50
  %322 = add nsw i32 %318, %17, !dbg !50
  %323 = mul i32 %19, 1184, !dbg !51
  %324 = mul i32 %21, 1184, !dbg !51
  %325 = mul i32 %23, 1184, !dbg !51
  %326 = mul i32 %25, 1184, !dbg !51
  %327 = add i32 %319, %323, !dbg !52
  %328 = add i32 %320, %324, !dbg !52
  %329 = add i32 %321, %325, !dbg !52
  %330 = add i32 %322, %326, !dbg !52
  %331 = sext i32 %327 to i64, !dbg !53
  %332 = getelementptr float, ptr addrspace(1) %1, i64 %331, !dbg !53
  %333 = sext i32 %328 to i64, !dbg !53
  %334 = getelementptr float, ptr addrspace(1) %1, i64 %333, !dbg !53
  %335 = sext i32 %329 to i64, !dbg !53
  %336 = getelementptr float, ptr addrspace(1) %1, i64 %335, !dbg !53
  %337 = sext i32 %330 to i64, !dbg !53
  %338 = getelementptr float, ptr addrspace(1) %1, i64 %337, !dbg !53
  %339 = bitcast float %311 to i32, !dbg !54
  %340 = select i1 %307, i32 0, i32 %339, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %340, ptr addrspace(1) %332, i1 %43) #2, !dbg !54
  %341 = bitcast float %312 to i32, !dbg !54
  %342 = select i1 %308, i32 0, i32 %341, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %342, ptr addrspace(1) %334, i1 %44) #2, !dbg !54
  %343 = bitcast float %313 to i32, !dbg !54
  %344 = select i1 %309, i32 0, i32 %343, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %344, ptr addrspace(1) %336, i1 %45) #2, !dbg !54
  %345 = bitcast float %314 to i32, !dbg !54
  %346 = select i1 %310, i32 0, i32 %345, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %346, ptr addrspace(1) %338, i1 %46) #2, !dbg !54
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.redux.sync.or(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cq4vrj3ncg5dgubzqtgywb7vuticfunezd2l7csir3u5saygcfzr.py", directory: "inductor_cache/q4")
!4 = !{ptr @triton_per_fused__safe_softmax_5, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__safe_softmax_5, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__safe_softmax_5", linkageName: "triton_per_fused__safe_softmax_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 31, column: 19, scope: !7)
!19 = !DILocation(line: 33, column: 38, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 30, scope: !7)
!22 = !DILocation(line: 33, column: 51, scope: !7)
!23 = !DILocation(line: 33, column: 43, scope: !7)
!24 = !DILocation(line: 35, column: 41, scope: !7)
!25 = !DILocation(line: 131, column: 29, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!28 = !DILocation(line: 36, column: 37, scope: !7)
!29 = !DILocation(line: 118, column: 15, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !26, file: !27, discriminator: 0)
!31 = !DILocation(line: 120, column: 21, scope: !30, inlinedAt: !28)
!32 = !DILocation(line: 120, column: 16, scope: !30, inlinedAt: !28)
!33 = !DILocation(line: 121, column: 29, scope: !30, inlinedAt: !28)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 23, scope: !7)
!36 = !DILocation(line: 40, column: 41, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!40 = !DILocation(line: 41, column: 25, scope: !7)
!41 = !DILocation(line: 256, column: 15, scope: !42, inlinedAt: !40)
!42 = distinct !DILexicalBlockFile(scope: !38, file: !39, discriminator: 0)
!43 = !DILocation(line: 43, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 43, scope: !7)
!45 = !DILocation(line: 232, column: 29, scope: !26, inlinedAt: !46)
!46 = !DILocation(line: 49, column: 38, scope: !7)
!47 = !DILocation(line: 50, column: 21, scope: !7)
!48 = !DILocation(line: 51, column: 19, scope: !7)
!49 = !DILocation(line: 54, column: 33, scope: !7)
!50 = !DILocation(line: 54, column: 30, scope: !7)
!51 = !DILocation(line: 54, column: 43, scope: !7)
!52 = !DILocation(line: 54, column: 38, scope: !7)
!53 = !DILocation(line: 54, column: 25, scope: !7)
!54 = !DILocation(line: 54, column: 55, scope: !7)
!55 = !DILocation(line: 53, column: 35, scope: !7)
!56 = !DILocation(line: 54, column: 4, scope: !7)
