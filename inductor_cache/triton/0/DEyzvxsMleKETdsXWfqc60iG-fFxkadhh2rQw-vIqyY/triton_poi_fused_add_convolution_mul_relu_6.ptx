//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_mul_relu_6 // -- Begin function triton_poi_fused_add_convolution_mul_relu_6
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_mul_relu_6
.visible .entry triton_poi_fused_add_convolution_mul_relu_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_relu_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_relu_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_relu_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_relu_6_param_3,
	.param .u32 triton_poi_fused_add_convolution_mul_relu_6_param_4,
	.param .u32 triton_poi_fused_add_convolution_mul_relu_6_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b32 	%r<153>;
	.reg .f32 	%f<85>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_convolution_mul_relu_6_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_convolution_mul_relu_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:22:33
	shl.b32 	%r86, %r1, 4;
	ld.param.u64 	%rd16, [triton_poi_fused_add_convolution_mul_relu_6_param_2];
	.loc	1 23 44                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:23:44
	mov.u32 	%r87, %tid.x;
	ld.param.u64 	%rd17, [triton_poi_fused_add_convolution_mul_relu_6_param_3];
	bfe.u32 	%r89, %r87, 6, 2;
	shl.b32 	%r90, %r87, 2;
	and.b32  	%r91, %r90, 12;
	.loc	1 23 23                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:23:23
	or.b32  	%r92, %r86, %r89;
	or.b32  	%r93, %r92, 4;
	or.b32  	%r94, %r92, 8;
	or.b32  	%r95, %r92, 12;
	or.b32  	%r96, %r86, %r91;
	.loc	1 25 28                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:25:33
	shl.b32 	%r97, %r2, 8;
	.loc	1 26 44                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:26:44
	and.b32  	%r98, %r90, 252;
	bfe.u32 	%r99, %r87, 2, 6;
	and.b32  	%r100, %r87, 255;
	.loc	1 26 23                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:26:23
	or.b32  	%r101, %r97, %r98;
	or.b32  	%r102, %r97, %r99;
	or.b32  	%r103, %r102, 64;
	or.b32  	%r104, %r102, 128;
	or.b32  	%r105, %r102, 192;
	or.b32  	%r106, %r97, %r100;
	.loc	1 27 21                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:27:21
	setp.lt.s32 	%p1, %r101, 1088;
	setp.lt.s32 	%p5, %r106, 1088;
	setp.lt.s32 	%p27, %r102, 1088;
	setp.lt.s32 	%p28, %r103, 1088;
	setp.lt.s32 	%p29, %r104, 1088;
	setp.lt.s32 	%p30, %r105, 1088;
	.loc	1 31 19                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:31:19
	bfe.s32 	%r107, %r1, 27, 1;
	shr.u32 	%r108, %r107, 20;
	add.s32 	%r109, %r96, %r108;
	shr.s32 	%r110, %r109, 12;
	.loc	1 30 19                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:30:19
	and.b32  	%r111, %r109, -4096;
	sub.s32 	%r112, %r96, %r111;
	.loc	1 32 35                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:32:35
	mad.lo.s32 	%r113, %r92, 1088, %r101;
	mad.lo.s32 	%r114, %r93, 1088, %r101;
	mad.lo.s32 	%r115, %r94, 1088, %r101;
	mad.lo.s32 	%r116, %r95, 1088, %r101;
	.loc	1 32 30                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:32:30
	mul.wide.s32 	%rd18, %r113, 4;
	add.s64 	%rd1, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r114, 4;
	add.s64 	%rd2, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r115, 4;
	add.s64 	%rd3, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r116, 4;
	add.s64 	%rd4, %rd14, %rd21;
	.loc	1 32 45                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:32:45
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:33:30
	mul.wide.s32 	%rd22, %r106, 4;
	add.s64 	%rd5, %rd15, %rd22;
	.loc	1 33 35                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:33:35
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r37 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:34:30
	add.s64 	%rd6, %rd16, %rd18;
	add.s64 	%rd7, %rd16, %rd19;
	add.s64 	%rd8, %rd16, %rd20;
	add.s64 	%rd9, %rd16, %rd21;
	.loc	1 34 45                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:34:45
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 35 18                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:35:18
	shl.b32 	%r117, %r100, 2;
	mov.u32 	%r118, global_smem;
	add.s32 	%r36, %r118, %r117;
	mov.pred 	%p10, -1;
	// begin inline asm
	@%p10 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r119, %r98, 2;
	add.s32 	%r120, %r118, %r119;
	.loc	1 32 45                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:32:45
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 34 45                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:34:45
	mov.b32 	%f17, %r35;
	mov.b32 	%f18, %r34;
	mov.b32 	%f19, %r33;
	mov.b32 	%f20, %r32;
	mov.b32 	%f21, %r31;
	mov.b32 	%f22, %r30;
	mov.b32 	%f23, %r29;
	mov.b32 	%f24, %r28;
	mov.b32 	%f25, %r27;
	mov.b32 	%f26, %r26;
	mov.b32 	%f27, %r25;
	mov.b32 	%f28, %r24;
	mov.b32 	%f29, %r23;
	mov.b32 	%f30, %r22;
	mov.b32 	%f31, %r21;
	mov.b32 	%f32, %r20;
	.loc	1 35 18                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:35:18
	ld.shared.v4.f32 	{%f33, %f34, %f35, %f36}, [%r120];
	add.f32 	%f37, %f36, %f16;
	add.f32 	%f38, %f35, %f15;
	add.f32 	%f39, %f34, %f14;
	add.f32 	%f40, %f33, %f13;
	add.f32 	%f41, %f36, %f12;
	add.f32 	%f42, %f35, %f11;
	add.f32 	%f43, %f34, %f10;
	add.f32 	%f44, %f33, %f9;
	add.f32 	%f45, %f36, %f8;
	add.f32 	%f46, %f35, %f7;
	add.f32 	%f47, %f34, %f6;
	add.f32 	%f48, %f33, %f5;
	add.f32 	%f49, %f36, %f4;
	add.f32 	%f50, %f35, %f3;
	add.f32 	%f51, %f34, %f2;
	add.f32 	%f52, %f33, %f1;
	.loc	1 38 18                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:38:18
	add.f32 	%f53, %f52, %f32;
	add.f32 	%f54, %f51, %f31;
	add.f32 	%f55, %f50, %f30;
	add.f32 	%f56, %f49, %f29;
	add.f32 	%f57, %f48, %f28;
	add.f32 	%f58, %f47, %f27;
	add.f32 	%f59, %f46, %f26;
	add.f32 	%f60, %f45, %f25;
	add.f32 	%f61, %f44, %f24;
	add.f32 	%f62, %f43, %f23;
	add.f32 	%f63, %f42, %f22;
	add.f32 	%f64, %f41, %f21;
	add.f32 	%f65, %f40, %f20;
	add.f32 	%f66, %f39, %f19;
	add.f32 	%f67, %f38, %f18;
	add.f32 	%f68, %f37, %f17;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p31, %f68, 0f00000000;
	setp.lt.f32 	%p32, %f67, 0f00000000;
	setp.lt.f32 	%p33, %f66, 0f00000000;
	setp.lt.f32 	%p34, %f65, 0f00000000;
	setp.lt.f32 	%p35, %f64, 0f00000000;
	setp.lt.f32 	%p36, %f63, 0f00000000;
	setp.lt.f32 	%p37, %f62, 0f00000000;
	setp.lt.f32 	%p38, %f61, 0f00000000;
	setp.lt.f32 	%p39, %f60, 0f00000000;
	setp.lt.f32 	%p40, %f59, 0f00000000;
	setp.lt.f32 	%p41, %f58, 0f00000000;
	setp.lt.f32 	%p42, %f57, 0f00000000;
	setp.lt.f32 	%p43, %f56, 0f00000000;
	setp.lt.f32 	%p44, %f55, 0f00000000;
	setp.lt.f32 	%p45, %f54, 0f00000000;
	setp.lt.f32 	%p46, %f53, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f69, 0f00000000, %f53, %p46;
	selp.f32 	%f70, 0f00000000, %f54, %p45;
	selp.f32 	%f71, 0f00000000, %f55, %p44;
	selp.f32 	%f72, 0f00000000, %f56, %p43;
	selp.f32 	%f73, 0f00000000, %f57, %p42;
	selp.f32 	%f74, 0f00000000, %f58, %p41;
	selp.f32 	%f75, 0f00000000, %f59, %p40;
	selp.f32 	%f76, 0f00000000, %f60, %p39;
	selp.f32 	%f77, 0f00000000, %f61, %p38;
	selp.f32 	%f78, 0f00000000, %f62, %p37;
	selp.f32 	%f79, 0f00000000, %f63, %p36;
	selp.f32 	%f80, 0f00000000, %f64, %p35;
	selp.f32 	%f81, 0f00000000, %f65, %p34;
	selp.f32 	%f82, 0f00000000, %f66, %p33;
	selp.f32 	%f83, 0f00000000, %f67, %p32;
	selp.f32 	%f84, 0f00000000, %f68, %p31;
$L__tmp2:
	.loc	1 41 35                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:41:35
	shl.b32 	%r121, %r102, 12;
	shl.b32 	%r122, %r103, 12;
	shl.b32 	%r123, %r104, 12;
	shl.b32 	%r124, %r105, 12;
	.loc	1 41 30                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:41:30
	mad.lo.s32 	%r125, %r110, 4456448, %r112;
	.loc	1 41 40                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:41:40
	add.s32 	%r126, %r125, %r121;
	add.s32 	%r127, %r125, %r122;
	add.s32 	%r128, %r125, %r123;
	add.s32 	%r129, %r125, %r124;
	.loc	1 41 25                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:41:25
	mul.wide.s32 	%rd23, %r126, 4;
	add.s64 	%rd10, %rd17, %rd23;
	mul.wide.s32 	%rd24, %r127, 4;
	add.s64 	%rd11, %rd17, %rd24;
	mul.wide.s32 	%rd25, %r128, 4;
	add.s64 	%rd12, %rd17, %rd25;
	mul.wide.s32 	%rd26, %r129, 4;
	add.s64 	%rd13, %rd17, %rd26;
	.loc	1 41 59                         // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:41:59
	bar.sync 	0;
	shl.b32 	%r130, %r87, 6;
	and.b32  	%r131, %r130, 4032;
	or.b32  	%r132, %r131, %r89;
	and.b32  	%r133, %r90, 1020;
	add.s32 	%r134, %r118, %r131;
	shl.b32 	%r135, %r132, 2;
	add.s32 	%r38, %r134, %r135;
	mov.b32 	%r39, %f69;
	// begin inline asm
	@%p10 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	add.s32 	%r40, %r38, 80;
	mov.b32 	%r41, %f70;
	// begin inline asm
	@%p10 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	add.s32 	%r42, %r38, 160;
	mov.b32 	%r43, %f71;
	// begin inline asm
	@%p10 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r38, 240;
	mov.b32 	%r45, %f72;
	// begin inline asm
	@%p10 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r38, 16;
	mov.b32 	%r47, %f73;
	// begin inline asm
	@%p10 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r38, 96;
	mov.b32 	%r49, %f74;
	// begin inline asm
	@%p10 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r38, 176;
	mov.b32 	%r51, %f75;
	// begin inline asm
	@%p10 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r38, 256;
	mov.b32 	%r53, %f76;
	// begin inline asm
	@%p10 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r38, 32;
	mov.b32 	%r55, %f77;
	// begin inline asm
	@%p10 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r38, 112;
	mov.b32 	%r57, %f78;
	// begin inline asm
	@%p10 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r38, 192;
	mov.b32 	%r59, %f79;
	// begin inline asm
	@%p10 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r38, 272;
	mov.b32 	%r61, %f80;
	// begin inline asm
	@%p10 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r38, 48;
	mov.b32 	%r63, %f81;
	// begin inline asm
	@%p10 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r38, 128;
	mov.b32 	%r65, %f82;
	// begin inline asm
	@%p10 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r38, 208;
	mov.b32 	%r67, %f83;
	// begin inline asm
	@%p10 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r38, 288;
	mov.b32 	%r69, %f84;
	// begin inline asm
	@%p10 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r136, %r87, 252;
	shl.b32 	%r137, %r136, 2;
	add.s32 	%r138, %r118, %r137;
	shl.b32 	%r139, %r133, 2;
	add.s32 	%r140, %r138, %r139;
	or.b32  	%r141, %r133, 1024;
	and.b32  	%r142, %r141, 2032;
	add.s32 	%r143, %r118, %r142;
	add.s32 	%r144, %r143, %r139;
	ld.shared.v4.u32 	{%r74, %r75, %r76, %r77}, [%r144+4096];
	or.b32  	%r145, %r133, 2048;
	and.b32  	%r146, %r145, 3056;
	add.s32 	%r147, %r118, %r146;
	add.s32 	%r148, %r147, %r139;
	ld.shared.v4.u32 	{%r78, %r79, %r80, %r81}, [%r148+8192];
	or.b32  	%r149, %r133, 3072;
	and.b32  	%r150, %r149, 4080;
	add.s32 	%r151, %r118, %r150;
	add.s32 	%r152, %r151, %r139;
	ld.shared.v4.u32 	{%r82, %r83, %r84, %r85}, [%r152+12288];
	ld.shared.v4.u32 	{%r70, %r71, %r72, %r73}, [%r140];
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd10 + 0 ], { %r70, %r71, %r72, %r73 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd11 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd12 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd13 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	.loc	1 41 4                          // ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py:41:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cd/ccd7nykkkmuelwk53fsppfnlfiiafrpk6o356i7mmlttjr7tuws6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 188                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 100
.b8 55
.b8 110
.b8 121
.b8 107
.b8 107
.b8 107
.b8 109
.b8 117
.b8 101
.b8 108
.b8 119
.b8 107
.b8 53
.b8 51
.b8 102
.b8 115
.b8 112
.b8 112
.b8 102
.b8 110
.b8 108
.b8 102
.b8 105
.b8 105
.b8 97
.b8 102
.b8 114
.b8 112
.b8 107
.b8 54
.b8 111
.b8 51
.b8 53
.b8 54
.b8 105
.b8 55
.b8 109
.b8 109
.b8 108
.b8 116
.b8 116
.b8 106
.b8 114
.b8 55
.b8 116
.b8 117
.b8 119
.b8 115
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x91:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
