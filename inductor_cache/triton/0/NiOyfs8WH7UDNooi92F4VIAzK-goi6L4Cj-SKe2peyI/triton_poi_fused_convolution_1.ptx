//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_1 // -- Begin function triton_poi_fused_convolution_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_1
.visible .entry triton_poi_fused_convolution_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_1_param_1,
	.param .u32 triton_poi_fused_convolution_1_param_2,
	.param .u32 triton_poi_fused_convolution_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<133>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_1_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:22:33
	shl.b32 	%r35, %r1, 4;
	.loc	1 23 44                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:23:44
	mov.u32 	%r36, %tid.x;
	shl.b32 	%r37, %r36, 2;
	and.b32  	%r38, %r37, 12;
	and.b32  	%r39, %r36, 64;
	bfe.u32 	%r40, %r36, 6, 1;
	.loc	1 23 23                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:23:23
	or.b32  	%r41, %r35, %r38;
	or.b32  	%r42, %r35, %r40;
	or.b32  	%r43, %r42, 2;
	or.b32  	%r44, %r42, 4;
	or.b32  	%r45, %r42, 6;
	or.b32  	%r46, %r42, 8;
	or.b32  	%r47, %r42, 10;
	or.b32  	%r48, %r42, 12;
	or.b32  	%r49, %r42, 14;
	.loc	1 24 21                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:24:21
	setp.lt.s32 	%p19, %r41, 16;
	setp.lt.s32 	%p20, %r42, 16;
	setp.lt.s32 	%p21, %r43, 16;
	setp.lt.s32 	%p22, %r44, 16;
	setp.lt.s32 	%p23, %r45, 16;
	setp.lt.s32 	%p24, %r46, 16;
	setp.lt.s32 	%p25, %r47, 16;
	setp.lt.s32 	%p26, %r48, 16;
	setp.lt.s32 	%p27, %r49, 16;
	.loc	1 25 28                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:25:33
	shl.b32 	%r50, %r2, 6;
	.loc	1 26 44                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:26:44
	bfe.u32 	%r51, %r36, 2, 4;
	shr.u32 	%r52, %r39, 2;
	or.b32  	%r53, %r51, %r52;
	and.b32  	%r54, %r36, 63;
	.loc	1 26 23                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:26:23
	or.b32  	%r55, %r50, %r53;
	or.b32  	%r56, %r55, 32;
	or.b32  	%r57, %r50, %r54;
	.loc	1 27 21                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:27:21
	setp.lt.s32 	%p28, %r55, 81;
	setp.lt.s32 	%p29, %r56, 81;
	setp.lt.s32 	%p30, %r57, 81;
	.loc	1 30 19                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:30:19
	shr.u32 	%r58, %r41, 2;
	.loc	1 32 37                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:32:37
	shl.b32 	%r59, %r55, 2;
	shl.b32 	%r60, %r56, 2;
	.loc	1 32 46                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:32:46
	mul.lo.s32 	%r61, %r58, 324;
	.loc	1 32 42                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:32:42
	add.s32 	%r62, %r59, %r61;
	add.s32 	%r63, %r61, %r60;
	.loc	1 32 30                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:32:30
	mul.wide.s32 	%rd13, %r62, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mul.wide.s32 	%rd14, %r63, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 32 59                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:32:59
	and.pred  	%p1, %p19, %p28;
	and.pred  	%p2, %p29, %p19;
	and.pred  	%p11, %p20, %p30;
	and.pred  	%p12, %p21, %p30;
	and.pred  	%p13, %p22, %p30;
	and.pred  	%p14, %p23, %p30;
	and.pred  	%p15, %p24, %p30;
	and.pred  	%p16, %p25, %p30;
	and.pred  	%p17, %p26, %p30;
	and.pred  	%p18, %p27, %p30;
	.loc	1 32 51                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:32:51
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:33:30
	mad.lo.s32 	%r64, %r42, 81, %r57;
	add.s32 	%r65, %r64, 162;
	add.s32 	%r66, %r64, 324;
	add.s32 	%r67, %r64, 486;
	add.s32 	%r68, %r64, 648;
	add.s32 	%r69, %r64, 810;
	add.s32 	%r70, %r64, 972;
	add.s32 	%r71, %r64, 1134;
	.loc	1 33 25                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:33:25
	mul.wide.s32 	%rd15, %r64, 4;
	add.s64 	%rd3, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r65, 4;
	add.s64 	%rd4, %rd12, %rd16;
	mul.wide.s32 	%rd17, %r66, 4;
	add.s64 	%rd5, %rd12, %rd17;
	mul.wide.s32 	%rd18, %r67, 4;
	add.s64 	%rd6, %rd12, %rd18;
	mul.wide.s32 	%rd19, %r68, 4;
	add.s64 	%rd7, %rd12, %rd19;
	mul.wide.s32 	%rd20, %r69, 4;
	add.s64 	%rd8, %rd12, %rd20;
	mul.wide.s32 	%rd21, %r70, 4;
	add.s64 	%rd9, %rd12, %rd21;
	mul.wide.s32 	%rd22, %r71, 4;
	add.s64 	%rd10, %rd12, %rd22;
	.loc	1 33 44                         // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:33:44
	shl.b32 	%r72, %r36, 8;
	and.b32  	%r73, %r72, 768;
	or.b32  	%r74, %r53, %r73;
	and.b32  	%r75, %r36, 127;
	shr.u32 	%r76, %r73, 6;
	add.s32 	%r77, %r74, %r76;
	shl.b32 	%r78, %r77, 2;
	mov.u32 	%r79, global_smem;
	add.s32 	%r11, %r79, %r78;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r80, %r73, 64;
	shr.u32 	%r81, %r80, 6;
	add.s32 	%r82, %r81, %r74;
	shl.b32 	%r83, %r82, 2;
	add.s32 	%r84, %r79, %r83;
	add.s32 	%r13, %r84, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r85, %r73, 128;
	shr.u32 	%r86, %r85, 6;
	add.s32 	%r87, %r86, %r74;
	shl.b32 	%r88, %r87, 2;
	add.s32 	%r89, %r79, %r88;
	add.s32 	%r15, %r89, 512;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r90, %r73, 192;
	shr.u32 	%r91, %r90, 6;
	add.s32 	%r92, %r91, %r74;
	shl.b32 	%r93, %r92, 2;
	add.s32 	%r94, %r79, %r93;
	add.s32 	%r17, %r94, 768;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r84, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r89, 640;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r94, 896;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r95, %r40, %r75;
	shl.b32 	%r96, %r95, 2;
	add.s32 	%r97, %r79, %r96;
	ld.shared.u32 	%r27, [%r97];
	or.b32  	%r98, %r75, 128;
	shr.u32 	%r99, %r98, 6;
	add.s32 	%r100, %r99, %r75;
	shl.b32 	%r101, %r100, 2;
	add.s32 	%r102, %r79, %r101;
	ld.shared.u32 	%r28, [%r102+512];
	or.b32  	%r103, %r75, 256;
	shr.u32 	%r104, %r103, 6;
	add.s32 	%r105, %r104, %r75;
	shl.b32 	%r106, %r105, 2;
	add.s32 	%r107, %r79, %r106;
	ld.shared.u32 	%r29, [%r107+1024];
	or.b32  	%r108, %r75, 384;
	shr.u32 	%r109, %r108, 6;
	add.s32 	%r110, %r109, %r75;
	shl.b32 	%r111, %r110, 2;
	add.s32 	%r112, %r79, %r111;
	ld.shared.u32 	%r30, [%r112+1536];
	or.b32  	%r113, %r75, 512;
	shr.u32 	%r114, %r113, 6;
	add.s32 	%r115, %r114, %r75;
	shl.b32 	%r116, %r115, 2;
	add.s32 	%r117, %r79, %r116;
	ld.shared.u32 	%r31, [%r117+2048];
	or.b32  	%r118, %r75, 640;
	shr.u32 	%r119, %r118, 6;
	add.s32 	%r120, %r119, %r75;
	shl.b32 	%r121, %r120, 2;
	add.s32 	%r122, %r79, %r121;
	ld.shared.u32 	%r32, [%r122+2560];
	or.b32  	%r123, %r75, 768;
	shr.u32 	%r124, %r123, 6;
	add.s32 	%r125, %r124, %r75;
	shl.b32 	%r126, %r125, 2;
	add.s32 	%r127, %r79, %r126;
	ld.shared.u32 	%r33, [%r127+3072];
	or.b32  	%r128, %r75, 896;
	shr.u32 	%r129, %r128, 6;
	add.s32 	%r130, %r129, %r75;
	shl.b32 	%r131, %r130, 2;
	add.s32 	%r132, %r79, %r131;
	ld.shared.u32 	%r34, [%r132+3584];
	// begin inline asm
	@%p11 st.global.b32 [ %rd3 + 0 ], { %r27 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.b32 [ %rd4 + 0 ], { %r28 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.b32 [ %rd5 + 0 ], { %r29 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.b32 [ %rd6 + 0 ], { %r30 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.b32 [ %rd7 + 0 ], { %r31 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.b32 [ %rd8 + 0 ], { %r32 };
	// end inline asm
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r33 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.b32 [ %rd10 + 0 ], { %r34 };
	// end inline asm
	.loc	1 33 4                          // cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xq/cxqyhwafv7qdvpc27jgrzp6ufcbgfycq7w6mwsqvvldn75btouv3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 113
.b8 121
.b8 104
.b8 119
.b8 97
.b8 102
.b8 118
.b8 55
.b8 113
.b8 100
.b8 118
.b8 112
.b8 99
.b8 50
.b8 55
.b8 106
.b8 103
.b8 114
.b8 122
.b8 112
.b8 54
.b8 117
.b8 102
.b8 99
.b8 98
.b8 103
.b8 102
.b8 121
.b8 99
.b8 113
.b8 55
.b8 119
.b8 54
.b8 109
.b8 119
.b8 115
.b8 113
.b8 118
.b8 118
.b8 108
.b8 100
.b8 110
.b8 55
.b8 53
.b8 98
.b8 116
.b8 111
.b8 117
.b8 118
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
