//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_29 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_29
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_29
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_29(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<55>;
	.reg .f32 	%f<20>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_1];
$L__tmp0:
	.loc	1 22 28                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:22:33
	shl.b32 	%r24, %r1, 1;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_3];
	.loc	1 23 44                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:23:44
	mov.u32 	%r25, %tid.x;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_4];
	bfe.u32 	%r26, %r25, 6, 1;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_5];
	.loc	1 23 23                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:23:23
	or.b32  	%r27, %r24, %r26;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_29_param_6];
	.loc	1 24 21                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:24:21
	setp.lt.s32 	%p12, %r27, 64;
	.loc	1 25 28                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:25:33
	shl.b32 	%r28, %r2, 7;
	.loc	1 26 44                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:26:44
	shl.b32 	%r29, %r25, 1;
	and.b32  	%r30, %r29, 126;
	and.b32  	%r31, %r25, 127;
	.loc	1 26 23                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:26:23
	or.b32  	%r32, %r28, %r30;
	or.b32  	%r33, %r28, %r31;
	.loc	1 27 21                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:27:21
	setp.lt.s32 	%p13, %r32, 96;
	setp.lt.s32 	%p7, %r33, 96;
	.loc	1 32 35                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:32:35
	mad.lo.s32 	%r34, %r27, 96, %r32;
	.loc	1 32 30                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:32:30
	mul.wide.s32 	%rd15, %r34, 4;
	add.s64 	%rd1, %rd8, %rd15;
	.loc	1 32 51                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:32:51
	and.pred  	%p1, %p12, %p13;
	.loc	1 32 43                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:32:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	and.b32  	%r35, %r29, 254;
	bfe.u32 	%r36, %r29, 7, 1;
	or.b32  	%r37, %r36, %r35;
	shl.b32 	%r38, %r37, 2;
	mov.u32 	%r39, global_smem;
	add.s32 	%r5, %r39, %r38;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	shl.b32 	%r40, %r36, 2;
	add.s32 	%r41, %r39, %r40;
	shl.b32 	%r42, %r35, 2;
	add.s32 	%r43, %r41, %r42;
	add.s32 	%r7, %r43, 4;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r44, %r31, 2;
	add.s32 	%r45, %r39, %r44;
	ld.shared.f32 	%f1, [%r45];
	ld.shared.f32 	%f2, [%r45+516];
	.loc	1 33 30                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:33:30
	add.s64 	%rd2, %rd9, %rd15;
	.loc	1 33 43                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:33:43
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r14 }, [ %rd2 + 0 ];
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r12;
	// end inline asm
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f3, [%r45];
	ld.shared.f32 	%f4, [%r45+516];
	.loc	1 34 30                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:34:30
	mul.wide.s32 	%rd16, %r33, 4;
	add.s64 	%rd3, %rd10, %rd16;
	.loc	1 34 35                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:34:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r15 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:35:30
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 35 35                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:35:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r16 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r16;
	.loc	1 36 31                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:36:31
	add.s64 	%rd5, %rd12, %rd16;
	.loc	1 36 36                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:36:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r17 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:37:31
	add.s64 	%rd6, %rd13, %rd16;
	.loc	1 37 36                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:37:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r18 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:40:18
	add.f32 	%f6, %f5, 0f3727C5AC;
	.loc	1 41 26                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:41:26
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 34 35                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:34:35
	mov.b32 	%f8, %r15;
	.loc	1 38 18                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:38:18
	sub.f32 	%f9, %f4, %f8;
	sub.f32 	%f10, %f3, %f8;
	.loc	1 37 36                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:37:36
	mov.b32 	%f11, %r18;
	.loc	1 36 36                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:36:36
	mov.b32 	%f12, %r17;
	.loc	1 24 21                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:24:21
	setp.lt.s32 	%p14, %r24, 64;
	.loc	1 32 51                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:32:51
	and.pred  	%p11, %p14, %p7;
	.loc	1 31 19                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:31:19
	bfe.s32 	%r46, %r1, 30, 1;
	shr.u32 	%r47, %r46, 28;
	add.s32 	%r48, %r24, %r47;
	shr.s32 	%r49, %r48, 4;
	.loc	1 30 19                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:30:19
	and.b32  	%r50, %r48, -16;
	sub.s32 	%r51, %r24, %r50;
	.loc	1 43 18                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:43:18
	mov.b32 	%r21, %f7;
	mov.b32 	%r20, 1065353216;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f13, %r19;
	.loc	1 46 19                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:46:19
	mul.f32 	%f14, %f10, %f13;
	mul.f32 	%f15, %f9, %f13;
	.loc	1 48 20                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:48:20
	fma.rn.f32 	%f16, %f14, %f12, %f11;
	fma.rn.f32 	%f17, %f15, %f12, %f11;
	.loc	1 49 19                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:49:19
	add.f32 	%f18, %f1, %f16;
	add.f32 	%f19, %f2, %f17;
	.loc	1 50 33                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:50:33
	shl.b32 	%r52, %r33, 4;
	.loc	1 50 30                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:50:30
	mad.lo.s32 	%r53, %r49, 1536, %r51;
	.loc	1 50 38                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:50:38
	add.s32 	%r54, %r53, %r52;
	.loc	1 50 25                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:50:25
	mul.wide.s32 	%rd17, %r54, 4;
	add.s64 	%rd7, %rd14, %rd17;
	.loc	1 50 55                         // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:50:55
	mov.b32 	%r22, %f18;
	mov.b32 	%r23, %f19;
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd7 + 0 ], { %r22, %r23 };
	// end inline asm
	.loc	1 50 4                          // cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py:50:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ru/cruvaktzudr2uxfh5o4csllsthrzdf2kipyuwpdrx5rg4oya4kel.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 117
.b8 118
.b8 97
.b8 107
.b8 116
.b8 122
.b8 117
.b8 100
.b8 114
.b8 50
.b8 117
.b8 120
.b8 102
.b8 104
.b8 53
.b8 111
.b8 52
.b8 99
.b8 115
.b8 108
.b8 108
.b8 115
.b8 116
.b8 104
.b8 114
.b8 122
.b8 100
.b8 102
.b8 50
.b8 107
.b8 105
.b8 112
.b8 121
.b8 117
.b8 119
.b8 112
.b8 100
.b8 114
.b8 120
.b8 53
.b8 114
.b8 103
.b8 52
.b8 111
.b8 121
.b8 97
.b8 52
.b8 107
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
