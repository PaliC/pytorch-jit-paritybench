//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_6 // -- Begin function triton_poi_fused_convolution_6
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_6
.visible .entry triton_poi_fused_convolution_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_6_param_2,
	.param .u32 triton_poi_fused_convolution_6_param_3,
	.param .u32 triton_poi_fused_convolution_6_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<159>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_6_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:22:33
	shl.b32 	%r83, %r1, 8;
	ld.param.u64 	%rd15, [triton_poi_fused_convolution_6_param_2];
	.loc	1 23 44                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:23:44
	mov.u32 	%r84, %tid.x;
	shl.b32 	%r85, %r84, 2;
	and.b32  	%r86, %r85, 12;
	and.b32  	%r87, %r85, 252;
	bfe.u32 	%r88, %r84, 2, 6;
	.loc	1 23 23                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:23:23
	or.b32  	%r89, %r83, %r87;
	or.b32  	%r90, %r83, %r88;
	or.b32  	%r91, %r90, 64;
	or.b32  	%r92, %r90, 128;
	or.b32  	%r93, %r90, 192;
	.loc	1 24 21                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:24:21
	setp.lt.s32 	%p1, %r89, 256;
	setp.lt.s32 	%p21, %r90, 256;
	setp.lt.s32 	%p22, %r91, 256;
	setp.lt.s32 	%p23, %r92, 256;
	setp.lt.s32 	%p24, %r93, 256;
	.loc	1 25 28                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:25:33
	shl.b32 	%r94, %r2, 4;
	.loc	1 26 44                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:26:44
	bfe.u32 	%r95, %r84, 6, 2;
	.loc	1 26 23                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:26:23
	or.b32  	%r96, %r94, %r95;
	or.b32  	%r97, %r94, %r86;
	.loc	1 30 19                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:30:19
	shr.s32 	%r99, %r89, 31;
	shr.u32 	%r100, %r99, 26;
	add.s32 	%r101, %r89, %r100;
	.loc	1 29 19                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:29:19
	and.b32  	%r102, %r101, -64;
	sub.s32 	%r103, %r89, %r102;
	.loc	1 26 23                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:26:23
	shl.b32 	%r104, %r96, 6;
	.loc	1 32 50                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:32:50
	shl.b32 	%r105, %r101, 12;
	and.b32  	%r106, %r105, -262144;
	.loc	1 32 35                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:32:35
	add.s32 	%r107, %r106, %r103;
	.loc	1 32 43                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:32:43
	add.s32 	%r108, %r107, %r104;
	add.s32 	%r109, %r108, 256;
	add.s32 	%r110, %r108, 512;
	add.s32 	%r111, %r108, 768;
	.loc	1 32 30                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:32:30
	mul.wide.s32 	%rd16, %r108, 4;
	add.s64 	%rd1, %rd13, %rd16;
	mul.wide.s32 	%rd17, %r109, 4;
	add.s64 	%rd2, %rd13, %rd17;
	mul.wide.s32 	%rd18, %r110, 4;
	add.s64 	%rd3, %rd13, %rd18;
	mul.wide.s32 	%rd19, %r111, 4;
	add.s64 	%rd4, %rd13, %rd19;
	.loc	1 32 55                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:32:55
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 35                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:33:35
	shl.b32 	%r112, %r90, 12;
	shl.b32 	%r113, %r91, 12;
	shl.b32 	%r114, %r92, 12;
	shl.b32 	%r115, %r93, 12;
	.loc	1 33 30                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:33:30
	add.s32 	%r116, %r97, %r112;
	add.s32 	%r117, %r97, %r113;
	add.s32 	%r118, %r97, %r114;
	add.s32 	%r119, %r97, %r115;
	.loc	1 33 25                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:33:25
	mul.wide.s32 	%rd20, %r116, 4;
	add.s64 	%rd5, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r117, 4;
	add.s64 	%rd6, %rd14, %rd21;
	mul.wide.s32 	%rd22, %r118, 4;
	add.s64 	%rd7, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r119, 4;
	add.s64 	%rd8, %rd14, %rd23;
	.loc	1 33 46                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:33:46
	shl.b32 	%r120, %r84, 6;
	and.b32  	%r121, %r120, 4032;
	or.b32  	%r122, %r121, %r95;
	and.b32  	%r123, %r85, 1020;
	shr.u32 	%r124, %r121, 2;
	mov.u32 	%r125, global_smem;
	add.s32 	%r126, %r125, %r124;
	shl.b32 	%r127, %r122, 2;
	add.s32 	%r19, %r126, %r127;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r128, %r121, 16;
	shr.u32 	%r129, %r128, 2;
	add.s32 	%r130, %r125, %r129;
	add.s32 	%r131, %r130, %r127;
	add.s32 	%r21, %r131, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r132, %r121, 32;
	shr.u32 	%r133, %r132, 2;
	add.s32 	%r134, %r125, %r133;
	add.s32 	%r135, %r134, %r127;
	add.s32 	%r23, %r135, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r136, %r121, 48;
	shr.u32 	%r137, %r136, 2;
	add.s32 	%r138, %r125, %r137;
	add.s32 	%r139, %r138, %r127;
	add.s32 	%r25, %r139, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r131, 80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r135, 144;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r139, 208;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r131, 96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r135, 160;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r139, 224;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r131, 112;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r135, 176;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r139, 240;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r140, %r84, 252;
	add.s32 	%r141, %r125, %r140;
	shl.b32 	%r142, %r123, 2;
	add.s32 	%r143, %r141, %r142;
	ld.shared.u32 	%r51, [%r143];
	ld.shared.u32 	%r52, [%r143+4];
	ld.shared.u32 	%r53, [%r143+8];
	ld.shared.u32 	%r54, [%r143+12];
	or.b32  	%r144, %r123, 1024;
	shr.u32 	%r145, %r144, 2;
	and.b32  	%r146, %r145, 508;
	add.s32 	%r147, %r125, %r146;
	add.s32 	%r148, %r147, %r142;
	ld.shared.u32 	%r55, [%r148+4096];
	ld.shared.u32 	%r56, [%r148+4100];
	ld.shared.u32 	%r57, [%r148+4104];
	ld.shared.u32 	%r58, [%r148+4108];
	or.b32  	%r149, %r123, 2048;
	shr.u32 	%r150, %r149, 2;
	and.b32  	%r151, %r150, 764;
	add.s32 	%r152, %r125, %r151;
	add.s32 	%r153, %r152, %r142;
	ld.shared.u32 	%r59, [%r153+8192];
	ld.shared.u32 	%r60, [%r153+8196];
	ld.shared.u32 	%r61, [%r153+8200];
	ld.shared.u32 	%r62, [%r153+8204];
	or.b32  	%r154, %r123, 3072;
	shr.u32 	%r155, %r154, 2;
	and.b32  	%r156, %r155, 1020;
	add.s32 	%r157, %r125, %r156;
	add.s32 	%r158, %r157, %r142;
	ld.shared.u32 	%r63, [%r158+12288];
	ld.shared.u32 	%r64, [%r158+12292];
	ld.shared.u32 	%r65, [%r158+12296];
	ld.shared.u32 	%r66, [%r158+12300];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd5 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd6 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd7 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd8 + 0 ], { %r63, %r64, %r65, %r66 };
	// end inline asm
	.loc	1 34 25                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:34:25
	add.s64 	%rd9, %rd15, %rd16;
	add.s64 	%rd10, %rd15, %rd17;
	add.s64 	%rd11, %rd15, %rd18;
	add.s64 	%rd12, %rd15, %rd19;
	.loc	1 34 56                         // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:34:56
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r20, %r22, %r24, %r26 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r28, %r30, %r32, %r34 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r36, %r38, %r40, %r42 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r44, %r46, %r48, %r50 };
	// end inline asm
	.loc	1 34 4                          // cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py:34:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ps/cpszzrez4pflvtdfu6ka6fr3qa4lae7adgucrrospbxrvogsa2or.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 115
.b8 122
.b8 122
.b8 114
.b8 101
.b8 122
.b8 52
.b8 112
.b8 102
.b8 108
.b8 118
.b8 116
.b8 100
.b8 102
.b8 117
.b8 54
.b8 107
.b8 97
.b8 54
.b8 102
.b8 114
.b8 51
.b8 113
.b8 97
.b8 52
.b8 108
.b8 97
.b8 101
.b8 55
.b8 97
.b8 100
.b8 103
.b8 117
.b8 99
.b8 114
.b8 114
.b8 111
.b8 115
.b8 112
.b8 98
.b8 120
.b8 114
.b8 118
.b8 111
.b8 103
.b8 115
.b8 97
.b8 50
.b8 111
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 115
.b8 0
	}
	.section	.debug_macinfo	{	}
