//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_23 // -- Begin function triton_poi_fused_cat_23
                                        // @triton_poi_fused_cat_23
.visible .entry triton_poi_fused_cat_23(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_23_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_23_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_23_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_23_param_3,
	.param .u32 triton_poi_fused_cat_23_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<66>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_cat_23_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_cat_23_param_1];
$L__tmp0:
	.loc	1 21 28                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:21:33
	shl.b32 	%r54, %r1, 9;
	ld.param.u64 	%rd7, [triton_poi_fused_cat_23_param_2];
	ld.param.u64 	%rd8, [triton_poi_fused_cat_23_param_3];
	.loc	1 22 36                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:22:36
	mov.u32 	%r55, %tid.x;
	shl.b32 	%r56, %r55, 2;
	and.b32  	%r57, %r56, 508;
	.loc	1 22 23                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:22:23
	or.b32  	%r58, %r54, %r57;
	.loc	1 25 19                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:25:19
	shr.s32 	%r60, %r58, 31;
	shr.u32 	%r61, %r60, 24;
	add.s32 	%r62, %r58, %r61;
	shr.s32 	%r63, %r62, 8;
	.loc	1 24 19                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:24:19
	and.b32  	%r64, %r62, -256;
	sub.s32 	%r65, %r58, %r64;
	.loc	1 31 18                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:31:18
	setp.lt.s32 	%p1, %r65, 128;
	.loc	1 32 34                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:32:34
	shl.b32 	%r66, %r63, 7;
	.loc	1 32 40                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:32:40
	add.s32 	%r67, %r66, %r65;
	.loc	1 32 30                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:32:30
	mul.wide.s32 	%rd9, %r67, 4;
	add.s64 	%rd1, %rd5, %rd9;
	mov.b32 	%r6, 0;
	.loc	1 32 46                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:32:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	mov.b32 	%f20, %r5;
	.loc	1 33 30                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:33:30
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 33 46                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:33:46
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f21, %r10;
	mov.b32 	%f22, %r11;
	mov.b32 	%f23, %r12;
	mov.b32 	%f24, %r13;
	mov.f32 	%f25, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f26, %f25, %f21;
	sub.f32 	%f27, %f25, %f22;
	sub.f32 	%f28, %f25, %f23;
	sub.f32 	%f29, %f25, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f27, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f30, %f1, 0f3F800000;
	add.f32 	%f31, %f3, 0f3F800000;
	add.f32 	%f32, %f5, 0f3F800000;
	add.f32 	%f33, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r20, %f30;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f34, %r18;
	mov.b32 	%r23, %f31;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f35, %r21;
	mov.b32 	%r26, %f32;
	// begin inline asm
	div.full.f32 %r24, %r19, %r26;
	// end inline asm
	mov.b32 	%f36, %r24;
	mov.b32 	%r29, %f33;
	// begin inline asm
	div.full.f32 %r27, %r19, %r29;
	// end inline asm
	mov.b32 	%f37, %r27;
$L__tmp2:
	.loc	1 36 18                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:36:18
	fma.rn.f32 	%f38, %f34, %f21, %f17;
	fma.rn.f32 	%f39, %f35, %f22, %f18;
	fma.rn.f32 	%f40, %f36, %f23, %f19;
	fma.rn.f32 	%f41, %f37, %f24, %f20;
	.loc	1 39 20                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:39:20
	setp.gt.s32 	%p11, %r65, 127;
	.loc	1 42 31                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:42:31
	add.s64 	%rd10, %rd7, %rd9;
	add.s64 	%rd3, %rd10, -512;
	.loc	1 42 56                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:42:56
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r30, %r6;
	@!%p11 mov.u32 %r31, %r6;
	@!%p11 mov.u32 %r32, %r6;
	@!%p11 mov.u32 %r33, %r6;
	// end inline asm
	mov.b32 	%f42, %r30;
	mov.b32 	%f43, %r31;
	mov.b32 	%f44, %r32;
	mov.b32 	%f45, %r33;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f46, %f25, %f42;
	sub.f32 	%f47, %f25, %f43;
	sub.f32 	%f48, %f25, %f44;
	sub.f32 	%f49, %f25, %f45;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f10, %f46, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f47, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f48, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f49, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f50, %f9, 0f3F800000;
	add.f32 	%f51, %f11, 0f3F800000;
	add.f32 	%f52, %f13, 0f3F800000;
	add.f32 	%f53, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r40, %f50;
	// begin inline asm
	div.full.f32 %r38, %r19, %r40;
	// end inline asm
	mov.b32 	%f54, %r38;
	mov.b32 	%r43, %f51;
	// begin inline asm
	div.full.f32 %r41, %r19, %r43;
	// end inline asm
	mov.b32 	%f55, %r41;
	mov.b32 	%r46, %f52;
	// begin inline asm
	div.full.f32 %r44, %r19, %r46;
	// end inline asm
	mov.b32 	%f56, %r44;
	mov.b32 	%r49, %f53;
	// begin inline asm
	div.full.f32 %r47, %r19, %r49;
	// end inline asm
	mov.b32 	%f57, %r47;
$L__tmp4:
	.loc	1 44 20                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:44:20
	mul.f32 	%f58, %f54, %f42;
	mul.f32 	%f59, %f55, %f43;
	mul.f32 	%f60, %f56, %f44;
	mul.f32 	%f61, %f57, %f45;
	.loc	1 0 0                           // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:0:0
	selp.f32 	%f62, %f38, %f58, %p1;
	selp.f32 	%f63, %f39, %f59, %p1;
	selp.f32 	%f64, %f40, %f60, %p1;
	selp.f32 	%f65, %f41, %f61, %p1;
	.loc	1 48 25                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:48:25
	mul.wide.s32 	%rd11, %r58, 4;
	add.s64 	%rd4, %rd8, %rd11;
	.loc	1 48 37                         // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:48:37
	mov.b32 	%r50, %f62;
	mov.b32 	%r51, %f63;
	mov.b32 	%r52, %f64;
	mov.b32 	%r53, %f65;
	mov.pred 	%p16, -1;
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd4 + 0 ], { %r50, %r51, %r52, %r53 };
	// end inline asm
	.loc	1 48 4                          // chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py:48:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hi/chii4hjoygf7e4j626bj5t6cdfxxefkuqftvz3knxjeuineho6vp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 192                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 105
.b8 105
.b8 52
.b8 104
.b8 106
.b8 111
.b8 121
.b8 103
.b8 102
.b8 55
.b8 101
.b8 52
.b8 106
.b8 54
.b8 50
.b8 54
.b8 98
.b8 106
.b8 53
.b8 116
.b8 54
.b8 99
.b8 100
.b8 102
.b8 120
.b8 120
.b8 101
.b8 102
.b8 107
.b8 117
.b8 113
.b8 102
.b8 116
.b8 118
.b8 122
.b8 51
.b8 107
.b8 110
.b8 120
.b8 106
.b8 101
.b8 117
.b8 105
.b8 110
.b8 101
.b8 104
.b8 111
.b8 54
.b8 118
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 50
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
