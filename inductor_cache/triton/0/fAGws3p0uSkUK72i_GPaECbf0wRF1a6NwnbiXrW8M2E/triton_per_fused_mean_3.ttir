#loc = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":39:24)
#loc29 = loc(callsite(#loc1 at #loc22))
module {
  tt.func public @triton_per_fused_mean_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":19:0), %arg4: i32 loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":19:0)) attributes {noinline = false} {
    %c9_i32 = arith.constant 9 : i32 loc(#loc1)
    %c36864_i32 = arith.constant 36864 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1x16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<9> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc3)
    %2 = tt.expand_dims %1 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc4)
    %3 = arith.cmpi slt, %2, %cst_1 : tensor<1x16xi32> loc(#loc5)
    %4 = arith.remsi %0, %c4096_i32 : i32 loc(#loc6)
    %5 = arith.divsi %0, %c4096_i32 : i32 loc(#loc7)
    %6 = arith.remsi %5, %c512_i32 : i32 loc(#loc8)
    %7 = arith.muli %2, %cst_0 : tensor<1x16xi32> loc(#loc9)
    %8 = tt.splat %4 : i32 -> tensor<1x16xi32> loc(#loc10)
    %9 = arith.addi %8, %7 : tensor<1x16xi32> loc(#loc10)
    %10 = arith.muli %5, %c36864_i32 : i32 loc(#loc11)
    %11 = tt.splat %10 : i32 -> tensor<1x16xi32> loc(#loc12)
    %12 = arith.addi %9, %11 : tensor<1x16xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc13)
    %15 = tt.load %14, %3, %cst : tensor<1x16x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.muli %6, %c9_i32 : i32 loc(#loc15)
    %17 = tt.splat %16 : i32 -> tensor<1x16xi32> loc(#loc16)
    %18 = arith.addi %2, %17 : tensor<1x16xi32> loc(#loc16)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc17)
    %21 = tt.load %20, %3, %cst evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %22 = arith.addf %15, %21 : tensor<1x16xf32> loc(#loc19)
    %23 = arith.select %3, %22, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc20)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc22)), %arg6: f32 loc(callsite(#loc1 at #loc22))):
      %28 = arith.addf %arg5, %arg6 : f32 loc(#loc31)
      tt.reduce.return %28 : f32 loc(#loc28)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc28)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %26 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc25)
    %27 = tt.splat %26 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    tt.store %27, %25 : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":23:28)
#loc3 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":26:26)
#loc4 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":26:34)
#loc5 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":28:21)
#loc6 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":30:19)
#loc7 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":31:19)
#loc8 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":32:29)
#loc9 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":34:40)
#loc10 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":34:35)
#loc11 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":34:51)
#loc12 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":34:45)
#loc13 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":34:30)
#loc14 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":34:56)
#loc15 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":35:37)
#loc16 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":35:35)
#loc17 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":35:30)
#loc18 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":35:42)
#loc19 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":36:18)
#loc20 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":38:33)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc24 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":39:27)
#loc25 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":40:25)
#loc26 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":40:36)
#loc27 = loc("inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py":40:4)
#loc28 = loc(callsite(#loc21 at #loc22))
#loc30 = loc(callsite(#loc23 at #loc21))
#loc31 = loc(callsite(#loc30 at #loc22))
