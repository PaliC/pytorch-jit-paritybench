; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_23(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 6, !dbg !12
  %10 = and i32 %9, 3, !dbg !12
  %11 = shl i32 %8, 2, !dbg !12
  %12 = or disjoint i32 %7, %10, !dbg !13
  %13 = or disjoint i32 %12, 4, !dbg !13
  %14 = or disjoint i32 %12, 8, !dbg !13
  %15 = or disjoint i32 %12, 12, !dbg !13
  %16 = icmp slt i32 %12, 16, !dbg !14
  %17 = icmp slt i32 %13, 16, !dbg !14
  %18 = icmp slt i32 %14, 16, !dbg !14
  %19 = icmp slt i32 %15, 16, !dbg !14
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %21 = shl i32 %20, 8, !dbg !16
  %22 = and i32 %11, 252, !dbg !17
  %23 = or disjoint i32 %21, %22, !dbg !18
  %24 = icmp slt i32 %23, 6144, !dbg !19
  %25 = mul i32 %12, 6144, !dbg !20
  %26 = mul i32 %13, 6144, !dbg !20
  %27 = mul i32 %14, 6144, !dbg !20
  %28 = mul i32 %15, 6144, !dbg !20
  %29 = add i32 %23, %25, !dbg !21
  %30 = add i32 %23, %26, !dbg !21
  %31 = add i32 %23, %27, !dbg !21
  %32 = add i32 %23, %28, !dbg !21
  %33 = sext i32 %29 to i64, !dbg !22
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !22
  %35 = sext i32 %30 to i64, !dbg !22
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !22
  %37 = sext i32 %31 to i64, !dbg !22
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !22
  %39 = sext i32 %32 to i64, !dbg !22
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !22
  %41 = and i1 %16, %24, !dbg !23
  %42 = and i1 %17, %24, !dbg !23
  %43 = and i1 %18, %24, !dbg !23
  %44 = and i1 %19, %24, !dbg !23
  %45 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %34, i1 %41) #4, !dbg !24
  %46 = extractvalue { i32, i32, i32, i32 } %45, 0, !dbg !24
  %47 = extractvalue { i32, i32, i32, i32 } %45, 1, !dbg !24
  %48 = extractvalue { i32, i32, i32, i32 } %45, 2, !dbg !24
  %49 = extractvalue { i32, i32, i32, i32 } %45, 3, !dbg !24
  %50 = bitcast i32 %46 to float, !dbg !24
  %51 = bitcast i32 %47 to float, !dbg !24
  %52 = bitcast i32 %48 to float, !dbg !24
  %53 = bitcast i32 %49 to float, !dbg !24
  %54 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %36, i1 %42) #4, !dbg !24
  %55 = extractvalue { i32, i32, i32, i32 } %54, 0, !dbg !24
  %56 = extractvalue { i32, i32, i32, i32 } %54, 1, !dbg !24
  %57 = extractvalue { i32, i32, i32, i32 } %54, 2, !dbg !24
  %58 = extractvalue { i32, i32, i32, i32 } %54, 3, !dbg !24
  %59 = bitcast i32 %55 to float, !dbg !24
  %60 = bitcast i32 %56 to float, !dbg !24
  %61 = bitcast i32 %57 to float, !dbg !24
  %62 = bitcast i32 %58 to float, !dbg !24
  %63 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %38, i1 %43) #4, !dbg !24
  %64 = extractvalue { i32, i32, i32, i32 } %63, 0, !dbg !24
  %65 = extractvalue { i32, i32, i32, i32 } %63, 1, !dbg !24
  %66 = extractvalue { i32, i32, i32, i32 } %63, 2, !dbg !24
  %67 = extractvalue { i32, i32, i32, i32 } %63, 3, !dbg !24
  %68 = bitcast i32 %64 to float, !dbg !24
  %69 = bitcast i32 %65 to float, !dbg !24
  %70 = bitcast i32 %66 to float, !dbg !24
  %71 = bitcast i32 %67 to float, !dbg !24
  %72 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %40, i1 %44) #4, !dbg !24
  %73 = extractvalue { i32, i32, i32, i32 } %72, 0, !dbg !24
  %74 = extractvalue { i32, i32, i32, i32 } %72, 1, !dbg !24
  %75 = extractvalue { i32, i32, i32, i32 } %72, 2, !dbg !24
  %76 = extractvalue { i32, i32, i32, i32 } %72, 3, !dbg !24
  %77 = bitcast i32 %73 to float, !dbg !24
  %78 = bitcast i32 %74 to float, !dbg !24
  %79 = bitcast i32 %75 to float, !dbg !24
  %80 = bitcast i32 %76 to float, !dbg !24
  %81 = fmul float %50, %50, !dbg !25
  %82 = fmul float %51, %51, !dbg !25
  %83 = fmul float %52, %52, !dbg !25
  %84 = fmul float %53, %53, !dbg !25
  %85 = fmul float %59, %59, !dbg !25
  %86 = fmul float %60, %60, !dbg !25
  %87 = fmul float %61, %61, !dbg !25
  %88 = fmul float %62, %62, !dbg !25
  %89 = fmul float %68, %68, !dbg !25
  %90 = fmul float %69, %69, !dbg !25
  %91 = fmul float %70, %70, !dbg !25
  %92 = fmul float %71, %71, !dbg !25
  %93 = fmul float %77, %77, !dbg !25
  %94 = fmul float %78, %78, !dbg !25
  %95 = fmul float %79, %79, !dbg !25
  %96 = fmul float %80, %80, !dbg !25
  %97 = fmul float %81, %50, !dbg !26
  %98 = fmul float %82, %51, !dbg !26
  %99 = fmul float %83, %52, !dbg !26
  %100 = fmul float %84, %53, !dbg !26
  %101 = fmul float %85, %59, !dbg !26
  %102 = fmul float %86, %60, !dbg !26
  %103 = fmul float %87, %61, !dbg !26
  %104 = fmul float %88, %62, !dbg !26
  %105 = fmul float %89, %68, !dbg !26
  %106 = fmul float %90, %69, !dbg !26
  %107 = fmul float %91, %70, !dbg !26
  %108 = fmul float %92, %71, !dbg !26
  %109 = fmul float %93, %77, !dbg !26
  %110 = fmul float %94, %78, !dbg !26
  %111 = fmul float %95, %79, !dbg !26
  %112 = fmul float %96, %80, !dbg !26
  %113 = fmul float %97, 0x3FA6E4E260000000, !dbg !27
  %114 = fmul float %98, 0x3FA6E4E260000000, !dbg !27
  %115 = fmul float %99, 0x3FA6E4E260000000, !dbg !27
  %116 = fmul float %100, 0x3FA6E4E260000000, !dbg !27
  %117 = fmul float %101, 0x3FA6E4E260000000, !dbg !27
  %118 = fmul float %102, 0x3FA6E4E260000000, !dbg !27
  %119 = fmul float %103, 0x3FA6E4E260000000, !dbg !27
  %120 = fmul float %104, 0x3FA6E4E260000000, !dbg !27
  %121 = fmul float %105, 0x3FA6E4E260000000, !dbg !27
  %122 = fmul float %106, 0x3FA6E4E260000000, !dbg !27
  %123 = fmul float %107, 0x3FA6E4E260000000, !dbg !27
  %124 = fmul float %108, 0x3FA6E4E260000000, !dbg !27
  %125 = fmul float %109, 0x3FA6E4E260000000, !dbg !27
  %126 = fmul float %110, 0x3FA6E4E260000000, !dbg !27
  %127 = fmul float %111, 0x3FA6E4E260000000, !dbg !27
  %128 = fmul float %112, 0x3FA6E4E260000000, !dbg !27
  %129 = fadd float %113, %50, !dbg !28
  %130 = fadd float %114, %51, !dbg !28
  %131 = fadd float %115, %52, !dbg !28
  %132 = fadd float %116, %53, !dbg !28
  %133 = fadd float %117, %59, !dbg !28
  %134 = fadd float %118, %60, !dbg !28
  %135 = fadd float %119, %61, !dbg !28
  %136 = fadd float %120, %62, !dbg !28
  %137 = fadd float %121, %68, !dbg !28
  %138 = fadd float %122, %69, !dbg !28
  %139 = fadd float %123, %70, !dbg !28
  %140 = fadd float %124, %71, !dbg !28
  %141 = fadd float %125, %77, !dbg !28
  %142 = fadd float %126, %78, !dbg !28
  %143 = fadd float %127, %79, !dbg !28
  %144 = fadd float %128, %80, !dbg !28
  %145 = fmul float %129, 0x3FE9884540000000, !dbg !29
  %146 = fmul float %130, 0x3FE9884540000000, !dbg !29
  %147 = fmul float %131, 0x3FE9884540000000, !dbg !29
  %148 = fmul float %132, 0x3FE9884540000000, !dbg !29
  %149 = fmul float %133, 0x3FE9884540000000, !dbg !29
  %150 = fmul float %134, 0x3FE9884540000000, !dbg !29
  %151 = fmul float %135, 0x3FE9884540000000, !dbg !29
  %152 = fmul float %136, 0x3FE9884540000000, !dbg !29
  %153 = fmul float %137, 0x3FE9884540000000, !dbg !29
  %154 = fmul float %138, 0x3FE9884540000000, !dbg !29
  %155 = fmul float %139, 0x3FE9884540000000, !dbg !29
  %156 = fmul float %140, 0x3FE9884540000000, !dbg !29
  %157 = fmul float %141, 0x3FE9884540000000, !dbg !29
  %158 = fmul float %142, 0x3FE9884540000000, !dbg !29
  %159 = fmul float %143, 0x3FE9884540000000, !dbg !29
  %160 = fmul float %144, 0x3FE9884540000000, !dbg !29
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i = icmp eq i32 %161, 0, !dbg !30
  %162 = tail call float @llvm.nvvm.fabs.ftz.f(float %145) #4, !dbg !30
  %163 = tail call float @llvm.nvvm.fabs.f(float %145) #4, !dbg !30
  %.01.i = select i1 %.not.i, float %163, float %162, !dbg !30
  %164 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !30
  br i1 %164, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !30

__internal_fmad.exit1.i:                          ; preds = %5
  %165 = fmul float %.01.i, 0x4007154760000000, !dbg !30
  %166 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %165) #4, !dbg !30
  %167 = fadd float %166, 1.000000e+00, !dbg !30
  %168 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %167) #5, !dbg !30, !srcloc !31
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i = icmp eq i32 %169, 0, !dbg !30
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %168, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %168, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i = select i1 %.not6.i, float %171, float %170, !dbg !30
  %172 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !30
  %s.0.i = select i1 %172, float 1.000000e+00, float %.03.i, !dbg !30
  %173 = bitcast float %s.0.i to i32, !dbg !30
  %174 = bitcast float %145 to i32, !dbg !30
  %175 = and i32 %174, -2147483648, !dbg !30
  %176 = or i32 %175, %173, !dbg !30
  %177 = bitcast i32 %176 to float, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__internal_fmad.exit3.i:                          ; preds = %5
  %178 = fmul float %145, %145, !dbg !30
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i = icmp eq i32 %179, 0, !dbg !30
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %178, float 0xBFAAC795C0000000) #4, !dbg !30
  %181 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %178, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i = select i1 %.not1.i, float %181, float %180, !dbg !30
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i = icmp eq i32 %182, 0, !dbg !30
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %178, float 0x3FC10B2820000000) #4, !dbg !30
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %178, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i = select i1 %.not2.i, float %184, float %183, !dbg !30
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i = icmp eq i32 %185, 0, !dbg !30
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %178, float 0xBFD5553DA0000000) #4, !dbg !30
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %178, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i = select i1 %.not3.i, float %187, float %186, !dbg !30
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i = icmp eq i32 %188, 0, !dbg !30
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %178, float 0.000000e+00) #4, !dbg !30
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %178, float 0.000000e+00) #4, !dbg !30
  %.04.i = select i1 %.not4.i, float %190, float %189, !dbg !30
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i = icmp eq i32 %191, 0, !dbg !30
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %145, float %145) #4, !dbg !30
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %145, float %145) #4, !dbg !30
  %.02.i = select i1 %.not5.i, float %193, float %192, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %177, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !30
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i34 = icmp eq i32 %194, 0, !dbg !30
  %195 = tail call float @llvm.nvvm.fabs.ftz.f(float %146) #4, !dbg !30
  %196 = tail call float @llvm.nvvm.fabs.f(float %146) #4, !dbg !30
  %.01.i35 = select i1 %.not.i34, float %196, float %195, !dbg !30
  %197 = fcmp ult float %.01.i35, 0x3FE3333340000000, !dbg !30
  br i1 %197, label %__internal_fmad.exit3.i41, label %__internal_fmad.exit1.i36, !dbg !30

__internal_fmad.exit1.i36:                        ; preds = %__nv_tanhf.exit
  %198 = fmul float %.01.i35, 0x4007154760000000, !dbg !30
  %199 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %198) #4, !dbg !30
  %200 = fadd float %199, 1.000000e+00, !dbg !30
  %201 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %200) #5, !dbg !30, !srcloc !31
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i37 = icmp eq i32 %202, 0, !dbg !30
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %201, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %201, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i38 = select i1 %.not6.i37, float %204, float %203, !dbg !30
  %205 = fcmp oge float %.01.i35, 0x4022059680000000, !dbg !30
  %s.0.i39 = select i1 %205, float 1.000000e+00, float %.03.i38, !dbg !30
  %206 = bitcast float %s.0.i39 to i32, !dbg !30
  %207 = bitcast float %146 to i32, !dbg !30
  %208 = and i32 %207, -2147483648, !dbg !30
  %209 = or i32 %208, %206, !dbg !30
  %210 = bitcast i32 %209 to float, !dbg !30
  br label %__nv_tanhf.exit52, !dbg !30

__internal_fmad.exit3.i41:                        ; preds = %__nv_tanhf.exit
  %211 = fmul float %146, %146, !dbg !30
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i42 = icmp eq i32 %212, 0, !dbg !30
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %211, float 0xBFAAC795C0000000) #4, !dbg !30
  %214 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %211, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i43 = select i1 %.not1.i42, float %214, float %213, !dbg !30
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i44 = icmp eq i32 %215, 0, !dbg !30
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i43, float %211, float 0x3FC10B2820000000) #4, !dbg !30
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i43, float %211, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i45 = select i1 %.not2.i44, float %217, float %216, !dbg !30
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i46 = icmp eq i32 %218, 0, !dbg !30
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i45, float %211, float 0xBFD5553DA0000000) #4, !dbg !30
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i45, float %211, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i47 = select i1 %.not3.i46, float %220, float %219, !dbg !30
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i48 = icmp eq i32 %221, 0, !dbg !30
  %222 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i47, float %211, float 0.000000e+00) #4, !dbg !30
  %223 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i47, float %211, float 0.000000e+00) #4, !dbg !30
  %.04.i49 = select i1 %.not4.i48, float %223, float %222, !dbg !30
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i50 = icmp eq i32 %224, 0, !dbg !30
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i49, float %146, float %146) #4, !dbg !30
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i49, float %146, float %146) #4, !dbg !30
  %.02.i51 = select i1 %.not5.i50, float %226, float %225, !dbg !30
  br label %__nv_tanhf.exit52, !dbg !30

__nv_tanhf.exit52:                                ; preds = %__internal_fmad.exit1.i36, %__internal_fmad.exit3.i41
  %s.1.i40 = phi float [ %210, %__internal_fmad.exit1.i36 ], [ %.02.i51, %__internal_fmad.exit3.i41 ], !dbg !30
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i53 = icmp eq i32 %227, 0, !dbg !30
  %228 = tail call float @llvm.nvvm.fabs.ftz.f(float %147) #4, !dbg !30
  %229 = tail call float @llvm.nvvm.fabs.f(float %147) #4, !dbg !30
  %.01.i54 = select i1 %.not.i53, float %229, float %228, !dbg !30
  %230 = fcmp ult float %.01.i54, 0x3FE3333340000000, !dbg !30
  br i1 %230, label %__internal_fmad.exit3.i60, label %__internal_fmad.exit1.i55, !dbg !30

__internal_fmad.exit1.i55:                        ; preds = %__nv_tanhf.exit52
  %231 = fmul float %.01.i54, 0x4007154760000000, !dbg !30
  %232 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %231) #4, !dbg !30
  %233 = fadd float %232, 1.000000e+00, !dbg !30
  %234 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %233) #5, !dbg !30, !srcloc !31
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i56 = icmp eq i32 %235, 0, !dbg !30
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i57 = select i1 %.not6.i56, float %237, float %236, !dbg !30
  %238 = fcmp oge float %.01.i54, 0x4022059680000000, !dbg !30
  %s.0.i58 = select i1 %238, float 1.000000e+00, float %.03.i57, !dbg !30
  %239 = bitcast float %s.0.i58 to i32, !dbg !30
  %240 = bitcast float %147 to i32, !dbg !30
  %241 = and i32 %240, -2147483648, !dbg !30
  %242 = or i32 %241, %239, !dbg !30
  %243 = bitcast i32 %242 to float, !dbg !30
  br label %__nv_tanhf.exit71, !dbg !30

__internal_fmad.exit3.i60:                        ; preds = %__nv_tanhf.exit52
  %244 = fmul float %147, %147, !dbg !30
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i61 = icmp eq i32 %245, 0, !dbg !30
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %244, float 0xBFAAC795C0000000) #4, !dbg !30
  %247 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %244, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i62 = select i1 %.not1.i61, float %247, float %246, !dbg !30
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i63 = icmp eq i32 %248, 0, !dbg !30
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i62, float %244, float 0x3FC10B2820000000) #4, !dbg !30
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i62, float %244, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i64 = select i1 %.not2.i63, float %250, float %249, !dbg !30
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i65 = icmp eq i32 %251, 0, !dbg !30
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i64, float %244, float 0xBFD5553DA0000000) #4, !dbg !30
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i64, float %244, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i66 = select i1 %.not3.i65, float %253, float %252, !dbg !30
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i67 = icmp eq i32 %254, 0, !dbg !30
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i66, float %244, float 0.000000e+00) #4, !dbg !30
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i66, float %244, float 0.000000e+00) #4, !dbg !30
  %.04.i68 = select i1 %.not4.i67, float %256, float %255, !dbg !30
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i69 = icmp eq i32 %257, 0, !dbg !30
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i68, float %147, float %147) #4, !dbg !30
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i68, float %147, float %147) #4, !dbg !30
  %.02.i70 = select i1 %.not5.i69, float %259, float %258, !dbg !30
  br label %__nv_tanhf.exit71, !dbg !30

__nv_tanhf.exit71:                                ; preds = %__internal_fmad.exit1.i55, %__internal_fmad.exit3.i60
  %s.1.i59 = phi float [ %243, %__internal_fmad.exit1.i55 ], [ %.02.i70, %__internal_fmad.exit3.i60 ], !dbg !30
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i72 = icmp eq i32 %260, 0, !dbg !30
  %261 = tail call float @llvm.nvvm.fabs.ftz.f(float %148) #4, !dbg !30
  %262 = tail call float @llvm.nvvm.fabs.f(float %148) #4, !dbg !30
  %.01.i73 = select i1 %.not.i72, float %262, float %261, !dbg !30
  %263 = fcmp ult float %.01.i73, 0x3FE3333340000000, !dbg !30
  br i1 %263, label %__internal_fmad.exit3.i79, label %__internal_fmad.exit1.i74, !dbg !30

__internal_fmad.exit1.i74:                        ; preds = %__nv_tanhf.exit71
  %264 = fmul float %.01.i73, 0x4007154760000000, !dbg !30
  %265 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %264) #4, !dbg !30
  %266 = fadd float %265, 1.000000e+00, !dbg !30
  %267 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %266) #5, !dbg !30, !srcloc !31
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i75 = icmp eq i32 %268, 0, !dbg !30
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %267, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %267, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i76 = select i1 %.not6.i75, float %270, float %269, !dbg !30
  %271 = fcmp oge float %.01.i73, 0x4022059680000000, !dbg !30
  %s.0.i77 = select i1 %271, float 1.000000e+00, float %.03.i76, !dbg !30
  %272 = bitcast float %s.0.i77 to i32, !dbg !30
  %273 = bitcast float %148 to i32, !dbg !30
  %274 = and i32 %273, -2147483648, !dbg !30
  %275 = or i32 %274, %272, !dbg !30
  %276 = bitcast i32 %275 to float, !dbg !30
  br label %__nv_tanhf.exit90, !dbg !30

__internal_fmad.exit3.i79:                        ; preds = %__nv_tanhf.exit71
  %277 = fmul float %148, %148, !dbg !30
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i80 = icmp eq i32 %278, 0, !dbg !30
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %277, float 0xBFAAC795C0000000) #4, !dbg !30
  %280 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %277, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i81 = select i1 %.not1.i80, float %280, float %279, !dbg !30
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i82 = icmp eq i32 %281, 0, !dbg !30
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i81, float %277, float 0x3FC10B2820000000) #4, !dbg !30
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i81, float %277, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i83 = select i1 %.not2.i82, float %283, float %282, !dbg !30
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i84 = icmp eq i32 %284, 0, !dbg !30
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i83, float %277, float 0xBFD5553DA0000000) #4, !dbg !30
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i83, float %277, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i85 = select i1 %.not3.i84, float %286, float %285, !dbg !30
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i86 = icmp eq i32 %287, 0, !dbg !30
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i85, float %277, float 0.000000e+00) #4, !dbg !30
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i85, float %277, float 0.000000e+00) #4, !dbg !30
  %.04.i87 = select i1 %.not4.i86, float %289, float %288, !dbg !30
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i88 = icmp eq i32 %290, 0, !dbg !30
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i87, float %148, float %148) #4, !dbg !30
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i87, float %148, float %148) #4, !dbg !30
  %.02.i89 = select i1 %.not5.i88, float %292, float %291, !dbg !30
  br label %__nv_tanhf.exit90, !dbg !30

__nv_tanhf.exit90:                                ; preds = %__internal_fmad.exit1.i74, %__internal_fmad.exit3.i79
  %s.1.i78 = phi float [ %276, %__internal_fmad.exit1.i74 ], [ %.02.i89, %__internal_fmad.exit3.i79 ], !dbg !30
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i91 = icmp eq i32 %293, 0, !dbg !30
  %294 = tail call float @llvm.nvvm.fabs.ftz.f(float %149) #4, !dbg !30
  %295 = tail call float @llvm.nvvm.fabs.f(float %149) #4, !dbg !30
  %.01.i92 = select i1 %.not.i91, float %295, float %294, !dbg !30
  %296 = fcmp ult float %.01.i92, 0x3FE3333340000000, !dbg !30
  br i1 %296, label %__internal_fmad.exit3.i98, label %__internal_fmad.exit1.i93, !dbg !30

__internal_fmad.exit1.i93:                        ; preds = %__nv_tanhf.exit90
  %297 = fmul float %.01.i92, 0x4007154760000000, !dbg !30
  %298 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %297) #4, !dbg !30
  %299 = fadd float %298, 1.000000e+00, !dbg !30
  %300 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %299) #5, !dbg !30, !srcloc !31
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i94 = icmp eq i32 %301, 0, !dbg !30
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %300, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %303 = tail call float @llvm.nvvm.fma.rn.f(float %300, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i95 = select i1 %.not6.i94, float %303, float %302, !dbg !30
  %304 = fcmp oge float %.01.i92, 0x4022059680000000, !dbg !30
  %s.0.i96 = select i1 %304, float 1.000000e+00, float %.03.i95, !dbg !30
  %305 = bitcast float %s.0.i96 to i32, !dbg !30
  %306 = bitcast float %149 to i32, !dbg !30
  %307 = and i32 %306, -2147483648, !dbg !30
  %308 = or i32 %307, %305, !dbg !30
  %309 = bitcast i32 %308 to float, !dbg !30
  br label %__nv_tanhf.exit109, !dbg !30

__internal_fmad.exit3.i98:                        ; preds = %__nv_tanhf.exit90
  %310 = fmul float %149, %149, !dbg !30
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i99 = icmp eq i32 %311, 0, !dbg !30
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %310, float 0xBFAAC795C0000000) #4, !dbg !30
  %313 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %310, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i100 = select i1 %.not1.i99, float %313, float %312, !dbg !30
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i101 = icmp eq i32 %314, 0, !dbg !30
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i100, float %310, float 0x3FC10B2820000000) #4, !dbg !30
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i100, float %310, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i102 = select i1 %.not2.i101, float %316, float %315, !dbg !30
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i103 = icmp eq i32 %317, 0, !dbg !30
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i102, float %310, float 0xBFD5553DA0000000) #4, !dbg !30
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i102, float %310, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i104 = select i1 %.not3.i103, float %319, float %318, !dbg !30
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i105 = icmp eq i32 %320, 0, !dbg !30
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i104, float %310, float 0.000000e+00) #4, !dbg !30
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i104, float %310, float 0.000000e+00) #4, !dbg !30
  %.04.i106 = select i1 %.not4.i105, float %322, float %321, !dbg !30
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i107 = icmp eq i32 %323, 0, !dbg !30
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i106, float %149, float %149) #4, !dbg !30
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i106, float %149, float %149) #4, !dbg !30
  %.02.i108 = select i1 %.not5.i107, float %325, float %324, !dbg !30
  br label %__nv_tanhf.exit109, !dbg !30

__nv_tanhf.exit109:                               ; preds = %__internal_fmad.exit1.i93, %__internal_fmad.exit3.i98
  %s.1.i97 = phi float [ %309, %__internal_fmad.exit1.i93 ], [ %.02.i108, %__internal_fmad.exit3.i98 ], !dbg !30
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i110 = icmp eq i32 %326, 0, !dbg !30
  %327 = tail call float @llvm.nvvm.fabs.ftz.f(float %150) #4, !dbg !30
  %328 = tail call float @llvm.nvvm.fabs.f(float %150) #4, !dbg !30
  %.01.i111 = select i1 %.not.i110, float %328, float %327, !dbg !30
  %329 = fcmp ult float %.01.i111, 0x3FE3333340000000, !dbg !30
  br i1 %329, label %__internal_fmad.exit3.i117, label %__internal_fmad.exit1.i112, !dbg !30

__internal_fmad.exit1.i112:                       ; preds = %__nv_tanhf.exit109
  %330 = fmul float %.01.i111, 0x4007154760000000, !dbg !30
  %331 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %330) #4, !dbg !30
  %332 = fadd float %331, 1.000000e+00, !dbg !30
  %333 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %332) #5, !dbg !30, !srcloc !31
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i113 = icmp eq i32 %334, 0, !dbg !30
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %333, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %333, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i114 = select i1 %.not6.i113, float %336, float %335, !dbg !30
  %337 = fcmp oge float %.01.i111, 0x4022059680000000, !dbg !30
  %s.0.i115 = select i1 %337, float 1.000000e+00, float %.03.i114, !dbg !30
  %338 = bitcast float %s.0.i115 to i32, !dbg !30
  %339 = bitcast float %150 to i32, !dbg !30
  %340 = and i32 %339, -2147483648, !dbg !30
  %341 = or i32 %340, %338, !dbg !30
  %342 = bitcast i32 %341 to float, !dbg !30
  br label %__nv_tanhf.exit128, !dbg !30

__internal_fmad.exit3.i117:                       ; preds = %__nv_tanhf.exit109
  %343 = fmul float %150, %150, !dbg !30
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i118 = icmp eq i32 %344, 0, !dbg !30
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %343, float 0xBFAAC795C0000000) #4, !dbg !30
  %346 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %343, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i119 = select i1 %.not1.i118, float %346, float %345, !dbg !30
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i120 = icmp eq i32 %347, 0, !dbg !30
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i119, float %343, float 0x3FC10B2820000000) #4, !dbg !30
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i119, float %343, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i121 = select i1 %.not2.i120, float %349, float %348, !dbg !30
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i122 = icmp eq i32 %350, 0, !dbg !30
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i121, float %343, float 0xBFD5553DA0000000) #4, !dbg !30
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i121, float %343, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i123 = select i1 %.not3.i122, float %352, float %351, !dbg !30
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i124 = icmp eq i32 %353, 0, !dbg !30
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i123, float %343, float 0.000000e+00) #4, !dbg !30
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i123, float %343, float 0.000000e+00) #4, !dbg !30
  %.04.i125 = select i1 %.not4.i124, float %355, float %354, !dbg !30
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i126 = icmp eq i32 %356, 0, !dbg !30
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i125, float %150, float %150) #4, !dbg !30
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i125, float %150, float %150) #4, !dbg !30
  %.02.i127 = select i1 %.not5.i126, float %358, float %357, !dbg !30
  br label %__nv_tanhf.exit128, !dbg !30

__nv_tanhf.exit128:                               ; preds = %__internal_fmad.exit1.i112, %__internal_fmad.exit3.i117
  %s.1.i116 = phi float [ %342, %__internal_fmad.exit1.i112 ], [ %.02.i127, %__internal_fmad.exit3.i117 ], !dbg !30
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i129 = icmp eq i32 %359, 0, !dbg !30
  %360 = tail call float @llvm.nvvm.fabs.ftz.f(float %151) #4, !dbg !30
  %361 = tail call float @llvm.nvvm.fabs.f(float %151) #4, !dbg !30
  %.01.i130 = select i1 %.not.i129, float %361, float %360, !dbg !30
  %362 = fcmp ult float %.01.i130, 0x3FE3333340000000, !dbg !30
  br i1 %362, label %__internal_fmad.exit3.i136, label %__internal_fmad.exit1.i131, !dbg !30

__internal_fmad.exit1.i131:                       ; preds = %__nv_tanhf.exit128
  %363 = fmul float %.01.i130, 0x4007154760000000, !dbg !30
  %364 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %363) #4, !dbg !30
  %365 = fadd float %364, 1.000000e+00, !dbg !30
  %366 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %365) #5, !dbg !30, !srcloc !31
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i132 = icmp eq i32 %367, 0, !dbg !30
  %368 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %366, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %369 = tail call float @llvm.nvvm.fma.rn.f(float %366, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i133 = select i1 %.not6.i132, float %369, float %368, !dbg !30
  %370 = fcmp oge float %.01.i130, 0x4022059680000000, !dbg !30
  %s.0.i134 = select i1 %370, float 1.000000e+00, float %.03.i133, !dbg !30
  %371 = bitcast float %s.0.i134 to i32, !dbg !30
  %372 = bitcast float %151 to i32, !dbg !30
  %373 = and i32 %372, -2147483648, !dbg !30
  %374 = or i32 %373, %371, !dbg !30
  %375 = bitcast i32 %374 to float, !dbg !30
  br label %__nv_tanhf.exit147, !dbg !30

__internal_fmad.exit3.i136:                       ; preds = %__nv_tanhf.exit128
  %376 = fmul float %151, %151, !dbg !30
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i137 = icmp eq i32 %377, 0, !dbg !30
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %376, float 0xBFAAC795C0000000) #4, !dbg !30
  %379 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %376, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i138 = select i1 %.not1.i137, float %379, float %378, !dbg !30
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i139 = icmp eq i32 %380, 0, !dbg !30
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %376, float 0x3FC10B2820000000) #4, !dbg !30
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %376, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i140 = select i1 %.not2.i139, float %382, float %381, !dbg !30
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i141 = icmp eq i32 %383, 0, !dbg !30
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i140, float %376, float 0xBFD5553DA0000000) #4, !dbg !30
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i140, float %376, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i142 = select i1 %.not3.i141, float %385, float %384, !dbg !30
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i143 = icmp eq i32 %386, 0, !dbg !30
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i142, float %376, float 0.000000e+00) #4, !dbg !30
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i142, float %376, float 0.000000e+00) #4, !dbg !30
  %.04.i144 = select i1 %.not4.i143, float %388, float %387, !dbg !30
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i145 = icmp eq i32 %389, 0, !dbg !30
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i144, float %151, float %151) #4, !dbg !30
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i144, float %151, float %151) #4, !dbg !30
  %.02.i146 = select i1 %.not5.i145, float %391, float %390, !dbg !30
  br label %__nv_tanhf.exit147, !dbg !30

__nv_tanhf.exit147:                               ; preds = %__internal_fmad.exit1.i131, %__internal_fmad.exit3.i136
  %s.1.i135 = phi float [ %375, %__internal_fmad.exit1.i131 ], [ %.02.i146, %__internal_fmad.exit3.i136 ], !dbg !30
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i148 = icmp eq i32 %392, 0, !dbg !30
  %393 = tail call float @llvm.nvvm.fabs.ftz.f(float %152) #4, !dbg !30
  %394 = tail call float @llvm.nvvm.fabs.f(float %152) #4, !dbg !30
  %.01.i149 = select i1 %.not.i148, float %394, float %393, !dbg !30
  %395 = fcmp ult float %.01.i149, 0x3FE3333340000000, !dbg !30
  br i1 %395, label %__internal_fmad.exit3.i155, label %__internal_fmad.exit1.i150, !dbg !30

__internal_fmad.exit1.i150:                       ; preds = %__nv_tanhf.exit147
  %396 = fmul float %.01.i149, 0x4007154760000000, !dbg !30
  %397 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %396) #4, !dbg !30
  %398 = fadd float %397, 1.000000e+00, !dbg !30
  %399 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %398) #5, !dbg !30, !srcloc !31
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i151 = icmp eq i32 %400, 0, !dbg !30
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %399, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %399, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i152 = select i1 %.not6.i151, float %402, float %401, !dbg !30
  %403 = fcmp oge float %.01.i149, 0x4022059680000000, !dbg !30
  %s.0.i153 = select i1 %403, float 1.000000e+00, float %.03.i152, !dbg !30
  %404 = bitcast float %s.0.i153 to i32, !dbg !30
  %405 = bitcast float %152 to i32, !dbg !30
  %406 = and i32 %405, -2147483648, !dbg !30
  %407 = or i32 %406, %404, !dbg !30
  %408 = bitcast i32 %407 to float, !dbg !30
  br label %__nv_tanhf.exit166, !dbg !30

__internal_fmad.exit3.i155:                       ; preds = %__nv_tanhf.exit147
  %409 = fmul float %152, %152, !dbg !30
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i156 = icmp eq i32 %410, 0, !dbg !30
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %409, float 0xBFAAC795C0000000) #4, !dbg !30
  %412 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %409, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i157 = select i1 %.not1.i156, float %412, float %411, !dbg !30
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i158 = icmp eq i32 %413, 0, !dbg !30
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i157, float %409, float 0x3FC10B2820000000) #4, !dbg !30
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i157, float %409, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i159 = select i1 %.not2.i158, float %415, float %414, !dbg !30
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i160 = icmp eq i32 %416, 0, !dbg !30
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i159, float %409, float 0xBFD5553DA0000000) #4, !dbg !30
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i159, float %409, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i161 = select i1 %.not3.i160, float %418, float %417, !dbg !30
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i162 = icmp eq i32 %419, 0, !dbg !30
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i161, float %409, float 0.000000e+00) #4, !dbg !30
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i161, float %409, float 0.000000e+00) #4, !dbg !30
  %.04.i163 = select i1 %.not4.i162, float %421, float %420, !dbg !30
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i164 = icmp eq i32 %422, 0, !dbg !30
  %423 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i163, float %152, float %152) #4, !dbg !30
  %424 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i163, float %152, float %152) #4, !dbg !30
  %.02.i165 = select i1 %.not5.i164, float %424, float %423, !dbg !30
  br label %__nv_tanhf.exit166, !dbg !30

__nv_tanhf.exit166:                               ; preds = %__internal_fmad.exit1.i150, %__internal_fmad.exit3.i155
  %s.1.i154 = phi float [ %408, %__internal_fmad.exit1.i150 ], [ %.02.i165, %__internal_fmad.exit3.i155 ], !dbg !30
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i167 = icmp eq i32 %425, 0, !dbg !30
  %426 = tail call float @llvm.nvvm.fabs.ftz.f(float %153) #4, !dbg !30
  %427 = tail call float @llvm.nvvm.fabs.f(float %153) #4, !dbg !30
  %.01.i168 = select i1 %.not.i167, float %427, float %426, !dbg !30
  %428 = fcmp ult float %.01.i168, 0x3FE3333340000000, !dbg !30
  br i1 %428, label %__internal_fmad.exit3.i174, label %__internal_fmad.exit1.i169, !dbg !30

__internal_fmad.exit1.i169:                       ; preds = %__nv_tanhf.exit166
  %429 = fmul float %.01.i168, 0x4007154760000000, !dbg !30
  %430 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %429) #4, !dbg !30
  %431 = fadd float %430, 1.000000e+00, !dbg !30
  %432 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %431) #5, !dbg !30, !srcloc !31
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i170 = icmp eq i32 %433, 0, !dbg !30
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %432, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i171 = select i1 %.not6.i170, float %435, float %434, !dbg !30
  %436 = fcmp oge float %.01.i168, 0x4022059680000000, !dbg !30
  %s.0.i172 = select i1 %436, float 1.000000e+00, float %.03.i171, !dbg !30
  %437 = bitcast float %s.0.i172 to i32, !dbg !30
  %438 = bitcast float %153 to i32, !dbg !30
  %439 = and i32 %438, -2147483648, !dbg !30
  %440 = or i32 %439, %437, !dbg !30
  %441 = bitcast i32 %440 to float, !dbg !30
  br label %__nv_tanhf.exit185, !dbg !30

__internal_fmad.exit3.i174:                       ; preds = %__nv_tanhf.exit166
  %442 = fmul float %153, %153, !dbg !30
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i175 = icmp eq i32 %443, 0, !dbg !30
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %442, float 0xBFAAC795C0000000) #4, !dbg !30
  %445 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %442, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i176 = select i1 %.not1.i175, float %445, float %444, !dbg !30
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i177 = icmp eq i32 %446, 0, !dbg !30
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i176, float %442, float 0x3FC10B2820000000) #4, !dbg !30
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i176, float %442, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i178 = select i1 %.not2.i177, float %448, float %447, !dbg !30
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i179 = icmp eq i32 %449, 0, !dbg !30
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i178, float %442, float 0xBFD5553DA0000000) #4, !dbg !30
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i178, float %442, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i180 = select i1 %.not3.i179, float %451, float %450, !dbg !30
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i181 = icmp eq i32 %452, 0, !dbg !30
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i180, float %442, float 0.000000e+00) #4, !dbg !30
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i180, float %442, float 0.000000e+00) #4, !dbg !30
  %.04.i182 = select i1 %.not4.i181, float %454, float %453, !dbg !30
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i183 = icmp eq i32 %455, 0, !dbg !30
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i182, float %153, float %153) #4, !dbg !30
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i182, float %153, float %153) #4, !dbg !30
  %.02.i184 = select i1 %.not5.i183, float %457, float %456, !dbg !30
  br label %__nv_tanhf.exit185, !dbg !30

__nv_tanhf.exit185:                               ; preds = %__internal_fmad.exit1.i169, %__internal_fmad.exit3.i174
  %s.1.i173 = phi float [ %441, %__internal_fmad.exit1.i169 ], [ %.02.i184, %__internal_fmad.exit3.i174 ], !dbg !30
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i186 = icmp eq i32 %458, 0, !dbg !30
  %459 = tail call float @llvm.nvvm.fabs.ftz.f(float %154) #4, !dbg !30
  %460 = tail call float @llvm.nvvm.fabs.f(float %154) #4, !dbg !30
  %.01.i187 = select i1 %.not.i186, float %460, float %459, !dbg !30
  %461 = fcmp ult float %.01.i187, 0x3FE3333340000000, !dbg !30
  br i1 %461, label %__internal_fmad.exit3.i193, label %__internal_fmad.exit1.i188, !dbg !30

__internal_fmad.exit1.i188:                       ; preds = %__nv_tanhf.exit185
  %462 = fmul float %.01.i187, 0x4007154760000000, !dbg !30
  %463 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %462) #4, !dbg !30
  %464 = fadd float %463, 1.000000e+00, !dbg !30
  %465 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %464) #5, !dbg !30, !srcloc !31
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i189 = icmp eq i32 %466, 0, !dbg !30
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %465, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %465, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i190 = select i1 %.not6.i189, float %468, float %467, !dbg !30
  %469 = fcmp oge float %.01.i187, 0x4022059680000000, !dbg !30
  %s.0.i191 = select i1 %469, float 1.000000e+00, float %.03.i190, !dbg !30
  %470 = bitcast float %s.0.i191 to i32, !dbg !30
  %471 = bitcast float %154 to i32, !dbg !30
  %472 = and i32 %471, -2147483648, !dbg !30
  %473 = or i32 %472, %470, !dbg !30
  %474 = bitcast i32 %473 to float, !dbg !30
  br label %__nv_tanhf.exit204, !dbg !30

__internal_fmad.exit3.i193:                       ; preds = %__nv_tanhf.exit185
  %475 = fmul float %154, %154, !dbg !30
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i194 = icmp eq i32 %476, 0, !dbg !30
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %475, float 0xBFAAC795C0000000) #4, !dbg !30
  %478 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %475, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i195 = select i1 %.not1.i194, float %478, float %477, !dbg !30
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i196 = icmp eq i32 %479, 0, !dbg !30
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i195, float %475, float 0x3FC10B2820000000) #4, !dbg !30
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i195, float %475, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i197 = select i1 %.not2.i196, float %481, float %480, !dbg !30
  %482 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i198 = icmp eq i32 %482, 0, !dbg !30
  %483 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i197, float %475, float 0xBFD5553DA0000000) #4, !dbg !30
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i197, float %475, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i199 = select i1 %.not3.i198, float %484, float %483, !dbg !30
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i200 = icmp eq i32 %485, 0, !dbg !30
  %486 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i199, float %475, float 0.000000e+00) #4, !dbg !30
  %487 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i199, float %475, float 0.000000e+00) #4, !dbg !30
  %.04.i201 = select i1 %.not4.i200, float %487, float %486, !dbg !30
  %488 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i202 = icmp eq i32 %488, 0, !dbg !30
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i201, float %154, float %154) #4, !dbg !30
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i201, float %154, float %154) #4, !dbg !30
  %.02.i203 = select i1 %.not5.i202, float %490, float %489, !dbg !30
  br label %__nv_tanhf.exit204, !dbg !30

__nv_tanhf.exit204:                               ; preds = %__internal_fmad.exit1.i188, %__internal_fmad.exit3.i193
  %s.1.i192 = phi float [ %474, %__internal_fmad.exit1.i188 ], [ %.02.i203, %__internal_fmad.exit3.i193 ], !dbg !30
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i205 = icmp eq i32 %491, 0, !dbg !30
  %492 = tail call float @llvm.nvvm.fabs.ftz.f(float %155) #4, !dbg !30
  %493 = tail call float @llvm.nvvm.fabs.f(float %155) #4, !dbg !30
  %.01.i206 = select i1 %.not.i205, float %493, float %492, !dbg !30
  %494 = fcmp ult float %.01.i206, 0x3FE3333340000000, !dbg !30
  br i1 %494, label %__internal_fmad.exit3.i212, label %__internal_fmad.exit1.i207, !dbg !30

__internal_fmad.exit1.i207:                       ; preds = %__nv_tanhf.exit204
  %495 = fmul float %.01.i206, 0x4007154760000000, !dbg !30
  %496 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %495) #4, !dbg !30
  %497 = fadd float %496, 1.000000e+00, !dbg !30
  %498 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %497) #5, !dbg !30, !srcloc !31
  %499 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i208 = icmp eq i32 %499, 0, !dbg !30
  %500 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %498, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %501 = tail call float @llvm.nvvm.fma.rn.f(float %498, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i209 = select i1 %.not6.i208, float %501, float %500, !dbg !30
  %502 = fcmp oge float %.01.i206, 0x4022059680000000, !dbg !30
  %s.0.i210 = select i1 %502, float 1.000000e+00, float %.03.i209, !dbg !30
  %503 = bitcast float %s.0.i210 to i32, !dbg !30
  %504 = bitcast float %155 to i32, !dbg !30
  %505 = and i32 %504, -2147483648, !dbg !30
  %506 = or i32 %505, %503, !dbg !30
  %507 = bitcast i32 %506 to float, !dbg !30
  br label %__nv_tanhf.exit223, !dbg !30

__internal_fmad.exit3.i212:                       ; preds = %__nv_tanhf.exit204
  %508 = fmul float %155, %155, !dbg !30
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i213 = icmp eq i32 %509, 0, !dbg !30
  %510 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %508, float 0xBFAAC795C0000000) #4, !dbg !30
  %511 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %508, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i214 = select i1 %.not1.i213, float %511, float %510, !dbg !30
  %512 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i215 = icmp eq i32 %512, 0, !dbg !30
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i214, float %508, float 0x3FC10B2820000000) #4, !dbg !30
  %514 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i214, float %508, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i216 = select i1 %.not2.i215, float %514, float %513, !dbg !30
  %515 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i217 = icmp eq i32 %515, 0, !dbg !30
  %516 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i216, float %508, float 0xBFD5553DA0000000) #4, !dbg !30
  %517 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i216, float %508, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i218 = select i1 %.not3.i217, float %517, float %516, !dbg !30
  %518 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i219 = icmp eq i32 %518, 0, !dbg !30
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i218, float %508, float 0.000000e+00) #4, !dbg !30
  %520 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i218, float %508, float 0.000000e+00) #4, !dbg !30
  %.04.i220 = select i1 %.not4.i219, float %520, float %519, !dbg !30
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i221 = icmp eq i32 %521, 0, !dbg !30
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i220, float %155, float %155) #4, !dbg !30
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i220, float %155, float %155) #4, !dbg !30
  %.02.i222 = select i1 %.not5.i221, float %523, float %522, !dbg !30
  br label %__nv_tanhf.exit223, !dbg !30

__nv_tanhf.exit223:                               ; preds = %__internal_fmad.exit1.i207, %__internal_fmad.exit3.i212
  %s.1.i211 = phi float [ %507, %__internal_fmad.exit1.i207 ], [ %.02.i222, %__internal_fmad.exit3.i212 ], !dbg !30
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i224 = icmp eq i32 %524, 0, !dbg !30
  %525 = tail call float @llvm.nvvm.fabs.ftz.f(float %156) #4, !dbg !30
  %526 = tail call float @llvm.nvvm.fabs.f(float %156) #4, !dbg !30
  %.01.i225 = select i1 %.not.i224, float %526, float %525, !dbg !30
  %527 = fcmp ult float %.01.i225, 0x3FE3333340000000, !dbg !30
  br i1 %527, label %__internal_fmad.exit3.i231, label %__internal_fmad.exit1.i226, !dbg !30

__internal_fmad.exit1.i226:                       ; preds = %__nv_tanhf.exit223
  %528 = fmul float %.01.i225, 0x4007154760000000, !dbg !30
  %529 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %528) #4, !dbg !30
  %530 = fadd float %529, 1.000000e+00, !dbg !30
  %531 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %530) #5, !dbg !30, !srcloc !31
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i227 = icmp eq i32 %532, 0, !dbg !30
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %531, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %531, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i228 = select i1 %.not6.i227, float %534, float %533, !dbg !30
  %535 = fcmp oge float %.01.i225, 0x4022059680000000, !dbg !30
  %s.0.i229 = select i1 %535, float 1.000000e+00, float %.03.i228, !dbg !30
  %536 = bitcast float %s.0.i229 to i32, !dbg !30
  %537 = bitcast float %156 to i32, !dbg !30
  %538 = and i32 %537, -2147483648, !dbg !30
  %539 = or i32 %538, %536, !dbg !30
  %540 = bitcast i32 %539 to float, !dbg !30
  br label %__nv_tanhf.exit242, !dbg !30

__internal_fmad.exit3.i231:                       ; preds = %__nv_tanhf.exit223
  %541 = fmul float %156, %156, !dbg !30
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i232 = icmp eq i32 %542, 0, !dbg !30
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %541, float 0xBFAAC795C0000000) #4, !dbg !30
  %544 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %541, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i233 = select i1 %.not1.i232, float %544, float %543, !dbg !30
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i234 = icmp eq i32 %545, 0, !dbg !30
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i233, float %541, float 0x3FC10B2820000000) #4, !dbg !30
  %547 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i233, float %541, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i235 = select i1 %.not2.i234, float %547, float %546, !dbg !30
  %548 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i236 = icmp eq i32 %548, 0, !dbg !30
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i235, float %541, float 0xBFD5553DA0000000) #4, !dbg !30
  %550 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i235, float %541, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i237 = select i1 %.not3.i236, float %550, float %549, !dbg !30
  %551 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i238 = icmp eq i32 %551, 0, !dbg !30
  %552 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i237, float %541, float 0.000000e+00) #4, !dbg !30
  %553 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i237, float %541, float 0.000000e+00) #4, !dbg !30
  %.04.i239 = select i1 %.not4.i238, float %553, float %552, !dbg !30
  %554 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i240 = icmp eq i32 %554, 0, !dbg !30
  %555 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i239, float %156, float %156) #4, !dbg !30
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i239, float %156, float %156) #4, !dbg !30
  %.02.i241 = select i1 %.not5.i240, float %556, float %555, !dbg !30
  br label %__nv_tanhf.exit242, !dbg !30

__nv_tanhf.exit242:                               ; preds = %__internal_fmad.exit1.i226, %__internal_fmad.exit3.i231
  %s.1.i230 = phi float [ %540, %__internal_fmad.exit1.i226 ], [ %.02.i241, %__internal_fmad.exit3.i231 ], !dbg !30
  %557 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i243 = icmp eq i32 %557, 0, !dbg !30
  %558 = tail call float @llvm.nvvm.fabs.ftz.f(float %157) #4, !dbg !30
  %559 = tail call float @llvm.nvvm.fabs.f(float %157) #4, !dbg !30
  %.01.i244 = select i1 %.not.i243, float %559, float %558, !dbg !30
  %560 = fcmp ult float %.01.i244, 0x3FE3333340000000, !dbg !30
  br i1 %560, label %__internal_fmad.exit3.i250, label %__internal_fmad.exit1.i245, !dbg !30

__internal_fmad.exit1.i245:                       ; preds = %__nv_tanhf.exit242
  %561 = fmul float %.01.i244, 0x4007154760000000, !dbg !30
  %562 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %561) #4, !dbg !30
  %563 = fadd float %562, 1.000000e+00, !dbg !30
  %564 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %563) #5, !dbg !30, !srcloc !31
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i246 = icmp eq i32 %565, 0, !dbg !30
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %564, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %567 = tail call float @llvm.nvvm.fma.rn.f(float %564, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i247 = select i1 %.not6.i246, float %567, float %566, !dbg !30
  %568 = fcmp oge float %.01.i244, 0x4022059680000000, !dbg !30
  %s.0.i248 = select i1 %568, float 1.000000e+00, float %.03.i247, !dbg !30
  %569 = bitcast float %s.0.i248 to i32, !dbg !30
  %570 = bitcast float %157 to i32, !dbg !30
  %571 = and i32 %570, -2147483648, !dbg !30
  %572 = or i32 %571, %569, !dbg !30
  %573 = bitcast i32 %572 to float, !dbg !30
  br label %__nv_tanhf.exit261, !dbg !30

__internal_fmad.exit3.i250:                       ; preds = %__nv_tanhf.exit242
  %574 = fmul float %157, %157, !dbg !30
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i251 = icmp eq i32 %575, 0, !dbg !30
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %574, float 0xBFAAC795C0000000) #4, !dbg !30
  %577 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %574, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i252 = select i1 %.not1.i251, float %577, float %576, !dbg !30
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i253 = icmp eq i32 %578, 0, !dbg !30
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i252, float %574, float 0x3FC10B2820000000) #4, !dbg !30
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i252, float %574, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i254 = select i1 %.not2.i253, float %580, float %579, !dbg !30
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i255 = icmp eq i32 %581, 0, !dbg !30
  %582 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i254, float %574, float 0xBFD5553DA0000000) #4, !dbg !30
  %583 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i254, float %574, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i256 = select i1 %.not3.i255, float %583, float %582, !dbg !30
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i257 = icmp eq i32 %584, 0, !dbg !30
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i256, float %574, float 0.000000e+00) #4, !dbg !30
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i256, float %574, float 0.000000e+00) #4, !dbg !30
  %.04.i258 = select i1 %.not4.i257, float %586, float %585, !dbg !30
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i259 = icmp eq i32 %587, 0, !dbg !30
  %588 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i258, float %157, float %157) #4, !dbg !30
  %589 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i258, float %157, float %157) #4, !dbg !30
  %.02.i260 = select i1 %.not5.i259, float %589, float %588, !dbg !30
  br label %__nv_tanhf.exit261, !dbg !30

__nv_tanhf.exit261:                               ; preds = %__internal_fmad.exit1.i245, %__internal_fmad.exit3.i250
  %s.1.i249 = phi float [ %573, %__internal_fmad.exit1.i245 ], [ %.02.i260, %__internal_fmad.exit3.i250 ], !dbg !30
  %590 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i262 = icmp eq i32 %590, 0, !dbg !30
  %591 = tail call float @llvm.nvvm.fabs.ftz.f(float %158) #4, !dbg !30
  %592 = tail call float @llvm.nvvm.fabs.f(float %158) #4, !dbg !30
  %.01.i263 = select i1 %.not.i262, float %592, float %591, !dbg !30
  %593 = fcmp ult float %.01.i263, 0x3FE3333340000000, !dbg !30
  br i1 %593, label %__internal_fmad.exit3.i269, label %__internal_fmad.exit1.i264, !dbg !30

__internal_fmad.exit1.i264:                       ; preds = %__nv_tanhf.exit261
  %594 = fmul float %.01.i263, 0x4007154760000000, !dbg !30
  %595 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %594) #4, !dbg !30
  %596 = fadd float %595, 1.000000e+00, !dbg !30
  %597 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %596) #5, !dbg !30, !srcloc !31
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i265 = icmp eq i32 %598, 0, !dbg !30
  %599 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %597, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %600 = tail call float @llvm.nvvm.fma.rn.f(float %597, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i266 = select i1 %.not6.i265, float %600, float %599, !dbg !30
  %601 = fcmp oge float %.01.i263, 0x4022059680000000, !dbg !30
  %s.0.i267 = select i1 %601, float 1.000000e+00, float %.03.i266, !dbg !30
  %602 = bitcast float %s.0.i267 to i32, !dbg !30
  %603 = bitcast float %158 to i32, !dbg !30
  %604 = and i32 %603, -2147483648, !dbg !30
  %605 = or i32 %604, %602, !dbg !30
  %606 = bitcast i32 %605 to float, !dbg !30
  br label %__nv_tanhf.exit280, !dbg !30

__internal_fmad.exit3.i269:                       ; preds = %__nv_tanhf.exit261
  %607 = fmul float %158, %158, !dbg !30
  %608 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i270 = icmp eq i32 %608, 0, !dbg !30
  %609 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %607, float 0xBFAAC795C0000000) #4, !dbg !30
  %610 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %607, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i271 = select i1 %.not1.i270, float %610, float %609, !dbg !30
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i272 = icmp eq i32 %611, 0, !dbg !30
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i271, float %607, float 0x3FC10B2820000000) #4, !dbg !30
  %613 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i271, float %607, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i273 = select i1 %.not2.i272, float %613, float %612, !dbg !30
  %614 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i274 = icmp eq i32 %614, 0, !dbg !30
  %615 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i273, float %607, float 0xBFD5553DA0000000) #4, !dbg !30
  %616 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i273, float %607, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i275 = select i1 %.not3.i274, float %616, float %615, !dbg !30
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i276 = icmp eq i32 %617, 0, !dbg !30
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i275, float %607, float 0.000000e+00) #4, !dbg !30
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i275, float %607, float 0.000000e+00) #4, !dbg !30
  %.04.i277 = select i1 %.not4.i276, float %619, float %618, !dbg !30
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i278 = icmp eq i32 %620, 0, !dbg !30
  %621 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i277, float %158, float %158) #4, !dbg !30
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i277, float %158, float %158) #4, !dbg !30
  %.02.i279 = select i1 %.not5.i278, float %622, float %621, !dbg !30
  br label %__nv_tanhf.exit280, !dbg !30

__nv_tanhf.exit280:                               ; preds = %__internal_fmad.exit1.i264, %__internal_fmad.exit3.i269
  %s.1.i268 = phi float [ %606, %__internal_fmad.exit1.i264 ], [ %.02.i279, %__internal_fmad.exit3.i269 ], !dbg !30
  %623 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i281 = icmp eq i32 %623, 0, !dbg !30
  %624 = tail call float @llvm.nvvm.fabs.ftz.f(float %159) #4, !dbg !30
  %625 = tail call float @llvm.nvvm.fabs.f(float %159) #4, !dbg !30
  %.01.i282 = select i1 %.not.i281, float %625, float %624, !dbg !30
  %626 = fcmp ult float %.01.i282, 0x3FE3333340000000, !dbg !30
  br i1 %626, label %__internal_fmad.exit3.i288, label %__internal_fmad.exit1.i283, !dbg !30

__internal_fmad.exit1.i283:                       ; preds = %__nv_tanhf.exit280
  %627 = fmul float %.01.i282, 0x4007154760000000, !dbg !30
  %628 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %627) #4, !dbg !30
  %629 = fadd float %628, 1.000000e+00, !dbg !30
  %630 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %629) #5, !dbg !30, !srcloc !31
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i284 = icmp eq i32 %631, 0, !dbg !30
  %632 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %630, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %633 = tail call float @llvm.nvvm.fma.rn.f(float %630, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i285 = select i1 %.not6.i284, float %633, float %632, !dbg !30
  %634 = fcmp oge float %.01.i282, 0x4022059680000000, !dbg !30
  %s.0.i286 = select i1 %634, float 1.000000e+00, float %.03.i285, !dbg !30
  %635 = bitcast float %s.0.i286 to i32, !dbg !30
  %636 = bitcast float %159 to i32, !dbg !30
  %637 = and i32 %636, -2147483648, !dbg !30
  %638 = or i32 %637, %635, !dbg !30
  %639 = bitcast i32 %638 to float, !dbg !30
  br label %__nv_tanhf.exit299, !dbg !30

__internal_fmad.exit3.i288:                       ; preds = %__nv_tanhf.exit280
  %640 = fmul float %159, %159, !dbg !30
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i289 = icmp eq i32 %641, 0, !dbg !30
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %640, float 0xBFAAC795C0000000) #4, !dbg !30
  %643 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %640, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i290 = select i1 %.not1.i289, float %643, float %642, !dbg !30
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i291 = icmp eq i32 %644, 0, !dbg !30
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i290, float %640, float 0x3FC10B2820000000) #4, !dbg !30
  %646 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i290, float %640, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i292 = select i1 %.not2.i291, float %646, float %645, !dbg !30
  %647 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i293 = icmp eq i32 %647, 0, !dbg !30
  %648 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i292, float %640, float 0xBFD5553DA0000000) #4, !dbg !30
  %649 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i292, float %640, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i294 = select i1 %.not3.i293, float %649, float %648, !dbg !30
  %650 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i295 = icmp eq i32 %650, 0, !dbg !30
  %651 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i294, float %640, float 0.000000e+00) #4, !dbg !30
  %652 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i294, float %640, float 0.000000e+00) #4, !dbg !30
  %.04.i296 = select i1 %.not4.i295, float %652, float %651, !dbg !30
  %653 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i297 = icmp eq i32 %653, 0, !dbg !30
  %654 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i296, float %159, float %159) #4, !dbg !30
  %655 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i296, float %159, float %159) #4, !dbg !30
  %.02.i298 = select i1 %.not5.i297, float %655, float %654, !dbg !30
  br label %__nv_tanhf.exit299, !dbg !30

__nv_tanhf.exit299:                               ; preds = %__internal_fmad.exit1.i283, %__internal_fmad.exit3.i288
  %s.1.i287 = phi float [ %639, %__internal_fmad.exit1.i283 ], [ %.02.i298, %__internal_fmad.exit3.i288 ], !dbg !30
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i300 = icmp eq i32 %656, 0, !dbg !30
  %657 = tail call float @llvm.nvvm.fabs.ftz.f(float %160) #4, !dbg !30
  %658 = tail call float @llvm.nvvm.fabs.f(float %160) #4, !dbg !30
  %.01.i301 = select i1 %.not.i300, float %658, float %657, !dbg !30
  %659 = fcmp ult float %.01.i301, 0x3FE3333340000000, !dbg !30
  br i1 %659, label %__internal_fmad.exit3.i307, label %__internal_fmad.exit1.i302, !dbg !30

__internal_fmad.exit1.i302:                       ; preds = %__nv_tanhf.exit299
  %660 = fmul float %.01.i301, 0x4007154760000000, !dbg !30
  %661 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %660) #4, !dbg !30
  %662 = fadd float %661, 1.000000e+00, !dbg !30
  %663 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %662) #5, !dbg !30, !srcloc !31
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i303 = icmp eq i32 %664, 0, !dbg !30
  %665 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %663, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %666 = tail call float @llvm.nvvm.fma.rn.f(float %663, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i304 = select i1 %.not6.i303, float %666, float %665, !dbg !30
  %667 = fcmp oge float %.01.i301, 0x4022059680000000, !dbg !30
  %s.0.i305 = select i1 %667, float 1.000000e+00, float %.03.i304, !dbg !30
  %668 = bitcast float %s.0.i305 to i32, !dbg !30
  %669 = bitcast float %160 to i32, !dbg !30
  %670 = and i32 %669, -2147483648, !dbg !30
  %671 = or i32 %670, %668, !dbg !30
  %672 = bitcast i32 %671 to float, !dbg !30
  br label %__nv_tanhf.exit318, !dbg !30

__internal_fmad.exit3.i307:                       ; preds = %__nv_tanhf.exit299
  %673 = fmul float %160, %160, !dbg !30
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i308 = icmp eq i32 %674, 0, !dbg !30
  %675 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %673, float 0xBFAAC795C0000000) #4, !dbg !30
  %676 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %673, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i309 = select i1 %.not1.i308, float %676, float %675, !dbg !30
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i310 = icmp eq i32 %677, 0, !dbg !30
  %678 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i309, float %673, float 0x3FC10B2820000000) #4, !dbg !30
  %679 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i309, float %673, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i311 = select i1 %.not2.i310, float %679, float %678, !dbg !30
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i312 = icmp eq i32 %680, 0, !dbg !30
  %681 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i311, float %673, float 0xBFD5553DA0000000) #4, !dbg !30
  %682 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i311, float %673, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i313 = select i1 %.not3.i312, float %682, float %681, !dbg !30
  %683 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i314 = icmp eq i32 %683, 0, !dbg !30
  %684 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i313, float %673, float 0.000000e+00) #4, !dbg !30
  %685 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i313, float %673, float 0.000000e+00) #4, !dbg !30
  %.04.i315 = select i1 %.not4.i314, float %685, float %684, !dbg !30
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i316 = icmp eq i32 %686, 0, !dbg !30
  %687 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i315, float %160, float %160) #4, !dbg !30
  %688 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i315, float %160, float %160) #4, !dbg !30
  %.02.i317 = select i1 %.not5.i316, float %688, float %687, !dbg !30
  br label %__nv_tanhf.exit318, !dbg !30

__nv_tanhf.exit318:                               ; preds = %__internal_fmad.exit1.i302, %__internal_fmad.exit3.i307
  %s.1.i306 = phi float [ %672, %__internal_fmad.exit1.i302 ], [ %.02.i317, %__internal_fmad.exit3.i307 ], !dbg !30
  %689 = lshr i32 %8, 2, !dbg !17
  %690 = and i32 %689, 63, !dbg !17
  %691 = or disjoint i32 %690, %21, !dbg !18
  %692 = or disjoint i32 %691, 192, !dbg !18
  %693 = icmp slt i32 %692, 6144, !dbg !19
  %694 = and i32 %11, 12, !dbg !12
  %695 = or disjoint i32 %7, %694, !dbg !13
  %696 = icmp slt i32 %695, 16, !dbg !14
  %697 = and i1 %696, %693, !dbg !23
  %698 = or disjoint i32 %691, 128, !dbg !18
  %699 = icmp slt i32 %698, 6144, !dbg !19
  %700 = and i1 %696, %699, !dbg !23
  %701 = or disjoint i32 %691, 64, !dbg !18
  %702 = icmp slt i32 %701, 6144, !dbg !19
  %703 = and i1 %696, %702, !dbg !23
  %704 = icmp slt i32 %691, 6144, !dbg !19
  %705 = and i1 %696, %704, !dbg !23
  %706 = ashr exact i32 %695, 2, !dbg !32
  %707 = fmul float %50, 5.000000e-01, !dbg !33
  %708 = fmul float %51, 5.000000e-01, !dbg !33
  %709 = fmul float %52, 5.000000e-01, !dbg !33
  %710 = fmul float %53, 5.000000e-01, !dbg !33
  %711 = fmul float %59, 5.000000e-01, !dbg !33
  %712 = fmul float %60, 5.000000e-01, !dbg !33
  %713 = fmul float %61, 5.000000e-01, !dbg !33
  %714 = fmul float %62, 5.000000e-01, !dbg !33
  %715 = fmul float %68, 5.000000e-01, !dbg !33
  %716 = fmul float %69, 5.000000e-01, !dbg !33
  %717 = fmul float %70, 5.000000e-01, !dbg !33
  %718 = fmul float %71, 5.000000e-01, !dbg !33
  %719 = fmul float %77, 5.000000e-01, !dbg !33
  %720 = fmul float %78, 5.000000e-01, !dbg !33
  %721 = fmul float %79, 5.000000e-01, !dbg !33
  %722 = fmul float %80, 5.000000e-01, !dbg !33
  %723 = fadd float %s.1.i, 1.000000e+00, !dbg !34
  %724 = fadd float %s.1.i40, 1.000000e+00, !dbg !34
  %725 = fadd float %s.1.i59, 1.000000e+00, !dbg !34
  %726 = fadd float %s.1.i78, 1.000000e+00, !dbg !34
  %727 = fadd float %s.1.i97, 1.000000e+00, !dbg !34
  %728 = fadd float %s.1.i116, 1.000000e+00, !dbg !34
  %729 = fadd float %s.1.i135, 1.000000e+00, !dbg !34
  %730 = fadd float %s.1.i154, 1.000000e+00, !dbg !34
  %731 = fadd float %s.1.i173, 1.000000e+00, !dbg !34
  %732 = fadd float %s.1.i192, 1.000000e+00, !dbg !34
  %733 = fadd float %s.1.i211, 1.000000e+00, !dbg !34
  %734 = fadd float %s.1.i230, 1.000000e+00, !dbg !34
  %735 = fadd float %s.1.i249, 1.000000e+00, !dbg !34
  %736 = fadd float %s.1.i268, 1.000000e+00, !dbg !34
  %737 = fadd float %s.1.i287, 1.000000e+00, !dbg !34
  %738 = fadd float %s.1.i306, 1.000000e+00, !dbg !34
  %739 = fmul float %707, %723, !dbg !35
  %740 = fmul float %708, %724, !dbg !35
  %741 = fmul float %709, %725, !dbg !35
  %742 = fmul float %710, %726, !dbg !35
  %743 = fmul float %711, %727, !dbg !35
  %744 = fmul float %712, %728, !dbg !35
  %745 = fmul float %713, %729, !dbg !35
  %746 = fmul float %714, %730, !dbg !35
  %747 = fmul float %715, %731, !dbg !35
  %748 = fmul float %716, %732, !dbg !35
  %749 = fmul float %717, %733, !dbg !35
  %750 = fmul float %718, %734, !dbg !35
  %751 = fmul float %719, %735, !dbg !35
  %752 = fmul float %720, %736, !dbg !35
  %753 = fmul float %721, %737, !dbg !35
  %754 = fmul float %722, %738, !dbg !35
  %755 = shl i32 %691, 2, !dbg !36
  %756 = shl i32 %701, 2, !dbg !36
  %757 = shl i32 %698, 2, !dbg !36
  %758 = shl i32 %692, 2, !dbg !36
  %759 = mul i32 %706, 24576, !dbg !37
  %760 = add i32 %755, %759, !dbg !38
  %761 = add i32 %756, %759, !dbg !38
  %762 = add i32 %757, %759, !dbg !38
  %763 = add i32 %758, %759, !dbg !38
  %764 = sext i32 %760 to i64, !dbg !39
  %765 = getelementptr float, ptr addrspace(1) %1, i64 %764, !dbg !39
  %766 = sext i32 %761 to i64, !dbg !39
  %767 = getelementptr float, ptr addrspace(1) %1, i64 %766, !dbg !39
  %768 = sext i32 %762 to i64, !dbg !39
  %769 = getelementptr float, ptr addrspace(1) %1, i64 %768, !dbg !39
  %770 = sext i32 %763 to i64, !dbg !39
  %771 = getelementptr float, ptr addrspace(1) %1, i64 %770, !dbg !39
  %772 = shl i32 %8, 6, !dbg !40
  %773 = and i32 %772, 4032, !dbg !40
  %774 = or disjoint i32 %773, %10, !dbg !40
  %775 = and i32 %11, 1020, !dbg !40
  %776 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %773, !dbg !40
  %777 = getelementptr float, ptr addrspace(3) %776, i32 %774, !dbg !40
  %778 = bitcast float %s.1.i to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %777, <1 x i32> %778, i1 true) #4, !dbg !40
  %779 = or disjoint i32 %774, 16, !dbg !40
  %780 = lshr i32 %779, 2, !dbg !40
  %781 = getelementptr float, ptr addrspace(3) @global_smem, i32 %780, !dbg !40
  %782 = getelementptr float, ptr addrspace(3) %781, i32 %779, !dbg !40
  %783 = bitcast float %s.1.i40 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %782, <1 x i32> %783, i1 true) #4, !dbg !40
  %784 = or disjoint i32 %774, 32, !dbg !40
  %785 = lshr i32 %784, 2, !dbg !40
  %786 = getelementptr float, ptr addrspace(3) @global_smem, i32 %785, !dbg !40
  %787 = getelementptr float, ptr addrspace(3) %786, i32 %784, !dbg !40
  %788 = bitcast float %s.1.i59 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %787, <1 x i32> %788, i1 true) #4, !dbg !40
  %789 = or disjoint i32 %774, 48, !dbg !40
  %790 = lshr i32 %789, 2, !dbg !40
  %791 = getelementptr float, ptr addrspace(3) @global_smem, i32 %790, !dbg !40
  %792 = getelementptr float, ptr addrspace(3) %791, i32 %789, !dbg !40
  %793 = bitcast float %s.1.i78 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %792, <1 x i32> %793, i1 true) #4, !dbg !40
  %794 = or disjoint i32 %774, 4, !dbg !40
  %795 = getelementptr float, ptr addrspace(3) %776, i32 %794, !dbg !40
  %796 = bitcast float %s.1.i97 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %795, <1 x i32> %796, i1 true) #4, !dbg !40
  %797 = or disjoint i32 %774, 20, !dbg !40
  %798 = lshr i32 %797, 2, !dbg !40
  %799 = and i32 %798, 1012, !dbg !40
  %800 = getelementptr float, ptr addrspace(3) @global_smem, i32 %799, !dbg !40
  %801 = getelementptr float, ptr addrspace(3) %800, i32 %797, !dbg !40
  %802 = bitcast float %s.1.i116 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %801, <1 x i32> %802, i1 true) #4, !dbg !40
  %803 = or disjoint i32 %774, 36, !dbg !40
  %804 = lshr i32 %803, 2, !dbg !40
  %805 = and i32 %804, 1016, !dbg !40
  %806 = getelementptr float, ptr addrspace(3) @global_smem, i32 %805, !dbg !40
  %807 = getelementptr float, ptr addrspace(3) %806, i32 %803, !dbg !40
  %808 = bitcast float %s.1.i135 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %807, <1 x i32> %808, i1 true) #4, !dbg !40
  %809 = or disjoint i32 %774, 52, !dbg !40
  %810 = lshr i32 %809, 2, !dbg !40
  %811 = and i32 %810, 1020, !dbg !40
  %812 = getelementptr float, ptr addrspace(3) @global_smem, i32 %811, !dbg !40
  %813 = getelementptr float, ptr addrspace(3) %812, i32 %809, !dbg !40
  %814 = bitcast float %s.1.i154 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %813, <1 x i32> %814, i1 true) #4, !dbg !40
  %815 = or disjoint i32 %774, 8, !dbg !40
  %816 = getelementptr float, ptr addrspace(3) %776, i32 %815, !dbg !40
  %817 = bitcast float %s.1.i173 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %816, <1 x i32> %817, i1 true) #4, !dbg !40
  %818 = or disjoint i32 %774, 24, !dbg !40
  %819 = lshr i32 %818, 2, !dbg !40
  %820 = and i32 %819, 1012, !dbg !40
  %821 = getelementptr float, ptr addrspace(3) @global_smem, i32 %820, !dbg !40
  %822 = getelementptr float, ptr addrspace(3) %821, i32 %818, !dbg !40
  %823 = bitcast float %s.1.i192 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %822, <1 x i32> %823, i1 true) #4, !dbg !40
  %824 = or disjoint i32 %774, 40, !dbg !40
  %825 = lshr i32 %824, 2, !dbg !40
  %826 = and i32 %825, 1016, !dbg !40
  %827 = getelementptr float, ptr addrspace(3) @global_smem, i32 %826, !dbg !40
  %828 = getelementptr float, ptr addrspace(3) %827, i32 %824, !dbg !40
  %829 = bitcast float %s.1.i211 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %828, <1 x i32> %829, i1 true) #4, !dbg !40
  %830 = or disjoint i32 %774, 56, !dbg !40
  %831 = lshr i32 %830, 2, !dbg !40
  %832 = and i32 %831, 1020, !dbg !40
  %833 = getelementptr float, ptr addrspace(3) @global_smem, i32 %832, !dbg !40
  %834 = getelementptr float, ptr addrspace(3) %833, i32 %830, !dbg !40
  %835 = bitcast float %s.1.i230 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %834, <1 x i32> %835, i1 true) #4, !dbg !40
  %836 = or disjoint i32 %774, 12, !dbg !40
  %837 = getelementptr float, ptr addrspace(3) %776, i32 %836, !dbg !40
  %838 = bitcast float %s.1.i249 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %837, <1 x i32> %838, i1 true) #4, !dbg !40
  %839 = or disjoint i32 %774, 28, !dbg !40
  %840 = lshr i32 %839, 2, !dbg !40
  %841 = and i32 %840, 1012, !dbg !40
  %842 = getelementptr float, ptr addrspace(3) @global_smem, i32 %841, !dbg !40
  %843 = getelementptr float, ptr addrspace(3) %842, i32 %839, !dbg !40
  %844 = bitcast float %s.1.i268 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %843, <1 x i32> %844, i1 true) #4, !dbg !40
  %845 = or disjoint i32 %774, 44, !dbg !40
  %846 = lshr i32 %845, 2, !dbg !40
  %847 = and i32 %846, 1016, !dbg !40
  %848 = getelementptr float, ptr addrspace(3) @global_smem, i32 %847, !dbg !40
  %849 = getelementptr float, ptr addrspace(3) %848, i32 %845, !dbg !40
  %850 = bitcast float %s.1.i287 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %849, <1 x i32> %850, i1 true) #4, !dbg !40
  %851 = or disjoint i32 %774, 60, !dbg !40
  %852 = lshr i32 %851, 2, !dbg !40
  %853 = and i32 %852, 1020, !dbg !40
  %854 = getelementptr float, ptr addrspace(3) @global_smem, i32 %853, !dbg !40
  %855 = getelementptr float, ptr addrspace(3) %854, i32 %851, !dbg !40
  %856 = bitcast float %s.1.i306 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %855, <1 x i32> %856, i1 true) #4, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %857 = and i32 %8, 252, !dbg !40
  %858 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %857, !dbg !40
  %859 = getelementptr inbounds float, ptr addrspace(3) %858, i32 %775, !dbg !40
  %860 = or disjoint i32 %775, 1024, !dbg !40
  %861 = lshr exact i32 %860, 2, !dbg !40
  %862 = and i32 %861, 508, !dbg !40
  %863 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %862, !dbg !40
  %864 = getelementptr inbounds float, ptr addrspace(3) %863, i32 %860, !dbg !40
  %865 = load <4 x i32>, ptr addrspace(3) %864, align 16, !dbg !40
  %866 = or disjoint i32 %775, 2048, !dbg !40
  %867 = lshr exact i32 %866, 2, !dbg !40
  %868 = and i32 %867, 764, !dbg !40
  %869 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %868, !dbg !40
  %870 = getelementptr inbounds float, ptr addrspace(3) %869, i32 %866, !dbg !40
  %871 = load <4 x i32>, ptr addrspace(3) %870, align 16, !dbg !40
  %872 = or disjoint i32 %775, 3072, !dbg !40
  %873 = lshr exact i32 %872, 2, !dbg !40
  %874 = and i32 %873, 1020, !dbg !40
  %875 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %874, !dbg !40
  %876 = getelementptr inbounds float, ptr addrspace(3) %875, i32 %872, !dbg !40
  %877 = load <4 x i32>, ptr addrspace(3) %876, align 16, !dbg !40
  %.extract = load i32, ptr addrspace(3) %859, align 16, !dbg !40
  %878 = getelementptr inbounds i8, ptr addrspace(3) %859, i32 4, !dbg !40
  %.extract19 = load i32, ptr addrspace(3) %878, align 4, !dbg !40
  %879 = getelementptr inbounds i8, ptr addrspace(3) %859, i32 8, !dbg !40
  %.extract20 = load i32, ptr addrspace(3) %879, align 8, !dbg !40
  %880 = getelementptr inbounds i8, ptr addrspace(3) %859, i32 12, !dbg !40
  %.extract21 = load i32, ptr addrspace(3) %880, align 4, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract19, i32 %.extract20, i32 %.extract21, ptr addrspace(1) %765, i1 %705) #4, !dbg !40
  %.extract22 = extractelement <4 x i32> %865, i64 0, !dbg !40
  %.extract23 = extractelement <4 x i32> %865, i64 1, !dbg !40
  %.extract24 = extractelement <4 x i32> %865, i64 2, !dbg !40
  %.extract25 = extractelement <4 x i32> %865, i64 3, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract22, i32 %.extract23, i32 %.extract24, i32 %.extract25, ptr addrspace(1) %767, i1 %703) #4, !dbg !40
  %.extract26 = extractelement <4 x i32> %871, i64 0, !dbg !40
  %.extract27 = extractelement <4 x i32> %871, i64 1, !dbg !40
  %.extract28 = extractelement <4 x i32> %871, i64 2, !dbg !40
  %.extract29 = extractelement <4 x i32> %871, i64 3, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract26, i32 %.extract27, i32 %.extract28, i32 %.extract29, ptr addrspace(1) %769, i1 %700) #4, !dbg !40
  %.extract30 = extractelement <4 x i32> %877, i64 0, !dbg !40
  %.extract31 = extractelement <4 x i32> %877, i64 1, !dbg !40
  %.extract32 = extractelement <4 x i32> %877, i64 2, !dbg !40
  %.extract33 = extractelement <4 x i32> %877, i64 3, !dbg !40
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract30, i32 %.extract31, i32 %.extract32, i32 %.extract33, ptr addrspace(1) %771, i1 %697) #4, !dbg !40
  %881 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !41
  %882 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !41
  %883 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !41
  %884 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !41
  %885 = bitcast float %739 to i32, !dbg !42
  %886 = bitcast float %740 to i32, !dbg !42
  %887 = bitcast float %741 to i32, !dbg !42
  %888 = bitcast float %742 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %885, i32 %886, i32 %887, i32 %888, ptr addrspace(1) %881, i1 %41) #4, !dbg !42
  %889 = bitcast float %743 to i32, !dbg !42
  %890 = bitcast float %744 to i32, !dbg !42
  %891 = bitcast float %745 to i32, !dbg !42
  %892 = bitcast float %746 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %889, i32 %890, i32 %891, i32 %892, ptr addrspace(1) %882, i1 %42) #4, !dbg !42
  %893 = bitcast float %747 to i32, !dbg !42
  %894 = bitcast float %748 to i32, !dbg !42
  %895 = bitcast float %749 to i32, !dbg !42
  %896 = bitcast float %750 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %893, i32 %894, i32 %895, i32 %896, ptr addrspace(1) %883, i1 %43) #4, !dbg !42
  %897 = bitcast float %751 to i32, !dbg !42
  %898 = bitcast float %752 to i32, !dbg !42
  %899 = bitcast float %753 to i32, !dbg !42
  %900 = bitcast float %754 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %897, i32 %898, i32 %899, i32 %900, ptr addrspace(1) %884, i1 %44) #4, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csx2mqncqshc2o4vylwofycrcxlnajsjcn33uzcsfurefnvso6gs.py", directory: "inductor_cache/sx")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_23, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_23, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_23", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_23", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 32, column: 40, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 32, column: 45, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 18, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 26, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 31, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 19, scope: !7)
!35 = !DILocation(line: 45, column: 20, scope: !7)
!36 = !DILocation(line: 46, column: 32, scope: !7)
!37 = !DILocation(line: 46, column: 43, scope: !7)
!38 = !DILocation(line: 46, column: 37, scope: !7)
!39 = !DILocation(line: 46, column: 25, scope: !7)
!40 = !DILocation(line: 46, column: 54, scope: !7)
!41 = !DILocation(line: 47, column: 25, scope: !7)
!42 = !DILocation(line: 47, column: 47, scope: !7)
!43 = !DILocation(line: 47, column: 4, scope: !7)
