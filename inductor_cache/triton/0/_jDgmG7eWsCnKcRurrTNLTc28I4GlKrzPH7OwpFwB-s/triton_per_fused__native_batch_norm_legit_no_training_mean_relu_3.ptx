//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<107>;
	.reg .f32 	%f<67>;
	.reg .b64 	%rd<28>;
	.loc	1 19 0                          // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_0];
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:23:33
	shl.b32 	%r50, %r1, 3;
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_2];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_3];
	.loc	1 24 44                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:24:44
	mov.u32 	%r51, %tid.x;
	shl.b32 	%r52, %r51, 2;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_4];
	and.b32  	%r53, %r52, 4;
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_mean_relu_3_param_5];
	.loc	1 24 23                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:24:23
	or.b32  	%r54, %r50, %r53;
	.loc	1 25 21                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:25:21
	setp.lt.s32 	%p1, %r54, 16;
	.loc	1 26 34                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:26:34
	bfe.u32 	%r55, %r51, 1, 5;
	.loc	1 33 37                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:33:37
	shl.b32 	%r56, %r55, 2;
	.loc	1 33 46                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:33:46
	shl.b32 	%r57, %r54, 5;
	.loc	1 33 42                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:33:42
	or.b32  	%r58, %r57, %r56;
	.loc	1 33 30                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:33:30
	mul.wide.s32 	%rd25, %r58, 4;
	add.s64 	%rd1, %rd20, %rd25;
	mov.b32 	%r6, 0;
	.loc	1 33 51                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:33:51
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 34 30                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:34:30
	mul.wide.u32 	%rd26, %r55, 4;
	add.s64 	%rd2, %rd21, %rd26;
	mov.pred 	%p6, -1;
	.loc	1 34 35                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:34:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r11 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:35:30
	add.s64 	%rd6, %rd22, %rd26;
	.loc	1 35 35                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:35:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r15 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r17 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r17;
	.loc	1 36 31                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:36:31
	add.s64 	%rd10, %rd23, %rd26;
	.loc	1 36 36                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:36:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r18 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r19 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r21 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:37:31
	add.s64 	%rd14, %rd24, %rd26;
	.loc	1 37 36                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:37:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r22 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r23 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r24 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r25 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 40 18                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:40:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 41 26                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:41:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 24 44                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:24:44
	and.b32  	%r59, %r51, 7;
	.loc	1 24 23                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:24:23
	or.b32  	%r60, %r50, %r59;
	.loc	1 25 21                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:25:21
	setp.lt.s32 	%p30, %r60, 16;
	.loc	1 24 44                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:24:44
	and.b32  	%r61, %r51, 31;
	.loc	1 43 18                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:43:18
	mov.b32 	%r28, %f3;
	mov.b32 	%r27, 1065353216;
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f4, %r26;
	.loc	1 33 51                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:33:51
	mov.b32 	%f5, %r5;
	mov.b32 	%f6, %r4;
	mov.b32 	%f7, %r3;
	mov.b32 	%f8, %r2;
	.loc	1 38 18                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:38:18
	mov.b32 	%f9, %r13;
	sub.f32 	%f10, %f8, %f9;
	sub.f32 	%f11, %f7, %f9;
	sub.f32 	%f12, %f6, %f9;
	sub.f32 	%f13, %f5, %f9;
	.loc	1 46 19                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:46:19
	mul.f32 	%f14, %f13, %f4;
	mul.f32 	%f15, %f12, %f4;
	mul.f32 	%f16, %f11, %f4;
	mul.f32 	%f17, %f10, %f4;
	.loc	1 47 20                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:47:20
	mov.b32 	%f18, %r21;
	.loc	1 48 20                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:48:20
	mov.b32 	%f19, %r25;
	fma.rn.f32 	%f20, %f17, %f18, %f19;
	fma.rn.f32 	%f21, %f16, %f18, %f19;
	fma.rn.f32 	%f22, %f15, %f18, %f19;
	fma.rn.f32 	%f23, %f14, %f18, %f19;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p31, %f23, 0f00000000;
	setp.lt.f32 	%p32, %f22, 0f00000000;
	setp.lt.f32 	%p33, %f21, 0f00000000;
	setp.lt.f32 	%p34, %f20, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f24, 0f00000000, %f20, %p34;
	selp.f32 	%f25, 0f00000000, %f21, %p33;
	selp.f32 	%f26, 0f00000000, %f22, %p32;
	selp.f32 	%f27, 0f00000000, %f23, %p31;
$L__tmp2:
	.loc	1 52 35                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:52:35
	selp.f32 	%f28, %f24, 0f00000000, %p1;
	selp.f32 	%f29, %f25, 0f00000000, %p1;
	selp.f32 	%f30, %f26, 0f00000000, %p1;
	selp.f32 	%f31, %f27, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f28;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	mov.b32 	%f32, %r63;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f33, %f28, %f32;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f33;
	shfl.sync.bfly.b32	%r65, %r64, 8, 31, -1;
	mov.b32 	%f34, %r65;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f35;
	shfl.sync.bfly.b32	%r67, %r66, 4, 31, -1;
	mov.b32 	%f36, %r67;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f37;
	shfl.sync.bfly.b32	%r69, %r68, 2, 31, -1;
	mov.b32 	%f38, %r69;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f29;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f40, %r71;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f41, %f29, %f40;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f41;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f42, %r73;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f43;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f44, %r75;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f45;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f46, %r77;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f30;
	shfl.sync.bfly.b32	%r79, %r78, 16, 31, -1;
	mov.b32 	%f48, %r79;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f49, %f30, %f48;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f49;
	shfl.sync.bfly.b32	%r81, %r80, 8, 31, -1;
	mov.b32 	%f50, %r81;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f51;
	shfl.sync.bfly.b32	%r83, %r82, 4, 31, -1;
	mov.b32 	%f52, %r83;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f53;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f54, %r85;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f31;
	shfl.sync.bfly.b32	%r87, %r86, 16, 31, -1;
	mov.b32 	%f56, %r87;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f57, %f31, %f56;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f57;
	shfl.sync.bfly.b32	%r89, %r88, 8, 31, -1;
	mov.b32 	%f58, %r89;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f59;
	shfl.sync.bfly.b32	%r91, %r90, 4, 31, -1;
	mov.b32 	%f60, %r91;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f61;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f62, %r93;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	3 267 36                        // standard.py:267:36
	setp.lt.u32 	%p22, %r61, 2;
	shl.b32 	%r94, %r53, 3;
	shr.u32 	%r95, %r51, 3;
	and.b32  	%r96, %r95, 4;
	or.b32  	%r97, %r94, %r96;
	mov.u32 	%r98, global_smem;
	add.s32 	%r29, %r98, %r97;
	mov.b32 	%r30, %f39;
	// begin inline asm
	@%p22 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r29, 8;
	mov.b32 	%r32, %f47;
	// begin inline asm
	@%p22 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r29, 16;
	mov.b32 	%r34, %f55;
	// begin inline asm
	@%p22 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r29, 24;
	mov.b32 	%r36, %f63;
	// begin inline asm
	@%p22 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r51, 16;
	add.s32 	%r38, %r98, %r52;
	// begin inline asm
	@%p26 ld.shared.b32 %r37, [ %r38 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r37;
	shfl.sync.bfly.b32	%r99, %r37, 1, 31, -1;
	mov.b32 	%f65, %r99;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r100, %r51, 1;
	setp.eq.b32 	%p35, %r100, 1;
	not.pred 	%p36, %p35;
	and.pred  	%p27, %p26, %p36;
	mov.b32 	%r40, %f66;
	// begin inline asm
	@%p27 st.shared.b32 [ %r38 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r101, %r98, %r94;
	ld.shared.u32 	%r42, [%r101];
	ld.shared.u32 	%r43, [%r101+8];
	ld.shared.u32 	%r44, [%r101+16];
	ld.shared.u32 	%r45, [%r101+24];
$L__tmp4:
	.loc	1 55 20                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:55:20
	bar.sync 	0;
	shl.b32 	%r102, %r53, 2;
	sub.s32 	%r41, %r101, %r102;
	// begin inline asm
	@%p6 st.shared.v4.b32 [ %r41 + 0 ], { %r42, %r43, %r44, %r45 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r103, %r59, 2;
	add.s32 	%r104, %r98, %r103;
	ld.shared.u32 	%r47, [%r104];
	mov.b32 	%r48, 1107296256;
	// begin inline asm
	div.full.f32 %r49, %r47, %r48;
	// end inline asm
	.loc	1 56 4                          // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:57:28
	mul.wide.s32 	%rd27, %r60, 4;
	add.s64 	%rd18, %rd19, %rd27;
	.loc	1 57 40                         // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:57:40
	bfe.u32 	%r105, %r51, 3, 2;
	or.b32  	%r106, %r96, %r105;
	setp.eq.s32 	%p37, %r106, 0;
	and.pred  	%p29, %p37, %p30;
	// begin inline asm
	@%p29 st.global.b32 [ %rd18 + 0 ], { %r49 };
	// end inline asm
	.loc	1 57 4                          // c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py:57:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5t/c5tq6n5dq567hsot6xg56zlltfdvhpvtrgqynld6lht74afdokch.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 234                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 116
.b8 113
.b8 54
.b8 110
.b8 53
.b8 100
.b8 113
.b8 53
.b8 54
.b8 55
.b8 104
.b8 115
.b8 111
.b8 116
.b8 54
.b8 120
.b8 103
.b8 53
.b8 54
.b8 122
.b8 108
.b8 108
.b8 116
.b8 102
.b8 100
.b8 118
.b8 104
.b8 112
.b8 118
.b8 116
.b8 114
.b8 103
.b8 113
.b8 121
.b8 110
.b8 108
.b8 100
.b8 54
.b8 108
.b8 104
.b8 116
.b8 55
.b8 52
.b8 97
.b8 102
.b8 100
.b8 111
.b8 107
.b8 99
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
