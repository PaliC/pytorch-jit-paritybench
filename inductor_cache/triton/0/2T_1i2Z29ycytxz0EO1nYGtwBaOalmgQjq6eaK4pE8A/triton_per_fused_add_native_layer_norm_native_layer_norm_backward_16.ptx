//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_7,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_8,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<36>;
	.reg .b32 	%r<109>;
	.reg .f32 	%f<93>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_1];
$L__tmp0:
	.loc	1 24 28                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd11, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_2];
	.loc	1 27 26                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:27:26
	mov.u32 	%r69, %tid.x;
	and.b32  	%r70, %r69, 31;
	ld.param.u64 	%rd12, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_3];
	ld.param.u64 	%rd13, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_4];
	shl.b32 	%r71, %r69, 2;
	ld.param.u64 	%rd14, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_5];
	and.b32  	%r72, %r71, 1020;
	ld.param.u64 	%rd15, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_6];
	.loc	1 29 21                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:29:21
	setp.lt.u32 	%p1, %r72, 768;
	ld.param.u64 	%rd16, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_16_param_7];
	.loc	1 32 35                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:32:35
	mad.lo.s32 	%r73, %r1, 768, %r72;
	.loc	1 32 30                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:32:30
	mul.wide.s32 	%rd17, %r73, 4;
	add.s64 	%rd1, %rd9, %rd17;
	mov.b32 	%r6, 0;
	.loc	1 32 44                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:32:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 30                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:33:30
	add.s64 	%rd2, %rd10, %rd17;
	.loc	1 33 44                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:33:44
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 30                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:34:30
	mul.wide.u32 	%rd18, %r72, 4;
	add.s64 	%rd3, %rd11, %rd18;
	.loc	1 34 35                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:34:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 35 31                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:35:31
	add.s64 	%rd4, %rd12, %rd18;
	.loc	1 35 36                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:35:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 36 31                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:36:31
	add.s64 	%rd5, %rd13, %rd18;
	.loc	1 36 36                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:36:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	.loc	1 32 44                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:32:44
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 44                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:33:44
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r10;
	.loc	1 34 35                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:34:35
	mov.b32 	%f5, %r19;
	mov.b32 	%f6, %r18;
	.loc	1 37 18                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:37:18
	add.f32 	%f7, %f4, %f6;
	add.f32 	%f8, %f3, %f5;
	.loc	1 38 18                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:38:18
	add.f32 	%f9, %f8, %f2;
	add.f32 	%f10, %f7, %f1;
	.loc	1 32 44                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:32:44
	mov.b32 	%f11, %r4;
	mov.b32 	%f12, %r5;
	.loc	1 33 44                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:33:44
	mov.b32 	%f13, %r13;
	mov.b32 	%f14, %r12;
	.loc	1 34 35                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:34:35
	mov.b32 	%f15, %r21;
	mov.b32 	%f16, %r20;
	.loc	1 37 18                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:37:18
	add.f32 	%f17, %f14, %f16;
	add.f32 	%f18, %f13, %f15;
	.loc	1 38 18                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:38:18
	add.f32 	%f19, %f18, %f12;
	add.f32 	%f20, %f17, %f11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f10, %f9;
	add.f32 	%f22, %f20, %f21;
	add.f32 	%f23, %f19, %f22;
	selp.f32 	%f24, %f23, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f24;
	shfl.sync.bfly.b32	%r75, %r74, 16, 31, -1;
	mov.b32 	%f25, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f26;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	mov.b32 	%f27, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f28;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f29, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f30;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f31, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f32;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f33, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p26, %r70, 0;
	shr.u32 	%r84, %r69, 3;
	and.b32  	%r85, %r84, 28;
	mov.u32 	%r86, global_smem;
	add.s32 	%r42, %r86, %r85;
	mov.b32 	%r43, %f34;
	// begin inline asm
	@%p26 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p27, %r69, 8;
	add.s32 	%r45, %r86, %r71;
	// begin inline asm
	@%p27 ld.shared.b32 %r44, [ %r45 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r44;
	shfl.sync.bfly.b32	%r87, %r44, 4, 31, -1;
	mov.b32 	%f36, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f37;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f38, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f39;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f40, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r92, %r69, 7;
	setp.eq.s32 	%p35, %r92, 0;
	and.pred  	%p28, %p27, %p35;
	mov.b32 	%r47, %f41;
	// begin inline asm
	@%p28 st.shared.b32 [ %r45 + 0 ], %r47;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f42, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f43, %f42, 0f00000000;
$L__tmp3:
	.loc	1 46 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:46:20
	mov.b32 	%r49, %f43;
	mov.b32 	%r50, 1145044992;
	// begin inline asm
	div.full.f32 %r48, %r49, %r50;
	// end inline asm
	mov.b32 	%f44, %r48;
	.loc	1 47 19                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:47:19
	sub.f32 	%f45, %f10, %f44;
	sub.f32 	%f46, %f9, %f44;
	sub.f32 	%f47, %f20, %f44;
	sub.f32 	%f48, %f19, %f44;
	.loc	1 48 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:48:20
	mul.f32 	%f49, %f46, %f46;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f50, %f45, %f45, %f49;
	fma.rn.f32 	%f51, %f47, %f47, %f50;
	fma.rn.f32 	%f52, %f48, %f48, %f51;
	selp.f32 	%f53, %f52, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f53;
	shfl.sync.bfly.b32	%r94, %r93, 16, 31, -1;
	mov.b32 	%f54, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f55;
	shfl.sync.bfly.b32	%r96, %r95, 8, 31, -1;
	mov.b32 	%f56, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f57;
	shfl.sync.bfly.b32	%r98, %r97, 4, 31, -1;
	mov.b32 	%f58, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f59;
	shfl.sync.bfly.b32	%r100, %r99, 2, 31, -1;
	mov.b32 	%f60, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f61;
	shfl.sync.bfly.b32	%r102, %r101, 1, 31, -1;
	mov.b32 	%f62, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f63;
	// begin inline asm
	@%p26 st.shared.b32 [ %r42 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p27 ld.shared.b32 %r53, [ %r45 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r53;
	shfl.sync.bfly.b32	%r103, %r53, 4, 31, -1;
	mov.b32 	%f65, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f66;
	shfl.sync.bfly.b32	%r105, %r104, 2, 31, -1;
	mov.b32 	%f67, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f68;
	shfl.sync.bfly.b32	%r107, %r106, 1, 31, -1;
	mov.b32 	%f69, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f70;
	// begin inline asm
	@%p28 st.shared.b32 [ %r45 + 0 ], %r56;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f71, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f72, %f71, 0f00000000;
$L__tmp6:
	.loc	1 54 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:54:20
	mov.b32 	%r58, %f72;
	// begin inline asm
	div.full.f32 %r57, %r58, %r50;
	// end inline asm
	mov.b32 	%f73, %r57;
	.loc	1 56 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:56:20
	add.f32 	%f74, %f73, 0f3727C5AC;
	.loc	1 57 28                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:57:28
	rsqrt.approx.ftz.f32 	%f75, %f74;
	.loc	1 36 36                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:36:36
	mov.b32 	%f76, %r37;
	mov.b32 	%f77, %r36;
	mov.b32 	%f78, %r35;
	mov.b32 	%f79, %r34;
	.loc	1 35 36                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:35:36
	mov.b32 	%f80, %r29;
	mov.b32 	%f81, %r28;
	mov.b32 	%f82, %r27;
	mov.b32 	%f83, %r26;
	.loc	1 58 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:58:20
	mul.f32 	%f84, %f45, %f75;
	mul.f32 	%f85, %f46, %f75;
	mul.f32 	%f86, %f47, %f75;
	mul.f32 	%f87, %f48, %f75;
	.loc	1 60 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:60:20
	fma.rn.f32 	%f88, %f84, %f83, %f79;
	fma.rn.f32 	%f89, %f85, %f82, %f78;
	fma.rn.f32 	%f90, %f86, %f81, %f77;
	fma.rn.f32 	%f91, %f87, %f80, %f76;
	.loc	1 62 20                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:62:20
	mul.f32 	%f92, %f75, 0f3AAAAAAB;
	.loc	1 63 25                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:63:25
	add.s64 	%rd6, %rd14, %rd17;
	.loc	1 63 46                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:63:46
	mov.b32 	%r60, %f84;
	mov.b32 	%r61, %f85;
	mov.b32 	%r62, %f86;
	mov.b32 	%r63, %f87;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r60, %r61, %r62, %r63 };
	// end inline asm
	.loc	1 64 25                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:64:25
	add.s64 	%rd7, %rd15, %rd17;
	.loc	1 64 46                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:64:46
	mov.b32 	%r64, %f88;
	mov.b32 	%r65, %f89;
	mov.b32 	%r66, %f90;
	mov.b32 	%r67, %f91;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r64, %r65, %r66, %r67 };
	// end inline asm
	.loc	1 65 25                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:65:25
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd8, %rd16, %rd19;
	.loc	1 65 37                         // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:65:37
	and.b32  	%r108, %r69, 255;
	setp.eq.s32 	%p34, %r108, 0;
	mov.b32 	%r68, %f92;
	// begin inline asm
	@%p34 st.global.b32 [ %rd8 + 0 ], { %r68 };
	// end inline asm
	.loc	1 65 4                          // cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py:65:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gp/cgpcbe2sskjc4kb5b7zxspm47amfwuxfp3ahibp6llp5c22q7r3f.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 285                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x116 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 112
.b8 99
.b8 98
.b8 101
.b8 50
.b8 115
.b8 115
.b8 107
.b8 106
.b8 99
.b8 52
.b8 107
.b8 98
.b8 53
.b8 98
.b8 55
.b8 122
.b8 120
.b8 115
.b8 112
.b8 109
.b8 52
.b8 55
.b8 97
.b8 109
.b8 102
.b8 119
.b8 117
.b8 120
.b8 102
.b8 112
.b8 51
.b8 97
.b8 104
.b8 105
.b8 98
.b8 112
.b8 54
.b8 108
.b8 108
.b8 112
.b8 53
.b8 99
.b8 50
.b8 50
.b8 113
.b8 55
.b8 114
.b8 51
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xef:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x107:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
