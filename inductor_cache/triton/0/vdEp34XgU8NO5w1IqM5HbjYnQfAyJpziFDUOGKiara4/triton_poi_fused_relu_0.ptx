//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_relu_0 // -- Begin function triton_poi_fused_relu_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_relu_0
.visible .entry triton_poi_fused_relu_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_relu_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_relu_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_relu_0_param_2,
	.param .u32 triton_poi_fused_relu_0_param_3,
	.param .u32 triton_poi_fused_relu_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<105>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_relu_0_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_relu_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:22:33
	shl.b32 	%r43, %r1, 5;
	ld.param.u64 	%rd9, [triton_poi_fused_relu_0_param_2];
	.loc	1 23 44                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:23:44
	mov.u32 	%r44, %tid.x;
	bfe.u32 	%r45, %r44, 3, 4;
	or.b32  	%r46, %r45, 16;
	shl.b32 	%r47, %r44, 2;
	and.b32  	%r48, %r47, 28;
	.loc	1 23 23                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:23:23
	or.b32  	%r49, %r43, %r45;
	or.b32  	%r50, %r43, %r46;
	or.b32  	%r51, %r43, %r48;
	.loc	1 24 21                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:24:21
	setp.lt.s32 	%p1, %r49, 2912;
	setp.lt.s32 	%p2, %r50, 2912;
	setp.lt.s32 	%p11, %r51, 2912;
	.loc	1 25 28                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:25:33
	shl.b32 	%r52, %r2, 5;
	.loc	1 26 23                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:26:23
	or.b32  	%r53, %r52, %r48;
	or.b32  	%r54, %r52, %r45;
	or.b32  	%r55, %r52, %r46;
	.loc	1 31 19                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:31:19
	mul.hi.s32 	%r57, %r51, -1274330955;
	mad.lo.s32 	%r58, %r51, 1, %r57;
	shr.u32 	%r59, %r58, 31;
	shr.s32 	%r60, %r58, 9;
	add.s32 	%r61, %r60, %r59;
	.loc	1 30 19                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:30:19
	mul.lo.s32 	%r62, %r61, 728;
	sub.s32 	%r63, %r51, %r62;
	.loc	1 32 40                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:32:40
	shl.b32 	%r64, %r49, 12;
	shl.b32 	%r65, %r50, 12;
	.loc	1 32 35                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:32:35
	add.s32 	%r66, %r53, %r64;
	add.s32 	%r67, %r53, %r65;
	.loc	1 32 30                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:32:30
	mul.wide.s32 	%rd10, %r66, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r67, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 32 45                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:32:45
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p15, %f1, 0f00000000;
	setp.lt.f32 	%p16, %f2, 0f00000000;
	setp.lt.f32 	%p17, %f3, 0f00000000;
	setp.lt.f32 	%p18, %f4, 0f00000000;
	setp.lt.f32 	%p19, %f5, 0f00000000;
	setp.lt.f32 	%p20, %f6, 0f00000000;
	setp.lt.f32 	%p21, %f7, 0f00000000;
	setp.lt.f32 	%p22, %f8, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f9, 0f00000000, %f1, %p15;
	selp.f32 	%f10, 0f00000000, %f2, %p16;
	selp.f32 	%f11, 0f00000000, %f3, %p17;
	selp.f32 	%f12, 0f00000000, %f4, %p18;
	selp.f32 	%f13, 0f00000000, %f5, %p19;
	selp.f32 	%f14, 0f00000000, %f6, %p20;
	selp.f32 	%f15, 0f00000000, %f7, %p21;
	selp.f32 	%f16, 0f00000000, %f8, %p22;
$L__tmp2:
	.loc	1 35 30                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:35:30
	mad.lo.s32 	%r68, %r61, 2981888, %r63;
	.loc	1 35 39                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:35:39
	mad.lo.s32 	%r69, %r54, 728, %r68;
	mad.lo.s32 	%r70, %r55, 728, %r68;
	.loc	1 35 25                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:35:25
	mul.wide.s32 	%rd12, %r69, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r70, 4;
	add.s64 	%rd4, %rd8, %rd13;
	.loc	1 35 58                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:35:58
	shl.b32 	%r71, %r44, 7;
	and.b32  	%r72, %r71, 896;
	or.b32  	%r73, %r72, %r45;
	and.b32  	%r74, %r47, 508;
	shr.u32 	%r75, %r72, 3;
	or.b32  	%r76, %r75, %r73;
	shl.b32 	%r77, %r76, 2;
	mov.u32 	%r78, global_smem;
	add.s32 	%r11, %r78, %r77;
	mov.b32 	%r12, %f9;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r79, %r72, 32;
	shr.u32 	%r80, %r79, 3;
	add.s32 	%r81, %r80, %r73;
	shl.b32 	%r82, %r81, 2;
	add.s32 	%r83, %r78, %r82;
	add.s32 	%r13, %r83, 128;
	mov.b32 	%r14, %f10;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r84, %r72, 64;
	shr.u32 	%r85, %r84, 3;
	add.s32 	%r86, %r85, %r73;
	shl.b32 	%r87, %r86, 2;
	add.s32 	%r88, %r78, %r87;
	add.s32 	%r15, %r88, 256;
	mov.b32 	%r16, %f11;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r89, %r72, 96;
	shr.u32 	%r90, %r89, 3;
	add.s32 	%r91, %r90, %r73;
	shl.b32 	%r92, %r91, 2;
	add.s32 	%r93, %r78, %r92;
	add.s32 	%r17, %r93, 384;
	mov.b32 	%r18, %f12;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 64;
	mov.b32 	%r20, %f13;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r83, 192;
	mov.b32 	%r22, %f14;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r88, 320;
	mov.b32 	%r24, %f15;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r93, 448;
	mov.b32 	%r26, %f16;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r94, %r44, 1;
	and.b32  	%r95, %r94, 60;
	add.s32 	%r96, %r95, %r74;
	shl.b32 	%r97, %r96, 2;
	add.s32 	%r98, %r78, %r97;
	or.b32  	%r99, %r74, 512;
	shr.u32 	%r100, %r99, 3;
	and.b32  	%r101, %r100, 124;
	add.s32 	%r102, %r101, %r74;
	shl.b32 	%r103, %r102, 2;
	add.s32 	%r104, %r78, %r103;
	ld.shared.v4.u32 	{%r31, %r32, %r33, %r34}, [%r104+2048];
	ld.shared.v4.u32 	{%r27, %r28, %r29, %r30}, [%r98];
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 36 25                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:36:25
	add.s64 	%rd5, %rd9, %rd10;
	add.s64 	%rd6, %rd9, %rd11;
	.loc	1 36 46                         // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:36:46
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r12, %r14, %r16, %r18 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd6 + 0 ], { %r20, %r22, %r24, %r26 };
	// end inline asm
	.loc	1 36 4                          // ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py:36:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kc/ckcof3gaunu5ylnxoaek7ds6miywrb2a57hmj6ec4mi2nwsfa3sm.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 99
.b8 111
.b8 102
.b8 51
.b8 103
.b8 97
.b8 117
.b8 110
.b8 117
.b8 53
.b8 121
.b8 108
.b8 110
.b8 120
.b8 111
.b8 97
.b8 101
.b8 107
.b8 55
.b8 100
.b8 115
.b8 54
.b8 109
.b8 105
.b8 121
.b8 119
.b8 114
.b8 98
.b8 50
.b8 97
.b8 53
.b8 55
.b8 104
.b8 109
.b8 106
.b8 54
.b8 101
.b8 99
.b8 52
.b8 109
.b8 105
.b8 50
.b8 110
.b8 119
.b8 115
.b8 102
.b8 97
.b8 51
.b8 115
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
