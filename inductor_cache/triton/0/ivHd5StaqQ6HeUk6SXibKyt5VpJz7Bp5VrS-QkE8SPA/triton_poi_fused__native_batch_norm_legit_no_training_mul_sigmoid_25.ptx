//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<36>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd7, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_1];
$L__tmp0:
	.loc	1 22 28                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:22:33
	shl.b32 	%r31, %r1, 3;
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_2];
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_3];
	.loc	1 23 44                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:23:44
	mov.u32 	%r32, %tid.x;
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_4];
	bfe.u32 	%r33, %r32, 4, 3;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_mul_sigmoid_25_param_5];
	shl.b32 	%r34, %r32, 1;
	.loc	1 23 23                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:23:23
	or.b32  	%r35, %r31, %r33;
	.loc	1 24 21                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:24:21
	setp.lt.s32 	%p9, %r35, 64;
	.loc	1 25 28                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:25:33
	shl.b32 	%r36, %r2, 5;
	.loc	1 26 44                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:26:44
	and.b32  	%r37, %r34, 30;
	.loc	1 26 23                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:26:23
	or.b32  	%r38, %r36, %r37;
	.loc	1 27 21                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:27:21
	setp.lt.s32 	%p2, %r38, 32;
	.loc	1 32 38                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:38
	shl.b32 	%r39, %r35, 5;
	.loc	1 32 35                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:35
	add.s32 	%r40, %r38, %r39;
	.loc	1 32 30                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:30
	mul.wide.s32 	%rd13, %r40, 4;
	add.s64 	%rd1, %rd7, %rd13;
	.loc	1 32 51                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:51
	and.pred  	%p1, %p9, %p2;
	.loc	1 32 43                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:33:30
	mul.wide.s32 	%rd14, %r38, 4;
	add.s64 	%rd2, %rd8, %rd14;
	.loc	1 33 35                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:34:30
	add.s64 	%rd3, %rd9, %rd14;
	.loc	1 34 35                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r7, %r8 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	.loc	1 35 31                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:35:31
	add.s64 	%rd4, %rd10, %rd14;
	.loc	1 35 36                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:35:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r9, %r10 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:36:31
	add.s64 	%rd5, %rd11, %rd14;
	.loc	1 36 36                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:36:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:39:18
	add.f32 	%f7, %f5, 0f3A83126F;
	add.f32 	%f8, %f6, 0f3A83126F;
	.loc	1 40 26                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:40:26
	sqrt.approx.ftz.f32 	%f9, %f7;
	sqrt.approx.ftz.f32 	%f10, %f8;
	.loc	1 32 43                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:43
	mov.b32 	%f11, %r4;
	.loc	1 33 35                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:33:35
	mov.b32 	%f12, %r6;
	.loc	1 37 18                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:37:18
	sub.f32 	%f13, %f11, %f12;
	.loc	1 32 43                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:43
	mov.b32 	%f14, %r3;
	.loc	1 33 35                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:33:35
	mov.b32 	%f15, %r5;
	.loc	1 37 18                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:37:18
	sub.f32 	%f16, %f14, %f15;
	.loc	1 36 36                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:36:36
	mov.b32 	%f17, %r12;
	mov.b32 	%f18, %r11;
	.loc	1 35 36                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:35:36
	mov.b32 	%f19, %r10;
	mov.b32 	%f20, %r9;
	.loc	1 26 44                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:26:44
	bfe.u32 	%r41, %r32, 2, 5;
	.loc	1 26 23                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:26:23
	or.b32  	%r42, %r36, %r41;
	.loc	1 27 21                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:27:21
	setp.lt.s32 	%p10, %r42, 32;
	.loc	1 23 44                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:23:44
	and.b32  	%r43, %r34, 6;
	.loc	1 23 23                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:23:23
	or.b32  	%r44, %r31, %r43;
	.loc	1 24 21                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:24:21
	setp.lt.s32 	%p11, %r44, 64;
	.loc	1 32 51                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:32:51
	and.pred  	%p8, %p11, %p10;
	.loc	1 31 19                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:31:19
	shr.s32 	%r46, %r44, 31;
	shr.u32 	%r47, %r46, 28;
	add.s32 	%r48, %r44, %r47;
	.loc	1 30 19                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:30:19
	and.b32  	%r49, %r48, -16;
	sub.s32 	%r50, %r44, %r49;
	.loc	1 42 18                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:42:18
	mov.b32 	%r15, %f9;
	mov.b32 	%r14, 1065353216;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f21, %r13;
	mov.b32 	%r18, %f10;
	// begin inline asm
	div.full.f32 %r16, %r14, %r18;
	// end inline asm
	mov.b32 	%f22, %r16;
	.loc	1 45 19                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:45:19
	mul.f32 	%f23, %f16, %f21;
	mul.f32 	%f24, %f13, %f22;
	.loc	1 47 20                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:47:20
	fma.rn.f32 	%f25, %f23, %f20, %f18;
	fma.rn.f32 	%f26, %f24, %f19, %f17;
	mov.f32 	%f27, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f28, %f27, %f25;
	sub.f32 	%f29, %f27, %f26;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f30, %f1, 0f3F800000;
	add.f32 	%f31, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r21, %f30;
	// begin inline asm
	div.full.f32 %r19, %r14, %r21;
	// end inline asm
	mov.b32 	%f32, %r19;
	mov.b32 	%r24, %f31;
	// begin inline asm
	div.full.f32 %r22, %r14, %r24;
	// end inline asm
	mov.b32 	%f33, %r22;
$L__tmp2:
	.loc	1 49 20                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:49:20
	mul.f32 	%f34, %f25, %f32;
	mul.f32 	%f35, %f26, %f33;
	.loc	1 50 33                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:33
	shl.b32 	%r51, %r42, 4;
	.loc	1 50 30                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:30
	add.s32 	%r52, %r51, %r50;
	.loc	1 50 42                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:42
	shl.b32 	%r53, %r48, 5;
	and.b32  	%r54, %r53, -512;
	.loc	1 50 38                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:38
	add.s32 	%r55, %r52, %r54;
	.loc	1 50 25                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:25
	mul.wide.s32 	%rd15, %r55, 4;
	add.s64 	%rd6, %rd12, %rd15;
	.loc	1 50 54                         // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:54
	shl.b32 	%r56, %r32, 4;
	and.b32  	%r57, %r56, 240;
	or.b32  	%r58, %r57, %r33;
	mov.u32 	%r59, global_smem;
	add.s32 	%r60, %r59, %r57;
	shl.b32 	%r61, %r58, 2;
	add.s32 	%r25, %r60, %r61;
	mov.b32 	%r26, %f34;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r25, 40;
	mov.b32 	%r28, %f35;
	// begin inline asm
	@%p6 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r62, %r34, 248;
	add.s32 	%r63, %r59, %r62;
	shl.b32 	%r64, %r32, 3;
	and.b32  	%r65, %r64, 1016;
	add.s32 	%r66, %r63, %r65;
	ld.shared.v2.u32 	{%r29, %r30}, [%r66];
	// begin inline asm
	@%p8 st.global.v2.b32 [ %rd6 + 0 ], { %r29, %r30 };
	// end inline asm
	.loc	1 50 4                          // cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s2/cs24hrms5crncrzk4ythzl3657r64c3ky7j6sf7qipe46fs5ghpm.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 50
.b8 52
.b8 104
.b8 114
.b8 109
.b8 115
.b8 53
.b8 99
.b8 114
.b8 110
.b8 99
.b8 114
.b8 122
.b8 107
.b8 52
.b8 121
.b8 116
.b8 104
.b8 122
.b8 108
.b8 51
.b8 54
.b8 53
.b8 55
.b8 114
.b8 54
.b8 52
.b8 99
.b8 51
.b8 107
.b8 121
.b8 55
.b8 106
.b8 54
.b8 115
.b8 102
.b8 55
.b8 113
.b8 105
.b8 112
.b8 101
.b8 52
.b8 54
.b8 102
.b8 115
.b8 53
.b8 103
.b8 104
.b8 112
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 50
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
