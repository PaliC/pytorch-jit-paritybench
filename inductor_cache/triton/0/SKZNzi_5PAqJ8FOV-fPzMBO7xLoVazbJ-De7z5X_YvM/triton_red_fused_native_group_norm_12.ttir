#loc = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":19:0)
#loc1 = loc(unknown)
#loc30 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":43:41)
#loc64 = loc(callsite(#loc1 at #loc30))
module {
  tt.func public @triton_red_fused_native_group_norm_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.muli %0, %c4096_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2048xi32> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc9)
    %9:3 = scf.for %arg5 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg6 = %cst_3, %arg7 = %cst_3, %arg8 = %cst_3) -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %20 = tt.splat %arg5 : i32 -> tensor<1x2048xi32> loc(#loc11)
      %21 = arith.addi %20, %4 : tensor<1x2048xi32> loc(#loc11)
      %22 = arith.cmpi slt, %21, %cst_4 : tensor<1x2048xi32> loc(#loc12)
      %23 = arith.addi %21, %6 : tensor<1x2048xi32> loc(#loc7)
      %24 = tt.addptr %7, %23 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc8)
      %25 = arith.andi %22, %8 : tensor<1x2048xi1> loc(#loc9)
      %26 = tt.load %24, %25, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc13)
      %27 = arith.cmpi eq, %arg5, %c0_i32 : i32 loc(#loc14)
      %28:3 = scf.if %27 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_3, %26, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc55)
      } else {
        %32 = arith.subf %26, %arg6 : tensor<1x2048xf32> loc(#loc56)
        %33 = arith.addf %arg8, %cst_0 : tensor<1x2048xf32> loc(#loc57)
        %34 = arith.divf %32, %33 : tensor<1x2048xf32> loc(#loc58)
        %35 = arith.addf %arg6, %34 : tensor<1x2048xf32> loc(#loc59)
        %36 = arith.subf %26, %35 : tensor<1x2048xf32> loc(#loc60)
        %37 = arith.mulf %32, %36 : tensor<1x2048xf32> loc(#loc61)
        %38 = arith.addf %arg7, %37 : tensor<1x2048xf32> loc(#loc62)
        scf.yield %38, %35, %33 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc62)
      } loc(#loc54)
      %29 = arith.select %25, %28#1, %arg6 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc25)
      %30 = arith.select %25, %28#0, %arg7 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc26)
      %31 = arith.select %25, %28#2, %arg8 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc27)
      scf.yield %29, %30, %31 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc28)
    } loc(#loc10)
    %10:3 = "tt.reduce"(%9#0, %9#1, %9#2) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc30)), %arg6: f32 loc(callsite(#loc1 at #loc30)), %arg7: f32 loc(callsite(#loc1 at #loc30)), %arg8: f32 loc(callsite(#loc1 at #loc30)), %arg9: f32 loc(callsite(#loc1 at #loc30)), %arg10: f32 loc(callsite(#loc1 at #loc30))):
      %20 = arith.subf %arg8, %arg5 : f32 loc(#loc77)
      %21 = arith.addf %arg7, %arg10 : f32 loc(#loc78)
      %22 = arith.cmpf oeq, %21, %cst : f32 loc(#loc79)
      %23 = arith.divf %arg10, %21 : f32 loc(#loc80)
      %24 = arith.select %22, %cst, %23 : f32 loc(#loc81)
      %25 = arith.mulf %20, %24 : f32 loc(#loc82)
      %26 = arith.addf %arg5, %25 : f32 loc(#loc83)
      %27 = arith.addf %arg6, %arg9 : f32 loc(#loc84)
      %28 = arith.mulf %20, %20 : f32 loc(#loc85)
      %29 = arith.mulf %28, %arg7 : f32 loc(#loc86)
      %30 = arith.mulf %29, %24 : f32 loc(#loc87)
      %31 = arith.addf %27, %30 : f32 loc(#loc88)
      tt.reduce.return %26, %31, %21 : f32, f32, f32 loc(#loc63)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc63)
    %11 = tt.expand_dims %10#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc43)
    %12 = tt.expand_dims %10#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc44)
    %13 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc45)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    tt.store %14, %11, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc46)
    %15 = arith.divf %12, %cst_2 : tensor<1x1xf32> loc(#loc47)
    %16 = arith.addf %15, %cst_1 : tensor<1x1xf32> loc(#loc48)
    %17 = tt.extern_elementwise %16 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc49)
    gpu.barrier loc(#loc50)
    %18 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc51)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc51)
    tt.store %19, %17, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc52)
    tt.return loc(#loc53)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":22:28)
#loc3 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":24:21)
#loc4 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":25:25)
#loc5 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":25:33)
#loc6 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":34:44)
#loc7 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":34:39)
#loc8 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":34:34)
#loc9 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":34:57)
#loc10 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":30:36)
#loc11 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":31:27)
#loc12 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":32:25)
#loc13 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":34:49)
#loc14 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":37:62)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc16 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":37:51)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc25 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":39:60)
#loc26 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":40:56)
#loc27 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":41:64)
#loc28 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":41:8)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc43 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":45:20)
#loc44 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":46:20)
#loc45 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":48:25)
#loc46 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":48:36)
#loc47 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":50:18)
#loc48 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":52:18)
#loc49 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":53:27)
#loc50 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":54:4)
#loc51 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":55:28)
#loc52 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":55:39)
#loc53 = loc("inductor_cache/zf/czfdmdyngnubinb56m5zvom4ig6u44ot5ndwh7nuadc3vzlf6l7c.py":55:4)
#loc54 = loc(callsite(#loc15 at #loc16))
#loc55 = loc(callsite(#loc17 at #loc16))
#loc56 = loc(callsite(#loc18 at #loc16))
#loc57 = loc(callsite(#loc19 at #loc16))
#loc58 = loc(callsite(#loc20 at #loc16))
#loc59 = loc(callsite(#loc21 at #loc16))
#loc60 = loc(callsite(#loc22 at #loc16))
#loc61 = loc(callsite(#loc23 at #loc16))
#loc62 = loc(callsite(#loc24 at #loc16))
#loc63 = loc(callsite(#loc29 at #loc30))
#loc65 = loc(callsite(#loc31 at #loc29))
#loc66 = loc(callsite(#loc32 at #loc29))
#loc67 = loc(callsite(#loc33 at #loc29))
#loc68 = loc(callsite(#loc34 at #loc29))
#loc69 = loc(callsite(#loc35 at #loc29))
#loc70 = loc(callsite(#loc36 at #loc29))
#loc71 = loc(callsite(#loc37 at #loc29))
#loc72 = loc(callsite(#loc38 at #loc29))
#loc73 = loc(callsite(#loc39 at #loc29))
#loc74 = loc(callsite(#loc40 at #loc29))
#loc75 = loc(callsite(#loc41 at #loc29))
#loc76 = loc(callsite(#loc42 at #loc29))
#loc77 = loc(callsite(#loc65 at #loc30))
#loc78 = loc(callsite(#loc66 at #loc30))
#loc79 = loc(callsite(#loc67 at #loc30))
#loc80 = loc(callsite(#loc68 at #loc30))
#loc81 = loc(callsite(#loc69 at #loc30))
#loc82 = loc(callsite(#loc70 at #loc30))
#loc83 = loc(callsite(#loc71 at #loc30))
#loc84 = loc(callsite(#loc72 at #loc30))
#loc85 = loc(callsite(#loc73 at #loc30))
#loc86 = loc(callsite(#loc74 at #loc30))
#loc87 = loc(callsite(#loc75 at #loc30))
#loc88 = loc(callsite(#loc76 at #loc30))
