#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_avg_pool2d_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.000000e+00> : tensor<16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<16xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<16xi32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<16xi32, #blocked> loc(#loc6)
    %6 = arith.muli %4, %cst_4 : tensor<16xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %5, %cst_3 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = arith.addf %9, %cst_3 : tensor<16xf32, #blocked> loc(#loc10)
    %11 = arith.addi %6, %cst_2 : tensor<16xi32, #blocked> loc(#loc11)
    %12 = tt.addptr %7, %11 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc12)
    %13 = tt.load %12, %5, %cst_3 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = arith.addf %13, %10 : tensor<16xf32, #blocked> loc(#loc14)
    %15 = arith.addf %14, %cst_3 : tensor<16xf32, #blocked> loc(#loc15)
    %16 = arith.addi %6, %cst_1 : tensor<16xi32, #blocked> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc17)
    %18 = tt.load %17, %5, %cst_3 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc18)
    %19 = arith.addf %18, %15 : tensor<16xf32, #blocked> loc(#loc19)
    %20 = arith.addi %6, %cst_0 : tensor<16xi32, #blocked> loc(#loc20)
    %21 = tt.addptr %7, %20 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc21)
    %22 = tt.load %21, %5, %cst_3 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc22)
    %23 = arith.addf %22, %19 : tensor<16xf32, #blocked> loc(#loc23)
    %24 = arith.divf %23, %cst : tensor<16xf32, #blocked> loc(#loc24)
    %25 = arith.addf %24, %24 : tensor<16xf32, #blocked> loc(#loc25)
    %26 = arith.addf %24, %25 : tensor<16xf32, #blocked> loc(#loc26)
    %27 = arith.addf %24, %26 : tensor<16xf32, #blocked> loc(#loc27)
    %28 = arith.addf %24, %27 : tensor<16xf32, #blocked> loc(#loc28)
    %29 = arith.addf %24, %28 : tensor<16xf32, #blocked> loc(#loc29)
    %30 = arith.addf %24, %29 : tensor<16xf32, #blocked> loc(#loc30)
    %31 = arith.addf %24, %30 : tensor<16xf32, #blocked> loc(#loc31)
    %32 = arith.addf %24, %31 : tensor<16xf32, #blocked> loc(#loc32)
    %33 = arith.divf %32, %cst : tensor<16xf32, #blocked> loc(#loc33)
    %34 = arith.addf %33, %cst_3 : tensor<16xf32, #blocked> loc(#loc34)
    %35 = arith.addf %34, %cst_3 : tensor<16xf32, #blocked> loc(#loc35)
    %36 = arith.addf %35, %cst_3 : tensor<16xf32, #blocked> loc(#loc36)
    %37 = arith.addf %36, %cst_3 : tensor<16xf32, #blocked> loc(#loc37)
    %38 = arith.addf %37, %cst_3 : tensor<16xf32, #blocked> loc(#loc38)
    %39 = arith.divf %38, %cst : tensor<16xf32, #blocked> loc(#loc39)
    %40 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc40)
    %41 = tt.addptr %40, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc40)
    tt.store %41, %39, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":21:28)
#loc3 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":21:33)
#loc4 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":22:36)
#loc5 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":22:23)
#loc6 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":23:21)
#loc7 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":50:33)
#loc8 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":50:31)
#loc9 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":50:38)
#loc10 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":51:20)
#loc11 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":53:35)
#loc12 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":53:31)
#loc13 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":53:42)
#loc14 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":54:20)
#loc15 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":57:20)
#loc16 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":59:35)
#loc17 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":59:31)
#loc18 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":59:42)
#loc19 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":60:20)
#loc20 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":62:35)
#loc21 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":62:31)
#loc22 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":62:42)
#loc23 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":63:20)
#loc24 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":65:20)
#loc25 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":292:21)
#loc26 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":298:21)
#loc27 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":301:21)
#loc28 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":304:21)
#loc29 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":307:21)
#loc30 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":310:21)
#loc31 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":313:21)
#loc32 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":316:21)
#loc33 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":318:22)
#loc34 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":321:22)
#loc35 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":373:22)
#loc36 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":430:22)
#loc37 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":482:22)
#loc38 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":527:22)
#loc39 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":528:22)
#loc40 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":529:28)
#loc41 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":529:41)
#loc42 = loc("inductor_cache/mx/cmxbbxkdjzx6glh47q35dj252paodqq3vrwjvvdr5vpqczlsuijt.py":529:4)
