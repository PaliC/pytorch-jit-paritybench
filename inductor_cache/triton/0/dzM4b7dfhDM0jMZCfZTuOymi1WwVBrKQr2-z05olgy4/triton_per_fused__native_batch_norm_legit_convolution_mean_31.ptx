//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_convolution_mean_31 // -- Begin function triton_per_fused__native_batch_norm_legit_convolution_mean_31
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_convolution_mean_31
.visible .entry triton_per_fused__native_batch_norm_legit_convolution_mean_31(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<112>;
	.reg .f32 	%f<84>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_0];
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_1];
$L__tmp0:
	.loc	1 23 28                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:23:33
	shl.b32 	%r62, %r1, 7;
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_2];
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_3];
	.loc	1 24 44                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:24:44
	mov.u32 	%r63, %tid.x;
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_convolution_mean_31_param_4];
	bfe.u32 	%r64, %r63, 2, 6;
	and.b32  	%r65, %r63, 127;
	.loc	1 24 23                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:24:23
	or.b32  	%r66, %r62, %r64;
	or.b32  	%r67, %r66, 64;
	.loc	1 26 34                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:26:34
	shl.b32 	%r68, %r63, 2;
	and.b32  	%r69, %r68, 12;
	.loc	1 31 19                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:31:19
	bfe.s32 	%r70, %r1, 24, 1;
	shr.u32 	%r71, %r70, 22;
	add.s32 	%r72, %r66, %r71;
	and.b32  	%r73, %r72, -1024;
	sub.s32 	%r74, %r66, %r73;
	add.s32 	%r75, %r67, %r71;
	and.b32  	%r76, %r75, -1024;
	sub.s32 	%r77, %r67, %r76;
	.loc	1 32 42                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:32:42
	shl.b32 	%r78, %r66, 4;
	shl.b32 	%r79, %r67, 4;
	.loc	1 32 39                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:32:39
	or.b32  	%r80, %r78, %r69;
	or.b32  	%r81, %r79, %r69;
	.loc	1 32 34                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:32:34
	mul.wide.s32 	%rd21, %r80, 4;
	add.s64 	%rd1, %rd16, %rd21;
	mul.wide.s32 	%rd22, %r81, 4;
	add.s64 	%rd2, %rd16, %rd22;
	mov.pred 	%p1, -1;
	.loc	1 32 47                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 33 30                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:33:30
	mul.wide.s32 	%rd23, %r74, 4;
	add.s64 	%rd3, %rd19, %rd23;
	mul.wide.s32 	%rd24, %r77, 4;
	add.s64 	%rd7, %rd19, %rd24;
	.loc	1 33 35                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r17;
	.loc	1 34 18                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:34:18
	add.f32 	%f11, %f1, %f9;
	add.f32 	%f12, %f2, %f9;
	add.f32 	%f13, %f3, %f9;
	add.f32 	%f14, %f4, %f9;
	add.f32 	%f15, %f5, %f10;
	add.f32 	%f16, %f6, %f10;
	add.f32 	%f17, %f7, %f10;
	add.f32 	%f18, %f8, %f10;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f11, %f12;
	add.f32 	%f20, %f13, %f19;
	add.f32 	%f21, %f14, %f20;
	add.f32 	%f22, %f15, %f16;
	add.f32 	%f23, %f17, %f22;
	add.f32 	%f24, %f18, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f21;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f25, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f21, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f26;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f27, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f24;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f29, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f24, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f30;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f31, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
$L__tmp2:
	.loc	1 40 19                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:40:19
	shl.b32 	%r90, %r64, 2;
	mov.u32 	%r91, global_smem;
	add.s32 	%r18, %r91, %r90;
	mov.b32 	%r19, %f28;
	// begin inline asm
	@%p1 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	add.s32 	%r20, %r18, 256;
	mov.b32 	%r21, %f32;
	// begin inline asm
	@%p1 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r92, %r65, 2;
	add.s32 	%r93, %r91, %r92;
	ld.shared.u32 	%r23, [%r93];
	mov.b32 	%r24, 1098907648;
	// begin inline asm
	div.full.f32 %r61, %r23, %r24;
	// end inline asm
	// begin inline asm
	div.full.f32 %r25, %r19, %r24;
	// end inline asm
	mov.b32 	%f33, %r25;
	// begin inline asm
	div.full.f32 %r28, %r21, %r24;
	// end inline asm
	mov.b32 	%f34, %r28;
	.loc	1 41 19                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:41:19
	sub.f32 	%f35, %f11, %f33;
	sub.f32 	%f36, %f12, %f33;
	sub.f32 	%f37, %f13, %f33;
	sub.f32 	%f38, %f14, %f33;
	sub.f32 	%f39, %f15, %f34;
	sub.f32 	%f40, %f16, %f34;
	sub.f32 	%f41, %f17, %f34;
	sub.f32 	%f42, %f18, %f34;
	.loc	1 42 20                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:42:20
	mul.f32 	%f43, %f36, %f36;
	mul.f32 	%f44, %f40, %f40;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f45, %f35, %f35, %f43;
	fma.rn.f32 	%f46, %f37, %f37, %f45;
	fma.rn.f32 	%f47, %f38, %f38, %f46;
	fma.rn.f32 	%f48, %f39, %f39, %f44;
	fma.rn.f32 	%f49, %f41, %f41, %f48;
	fma.rn.f32 	%f50, %f42, %f42, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f47;
	shfl.sync.bfly.b32	%r95, %r94, 2, 31, -1;
	mov.b32 	%f51, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f47, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f52;
	shfl.sync.bfly.b32	%r97, %r96, 1, 31, -1;
	mov.b32 	%f53, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f50;
	shfl.sync.bfly.b32	%r99, %r98, 2, 31, -1;
	mov.b32 	%f55, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f50, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f56;
	shfl.sync.bfly.b32	%r101, %r100, 1, 31, -1;
	mov.b32 	%f57, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
$L__tmp4:
	.loc	1 49 28                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:49:28
	bar.sync 	0;
	mov.b32 	%r32, %f54;
	// begin inline asm
	@%p1 st.shared.b32 [ %r18 + 0 ], %r32;
	// end inline asm
	mov.b32 	%r34, %f58;
	// begin inline asm
	@%p1 st.shared.b32 [ %r20 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:46:20
	ld.shared.u32 	%r36, [%r93];
	// begin inline asm
	div.full.f32 %r35, %r36, %r24;
	// end inline asm
	mov.b32 	%f59, %r35;
	// begin inline asm
	div.full.f32 %r38, %r32, %r24;
	// end inline asm
	mov.b32 	%f60, %r38;
	// begin inline asm
	div.full.f32 %r41, %r34, %r24;
	// end inline asm
	mov.b32 	%f61, %r41;
	.loc	1 48 20                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:48:20
	add.f32 	%f62, %f59, 0f3727C5AC;
	add.f32 	%f63, %f60, 0f3727C5AC;
	add.f32 	%f64, %f61, 0f3727C5AC;
	.loc	1 49 28                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:49:28
	rsqrt.approx.ftz.f32 	%f65, %f62;
	rsqrt.approx.ftz.f32 	%f66, %f63;
	rsqrt.approx.ftz.f32 	%f67, %f64;
	.loc	1 24 23                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:24:23
	or.b32  	%r102, %r62, %r65;
	.loc	1 51 20                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:51:20
	mul.f32 	%f68, %f36, %f66;
	mul.f32 	%f69, %f40, %f67;
$L__tmp5:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f70, %f35, %f66, %f68;
	fma.rn.f32 	%f71, %f37, %f66, %f70;
	fma.rn.f32 	%f72, %f38, %f66, %f71;
	fma.rn.f32 	%f73, %f39, %f67, %f69;
	fma.rn.f32 	%f74, %f41, %f67, %f73;
	fma.rn.f32 	%f75, %f42, %f67, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r103, %f72;
	shfl.sync.bfly.b32	%r104, %r103, 2, 31, -1;
	mov.b32 	%f76, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f72, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f77;
	shfl.sync.bfly.b32	%r106, %r105, 1, 31, -1;
	mov.b32 	%f78, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f75;
	shfl.sync.bfly.b32	%r108, %r107, 2, 31, -1;
	mov.b32 	%f80, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f75, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r109, %f81;
	shfl.sync.bfly.b32	%r110, %r109, 1, 31, -1;
	mov.b32 	%f82, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
$L__tmp6:
	.loc	1 54 20                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:54:20
	bar.sync 	0;
	mov.b32 	%r45, %f79;
	// begin inline asm
	@%p1 st.shared.b32 [ %r18 + 0 ], %r45;
	// end inline asm
	mov.b32 	%r47, %f83;
	// begin inline asm
	@%p1 st.shared.b32 [ %r20 + 0 ], %r47;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r49, [%r93];
	// begin inline asm
	div.full.f32 %r60, %r49, %r24;
	// end inline asm
	.loc	1 55 47                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:55:47
	mov.b32 	%r51, %f11;
	mov.b32 	%r52, %f12;
	mov.b32 	%r53, %f13;
	mov.b32 	%r54, %f14;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	mov.b32 	%r55, %f15;
	mov.b32 	%r56, %f16;
	mov.b32 	%r57, %f17;
	mov.b32 	%r58, %f18;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	.loc	1 56 4                          // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:57:28
	mul.wide.s32 	%rd25, %r102, 4;
	add.s64 	%rd13, %rd17, %rd25;
	.loc	1 57 40                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:57:40
	and.b32  	%r111, %r63, 128;
	setp.eq.s32 	%p19, %r111, 0;
	mov.b32 	%r59, %f65;
	// begin inline asm
	@%p19 st.global.b32 [ %rd13 + 0 ], { %r59 };
	// end inline asm
	.loc	1 58 4                          // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:58:4
	bar.sync 	0;
	.loc	1 59 28                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:59:28
	add.s64 	%rd14, %rd18, %rd25;
	.loc	1 59 40                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:59:40
	// begin inline asm
	@%p19 st.global.b32 [ %rd14 + 0 ], { %r60 };
	// end inline asm
	.loc	1 60 25                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:60:25
	add.s64 	%rd15, %rd20, %rd25;
	.loc	1 60 37                         // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:60:37
	// begin inline asm
	@%p19 st.global.b32 [ %rd15 + 0 ], { %r61 };
	// end inline asm
	.loc	1 60 4                          // cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py:60:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qq/cqqre2r7c5ic6nk7cusb7fvguymgf62c5dr4nizcwxiqyjh5yiau.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 254                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 113
.b8 114
.b8 101
.b8 50
.b8 114
.b8 55
.b8 99
.b8 53
.b8 105
.b8 99
.b8 54
.b8 110
.b8 107
.b8 55
.b8 99
.b8 117
.b8 115
.b8 98
.b8 55
.b8 102
.b8 118
.b8 103
.b8 117
.b8 121
.b8 109
.b8 103
.b8 102
.b8 54
.b8 50
.b8 99
.b8 53
.b8 100
.b8 114
.b8 52
.b8 110
.b8 105
.b8 122
.b8 99
.b8 119
.b8 120
.b8 105
.b8 113
.b8 121
.b8 106
.b8 104
.b8 53
.b8 121
.b8 105
.b8 97
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
