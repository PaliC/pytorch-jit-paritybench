//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_new_zeros_22 // -- Begin function triton_per_fused_mean_new_zeros_22
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_new_zeros_22
.visible .entry triton_per_fused_mean_new_zeros_22(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_new_zeros_22_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_new_zeros_22_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_new_zeros_22_param_2,
	.param .u32 triton_per_fused_mean_new_zeros_22_param_3,
	.param .u32 triton_per_fused_mean_new_zeros_22_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<92>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_mean_new_zeros_22_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_mean_new_zeros_22_param_1];
$L__tmp0:
	.loc	1 23 28                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:23:33
	shl.b32 	%r43, %r1, 7;
	ld.param.u64 	%rd6, [triton_per_fused_mean_new_zeros_22_param_2];
	.loc	1 24 44                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:24:44
	mov.u32 	%r44, %tid.x;
	shl.b32 	%r46, %r44, 2;
	and.b32  	%r47, %r46, 124;
	and.b32  	%r48, %r44, 127;
	.loc	1 24 23                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:24:23
	or.b32  	%r49, %r43, %r47;
	or.b32  	%r50, %r43, %r48;
	.loc	1 31 19                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:31:19
	bfe.s32 	%r51, %r1, 24, 1;
	shr.u32 	%r52, %r51, 24;
	add.s32 	%r53, %r49, %r52;
	.loc	1 30 19                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:30:19
	and.b32  	%r54, %r53, -256;
	sub.s32 	%r55, %r49, %r54;
	.loc	1 33 39                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:33:39
	shl.b32 	%r56, %r44, 3;
	and.b32  	%r57, %r56, 1792;
	.loc	1 33 35                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:33:35
	add.s32 	%r58, %r55, %r57;
	.loc	1 33 49                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:33:49
	shl.b32 	%r59, %r53, 3;
	and.b32  	%r60, %r59, -2048;
	.loc	1 33 44                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:33:44
	add.s32 	%r61, %r58, %r60;
	.loc	1 33 30                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:33:30
	mul.wide.s32 	%rd7, %r61, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mov.pred 	%p1, -1;
	.loc	1 33 54                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 34 30                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:34:30
	add.s64 	%rd2, %rd6, %rd7;
	.loc	1 34 54                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:34:54
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 35 18                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:35:18
	mul.f32 	%f9, %f1, %f5;
	mul.f32 	%f10, %f2, %f6;
	mul.f32 	%f11, %f3, %f7;
	mul.f32 	%f12, %f4, %f8;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r62, %r44, 3;
	and.b32  	%r63, %r62, 28;
	shl.b32 	%r64, %r47, 5;
	or.b32  	%r65, %r64, %r63;
	mov.u32 	%r66, global_smem;
	add.s32 	%r10, %r66, %r65;
	mov.b32 	%r11, %f9;
	// begin inline asm
	@%p1 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 32;
	mov.b32 	%r13, %f10;
	// begin inline asm
	@%p1 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 64;
	mov.b32 	%r15, %f11;
	// begin inline asm
	@%p1 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 96;
	mov.b32 	%r17, %f12;
	// begin inline asm
	@%p1 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r44, 1024;
	add.s32 	%r19, %r66, %r46;
	// begin inline asm
	@%p7 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r18;
	shfl.sync.bfly.b32	%r67, %r18, 4, 31, -1;
	mov.b32 	%f14, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f15;
	shfl.sync.bfly.b32	%r69, %r68, 2, 31, -1;
	mov.b32 	%f16, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f17;
	shfl.sync.bfly.b32	%r71, %r70, 1, 31, -1;
	mov.b32 	%f18, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r72, %r44, 7;
	setp.eq.s32 	%p17, %r72, 0;
	and.pred  	%p8, %p7, %p17;
	mov.b32 	%r21, %f19;
	// begin inline asm
	@%p8 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	add.s32 	%r23, %r19, 1024;
	// begin inline asm
	@%p7 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r22;
	shfl.sync.bfly.b32	%r73, %r22, 4, 31, -1;
	mov.b32 	%f21, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f22;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f23, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f24;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f25, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f26;
	// begin inline asm
	@%p8 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	add.s32 	%r27, %r19, 2048;
	// begin inline asm
	@%p7 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r26;
	shfl.sync.bfly.b32	%r78, %r26, 4, 31, -1;
	mov.b32 	%f28, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f29;
	shfl.sync.bfly.b32	%r80, %r79, 2, 31, -1;
	mov.b32 	%f30, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f31;
	shfl.sync.bfly.b32	%r82, %r81, 1, 31, -1;
	mov.b32 	%f32, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r29, %f33;
	// begin inline asm
	@%p8 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	add.s32 	%r31, %r19, 3072;
	// begin inline asm
	@%p7 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r30;
	shfl.sync.bfly.b32	%r83, %r30, 4, 31, -1;
	mov.b32 	%f35, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f36;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f37, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f38;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f39, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f40;
	// begin inline asm
	@%p8 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r88, %r66, %r64;
	ld.shared.u32 	%r35, [%r88];
	ld.shared.u32 	%r36, [%r88+32];
	ld.shared.u32 	%r37, [%r88+64];
	ld.shared.u32 	%r38, [%r88+96];
$L__tmp2:
	.loc	1 41 18                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:41:18
	bar.sync 	0;
	mad.lo.s32 	%r34, %r47, -28, %r88;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r89, %r48, 2;
	add.s32 	%r90, %r66, %r89;
	ld.shared.u32 	%r40, [%r90];
	mov.b32 	%r41, 1090519040;
	// begin inline asm
	div.full.f32 %r42, %r40, %r41;
	// end inline asm
	.loc	1 44 4                          // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:44:4
	bar.sync 	0;
	.loc	1 45 28                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:45:28
	mul.wide.s32 	%rd8, %r50, 4;
	add.s64 	%rd3, %rd4, %rd8;
	.loc	1 45 40                         // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:45:40
	and.b32  	%r91, %r44, 128;
	setp.eq.s32 	%p16, %r91, 0;
	// begin inline asm
	@%p16 st.global.b32 [ %rd3 + 0 ], { %r42 };
	// end inline asm
	.loc	1 45 4                          // cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py:45:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/da/cdabaftt3e4bnd3ey2w7mnpdav55qsh3zlxjjolpwrebvvuyhkgx.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 179                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xac DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 97
.b8 98
.b8 97
.b8 102
.b8 116
.b8 116
.b8 51
.b8 101
.b8 52
.b8 98
.b8 110
.b8 100
.b8 51
.b8 101
.b8 121
.b8 50
.b8 119
.b8 55
.b8 109
.b8 110
.b8 112
.b8 100
.b8 97
.b8 118
.b8 53
.b8 53
.b8 113
.b8 115
.b8 104
.b8 51
.b8 122
.b8 108
.b8 120
.b8 106
.b8 106
.b8 111
.b8 108
.b8 112
.b8 119
.b8 114
.b8 101
.b8 98
.b8 118
.b8 118
.b8 117
.b8 121
.b8 104
.b8 107
.b8 103
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x25 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 110
.b8 101
.b8 119
.b8 95
.b8 122
.b8 101
.b8 114
.b8 111
.b8 115
.b8 95
.b8 50
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
