; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 5, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 3, !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = or disjoint i32 %10, 16, !dbg !12
  %12 = shl i32 %8, 2, !dbg !12
  %13 = and i32 %12, 28, !dbg !12
  %14 = or disjoint i32 %7, %10, !dbg !13
  %15 = or disjoint i32 %7, %11, !dbg !13
  %16 = icmp slt i32 %14, 32, !dbg !14
  %17 = icmp slt i32 %15, 32, !dbg !14
  %18 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %19 = shl i32 %18, 5, !dbg !16
  %20 = or disjoint i32 %19, %13, !dbg !17
  %21 = icmp slt i32 %20, 6144, !dbg !18
  %22 = mul i32 %14, 6144, !dbg !19
  %23 = mul i32 %15, 6144, !dbg !19
  %24 = add i32 %20, %22, !dbg !20
  %25 = add i32 %20, %23, !dbg !20
  %26 = sext i32 %24 to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !21
  %28 = sext i32 %25 to i64, !dbg !21
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !21
  %30 = and i1 %16, %21, !dbg !22
  %31 = and i1 %17, %21, !dbg !22
  %32 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %27, i1 %30) #4, !dbg !23
  %33 = extractvalue { i32, i32, i32, i32 } %32, 0, !dbg !23
  %34 = extractvalue { i32, i32, i32, i32 } %32, 1, !dbg !23
  %35 = extractvalue { i32, i32, i32, i32 } %32, 2, !dbg !23
  %36 = extractvalue { i32, i32, i32, i32 } %32, 3, !dbg !23
  %37 = bitcast i32 %33 to float, !dbg !23
  %38 = bitcast i32 %34 to float, !dbg !23
  %39 = bitcast i32 %35 to float, !dbg !23
  %40 = bitcast i32 %36 to float, !dbg !23
  %41 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %29, i1 %31) #4, !dbg !23
  %42 = extractvalue { i32, i32, i32, i32 } %41, 0, !dbg !23
  %43 = extractvalue { i32, i32, i32, i32 } %41, 1, !dbg !23
  %44 = extractvalue { i32, i32, i32, i32 } %41, 2, !dbg !23
  %45 = extractvalue { i32, i32, i32, i32 } %41, 3, !dbg !23
  %46 = bitcast i32 %42 to float, !dbg !23
  %47 = bitcast i32 %43 to float, !dbg !23
  %48 = bitcast i32 %44 to float, !dbg !23
  %49 = bitcast i32 %45 to float, !dbg !23
  %50 = fmul float %37, %37, !dbg !24
  %51 = fmul float %38, %38, !dbg !24
  %52 = fmul float %39, %39, !dbg !24
  %53 = fmul float %40, %40, !dbg !24
  %54 = fmul float %46, %46, !dbg !24
  %55 = fmul float %47, %47, !dbg !24
  %56 = fmul float %48, %48, !dbg !24
  %57 = fmul float %49, %49, !dbg !24
  %58 = fmul float %50, %37, !dbg !25
  %59 = fmul float %51, %38, !dbg !25
  %60 = fmul float %52, %39, !dbg !25
  %61 = fmul float %53, %40, !dbg !25
  %62 = fmul float %54, %46, !dbg !25
  %63 = fmul float %55, %47, !dbg !25
  %64 = fmul float %56, %48, !dbg !25
  %65 = fmul float %57, %49, !dbg !25
  %66 = fmul float %58, 0x3FA6E4E260000000, !dbg !26
  %67 = fmul float %59, 0x3FA6E4E260000000, !dbg !26
  %68 = fmul float %60, 0x3FA6E4E260000000, !dbg !26
  %69 = fmul float %61, 0x3FA6E4E260000000, !dbg !26
  %70 = fmul float %62, 0x3FA6E4E260000000, !dbg !26
  %71 = fmul float %63, 0x3FA6E4E260000000, !dbg !26
  %72 = fmul float %64, 0x3FA6E4E260000000, !dbg !26
  %73 = fmul float %65, 0x3FA6E4E260000000, !dbg !26
  %74 = fadd float %66, %37, !dbg !27
  %75 = fadd float %67, %38, !dbg !27
  %76 = fadd float %68, %39, !dbg !27
  %77 = fadd float %69, %40, !dbg !27
  %78 = fadd float %70, %46, !dbg !27
  %79 = fadd float %71, %47, !dbg !27
  %80 = fadd float %72, %48, !dbg !27
  %81 = fadd float %73, %49, !dbg !27
  %82 = fmul float %74, 0x3FE9884540000000, !dbg !28
  %83 = fmul float %75, 0x3FE9884540000000, !dbg !28
  %84 = fmul float %76, 0x3FE9884540000000, !dbg !28
  %85 = fmul float %77, 0x3FE9884540000000, !dbg !28
  %86 = fmul float %78, 0x3FE9884540000000, !dbg !28
  %87 = fmul float %79, 0x3FE9884540000000, !dbg !28
  %88 = fmul float %80, 0x3FE9884540000000, !dbg !28
  %89 = fmul float %81, 0x3FE9884540000000, !dbg !28
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i = icmp eq i32 %90, 0, !dbg !29
  %91 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #4, !dbg !29
  %92 = tail call float @llvm.nvvm.fabs.f(float %82) #4, !dbg !29
  %.01.i = select i1 %.not.i, float %92, float %91, !dbg !29
  %93 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !29
  br i1 %93, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !29

__internal_fmad.exit1.i:                          ; preds = %5
  %94 = fmul float %.01.i, 0x4007154760000000, !dbg !29
  %95 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %94) #4, !dbg !29
  %96 = fadd float %95, 1.000000e+00, !dbg !29
  %97 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %96) #5, !dbg !29, !srcloc !30
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i = icmp eq i32 %98, 0, !dbg !29
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %97, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %97, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i = select i1 %.not6.i, float %100, float %99, !dbg !29
  %101 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !29
  %s.0.i = select i1 %101, float 1.000000e+00, float %.03.i, !dbg !29
  %102 = bitcast float %s.0.i to i32, !dbg !29
  %103 = bitcast float %82 to i32, !dbg !29
  %104 = and i32 %103, -2147483648, !dbg !29
  %105 = or i32 %104, %102, !dbg !29
  %106 = bitcast i32 %105 to float, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__internal_fmad.exit3.i:                          ; preds = %5
  %107 = fmul float %82, %82, !dbg !29
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i = icmp eq i32 %108, 0, !dbg !29
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %107, float 0xBFAAC795C0000000) #4, !dbg !29
  %110 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %107, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i = select i1 %.not1.i, float %110, float %109, !dbg !29
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i = icmp eq i32 %111, 0, !dbg !29
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %107, float 0x3FC10B2820000000) #4, !dbg !29
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %107, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i = select i1 %.not2.i, float %113, float %112, !dbg !29
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i = icmp eq i32 %114, 0, !dbg !29
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %107, float 0xBFD5553DA0000000) #4, !dbg !29
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %107, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i = select i1 %.not3.i, float %116, float %115, !dbg !29
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i = icmp eq i32 %117, 0, !dbg !29
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %107, float 0.000000e+00) #4, !dbg !29
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %107, float 0.000000e+00) #4, !dbg !29
  %.04.i = select i1 %.not4.i, float %119, float %118, !dbg !29
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i = icmp eq i32 %120, 0, !dbg !29
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %82, float %82) #4, !dbg !29
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %82, float %82) #4, !dbg !29
  %.02.i = select i1 %.not5.i, float %122, float %121, !dbg !29
  br label %__nv_tanhf.exit, !dbg !29

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %106, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !29
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i15 = icmp eq i32 %123, 0, !dbg !29
  %124 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #4, !dbg !29
  %125 = tail call float @llvm.nvvm.fabs.f(float %83) #4, !dbg !29
  %.01.i16 = select i1 %.not.i15, float %125, float %124, !dbg !29
  %126 = fcmp ult float %.01.i16, 0x3FE3333340000000, !dbg !29
  br i1 %126, label %__internal_fmad.exit3.i22, label %__internal_fmad.exit1.i17, !dbg !29

__internal_fmad.exit1.i17:                        ; preds = %__nv_tanhf.exit
  %127 = fmul float %.01.i16, 0x4007154760000000, !dbg !29
  %128 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %127) #4, !dbg !29
  %129 = fadd float %128, 1.000000e+00, !dbg !29
  %130 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %129) #5, !dbg !29, !srcloc !30
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i18 = icmp eq i32 %131, 0, !dbg !29
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %130, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %130, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i19 = select i1 %.not6.i18, float %133, float %132, !dbg !29
  %134 = fcmp oge float %.01.i16, 0x4022059680000000, !dbg !29
  %s.0.i20 = select i1 %134, float 1.000000e+00, float %.03.i19, !dbg !29
  %135 = bitcast float %s.0.i20 to i32, !dbg !29
  %136 = bitcast float %83 to i32, !dbg !29
  %137 = and i32 %136, -2147483648, !dbg !29
  %138 = or i32 %137, %135, !dbg !29
  %139 = bitcast i32 %138 to float, !dbg !29
  br label %__nv_tanhf.exit33, !dbg !29

__internal_fmad.exit3.i22:                        ; preds = %__nv_tanhf.exit
  %140 = fmul float %83, %83, !dbg !29
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i23 = icmp eq i32 %141, 0, !dbg !29
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %140, float 0xBFAAC795C0000000) #4, !dbg !29
  %143 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %140, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i24 = select i1 %.not1.i23, float %143, float %142, !dbg !29
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i25 = icmp eq i32 %144, 0, !dbg !29
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i24, float %140, float 0x3FC10B2820000000) #4, !dbg !29
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i24, float %140, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i26 = select i1 %.not2.i25, float %146, float %145, !dbg !29
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i27 = icmp eq i32 %147, 0, !dbg !29
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i26, float %140, float 0xBFD5553DA0000000) #4, !dbg !29
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i26, float %140, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i28 = select i1 %.not3.i27, float %149, float %148, !dbg !29
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i29 = icmp eq i32 %150, 0, !dbg !29
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i28, float %140, float 0.000000e+00) #4, !dbg !29
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i28, float %140, float 0.000000e+00) #4, !dbg !29
  %.04.i30 = select i1 %.not4.i29, float %152, float %151, !dbg !29
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i31 = icmp eq i32 %153, 0, !dbg !29
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i30, float %83, float %83) #4, !dbg !29
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i30, float %83, float %83) #4, !dbg !29
  %.02.i32 = select i1 %.not5.i31, float %155, float %154, !dbg !29
  br label %__nv_tanhf.exit33, !dbg !29

__nv_tanhf.exit33:                                ; preds = %__internal_fmad.exit1.i17, %__internal_fmad.exit3.i22
  %s.1.i21 = phi float [ %139, %__internal_fmad.exit1.i17 ], [ %.02.i32, %__internal_fmad.exit3.i22 ], !dbg !29
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i34 = icmp eq i32 %156, 0, !dbg !29
  %157 = tail call float @llvm.nvvm.fabs.ftz.f(float %84) #4, !dbg !29
  %158 = tail call float @llvm.nvvm.fabs.f(float %84) #4, !dbg !29
  %.01.i35 = select i1 %.not.i34, float %158, float %157, !dbg !29
  %159 = fcmp ult float %.01.i35, 0x3FE3333340000000, !dbg !29
  br i1 %159, label %__internal_fmad.exit3.i41, label %__internal_fmad.exit1.i36, !dbg !29

__internal_fmad.exit1.i36:                        ; preds = %__nv_tanhf.exit33
  %160 = fmul float %.01.i35, 0x4007154760000000, !dbg !29
  %161 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %160) #4, !dbg !29
  %162 = fadd float %161, 1.000000e+00, !dbg !29
  %163 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %162) #5, !dbg !29, !srcloc !30
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i37 = icmp eq i32 %164, 0, !dbg !29
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %163, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %163, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i38 = select i1 %.not6.i37, float %166, float %165, !dbg !29
  %167 = fcmp oge float %.01.i35, 0x4022059680000000, !dbg !29
  %s.0.i39 = select i1 %167, float 1.000000e+00, float %.03.i38, !dbg !29
  %168 = bitcast float %s.0.i39 to i32, !dbg !29
  %169 = bitcast float %84 to i32, !dbg !29
  %170 = and i32 %169, -2147483648, !dbg !29
  %171 = or i32 %170, %168, !dbg !29
  %172 = bitcast i32 %171 to float, !dbg !29
  br label %__nv_tanhf.exit52, !dbg !29

__internal_fmad.exit3.i41:                        ; preds = %__nv_tanhf.exit33
  %173 = fmul float %84, %84, !dbg !29
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i42 = icmp eq i32 %174, 0, !dbg !29
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %173, float 0xBFAAC795C0000000) #4, !dbg !29
  %176 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %173, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i43 = select i1 %.not1.i42, float %176, float %175, !dbg !29
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i44 = icmp eq i32 %177, 0, !dbg !29
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i43, float %173, float 0x3FC10B2820000000) #4, !dbg !29
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i43, float %173, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i45 = select i1 %.not2.i44, float %179, float %178, !dbg !29
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i46 = icmp eq i32 %180, 0, !dbg !29
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i45, float %173, float 0xBFD5553DA0000000) #4, !dbg !29
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i45, float %173, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i47 = select i1 %.not3.i46, float %182, float %181, !dbg !29
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i48 = icmp eq i32 %183, 0, !dbg !29
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i47, float %173, float 0.000000e+00) #4, !dbg !29
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i47, float %173, float 0.000000e+00) #4, !dbg !29
  %.04.i49 = select i1 %.not4.i48, float %185, float %184, !dbg !29
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i50 = icmp eq i32 %186, 0, !dbg !29
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i49, float %84, float %84) #4, !dbg !29
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i49, float %84, float %84) #4, !dbg !29
  %.02.i51 = select i1 %.not5.i50, float %188, float %187, !dbg !29
  br label %__nv_tanhf.exit52, !dbg !29

__nv_tanhf.exit52:                                ; preds = %__internal_fmad.exit1.i36, %__internal_fmad.exit3.i41
  %s.1.i40 = phi float [ %172, %__internal_fmad.exit1.i36 ], [ %.02.i51, %__internal_fmad.exit3.i41 ], !dbg !29
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i53 = icmp eq i32 %189, 0, !dbg !29
  %190 = tail call float @llvm.nvvm.fabs.ftz.f(float %85) #4, !dbg !29
  %191 = tail call float @llvm.nvvm.fabs.f(float %85) #4, !dbg !29
  %.01.i54 = select i1 %.not.i53, float %191, float %190, !dbg !29
  %192 = fcmp ult float %.01.i54, 0x3FE3333340000000, !dbg !29
  br i1 %192, label %__internal_fmad.exit3.i60, label %__internal_fmad.exit1.i55, !dbg !29

__internal_fmad.exit1.i55:                        ; preds = %__nv_tanhf.exit52
  %193 = fmul float %.01.i54, 0x4007154760000000, !dbg !29
  %194 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %193) #4, !dbg !29
  %195 = fadd float %194, 1.000000e+00, !dbg !29
  %196 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %195) #5, !dbg !29, !srcloc !30
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i56 = icmp eq i32 %197, 0, !dbg !29
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %196, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %196, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i57 = select i1 %.not6.i56, float %199, float %198, !dbg !29
  %200 = fcmp oge float %.01.i54, 0x4022059680000000, !dbg !29
  %s.0.i58 = select i1 %200, float 1.000000e+00, float %.03.i57, !dbg !29
  %201 = bitcast float %s.0.i58 to i32, !dbg !29
  %202 = bitcast float %85 to i32, !dbg !29
  %203 = and i32 %202, -2147483648, !dbg !29
  %204 = or i32 %203, %201, !dbg !29
  %205 = bitcast i32 %204 to float, !dbg !29
  br label %__nv_tanhf.exit71, !dbg !29

__internal_fmad.exit3.i60:                        ; preds = %__nv_tanhf.exit52
  %206 = fmul float %85, %85, !dbg !29
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i61 = icmp eq i32 %207, 0, !dbg !29
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %206, float 0xBFAAC795C0000000) #4, !dbg !29
  %209 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %206, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i62 = select i1 %.not1.i61, float %209, float %208, !dbg !29
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i63 = icmp eq i32 %210, 0, !dbg !29
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i62, float %206, float 0x3FC10B2820000000) #4, !dbg !29
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i62, float %206, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i64 = select i1 %.not2.i63, float %212, float %211, !dbg !29
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i65 = icmp eq i32 %213, 0, !dbg !29
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i64, float %206, float 0xBFD5553DA0000000) #4, !dbg !29
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i64, float %206, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i66 = select i1 %.not3.i65, float %215, float %214, !dbg !29
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i67 = icmp eq i32 %216, 0, !dbg !29
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i66, float %206, float 0.000000e+00) #4, !dbg !29
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i66, float %206, float 0.000000e+00) #4, !dbg !29
  %.04.i68 = select i1 %.not4.i67, float %218, float %217, !dbg !29
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i69 = icmp eq i32 %219, 0, !dbg !29
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i68, float %85, float %85) #4, !dbg !29
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i68, float %85, float %85) #4, !dbg !29
  %.02.i70 = select i1 %.not5.i69, float %221, float %220, !dbg !29
  br label %__nv_tanhf.exit71, !dbg !29

__nv_tanhf.exit71:                                ; preds = %__internal_fmad.exit1.i55, %__internal_fmad.exit3.i60
  %s.1.i59 = phi float [ %205, %__internal_fmad.exit1.i55 ], [ %.02.i70, %__internal_fmad.exit3.i60 ], !dbg !29
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i72 = icmp eq i32 %222, 0, !dbg !29
  %223 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #4, !dbg !29
  %224 = tail call float @llvm.nvvm.fabs.f(float %86) #4, !dbg !29
  %.01.i73 = select i1 %.not.i72, float %224, float %223, !dbg !29
  %225 = fcmp ult float %.01.i73, 0x3FE3333340000000, !dbg !29
  br i1 %225, label %__internal_fmad.exit3.i79, label %__internal_fmad.exit1.i74, !dbg !29

__internal_fmad.exit1.i74:                        ; preds = %__nv_tanhf.exit71
  %226 = fmul float %.01.i73, 0x4007154760000000, !dbg !29
  %227 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %226) #4, !dbg !29
  %228 = fadd float %227, 1.000000e+00, !dbg !29
  %229 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %228) #5, !dbg !29, !srcloc !30
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i75 = icmp eq i32 %230, 0, !dbg !29
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %229, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %229, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i76 = select i1 %.not6.i75, float %232, float %231, !dbg !29
  %233 = fcmp oge float %.01.i73, 0x4022059680000000, !dbg !29
  %s.0.i77 = select i1 %233, float 1.000000e+00, float %.03.i76, !dbg !29
  %234 = bitcast float %s.0.i77 to i32, !dbg !29
  %235 = bitcast float %86 to i32, !dbg !29
  %236 = and i32 %235, -2147483648, !dbg !29
  %237 = or i32 %236, %234, !dbg !29
  %238 = bitcast i32 %237 to float, !dbg !29
  br label %__nv_tanhf.exit90, !dbg !29

__internal_fmad.exit3.i79:                        ; preds = %__nv_tanhf.exit71
  %239 = fmul float %86, %86, !dbg !29
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i80 = icmp eq i32 %240, 0, !dbg !29
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %239, float 0xBFAAC795C0000000) #4, !dbg !29
  %242 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %239, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i81 = select i1 %.not1.i80, float %242, float %241, !dbg !29
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i82 = icmp eq i32 %243, 0, !dbg !29
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i81, float %239, float 0x3FC10B2820000000) #4, !dbg !29
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i81, float %239, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i83 = select i1 %.not2.i82, float %245, float %244, !dbg !29
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i84 = icmp eq i32 %246, 0, !dbg !29
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i83, float %239, float 0xBFD5553DA0000000) #4, !dbg !29
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i83, float %239, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i85 = select i1 %.not3.i84, float %248, float %247, !dbg !29
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i86 = icmp eq i32 %249, 0, !dbg !29
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i85, float %239, float 0.000000e+00) #4, !dbg !29
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i85, float %239, float 0.000000e+00) #4, !dbg !29
  %.04.i87 = select i1 %.not4.i86, float %251, float %250, !dbg !29
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i88 = icmp eq i32 %252, 0, !dbg !29
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i87, float %86, float %86) #4, !dbg !29
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i87, float %86, float %86) #4, !dbg !29
  %.02.i89 = select i1 %.not5.i88, float %254, float %253, !dbg !29
  br label %__nv_tanhf.exit90, !dbg !29

__nv_tanhf.exit90:                                ; preds = %__internal_fmad.exit1.i74, %__internal_fmad.exit3.i79
  %s.1.i78 = phi float [ %238, %__internal_fmad.exit1.i74 ], [ %.02.i89, %__internal_fmad.exit3.i79 ], !dbg !29
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i91 = icmp eq i32 %255, 0, !dbg !29
  %256 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #4, !dbg !29
  %257 = tail call float @llvm.nvvm.fabs.f(float %87) #4, !dbg !29
  %.01.i92 = select i1 %.not.i91, float %257, float %256, !dbg !29
  %258 = fcmp ult float %.01.i92, 0x3FE3333340000000, !dbg !29
  br i1 %258, label %__internal_fmad.exit3.i98, label %__internal_fmad.exit1.i93, !dbg !29

__internal_fmad.exit1.i93:                        ; preds = %__nv_tanhf.exit90
  %259 = fmul float %.01.i92, 0x4007154760000000, !dbg !29
  %260 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %259) #4, !dbg !29
  %261 = fadd float %260, 1.000000e+00, !dbg !29
  %262 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %261) #5, !dbg !29, !srcloc !30
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i94 = icmp eq i32 %263, 0, !dbg !29
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %262, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %262, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i95 = select i1 %.not6.i94, float %265, float %264, !dbg !29
  %266 = fcmp oge float %.01.i92, 0x4022059680000000, !dbg !29
  %s.0.i96 = select i1 %266, float 1.000000e+00, float %.03.i95, !dbg !29
  %267 = bitcast float %s.0.i96 to i32, !dbg !29
  %268 = bitcast float %87 to i32, !dbg !29
  %269 = and i32 %268, -2147483648, !dbg !29
  %270 = or i32 %269, %267, !dbg !29
  %271 = bitcast i32 %270 to float, !dbg !29
  br label %__nv_tanhf.exit109, !dbg !29

__internal_fmad.exit3.i98:                        ; preds = %__nv_tanhf.exit90
  %272 = fmul float %87, %87, !dbg !29
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i99 = icmp eq i32 %273, 0, !dbg !29
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %272, float 0xBFAAC795C0000000) #4, !dbg !29
  %275 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %272, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i100 = select i1 %.not1.i99, float %275, float %274, !dbg !29
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i101 = icmp eq i32 %276, 0, !dbg !29
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i100, float %272, float 0x3FC10B2820000000) #4, !dbg !29
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i100, float %272, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i102 = select i1 %.not2.i101, float %278, float %277, !dbg !29
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i103 = icmp eq i32 %279, 0, !dbg !29
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i102, float %272, float 0xBFD5553DA0000000) #4, !dbg !29
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i102, float %272, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i104 = select i1 %.not3.i103, float %281, float %280, !dbg !29
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i105 = icmp eq i32 %282, 0, !dbg !29
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i104, float %272, float 0.000000e+00) #4, !dbg !29
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i104, float %272, float 0.000000e+00) #4, !dbg !29
  %.04.i106 = select i1 %.not4.i105, float %284, float %283, !dbg !29
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i107 = icmp eq i32 %285, 0, !dbg !29
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i106, float %87, float %87) #4, !dbg !29
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i106, float %87, float %87) #4, !dbg !29
  %.02.i108 = select i1 %.not5.i107, float %287, float %286, !dbg !29
  br label %__nv_tanhf.exit109, !dbg !29

__nv_tanhf.exit109:                               ; preds = %__internal_fmad.exit1.i93, %__internal_fmad.exit3.i98
  %s.1.i97 = phi float [ %271, %__internal_fmad.exit1.i93 ], [ %.02.i108, %__internal_fmad.exit3.i98 ], !dbg !29
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i110 = icmp eq i32 %288, 0, !dbg !29
  %289 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !29
  %290 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !29
  %.01.i111 = select i1 %.not.i110, float %290, float %289, !dbg !29
  %291 = fcmp ult float %.01.i111, 0x3FE3333340000000, !dbg !29
  br i1 %291, label %__internal_fmad.exit3.i117, label %__internal_fmad.exit1.i112, !dbg !29

__internal_fmad.exit1.i112:                       ; preds = %__nv_tanhf.exit109
  %292 = fmul float %.01.i111, 0x4007154760000000, !dbg !29
  %293 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %292) #4, !dbg !29
  %294 = fadd float %293, 1.000000e+00, !dbg !29
  %295 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %294) #5, !dbg !29, !srcloc !30
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i113 = icmp eq i32 %296, 0, !dbg !29
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %295, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %295, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i114 = select i1 %.not6.i113, float %298, float %297, !dbg !29
  %299 = fcmp oge float %.01.i111, 0x4022059680000000, !dbg !29
  %s.0.i115 = select i1 %299, float 1.000000e+00, float %.03.i114, !dbg !29
  %300 = bitcast float %s.0.i115 to i32, !dbg !29
  %301 = bitcast float %88 to i32, !dbg !29
  %302 = and i32 %301, -2147483648, !dbg !29
  %303 = or i32 %302, %300, !dbg !29
  %304 = bitcast i32 %303 to float, !dbg !29
  br label %__nv_tanhf.exit128, !dbg !29

__internal_fmad.exit3.i117:                       ; preds = %__nv_tanhf.exit109
  %305 = fmul float %88, %88, !dbg !29
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i118 = icmp eq i32 %306, 0, !dbg !29
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %305, float 0xBFAAC795C0000000) #4, !dbg !29
  %308 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %305, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i119 = select i1 %.not1.i118, float %308, float %307, !dbg !29
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i120 = icmp eq i32 %309, 0, !dbg !29
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i119, float %305, float 0x3FC10B2820000000) #4, !dbg !29
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i119, float %305, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i121 = select i1 %.not2.i120, float %311, float %310, !dbg !29
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i122 = icmp eq i32 %312, 0, !dbg !29
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i121, float %305, float 0xBFD5553DA0000000) #4, !dbg !29
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i121, float %305, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i123 = select i1 %.not3.i122, float %314, float %313, !dbg !29
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i124 = icmp eq i32 %315, 0, !dbg !29
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i123, float %305, float 0.000000e+00) #4, !dbg !29
  %317 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i123, float %305, float 0.000000e+00) #4, !dbg !29
  %.04.i125 = select i1 %.not4.i124, float %317, float %316, !dbg !29
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i126 = icmp eq i32 %318, 0, !dbg !29
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i125, float %88, float %88) #4, !dbg !29
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i125, float %88, float %88) #4, !dbg !29
  %.02.i127 = select i1 %.not5.i126, float %320, float %319, !dbg !29
  br label %__nv_tanhf.exit128, !dbg !29

__nv_tanhf.exit128:                               ; preds = %__internal_fmad.exit1.i112, %__internal_fmad.exit3.i117
  %s.1.i116 = phi float [ %304, %__internal_fmad.exit1.i112 ], [ %.02.i127, %__internal_fmad.exit3.i117 ], !dbg !29
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i129 = icmp eq i32 %321, 0, !dbg !29
  %322 = tail call float @llvm.nvvm.fabs.ftz.f(float %89) #4, !dbg !29
  %323 = tail call float @llvm.nvvm.fabs.f(float %89) #4, !dbg !29
  %.01.i130 = select i1 %.not.i129, float %323, float %322, !dbg !29
  %324 = fcmp ult float %.01.i130, 0x3FE3333340000000, !dbg !29
  br i1 %324, label %__internal_fmad.exit3.i136, label %__internal_fmad.exit1.i131, !dbg !29

__internal_fmad.exit1.i131:                       ; preds = %__nv_tanhf.exit128
  %325 = fmul float %.01.i130, 0x4007154760000000, !dbg !29
  %326 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %325) #4, !dbg !29
  %327 = fadd float %326, 1.000000e+00, !dbg !29
  %328 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %327) #5, !dbg !29, !srcloc !30
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i132 = icmp eq i32 %329, 0, !dbg !29
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %328, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %328, float -2.000000e+00, float 1.000000e+00) #4, !dbg !29
  %.03.i133 = select i1 %.not6.i132, float %331, float %330, !dbg !29
  %332 = fcmp oge float %.01.i130, 0x4022059680000000, !dbg !29
  %s.0.i134 = select i1 %332, float 1.000000e+00, float %.03.i133, !dbg !29
  %333 = bitcast float %s.0.i134 to i32, !dbg !29
  %334 = bitcast float %89 to i32, !dbg !29
  %335 = and i32 %334, -2147483648, !dbg !29
  %336 = or i32 %335, %333, !dbg !29
  %337 = bitcast i32 %336 to float, !dbg !29
  br label %__nv_tanhf.exit147, !dbg !29

__internal_fmad.exit3.i136:                       ; preds = %__nv_tanhf.exit128
  %338 = fmul float %89, %89, !dbg !29
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i137 = icmp eq i32 %339, 0, !dbg !29
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %338, float 0xBFAAC795C0000000) #4, !dbg !29
  %341 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %338, float 0xBFAAC795C0000000) #4, !dbg !29
  %.06.i138 = select i1 %.not1.i137, float %341, float %340, !dbg !29
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i139 = icmp eq i32 %342, 0, !dbg !29
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %338, float 0x3FC10B2820000000) #4, !dbg !29
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %338, float 0x3FC10B2820000000) #4, !dbg !29
  %.05.i140 = select i1 %.not2.i139, float %344, float %343, !dbg !29
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i141 = icmp eq i32 %345, 0, !dbg !29
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i140, float %338, float 0xBFD5553DA0000000) #4, !dbg !29
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i140, float %338, float 0xBFD5553DA0000000) #4, !dbg !29
  %.0.i142 = select i1 %.not3.i141, float %347, float %346, !dbg !29
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i143 = icmp eq i32 %348, 0, !dbg !29
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i142, float %338, float 0.000000e+00) #4, !dbg !29
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i142, float %338, float 0.000000e+00) #4, !dbg !29
  %.04.i144 = select i1 %.not4.i143, float %350, float %349, !dbg !29
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i145 = icmp eq i32 %351, 0, !dbg !29
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i144, float %89, float %89) #4, !dbg !29
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i144, float %89, float %89) #4, !dbg !29
  %.02.i146 = select i1 %.not5.i145, float %353, float %352, !dbg !29
  br label %__nv_tanhf.exit147, !dbg !29

__nv_tanhf.exit147:                               ; preds = %__internal_fmad.exit1.i131, %__internal_fmad.exit3.i136
  %s.1.i135 = phi float [ %337, %__internal_fmad.exit1.i131 ], [ %.02.i146, %__internal_fmad.exit3.i136 ], !dbg !29
  %354 = or disjoint i32 %19, %11, !dbg !17
  %355 = icmp slt i32 %354, 6144, !dbg !18
  %356 = or disjoint i32 %7, %13, !dbg !13
  %357 = icmp slt i32 %356, 32, !dbg !14
  %358 = and i1 %357, %355, !dbg !22
  %359 = or disjoint i32 %19, %10, !dbg !17
  %360 = icmp slt i32 %359, 6144, !dbg !18
  %361 = and i1 %357, %360, !dbg !22
  %.frozen = freeze i32 %356, !dbg !31
  %362 = sdiv i32 %.frozen, 8, !dbg !31
  %363 = mul i32 %362, 8, !dbg !32
  %.decomposed = sub i32 %.frozen, %363, !dbg !32
  %364 = fmul float %37, 5.000000e-01, !dbg !33
  %365 = fmul float %38, 5.000000e-01, !dbg !33
  %366 = fmul float %39, 5.000000e-01, !dbg !33
  %367 = fmul float %40, 5.000000e-01, !dbg !33
  %368 = fmul float %46, 5.000000e-01, !dbg !33
  %369 = fmul float %47, 5.000000e-01, !dbg !33
  %370 = fmul float %48, 5.000000e-01, !dbg !33
  %371 = fmul float %49, 5.000000e-01, !dbg !33
  %372 = fadd float %s.1.i, 1.000000e+00, !dbg !34
  %373 = fadd float %s.1.i21, 1.000000e+00, !dbg !34
  %374 = fadd float %s.1.i40, 1.000000e+00, !dbg !34
  %375 = fadd float %s.1.i59, 1.000000e+00, !dbg !34
  %376 = fadd float %s.1.i78, 1.000000e+00, !dbg !34
  %377 = fadd float %s.1.i97, 1.000000e+00, !dbg !34
  %378 = fadd float %s.1.i116, 1.000000e+00, !dbg !34
  %379 = fadd float %s.1.i135, 1.000000e+00, !dbg !34
  %380 = fmul float %364, %372, !dbg !35
  %381 = fmul float %365, %373, !dbg !35
  %382 = fmul float %366, %374, !dbg !35
  %383 = fmul float %367, %375, !dbg !35
  %384 = fmul float %368, %376, !dbg !35
  %385 = fmul float %369, %377, !dbg !35
  %386 = fmul float %370, %378, !dbg !35
  %387 = fmul float %371, %379, !dbg !35
  %388 = shl i32 %359, 3, !dbg !36
  %389 = shl i32 %354, 3, !dbg !36
  %390 = mul i32 %362, 49152, !dbg !37
  %391 = add i32 %390, %.decomposed, !dbg !38
  %392 = add i32 %391, %388, !dbg !39
  %393 = add i32 %391, %389, !dbg !39
  %394 = sext i32 %392 to i64, !dbg !40
  %395 = getelementptr float, ptr addrspace(1) %1, i64 %394, !dbg !40
  %396 = sext i32 %393 to i64, !dbg !40
  %397 = getelementptr float, ptr addrspace(1) %1, i64 %396, !dbg !40
  %398 = shl i32 %8, 7, !dbg !41
  %399 = and i32 %398, 896, !dbg !41
  %400 = or disjoint i32 %399, %10, !dbg !41
  %401 = and i32 %12, 508, !dbg !41
  %402 = lshr exact i32 %399, 1, !dbg !41
  %403 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %402, !dbg !41
  %404 = getelementptr float, ptr addrspace(3) %403, i32 %400, !dbg !41
  %405 = bitcast float %s.1.i to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %404, <1 x i32> %405, i1 true) #4, !dbg !41
  %406 = or disjoint i32 %400, 32, !dbg !41
  %407 = lshr i32 %406, 3, !dbg !41
  %408 = and i32 %407, 116, !dbg !41
  %409 = getelementptr float, ptr addrspace(3) @global_smem, i32 %408, !dbg !41
  %410 = getelementptr float, ptr addrspace(3) %409, i32 %406, !dbg !41
  %411 = bitcast float %s.1.i21 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %410, <1 x i32> %411, i1 true) #4, !dbg !41
  %412 = or disjoint i32 %400, 64, !dbg !41
  %413 = lshr i32 %412, 3, !dbg !41
  %414 = and i32 %413, 120, !dbg !41
  %415 = getelementptr float, ptr addrspace(3) @global_smem, i32 %414, !dbg !41
  %416 = getelementptr float, ptr addrspace(3) %415, i32 %412, !dbg !41
  %417 = bitcast float %s.1.i40 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %416, <1 x i32> %417, i1 true) #4, !dbg !41
  %418 = or disjoint i32 %400, 96, !dbg !41
  %419 = lshr i32 %418, 3, !dbg !41
  %420 = and i32 %419, 124, !dbg !41
  %421 = getelementptr float, ptr addrspace(3) @global_smem, i32 %420, !dbg !41
  %422 = getelementptr float, ptr addrspace(3) %421, i32 %418, !dbg !41
  %423 = bitcast float %s.1.i59 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %422, <1 x i32> %423, i1 true) #4, !dbg !41
  %424 = or disjoint i32 %400, 16, !dbg !41
  %425 = getelementptr float, ptr addrspace(3) %403, i32 %424, !dbg !41
  %426 = bitcast float %s.1.i78 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %425, <1 x i32> %426, i1 true) #4, !dbg !41
  %427 = or disjoint i32 %400, 48, !dbg !41
  %428 = lshr i32 %427, 3, !dbg !41
  %429 = and i32 %428, 116, !dbg !41
  %430 = getelementptr float, ptr addrspace(3) @global_smem, i32 %429, !dbg !41
  %431 = getelementptr float, ptr addrspace(3) %430, i32 %427, !dbg !41
  %432 = bitcast float %s.1.i97 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %431, <1 x i32> %432, i1 true) #4, !dbg !41
  %433 = or disjoint i32 %400, 80, !dbg !41
  %434 = lshr i32 %433, 3, !dbg !41
  %435 = and i32 %434, 120, !dbg !41
  %436 = getelementptr float, ptr addrspace(3) @global_smem, i32 %435, !dbg !41
  %437 = getelementptr float, ptr addrspace(3) %436, i32 %433, !dbg !41
  %438 = bitcast float %s.1.i116 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %437, <1 x i32> %438, i1 true) #4, !dbg !41
  %439 = or disjoint i32 %400, 112, !dbg !41
  %440 = lshr i32 %439, 3, !dbg !41
  %441 = and i32 %440, 124, !dbg !41
  %442 = getelementptr float, ptr addrspace(3) @global_smem, i32 %441, !dbg !41
  %443 = getelementptr float, ptr addrspace(3) %442, i32 %439, !dbg !41
  %444 = bitcast float %s.1.i135 to <1 x i32>, !dbg !41
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %443, <1 x i32> %444, i1 true) #4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %445 = lshr i32 %12, 3, !dbg !41
  %446 = and i32 %445, 60, !dbg !41
  %447 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %446, !dbg !41
  %448 = getelementptr inbounds float, ptr addrspace(3) %447, i32 %401, !dbg !41
  %449 = or disjoint i32 %401, 512, !dbg !41
  %450 = lshr i32 %449, 3, !dbg !41
  %451 = and i32 %450, 124, !dbg !41
  %452 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %451, !dbg !41
  %453 = getelementptr inbounds float, ptr addrspace(3) %452, i32 %449, !dbg !41
  %454 = load <4 x i32>, ptr addrspace(3) %453, align 16, !dbg !41
  %.extract = load i32, ptr addrspace(3) %448, align 16, !dbg !41
  %455 = getelementptr inbounds i8, ptr addrspace(3) %448, i32 4, !dbg !41
  %.extract8 = load i32, ptr addrspace(3) %455, align 4, !dbg !41
  %456 = getelementptr inbounds i8, ptr addrspace(3) %448, i32 8, !dbg !41
  %.extract9 = load i32, ptr addrspace(3) %456, align 8, !dbg !41
  %457 = getelementptr inbounds i8, ptr addrspace(3) %448, i32 12, !dbg !41
  %.extract10 = load i32, ptr addrspace(3) %457, align 4, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract8, i32 %.extract9, i32 %.extract10, ptr addrspace(1) %395, i1 %361) #4, !dbg !41
  %.extract11 = extractelement <4 x i32> %454, i64 0, !dbg !41
  %.extract12 = extractelement <4 x i32> %454, i64 1, !dbg !41
  %.extract13 = extractelement <4 x i32> %454, i64 2, !dbg !41
  %.extract14 = extractelement <4 x i32> %454, i64 3, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract11, i32 %.extract12, i32 %.extract13, i32 %.extract14, ptr addrspace(1) %397, i1 %358) #4, !dbg !41
  %458 = getelementptr float, ptr addrspace(1) %2, i64 %26, !dbg !42
  %459 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !42
  %460 = bitcast float %380 to i32, !dbg !43
  %461 = bitcast float %381 to i32, !dbg !43
  %462 = bitcast float %382 to i32, !dbg !43
  %463 = bitcast float %383 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %460, i32 %461, i32 %462, i32 %463, ptr addrspace(1) %458, i1 %30) #4, !dbg !43
  %464 = bitcast float %384 to i32, !dbg !43
  %465 = bitcast float %385 to i32, !dbg !43
  %466 = bitcast float %386 to i32, !dbg !43
  %467 = bitcast float %387 to i32, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %464, i32 %465, i32 %466, i32 %467, ptr addrspace(1) %459, i1 %31) #4, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cck4ovzhk2jcyq52fqby2nzgxm4onnktbkmmqek2wgvk4wbjaelt.py", directory: "inductor_cache/ck")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_13", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 32, column: 40, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 53, scope: !7)
!23 = !DILocation(line: 32, column: 45, scope: !7)
!24 = !DILocation(line: 33, column: 18, scope: !7)
!25 = !DILocation(line: 34, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 18, scope: !7)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 26, scope: !7)
!30 = !{i32 21046}
!31 = !DILocation(line: 31, column: 19, scope: !7)
!32 = !DILocation(line: 30, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 19, scope: !7)
!35 = !DILocation(line: 45, column: 20, scope: !7)
!36 = !DILocation(line: 46, column: 32, scope: !7)
!37 = !DILocation(line: 46, column: 43, scope: !7)
!38 = !DILocation(line: 46, column: 30, scope: !7)
!39 = !DILocation(line: 46, column: 37, scope: !7)
!40 = !DILocation(line: 46, column: 25, scope: !7)
!41 = !DILocation(line: 46, column: 54, scope: !7)
!42 = !DILocation(line: 47, column: 25, scope: !7)
!43 = !DILocation(line: 47, column: 47, scope: !7)
!44 = !DILocation(line: 47, column: 4, scope: !7)
