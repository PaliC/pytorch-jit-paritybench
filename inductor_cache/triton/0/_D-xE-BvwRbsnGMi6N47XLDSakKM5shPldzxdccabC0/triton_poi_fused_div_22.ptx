//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_22 // -- Begin function triton_poi_fused_div_22
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_div_22
.visible .entry triton_poi_fused_div_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_22_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_22_param_2,
	.param .u32 triton_poi_fused_div_22_param_3,
	.param .u32 triton_poi_fused_div_22_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<57>;
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd6, [triton_poi_fused_div_22_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_div_22_param_1];
$L__tmp0:
	.loc	1 22 28                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:22:33
	shl.b32 	%r19, %r1, 8;
	ld.param.u64 	%rd8, [triton_poi_fused_div_22_param_2];
	.loc	1 23 44                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:23:44
	mov.u32 	%r20, %tid.x;
	shl.b32 	%r22, %r20, 1;
	and.b32  	%r23, %r22, 254;
	and.b32  	%r24, %r20, 127;
	or.b32  	%r25, %r24, 128;
	.loc	1 23 23                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:23:23
	or.b32  	%r26, %r19, %r23;
	or.b32  	%r27, %r19, %r24;
	or.b32  	%r28, %r19, %r25;
	.loc	1 25 28                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:27:21
	setp.lt.s32 	%p1, %r2, 4;
	.loc	1 30 19                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:30:19
	bfe.s32 	%r29, %r1, 23, 1;
	shr.u32 	%r30, %r29, 23;
	add.s32 	%r31, %r26, %r30;
	.loc	1 29 19                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:29:19
	and.b32  	%r32, %r31, -512;
	sub.s32 	%r33, %r26, %r32;
	.loc	1 30 19                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:30:19
	add.s32 	%r34, %r27, %r30;
	shr.s32 	%r35, %r34, 9;
	add.s32 	%r36, %r28, %r30;
	shr.s32 	%r37, %r36, 9;
	.loc	1 32 39                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:32:39
	shl.b32 	%r38, %r2, 9;
	.loc	1 32 35                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:32:35
	add.s32 	%r39, %r33, %r38;
	.loc	1 32 49                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:32:49
	shl.b32 	%r40, %r31, 2;
	and.b32  	%r41, %r40, -2048;
	.loc	1 32 44                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:32:44
	add.s32 	%r42, %r39, %r41;
	.loc	1 32 30                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:32:30
	mul.wide.s32 	%rd9, %r42, 4;
	add.s64 	%rd1, %rd6, %rd9;
	.loc	1 32 54                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:32:54
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r43, %r23, 3;
	mov.u32 	%r44, global_smem;
	add.s32 	%r5, %r44, %r43;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	add.s32 	%r7, %r5, 8;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r45, %r24, 3;
	add.s32 	%r46, %r44, %r45;
	shl.b32 	%r47, %r25, 3;
	add.s32 	%r48, %r44, %r47;
	.loc	1 33 37                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:33:37
	shl.b32 	%r49, %r35, 2;
	shl.b32 	%r50, %r37, 2;
	.loc	1 33 35                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:33:35
	add.s32 	%r51, %r49, %r2;
	add.s32 	%r52, %r50, %r2;
	.loc	1 33 30                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:33:30
	mul.wide.s32 	%rd10, %r51, 4;
	add.s64 	%rd2, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r52, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 35 18                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:35:18
	ld.shared.u32 	%r12, [%r46];
	ld.shared.u32 	%r15, [%r48];
	.loc	1 33 42                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:33:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r10;
	.loc	1 34 26                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:34:26
	sqrt.approx.ftz.f32 	%f3, %f1;
	sqrt.approx.ftz.f32 	%f4, %f2;
	.loc	1 35 18                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:35:18
	mov.b32 	%r13, %f3;
	// begin inline asm
	div.full.f32 %r17, %r12, %r13;
	// end inline asm
	mov.b32 	%r16, %f4;
	// begin inline asm
	div.full.f32 %r18, %r15, %r16;
	// end inline asm
	.loc	1 36 32                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:36:32
	shl.b32 	%r53, %r27, 2;
	shl.b32 	%r54, %r28, 2;
	.loc	1 36 30                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:36:30
	add.s32 	%r55, %r53, %r2;
	add.s32 	%r56, %r54, %r2;
	.loc	1 36 25                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:36:25
	mul.wide.s32 	%rd12, %r55, 4;
	add.s64 	%rd4, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r56, 4;
	add.s64 	%rd5, %rd8, %rd13;
	.loc	1 36 43                         // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:36:43
	// begin inline asm
	@%p1 st.global.b32 [ %rd4 + 0 ], { %r17 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.b32 [ %rd5 + 0 ], { %r18 };
	// end inline asm
	.loc	1 36 4                          // csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sq/csqhdkeyr4yptxfqzkahnkfmiwkkuuys3r6oeketbvdgujvlhjcv.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 113
.b8 104
.b8 100
.b8 107
.b8 101
.b8 121
.b8 114
.b8 52
.b8 121
.b8 112
.b8 116
.b8 120
.b8 102
.b8 113
.b8 122
.b8 107
.b8 97
.b8 104
.b8 110
.b8 107
.b8 102
.b8 109
.b8 105
.b8 119
.b8 107
.b8 107
.b8 117
.b8 117
.b8 121
.b8 115
.b8 51
.b8 114
.b8 54
.b8 111
.b8 101
.b8 107
.b8 101
.b8 116
.b8 98
.b8 118
.b8 100
.b8 103
.b8 117
.b8 106
.b8 118
.b8 108
.b8 104
.b8 106
.b8 99
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
