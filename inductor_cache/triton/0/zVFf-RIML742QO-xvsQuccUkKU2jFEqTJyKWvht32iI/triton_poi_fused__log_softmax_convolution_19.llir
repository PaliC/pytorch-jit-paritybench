; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__log_softmax_convolution_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %11 = sdiv i32 %.frozen, 4096, !dbg !14
  %12 = mul i32 %11, 4096, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = shl i32 %11, 14, !dbg !16
  %14 = add i32 %13, %.decomposed, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 true) #1, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !20
  %19 = add i32 %14, 4096, !dbg !21
  %20 = sext i32 %19 to i64, !dbg !22
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !22
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 true) #1, !dbg !23
  %23 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !24
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !25
  %25 = add i32 %14, 8192, !dbg !26
  %26 = sext i32 %25 to i64, !dbg !27
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !27
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !28
  %29 = bitcast i32 %28 to float, !dbg !28
  %30 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !29
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !30
  %32 = bitcast i32 %31 to float, !dbg !30
  %33 = add i32 %14, 12288, !dbg !31
  %34 = sext i32 %33 to i64, !dbg !32
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !32
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !33
  %37 = bitcast i32 %36 to float, !dbg !33
  %38 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !34
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !35
  %40 = bitcast i32 %39 to float, !dbg !35
  %41 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !19
  %42 = insertelement <2 x i32> %41, i32 %22, i64 1, !dbg !19
  %43 = bitcast <2 x i32> %42 to <2 x float>, !dbg !19
  %44 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !20
  %45 = insertelement <2 x i32> %44, i32 %24, i64 1, !dbg !20
  %46 = bitcast <2 x i32> %45 to <2 x float>, !dbg !20
  %47 = fadd <2 x float> %43, %46, !dbg !36
  %48 = extractelement <2 x float> %47, i64 0, !dbg !37
  %49 = extractelement <2 x float> %47, i64 1, !dbg !38
  %50 = fcmp ogt float %48, %49, !dbg !39
  %51 = fcmp uno float %48, 0.000000e+00, !dbg !43
  %52 = or i1 %51, %50, !dbg !44
  %53 = select i1 %52, float %48, float %49, !dbg !45
  %54 = fadd float %29, %32, !dbg !46
  %55 = fcmp ogt float %53, %54, !dbg !47
  %56 = fcmp uno float %53, 0.000000e+00, !dbg !49
  %57 = or i1 %55, %56, !dbg !50
  %58 = select i1 %57, float %53, float %54, !dbg !51
  %59 = fadd float %37, %40, !dbg !52
  %60 = fcmp ogt float %58, %59, !dbg !53
  %61 = fcmp uno float %58, 0.000000e+00, !dbg !55
  %62 = or i1 %60, %61, !dbg !56
  %63 = select i1 %62, float %58, float %59, !dbg !57
  %64 = fsub float %48, %63, !dbg !37
  %65 = fmul float %64, 0x3FF7154760000000, !dbg !58
  %66 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %65) #1, !dbg !58
  %67 = fsub float %49, %63, !dbg !38
  %68 = fmul float %67, 0x3FF7154760000000, !dbg !59
  %69 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %68) #1, !dbg !59
  %70 = fadd float %66, %69, !dbg !60
  %71 = fsub float %54, %63, !dbg !61
  %72 = fmul float %71, 0x3FF7154760000000, !dbg !62
  %73 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %72) #1, !dbg !62
  %74 = fadd float %70, %73, !dbg !63
  %75 = fsub float %59, %63, !dbg !64
  %76 = fmul float %75, 0x3FF7154760000000, !dbg !65
  %77 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %76) #1, !dbg !65
  %78 = fadd float %74, %77, !dbg !66
  %79 = sext i32 %10 to i64, !dbg !67
  %80 = getelementptr float, ptr addrspace(1) %2, i64 %79, !dbg !67
  %81 = bitcast float %63 to i32, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %81, ptr addrspace(1) %80, i1 true) #1, !dbg !68
  %82 = getelementptr float, ptr addrspace(1) %3, i64 %79, !dbg !69
  %83 = bitcast float %78 to i32, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %83, ptr addrspace(1) %82, i1 true) #1, !dbg !70
  ret void, !dbg !71
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5vyulti35aliw2fftdqxz2r4y2mdt3ge74wpxhymz3gt6uhqwjp.py", directory: "inductor_cache/5v")
!4 = !{ptr @triton_poi_fused__log_softmax_convolution_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_convolution_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_convolution_19", linkageName: "triton_poi_fused__log_softmax_convolution_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 41, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 46, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 42, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 53, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 19, scope: !7)
!26 = !DILocation(line: 33, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 53, scope: !7)
!29 = !DILocation(line: 34, column: 31, scope: !7)
!30 = !DILocation(line: 34, column: 20, scope: !7)
!31 = !DILocation(line: 36, column: 44, scope: !7)
!32 = !DILocation(line: 36, column: 31, scope: !7)
!33 = !DILocation(line: 36, column: 55, scope: !7)
!34 = !DILocation(line: 37, column: 31, scope: !7)
!35 = !DILocation(line: 37, column: 20, scope: !7)
!36 = !DILocation(line: 39, column: 18, scope: !7)
!37 = !DILocation(line: 46, column: 19, scope: !7)
!38 = !DILocation(line: 48, column: 19, scope: !7)
!39 = !DILocation(line: 118, column: 15, scope: !40, inlinedAt: !42)
!40 = distinct !DILexicalBlockFile(scope: !7, file: !41, discriminator: 0)
!41 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!42 = !DILocation(line: 41, column: 40, scope: !7)
!43 = !DILocation(line: 120, column: 21, scope: !40, inlinedAt: !42)
!44 = !DILocation(line: 120, column: 16, scope: !40, inlinedAt: !42)
!45 = !DILocation(line: 121, column: 29, scope: !40, inlinedAt: !42)
!46 = !DILocation(line: 42, column: 19, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !40, inlinedAt: !48)
!48 = !DILocation(line: 43, column: 41, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !40, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !40, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !40, inlinedAt: !48)
!52 = !DILocation(line: 44, column: 20, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !40, inlinedAt: !54)
!54 = !DILocation(line: 45, column: 42, scope: !7)
!55 = !DILocation(line: 120, column: 21, scope: !40, inlinedAt: !54)
!56 = !DILocation(line: 120, column: 16, scope: !40, inlinedAt: !54)
!57 = !DILocation(line: 121, column: 29, scope: !40, inlinedAt: !54)
!58 = !DILocation(line: 47, column: 24, scope: !7)
!59 = !DILocation(line: 49, column: 24, scope: !7)
!60 = !DILocation(line: 50, column: 20, scope: !7)
!61 = !DILocation(line: 51, column: 20, scope: !7)
!62 = !DILocation(line: 52, column: 24, scope: !7)
!63 = !DILocation(line: 53, column: 20, scope: !7)
!64 = !DILocation(line: 54, column: 20, scope: !7)
!65 = !DILocation(line: 55, column: 24, scope: !7)
!66 = !DILocation(line: 56, column: 20, scope: !7)
!67 = !DILocation(line: 57, column: 25, scope: !7)
!68 = !DILocation(line: 57, column: 37, scope: !7)
!69 = !DILocation(line: 58, column: 25, scope: !7)
!70 = !DILocation(line: 58, column: 37, scope: !7)
!71 = !DILocation(line: 58, column: 4, scope: !7)
