//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__weight_norm_interface_convolution_9 // -- Begin function triton_poi_fused__weight_norm_interface_convolution_9
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__weight_norm_interface_convolution_9
.visible .entry triton_poi_fused__weight_norm_interface_convolution_9(
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__weight_norm_interface_convolution_9_param_4,
	.param .u32 triton_poi_fused__weight_norm_interface_convolution_9_param_5,
	.param .u32 triton_poi_fused__weight_norm_interface_convolution_9_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<67>;
	.reg .b32 	%r<309>;
	.reg .f32 	%f<85>;
	.reg .b64 	%rd<53>;
	.loc	1 19 0                          // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:19:0

// %bb.0:
	ld.param.u64 	%rd27, [triton_poi_fused__weight_norm_interface_convolution_9_param_0];
	ld.param.u64 	%rd28, [triton_poi_fused__weight_norm_interface_convolution_9_param_1];
$L__tmp0:
	.loc	1 22 28                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:22:33
	shl.b32 	%r92, %r1, 8;
	ld.param.u64 	%rd29, [triton_poi_fused__weight_norm_interface_convolution_9_param_2];
	ld.param.u64 	%rd30, [triton_poi_fused__weight_norm_interface_convolution_9_param_3];
	.loc	1 23 44                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:23:44
	mov.u32 	%r93, %tid.x;
	shl.b32 	%r94, %r93, 2;
	ld.param.u64 	%rd31, [triton_poi_fused__weight_norm_interface_convolution_9_param_4];
	and.b32  	%r95, %r94, 252;
	and.b32  	%r96, %r93, 15;
	and.b32  	%r97, %r93, 255;
	bfe.u32 	%r98, %r93, 4, 4;
	or.b32  	%r99, %r98, 16;
	or.b32  	%r100, %r98, 32;
	or.b32  	%r101, %r98, 48;
	or.b32  	%r102, %r98, 64;
	or.b32  	%r103, %r98, 80;
	or.b32  	%r104, %r98, 96;
	or.b32  	%r105, %r98, 112;
	or.b32  	%r106, %r98, 128;
	or.b32  	%r107, %r98, 144;
	or.b32  	%r108, %r98, 160;
	or.b32  	%r109, %r98, 176;
	or.b32  	%r110, %r98, 192;
	or.b32  	%r111, %r98, 208;
	or.b32  	%r112, %r98, 224;
	or.b32  	%r113, %r98, 240;
	.loc	1 23 23                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:23:23
	or.b32  	%r114, %r92, %r95;
	or.b32  	%r115, %r92, %r97;
	or.b32  	%r116, %r92, %r98;
	or.b32  	%r117, %r92, %r99;
	or.b32  	%r118, %r92, %r100;
	or.b32  	%r119, %r92, %r101;
	or.b32  	%r120, %r92, %r102;
	or.b32  	%r121, %r92, %r103;
	or.b32  	%r122, %r92, %r104;
	or.b32  	%r123, %r92, %r105;
	or.b32  	%r124, %r92, %r106;
	or.b32  	%r125, %r92, %r107;
	or.b32  	%r126, %r92, %r108;
	or.b32  	%r127, %r92, %r109;
	or.b32  	%r128, %r92, %r110;
	or.b32  	%r129, %r92, %r111;
	or.b32  	%r130, %r92, %r112;
	or.b32  	%r131, %r92, %r113;
	.loc	1 24 21                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:24:21
	setp.lt.s32 	%p45, %r114, 512;
	setp.lt.s32 	%p21, %r115, 512;
	setp.lt.s32 	%p46, %r116, 512;
	setp.lt.s32 	%p47, %r117, 512;
	setp.lt.s32 	%p48, %r118, 512;
	setp.lt.s32 	%p49, %r119, 512;
	setp.lt.s32 	%p50, %r120, 512;
	setp.lt.s32 	%p51, %r121, 512;
	setp.lt.s32 	%p52, %r122, 512;
	setp.lt.s32 	%p53, %r123, 512;
	setp.lt.s32 	%p54, %r124, 512;
	setp.lt.s32 	%p55, %r125, 512;
	setp.lt.s32 	%p56, %r126, 512;
	setp.lt.s32 	%p57, %r127, 512;
	setp.lt.s32 	%p58, %r128, 512;
	setp.lt.s32 	%p59, %r129, 512;
	setp.lt.s32 	%p60, %r130, 512;
	setp.lt.s32 	%p61, %r131, 512;
	.loc	1 25 28                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:25:33
	shl.b32 	%r132, %r2, 4;
	.loc	1 26 44                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:26:44
	bfe.u32 	%r133, %r93, 6, 2;
	.loc	1 26 23                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:26:23
	or.b32  	%r134, %r132, %r133;
	or.b32  	%r135, %r134, 4;
	or.b32  	%r136, %r134, 8;
	or.b32  	%r137, %r134, 12;
	or.b32  	%r138, %r132, %r96;
	.loc	1 27 21                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:27:21
	setp.lt.s32 	%p62, %r134, 25;
	setp.lt.s32 	%p63, %r135, 25;
	setp.lt.s32 	%p64, %r136, 25;
	setp.lt.s32 	%p65, %r137, 25;
	setp.lt.s32 	%p66, %r138, 25;
	.loc	1 30 19                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:30:19
	shr.s32 	%r140, %r114, 31;
	shr.u32 	%r141, %r140, 28;
	add.s32 	%r142, %r114, %r141;
	shr.s32 	%r143, %r142, 4;
	.loc	1 29 19                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:29:19
	and.b32  	%r144, %r142, -16;
	sub.s32 	%r145, %r114, %r144;
	.loc	1 30 19                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:30:19
	bfe.s32 	%r146, %r1, 23, 1;
	shr.u32 	%r147, %r146, 28;
	add.s32 	%r148, %r115, %r147;
	shr.s32 	%r149, %r148, 4;
	.loc	1 32 38                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:38
	shl.b32 	%r150, %r134, 4;
	shl.b32 	%r151, %r135, 4;
	shl.b32 	%r152, %r136, 4;
	shl.b32 	%r153, %r137, 4;
	.loc	1 32 35                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:35
	mad.lo.s32 	%r154, %r143, 400, %r145;
	.loc	1 32 43                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:43
	add.s32 	%r155, %r154, %r150;
	add.s32 	%r156, %r154, %r151;
	add.s32 	%r157, %r154, %r152;
	add.s32 	%r158, %r154, %r153;
	.loc	1 32 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:30
	mul.wide.s32 	%rd32, %r155, 4;
	add.s64 	%rd1, %rd27, %rd32;
	mul.wide.s32 	%rd33, %r156, 4;
	add.s64 	%rd2, %rd27, %rd33;
	mul.wide.s32 	%rd34, %r157, 4;
	add.s64 	%rd3, %rd27, %rd34;
	mul.wide.s32 	%rd35, %r158, 4;
	add.s64 	%rd4, %rd27, %rd35;
	.loc	1 32 60                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:60
	and.pred  	%p1, %p45, %p62;
	and.pred  	%p2, %p63, %p45;
	and.pred  	%p3, %p64, %p45;
	and.pred  	%p4, %p65, %p45;
	and.pred  	%p25, %p46, %p66;
	and.pred  	%p26, %p47, %p66;
	and.pred  	%p27, %p48, %p66;
	and.pred  	%p28, %p49, %p66;
	and.pred  	%p29, %p50, %p66;
	and.pred  	%p30, %p51, %p66;
	and.pred  	%p31, %p52, %p66;
	and.pred  	%p32, %p53, %p66;
	and.pred  	%p33, %p54, %p66;
	and.pred  	%p34, %p55, %p66;
	and.pred  	%p35, %p56, %p66;
	and.pred  	%p36, %p57, %p66;
	and.pred  	%p37, %p58, %p66;
	and.pred  	%p38, %p59, %p66;
	and.pred  	%p39, %p60, %p66;
	and.pred  	%p40, %p61, %p66;
	.loc	1 32 52                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:32:52
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r20;
	mov.b32 	%f2, %r22;
	mov.b32 	%f3, %r24;
	mov.b32 	%f4, %r26;
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r28;
	mov.b32 	%f6, %r30;
	mov.b32 	%f7, %r32;
	mov.b32 	%f8, %r34;
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r36;
	mov.b32 	%f10, %r38;
	mov.b32 	%f11, %r40;
	mov.b32 	%f12, %r42;
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r44;
	mov.b32 	%f14, %r46;
	mov.b32 	%f15, %r48;
	mov.b32 	%f16, %r50;
	shl.b32 	%r159, %r93, 6;
	and.b32  	%r160, %r159, 4032;
	or.b32  	%r161, %r160, %r133;
	shr.u32 	%r162, %r160, 2;
	mov.u32 	%r163, global_smem;
	add.s32 	%r164, %r163, %r162;
	shl.b32 	%r165, %r161, 2;
	add.s32 	%r19, %r164, %r165;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r166, %r160, 16;
	shr.u32 	%r167, %r166, 2;
	add.s32 	%r168, %r163, %r167;
	add.s32 	%r169, %r168, %r165;
	add.s32 	%r21, %r169, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r170, %r160, 32;
	shr.u32 	%r171, %r170, 2;
	add.s32 	%r172, %r163, %r171;
	add.s32 	%r173, %r172, %r165;
	add.s32 	%r23, %r173, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r174, %r160, 48;
	shr.u32 	%r175, %r174, 2;
	add.s32 	%r176, %r163, %r175;
	add.s32 	%r177, %r176, %r165;
	add.s32 	%r25, %r177, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r19, 16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r169, 80;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r173, 144;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r177, 208;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r19, 32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r169, 96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r173, 160;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r177, 224;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r19, 48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r169, 112;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r173, 176;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r177, 240;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r178, %r93, 2;
	and.b32  	%r179, %r178, 60;
	add.s32 	%r180, %r163, %r179;
	shl.b32 	%r181, %r97, 2;
	add.s32 	%r182, %r180, %r181;
	ld.shared.f32 	%f17, [%r182];
	or.b32  	%r183, %r97, 256;
	shr.u32 	%r184, %r183, 2;
	and.b32  	%r185, %r184, 124;
	add.s32 	%r186, %r163, %r185;
	add.s32 	%r187, %r186, %r181;
	ld.shared.f32 	%f18, [%r187+1024];
	or.b32  	%r188, %r97, 512;
	shr.u32 	%r189, %r188, 2;
	and.b32  	%r190, %r189, 188;
	add.s32 	%r191, %r163, %r190;
	add.s32 	%r192, %r191, %r181;
	ld.shared.f32 	%f19, [%r192+2048];
	or.b32  	%r193, %r97, 768;
	shr.u32 	%r194, %r193, 2;
	and.b32  	%r195, %r194, 252;
	add.s32 	%r196, %r163, %r195;
	add.s32 	%r197, %r196, %r181;
	ld.shared.f32 	%f20, [%r197+3072];
	or.b32  	%r198, %r97, 1024;
	shr.u32 	%r199, %r198, 2;
	and.b32  	%r200, %r199, 316;
	add.s32 	%r201, %r163, %r200;
	add.s32 	%r202, %r201, %r181;
	ld.shared.f32 	%f21, [%r202+4096];
	or.b32  	%r203, %r97, 1280;
	shr.u32 	%r204, %r203, 2;
	and.b32  	%r205, %r204, 380;
	add.s32 	%r206, %r163, %r205;
	add.s32 	%r207, %r206, %r181;
	ld.shared.f32 	%f22, [%r207+5120];
	or.b32  	%r208, %r97, 1536;
	shr.u32 	%r209, %r208, 2;
	and.b32  	%r210, %r209, 444;
	add.s32 	%r211, %r163, %r210;
	add.s32 	%r212, %r211, %r181;
	ld.shared.f32 	%f23, [%r212+6144];
	or.b32  	%r213, %r97, 1792;
	shr.u32 	%r214, %r213, 2;
	and.b32  	%r215, %r214, 508;
	add.s32 	%r216, %r163, %r215;
	add.s32 	%r217, %r216, %r181;
	ld.shared.f32 	%f24, [%r217+7168];
	or.b32  	%r218, %r97, 2048;
	shr.u32 	%r219, %r218, 2;
	and.b32  	%r220, %r219, 572;
	add.s32 	%r221, %r163, %r220;
	add.s32 	%r222, %r221, %r181;
	ld.shared.f32 	%f25, [%r222+8192];
	or.b32  	%r223, %r97, 2304;
	shr.u32 	%r224, %r223, 2;
	and.b32  	%r225, %r224, 636;
	add.s32 	%r226, %r163, %r225;
	add.s32 	%r227, %r226, %r181;
	ld.shared.f32 	%f26, [%r227+9216];
	or.b32  	%r228, %r97, 2560;
	shr.u32 	%r229, %r228, 2;
	and.b32  	%r230, %r229, 700;
	add.s32 	%r231, %r163, %r230;
	add.s32 	%r232, %r231, %r181;
	ld.shared.f32 	%f27, [%r232+10240];
	or.b32  	%r233, %r97, 2816;
	shr.u32 	%r234, %r233, 2;
	and.b32  	%r235, %r234, 764;
	add.s32 	%r236, %r163, %r235;
	add.s32 	%r237, %r236, %r181;
	ld.shared.f32 	%f28, [%r237+11264];
	or.b32  	%r238, %r97, 3072;
	shr.u32 	%r239, %r238, 2;
	and.b32  	%r240, %r239, 828;
	add.s32 	%r241, %r163, %r240;
	add.s32 	%r242, %r241, %r181;
	ld.shared.f32 	%f29, [%r242+12288];
	or.b32  	%r243, %r97, 3328;
	shr.u32 	%r244, %r243, 2;
	and.b32  	%r245, %r244, 892;
	add.s32 	%r246, %r163, %r245;
	add.s32 	%r247, %r246, %r181;
	ld.shared.f32 	%f30, [%r247+13312];
	or.b32  	%r248, %r97, 3584;
	shr.u32 	%r249, %r248, 2;
	and.b32  	%r250, %r249, 956;
	add.s32 	%r251, %r163, %r250;
	add.s32 	%r252, %r251, %r181;
	ld.shared.f32 	%f31, [%r252+14336];
	or.b32  	%r253, %r97, 3840;
	shr.u32 	%r254, %r253, 2;
	and.b32  	%r255, %r254, 1020;
	add.s32 	%r256, %r163, %r255;
	add.s32 	%r257, %r256, %r181;
	ld.shared.f32 	%f32, [%r257+15360];
	.loc	1 33 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:33:30
	mul.wide.s32 	%rd36, %r149, 4;
	add.s64 	%rd5, %rd28, %rd36;
	.loc	1 33 35                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:33:35
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r54 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:34:30
	add.s64 	%rd6, %rd29, %rd36;
	.loc	1 34 35                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:34:35
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r55 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 18                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:35:18
	// begin inline asm
	div.full.f32 %r57, %r54, %r55;
	// end inline asm
	.loc	1 36 18                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:36:18
	bar.sync 	0;
	shl.b32 	%r258, %r97, 3;
	add.s32 	%r56, %r163, %r258;
	// begin inline asm
	@%p5 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r259, %r98, 3;
	add.s32 	%r260, %r163, %r259;
	ld.shared.f32 	%f33, [%r260];
	shl.b32 	%r261, %r99, 3;
	add.s32 	%r262, %r163, %r261;
	ld.shared.f32 	%f34, [%r262];
	shl.b32 	%r263, %r100, 3;
	add.s32 	%r264, %r163, %r263;
	ld.shared.f32 	%f35, [%r264];
	shl.b32 	%r265, %r101, 3;
	add.s32 	%r266, %r163, %r265;
	ld.shared.f32 	%f36, [%r266];
	shl.b32 	%r267, %r102, 3;
	add.s32 	%r268, %r163, %r267;
	ld.shared.f32 	%f37, [%r268];
	shl.b32 	%r269, %r103, 3;
	add.s32 	%r270, %r163, %r269;
	ld.shared.f32 	%f38, [%r270];
	shl.b32 	%r271, %r104, 3;
	add.s32 	%r272, %r163, %r271;
	ld.shared.f32 	%f39, [%r272];
	shl.b32 	%r273, %r105, 3;
	add.s32 	%r274, %r163, %r273;
	ld.shared.f32 	%f40, [%r274];
	shl.b32 	%r275, %r106, 3;
	add.s32 	%r276, %r163, %r275;
	ld.shared.f32 	%f41, [%r276];
	shl.b32 	%r277, %r107, 3;
	add.s32 	%r278, %r163, %r277;
	ld.shared.f32 	%f42, [%r278];
	shl.b32 	%r279, %r108, 3;
	add.s32 	%r280, %r163, %r279;
	ld.shared.f32 	%f43, [%r280];
	shl.b32 	%r281, %r109, 3;
	add.s32 	%r282, %r163, %r281;
	ld.shared.f32 	%f44, [%r282];
	shl.b32 	%r283, %r110, 3;
	add.s32 	%r284, %r163, %r283;
	ld.shared.f32 	%f45, [%r284];
	shl.b32 	%r285, %r111, 3;
	add.s32 	%r286, %r163, %r285;
	ld.shared.f32 	%f46, [%r286];
	shl.b32 	%r287, %r112, 3;
	add.s32 	%r288, %r163, %r287;
	ld.shared.f32 	%f47, [%r288];
	shl.b32 	%r289, %r113, 3;
	add.s32 	%r290, %r163, %r289;
	ld.shared.f32 	%f48, [%r290];
	bar.sync 	0;
	sub.s32 	%r58, %r56, %r181;
	// begin inline asm
	@%p5 st.shared.b32 [ %r58 + 0 ], %r57;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r291, %r95, 2;
	add.s32 	%r292, %r163, %r291;
	ld.shared.v4.f32 	{%f49, %f50, %f51, %f52}, [%r292];
	mul.f32 	%f53, %f17, %f33;
	mul.f32 	%f54, %f18, %f34;
	mul.f32 	%f55, %f19, %f35;
	mul.f32 	%f56, %f20, %f36;
	mul.f32 	%f57, %f21, %f37;
	mul.f32 	%f58, %f22, %f38;
	mul.f32 	%f59, %f23, %f39;
	mul.f32 	%f60, %f24, %f40;
	mul.f32 	%f61, %f25, %f41;
	mul.f32 	%f62, %f26, %f42;
	mul.f32 	%f63, %f27, %f43;
	mul.f32 	%f64, %f28, %f44;
	mul.f32 	%f65, %f29, %f45;
	mul.f32 	%f66, %f30, %f46;
	mul.f32 	%f67, %f31, %f47;
	mul.f32 	%f68, %f32, %f48;
	mul.f32 	%f69, %f49, %f1;
	mul.f32 	%f70, %f50, %f2;
	mul.f32 	%f71, %f51, %f3;
	mul.f32 	%f72, %f52, %f4;
	mul.f32 	%f73, %f49, %f5;
	mul.f32 	%f74, %f50, %f6;
	mul.f32 	%f75, %f51, %f7;
	mul.f32 	%f76, %f52, %f8;
	mul.f32 	%f77, %f49, %f9;
	mul.f32 	%f78, %f50, %f10;
	mul.f32 	%f79, %f51, %f11;
	mul.f32 	%f80, %f52, %f12;
	mul.f32 	%f81, %f49, %f13;
	mul.f32 	%f82, %f50, %f14;
	mul.f32 	%f83, %f51, %f15;
	mul.f32 	%f84, %f52, %f16;
	.loc	1 37 30                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:37:30
	mad.lo.s32 	%r293, %r116, 25, %r138;
	mad.lo.s32 	%r294, %r117, 25, %r138;
	mad.lo.s32 	%r295, %r118, 25, %r138;
	mad.lo.s32 	%r296, %r119, 25, %r138;
	mad.lo.s32 	%r297, %r120, 25, %r138;
	mad.lo.s32 	%r298, %r121, 25, %r138;
	mad.lo.s32 	%r299, %r122, 25, %r138;
	mad.lo.s32 	%r300, %r123, 25, %r138;
	mad.lo.s32 	%r301, %r124, 25, %r138;
	mad.lo.s32 	%r302, %r125, 25, %r138;
	mad.lo.s32 	%r303, %r126, 25, %r138;
	mad.lo.s32 	%r304, %r127, 25, %r138;
	mad.lo.s32 	%r305, %r128, 25, %r138;
	mad.lo.s32 	%r306, %r129, 25, %r138;
	mad.lo.s32 	%r307, %r130, 25, %r138;
	mad.lo.s32 	%r308, %r131, 25, %r138;
	.loc	1 37 25                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:37:25
	mul.wide.s32 	%rd37, %r293, 4;
	add.s64 	%rd7, %rd30, %rd37;
	mul.wide.s32 	%rd38, %r294, 4;
	add.s64 	%rd8, %rd30, %rd38;
	mul.wide.s32 	%rd39, %r295, 4;
	add.s64 	%rd9, %rd30, %rd39;
	mul.wide.s32 	%rd40, %r296, 4;
	add.s64 	%rd10, %rd30, %rd40;
	mul.wide.s32 	%rd41, %r297, 4;
	add.s64 	%rd11, %rd30, %rd41;
	mul.wide.s32 	%rd42, %r298, 4;
	add.s64 	%rd12, %rd30, %rd42;
	mul.wide.s32 	%rd43, %r299, 4;
	add.s64 	%rd13, %rd30, %rd43;
	mul.wide.s32 	%rd44, %r300, 4;
	add.s64 	%rd14, %rd30, %rd44;
	mul.wide.s32 	%rd45, %r301, 4;
	add.s64 	%rd15, %rd30, %rd45;
	mul.wide.s32 	%rd46, %r302, 4;
	add.s64 	%rd16, %rd30, %rd46;
	mul.wide.s32 	%rd47, %r303, 4;
	add.s64 	%rd17, %rd30, %rd47;
	mul.wide.s32 	%rd48, %r304, 4;
	add.s64 	%rd18, %rd30, %rd48;
	mul.wide.s32 	%rd49, %r305, 4;
	add.s64 	%rd19, %rd30, %rd49;
	mul.wide.s32 	%rd50, %r306, 4;
	add.s64 	%rd20, %rd30, %rd50;
	mul.wide.s32 	%rd51, %r307, 4;
	add.s64 	%rd21, %rd30, %rd51;
	mul.wide.s32 	%rd52, %r308, 4;
	add.s64 	%rd22, %rd30, %rd52;
	.loc	1 37 44                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:37:44
	mov.b32 	%r60, %f53;
	// begin inline asm
	@%p25 st.global.b32 [ %rd7 + 0 ], { %r60 };
	// end inline asm
	mov.b32 	%r61, %f54;
	// begin inline asm
	@%p26 st.global.b32 [ %rd8 + 0 ], { %r61 };
	// end inline asm
	mov.b32 	%r62, %f55;
	// begin inline asm
	@%p27 st.global.b32 [ %rd9 + 0 ], { %r62 };
	// end inline asm
	mov.b32 	%r63, %f56;
	// begin inline asm
	@%p28 st.global.b32 [ %rd10 + 0 ], { %r63 };
	// end inline asm
	mov.b32 	%r64, %f57;
	// begin inline asm
	@%p29 st.global.b32 [ %rd11 + 0 ], { %r64 };
	// end inline asm
	mov.b32 	%r65, %f58;
	// begin inline asm
	@%p30 st.global.b32 [ %rd12 + 0 ], { %r65 };
	// end inline asm
	mov.b32 	%r66, %f59;
	// begin inline asm
	@%p31 st.global.b32 [ %rd13 + 0 ], { %r66 };
	// end inline asm
	mov.b32 	%r67, %f60;
	// begin inline asm
	@%p32 st.global.b32 [ %rd14 + 0 ], { %r67 };
	// end inline asm
	mov.b32 	%r68, %f61;
	// begin inline asm
	@%p33 st.global.b32 [ %rd15 + 0 ], { %r68 };
	// end inline asm
	mov.b32 	%r69, %f62;
	// begin inline asm
	@%p34 st.global.b32 [ %rd16 + 0 ], { %r69 };
	// end inline asm
	mov.b32 	%r70, %f63;
	// begin inline asm
	@%p35 st.global.b32 [ %rd17 + 0 ], { %r70 };
	// end inline asm
	mov.b32 	%r71, %f64;
	// begin inline asm
	@%p36 st.global.b32 [ %rd18 + 0 ], { %r71 };
	// end inline asm
	mov.b32 	%r72, %f65;
	// begin inline asm
	@%p37 st.global.b32 [ %rd19 + 0 ], { %r72 };
	// end inline asm
	mov.b32 	%r73, %f66;
	// begin inline asm
	@%p38 st.global.b32 [ %rd20 + 0 ], { %r73 };
	// end inline asm
	mov.b32 	%r74, %f67;
	// begin inline asm
	@%p39 st.global.b32 [ %rd21 + 0 ], { %r74 };
	// end inline asm
	mov.b32 	%r75, %f68;
	// begin inline asm
	@%p40 st.global.b32 [ %rd22 + 0 ], { %r75 };
	// end inline asm
	.loc	1 38 25                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:38:25
	add.s64 	%rd23, %rd31, %rd32;
	add.s64 	%rd24, %rd31, %rd33;
	add.s64 	%rd25, %rd31, %rd34;
	add.s64 	%rd26, %rd31, %rd35;
	.loc	1 38 53                         // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:38:53
	mov.b32 	%r76, %f69;
	mov.b32 	%r77, %f70;
	mov.b32 	%r78, %f71;
	mov.b32 	%r79, %f72;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd23 + 0 ], { %r76, %r77, %r78, %r79 };
	// end inline asm
	mov.b32 	%r80, %f73;
	mov.b32 	%r81, %f74;
	mov.b32 	%r82, %f75;
	mov.b32 	%r83, %f76;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd24 + 0 ], { %r80, %r81, %r82, %r83 };
	// end inline asm
	mov.b32 	%r84, %f77;
	mov.b32 	%r85, %f78;
	mov.b32 	%r86, %f79;
	mov.b32 	%r87, %f80;
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd25 + 0 ], { %r84, %r85, %r86, %r87 };
	// end inline asm
	mov.b32 	%r88, %f81;
	mov.b32 	%r89, %f82;
	mov.b32 	%r90, %f83;
	mov.b32 	%r91, %f84;
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd26 + 0 ], { %r88, %r89, %r90, %r91 };
	// end inline asm
	.loc	1 38 4                          // cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/c7/cc7c4xkfiennpwowvw2xe6gtmgytl7ske7ff7lxlbln627f7zez2.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 55
.b8 99
.b8 52
.b8 120
.b8 107
.b8 102
.b8 105
.b8 101
.b8 110
.b8 110
.b8 112
.b8 119
.b8 111
.b8 119
.b8 118
.b8 119
.b8 50
.b8 120
.b8 101
.b8 54
.b8 103
.b8 116
.b8 109
.b8 103
.b8 121
.b8 116
.b8 108
.b8 55
.b8 115
.b8 107
.b8 101
.b8 55
.b8 102
.b8 102
.b8 55
.b8 108
.b8 120
.b8 108
.b8 98
.b8 108
.b8 110
.b8 54
.b8 50
.b8 55
.b8 102
.b8 55
.b8 122
.b8 101
.b8 122
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 55
.b8 0
	}
	.section	.debug_macinfo	{	}
