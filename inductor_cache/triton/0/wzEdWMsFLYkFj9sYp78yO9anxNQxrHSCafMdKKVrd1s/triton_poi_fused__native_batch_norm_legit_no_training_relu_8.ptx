//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_relu_8 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_relu_8
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_relu_8
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_relu_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<85>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:22:33
	shl.b32 	%r38, %r1, 8;
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_3];
	.loc	1 23 44                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:23:44
	mov.u32 	%r39, %tid.x;
	shl.b32 	%r40, %r39, 2;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_4];
	and.b32  	%r41, %r40, 252;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_relu_8_param_5];
	shl.b32 	%r42, %r39, 1;
	and.b32  	%r43, %r42, 254;
	.loc	1 23 23                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:23:23
	or.b32  	%r44, %r38, %r41;
	or.b32  	%r45, %r38, %r43;
	.loc	1 24 21                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:24:21
	setp.lt.s32 	%p3, %r45, 256;
	.loc	1 25 28                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:25:33
	shl.b32 	%r46, %r2, 1;
	.loc	1 26 44                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:26:44
	bfe.u32 	%r47, %r39, 6, 1;
	.loc	1 26 23                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:26:23
	or.b32  	%r48, %r46, %r47;
	.loc	1 30 19                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:30:19
	shr.s32 	%r50, %r44, 31;
	shr.u32 	%r51, %r50, 26;
	add.s32 	%r52, %r44, %r51;
	.loc	1 29 19                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:29:19
	and.b32  	%r53, %r52, -64;
	sub.s32 	%r54, %r44, %r53;
	bfe.s32 	%r55, %r1, 23, 1;
	shr.u32 	%r56, %r55, 26;
	add.s32 	%r57, %r45, %r56;
	and.b32  	%r58, %r57, -64;
	sub.s32 	%r59, %r45, %r58;
	.loc	1 32 38                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:38
	shl.b32 	%r60, %r48, 6;
	.loc	1 32 35                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:35
	add.s32 	%r61, %r60, %r54;
	.loc	1 32 49                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:49
	shl.b32 	%r62, %r52, 8;
	and.b32  	%r63, %r62, -16384;
	.loc	1 32 43                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:43
	add.s32 	%r64, %r61, %r63;
	.loc	1 32 30                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:30
	mul.wide.s32 	%rd14, %r64, 4;
	add.s64 	%rd1, %rd8, %rd14;
	.loc	1 32 62                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:62
	max.s32 	%r65, %r44, %r48;
	setp.lt.s32 	%p1, %r65, 256;
	.loc	1 32 54                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:54
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v4.b32 { %r8, %r9, %r10, %r11 }, [ %rd1 + 0 ];
	// end inline asm
	and.b32  	%r66, %r40, 508;
	shr.u32 	%r67, %r39, 2;
	and.b32  	%r68, %r67, 16;
	mov.u32 	%r69, global_smem;
	add.s32 	%r70, %r69, %r68;
	shl.b32 	%r71, %r66, 2;
	add.s32 	%r7, %r70, %r71;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.v4.b32 [ %r7 + 0 ], { %r8, %r9, %r10, %r11 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r72, %r43, 2;
	add.s32 	%r73, %r69, %r72;
	ld.shared.v2.f32 	{%f1, %f2}, [%r73];
	ld.shared.v2.f32 	{%f3, %f4}, [%r73+1040];
	.loc	1 33 30                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:33:30
	mul.wide.s32 	%rd15, %r59, 4;
	add.s64 	%rd2, %rd9, %rd15;
	.loc	1 33 35                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:33:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:34:30
	add.s64 	%rd3, %rd10, %rd15;
	.loc	1 34 35                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:34:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r14;
	mov.b32 	%f6, %r15;
	.loc	1 35 31                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:35:31
	add.s64 	%rd4, %rd11, %rd15;
	.loc	1 35 36                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:35:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:36:31
	add.s64 	%rd5, %rd12, %rd15;
	.loc	1 36 36                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:36:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 39 18                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:39:18
	add.f32 	%f7, %f5, 0f3727C5AC;
	add.f32 	%f8, %f6, 0f3727C5AC;
	.loc	1 40 26                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:40:26
	sqrt.approx.ftz.f32 	%f9, %f7;
	sqrt.approx.ftz.f32 	%f10, %f8;
	.loc	1 32 54                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:54
	shl.b32 	%r74, %r43, 1;
	.loc	1 27 21                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:27:21
	setp.lt.s32 	%p13, %r46, 256;
	.loc	1 23 44                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:23:44
	and.b32  	%r75, %r39, 127;
	.loc	1 23 23                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:23:23
	or.b32  	%r76, %r75, %r38;
	or.b32  	%r77, %r76, 128;
	.loc	1 24 21                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:24:21
	setp.lt.s32 	%p14, %r77, 256;
	.loc	1 32 62                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:62
	and.pred  	%p12, %p13, %p14;
	.loc	1 24 21                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:24:21
	setp.lt.s32 	%p15, %r76, 256;
	.loc	1 32 62                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:32:62
	and.pred  	%p11, %p13, %p15;
	.loc	1 42 18                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:42:18
	mov.b32 	%r22, %f9;
	mov.b32 	%r21, 1065353216;
	// begin inline asm
	div.full.f32 %r20, %r21, %r22;
	// end inline asm
	mov.b32 	%f11, %r20;
	mov.b32 	%r25, %f10;
	// begin inline asm
	div.full.f32 %r23, %r21, %r25;
	// end inline asm
	mov.b32 	%f12, %r23;
	.loc	1 33 35                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:33:35
	mov.b32 	%f13, %r13;
	mov.b32 	%f14, %r12;
	.loc	1 37 18                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:37:18
	sub.f32 	%f15, %f1, %f14;
	sub.f32 	%f16, %f2, %f13;
	sub.f32 	%f17, %f3, %f14;
	sub.f32 	%f18, %f4, %f13;
	.loc	1 36 36                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:36:36
	mov.b32 	%f19, %r19;
	mov.b32 	%f20, %r18;
	.loc	1 35 36                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:35:36
	mov.b32 	%f21, %r17;
	mov.b32 	%f22, %r16;
	.loc	1 45 19                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:45:19
	mul.f32 	%f23, %f18, %f12;
	mul.f32 	%f24, %f17, %f11;
	mul.f32 	%f25, %f16, %f12;
	mul.f32 	%f26, %f15, %f11;
	.loc	1 47 20                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:47:20
	fma.rn.f32 	%f27, %f26, %f22, %f20;
	fma.rn.f32 	%f28, %f25, %f21, %f19;
	fma.rn.f32 	%f29, %f24, %f22, %f20;
	fma.rn.f32 	%f30, %f23, %f21, %f19;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p16, %f30, 0f00000000;
	setp.lt.f32 	%p17, %f29, 0f00000000;
	setp.lt.f32 	%p18, %f28, 0f00000000;
	setp.lt.f32 	%p19, %f27, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f31, 0f00000000, %f27, %p19;
	selp.f32 	%f32, 0f00000000, %f28, %p18;
	selp.f32 	%f33, 0f00000000, %f29, %p17;
	selp.f32 	%f34, 0f00000000, %f30, %p16;
$L__tmp2:
	.loc	1 50 34                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:50:34
	shl.b32 	%r78, %r76, 8;
	shl.b32 	%r79, %r77, 8;
	.loc	1 50 30                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:50:30
	add.s32 	%r80, %r78, %r46;
	add.s32 	%r81, %r79, %r46;
	.loc	1 50 25                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:50:25
	mul.wide.s32 	%rd16, %r80, 4;
	add.s64 	%rd6, %rd13, %rd16;
	mul.wide.s32 	%rd17, %r81, 4;
	add.s64 	%rd7, %rd13, %rd17;
	.loc	1 50 46                         // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:50:46
	bar.sync 	0;
	mov.b32 	%r27, %f31;
	shl.b32 	%r82, %r66, 1;
	add.s32 	%r83, %r69, %r82;
	add.s32 	%r26, %r83, %r71;
	// begin inline asm
	@%p2 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r26, 12;
	mov.b32 	%r29, %f32;
	// begin inline asm
	@%p2 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r26, 4;
	mov.b32 	%r31, %f33;
	// begin inline asm
	@%p2 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r26, 16;
	mov.b32 	%r33, %f34;
	// begin inline asm
	@%p2 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r84, %r73, %r74;
	ld.shared.u32 	%r34, [%r84];
	ld.shared.u32 	%r35, [%r84+4];
	ld.shared.u32 	%r36, [%r84+1536];
	ld.shared.u32 	%r37, [%r84+1540];
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd6 + 0 ], { %r34, %r35 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v2.b32 [ %rd7 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 50 4                          // c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7v/c7vik5rw2bw5mfy3b4p4u46msn4huipuuk623naudd6in522s6xo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 118
.b8 105
.b8 107
.b8 53
.b8 114
.b8 119
.b8 50
.b8 98
.b8 119
.b8 53
.b8 109
.b8 102
.b8 121
.b8 51
.b8 98
.b8 52
.b8 112
.b8 52
.b8 117
.b8 52
.b8 54
.b8 109
.b8 115
.b8 110
.b8 52
.b8 104
.b8 117
.b8 105
.b8 112
.b8 117
.b8 117
.b8 107
.b8 54
.b8 50
.b8 51
.b8 110
.b8 97
.b8 117
.b8 100
.b8 100
.b8 54
.b8 105
.b8 110
.b8 53
.b8 50
.b8 50
.b8 115
.b8 54
.b8 120
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
