#loc = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":19:0)
#loc1 = loc(unknown)
#loc12 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":36:24)
#loc25 = loc(callsite(#loc1 at #loc12))
module {
  tt.func public @triton_per_fused__weight_norm_interface_32(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":19:0), %arg4: i32 loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x32xf32> loc(#loc1)
    %cst_0 = arith.constant dense<28> : tensor<1x32xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_0 : tensor<1x32xi32> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %1 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc5)
    %5 = tt.load %4, %2, %cst : tensor<1x32x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc7)
    %7 = tt.load %6 : !tt.ptr<f32> loc(#loc8)
    %8 = arith.mulf %5, %5 : tensor<1x32xf32> loc(#loc9)
    %9 = arith.select %2, %8, %cst : tensor<1x32xi1>, tensor<1x32xf32> loc(#loc10)
    %10 = "tt.reduce"(%9) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc12)), %arg6: f32 loc(callsite(#loc1 at #loc12))):
      %21 = arith.addf %arg5, %arg6 : f32 loc(#loc27)
      tt.reduce.return %21 : f32 loc(#loc24)
    }) : (tensor<1x32xf32>) -> tensor<1xf32> loc(#loc24)
    %11 = tt.expand_dims %10 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc14)
    %12 = tt.extern_elementwise %11 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc15)
    %13 = tt.splat %7 : f32 -> tensor<1x1xf32> loc(#loc16)
    %14 = arith.divf %13, %12 : tensor<1x1xf32> loc(#loc16)
    %15 = tt.broadcast %14 : tensor<1x1xf32> -> tensor<1x32xf32> loc(#loc16)
    %16 = arith.mulf %5, %15 : tensor<1x32xf32> loc(#loc17)
    gpu.barrier loc(#loc18)
    %17 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %18 = tt.splat %17 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    tt.store %18, %12 : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %19 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>> loc(#loc21)
    %20 = tt.addptr %19, %1 : tensor<1x32x!tt.ptr<f32>>, tensor<1x32xi32> loc(#loc21)
    tt.store %20, %16, %2 : tensor<1x32x!tt.ptr<f32>> loc(#loc22)
    tt.return loc(#loc23)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":26:26)
#loc3 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":26:34)
#loc4 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":28:21)
#loc5 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":30:30)
#loc6 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":30:35)
#loc7 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":31:30)
#loc8 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":31:19)
#loc9 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":33:18)
#loc10 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":35:33)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc14 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":36:27)
#loc15 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":37:26)
#loc16 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":38:18)
#loc17 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":39:19)
#loc18 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":40:4)
#loc19 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":41:28)
#loc20 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":41:70)
#loc21 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":42:25)
#loc22 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":42:72)
#loc23 = loc("inductor_cache/he/checan5alcagirucqbsrmez467m5q7z5ykobunnqr6v3ylqph4wd.py":42:4)
#loc24 = loc(callsite(#loc11 at #loc12))
#loc26 = loc(callsite(#loc13 at #loc11))
#loc27 = loc(callsite(#loc26 at #loc12))
