; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_clamp_min_log_mul_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = sext i32 %10 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %13, i1 %11) #2, !dbg !16
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !16
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !16
  %17 = bitcast i32 %15 to float, !dbg !16
  %18 = bitcast i32 %16 to float, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %11) #2, !dbg !18
  %21 = fcmp ogt float %17, 0x3EE4F8B580000000, !dbg !19
  %22 = fcmp ogt float %18, 0x3EE4F8B580000000, !dbg !19
  %23 = fcmp uno float %17, 0.000000e+00, !dbg !23
  %24 = fcmp uno float %18, 0.000000e+00, !dbg !23
  %25 = or i1 %21, %23, !dbg !24
  %26 = or i1 %22, %24, !dbg !24
  %27 = select i1 %25, float %17, float 0x3EE4F8B580000000, !dbg !25
  %28 = select i1 %26, float %18, float 0x3EE4F8B580000000, !dbg !25
  %29 = fcmp olt float %27, 0x3810000000000000, !dbg !26
  %30 = fmul float %27, 0x4160000000000000, !dbg !26
  %.02.i = select i1 %29, float %30, float %27, !dbg !26
  %i.i.0.i = select i1 %29, float -2.300000e+01, float 0.000000e+00, !dbg !26
  %31 = bitcast float %.02.i to i32, !dbg !26
  %32 = add i32 %31, -1059760811, !dbg !26
  %33 = and i32 %32, -8388608, !dbg !26
  %34 = sub i32 %31, %33, !dbg !26
  %35 = bitcast i32 %34 to float, !dbg !26
  %36 = sitofp i32 %33 to float, !dbg !26
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not.i = icmp eq i32 %37, 0, !dbg !26
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !26
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %36, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !26
  %.08.i = select i1 %.not.i, float %39, float %38, !dbg !26
  %40 = fadd float %35, -1.000000e+00, !dbg !26
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not1.i = icmp eq i32 %41, 0, !dbg !26
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %40, float 0x3FC2073EC0000000) #2, !dbg !26
  %43 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %40, float 0x3FC2073EC0000000) #2, !dbg !26
  %.010.i = select i1 %.not1.i, float %43, float %42, !dbg !26
  %44 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not2.i = icmp eq i32 %44, 0, !dbg !26
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %40, float 0xBFBF19B980000000) #2, !dbg !26
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %40, float 0xBFBF19B980000000) #2, !dbg !26
  %.011.i = select i1 %.not2.i, float %46, float %45, !dbg !26
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not3.i = icmp eq i32 %47, 0, !dbg !26
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %40, float 0x3FC1E52AA0000000) #2, !dbg !26
  %49 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %40, float 0x3FC1E52AA0000000) #2, !dbg !26
  %.012.i = select i1 %.not3.i, float %49, float %48, !dbg !26
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not4.i = icmp eq i32 %50, 0, !dbg !26
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %40, float 0xBFC55B1720000000) #2, !dbg !26
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %40, float 0xBFC55B1720000000) #2, !dbg !26
  %.09.i = select i1 %.not4.i, float %52, float %51, !dbg !26
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not5.i = icmp eq i32 %53, 0, !dbg !26
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %40, float 0x3FC99DA160000000) #2, !dbg !26
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %40, float 0x3FC99DA160000000) #2, !dbg !26
  %.05.i = select i1 %.not5.i, float %55, float %54, !dbg !26
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not6.i = icmp eq i32 %56, 0, !dbg !26
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %40, float 0xBFCFFFE440000000) #2, !dbg !26
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %40, float 0xBFCFFFE440000000) #2, !dbg !26
  %.01.i = select i1 %.not6.i, float %58, float %57, !dbg !26
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not7.i = icmp eq i32 %59, 0, !dbg !26
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %40, float 0x3FD5554F00000000) #2, !dbg !26
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %40, float 0x3FD5554F00000000) #2, !dbg !26
  %.0.i = select i1 %.not7.i, float %61, float %60, !dbg !26
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not8.i = icmp eq i32 %62, 0, !dbg !26
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %40, float -5.000000e-01) #2, !dbg !26
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %40, float -5.000000e-01) #2, !dbg !26
  %.07.i = select i1 %.not8.i, float %64, float %63, !dbg !26
  %65 = fmul float %40, %.07.i, !dbg !26
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not9.i = icmp eq i32 %66, 0, !dbg !26
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %65, float %40, float %40) #2, !dbg !26
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %65, float %40, float %40) #2, !dbg !26
  %.06.i = select i1 %.not9.i, float %68, float %67, !dbg !26
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not10.i = icmp eq i32 %69, 0, !dbg !26
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !26
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !26
  %.04.i = select i1 %.not10.i, float %71, float %70, !dbg !26
  %72 = icmp ugt i32 %31, 2139095039, !dbg !26
  br i1 %72, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !26

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not11.i = icmp eq i32 %73, 0, !dbg !26
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !26
  %75 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !26
  %.03.i = select i1 %.not11.i, float %75, float %74, !dbg !26
  br label %__nv_logf.exit, !dbg !26

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !26
  %76 = fcmp olt float %28, 0x3810000000000000, !dbg !26
  %77 = fmul float %28, 0x4160000000000000, !dbg !26
  %.02.i1 = select i1 %76, float %77, float %28, !dbg !26
  %i.i.0.i2 = select i1 %76, float -2.300000e+01, float 0.000000e+00, !dbg !26
  %78 = bitcast float %.02.i1 to i32, !dbg !26
  %79 = add i32 %78, -1059760811, !dbg !26
  %80 = and i32 %79, -8388608, !dbg !26
  %81 = sub i32 %78, %80, !dbg !26
  %82 = bitcast i32 %81 to float, !dbg !26
  %83 = sitofp i32 %80 to float, !dbg !26
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not.i3 = icmp eq i32 %84, 0, !dbg !26
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !26
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %83, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !26
  %.08.i4 = select i1 %.not.i3, float %86, float %85, !dbg !26
  %87 = fadd float %82, -1.000000e+00, !dbg !26
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not1.i5 = icmp eq i32 %88, 0, !dbg !26
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %87, float 0x3FC2073EC0000000) #2, !dbg !26
  %90 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %87, float 0x3FC2073EC0000000) #2, !dbg !26
  %.010.i6 = select i1 %.not1.i5, float %90, float %89, !dbg !26
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not2.i7 = icmp eq i32 %91, 0, !dbg !26
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %87, float 0xBFBF19B980000000) #2, !dbg !26
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %87, float 0xBFBF19B980000000) #2, !dbg !26
  %.011.i8 = select i1 %.not2.i7, float %93, float %92, !dbg !26
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not3.i9 = icmp eq i32 %94, 0, !dbg !26
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %87, float 0x3FC1E52AA0000000) #2, !dbg !26
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %87, float 0x3FC1E52AA0000000) #2, !dbg !26
  %.012.i10 = select i1 %.not3.i9, float %96, float %95, !dbg !26
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not4.i11 = icmp eq i32 %97, 0, !dbg !26
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %87, float 0xBFC55B1720000000) #2, !dbg !26
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %87, float 0xBFC55B1720000000) #2, !dbg !26
  %.09.i12 = select i1 %.not4.i11, float %99, float %98, !dbg !26
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not5.i13 = icmp eq i32 %100, 0, !dbg !26
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %87, float 0x3FC99DA160000000) #2, !dbg !26
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %87, float 0x3FC99DA160000000) #2, !dbg !26
  %.05.i14 = select i1 %.not5.i13, float %102, float %101, !dbg !26
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not6.i15 = icmp eq i32 %103, 0, !dbg !26
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %87, float 0xBFCFFFE440000000) #2, !dbg !26
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %87, float 0xBFCFFFE440000000) #2, !dbg !26
  %.01.i16 = select i1 %.not6.i15, float %105, float %104, !dbg !26
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not7.i17 = icmp eq i32 %106, 0, !dbg !26
  %107 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %87, float 0x3FD5554F00000000) #2, !dbg !26
  %108 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %87, float 0x3FD5554F00000000) #2, !dbg !26
  %.0.i18 = select i1 %.not7.i17, float %108, float %107, !dbg !26
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not8.i19 = icmp eq i32 %109, 0, !dbg !26
  %110 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %87, float -5.000000e-01) #2, !dbg !26
  %111 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %87, float -5.000000e-01) #2, !dbg !26
  %.07.i20 = select i1 %.not8.i19, float %111, float %110, !dbg !26
  %112 = fmul float %87, %.07.i20, !dbg !26
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not9.i21 = icmp eq i32 %113, 0, !dbg !26
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float %87, float %87) #2, !dbg !26
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float %87, float %87) #2, !dbg !26
  %.06.i22 = select i1 %.not9.i21, float %115, float %114, !dbg !26
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not10.i23 = icmp eq i32 %116, 0, !dbg !26
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !26
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !26
  %.04.i24 = select i1 %.not10.i23, float %118, float %117, !dbg !26
  %119 = icmp ugt i32 %78, 2139095039, !dbg !26
  br i1 %119, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !26

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !26
  %.not11.i28 = icmp eq i32 %120, 0, !dbg !26
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !26
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !26
  %.03.i29 = select i1 %.not11.i28, float %122, float %121, !dbg !26
  br label %__nv_logf.exit30, !dbg !26

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !26
  %123 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !26
  %r.i.1.i = select i1 %123, float 0xFFF0000000000000, float %r.i.0.i, !dbg !26
  %124 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %125 = bitcast i32 %124 to float, !dbg !18
  %126 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %127 = bitcast i32 %126 to float, !dbg !18
  %128 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !26
  %r.i.1.i26 = select i1 %128, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !26
  %129 = fmul float %r.i.1.i, %127, !dbg !27
  %130 = fmul float %r.i.1.i26, %125, !dbg !27
  %131 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !28
  %132 = bitcast float %129 to i32, !dbg !29
  %133 = bitcast float %130 to i32, !dbg !29
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %132, i32 %133, ptr addrspace(1) %131, i1 %11) #2, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cf3gojpx4zrykssuhynsuwfsof7kch2pj2xdvwewtzxkipmvasgf.py", directory: "inductor_cache/f3")
!4 = !{ptr @triton_poi_fused_clamp_min_log_mul_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clamp_min_log_mul_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clamp_min_log_mul_0", linkageName: "triton_poi_fused_clamp_min_log_mul_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 118, column: 15, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!22 = !DILocation(line: 28, column: 40, scope: !7)
!23 = !DILocation(line: 120, column: 21, scope: !20, inlinedAt: !22)
!24 = !DILocation(line: 120, column: 16, scope: !20, inlinedAt: !22)
!25 = !DILocation(line: 121, column: 29, scope: !20, inlinedAt: !22)
!26 = !DILocation(line: 29, column: 23, scope: !7)
!27 = !DILocation(line: 30, column: 18, scope: !7)
!28 = !DILocation(line: 31, column: 25, scope: !7)
!29 = !DILocation(line: 31, column: 36, scope: !7)
!30 = !DILocation(line: 31, column: 4, scope: !7)
