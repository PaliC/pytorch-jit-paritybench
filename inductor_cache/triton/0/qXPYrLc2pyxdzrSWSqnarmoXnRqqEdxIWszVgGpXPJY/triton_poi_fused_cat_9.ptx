//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_9  // -- Begin function triton_poi_fused_cat_9
                                        // @triton_poi_fused_cat_9
.visible .entry triton_poi_fused_cat_9(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_9_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_9_param_1,
	.param .u32 triton_poi_fused_cat_9_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<44>;
	.reg .b32 	%r<41>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_cat_9_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_cat_9_param_1];
$L__tmp0:
	.loc	1 21 28                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:21:33
	shl.b32 	%r9, %r1, 7;
	.loc	1 22 36                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:22:36
	mov.u32 	%r10, %tid.x;
	and.b32  	%r11, %r10, 127;
	.loc	1 22 23                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:22:23
	or.b32  	%r12, %r9, %r11;
	.loc	1 23 21                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:23:21
	setp.lt.s32 	%p7, %r12, 2304;
	.loc	1 24 19                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:24:19
	mul.hi.s32 	%r13, %r12, 954437177;
	shr.u32 	%r14, %r13, 31;
	shr.s32 	%r15, %r13, 3;
	add.s32 	%r16, %r15, %r14;
	mul.lo.s32 	%r17, %r16, 36;
	sub.s32 	%r18, %r12, %r17;
	.loc	1 31 18                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:31:18
	setp.lt.s32 	%p8, %r18, 12;
	.loc	1 32 43                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:43
	cvt.u16.u32 	%rs1, %r18;
	mul.lo.s16 	%rs2, %rs1, 86;
	shr.u16 	%rs3, %rs2, 15;
	shr.u16 	%rs4, %rs2, 8;
	add.s16 	%rs5, %rs4, %rs3;
	cvt.s16.s8 	%rs6, %rs5;
	.loc	1 32 48                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:48
	shr.u16 	%rs7, %rs6, 13;
	and.b16  	%rs8, %rs7, 3;
	add.s16 	%rs9, %rs5, %rs8;
	and.b16  	%rs10, %rs9, 252;
	sub.s16 	%rs11, %rs5, %rs10;
	.loc	1 32 34                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:34
	mul.lo.s16 	%rs12, %rs11, 9;
	cvt.u32.u16 	%r19, %rs12;
	cvt.s32.s8 	%r20, %r19;
	.loc	1 32 71                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:71
	mul.lo.s16 	%rs13, %rs5, 3;
	sub.s16 	%rs14, %rs1, %rs13;
	cvt.u32.u16 	%r21, %rs14;
	cvt.s32.s8 	%r22, %r21;
	.loc	1 32 54                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:54
	add.s32 	%r23, %r17, %r22;
	.loc	1 32 64                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:64
	add.s32 	%r24, %r23, %r20;
	.loc	1 32 30                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:30
	mul.wide.s32 	%rd7, %r24, 4;
	add.s64 	%rd1, %rd5, %rd7;
	.loc	1 32 84                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:84
	and.pred  	%p1, %p7, %p8;
	mov.b32 	%r3, 0;
	.loc	1 32 77                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:32:77
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 36 18                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:36:18
	add.s32 	%r25, %r18, -12;
	setp.lt.u32 	%p9, %r25, 12;
	.loc	1 37 56                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:56
	cvt.u16.u32 	%rs15, %r25;
	mul.lo.s16 	%rs16, %rs15, 86;
	shr.u16 	%rs17, %rs16, 15;
	shr.u16 	%rs18, %rs16, 8;
	add.s16 	%rs19, %rs18, %rs17;
	cvt.s16.s8 	%rs20, %rs19;
	.loc	1 37 61                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:61
	shr.u16 	%rs21, %rs20, 13;
	and.b16  	%rs22, %rs21, 3;
	add.s16 	%rs23, %rs19, %rs22;
	and.b16  	%rs24, %rs23, 252;
	sub.s16 	%rs25, %rs19, %rs24;
	.loc	1 37 39                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:39
	mul.lo.s16 	%rs26, %rs25, 9;
	cvt.u32.u16 	%r26, %rs26;
	cvt.s32.s8 	%r27, %r26;
	.loc	1 37 92                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:92
	mul.lo.s16 	%rs27, %rs19, 3;
	sub.s16 	%rs28, %rs15, %rs27;
	cvt.u32.u16 	%r28, %rs28;
	cvt.s32.s8 	%r29, %r28;
	.loc	1 37 35                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:35
	add.s32 	%r30, %r17, %r29;
	.loc	1 37 67                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:67
	add.s32 	%r31, %r30, %r27;
	.loc	1 37 77                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:77
	add.s32 	%r32, %r31, 3;
	.loc	1 37 31                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:31
	mul.wide.s32 	%rd8, %r32, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 37 105                        // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:105
	and.pred  	%p3, %p7, %p9;
	.loc	1 37 98                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:37:98
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 38 20                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:38:20
	setp.gt.s32 	%p10, %r18, 23;
	.loc	1 41 56                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:56
	add.s16 	%rs29, %rs1, -24;
	cvt.s16.s8 	%rs30, %rs29;
	mul.lo.s16 	%rs31, %rs30, 86;
	shr.u16 	%rs32, %rs31, 15;
	shr.u16 	%rs33, %rs31, 8;
	add.s16 	%rs34, %rs33, %rs32;
	cvt.s16.s8 	%rs35, %rs34;
	.loc	1 41 61                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:61
	shr.u16 	%rs36, %rs35, 13;
	and.b16  	%rs37, %rs36, 3;
	add.s16 	%rs38, %rs34, %rs37;
	and.b16  	%rs39, %rs38, 252;
	sub.s16 	%rs40, %rs34, %rs39;
	.loc	1 41 39                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:39
	mul.lo.s16 	%rs41, %rs40, 9;
	cvt.u32.u16 	%r33, %rs41;
	cvt.s32.s8 	%r34, %r33;
	.loc	1 41 92                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:92
	mul.lo.s16 	%rs42, %rs34, 3;
	sub.s16 	%rs43, %rs29, %rs42;
	cvt.u32.u16 	%r35, %rs43;
	cvt.s32.s8 	%r36, %r35;
	.loc	1 41 35                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:35
	add.s32 	%r37, %r17, %r36;
	.loc	1 41 67                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:67
	add.s32 	%r38, %r37, %r34;
	.loc	1 41 77                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:77
	add.s32 	%r39, %r38, 6;
	.loc	1 41 31                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:31
	mul.wide.s32 	%rd9, %r39, 4;
	add.s64 	%rd3, %rd5, %rd9;
	.loc	1 41 106                        // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:106
	and.pred  	%p5, %p7, %p10;
	.loc	1 41 98                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:41:98
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	.loc	1 42 34                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:42:34
	selp.b32 	%r40, %r4, %r6, %p9;
	.loc	1 43 33                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:43:33
	selp.b32 	%r8, %r2, %r40, %p8;
	.loc	1 44 25                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:44:25
	mul.wide.s32 	%rd10, %r12, 4;
	add.s64 	%rd4, %rd6, %rd10;
	.loc	1 44 37                         // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:44:37
	// begin inline asm
	@%p7 st.global.b32 [ %rd4 + 0 ], { %r8 };
	// end inline asm
	.loc	1 44 4                          // c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py:44:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5w/c5wn3te7rw2vaznglj66nqevxnpzjmd4neuacl5tdnnmtilnk4ut.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 119
.b8 110
.b8 51
.b8 116
.b8 101
.b8 55
.b8 114
.b8 119
.b8 50
.b8 118
.b8 97
.b8 122
.b8 110
.b8 103
.b8 108
.b8 106
.b8 54
.b8 54
.b8 110
.b8 113
.b8 101
.b8 118
.b8 120
.b8 110
.b8 112
.b8 122
.b8 106
.b8 109
.b8 100
.b8 52
.b8 110
.b8 101
.b8 117
.b8 97
.b8 99
.b8 108
.b8 53
.b8 116
.b8 100
.b8 110
.b8 110
.b8 109
.b8 116
.b8 105
.b8 108
.b8 110
.b8 107
.b8 52
.b8 117
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 119
.b8 0
	}
	.section	.debug_macinfo	{	}
