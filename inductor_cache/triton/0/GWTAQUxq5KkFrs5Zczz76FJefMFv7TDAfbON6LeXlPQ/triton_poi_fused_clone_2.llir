; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 62, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 48, !dbg !14
  %13 = srem i32 %10, 3, !dbg !15
  %14 = srem i32 %11, 3, !dbg !15
  %15 = sdiv i32 %10, 12, !dbg !16
  %16 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !17
  %17 = insertelement <2 x i32> %16, i32 %10, i64 1, !dbg !17
  %18 = sdiv <2 x i32> %17, splat (i32 3), !dbg !17
  %19 = srem <2 x i32> %18, splat (i32 4), !dbg !18
  %20 = shl nsw i32 %15, 2, !dbg !19
  %21 = or disjoint i32 %20, 1, !dbg !20
  %22 = add nsw i32 %21, %13, !dbg !21
  %23 = add nsw i32 %21, %14, !dbg !21
  %24 = sext i32 %22 to i64, !dbg !22
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !22
  %26 = sext i32 %23 to i64, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !22
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %12) #1, !dbg !23
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %12) #1, !dbg !23
  %30 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !23
  %31 = insertelement <2 x i32> %30, i32 %28, i64 1, !dbg !23
  %32 = bitcast <2 x i32> %31 to <2 x float>, !dbg !23
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !24
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !24
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %12) #1, !dbg !25
  %36 = bitcast i32 %35 to float, !dbg !25
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %12) #1, !dbg !25
  %38 = bitcast i32 %37 to float, !dbg !25
  %39 = fptosi <2 x float> %32 to <2 x i64>, !dbg !26
  %40 = sext <2 x i32> %19 to <2 x i64>, !dbg !27
  %41 = icmp eq <2 x i64> %39, %40, !dbg !27
  %42 = extractelement <2 x i1> %41, i64 1, !dbg !28
  %43 = uitofp i1 %42 to float, !dbg !28
  %44 = extractelement <2 x i1> %41, i64 0, !dbg !28
  %45 = uitofp i1 %44 to float, !dbg !28
  %46 = fmul float %36, %43, !dbg !29
  %47 = fmul float %38, %45, !dbg !29
  %48 = sext i32 %10 to i64, !dbg !30
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !30
  %50 = bitcast float %46 to i32, !dbg !31
  %51 = bitcast float %47 to i32, !dbg !31
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %50, i32 %51, ptr addrspace(1) %49, i1 %12) #1, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ci3l3nt3nggwmsoozkdufoo4l27i27sj2uolpopa35r3ol57jvf3.py", directory: "inductor_cache/i3")
!4 = !{ptr @triton_poi_fused_clone_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_2", linkageName: "triton_poi_fused_clone_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 28, column: 41, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 39, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 46, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 46, scope: !7)
!26 = !DILocation(line: 30, column: 19, scope: !7)
!27 = !DILocation(line: 32, column: 19, scope: !7)
!28 = !DILocation(line: 34, column: 19, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 36, column: 25, scope: !7)
!31 = !DILocation(line: 36, column: 36, scope: !7)
!32 = !DILocation(line: 36, column: 4, scope: !7)
