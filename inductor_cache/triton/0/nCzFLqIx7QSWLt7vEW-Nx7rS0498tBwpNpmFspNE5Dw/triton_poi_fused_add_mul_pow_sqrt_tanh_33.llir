; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_33(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = shl i32 %6, 3, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 5, !dbg !12
  %10 = and i32 %9, 3, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 4, !dbg !13
  %13 = icmp slt i32 %11, 8, !dbg !14
  %14 = icmp slt i32 %12, 8, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %16 = shl i32 %15, 7, !dbg !16
  %17 = shl i32 %8, 2, !dbg !17
  %18 = and i32 %17, 124, !dbg !17
  %19 = or disjoint i32 %16, %18, !dbg !18
  %20 = icmp slt i32 %19, 6144, !dbg !19
  %21 = mul i32 %11, 6144, !dbg !20
  %22 = mul i32 %12, 6144, !dbg !20
  %23 = add i32 %19, %21, !dbg !21
  %24 = add i32 %19, %22, !dbg !21
  %25 = sext i32 %23 to i64, !dbg !22
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !22
  %27 = sext i32 %24 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = and i1 %13, %20, !dbg !23
  %30 = and i1 %14, %20, !dbg !23
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %26, i1 %29) #4, !dbg !24
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !24
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !24
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !24
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !24
  %36 = bitcast i32 %32 to float, !dbg !24
  %37 = bitcast i32 %33 to float, !dbg !24
  %38 = bitcast i32 %34 to float, !dbg !24
  %39 = bitcast i32 %35 to float, !dbg !24
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %30) #4, !dbg !24
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !24
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !24
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !24
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !24
  %45 = bitcast i32 %41 to float, !dbg !24
  %46 = bitcast i32 %42 to float, !dbg !24
  %47 = bitcast i32 %43 to float, !dbg !24
  %48 = bitcast i32 %44 to float, !dbg !24
  %49 = fmul float %36, %36, !dbg !25
  %50 = fmul float %37, %37, !dbg !25
  %51 = fmul float %38, %38, !dbg !25
  %52 = fmul float %39, %39, !dbg !25
  %53 = fmul float %45, %45, !dbg !25
  %54 = fmul float %46, %46, !dbg !25
  %55 = fmul float %47, %47, !dbg !25
  %56 = fmul float %48, %48, !dbg !25
  %57 = fmul float %49, %36, !dbg !26
  %58 = fmul float %50, %37, !dbg !26
  %59 = fmul float %51, %38, !dbg !26
  %60 = fmul float %52, %39, !dbg !26
  %61 = fmul float %53, %45, !dbg !26
  %62 = fmul float %54, %46, !dbg !26
  %63 = fmul float %55, %47, !dbg !26
  %64 = fmul float %56, %48, !dbg !26
  %65 = fmul float %57, 0x3FA6E4E260000000, !dbg !27
  %66 = fmul float %58, 0x3FA6E4E260000000, !dbg !27
  %67 = fmul float %59, 0x3FA6E4E260000000, !dbg !27
  %68 = fmul float %60, 0x3FA6E4E260000000, !dbg !27
  %69 = fmul float %61, 0x3FA6E4E260000000, !dbg !27
  %70 = fmul float %62, 0x3FA6E4E260000000, !dbg !27
  %71 = fmul float %63, 0x3FA6E4E260000000, !dbg !27
  %72 = fmul float %64, 0x3FA6E4E260000000, !dbg !27
  %73 = fadd float %65, %36, !dbg !28
  %74 = fadd float %66, %37, !dbg !28
  %75 = fadd float %67, %38, !dbg !28
  %76 = fadd float %68, %39, !dbg !28
  %77 = fadd float %69, %45, !dbg !28
  %78 = fadd float %70, %46, !dbg !28
  %79 = fadd float %71, %47, !dbg !28
  %80 = fadd float %72, %48, !dbg !28
  %81 = fmul float %73, 0x3FE9884540000000, !dbg !29
  %82 = fmul float %74, 0x3FE9884540000000, !dbg !29
  %83 = fmul float %75, 0x3FE9884540000000, !dbg !29
  %84 = fmul float %76, 0x3FE9884540000000, !dbg !29
  %85 = fmul float %77, 0x3FE9884540000000, !dbg !29
  %86 = fmul float %78, 0x3FE9884540000000, !dbg !29
  %87 = fmul float %79, 0x3FE9884540000000, !dbg !29
  %88 = fmul float %80, 0x3FE9884540000000, !dbg !29
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i = icmp eq i32 %89, 0, !dbg !30
  %90 = tail call float @llvm.nvvm.fabs.ftz.f(float %81) #4, !dbg !30
  %91 = tail call float @llvm.nvvm.fabs.f(float %81) #4, !dbg !30
  %.01.i = select i1 %.not.i, float %91, float %90, !dbg !30
  %92 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !30
  br i1 %92, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !30

__internal_fmad.exit1.i:                          ; preds = %5
  %93 = fmul float %.01.i, 0x4007154760000000, !dbg !30
  %94 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %93) #4, !dbg !30
  %95 = fadd float %94, 1.000000e+00, !dbg !30
  %96 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %95) #5, !dbg !30, !srcloc !31
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i = icmp eq i32 %97, 0, !dbg !30
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %96, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %96, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i = select i1 %.not6.i, float %99, float %98, !dbg !30
  %100 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !30
  %s.0.i = select i1 %100, float 1.000000e+00, float %.03.i, !dbg !30
  %101 = bitcast float %s.0.i to i32, !dbg !30
  %102 = bitcast float %81 to i32, !dbg !30
  %103 = and i32 %102, -2147483648, !dbg !30
  %104 = or i32 %103, %101, !dbg !30
  %105 = bitcast i32 %104 to float, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__internal_fmad.exit3.i:                          ; preds = %5
  %106 = fmul float %81, %81, !dbg !30
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i = icmp eq i32 %107, 0, !dbg !30
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %106, float 0xBFAAC795C0000000) #4, !dbg !30
  %109 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %106, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i = select i1 %.not1.i, float %109, float %108, !dbg !30
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i = icmp eq i32 %110, 0, !dbg !30
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %106, float 0x3FC10B2820000000) #4, !dbg !30
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %106, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i = select i1 %.not2.i, float %112, float %111, !dbg !30
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i = icmp eq i32 %113, 0, !dbg !30
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %106, float 0xBFD5553DA0000000) #4, !dbg !30
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %106, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i = select i1 %.not3.i, float %115, float %114, !dbg !30
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i = icmp eq i32 %116, 0, !dbg !30
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %106, float 0.000000e+00) #4, !dbg !30
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %106, float 0.000000e+00) #4, !dbg !30
  %.04.i = select i1 %.not4.i, float %118, float %117, !dbg !30
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i = icmp eq i32 %119, 0, !dbg !30
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %81, float %81) #4, !dbg !30
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %81, float %81) #4, !dbg !30
  %.02.i = select i1 %.not5.i, float %121, float %120, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %105, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !30
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i18 = icmp eq i32 %122, 0, !dbg !30
  %123 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #4, !dbg !30
  %124 = tail call float @llvm.nvvm.fabs.f(float %82) #4, !dbg !30
  %.01.i19 = select i1 %.not.i18, float %124, float %123, !dbg !30
  %125 = fcmp ult float %.01.i19, 0x3FE3333340000000, !dbg !30
  br i1 %125, label %__internal_fmad.exit3.i25, label %__internal_fmad.exit1.i20, !dbg !30

__internal_fmad.exit1.i20:                        ; preds = %__nv_tanhf.exit
  %126 = fmul float %.01.i19, 0x4007154760000000, !dbg !30
  %127 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %126) #4, !dbg !30
  %128 = fadd float %127, 1.000000e+00, !dbg !30
  %129 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %128) #5, !dbg !30, !srcloc !31
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i21 = icmp eq i32 %130, 0, !dbg !30
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %129, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i22 = select i1 %.not6.i21, float %132, float %131, !dbg !30
  %133 = fcmp oge float %.01.i19, 0x4022059680000000, !dbg !30
  %s.0.i23 = select i1 %133, float 1.000000e+00, float %.03.i22, !dbg !30
  %134 = bitcast float %s.0.i23 to i32, !dbg !30
  %135 = bitcast float %82 to i32, !dbg !30
  %136 = and i32 %135, -2147483648, !dbg !30
  %137 = or i32 %136, %134, !dbg !30
  %138 = bitcast i32 %137 to float, !dbg !30
  br label %__nv_tanhf.exit36, !dbg !30

__internal_fmad.exit3.i25:                        ; preds = %__nv_tanhf.exit
  %139 = fmul float %82, %82, !dbg !30
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i26 = icmp eq i32 %140, 0, !dbg !30
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %139, float 0xBFAAC795C0000000) #4, !dbg !30
  %142 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %139, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i27 = select i1 %.not1.i26, float %142, float %141, !dbg !30
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i28 = icmp eq i32 %143, 0, !dbg !30
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i27, float %139, float 0x3FC10B2820000000) #4, !dbg !30
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i27, float %139, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i29 = select i1 %.not2.i28, float %145, float %144, !dbg !30
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i30 = icmp eq i32 %146, 0, !dbg !30
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i29, float %139, float 0xBFD5553DA0000000) #4, !dbg !30
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i29, float %139, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i31 = select i1 %.not3.i30, float %148, float %147, !dbg !30
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i32 = icmp eq i32 %149, 0, !dbg !30
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i31, float %139, float 0.000000e+00) #4, !dbg !30
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i31, float %139, float 0.000000e+00) #4, !dbg !30
  %.04.i33 = select i1 %.not4.i32, float %151, float %150, !dbg !30
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i34 = icmp eq i32 %152, 0, !dbg !30
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i33, float %82, float %82) #4, !dbg !30
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i33, float %82, float %82) #4, !dbg !30
  %.02.i35 = select i1 %.not5.i34, float %154, float %153, !dbg !30
  br label %__nv_tanhf.exit36, !dbg !30

__nv_tanhf.exit36:                                ; preds = %__internal_fmad.exit1.i20, %__internal_fmad.exit3.i25
  %s.1.i24 = phi float [ %138, %__internal_fmad.exit1.i20 ], [ %.02.i35, %__internal_fmad.exit3.i25 ], !dbg !30
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i37 = icmp eq i32 %155, 0, !dbg !30
  %156 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #4, !dbg !30
  %157 = tail call float @llvm.nvvm.fabs.f(float %83) #4, !dbg !30
  %.01.i38 = select i1 %.not.i37, float %157, float %156, !dbg !30
  %158 = fcmp ult float %.01.i38, 0x3FE3333340000000, !dbg !30
  br i1 %158, label %__internal_fmad.exit3.i44, label %__internal_fmad.exit1.i39, !dbg !30

__internal_fmad.exit1.i39:                        ; preds = %__nv_tanhf.exit36
  %159 = fmul float %.01.i38, 0x4007154760000000, !dbg !30
  %160 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %159) #4, !dbg !30
  %161 = fadd float %160, 1.000000e+00, !dbg !30
  %162 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %161) #5, !dbg !30, !srcloc !31
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i40 = icmp eq i32 %163, 0, !dbg !30
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %162, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i41 = select i1 %.not6.i40, float %165, float %164, !dbg !30
  %166 = fcmp oge float %.01.i38, 0x4022059680000000, !dbg !30
  %s.0.i42 = select i1 %166, float 1.000000e+00, float %.03.i41, !dbg !30
  %167 = bitcast float %s.0.i42 to i32, !dbg !30
  %168 = bitcast float %83 to i32, !dbg !30
  %169 = and i32 %168, -2147483648, !dbg !30
  %170 = or i32 %169, %167, !dbg !30
  %171 = bitcast i32 %170 to float, !dbg !30
  br label %__nv_tanhf.exit55, !dbg !30

__internal_fmad.exit3.i44:                        ; preds = %__nv_tanhf.exit36
  %172 = fmul float %83, %83, !dbg !30
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i45 = icmp eq i32 %173, 0, !dbg !30
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %172, float 0xBFAAC795C0000000) #4, !dbg !30
  %175 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %172, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i46 = select i1 %.not1.i45, float %175, float %174, !dbg !30
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i47 = icmp eq i32 %176, 0, !dbg !30
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %172, float 0x3FC10B2820000000) #4, !dbg !30
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %172, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i48 = select i1 %.not2.i47, float %178, float %177, !dbg !30
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i49 = icmp eq i32 %179, 0, !dbg !30
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i48, float %172, float 0xBFD5553DA0000000) #4, !dbg !30
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i48, float %172, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i50 = select i1 %.not3.i49, float %181, float %180, !dbg !30
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i51 = icmp eq i32 %182, 0, !dbg !30
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %172, float 0.000000e+00) #4, !dbg !30
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %172, float 0.000000e+00) #4, !dbg !30
  %.04.i52 = select i1 %.not4.i51, float %184, float %183, !dbg !30
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i53 = icmp eq i32 %185, 0, !dbg !30
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i52, float %83, float %83) #4, !dbg !30
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i52, float %83, float %83) #4, !dbg !30
  %.02.i54 = select i1 %.not5.i53, float %187, float %186, !dbg !30
  br label %__nv_tanhf.exit55, !dbg !30

__nv_tanhf.exit55:                                ; preds = %__internal_fmad.exit1.i39, %__internal_fmad.exit3.i44
  %s.1.i43 = phi float [ %171, %__internal_fmad.exit1.i39 ], [ %.02.i54, %__internal_fmad.exit3.i44 ], !dbg !30
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i56 = icmp eq i32 %188, 0, !dbg !30
  %189 = tail call float @llvm.nvvm.fabs.ftz.f(float %84) #4, !dbg !30
  %190 = tail call float @llvm.nvvm.fabs.f(float %84) #4, !dbg !30
  %.01.i57 = select i1 %.not.i56, float %190, float %189, !dbg !30
  %191 = fcmp ult float %.01.i57, 0x3FE3333340000000, !dbg !30
  br i1 %191, label %__internal_fmad.exit3.i63, label %__internal_fmad.exit1.i58, !dbg !30

__internal_fmad.exit1.i58:                        ; preds = %__nv_tanhf.exit55
  %192 = fmul float %.01.i57, 0x4007154760000000, !dbg !30
  %193 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %192) #4, !dbg !30
  %194 = fadd float %193, 1.000000e+00, !dbg !30
  %195 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %194) #5, !dbg !30, !srcloc !31
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i59 = icmp eq i32 %196, 0, !dbg !30
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %195, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %195, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i60 = select i1 %.not6.i59, float %198, float %197, !dbg !30
  %199 = fcmp oge float %.01.i57, 0x4022059680000000, !dbg !30
  %s.0.i61 = select i1 %199, float 1.000000e+00, float %.03.i60, !dbg !30
  %200 = bitcast float %s.0.i61 to i32, !dbg !30
  %201 = bitcast float %84 to i32, !dbg !30
  %202 = and i32 %201, -2147483648, !dbg !30
  %203 = or i32 %202, %200, !dbg !30
  %204 = bitcast i32 %203 to float, !dbg !30
  br label %__nv_tanhf.exit74, !dbg !30

__internal_fmad.exit3.i63:                        ; preds = %__nv_tanhf.exit55
  %205 = fmul float %84, %84, !dbg !30
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i64 = icmp eq i32 %206, 0, !dbg !30
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %205, float 0xBFAAC795C0000000) #4, !dbg !30
  %208 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %205, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i65 = select i1 %.not1.i64, float %208, float %207, !dbg !30
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i66 = icmp eq i32 %209, 0, !dbg !30
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i65, float %205, float 0x3FC10B2820000000) #4, !dbg !30
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i65, float %205, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i67 = select i1 %.not2.i66, float %211, float %210, !dbg !30
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i68 = icmp eq i32 %212, 0, !dbg !30
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i67, float %205, float 0xBFD5553DA0000000) #4, !dbg !30
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i67, float %205, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i69 = select i1 %.not3.i68, float %214, float %213, !dbg !30
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i70 = icmp eq i32 %215, 0, !dbg !30
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i69, float %205, float 0.000000e+00) #4, !dbg !30
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i69, float %205, float 0.000000e+00) #4, !dbg !30
  %.04.i71 = select i1 %.not4.i70, float %217, float %216, !dbg !30
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i72 = icmp eq i32 %218, 0, !dbg !30
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i71, float %84, float %84) #4, !dbg !30
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i71, float %84, float %84) #4, !dbg !30
  %.02.i73 = select i1 %.not5.i72, float %220, float %219, !dbg !30
  br label %__nv_tanhf.exit74, !dbg !30

__nv_tanhf.exit74:                                ; preds = %__internal_fmad.exit1.i58, %__internal_fmad.exit3.i63
  %s.1.i62 = phi float [ %204, %__internal_fmad.exit1.i58 ], [ %.02.i73, %__internal_fmad.exit3.i63 ], !dbg !30
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i75 = icmp eq i32 %221, 0, !dbg !30
  %222 = tail call float @llvm.nvvm.fabs.ftz.f(float %85) #4, !dbg !30
  %223 = tail call float @llvm.nvvm.fabs.f(float %85) #4, !dbg !30
  %.01.i76 = select i1 %.not.i75, float %223, float %222, !dbg !30
  %224 = fcmp ult float %.01.i76, 0x3FE3333340000000, !dbg !30
  br i1 %224, label %__internal_fmad.exit3.i82, label %__internal_fmad.exit1.i77, !dbg !30

__internal_fmad.exit1.i77:                        ; preds = %__nv_tanhf.exit74
  %225 = fmul float %.01.i76, 0x4007154760000000, !dbg !30
  %226 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %225) #4, !dbg !30
  %227 = fadd float %226, 1.000000e+00, !dbg !30
  %228 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %227) #5, !dbg !30, !srcloc !31
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i78 = icmp eq i32 %229, 0, !dbg !30
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %228, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %228, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i79 = select i1 %.not6.i78, float %231, float %230, !dbg !30
  %232 = fcmp oge float %.01.i76, 0x4022059680000000, !dbg !30
  %s.0.i80 = select i1 %232, float 1.000000e+00, float %.03.i79, !dbg !30
  %233 = bitcast float %s.0.i80 to i32, !dbg !30
  %234 = bitcast float %85 to i32, !dbg !30
  %235 = and i32 %234, -2147483648, !dbg !30
  %236 = or i32 %235, %233, !dbg !30
  %237 = bitcast i32 %236 to float, !dbg !30
  br label %__nv_tanhf.exit93, !dbg !30

__internal_fmad.exit3.i82:                        ; preds = %__nv_tanhf.exit74
  %238 = fmul float %85, %85, !dbg !30
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i83 = icmp eq i32 %239, 0, !dbg !30
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %238, float 0xBFAAC795C0000000) #4, !dbg !30
  %241 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %238, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i84 = select i1 %.not1.i83, float %241, float %240, !dbg !30
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i85 = icmp eq i32 %242, 0, !dbg !30
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i84, float %238, float 0x3FC10B2820000000) #4, !dbg !30
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i84, float %238, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i86 = select i1 %.not2.i85, float %244, float %243, !dbg !30
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i87 = icmp eq i32 %245, 0, !dbg !30
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i86, float %238, float 0xBFD5553DA0000000) #4, !dbg !30
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i86, float %238, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i88 = select i1 %.not3.i87, float %247, float %246, !dbg !30
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i89 = icmp eq i32 %248, 0, !dbg !30
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i88, float %238, float 0.000000e+00) #4, !dbg !30
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i88, float %238, float 0.000000e+00) #4, !dbg !30
  %.04.i90 = select i1 %.not4.i89, float %250, float %249, !dbg !30
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i91 = icmp eq i32 %251, 0, !dbg !30
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i90, float %85, float %85) #4, !dbg !30
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i90, float %85, float %85) #4, !dbg !30
  %.02.i92 = select i1 %.not5.i91, float %253, float %252, !dbg !30
  br label %__nv_tanhf.exit93, !dbg !30

__nv_tanhf.exit93:                                ; preds = %__internal_fmad.exit1.i77, %__internal_fmad.exit3.i82
  %s.1.i81 = phi float [ %237, %__internal_fmad.exit1.i77 ], [ %.02.i92, %__internal_fmad.exit3.i82 ], !dbg !30
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i94 = icmp eq i32 %254, 0, !dbg !30
  %255 = tail call float @llvm.nvvm.fabs.ftz.f(float %86) #4, !dbg !30
  %256 = tail call float @llvm.nvvm.fabs.f(float %86) #4, !dbg !30
  %.01.i95 = select i1 %.not.i94, float %256, float %255, !dbg !30
  %257 = fcmp ult float %.01.i95, 0x3FE3333340000000, !dbg !30
  br i1 %257, label %__internal_fmad.exit3.i101, label %__internal_fmad.exit1.i96, !dbg !30

__internal_fmad.exit1.i96:                        ; preds = %__nv_tanhf.exit93
  %258 = fmul float %.01.i95, 0x4007154760000000, !dbg !30
  %259 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %258) #4, !dbg !30
  %260 = fadd float %259, 1.000000e+00, !dbg !30
  %261 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %260) #5, !dbg !30, !srcloc !31
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i97 = icmp eq i32 %262, 0, !dbg !30
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %261, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i98 = select i1 %.not6.i97, float %264, float %263, !dbg !30
  %265 = fcmp oge float %.01.i95, 0x4022059680000000, !dbg !30
  %s.0.i99 = select i1 %265, float 1.000000e+00, float %.03.i98, !dbg !30
  %266 = bitcast float %s.0.i99 to i32, !dbg !30
  %267 = bitcast float %86 to i32, !dbg !30
  %268 = and i32 %267, -2147483648, !dbg !30
  %269 = or i32 %268, %266, !dbg !30
  %270 = bitcast i32 %269 to float, !dbg !30
  br label %__nv_tanhf.exit112, !dbg !30

__internal_fmad.exit3.i101:                       ; preds = %__nv_tanhf.exit93
  %271 = fmul float %86, %86, !dbg !30
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i102 = icmp eq i32 %272, 0, !dbg !30
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %271, float 0xBFAAC795C0000000) #4, !dbg !30
  %274 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %271, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i103 = select i1 %.not1.i102, float %274, float %273, !dbg !30
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i104 = icmp eq i32 %275, 0, !dbg !30
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i103, float %271, float 0x3FC10B2820000000) #4, !dbg !30
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i103, float %271, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i105 = select i1 %.not2.i104, float %277, float %276, !dbg !30
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i106 = icmp eq i32 %278, 0, !dbg !30
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i105, float %271, float 0xBFD5553DA0000000) #4, !dbg !30
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i105, float %271, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i107 = select i1 %.not3.i106, float %280, float %279, !dbg !30
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i108 = icmp eq i32 %281, 0, !dbg !30
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i107, float %271, float 0.000000e+00) #4, !dbg !30
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i107, float %271, float 0.000000e+00) #4, !dbg !30
  %.04.i109 = select i1 %.not4.i108, float %283, float %282, !dbg !30
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i110 = icmp eq i32 %284, 0, !dbg !30
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i109, float %86, float %86) #4, !dbg !30
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i109, float %86, float %86) #4, !dbg !30
  %.02.i111 = select i1 %.not5.i110, float %286, float %285, !dbg !30
  br label %__nv_tanhf.exit112, !dbg !30

__nv_tanhf.exit112:                               ; preds = %__internal_fmad.exit1.i96, %__internal_fmad.exit3.i101
  %s.1.i100 = phi float [ %270, %__internal_fmad.exit1.i96 ], [ %.02.i111, %__internal_fmad.exit3.i101 ], !dbg !30
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i113 = icmp eq i32 %287, 0, !dbg !30
  %288 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #4, !dbg !30
  %289 = tail call float @llvm.nvvm.fabs.f(float %87) #4, !dbg !30
  %.01.i114 = select i1 %.not.i113, float %289, float %288, !dbg !30
  %290 = fcmp ult float %.01.i114, 0x3FE3333340000000, !dbg !30
  br i1 %290, label %__internal_fmad.exit3.i120, label %__internal_fmad.exit1.i115, !dbg !30

__internal_fmad.exit1.i115:                       ; preds = %__nv_tanhf.exit112
  %291 = fmul float %.01.i114, 0x4007154760000000, !dbg !30
  %292 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %291) #4, !dbg !30
  %293 = fadd float %292, 1.000000e+00, !dbg !30
  %294 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %293) #5, !dbg !30, !srcloc !31
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i116 = icmp eq i32 %295, 0, !dbg !30
  %296 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %294, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %297 = tail call float @llvm.nvvm.fma.rn.f(float %294, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i117 = select i1 %.not6.i116, float %297, float %296, !dbg !30
  %298 = fcmp oge float %.01.i114, 0x4022059680000000, !dbg !30
  %s.0.i118 = select i1 %298, float 1.000000e+00, float %.03.i117, !dbg !30
  %299 = bitcast float %s.0.i118 to i32, !dbg !30
  %300 = bitcast float %87 to i32, !dbg !30
  %301 = and i32 %300, -2147483648, !dbg !30
  %302 = or i32 %301, %299, !dbg !30
  %303 = bitcast i32 %302 to float, !dbg !30
  br label %__nv_tanhf.exit131, !dbg !30

__internal_fmad.exit3.i120:                       ; preds = %__nv_tanhf.exit112
  %304 = fmul float %87, %87, !dbg !30
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i121 = icmp eq i32 %305, 0, !dbg !30
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %304, float 0xBFAAC795C0000000) #4, !dbg !30
  %307 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %304, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i122 = select i1 %.not1.i121, float %307, float %306, !dbg !30
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i123 = icmp eq i32 %308, 0, !dbg !30
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i122, float %304, float 0x3FC10B2820000000) #4, !dbg !30
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i122, float %304, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i124 = select i1 %.not2.i123, float %310, float %309, !dbg !30
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i125 = icmp eq i32 %311, 0, !dbg !30
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i124, float %304, float 0xBFD5553DA0000000) #4, !dbg !30
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i124, float %304, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i126 = select i1 %.not3.i125, float %313, float %312, !dbg !30
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i127 = icmp eq i32 %314, 0, !dbg !30
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i126, float %304, float 0.000000e+00) #4, !dbg !30
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i126, float %304, float 0.000000e+00) #4, !dbg !30
  %.04.i128 = select i1 %.not4.i127, float %316, float %315, !dbg !30
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i129 = icmp eq i32 %317, 0, !dbg !30
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i128, float %87, float %87) #4, !dbg !30
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i128, float %87, float %87) #4, !dbg !30
  %.02.i130 = select i1 %.not5.i129, float %319, float %318, !dbg !30
  br label %__nv_tanhf.exit131, !dbg !30

__nv_tanhf.exit131:                               ; preds = %__internal_fmad.exit1.i115, %__internal_fmad.exit3.i120
  %s.1.i119 = phi float [ %303, %__internal_fmad.exit1.i115 ], [ %.02.i130, %__internal_fmad.exit3.i120 ], !dbg !30
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not.i132 = icmp eq i32 %320, 0, !dbg !30
  %321 = tail call float @llvm.nvvm.fabs.ftz.f(float %88) #4, !dbg !30
  %322 = tail call float @llvm.nvvm.fabs.f(float %88) #4, !dbg !30
  %.01.i133 = select i1 %.not.i132, float %322, float %321, !dbg !30
  %323 = fcmp ult float %.01.i133, 0x3FE3333340000000, !dbg !30
  br i1 %323, label %__internal_fmad.exit3.i139, label %__internal_fmad.exit1.i134, !dbg !30

__internal_fmad.exit1.i134:                       ; preds = %__nv_tanhf.exit131
  %324 = fmul float %.01.i133, 0x4007154760000000, !dbg !30
  %325 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %324) #4, !dbg !30
  %326 = fadd float %325, 1.000000e+00, !dbg !30
  %327 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %326) #5, !dbg !30, !srcloc !31
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not6.i135 = icmp eq i32 %328, 0, !dbg !30
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %327, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %327, float -2.000000e+00, float 1.000000e+00) #4, !dbg !30
  %.03.i136 = select i1 %.not6.i135, float %330, float %329, !dbg !30
  %331 = fcmp oge float %.01.i133, 0x4022059680000000, !dbg !30
  %s.0.i137 = select i1 %331, float 1.000000e+00, float %.03.i136, !dbg !30
  %332 = bitcast float %s.0.i137 to i32, !dbg !30
  %333 = bitcast float %88 to i32, !dbg !30
  %334 = and i32 %333, -2147483648, !dbg !30
  %335 = or i32 %334, %332, !dbg !30
  %336 = bitcast i32 %335 to float, !dbg !30
  br label %__nv_tanhf.exit150, !dbg !30

__internal_fmad.exit3.i139:                       ; preds = %__nv_tanhf.exit131
  %337 = fmul float %88, %88, !dbg !30
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not1.i140 = icmp eq i32 %338, 0, !dbg !30
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %337, float 0xBFAAC795C0000000) #4, !dbg !30
  %340 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %337, float 0xBFAAC795C0000000) #4, !dbg !30
  %.06.i141 = select i1 %.not1.i140, float %340, float %339, !dbg !30
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not2.i142 = icmp eq i32 %341, 0, !dbg !30
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i141, float %337, float 0x3FC10B2820000000) #4, !dbg !30
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i141, float %337, float 0x3FC10B2820000000) #4, !dbg !30
  %.05.i143 = select i1 %.not2.i142, float %343, float %342, !dbg !30
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not3.i144 = icmp eq i32 %344, 0, !dbg !30
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i143, float %337, float 0xBFD5553DA0000000) #4, !dbg !30
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i143, float %337, float 0xBFD5553DA0000000) #4, !dbg !30
  %.0.i145 = select i1 %.not3.i144, float %346, float %345, !dbg !30
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not4.i146 = icmp eq i32 %347, 0, !dbg !30
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i145, float %337, float 0.000000e+00) #4, !dbg !30
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i145, float %337, float 0.000000e+00) #4, !dbg !30
  %.04.i147 = select i1 %.not4.i146, float %349, float %348, !dbg !30
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !30
  %.not5.i148 = icmp eq i32 %350, 0, !dbg !30
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i147, float %88, float %88) #4, !dbg !30
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i147, float %88, float %88) #4, !dbg !30
  %.02.i149 = select i1 %.not5.i148, float %352, float %351, !dbg !30
  br label %__nv_tanhf.exit150, !dbg !30

__nv_tanhf.exit150:                               ; preds = %__internal_fmad.exit1.i134, %__internal_fmad.exit3.i139
  %s.1.i138 = phi float [ %336, %__internal_fmad.exit1.i134 ], [ %.02.i149, %__internal_fmad.exit3.i139 ], !dbg !30
  %353 = lshr i32 %8, 2, !dbg !17
  %354 = and i32 %353, 31, !dbg !17
  %355 = or disjoint i32 %354, %16, !dbg !18
  %356 = or disjoint i32 %355, 96, !dbg !18
  %357 = icmp slt i32 %356, 6144, !dbg !19
  %358 = shl i32 %8, 1, !dbg !12
  %359 = and i32 %358, 6, !dbg !12
  %360 = or disjoint i32 %7, %359, !dbg !13
  %361 = icmp slt i32 %360, 8, !dbg !14
  %362 = and i1 %361, %357, !dbg !23
  %363 = or disjoint i32 %355, 64, !dbg !18
  %364 = icmp slt i32 %363, 6144, !dbg !19
  %365 = and i1 %361, %364, !dbg !23
  %366 = or disjoint i32 %355, 32, !dbg !18
  %367 = icmp slt i32 %366, 6144, !dbg !19
  %368 = and i1 %361, %367, !dbg !23
  %369 = icmp slt i32 %355, 6144, !dbg !19
  %370 = and i1 %361, %369, !dbg !23
  %371 = ashr exact i32 %360, 1, !dbg !32
  %372 = fmul float %36, 5.000000e-01, !dbg !33
  %373 = fmul float %37, 5.000000e-01, !dbg !33
  %374 = fmul float %38, 5.000000e-01, !dbg !33
  %375 = fmul float %39, 5.000000e-01, !dbg !33
  %376 = fmul float %45, 5.000000e-01, !dbg !33
  %377 = fmul float %46, 5.000000e-01, !dbg !33
  %378 = fmul float %47, 5.000000e-01, !dbg !33
  %379 = fmul float %48, 5.000000e-01, !dbg !33
  %380 = fadd float %s.1.i, 1.000000e+00, !dbg !34
  %381 = fadd float %s.1.i24, 1.000000e+00, !dbg !34
  %382 = fadd float %s.1.i43, 1.000000e+00, !dbg !34
  %383 = fadd float %s.1.i62, 1.000000e+00, !dbg !34
  %384 = fadd float %s.1.i81, 1.000000e+00, !dbg !34
  %385 = fadd float %s.1.i100, 1.000000e+00, !dbg !34
  %386 = fadd float %s.1.i119, 1.000000e+00, !dbg !34
  %387 = fadd float %s.1.i138, 1.000000e+00, !dbg !34
  %388 = fmul float %372, %380, !dbg !35
  %389 = fmul float %373, %381, !dbg !35
  %390 = fmul float %374, %382, !dbg !35
  %391 = fmul float %375, %383, !dbg !35
  %392 = fmul float %376, %384, !dbg !35
  %393 = fmul float %377, %385, !dbg !35
  %394 = fmul float %378, %386, !dbg !35
  %395 = fmul float %379, %387, !dbg !35
  %396 = shl i32 %355, 1, !dbg !36
  %397 = shl i32 %366, 1, !dbg !36
  %398 = shl i32 %363, 1, !dbg !36
  %399 = shl i32 %356, 1, !dbg !36
  %400 = mul i32 %371, 12288, !dbg !37
  %401 = add i32 %396, %400, !dbg !38
  %402 = add i32 %397, %400, !dbg !38
  %403 = add i32 %398, %400, !dbg !38
  %404 = add i32 %399, %400, !dbg !38
  %405 = sext i32 %401 to i64, !dbg !39
  %406 = getelementptr float, ptr addrspace(1) %1, i64 %405, !dbg !39
  %407 = sext i32 %402 to i64, !dbg !39
  %408 = getelementptr float, ptr addrspace(1) %1, i64 %407, !dbg !39
  %409 = sext i32 %403 to i64, !dbg !39
  %410 = getelementptr float, ptr addrspace(1) %1, i64 %409, !dbg !39
  %411 = sext i32 %404 to i64, !dbg !39
  %412 = getelementptr float, ptr addrspace(1) %1, i64 %411, !dbg !39
  %413 = shl i32 %8, 5, !dbg !40
  %414 = and i32 %413, 992, !dbg !40
  %415 = or disjoint i32 %414, %10, !dbg !40
  %416 = and i32 %358, 254, !dbg !40
  %417 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %414, !dbg !40
  %418 = getelementptr float, ptr addrspace(3) %417, i32 %415, !dbg !40
  %419 = bitcast float %s.1.i to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %418, <1 x i32> %419, i1 true) #4, !dbg !40
  %420 = or disjoint i32 %415, 8, !dbg !40
  %421 = lshr i32 %420, 2, !dbg !40
  %422 = getelementptr float, ptr addrspace(3) @global_smem, i32 %421, !dbg !40
  %423 = getelementptr float, ptr addrspace(3) %422, i32 %420, !dbg !40
  %424 = bitcast float %s.1.i24 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %423, <1 x i32> %424, i1 true) #4, !dbg !40
  %425 = or disjoint i32 %415, 16, !dbg !40
  %426 = lshr i32 %425, 2, !dbg !40
  %427 = getelementptr float, ptr addrspace(3) @global_smem, i32 %426, !dbg !40
  %428 = getelementptr float, ptr addrspace(3) %427, i32 %425, !dbg !40
  %429 = bitcast float %s.1.i43 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %428, <1 x i32> %429, i1 true) #4, !dbg !40
  %430 = or disjoint i32 %415, 24, !dbg !40
  %431 = lshr i32 %430, 2, !dbg !40
  %432 = getelementptr float, ptr addrspace(3) @global_smem, i32 %431, !dbg !40
  %433 = getelementptr float, ptr addrspace(3) %432, i32 %430, !dbg !40
  %434 = bitcast float %s.1.i62 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %433, <1 x i32> %434, i1 true) #4, !dbg !40
  %435 = or disjoint i32 %415, 4, !dbg !40
  %436 = getelementptr float, ptr addrspace(3) %417, i32 %435, !dbg !40
  %437 = bitcast float %s.1.i81 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %436, <1 x i32> %437, i1 true) #4, !dbg !40
  %438 = or disjoint i32 %415, 12, !dbg !40
  %439 = lshr i32 %438, 2, !dbg !40
  %440 = and i32 %439, 250, !dbg !40
  %441 = getelementptr float, ptr addrspace(3) @global_smem, i32 %440, !dbg !40
  %442 = getelementptr float, ptr addrspace(3) %441, i32 %438, !dbg !40
  %443 = bitcast float %s.1.i100 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %442, <1 x i32> %443, i1 true) #4, !dbg !40
  %444 = or disjoint i32 %415, 20, !dbg !40
  %445 = lshr i32 %444, 2, !dbg !40
  %446 = and i32 %445, 252, !dbg !40
  %447 = getelementptr float, ptr addrspace(3) @global_smem, i32 %446, !dbg !40
  %448 = getelementptr float, ptr addrspace(3) %447, i32 %444, !dbg !40
  %449 = bitcast float %s.1.i119 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %448, <1 x i32> %449, i1 true) #4, !dbg !40
  %450 = or disjoint i32 %415, 28, !dbg !40
  %451 = lshr i32 %450, 2, !dbg !40
  %452 = and i32 %451, 254, !dbg !40
  %453 = getelementptr float, ptr addrspace(3) @global_smem, i32 %452, !dbg !40
  %454 = getelementptr float, ptr addrspace(3) %453, i32 %450, !dbg !40
  %455 = bitcast float %s.1.i138 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %454, <1 x i32> %455, i1 true) #4, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %456 = lshr i32 %358, 2, !dbg !40
  %457 = and i32 %456, 62, !dbg !40
  %458 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %457, !dbg !40
  %459 = getelementptr inbounds float, ptr addrspace(3) %458, i32 %416, !dbg !40
  %460 = or disjoint i32 %416, 256, !dbg !40
  %461 = lshr i32 %460, 2, !dbg !40
  %462 = and i32 %461, 126, !dbg !40
  %463 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %462, !dbg !40
  %464 = getelementptr inbounds float, ptr addrspace(3) %463, i32 %460, !dbg !40
  %465 = load <2 x i32>, ptr addrspace(3) %464, align 8, !dbg !40
  %466 = or disjoint i32 %416, 512, !dbg !40
  %467 = lshr i32 %466, 2, !dbg !40
  %468 = and i32 %467, 190, !dbg !40
  %469 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %468, !dbg !40
  %470 = getelementptr inbounds float, ptr addrspace(3) %469, i32 %466, !dbg !40
  %471 = load <2 x i32>, ptr addrspace(3) %470, align 8, !dbg !40
  %472 = or disjoint i32 %416, 768, !dbg !40
  %473 = lshr i32 %472, 2, !dbg !40
  %474 = and i32 %473, 254, !dbg !40
  %475 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %474, !dbg !40
  %476 = getelementptr inbounds float, ptr addrspace(3) %475, i32 %472, !dbg !40
  %477 = load <2 x i32>, ptr addrspace(3) %476, align 8, !dbg !40
  %.extract = load i32, ptr addrspace(3) %459, align 8, !dbg !40
  %478 = getelementptr inbounds i8, ptr addrspace(3) %459, i32 4, !dbg !40
  %.extract11 = load i32, ptr addrspace(3) %478, align 4, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract11, ptr addrspace(1) %406, i1 %370) #4, !dbg !40
  %.extract12 = extractelement <2 x i32> %465, i64 0, !dbg !40
  %.extract13 = extractelement <2 x i32> %465, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract12, i32 %.extract13, ptr addrspace(1) %408, i1 %368) #4, !dbg !40
  %.extract14 = extractelement <2 x i32> %471, i64 0, !dbg !40
  %.extract15 = extractelement <2 x i32> %471, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract14, i32 %.extract15, ptr addrspace(1) %410, i1 %365) #4, !dbg !40
  %.extract16 = extractelement <2 x i32> %477, i64 0, !dbg !40
  %.extract17 = extractelement <2 x i32> %477, i64 1, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract16, i32 %.extract17, ptr addrspace(1) %412, i1 %362) #4, !dbg !40
  %479 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !41
  %480 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !41
  %481 = bitcast float %388 to i32, !dbg !42
  %482 = bitcast float %389 to i32, !dbg !42
  %483 = bitcast float %390 to i32, !dbg !42
  %484 = bitcast float %391 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %481, i32 %482, i32 %483, i32 %484, ptr addrspace(1) %479, i1 %29) #4, !dbg !42
  %485 = bitcast float %392 to i32, !dbg !42
  %486 = bitcast float %393 to i32, !dbg !42
  %487 = bitcast float %394 to i32, !dbg !42
  %488 = bitcast float %395 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %485, i32 %486, i32 %487, i32 %488, ptr addrspace(1) %480, i1 %30) #4, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4nkrwp6be2ogbx5ka2eic3cwlkfflhxjrq47e3utyyelfokvjwu.py", directory: "inductor_cache/4n")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_33, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_33", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 32, column: 40, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 53, scope: !7)
!24 = !DILocation(line: 32, column: 45, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 18, scope: !7)
!29 = !DILocation(line: 39, column: 18, scope: !7)
!30 = !DILocation(line: 40, column: 26, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 31, column: 19, scope: !7)
!33 = !DILocation(line: 42, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 19, scope: !7)
!35 = !DILocation(line: 45, column: 20, scope: !7)
!36 = !DILocation(line: 46, column: 32, scope: !7)
!37 = !DILocation(line: 46, column: 43, scope: !7)
!38 = !DILocation(line: 46, column: 37, scope: !7)
!39 = !DILocation(line: 46, column: 25, scope: !7)
!40 = !DILocation(line: 46, column: 54, scope: !7)
!41 = !DILocation(line: 47, column: 25, scope: !7)
!42 = !DILocation(line: 47, column: 47, scope: !7)
!43 = !DILocation(line: 47, column: 4, scope: !7)
