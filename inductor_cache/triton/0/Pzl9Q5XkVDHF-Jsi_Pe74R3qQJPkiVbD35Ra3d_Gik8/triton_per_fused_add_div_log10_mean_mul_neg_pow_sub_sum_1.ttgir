#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":19:0)
#loc1 = loc(unknown)
#loc67 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":84:26)
#loc77 = loc(callsite(#loc1 at #loc67))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_div_log10_mean_mul_neg_pow_sub_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999993E-9> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+01> : tensor<1x64xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<6.400000e+01> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<3> : tensor<1x64xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc2)
    %2 = arith.muli %1, %cst_3 : tensor<1x64xi32, #blocked> loc(#loc3)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.addptr %3, %2 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc4)
    %5 = tt.load %4 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc5)
    %6 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc6)
    %7 = tt.addptr %6, %2 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc6)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc7)
    %9 = arith.addi %2, %cst_4 : tensor<1x64xi32, #blocked> loc(#loc8)
    %10 = tt.addptr %3, %9 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.addptr %6, %9 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc11)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc12)
    %14 = arith.addi %2, %cst_5 : tensor<1x64xi32, #blocked> loc(#loc13)
    %15 = tt.addptr %3, %14 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc14)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %6, %14 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc16)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc17)
    %19 = arith.addi %2, %cst_6 : tensor<1x64xi32, #blocked> loc(#loc18)
    %20 = tt.addptr %3, %19 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc19)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc20)
    %22 = tt.addptr %6, %19 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc21)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc22)
    %24 = arith.mulf %5, %8 : tensor<1x64xf32, #blocked> loc(#loc23)
    %25 = arith.mulf %11, %13 : tensor<1x64xf32, #blocked> loc(#loc24)
    %26 = arith.addf %24, %25 : tensor<1x64xf32, #blocked> loc(#loc25)
    %27 = arith.mulf %16, %18 : tensor<1x64xf32, #blocked> loc(#loc26)
    %28 = arith.addf %26, %27 : tensor<1x64xf32, #blocked> loc(#loc27)
    %29 = arith.mulf %21, %23 : tensor<1x64xf32, #blocked> loc(#loc28)
    %30 = arith.addf %28, %29 : tensor<1x64xf32, #blocked> loc(#loc29)
    %31 = arith.mulf %8, %8 : tensor<1x64xf32, #blocked> loc(#loc30)
    %32 = arith.mulf %13, %13 : tensor<1x64xf32, #blocked> loc(#loc31)
    %33 = arith.addf %31, %32 : tensor<1x64xf32, #blocked> loc(#loc32)
    %34 = arith.mulf %18, %18 : tensor<1x64xf32, #blocked> loc(#loc33)
    %35 = arith.addf %33, %34 : tensor<1x64xf32, #blocked> loc(#loc34)
    %36 = arith.mulf %23, %23 : tensor<1x64xf32, #blocked> loc(#loc35)
    %37 = arith.addf %35, %36 : tensor<1x64xf32, #blocked> loc(#loc36)
    %38 = arith.addf %37, %cst : tensor<1x64xf32, #blocked> loc(#loc37)
    %39 = arith.divf %30, %38 : tensor<1x64xf32, #blocked> loc(#loc38)
    %40 = arith.mulf %8, %39 : tensor<1x64xf32, #blocked> loc(#loc39)
    %41 = arith.mulf %40, %40 : tensor<1x64xf32, #blocked> loc(#loc40)
    %42 = arith.mulf %13, %39 : tensor<1x64xf32, #blocked> loc(#loc41)
    %43 = arith.mulf %42, %42 : tensor<1x64xf32, #blocked> loc(#loc42)
    %44 = arith.addf %41, %43 : tensor<1x64xf32, #blocked> loc(#loc43)
    %45 = arith.mulf %18, %39 : tensor<1x64xf32, #blocked> loc(#loc44)
    %46 = arith.mulf %45, %45 : tensor<1x64xf32, #blocked> loc(#loc45)
    %47 = arith.addf %44, %46 : tensor<1x64xf32, #blocked> loc(#loc46)
    %48 = arith.mulf %23, %39 : tensor<1x64xf32, #blocked> loc(#loc47)
    %49 = arith.mulf %48, %48 : tensor<1x64xf32, #blocked> loc(#loc48)
    %50 = arith.addf %47, %49 : tensor<1x64xf32, #blocked> loc(#loc49)
    %51 = arith.subf %5, %8 : tensor<1x64xf32, #blocked> loc(#loc50)
    %52 = arith.mulf %51, %51 : tensor<1x64xf32, #blocked> loc(#loc51)
    %53 = arith.subf %11, %13 : tensor<1x64xf32, #blocked> loc(#loc52)
    %54 = arith.mulf %53, %53 : tensor<1x64xf32, #blocked> loc(#loc53)
    %55 = arith.addf %52, %54 : tensor<1x64xf32, #blocked> loc(#loc54)
    %56 = arith.subf %16, %18 : tensor<1x64xf32, #blocked> loc(#loc55)
    %57 = arith.mulf %56, %56 : tensor<1x64xf32, #blocked> loc(#loc56)
    %58 = arith.addf %55, %57 : tensor<1x64xf32, #blocked> loc(#loc57)
    %59 = arith.subf %21, %23 : tensor<1x64xf32, #blocked> loc(#loc58)
    %60 = arith.mulf %59, %59 : tensor<1x64xf32, #blocked> loc(#loc59)
    %61 = arith.addf %58, %60 : tensor<1x64xf32, #blocked> loc(#loc60)
    %62 = arith.addf %61, %cst : tensor<1x64xf32, #blocked> loc(#loc61)
    %63 = arith.divf %50, %62 : tensor<1x64xf32, #blocked> loc(#loc62)
    %64 = arith.addf %63, %cst : tensor<1x64xf32, #blocked> loc(#loc63)
    %65 = tt.extern_elementwise %64 {libname = "", libpath = "", pure = true, symbol = "__nv_log10f"} : (tensor<1x64xf32, #blocked>) -> tensor<1x64xf32, #blocked> loc(#loc64)
    %66 = arith.mulf %65, %cst_0 : tensor<1x64xf32, #blocked> loc(#loc65)
    %67 = "tt.reduce"(%66) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc67)), %arg5: f32 loc(callsite(#loc1 at #loc67))):
      %73 = arith.addf %arg4, %arg5 : f32 loc(#loc79)
      tt.reduce.return %73 : f32 loc(#loc76)
    }) : (tensor<1x64xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc76)
    %68 = tt.expand_dims %67 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc69)
    %69 = arith.divf %68, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc70)
    %70 = arith.subf %cst_2, %69 : tensor<1x1xf32, #blocked> loc(#loc71)
    gpu.barrier loc(#loc72)
    %71 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc73)
    %72 = tt.splat %71 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc74)
    tt.store %72, %70 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc74)
    tt.return loc(#loc75)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":26:34)
#loc3 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":30:32)
#loc4 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":30:30)
#loc5 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":30:37)
#loc6 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":31:30)
#loc7 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":31:37)
#loc8 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":32:34)
#loc9 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":32:30)
#loc10 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":32:41)
#loc11 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":33:30)
#loc12 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":33:41)
#loc13 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":34:34)
#loc14 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":34:30)
#loc15 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":34:41)
#loc16 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":35:30)
#loc17 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":35:41)
#loc18 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":36:35)
#loc19 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":36:31)
#loc20 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":36:42)
#loc21 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":37:31)
#loc22 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":37:42)
#loc23 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":38:18)
#loc24 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":39:18)
#loc25 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":40:18)
#loc26 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":41:18)
#loc27 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":42:19)
#loc28 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":43:20)
#loc29 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":44:20)
#loc30 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":45:19)
#loc31 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":46:19)
#loc32 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":47:20)
#loc33 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":48:19)
#loc34 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":49:20)
#loc35 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":50:20)
#loc36 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":51:20)
#loc37 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":53:20)
#loc38 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":54:20)
#loc39 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":55:19)
#loc40 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":56:20)
#loc41 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":57:19)
#loc42 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":58:20)
#loc43 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":59:20)
#loc44 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":60:19)
#loc45 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":61:20)
#loc46 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":62:20)
#loc47 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":63:20)
#loc48 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":64:20)
#loc49 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":65:20)
#loc50 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":66:19)
#loc51 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":67:20)
#loc52 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":68:19)
#loc53 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":69:20)
#loc54 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":70:20)
#loc55 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":71:19)
#loc56 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":72:20)
#loc57 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":73:20)
#loc58 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":74:20)
#loc59 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":75:20)
#loc60 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":76:20)
#loc61 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":77:20)
#loc62 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":78:20)
#loc63 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":79:20)
#loc64 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":80:28)
#loc65 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":82:20)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc69 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":84:29)
#loc70 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":86:20)
#loc71 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":87:13)
#loc72 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":88:4)
#loc73 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":89:28)
#loc74 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":89:71)
#loc75 = loc("inductor_cache/53/c53tjngz7gfwwlypvjckrgtd6fp4ncegeymnhjyn4zs7jgut6q3k.py":89:4)
#loc76 = loc(callsite(#loc66 at #loc67))
#loc78 = loc(callsite(#loc68 at #loc66))
#loc79 = loc(callsite(#loc78 at #loc67))
