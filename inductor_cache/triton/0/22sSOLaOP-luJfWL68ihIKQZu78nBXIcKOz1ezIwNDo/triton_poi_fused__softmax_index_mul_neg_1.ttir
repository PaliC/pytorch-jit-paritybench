#loc = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":19:0)
module {
  tt.func public @triton_poi_fused__softmax_index_mul_neg_1(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<256xi64> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<256xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<256xi64> loc(#loc1)
    %cst_6 = arith.constant dense<true> : tensor<256xi1> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_10 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_9 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_8 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_7 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %4, %cst_9 : tensor<256xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc11)
    %11 = arith.remsi %10, %cst_8 : tensor<256xi32> loc(#loc12)
    %12 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>> loc(#loc13)
    %13 = tt.addptr %12, %7 : tensor<256x!tt.ptr<i64>>, tensor<256xi32> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>> loc(#loc14)
    %15 = arith.addi %14, %cst_0 : tensor<256xi64> loc(#loc15)
    %16 = arith.cmpi slt, %14, %cst : tensor<256xi64> loc(#loc16)
    %17 = arith.select %16, %15, %14 : tensor<256xi1>, tensor<256xi64> loc(#loc17)
    %18 = arith.cmpi sge, %17, %cst : tensor<256xi64> loc(#loc18)
    %19 = arith.cmpi slt, %17, %cst_0 : tensor<256xi64> loc(#loc19)
    %20 = arith.andi %18, %19 : tensor<256xi1> loc(#loc20)
    %21 = arith.xori %5, %cst_6 : tensor<256xi1> loc(#loc21)
    %22 = arith.ori %20, %21 : tensor<256xi1> loc(#loc22)
    tt.assert %22, "index out of bounds: 0 <= tmp4 < 4" : tensor<256xi1> loc(#loc23)
    %23 = arith.muli %17, %cst_5 : tensor<256xi64> loc(#loc24)
    %24 = arith.extsi %9 : tensor<256xi32> to tensor<256xi64> loc(#loc25)
    %25 = arith.addi %24, %23 : tensor<256xi64> loc(#loc25)
    %26 = arith.muli %8, %cst_7 : tensor<256xi32> loc(#loc26)
    %27 = arith.extsi %26 : tensor<256xi32> to tensor<256xi64> loc(#loc27)
    %28 = arith.addi %25, %27 : tensor<256xi64> loc(#loc27)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc28)
    %30 = tt.addptr %29, %28 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc28)
    %31 = tt.load %30, %5 : tensor<256x!tt.ptr<f32>> loc(#loc29)
    %32 = arith.muli %11, %cst_8 : tensor<256xi32> loc(#loc30)
    %33 = arith.extsi %32 : tensor<256xi32> to tensor<256xi64> loc(#loc31)
    %34 = arith.addi %33, %23 : tensor<256xi64> loc(#loc31)
    %35 = arith.addi %34, %27 : tensor<256xi64> loc(#loc32)
    %36 = tt.addptr %29, %35 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc33)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc34)
    %38 = arith.addi %32, %cst_4 : tensor<256xi32> loc(#loc35)
    %39 = arith.extsi %38 : tensor<256xi32> to tensor<256xi64> loc(#loc36)
    %40 = arith.addi %39, %23 : tensor<256xi64> loc(#loc36)
    %41 = arith.addi %40, %27 : tensor<256xi64> loc(#loc37)
    %42 = tt.addptr %29, %41 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc38)
    %43 = tt.load %42, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc39)
    %44 = arith.addf %37, %43 : tensor<256xf32> loc(#loc40)
    %45 = arith.addi %32, %cst_3 : tensor<256xi32> loc(#loc41)
    %46 = arith.extsi %45 : tensor<256xi32> to tensor<256xi64> loc(#loc42)
    %47 = arith.addi %46, %23 : tensor<256xi64> loc(#loc42)
    %48 = arith.addi %47, %27 : tensor<256xi64> loc(#loc43)
    %49 = tt.addptr %29, %48 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc44)
    %50 = tt.load %49, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc45)
    %51 = arith.addf %44, %50 : tensor<256xf32> loc(#loc46)
    %52 = arith.addi %32, %cst_2 : tensor<256xi32> loc(#loc47)
    %53 = arith.extsi %52 : tensor<256xi32> to tensor<256xi64> loc(#loc48)
    %54 = arith.addi %53, %23 : tensor<256xi64> loc(#loc48)
    %55 = arith.addi %54, %27 : tensor<256xi64> loc(#loc49)
    %56 = tt.addptr %29, %55 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc50)
    %57 = tt.load %56, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc51)
    %58 = arith.addf %51, %57 : tensor<256xf32> loc(#loc52)
    %59 = arith.divf %31, %58 : tensor<256xf32> loc(#loc53)
    %60 = arith.subf %cst_1, %59 : tensor<256xf32> loc(#loc54)
    %61 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc55)
    %62 = tt.addptr %61, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc55)
    tt.store %62, %60, %5 : tensor<256x!tt.ptr<f32>> loc(#loc56)
    tt.return loc(#loc57)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":21:28)
#loc3 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":21:33)
#loc4 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":22:36)
#loc5 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":22:23)
#loc6 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":23:21)
#loc7 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":24:21)
#loc8 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":24:27)
#loc9 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":25:19)
#loc10 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":26:19)
#loc11 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":27:21)
#loc12 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":27:26)
#loc13 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":29:30)
#loc14 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":29:35)
#loc15 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":31:18)
#loc16 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":32:18)
#loc17 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":33:32)
#loc18 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":34:28)
#loc19 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":34:44)
#loc20 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":34:37)
#loc21 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":34:52)
#loc22 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":34:50)
#loc23 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":34:60)
#loc24 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":35:38)
#loc25 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":35:35)
#loc26 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":35:48)
#loc27 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":35:45)
#loc28 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":35:30)
#loc29 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":35:53)
#loc30 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":36:32)
#loc31 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":36:37)
#loc32 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":36:47)
#loc33 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":36:30)
#loc34 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":36:55)
#loc35 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":37:34)
#loc36 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":37:41)
#loc37 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":37:51)
#loc38 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":37:30)
#loc39 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":37:59)
#loc40 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":38:18)
#loc41 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":39:35)
#loc42 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":39:42)
#loc43 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":39:52)
#loc44 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":39:31)
#loc45 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":39:60)
#loc46 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":40:19)
#loc47 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":41:35)
#loc48 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":41:42)
#loc49 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":41:52)
#loc50 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":41:31)
#loc51 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":41:60)
#loc52 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":42:20)
#loc53 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":43:19)
#loc54 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":44:13)
#loc55 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":47:25)
#loc56 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":47:37)
#loc57 = loc("inductor_cache/mu/cmu3xry4hubic6rexd4ld5jvaxqzqx7z7dgcilkdnrzmtcqn42wm.py":47:4)
