//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_mean_mul_rsub_1 // -- Begin function triton_poi_fused_add_div_mean_mul_rsub_1
                                        // @triton_poi_fused_add_div_mean_mul_rsub_1
.visible .entry triton_poi_fused_add_div_mean_mul_rsub_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_rsub_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_rsub_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_rsub_1_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_mean_mul_rsub_1_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<31>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_poi_fused_add_div_mean_mul_rsub_1_param_0];
	mov.pred 	%p1, -1;
$L__tmp0:
	.loc	1 24 19                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:24:19
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd2, [triton_poi_fused_add_div_mean_mul_rsub_1_param_1];
	mov.b32 	%f1, %r1;
	ld.param.u64 	%rd3, [triton_poi_fused_add_div_mean_mul_rsub_1_param_2];
	.loc	1 26 19                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:26:19
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	ld.param.u64 	%rd13, [triton_poi_fused_add_div_mean_mul_rsub_1_param_3];
	mov.b32 	%f2, %r2;
	.loc	1 28 19                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:28:19
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 30 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:30:31
	add.s64 	%rd4, %rd1, 4;
	.loc	1 30 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:30:20
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 32 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:32:31
	add.s64 	%rd5, %rd2, 4;
	.loc	1 32 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:32:20
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	.loc	1 34 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:34:31
	add.s64 	%rd6, %rd3, 4;
	.loc	1 34 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:34:20
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 36 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:36:31
	add.s64 	%rd7, %rd1, 8;
	.loc	1 36 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:36:20
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 38 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:38:31
	add.s64 	%rd8, %rd2, 8;
	.loc	1 38 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:38:20
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r8;
	.loc	1 40 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:40:31
	add.s64 	%rd9, %rd3, 8;
	.loc	1 40 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:40:20
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r9;
	.loc	1 42 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:42:31
	add.s64 	%rd10, %rd1, 12;
	.loc	1 42 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:42:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r10;
	.loc	1 44 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:44:31
	add.s64 	%rd11, %rd2, 12;
	.loc	1 44 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:44:20
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r11;
	.loc	1 46 31                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:46:31
	add.s64 	%rd12, %rd3, 12;
	.loc	1 46 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:46:20
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r12;
	.loc	1 49 18                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:49:18
	add.f32 	%f13, %f1, %f1;
	.loc	1 50 18                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:50:18
	add.f32 	%f14, %f2, %f3;
	.loc	1 52 19                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:52:19
	add.f32 	%f15, %f14, 0f33D6BF95;
	.loc	1 53 19                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:53:19
	mov.b32 	%r15, %f15;
	mov.b32 	%r14, %f13;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f16, %r13;
	.loc	1 54 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:54:20
	add.f32 	%f17, %f4, %f4;
	.loc	1 55 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:55:20
	add.f32 	%f18, %f5, %f6;
	.loc	1 56 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:56:20
	add.f32 	%f19, %f18, 0f33D6BF95;
	.loc	1 57 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:57:20
	mov.b32 	%r18, %f19;
	mov.b32 	%r17, %f17;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f20, %r16;
	.loc	1 58 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:58:20
	add.f32 	%f21, %f16, %f20;
	.loc	1 59 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:59:20
	add.f32 	%f22, %f7, %f7;
	.loc	1 60 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:60:20
	add.f32 	%f23, %f8, %f9;
	.loc	1 61 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:61:20
	add.f32 	%f24, %f23, 0f33D6BF95;
	.loc	1 62 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:62:20
	mov.b32 	%r21, %f24;
	mov.b32 	%r20, %f22;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f25, %r19;
	.loc	1 63 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:63:20
	add.f32 	%f26, %f21, %f25;
	.loc	1 64 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:64:20
	add.f32 	%f27, %f10, %f10;
	.loc	1 65 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:65:20
	add.f32 	%f28, %f11, %f12;
	.loc	1 66 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:66:20
	add.f32 	%f29, %f28, 0f33D6BF95;
	.loc	1 67 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:67:20
	mov.b32 	%r24, %f29;
	mov.b32 	%r23, %f27;
	// begin inline asm
	div.full.f32 %r22, %r23, %r24;
	// end inline asm
	mov.b32 	%f30, %r22;
	.loc	1 68 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:68:20
	add.f32 	%f31, %f26, %f30;
	.loc	1 70 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:70:20
	mov.b32 	%r26, %f31;
	mov.b32 	%r27, 1082130432;
	// begin inline asm
	div.full.f32 %r25, %r26, %r27;
	// end inline asm
	mov.b32 	%f32, %r25;
	mov.f32 	%f33, 0f3F800000;
	.loc	1 72 20                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:72:20
	sub.f32 	%f34, %f33, %f32;
	.loc	1 73 65                         // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:73:65
	mov.u32 	%r29, %tid.x;
	and.b32  	%r30, %r29, 31;
	setp.eq.s32 	%p13, %r30, 0;
	mov.b32 	%r28, %f34;
	// begin inline asm
	@%p13 st.global.b32 [ %rd13 + 0 ], { %r28 };
	// end inline asm
	.loc	1 73 4                          // czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/za/czaaeyagz3svxxzfmatclqodcdhtfqwzsutxo3c2rexkf2pcta3o.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 97
.b8 97
.b8 101
.b8 121
.b8 97
.b8 103
.b8 122
.b8 51
.b8 115
.b8 118
.b8 120
.b8 120
.b8 122
.b8 102
.b8 109
.b8 97
.b8 116
.b8 99
.b8 108
.b8 113
.b8 111
.b8 100
.b8 99
.b8 100
.b8 104
.b8 116
.b8 102
.b8 113
.b8 119
.b8 122
.b8 115
.b8 117
.b8 116
.b8 120
.b8 111
.b8 51
.b8 99
.b8 50
.b8 114
.b8 101
.b8 120
.b8 107
.b8 102
.b8 50
.b8 112
.b8 99
.b8 116
.b8 97
.b8 51
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 97
.b8 0
	}
	.section	.debug_macinfo	{	}
