; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 1936, !dbg !14
  %10 = sdiv i32 %8, 11, !dbg !15
  %11 = sdiv i32 %8, 121, !dbg !16
  %12 = insertelement <2 x i32> poison, i32 %8, i64 0, !dbg !17
  %13 = insertelement <2 x i32> %12, i32 %10, i64 1, !dbg !17
  %14 = srem <2 x i32> %13, splat (i32 11), !dbg !17
  %15 = add nsw <2 x i32> %14, splat (i32 -2), !dbg !18
  %16 = extractelement <2 x i32> %15, i64 0, !dbg !19
  %17 = extractelement <2 x i32> %15, i64 1, !dbg !20
  %18 = or i32 %17, %16, !dbg !21
  %19 = icmp ult i32 %18, 8, !dbg !21
  %20 = trunc nsw <2 x i32> %14 to <2 x i8>, !dbg !22
  %21 = srem <2 x i8> %20, splat (i8 2), !dbg !22
  %22 = icmp slt <2 x i8> %21, splat (i8 1), !dbg !23
  %shift = shufflevector <2 x i1> %22, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !24
  %23 = and <2 x i1> %22, %shift, !dbg !24
  %24 = extractelement <2 x i1> %23, i64 0, !dbg !24
  %25 = and i1 %19, %24, !dbg !25
  %.lhs.trunc3 = trunc nsw i32 %17 to i8, !dbg !20
  %26 = sdiv i8 %.lhs.trunc3, 2, !dbg !20
  %27 = srem i8 %26, 4, !dbg !26
  %.sext6 = sext i8 %27 to i32, !dbg !26
  %28 = shl nsw i32 %.sext6, 2, !dbg !27
  %29 = shl nsw i32 %11, 4, !dbg !28
  %.lhs.trunc7 = trunc nsw i32 %16 to i8, !dbg !19
  %30 = sdiv i8 %.lhs.trunc7, 2, !dbg !19
  %31 = srem i8 %30, 4, !dbg !29
  %.sext10 = sext i8 %31 to i32, !dbg !29
  %32 = add nsw i32 %29, %.sext10, !dbg !30
  %33 = add nsw i32 %32, %28, !dbg !31
  %34 = sext i32 %33 to i64, !dbg !32
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !32
  %36 = and i1 %9, %25, !dbg !33
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36) #1, !dbg !34
  %38 = sext i32 %8 to i64, !dbg !35
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !35
  %40 = select i1 %19, i32 %37, i32 0, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %40, ptr addrspace(1) %39, i1 %9) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6dwa7bp2sdesyd4i7ymv256erbfdizzjn4rkatslheuvakytfe2.py", directory: "inductor_cache/6d")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_1", linkageName: "triton_poi_fused_constant_pad_nd_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 18, scope: !7)
!19 = !DILocation(line: 46, column: 88, scope: !7)
!20 = !DILocation(line: 46, column: 51, scope: !7)
!21 = !DILocation(line: 38, column: 19, scope: !7)
!22 = !DILocation(line: 42, column: 27, scope: !7)
!23 = !DILocation(line: 43, column: 20, scope: !7)
!24 = !DILocation(line: 44, column: 20, scope: !7)
!25 = !DILocation(line: 45, column: 20, scope: !7)
!26 = !DILocation(line: 46, column: 56, scope: !7)
!27 = !DILocation(line: 46, column: 35, scope: !7)
!28 = !DILocation(line: 46, column: 65, scope: !7)
!29 = !DILocation(line: 46, column: 93, scope: !7)
!30 = !DILocation(line: 46, column: 62, scope: !7)
!31 = !DILocation(line: 46, column: 72, scope: !7)
!32 = !DILocation(line: 46, column: 31, scope: !7)
!33 = !DILocation(line: 46, column: 107, scope: !7)
!34 = !DILocation(line: 46, column: 99, scope: !7)
!35 = !DILocation(line: 49, column: 25, scope: !7)
!36 = !DILocation(line: 48, column: 35, scope: !7)
!37 = !DILocation(line: 49, column: 37, scope: !7)
!38 = !DILocation(line: 49, column: 4, scope: !7)
