; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_elu_11(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %4 = shl i32 %3, 7, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = and i32 %5, 127, !dbg !12
  %7 = or disjoint i32 %4, %6, !dbg !13
  %8 = sext i32 %7 to i64, !dbg !14
  %9 = getelementptr float, ptr addrspace(1) %0, i64 %8, !dbg !14
  %10 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %9, i1 true) #3, !dbg !15
  %11 = bitcast i32 %10 to float, !dbg !15
  %12 = fmul float %11, 0x3FF7154760000000, !dbg !16
  %13 = tail call float @llvm.nvvm.round.f(float %12) #3, !dbg !16
  %14 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %.not.i = icmp eq i32 %14, 0, !dbg !16
  %15 = tail call float @llvm.nvvm.fabs.ftz.f(float %11) #3, !dbg !16
  %16 = tail call float @llvm.nvvm.fabs.f(float %11) #3, !dbg !16
  %.03.i = select i1 %.not.i, float %16, float %15, !dbg !16
  %17 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !16
  %t.0.i = select i1 %17, float 0.000000e+00, float %13, !dbg !16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %19 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %20 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !16
  %j.0.i = select i1 %20, float 1.270000e+02, float %t.0.i, !dbg !16
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %.not8.i = icmp eq i32 %26, 0, !dbg !16
  br i1 %.not8.i, label %29, label %27, !dbg !16

27:                                               ; preds = %2
  %28 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !16
  br label %__nv_expm1f.exit, !dbg !16

29:                                               ; preds = %2
  %30 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !16
  br label %__nv_expm1f.exit, !dbg !16

__nv_expm1f.exit:                                 ; preds = %27, %29
  %.0.i = phi float [ %28, %27 ], [ %30, %29 ], !dbg !16
  %31 = fcmp ogt float %11, 0.000000e+00, !dbg !17
  %.not7.i = icmp eq i32 %25, 0, !dbg !16
  %.not6.i = icmp eq i32 %24, 0, !dbg !16
  %.not5.i = icmp eq i32 %23, 0, !dbg !16
  %.not4.i = icmp eq i32 %22, 0, !dbg !16
  %.not3.i = icmp eq i32 %21, 0, !dbg !16
  %.not2.i = icmp eq i32 %19, 0, !dbg !16
  %32 = fneg float %t.0.i, !dbg !16
  %.not1.i = icmp eq i32 %18, 0, !dbg !16
  %33 = tail call float @llvm.nvvm.fma.rn.f(float %32, float 0x3FE62E4000000000, float %11) #3, !dbg !16
  %34 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %32, float 0x3FE62E4000000000, float %11) #3, !dbg !16
  %.04.i = select i1 %.not1.i, float %33, float %34, !dbg !16
  %35 = tail call float @llvm.nvvm.fma.rn.f(float %32, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !16
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %32, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !16
  %.05.i = select i1 %.not2.i, float %35, float %36, !dbg !16
  %37 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !16
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !16
  %.07.i = select i1 %.not3.i, float %37, float %38, !dbg !16
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !16
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !16
  %.08.i = select i1 %.not4.i, float %39, float %40, !dbg !16
  %41 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !16
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !16
  %.09.i = select i1 %.not5.i, float %41, float %42, !dbg !16
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !16
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !16
  %.06.i = select i1 %.not6.i, float %43, float %44, !dbg !16
  %45 = fmul float %.05.i, %.06.i, !dbg !16
  %46 = tail call float @llvm.nvvm.fma.rn.f(float %45, float %.05.i, float %.05.i) #3, !dbg !16
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %45, float %.05.i, float %.05.i) #3, !dbg !16
  %.01.i = select i1 %.not7.i, float %46, float %47, !dbg !16
  %48 = fadd float %.0.i, -1.000000e+00, !dbg !16
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !16
  %.not9.i = icmp eq i32 %49, 0, !dbg !16
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %48) #3, !dbg !16
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %48) #3, !dbg !16
  %.02.i = select i1 %.not9.i, float %51, float %50, !dbg !16
  %52 = fadd float %.02.i, %.02.i, !dbg !16
  %u.0.i = select i1 %20, float %52, float %.02.i, !dbg !16
  %53 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !16
  %u.1.i = select i1 %53, float 0x7FF0000000000000, float %u.0.i, !dbg !16
  %54 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !16
  %u.2.i = select i1 %54, float -1.000000e+00, float %u.1.i, !dbg !16
  %55 = fcmp oeq float %11, 0.000000e+00, !dbg !16
  %56 = fadd float %11, %11, !dbg !16
  %u.3.i = select i1 %55, float %56, float %u.2.i, !dbg !16
  %57 = select i1 %31, float %11, float %u.3.i, !dbg !18
  %58 = bitcast float %57 to i32, !dbg !19
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %58, ptr addrspace(1) %9, i1 true) #3, !dbg !19
  ret void, !dbg !20
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cezjbiqjeh33haocmbyk6ry46swg4bkfw5psuumim3rksftz2dka.py", directory: "inductor_cache/ez")
!4 = !{ptr @triton_poi_fused_elu_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_elu_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_elu_11", linkageName: "triton_poi_fused_elu_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 34, scope: !7)
!15 = !DILocation(line: 25, column: 39, scope: !7)
!16 = !DILocation(line: 30, column: 27, scope: !7)
!17 = !DILocation(line: 27, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 32, scope: !7)
!19 = !DILocation(line: 33, column: 39, scope: !7)
!20 = !DILocation(line: 33, column: 4, scope: !7)
