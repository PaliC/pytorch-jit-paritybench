//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_layer_norm_0 // -- Begin function triton_per_fused_native_layer_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_layer_norm_0
.visible .entry triton_per_fused_native_layer_norm_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_layer_norm_0_param_5,
	.param .u32 triton_per_fused_native_layer_norm_0_param_6,
	.param .u32 triton_per_fused_native_layer_norm_0_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<86>;
	.reg .f32 	%f<72>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused_native_layer_norm_0_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_native_layer_norm_0_param_1];
$L__tmp0:
	.loc	1 24 28                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd9, [triton_per_fused_native_layer_norm_0_param_2];
	.loc	1 27 26                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:27:26
	mov.u32 	%r50, %tid.x;
	and.b32  	%r51, %r50, 31;
	ld.param.u64 	%rd10, [triton_per_fused_native_layer_norm_0_param_3];
	ld.param.u64 	%rd11, [triton_per_fused_native_layer_norm_0_param_4];
	shl.b32 	%r52, %r50, 2;
	ld.param.u64 	%rd12, [triton_per_fused_native_layer_norm_0_param_5];
	and.b32  	%r53, %r52, 508;
	.loc	1 29 21                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:29:21
	setp.lt.u32 	%p1, %r53, 384;
	.loc	1 32 35                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:32:35
	mad.lo.s32 	%r54, %r1, 384, %r53;
	.loc	1 32 30                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:32:30
	mul.wide.s32 	%rd13, %r54, 4;
	add.s64 	%rd1, %rd8, %rd13;
	mov.b32 	%r6, 0;
	.loc	1 32 44                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:32:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 33 31                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:33:31
	mul.wide.u32 	%rd14, %r53, 4;
	add.s64 	%rd2, %rd9, %rd14;
	.loc	1 33 36                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:33:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 31                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:34:31
	add.s64 	%rd3, %rd10, %rd14;
	.loc	1 34 36                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:34:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f1, %f2;
	add.f32 	%f6, %f5, %f3;
	add.f32 	%f7, %f6, %f4;
	selp.f32 	%f8, %f7, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f8;
	shfl.sync.bfly.b32	%r56, %r55, 16, 31, -1;
	mov.b32 	%f9, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f10;
	shfl.sync.bfly.b32	%r58, %r57, 8, 31, -1;
	mov.b32 	%f11, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f12;
	shfl.sync.bfly.b32	%r60, %r59, 4, 31, -1;
	mov.b32 	%f13, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f14;
	shfl.sync.bfly.b32	%r62, %r61, 2, 31, -1;
	mov.b32 	%f15, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f16;
	shfl.sync.bfly.b32	%r64, %r63, 1, 31, -1;
	mov.b32 	%f17, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r51, 0;
	shr.u32 	%r65, %r50, 3;
	and.b32  	%r66, %r65, 12;
	mov.u32 	%r67, global_smem;
	add.s32 	%r26, %r67, %r66;
	mov.b32 	%r27, %f18;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r50, 4;
	add.s32 	%r29, %r67, %r52;
	// begin inline asm
	@%p17 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r28;
	shfl.sync.bfly.b32	%r68, %r28, 2, 31, -1;
	mov.b32 	%f20, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f21;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f22, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r71, %r50, 3;
	setp.eq.s32 	%p25, %r71, 0;
	and.pred  	%p18, %p17, %p25;
	mov.b32 	%r31, %f23;
	// begin inline asm
	@%p18 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f24, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f25, %f24, 0f00000000;
$L__tmp3:
	.loc	1 42 19                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:42:19
	mov.b32 	%r33, %f25;
	mov.b32 	%r34, 1136656384;
	// begin inline asm
	div.full.f32 %r49, %r33, %r34;
	// end inline asm
	mov.b32 	%f26, %r49;
	.loc	1 43 19                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:43:19
	sub.f32 	%f27, %f1, %f26;
	sub.f32 	%f28, %f2, %f26;
	sub.f32 	%f29, %f3, %f26;
	sub.f32 	%f30, %f4, %f26;
	.loc	1 44 20                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:44:20
	mul.f32 	%f31, %f28, %f28;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f32, %f27, %f27, %f31;
	fma.rn.f32 	%f33, %f29, %f29, %f32;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	selp.f32 	%f35, %f34, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f35;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f36, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f37;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f38, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f39;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f40, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f41;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f42, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f43;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f44, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f45;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r37, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r37;
	shfl.sync.bfly.b32	%r82, %r37, 2, 31, -1;
	mov.b32 	%f47, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f48;
	shfl.sync.bfly.b32	%r84, %r83, 1, 31, -1;
	mov.b32 	%f49, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f50;
	// begin inline asm
	@%p18 st.shared.b32 [ %r29 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f51, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f52, %f51, 0f00000000;
$L__tmp6:
	.loc	1 49 20                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:49:20
	mov.b32 	%r42, %f52;
	// begin inline asm
	div.full.f32 %r41, %r42, %r34;
	// end inline asm
	mov.b32 	%f53, %r41;
	.loc	1 51 20                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:51:20
	add.f32 	%f54, %f53, 0f3727C5AC;
	.loc	1 52 28                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:52:28
	rsqrt.approx.ftz.f32 	%f55, %f54;
	.loc	1 34 36                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:34:36
	mov.b32 	%f56, %r21;
	mov.b32 	%f57, %r20;
	mov.b32 	%f58, %r19;
	mov.b32 	%f59, %r18;
	.loc	1 33 36                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:33:36
	mov.b32 	%f60, %r13;
	mov.b32 	%f61, %r12;
	mov.b32 	%f62, %r11;
	mov.b32 	%f63, %r10;
	.loc	1 54 20                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:54:20
	mul.f32 	%f64, %f27, %f55;
	mul.f32 	%f65, %f28, %f55;
	mul.f32 	%f66, %f29, %f55;
	mul.f32 	%f67, %f30, %f55;
	.loc	1 56 20                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:56:20
	fma.rn.f32 	%f68, %f64, %f63, %f59;
	fma.rn.f32 	%f69, %f65, %f62, %f58;
	fma.rn.f32 	%f70, %f66, %f61, %f57;
	fma.rn.f32 	%f71, %f67, %f60, %f56;
	.loc	1 57 4                          // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:57:4
	bar.sync 	0;
	.loc	1 58 28                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:58:28
	mul.wide.s32 	%rd15, %r1, 4;
	add.s64 	%rd4, %rd7, %rd15;
	.loc	1 58 40                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:58:40
	and.b32  	%r85, %r50, 127;
	setp.eq.s32 	%p22, %r85, 0;
	mov.b32 	%r44, %f55;
	// begin inline asm
	@%p22 st.global.b32 [ %rd4 + 0 ], { %r44 };
	// end inline asm
	.loc	1 59 25                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:59:25
	add.s64 	%rd5, %rd12, %rd13;
	.loc	1 59 46                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:59:46
	mov.b32 	%r45, %f68;
	mov.b32 	%r46, %f69;
	mov.b32 	%r47, %f70;
	mov.b32 	%r48, %f71;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r45, %r46, %r47, %r48 };
	// end inline asm
	.loc	1 60 25                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:60:25
	add.s64 	%rd6, %rd11, %rd15;
	.loc	1 60 37                         // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:60:37
	// begin inline asm
	@%p22 st.global.b32 [ %rd6 + 0 ], { %r49 };
	// end inline asm
	.loc	1 60 4                          // cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py:60:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yk/cykars5hvde4dapa43zxv5cue236drt34o2yzsa3wa2o46swestr.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 253                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 107
.b8 97
.b8 114
.b8 115
.b8 53
.b8 104
.b8 118
.b8 100
.b8 101
.b8 52
.b8 100
.b8 97
.b8 112
.b8 97
.b8 52
.b8 51
.b8 122
.b8 120
.b8 118
.b8 53
.b8 99
.b8 117
.b8 101
.b8 50
.b8 51
.b8 54
.b8 100
.b8 114
.b8 116
.b8 51
.b8 52
.b8 111
.b8 50
.b8 121
.b8 122
.b8 115
.b8 97
.b8 51
.b8 119
.b8 97
.b8 50
.b8 111
.b8 52
.b8 54
.b8 115
.b8 119
.b8 101
.b8 115
.b8 116
.b8 114
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
