#blocked = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [0, 1]}>
#loc = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0)
#loc1 = loc(unknown)
#loc62 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":65:44)
#loc95 = loc(callsite(#loc1 at #loc62))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused__unsafe_index_convolution_native_group_norm_35(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<32> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<1x2048xi64, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<1024> : tensor<1x2048xi64, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x2048xi64, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<1x2048xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c32768_i32 = arith.constant 32768 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c65536_i32 = arith.constant 65536 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<4096> : tensor<1x2048xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<1x2048xi32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<64> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x2048xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %6 = arith.remsi %0, %c4_i32 : i32 loc(#loc5)
    %7 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %8 = arith.remsi %7, %c32_i32 : i32 loc(#loc7)
    %9 = tt.addptr %arg2, %8 : !tt.ptr<f32>, i32 loc(#loc8)
    %10 = tt.splat %9 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc9)
    %12 = tt.load %10, %11 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc9)
    %13 = arith.muli %6, %c16_i32 : i32 loc(#loc10)
    %14 = tt.splat %13 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc11)
    %15 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x2048x!tt.ptr<i64>, #blocked1> loc(#loc12)
    %16 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x2048x!tt.ptr<i64>, #blocked> loc(#loc12)
    %17 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked1> loc(#loc13)
    %18 = arith.muli %7, %c32768_i32 : i32 loc(#loc14)
    %19 = arith.extsi %18 : i32 to i64 loc(#loc15)
    %20 = tt.splat %19 : i64 -> tensor<1x2048xi64, #blocked> loc(#loc15)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc16)
    %22 = tt.broadcast %12 : tensor<1x1xf32, #blocked1> -> tensor<1x2048xf32, #blocked1> loc(#loc17)
    %23 = arith.muli %0, %c65536_i32 : i32 loc(#loc18)
    %24 = tt.splat %23 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc19)
    %25 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc20)
    %26:3 = scf.for %arg9 = %c0_i32 to %c65536_i32 step %c2048_i32 iter_args(%arg10 = %cst_4, %arg11 = %cst_4, %arg12 = %cst_4) -> (tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>)  : i32 {
      %37 = tt.splat %arg9 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc22)
      %38 = tt.splat %arg9 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc22)
      %39 = arith.addi %37, %4 : tensor<1x2048xi32, #blocked1> loc(#loc22)
      %40 = arith.addi %38, %5 : tensor<1x2048xi32, #blocked> loc(#loc22)
      %41 = arith.divsi %39, %cst_6 : tensor<1x2048xi32, #blocked1> loc(#loc23)
      %42 = arith.divsi %39, %cst_7 : tensor<1x2048xi32, #blocked1> loc(#loc24)
      %43 = arith.remsi %42, %cst_7 : tensor<1x2048xi32, #blocked1> loc(#loc25)
      %44 = arith.remsi %40, %cst_8 : tensor<1x2048xi32, #blocked> loc(#loc26)
      %45 = arith.addi %41, %14 : tensor<1x2048xi32, #blocked1> loc(#loc11)
      %46 = tt.addptr %15, %45 : tensor<1x2048x!tt.ptr<i64>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc12)
      %47 = tt.load %46, %17, %cst_2 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>, #blocked1> loc(#loc13)
      %48 = tt.addptr %15, %43 : tensor<1x2048x!tt.ptr<i64>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc27)
      %49 = tt.load %48 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>, #blocked1> loc(#loc28)
      %50 = tt.addptr %16, %44 : tensor<1x2048x!tt.ptr<i64>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc29)
      %51 = tt.load %50 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<i64>, #blocked> loc(#loc30)
      %52 = arith.addi %47, %cst_0 : tensor<1x2048xi64, #blocked1> loc(#loc31)
      %53 = arith.cmpi slt, %47, %cst_2 : tensor<1x2048xi64, #blocked1> loc(#loc32)
      %54 = arith.select %53, %52, %47 : tensor<1x2048xi1, #blocked1>, tensor<1x2048xi64, #blocked1> loc(#loc33)
      %55 = arith.addi %49, %cst_0 : tensor<1x2048xi64, #blocked1> loc(#loc34)
      %56 = arith.cmpi slt, %49, %cst_2 : tensor<1x2048xi64, #blocked1> loc(#loc35)
      %57 = arith.select %56, %55, %49 : tensor<1x2048xi1, #blocked1>, tensor<1x2048xi64, #blocked1> loc(#loc36)
      %58 = arith.addi %51, %cst : tensor<1x2048xi64, #blocked> loc(#loc37)
      %59 = arith.cmpi slt, %51, %cst_3 : tensor<1x2048xi64, #blocked> loc(#loc38)
      %60 = arith.select %59, %58, %51 : tensor<1x2048xi1, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc39)
      %61 = arith.muli %57, %cst_0 : tensor<1x2048xi64, #blocked1> loc(#loc40)
      %62 = triton_gpu.convert_layout %61 {overflowFlags = #arith.overflow<none>} : tensor<1x2048xi64, #blocked1> -> tensor<1x2048xi64, #blocked> loc(#loc40)
      %63 = arith.addi %60, %62 : tensor<1x2048xi64, #blocked> loc(#loc41)
      %64 = arith.muli %54, %cst_1 : tensor<1x2048xi64, #blocked1> loc(#loc42)
      %65 = triton_gpu.convert_layout %64 {overflowFlags = #arith.overflow<none>} : tensor<1x2048xi64, #blocked1> -> tensor<1x2048xi64, #blocked> loc(#loc42)
      %66 = arith.addi %63, %65 : tensor<1x2048xi64, #blocked> loc(#loc43)
      %67 = arith.addi %66, %20 : tensor<1x2048xi64, #blocked> loc(#loc15)
      %68 = tt.addptr %21, %67 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi64, #blocked> loc(#loc16)
      %69 = triton_gpu.convert_layout %68 : tensor<1x2048x!tt.ptr<f32>, #blocked> -> tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc44)
      %70 = tt.load %69, %17 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc44)
      %71 = arith.addf %70, %22 : tensor<1x2048xf32, #blocked1> loc(#loc17)
      %72 = arith.cmpi eq, %arg9, %c0_i32 : i32 loc(#loc45)
      %73:3 = scf.if %72 -> (tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>) {
        scf.yield %cst_4, %71, %cst_9 : tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1> loc(#loc86)
      } else {
        %81 = arith.subf %71, %arg10 : tensor<1x2048xf32, #blocked1> loc(#loc87)
        %82 = arith.addf %arg12, %cst_9 : tensor<1x2048xf32, #blocked1> loc(#loc88)
        %83 = arith.divf %81, %82 : tensor<1x2048xf32, #blocked1> loc(#loc89)
        %84 = arith.addf %arg10, %83 : tensor<1x2048xf32, #blocked1> loc(#loc90)
        %85 = arith.subf %71, %84 : tensor<1x2048xf32, #blocked1> loc(#loc91)
        %86 = arith.mulf %81, %85 : tensor<1x2048xf32, #blocked1> loc(#loc92)
        %87 = arith.addf %arg11, %86 : tensor<1x2048xf32, #blocked1> loc(#loc93)
        scf.yield %87, %84, %82 : tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1> loc(#loc93)
      } loc(#loc85)
      %74 = arith.select %17, %73#1, %arg10 : tensor<1x2048xi1, #blocked1>, tensor<1x2048xf32, #blocked1> loc(#loc56)
      %75 = arith.select %17, %73#0, %arg11 : tensor<1x2048xi1, #blocked1>, tensor<1x2048xf32, #blocked1> loc(#loc57)
      %76 = arith.select %17, %73#2, %arg12 : tensor<1x2048xi1, #blocked1>, tensor<1x2048xf32, #blocked1> loc(#loc58)
      %77 = arith.addi %40, %24 : tensor<1x2048xi32, #blocked> loc(#loc19)
      %78 = tt.addptr %25, %77 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc20)
      %79 = triton_gpu.convert_layout %71 : tensor<1x2048xf32, #blocked1> -> tensor<1x2048xf32, #blocked> loc(#loc59)
      %80 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc59)
      tt.store %78, %79, %80 : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc59)
      scf.yield %74, %75, %76 : tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1> loc(#loc60)
    } loc(#loc21)
    %27:3 = "tt.reduce"(%26#0, %26#1, %26#2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc62)), %arg10: f32 loc(callsite(#loc1 at #loc62)), %arg11: f32 loc(callsite(#loc1 at #loc62)), %arg12: f32 loc(callsite(#loc1 at #loc62)), %arg13: f32 loc(callsite(#loc1 at #loc62)), %arg14: f32 loc(callsite(#loc1 at #loc62))):
      %37 = arith.subf %arg12, %arg9 : f32 loc(#loc108)
      %38 = arith.addf %arg11, %arg14 : f32 loc(#loc109)
      %39 = arith.cmpf oeq, %38, %cst_5 : f32 loc(#loc110)
      %40 = arith.divf %arg14, %38 : f32 loc(#loc111)
      %41 = arith.select %39, %cst_5, %40 : f32 loc(#loc112)
      %42 = arith.mulf %37, %41 : f32 loc(#loc113)
      %43 = arith.addf %arg9, %42 : f32 loc(#loc114)
      %44 = arith.addf %arg10, %arg13 : f32 loc(#loc115)
      %45 = arith.mulf %37, %37 : f32 loc(#loc116)
      %46 = arith.mulf %45, %arg11 : f32 loc(#loc117)
      %47 = arith.mulf %46, %41 : f32 loc(#loc118)
      %48 = arith.addf %44, %47 : f32 loc(#loc119)
      tt.reduce.return %43, %48, %38 : f32, f32, f32 loc(#loc94)
    }) : (tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>, tensor<1x2048xf32, #blocked1>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>>) loc(#loc94)
    %28 = tt.expand_dims %27#0 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc75)
    %29 = tt.expand_dims %27#1 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc76)
    %30 = tt.expand_dims %27#2 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc77)
    %31 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc78)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc79)
    tt.store %32, %28, %11 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc79)
    %33 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc80)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc81)
    tt.store %34, %29, %11 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc81)
    %35 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc82)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc83)
    tt.store %36, %30, %11 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc83)
    tt.return loc(#loc84)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":22:28)
#loc3 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":24:21)
#loc4 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":25:33)
#loc5 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":26:19)
#loc6 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":27:19)
#loc7 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":28:26)
#loc8 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":29:31)
#loc9 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":29:36)
#loc10 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":41:42)
#loc11 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":41:39)
#loc12 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":41:34)
#loc13 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":41:47)
#loc14 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:71)
#loc15 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:65)
#loc16 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:35)
#loc17 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":55:24)
#loc18 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":63:40)
#loc19 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":63:34)
#loc20 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":63:29)
#loc21 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":34:36)
#loc22 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":35:27)
#loc23 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":37:23)
#loc24 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":38:25)
#loc25 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":38:31)
#loc26 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":39:23)
#loc27 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":42:34)
#loc28 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":42:39)
#loc29 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":43:34)
#loc30 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":43:39)
#loc31 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":45:22)
#loc32 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":46:22)
#loc33 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":47:36)
#loc34 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":48:22)
#loc35 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":49:22)
#loc36 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":50:36)
#loc37 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":51:23)
#loc38 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":52:23)
#loc39 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":53:39)
#loc40 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:46)
#loc41 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:43)
#loc42 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:58)
#loc43 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:53)
#loc44 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":54:76)
#loc45 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":58:66)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc47 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":58:55)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc56 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":60:54)
#loc57 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":61:50)
#loc58 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":62:58)
#loc59 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":63:52)
#loc60 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":63:8)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc69 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc70 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc71 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc75 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":67:22)
#loc76 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":68:22)
#loc77 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":69:22)
#loc78 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":70:25)
#loc79 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":70:37)
#loc80 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":71:25)
#loc81 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":71:37)
#loc82 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":72:25)
#loc83 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":72:37)
#loc84 = loc("inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py":72:4)
#loc85 = loc(callsite(#loc46 at #loc47))
#loc86 = loc(callsite(#loc48 at #loc47))
#loc87 = loc(callsite(#loc49 at #loc47))
#loc88 = loc(callsite(#loc50 at #loc47))
#loc89 = loc(callsite(#loc51 at #loc47))
#loc90 = loc(callsite(#loc52 at #loc47))
#loc91 = loc(callsite(#loc53 at #loc47))
#loc92 = loc(callsite(#loc54 at #loc47))
#loc93 = loc(callsite(#loc55 at #loc47))
#loc94 = loc(callsite(#loc61 at #loc62))
#loc96 = loc(callsite(#loc63 at #loc61))
#loc97 = loc(callsite(#loc64 at #loc61))
#loc98 = loc(callsite(#loc65 at #loc61))
#loc99 = loc(callsite(#loc66 at #loc61))
#loc100 = loc(callsite(#loc67 at #loc61))
#loc101 = loc(callsite(#loc68 at #loc61))
#loc102 = loc(callsite(#loc69 at #loc61))
#loc103 = loc(callsite(#loc70 at #loc61))
#loc104 = loc(callsite(#loc71 at #loc61))
#loc105 = loc(callsite(#loc72 at #loc61))
#loc106 = loc(callsite(#loc73 at #loc61))
#loc107 = loc(callsite(#loc74 at #loc61))
#loc108 = loc(callsite(#loc96 at #loc62))
#loc109 = loc(callsite(#loc97 at #loc62))
#loc110 = loc(callsite(#loc98 at #loc62))
#loc111 = loc(callsite(#loc99 at #loc62))
#loc112 = loc(callsite(#loc100 at #loc62))
#loc113 = loc(callsite(#loc101 at #loc62))
#loc114 = loc(callsite(#loc102 at #loc62))
#loc115 = loc(callsite(#loc103 at #loc62))
#loc116 = loc(callsite(#loc104 at #loc62))
#loc117 = loc(callsite(#loc105 at #loc62))
#loc118 = loc(callsite(#loc106 at #loc62))
#loc119 = loc(callsite(#loc107 at #loc62))
