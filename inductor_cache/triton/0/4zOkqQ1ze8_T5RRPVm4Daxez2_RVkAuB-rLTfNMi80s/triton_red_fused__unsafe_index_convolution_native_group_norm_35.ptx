//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_convolution_native_group_norm_35 // -- Begin function triton_red_fused__unsafe_index_convolution_native_group_norm_35
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_convolution_native_group_norm_35
.visible .entry triton_red_fused__unsafe_index_convolution_native_group_norm_35(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_6,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_7,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<66>;
	.reg .b32 	%r<220>;
	.reg .f32 	%f<235>;
	.reg .b64 	%rd<141>;
	.loc	1 19 0                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:19:0

// %bb.0:
	ld.param.u64 	%rd13, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_6];
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_5];
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_4];
	ld.param.u64 	%rd10, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_1];
	ld.param.u64 	%rd9, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:22:28
	// begin inline asm
	mov.u32 %r35, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:24:21
	setp.lt.s32 	%p2, %r35, 512;
	ld.param.u64 	%rd16, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_2];
	.loc	1 25 33                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:25:33
	mov.u32 	%r2, %tid.x;
	ld.param.u64 	%rd17, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_3];
	and.b32  	%r3, %r2, 511;
	or.b32  	%r37, %r3, 512;
	or.b32  	%r38, %r3, 1024;
	or.b32  	%r39, %r3, 1536;
	shl.b32 	%r40, %r2, 2;
	and.b32  	%r41, %r40, 2044;
	or.b32  	%r42, %r41, 2;
	.loc	1 27 19                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:27:19
	shr.s32 	%r43, %r35, 31;
	shr.u32 	%r44, %r43, 30;
	add.s32 	%r45, %r35, %r44;
	shr.s32 	%r46, %r45, 2;
	.loc	1 26 19                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:26:19
	and.b32  	%r47, %r45, 268435452;
	sub.s32 	%r48, %r35, %r47;
	.loc	1 28 26                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:28:26
	shr.s32 	%r49, %r45, 31;
	shr.u32 	%r50, %r49, 27;
	add.s32 	%r51, %r46, %r50;
	and.b32  	%r52, %r51, -32;
	sub.s32 	%r53, %r46, %r52;
	.loc	1 29 31                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:29:31
	mul.wide.s32 	%rd18, %r53, 4;
	add.s64 	%rd14, %rd16, %rd18;
	.loc	1 29 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:29:36
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r36 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r36;
	.loc	1 41 42                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:42
	shl.b32 	%r4, %r48, 4;
	.loc	1 54 71                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:71
	shl.b32 	%r54, %r46, 15;
	.loc	1 54 65                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:65
	cvt.s64.s32 	%rd1, %r54;
	.loc	1 63 40                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:40
	shl.b32 	%r55, %r35, 16;
	and.b32  	%r56, %r40, 60;
	and.b32  	%r57, %r42, 62;
	mul.wide.u32 	%rd19, %r56, 8;
	add.s64 	%rd40, %rd9, %rd19;
	mul.wide.u32 	%rd20, %r57, 8;
	add.s64 	%rd43, %rd9, %rd20;
	shl.b32 	%r58, %r3, 3;
	mov.u32 	%r59, global_smem;
	add.s32 	%r70, %r59, %r58;
	add.s32 	%r71, %r70, 4096;
	add.s32 	%r72, %r70, 8192;
	add.s32 	%r73, %r70, 12288;
	shl.b32 	%r60, %r41, 3;
	add.s32 	%r9, %r59, %r60;
	shl.b32 	%r61, %r41, 4;
	add.s32 	%r78, %r59, %r61;
	add.s32 	%r79, %r78, 16;
	shl.b32 	%r62, %r42, 4;
	add.s32 	%r80, %r59, %r62;
	add.s32 	%r81, %r78, 48;
	shl.b32 	%r63, %r3, 4;
	add.s32 	%r14, %r59, %r63;
	shl.b32 	%r64, %r37, 4;
	add.s32 	%r15, %r59, %r64;
	shl.b32 	%r65, %r38, 4;
	add.s32 	%r16, %r59, %r65;
	shl.b32 	%r66, %r39, 4;
	add.s32 	%r17, %r59, %r66;
	shl.b32 	%r67, %r3, 2;
	add.s32 	%r105, %r59, %r67;
	add.s32 	%r107, %r105, 2048;
	add.s32 	%r109, %r105, 4096;
	add.s32 	%r111, %r105, 6144;
	shl.b32 	%r68, %r41, 2;
	add.s32 	%r22, %r59, %r68;
	.loc	1 34 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:34:36
	or.b32  	%r69, %r55, %r41;
	mul.wide.s32 	%rd21, %r69, 4;
	add.s64 	%rd139, %rd17, %rd21;
	shr.u32 	%r219, %r39, 6;
	shr.u32 	%r218, %r38, 6;
	shr.u32 	%r217, %r37, 6;
	bfe.u32 	%r216, %r2, 6, 3;
	mov.f32 	%f54, 0f00000000;
	mov.u64 	%rd140, 0;
	mov.pred 	%p14, -1;
	shl.b64 	%rd106, %rd1, 2;
	mov.f32 	%f56, 0f3F800000;
	mov.f32 	%f211, %f54;
	mov.f32 	%f212, %f54;
	mov.f32 	%f213, %f54;
	mov.f32 	%f214, %f54;
	mov.f32 	%f215, %f54;
	mov.f32 	%f216, %f54;
	mov.f32 	%f217, %f54;
	mov.f32 	%f218, %f54;
	mov.f32 	%f219, %f54;
	mov.f32 	%f220, %f54;
	mov.f32 	%f221, %f54;
	mov.f32 	%f222, %f54;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 60 54                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:60:54
	selp.f32 	%f219, %f227, %f219, %p2;
	selp.f32 	%f220, %f228, %f220, %p2;
	selp.f32 	%f221, %f229, %f221, %p2;
	selp.f32 	%f222, %f230, %f222, %p2;
	.loc	1 61 50                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:61:50
	selp.f32 	%f215, %f223, %f215, %p2;
	selp.f32 	%f216, %f224, %f216, %p2;
	selp.f32 	%f217, %f225, %f217, %p2;
	selp.f32 	%f218, %f226, %f218, %p2;
	.loc	1 62 58                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:62:58
	selp.f32 	%f211, %f231, %f211, %p2;
	selp.f32 	%f212, %f232, %f212, %p2;
	selp.f32 	%f213, %f233, %f213, %p2;
	selp.f32 	%f214, %f234, %f214, %p2;
	.loc	1 63 52                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:52
	bar.sync 	0;
	mov.b32 	%r106, %f14;
	// begin inline asm
	@%p14 st.shared.b32 [ %r105 + 0 ], %r106;
	// end inline asm
	mov.b32 	%r108, %f15;
	// begin inline asm
	@%p14 st.shared.b32 [ %r107 + 0 ], %r108;
	// end inline asm
	mov.b32 	%r110, %f16;
	// begin inline asm
	@%p14 st.shared.b32 [ %r109 + 0 ], %r110;
	// end inline asm
	mov.b32 	%r112, %f17;
	// begin inline asm
	@%p14 st.shared.b32 [ %r111 + 0 ], %r112;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r113, %r114, %r115, %r116}, [%r22];
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd139 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	.loc	1 34 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:34:36
	add.s64 	%rd7, %rd140, 2048;
	add.s64 	%rd139, %rd139, 8192;
	add.s32 	%r219, %r219, 32;
	add.s32 	%r218, %r218, 32;
	add.s32 	%r217, %r217, 32;
	add.s32 	%r216, %r216, 32;
	setp.lt.u64 	%p38, %rd140, 63488;
	mov.u64 	%rd140, %rd7;
	@%p38 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:0:36
	cvt.u32.u64 	%r86, %rd140;
	.loc	1 37 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:37:23
	shr.u32 	%r87, %r86, 12;
	.loc	1 38 31                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:38:31
	and.b32  	%r88, %r216, 39;
	and.b32  	%r89, %r217, 47;
	and.b32  	%r90, %r218, 55;
	and.b32  	%r91, %r219, 63;
	.loc	1 41 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:39
	add.s32 	%r92, %r87, %r4;
	.loc	1 41 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:34
	mul.wide.s32 	%rd60, %r92, 8;
	add.s64 	%rd23, %rd9, %rd60;
	.loc	1 41 47                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:47
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd22, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd24, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd26, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd23 + 0 ];
	@!%p2 mov.u64 %rd28, 0x0;
	// end inline asm
	.loc	1 42 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:34
	mul.wide.u32 	%rd61, %r88, 8;
	add.s64 	%rd31, %rd9, %rd61;
	mul.wide.u32 	%rd62, %r89, 8;
	add.s64 	%rd33, %rd9, %rd62;
	mul.wide.u32 	%rd63, %r90, 8;
	add.s64 	%rd35, %rd9, %rd63;
	mul.wide.u32 	%rd64, %r91, 8;
	add.s64 	%rd37, %rd9, %rd64;
	.loc	1 42 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:39
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p14 ld.global.L1::evict_last.b64 { %rd30 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	@%p14 ld.global.L1::evict_last.b64 { %rd32 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd34, 0x0;
	@%p14 ld.global.L1::evict_last.b64 { %rd34 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	@%p14 ld.global.L1::evict_last.b64 { %rd36 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 43 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:39
	// begin inline asm
	mov.u64 %rd38, 0x0;
	mov.u64 %rd39, 0x0;
	@%p14 ld.global.L1::evict_last.v2.b64 { %rd38, %rd39 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	mov.u64 %rd42, 0x0;
	@%p14 ld.global.L1::evict_last.v2.b64 { %rd41, %rd42 }, [ %rd43 + 0 ];
	// end inline asm
	.loc	1 47 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:47:36
	shr.u64 	%rd65, %rd22, 58;
	and.b64  	%rd66, %rd65, 32;
	add.s64 	%rd67, %rd66, %rd22;
	shr.u64 	%rd68, %rd24, 58;
	and.b64  	%rd69, %rd68, 32;
	add.s64 	%rd70, %rd69, %rd24;
	shr.u64 	%rd71, %rd26, 58;
	and.b64  	%rd72, %rd71, 32;
	add.s64 	%rd73, %rd72, %rd26;
	shr.u64 	%rd74, %rd28, 58;
	and.b64  	%rd75, %rd74, 32;
	add.s64 	%rd76, %rd75, %rd28;
	.loc	1 50 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:50:36
	shr.u64 	%rd77, %rd30, 58;
	and.b64  	%rd78, %rd77, 32;
	add.s64 	%rd79, %rd78, %rd30;
	shr.u64 	%rd80, %rd32, 58;
	and.b64  	%rd81, %rd80, 32;
	add.s64 	%rd82, %rd81, %rd32;
	shr.u64 	%rd83, %rd34, 58;
	and.b64  	%rd84, %rd83, 32;
	add.s64 	%rd85, %rd84, %rd34;
	shr.u64 	%rd86, %rd36, 58;
	and.b64  	%rd87, %rd86, 32;
	add.s64 	%rd88, %rd87, %rd36;
	.loc	1 54 46                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:46
	shl.b64 	%rd44, %rd79, 5;
	shl.b64 	%rd45, %rd82, 5;
	shl.b64 	%rd46, %rd85, 5;
	shl.b64 	%rd47, %rd88, 5;
	bar.sync 	0;
	// begin inline asm
	@%p14 st.shared.b64 [ %r70 + 0 ], %rd44;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r71 + 0 ], %rd45;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r72 + 0 ], %rd46;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r73 + 0 ], %rd47;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.u64 	{%rd89, %rd90}, [%r9];
	ld.shared.v2.u64 	{%rd91, %rd92}, [%r9+16];
	.loc	1 54 58                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:58
	shl.b64 	%rd48, %rd67, 10;
	shl.b64 	%rd49, %rd70, 10;
	shl.b64 	%rd50, %rd73, 10;
	shl.b64 	%rd51, %rd76, 10;
	bar.sync 	0;
	// begin inline asm
	@%p14 st.shared.b64 [ %r70 + 0 ], %rd48;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r71 + 0 ], %rd49;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r72 + 0 ], %rd50;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r73 + 0 ], %rd51;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.u64 	{%rd93, %rd94}, [%r9];
	ld.shared.v2.u64 	{%rd95, %rd96}, [%r9+16];
	.loc	1 54 35                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:35
	shl.b64 	%rd97, %rd38, 2;
	add.s64 	%rd98, %rd10, %rd97;
	shr.u64 	%rd99, %rd38, 56;
	and.b64  	%rd100, %rd99, 128;
	add.s64 	%rd101, %rd98, %rd100;
	shl.b64 	%rd102, %rd89, 2;
	add.s64 	%rd103, %rd101, %rd102;
	shl.b64 	%rd104, %rd93, 2;
	add.s64 	%rd105, %rd103, %rd104;
	add.s64 	%rd52, %rd105, %rd106;
	shl.b64 	%rd107, %rd39, 2;
	add.s64 	%rd108, %rd10, %rd107;
	shr.u64 	%rd109, %rd39, 56;
	and.b64  	%rd110, %rd109, 128;
	add.s64 	%rd111, %rd108, %rd110;
	shl.b64 	%rd112, %rd90, 2;
	add.s64 	%rd113, %rd111, %rd112;
	shl.b64 	%rd114, %rd94, 2;
	add.s64 	%rd115, %rd113, %rd114;
	add.s64 	%rd53, %rd115, %rd106;
	shl.b64 	%rd116, %rd41, 2;
	add.s64 	%rd117, %rd10, %rd116;
	shr.u64 	%rd118, %rd41, 56;
	and.b64  	%rd119, %rd118, 128;
	add.s64 	%rd120, %rd117, %rd119;
	shl.b64 	%rd121, %rd91, 2;
	add.s64 	%rd122, %rd120, %rd121;
	shl.b64 	%rd123, %rd95, 2;
	add.s64 	%rd124, %rd122, %rd123;
	add.s64 	%rd54, %rd124, %rd106;
	shl.b64 	%rd125, %rd42, 2;
	add.s64 	%rd126, %rd10, %rd125;
	shr.u64 	%rd127, %rd42, 56;
	and.b64  	%rd128, %rd127, 128;
	add.s64 	%rd129, %rd126, %rd128;
	shl.b64 	%rd130, %rd92, 2;
	add.s64 	%rd131, %rd129, %rd130;
	shl.b64 	%rd132, %rd96, 2;
	add.s64 	%rd133, %rd131, %rd132;
	add.s64 	%rd55, %rd133, %rd106;
	.loc	1 54 76                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:76
	bar.sync 	0;
	// begin inline asm
	@%p14 st.shared.b64 [ %r78 + 0 ], %rd52;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r79 + 0 ], %rd53;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r80 + 0 ], %rd54;
	// end inline asm
	// begin inline asm
	@%p14 st.shared.b64 [ %r81 + 0 ], %rd55;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd56, [%r14];
	ld.shared.u64 	%rd57, [%r15];
	ld.shared.u64 	%rd58, [%r16];
	ld.shared.u64 	%rd59, [%r17];
	// begin inline asm
	mov.u32 %r82, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r82 }, [ %rd56 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r82;
	// begin inline asm
	mov.u32 %r83, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r83 }, [ %rd57 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r83;
	// begin inline asm
	mov.u32 %r84, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r84 }, [ %rd58 + 0 ];
	// end inline asm
	mov.b32 	%f59, %r84;
	// begin inline asm
	mov.u32 %r85, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r85 }, [ %rd59 + 0 ];
	// end inline asm
	mov.b32 	%f60, %r85;
	.loc	1 55 24                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:55:24
	add.f32 	%f14, %f1, %f57;
	add.f32 	%f15, %f1, %f58;
	add.f32 	%f16, %f1, %f59;
	add.f32 	%f17, %f1, %f60;
	.loc	1 58 66                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:58:66
	setp.eq.s64 	%p32, %rd140, 0;
	mov.f32 	%f223, %f54;
	mov.f32 	%f224, %f54;
	mov.f32 	%f225, %f54;
	mov.f32 	%f226, %f54;
	mov.f32 	%f227, %f14;
	mov.f32 	%f228, %f15;
	mov.f32 	%f229, %f16;
	mov.f32 	%f230, %f17;
	mov.f32 	%f231, %f56;
	mov.f32 	%f232, %f56;
	mov.f32 	%f233, %f56;
	mov.f32 	%f234, %f56;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p32 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f61, %f14, %f219;
	sub.f32 	%f62, %f15, %f220;
	sub.f32 	%f63, %f16, %f221;
	sub.f32 	%f64, %f17, %f222;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f231, %f211, 0f3F800000;
	add.f32 	%f232, %f212, 0f3F800000;
	add.f32 	%f233, %f213, 0f3F800000;
	add.f32 	%f234, %f214, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r94, %f61;
	mov.b32 	%r95, %f231;
	// begin inline asm
	div.full.f32 %r93, %r94, %r95;
	// end inline asm
	mov.b32 	%f65, %r93;
	mov.b32 	%r97, %f62;
	mov.b32 	%r98, %f232;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f66, %r96;
	mov.b32 	%r100, %f63;
	mov.b32 	%r101, %f233;
	// begin inline asm
	div.full.f32 %r99, %r100, %r101;
	// end inline asm
	mov.b32 	%f67, %r99;
	mov.b32 	%r103, %f64;
	mov.b32 	%r104, %f234;
	// begin inline asm
	div.full.f32 %r102, %r103, %r104;
	// end inline asm
	mov.b32 	%f68, %r102;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f227, %f219, %f65;
	add.f32 	%f228, %f220, %f66;
	add.f32 	%f229, %f221, %f67;
	add.f32 	%f230, %f222, %f68;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f69, %f14, %f227;
	sub.f32 	%f70, %f15, %f228;
	sub.f32 	%f71, %f16, %f229;
	sub.f32 	%f72, %f17, %f230;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f223, %f61, %f69, %f215;
	fma.rn.f32 	%f224, %f62, %f70, %f216;
	fma.rn.f32 	%f225, %f63, %f71, %f217;
	fma.rn.f32 	%f226, %f64, %f72, %f218;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	1 25 33                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:25:33
	and.b32  	%r174, %r2, 31;
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f73, %f220, %f219;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f74, %f211, %f212;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p52, %f74, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r119, %f74;
	mov.b32 	%r118, %f212;
	// begin inline asm
	div.full.f32 %r117, %r118, %r119;
	// end inline asm
	mov.b32 	%f75, %r117;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f76, 0f00000000, %f75, %p52;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f77, %f73, %f76, %f219;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f78, %f215, %f216;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f79, %f73, %f73;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f80, %f79, %f211;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f81, %f80, %f76, %f78;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f82, %f221, %f77;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f83, %f213, %f74;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p53, %f83, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r122, %f83;
	mov.b32 	%r121, %f213;
	// begin inline asm
	div.full.f32 %r120, %r121, %r122;
	// end inline asm
	mov.b32 	%f84, %r120;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f85, 0f00000000, %f84, %p53;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f86, %f85, %f82, %f77;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f87, %f217, %f81;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f88, %f82, %f82;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f89, %f74, %f88;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f90, %f85, %f89, %f87;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f91, %f222, %f86;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f92, %f214, %f83;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p54, %f92, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r125, %f92;
	mov.b32 	%r124, %f214;
	// begin inline asm
	div.full.f32 %r123, %r124, %r125;
	// end inline asm
	mov.b32 	%f93, %r123;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f94, 0f00000000, %f93, %p54;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f95, %f94, %f91, %f86;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f96, %f218, %f90;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f97, %f91, %f91;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f98, %f83, %f97;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f99, %f94, %f98, %f96;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r175, %f95;
	shfl.sync.bfly.b32	%r176, %r175, 16, 31, -1;
	mov.b32 	%f100, %r176;
	mov.b32 	%r177, %f99;
	shfl.sync.bfly.b32	%r178, %r177, 16, 31, -1;
	mov.b32 	%f101, %r178;
	shfl.sync.bfly.b32	%r127, %r125, 16, 31, -1;
	mov.b32 	%f102, %r127;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f103, %f100, %f95;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f104, %f92, %f102;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p55, %f104, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r128, %f104;
	// begin inline asm
	div.full.f32 %r126, %r127, %r128;
	// end inline asm
	mov.b32 	%f105, %r126;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f106, 0f00000000, %f105, %p55;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f107, %f106, %f103, %f95;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f108, %f99, %f101;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f109, %f103, %f103;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f110, %f92, %f109;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f111, %f106, %f110, %f108;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r179, %f107;
	shfl.sync.bfly.b32	%r180, %r179, 8, 31, -1;
	mov.b32 	%f112, %r180;
	mov.b32 	%r181, %f111;
	shfl.sync.bfly.b32	%r182, %r181, 8, 31, -1;
	mov.b32 	%f113, %r182;
	shfl.sync.bfly.b32	%r130, %r128, 8, 31, -1;
	mov.b32 	%f114, %r130;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f115, %f112, %f107;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f116, %f104, %f114;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p56, %f116, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r131, %f116;
	// begin inline asm
	div.full.f32 %r129, %r130, %r131;
	// end inline asm
	mov.b32 	%f117, %r129;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f118, 0f00000000, %f117, %p56;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f119, %f115, %f118, %f107;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f120, %f111, %f113;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f121, %f115, %f115;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f122, %f104, %f121;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f123, %f118, %f122, %f120;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r183, %f119;
	shfl.sync.bfly.b32	%r184, %r183, 4, 31, -1;
	mov.b32 	%f124, %r184;
	mov.b32 	%r185, %f123;
	shfl.sync.bfly.b32	%r186, %r185, 4, 31, -1;
	mov.b32 	%f125, %r186;
	shfl.sync.bfly.b32	%r133, %r131, 4, 31, -1;
	mov.b32 	%f126, %r133;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f127, %f124, %f119;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f128, %f116, %f126;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p57, %f128, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r134, %f128;
	// begin inline asm
	div.full.f32 %r132, %r133, %r134;
	// end inline asm
	mov.b32 	%f129, %r132;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f130, 0f00000000, %f129, %p57;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f131, %f127, %f130, %f119;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f132, %f123, %f125;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f133, %f127, %f127;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f134, %f116, %f133;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f135, %f130, %f134, %f132;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r187, %f131;
	shfl.sync.bfly.b32	%r188, %r187, 2, 31, -1;
	mov.b32 	%f136, %r188;
	mov.b32 	%r189, %f135;
	shfl.sync.bfly.b32	%r190, %r189, 2, 31, -1;
	mov.b32 	%f137, %r190;
	shfl.sync.bfly.b32	%r136, %r134, 2, 31, -1;
	mov.b32 	%f138, %r136;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f139, %f136, %f131;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f140, %f128, %f138;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p58, %f140, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r137, %f140;
	// begin inline asm
	div.full.f32 %r135, %r136, %r137;
	// end inline asm
	mov.b32 	%f141, %r135;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f142, 0f00000000, %f141, %p58;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f143, %f139, %f142, %f131;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f144, %f135, %f137;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f145, %f139, %f139;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f146, %f128, %f145;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f147, %f142, %f146, %f144;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r191, %f143;
	shfl.sync.bfly.b32	%r192, %r191, 1, 31, -1;
	mov.b32 	%f148, %r192;
	mov.b32 	%r193, %f147;
	shfl.sync.bfly.b32	%r194, %r193, 1, 31, -1;
	mov.b32 	%f149, %r194;
	shfl.sync.bfly.b32	%r139, %r137, 1, 31, -1;
	mov.b32 	%f150, %r139;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f151, %f148, %f143;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f152, %f140, %f150;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p59, %f152, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r140, %f152;
	// begin inline asm
	div.full.f32 %r138, %r139, %r140;
	// end inline asm
	mov.b32 	%f153, %r138;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f154, 0f00000000, %f153, %p59;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f155, %f151, %f154, %f143;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f156, %f147, %f149;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f157, %f151, %f151;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f158, %f140, %f157;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f159, %f154, %f158, %f156;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p39, %r174, 0;
	shr.u32 	%r195, %r2, 3;
	and.b32  	%r196, %r195, 60;
	add.s32 	%r141, %r59, %r196;
	mov.b32 	%r142, %f155;
	// begin inline asm
	@%p39 st.shared.b32 [ %r141 + 0 ], %r142;
	// end inline asm
	add.s32 	%r198, %r59, 64;
	add.s32 	%r143, %r198, %r196;
	mov.b32 	%r144, %f159;
	// begin inline asm
	@%p39 st.shared.b32 [ %r143 + 0 ], %r144;
	// end inline asm
	add.s32 	%r199, %r59, 128;
	add.s32 	%r145, %r199, %r196;
	// begin inline asm
	@%p39 st.shared.b32 [ %r145 + 0 ], %r140;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p42, %r2, 16;
	add.s32 	%r148, %r59, %r40;
	// begin inline asm
	@%p42 ld.shared.b32 %r147, [ %r148 + 0 ];
	// end inline asm
	mov.b32 	%f160, %r147;
	add.s32 	%r150, %r198, %r40;
	// begin inline asm
	@%p42 ld.shared.b32 %r149, [ %r150 + 0 ];
	// end inline asm
	mov.b32 	%f161, %r149;
	add.s32 	%r152, %r199, %r40;
	// begin inline asm
	@%p42 ld.shared.b32 %r151, [ %r152 + 0 ];
	// end inline asm
	mov.b32 	%f162, %r151;
	shfl.sync.bfly.b32	%r201, %r147, 8, 31, -1;
	mov.b32 	%f163, %r201;
	shfl.sync.bfly.b32	%r202, %r149, 8, 31, -1;
	mov.b32 	%f164, %r202;
	shfl.sync.bfly.b32	%r154, %r151, 8, 31, -1;
	mov.b32 	%f165, %r154;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f166, %f163, %f160;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f167, %f162, %f165;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p60, %f167, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r155, %f167;
	// begin inline asm
	div.full.f32 %r153, %r154, %r155;
	// end inline asm
	mov.b32 	%f168, %r153;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f169, 0f00000000, %f168, %p60;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f170, %f166, %f169, %f160;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f171, %f161, %f164;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f172, %f166, %f166;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f173, %f172, %f162;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f174, %f173, %f169, %f171;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r203, %f170;
	shfl.sync.bfly.b32	%r204, %r203, 4, 31, -1;
	mov.b32 	%f175, %r204;
	mov.b32 	%r205, %f174;
	shfl.sync.bfly.b32	%r206, %r205, 4, 31, -1;
	mov.b32 	%f176, %r206;
	shfl.sync.bfly.b32	%r157, %r155, 4, 31, -1;
	mov.b32 	%f177, %r157;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f178, %f175, %f170;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f179, %f167, %f177;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p61, %f179, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r158, %f179;
	// begin inline asm
	div.full.f32 %r156, %r157, %r158;
	// end inline asm
	mov.b32 	%f180, %r156;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f181, 0f00000000, %f180, %p61;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f182, %f178, %f181, %f170;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f183, %f174, %f176;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f184, %f178, %f178;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f185, %f167, %f184;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f186, %f181, %f185, %f183;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r207, %f182;
	shfl.sync.bfly.b32	%r208, %r207, 2, 31, -1;
	mov.b32 	%f187, %r208;
	mov.b32 	%r209, %f186;
	shfl.sync.bfly.b32	%r210, %r209, 2, 31, -1;
	mov.b32 	%f188, %r210;
	shfl.sync.bfly.b32	%r160, %r158, 2, 31, -1;
	mov.b32 	%f189, %r160;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f190, %f187, %f182;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f191, %f179, %f189;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p62, %f191, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r161, %f191;
	// begin inline asm
	div.full.f32 %r159, %r160, %r161;
	// end inline asm
	mov.b32 	%f192, %r159;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f193, 0f00000000, %f192, %p62;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f194, %f190, %f193, %f182;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f195, %f186, %f188;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f196, %f190, %f190;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f197, %f179, %f196;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f198, %f193, %f197, %f195;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r211, %f194;
	shfl.sync.bfly.b32	%r212, %r211, 1, 31, -1;
	mov.b32 	%f199, %r212;
	mov.b32 	%r213, %f198;
	shfl.sync.bfly.b32	%r214, %r213, 1, 31, -1;
	mov.b32 	%f200, %r214;
	shfl.sync.bfly.b32	%r163, %r161, 1, 31, -1;
	mov.b32 	%f201, %r163;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f202, %f199, %f194;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f203, %f191, %f201;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p63, %f203, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r164, %f203;
	// begin inline asm
	div.full.f32 %r162, %r163, %r164;
	// end inline asm
	mov.b32 	%f204, %r162;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f205, 0f00000000, %f204, %p63;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f206, %f202, %f205, %f194;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f207, %f198, %f200;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f208, %f202, %f202;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f209, %f191, %f208;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f210, %f205, %f209, %f207;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r215, %r2, 15;
	setp.eq.s32 	%p64, %r215, 0;
	and.pred  	%p45, %p42, %p64;
	mov.b32 	%r166, %f206;
	// begin inline asm
	@%p45 st.shared.b32 [ %r148 + 0 ], %r166;
	// end inline asm
	mov.b32 	%r168, %f210;
	// begin inline asm
	@%p45 st.shared.b32 [ %r150 + 0 ], %r168;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r152 + 0 ], %r164;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r171, [global_smem];
	ld.shared.u32 	%r172, [global_smem+64];
	ld.shared.u32 	%r173, [global_smem+128];
$L__tmp4:
	.loc	1 70 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:70:25
	mul.wide.s32 	%rd138, %r35, 4;
	add.s64 	%rd135, %rd11, %rd138;
	.loc	1 70 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:70:37
	setp.eq.s32 	%p65, %r3, 0;
	and.pred  	%p48, %p65, %p2;
	// begin inline asm
	@%p48 st.global.b32 [ %rd135 + 0 ], { %r171 };
	// end inline asm
	.loc	1 71 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:71:25
	add.s64 	%rd136, %rd12, %rd138;
	.loc	1 71 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:71:37
	// begin inline asm
	@%p48 st.global.b32 [ %rd136 + 0 ], { %r172 };
	// end inline asm
	.loc	1 72 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:25
	add.s64 	%rd137, %rd13, %rd138;
	.loc	1 72 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:37
	// begin inline asm
	@%p48 st.global.b32 [ %rd137 + 0 ], { %r173 };
	// end inline asm
	.loc	1 72 4                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 101
.b8 108
.b8 112
.b8 113
.b8 98
.b8 50
.b8 119
.b8 119
.b8 119
.b8 104
.b8 104
.b8 52
.b8 100
.b8 103
.b8 121
.b8 122
.b8 104
.b8 120
.b8 120
.b8 53
.b8 101
.b8 112
.b8 100
.b8 105
.b8 113
.b8 105
.b8 98
.b8 122
.b8 118
.b8 53
.b8 113
.b8 120
.b8 99
.b8 100
.b8 107
.b8 116
.b8 50
.b8 54
.b8 107
.b8 107
.b8 108
.b8 98
.b8 106
.b8 53
.b8 118
.b8 110
.b8 122
.b8 106
.b8 55
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
