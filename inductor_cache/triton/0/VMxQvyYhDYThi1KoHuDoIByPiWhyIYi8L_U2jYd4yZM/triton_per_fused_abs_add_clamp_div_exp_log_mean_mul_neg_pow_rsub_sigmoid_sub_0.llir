; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_abs_add_clamp_div_exp_log_mean_mul_neg_pow_rsub_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %12 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #4, !dbg !14
  %13 = extractvalue { i32, i32, i32, i32 } %12, 0, !dbg !14
  %14 = extractvalue { i32, i32, i32, i32 } %12, 1, !dbg !14
  %15 = extractvalue { i32, i32, i32, i32 } %12, 2, !dbg !14
  %16 = extractvalue { i32, i32, i32, i32 } %12, 3, !dbg !14
  %17 = bitcast i32 %13 to float, !dbg !14
  %18 = bitcast i32 %14 to float, !dbg !14
  %19 = bitcast i32 %15 to float, !dbg !14
  %20 = bitcast i32 %16 to float, !dbg !14
  %21 = fsub float 0.000000e+00, %17, !dbg !15
  %22 = fsub float 0.000000e+00, %18, !dbg !15
  %23 = fsub float 0.000000e+00, %19, !dbg !15
  %24 = fsub float 0.000000e+00, %20, !dbg !15
  %25 = fmul float %21, 0x3FF7154760000000, !dbg !19
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #4, !dbg !19
  %27 = fmul float %22, 0x3FF7154760000000, !dbg !19
  %28 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %27) #4, !dbg !19
  %29 = fmul float %23, 0x3FF7154760000000, !dbg !19
  %30 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %29) #4, !dbg !19
  %31 = fmul float %24, 0x3FF7154760000000, !dbg !19
  %32 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %31) #4, !dbg !19
  %33 = fadd float %26, 1.000000e+00, !dbg !20
  %34 = fadd float %28, 1.000000e+00, !dbg !20
  %35 = fadd float %30, 1.000000e+00, !dbg !20
  %36 = fadd float %32, 1.000000e+00, !dbg !20
  %37 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %33) #4, !dbg !21
  %38 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %34) #4, !dbg !21
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %35) #4, !dbg !21
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %36) #4, !dbg !21
  %41 = tail call float @llvm.fabs.f32(float %17), !dbg !22
  %42 = tail call float @llvm.fabs.f32(float %18), !dbg !22
  %43 = tail call float @llvm.fabs.f32(float %19), !dbg !22
  %44 = tail call float @llvm.fabs.f32(float %20), !dbg !22
  %45 = fsub float 0.000000e+00, %41, !dbg !23
  %46 = fsub float 0.000000e+00, %42, !dbg !23
  %47 = fsub float 0.000000e+00, %43, !dbg !23
  %48 = fsub float 0.000000e+00, %44, !dbg !23
  %49 = fmul float %45, 0x3FF7154760000000, !dbg !24
  %50 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %49) #4, !dbg !24
  %51 = fmul float %46, 0x3FF7154760000000, !dbg !24
  %52 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %51) #4, !dbg !24
  %53 = fmul float %47, 0x3FF7154760000000, !dbg !24
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #4, !dbg !24
  %55 = fmul float %48, 0x3FF7154760000000, !dbg !24
  %56 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %55) #4, !dbg !24
  %57 = fadd float %50, 1.000000e+00, !dbg !25
  %58 = fadd float %52, 1.000000e+00, !dbg !25
  %59 = fadd float %54, 1.000000e+00, !dbg !25
  %60 = fadd float %56, 1.000000e+00, !dbg !25
  %61 = fcmp olt float %57, 0x3810000000000000, !dbg !26
  %62 = fmul float %57, 0x4160000000000000, !dbg !26
  %.02.i = select i1 %61, float %62, float %57, !dbg !26
  %i.i.0.i = select i1 %61, float -2.300000e+01, float 0.000000e+00, !dbg !26
  %63 = bitcast float %.02.i to i32, !dbg !26
  %64 = add i32 %63, -1059760811, !dbg !26
  %65 = and i32 %64, -8388608, !dbg !26
  %66 = sub i32 %63, %65, !dbg !26
  %67 = bitcast i32 %66 to float, !dbg !26
  %68 = sitofp i32 %65 to float, !dbg !26
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i = icmp eq i32 %69, 0, !dbg !26
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !26
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !26
  %.08.i = select i1 %.not.i, float %71, float %70, !dbg !26
  %72 = fadd float %67, -1.000000e+00, !dbg !26
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i = icmp eq i32 %73, 0, !dbg !26
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %72, float 0x3FC2073EC0000000) #4, !dbg !26
  %75 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %72, float 0x3FC2073EC0000000) #4, !dbg !26
  %.010.i = select i1 %.not1.i, float %75, float %74, !dbg !26
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i = icmp eq i32 %76, 0, !dbg !26
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %72, float 0xBFBF19B980000000) #4, !dbg !26
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %72, float 0xBFBF19B980000000) #4, !dbg !26
  %.011.i = select i1 %.not2.i, float %78, float %77, !dbg !26
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i = icmp eq i32 %79, 0, !dbg !26
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %72, float 0x3FC1E52AA0000000) #4, !dbg !26
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %72, float 0x3FC1E52AA0000000) #4, !dbg !26
  %.012.i = select i1 %.not3.i, float %81, float %80, !dbg !26
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i = icmp eq i32 %82, 0, !dbg !26
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %72, float 0xBFC55B1720000000) #4, !dbg !26
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %72, float 0xBFC55B1720000000) #4, !dbg !26
  %.09.i = select i1 %.not4.i, float %84, float %83, !dbg !26
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i = icmp eq i32 %85, 0, !dbg !26
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %72, float 0x3FC99DA160000000) #4, !dbg !26
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %72, float 0x3FC99DA160000000) #4, !dbg !26
  %.05.i = select i1 %.not5.i, float %87, float %86, !dbg !26
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i = icmp eq i32 %88, 0, !dbg !26
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %72, float 0xBFCFFFE440000000) #4, !dbg !26
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %72, float 0xBFCFFFE440000000) #4, !dbg !26
  %.01.i = select i1 %.not6.i, float %90, float %89, !dbg !26
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i = icmp eq i32 %91, 0, !dbg !26
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %72, float 0x3FD5554F00000000) #4, !dbg !26
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %72, float 0x3FD5554F00000000) #4, !dbg !26
  %.0.i = select i1 %.not7.i, float %93, float %92, !dbg !26
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i = icmp eq i32 %94, 0, !dbg !26
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %72, float -5.000000e-01) #4, !dbg !26
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %72, float -5.000000e-01) #4, !dbg !26
  %.07.i = select i1 %.not8.i, float %96, float %95, !dbg !26
  %97 = fmul float %72, %.07.i, !dbg !26
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not9.i = icmp eq i32 %98, 0, !dbg !26
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %97, float %72, float %72) #4, !dbg !26
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %97, float %72, float %72) #4, !dbg !26
  %.06.i = select i1 %.not9.i, float %100, float %99, !dbg !26
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not10.i = icmp eq i32 %101, 0, !dbg !26
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !26
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !26
  %.04.i = select i1 %.not10.i, float %103, float %102, !dbg !26
  %104 = icmp ugt i32 %63, 2139095039, !dbg !26
  br i1 %104, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !26

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not11.i = icmp eq i32 %105, 0, !dbg !26
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %.03.i = select i1 %.not11.i, float %107, float %106, !dbg !26
  br label %__nv_logf.exit, !dbg !26

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !26
  %108 = fcmp olt float %58, 0x3810000000000000, !dbg !26
  %109 = fmul float %58, 0x4160000000000000, !dbg !26
  %.02.i16 = select i1 %108, float %109, float %58, !dbg !26
  %i.i.0.i17 = select i1 %108, float -2.300000e+01, float 0.000000e+00, !dbg !26
  %110 = bitcast float %.02.i16 to i32, !dbg !26
  %111 = add i32 %110, -1059760811, !dbg !26
  %112 = and i32 %111, -8388608, !dbg !26
  %113 = sub i32 %110, %112, !dbg !26
  %114 = bitcast i32 %113 to float, !dbg !26
  %115 = sitofp i32 %112 to float, !dbg !26
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i18 = icmp eq i32 %116, 0, !dbg !26
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float 0x3E80000000000000, float %i.i.0.i17) #4, !dbg !26
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %115, float 0x3E80000000000000, float %i.i.0.i17) #4, !dbg !26
  %.08.i19 = select i1 %.not.i18, float %118, float %117, !dbg !26
  %119 = fadd float %114, -1.000000e+00, !dbg !26
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i20 = icmp eq i32 %120, 0, !dbg !26
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %119, float 0x3FC2073EC0000000) #4, !dbg !26
  %122 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %119, float 0x3FC2073EC0000000) #4, !dbg !26
  %.010.i21 = select i1 %.not1.i20, float %122, float %121, !dbg !26
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i22 = icmp eq i32 %123, 0, !dbg !26
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i21, float %119, float 0xBFBF19B980000000) #4, !dbg !26
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i21, float %119, float 0xBFBF19B980000000) #4, !dbg !26
  %.011.i23 = select i1 %.not2.i22, float %125, float %124, !dbg !26
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i24 = icmp eq i32 %126, 0, !dbg !26
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i23, float %119, float 0x3FC1E52AA0000000) #4, !dbg !26
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i23, float %119, float 0x3FC1E52AA0000000) #4, !dbg !26
  %.012.i25 = select i1 %.not3.i24, float %128, float %127, !dbg !26
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i26 = icmp eq i32 %129, 0, !dbg !26
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i25, float %119, float 0xBFC55B1720000000) #4, !dbg !26
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i25, float %119, float 0xBFC55B1720000000) #4, !dbg !26
  %.09.i27 = select i1 %.not4.i26, float %131, float %130, !dbg !26
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i28 = icmp eq i32 %132, 0, !dbg !26
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %119, float 0x3FC99DA160000000) #4, !dbg !26
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %119, float 0x3FC99DA160000000) #4, !dbg !26
  %.05.i29 = select i1 %.not5.i28, float %134, float %133, !dbg !26
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i30 = icmp eq i32 %135, 0, !dbg !26
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i29, float %119, float 0xBFCFFFE440000000) #4, !dbg !26
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i29, float %119, float 0xBFCFFFE440000000) #4, !dbg !26
  %.01.i31 = select i1 %.not6.i30, float %137, float %136, !dbg !26
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i32 = icmp eq i32 %138, 0, !dbg !26
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i31, float %119, float 0x3FD5554F00000000) #4, !dbg !26
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i31, float %119, float 0x3FD5554F00000000) #4, !dbg !26
  %.0.i33 = select i1 %.not7.i32, float %140, float %139, !dbg !26
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i34 = icmp eq i32 %141, 0, !dbg !26
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %119, float -5.000000e-01) #4, !dbg !26
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %119, float -5.000000e-01) #4, !dbg !26
  %.07.i35 = select i1 %.not8.i34, float %143, float %142, !dbg !26
  %144 = fmul float %119, %.07.i35, !dbg !26
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not9.i36 = icmp eq i32 %145, 0, !dbg !26
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %144, float %119, float %119) #4, !dbg !26
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %144, float %119, float %119) #4, !dbg !26
  %.06.i37 = select i1 %.not9.i36, float %147, float %146, !dbg !26
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not10.i38 = icmp eq i32 %148, 0, !dbg !26
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i19, float 0x3FE62E4300000000, float %.06.i37) #4, !dbg !26
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i19, float 0x3FE62E4300000000, float %.06.i37) #4, !dbg !26
  %.04.i39 = select i1 %.not10.i38, float %150, float %149, !dbg !26
  %151 = icmp ugt i32 %110, 2139095039, !dbg !26
  br i1 %151, label %__nv_fmaf_rn.exit.i.i42, label %__nv_logf.exit45, !dbg !26

__nv_fmaf_rn.exit.i.i42:                          ; preds = %__nv_logf.exit
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not11.i43 = icmp eq i32 %152, 0, !dbg !26
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i16, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i16, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %.03.i44 = select i1 %.not11.i43, float %154, float %153, !dbg !26
  br label %__nv_logf.exit45, !dbg !26

__nv_logf.exit45:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i42
  %r.i.0.i40 = phi float [ %.03.i44, %__nv_fmaf_rn.exit.i.i42 ], [ %.04.i39, %__nv_logf.exit ], !dbg !26
  %155 = fcmp olt float %59, 0x3810000000000000, !dbg !26
  %156 = fmul float %59, 0x4160000000000000, !dbg !26
  %.02.i46 = select i1 %155, float %156, float %59, !dbg !26
  %i.i.0.i47 = select i1 %155, float -2.300000e+01, float 0.000000e+00, !dbg !26
  %157 = bitcast float %.02.i46 to i32, !dbg !26
  %158 = add i32 %157, -1059760811, !dbg !26
  %159 = and i32 %158, -8388608, !dbg !26
  %160 = sub i32 %157, %159, !dbg !26
  %161 = bitcast i32 %160 to float, !dbg !26
  %162 = sitofp i32 %159 to float, !dbg !26
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i48 = icmp eq i32 %163, 0, !dbg !26
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0x3E80000000000000, float %i.i.0.i47) #4, !dbg !26
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0x3E80000000000000, float %i.i.0.i47) #4, !dbg !26
  %.08.i49 = select i1 %.not.i48, float %165, float %164, !dbg !26
  %166 = fadd float %161, -1.000000e+00, !dbg !26
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i50 = icmp eq i32 %167, 0, !dbg !26
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %166, float 0x3FC2073EC0000000) #4, !dbg !26
  %169 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %166, float 0x3FC2073EC0000000) #4, !dbg !26
  %.010.i51 = select i1 %.not1.i50, float %169, float %168, !dbg !26
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i52 = icmp eq i32 %170, 0, !dbg !26
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i51, float %166, float 0xBFBF19B980000000) #4, !dbg !26
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i51, float %166, float 0xBFBF19B980000000) #4, !dbg !26
  %.011.i53 = select i1 %.not2.i52, float %172, float %171, !dbg !26
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i54 = icmp eq i32 %173, 0, !dbg !26
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i53, float %166, float 0x3FC1E52AA0000000) #4, !dbg !26
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i53, float %166, float 0x3FC1E52AA0000000) #4, !dbg !26
  %.012.i55 = select i1 %.not3.i54, float %175, float %174, !dbg !26
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i56 = icmp eq i32 %176, 0, !dbg !26
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i55, float %166, float 0xBFC55B1720000000) #4, !dbg !26
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i55, float %166, float 0xBFC55B1720000000) #4, !dbg !26
  %.09.i57 = select i1 %.not4.i56, float %178, float %177, !dbg !26
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i58 = icmp eq i32 %179, 0, !dbg !26
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i57, float %166, float 0x3FC99DA160000000) #4, !dbg !26
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i57, float %166, float 0x3FC99DA160000000) #4, !dbg !26
  %.05.i59 = select i1 %.not5.i58, float %181, float %180, !dbg !26
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i60 = icmp eq i32 %182, 0, !dbg !26
  %183 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i59, float %166, float 0xBFCFFFE440000000) #4, !dbg !26
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i59, float %166, float 0xBFCFFFE440000000) #4, !dbg !26
  %.01.i61 = select i1 %.not6.i60, float %184, float %183, !dbg !26
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i62 = icmp eq i32 %185, 0, !dbg !26
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i61, float %166, float 0x3FD5554F00000000) #4, !dbg !26
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i61, float %166, float 0x3FD5554F00000000) #4, !dbg !26
  %.0.i63 = select i1 %.not7.i62, float %187, float %186, !dbg !26
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i64 = icmp eq i32 %188, 0, !dbg !26
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i63, float %166, float -5.000000e-01) #4, !dbg !26
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i63, float %166, float -5.000000e-01) #4, !dbg !26
  %.07.i65 = select i1 %.not8.i64, float %190, float %189, !dbg !26
  %191 = fmul float %166, %.07.i65, !dbg !26
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not9.i66 = icmp eq i32 %192, 0, !dbg !26
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %191, float %166, float %166) #4, !dbg !26
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %191, float %166, float %166) #4, !dbg !26
  %.06.i67 = select i1 %.not9.i66, float %194, float %193, !dbg !26
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not10.i68 = icmp eq i32 %195, 0, !dbg !26
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i49, float 0x3FE62E4300000000, float %.06.i67) #4, !dbg !26
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i49, float 0x3FE62E4300000000, float %.06.i67) #4, !dbg !26
  %.04.i69 = select i1 %.not10.i68, float %197, float %196, !dbg !26
  %198 = icmp ugt i32 %157, 2139095039, !dbg !26
  br i1 %198, label %__nv_fmaf_rn.exit.i.i72, label %__nv_logf.exit75, !dbg !26

__nv_fmaf_rn.exit.i.i72:                          ; preds = %__nv_logf.exit45
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not11.i73 = icmp eq i32 %199, 0, !dbg !26
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i46, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i46, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %.03.i74 = select i1 %.not11.i73, float %201, float %200, !dbg !26
  br label %__nv_logf.exit75, !dbg !26

__nv_logf.exit75:                                 ; preds = %__nv_logf.exit45, %__nv_fmaf_rn.exit.i.i72
  %r.i.0.i70 = phi float [ %.03.i74, %__nv_fmaf_rn.exit.i.i72 ], [ %.04.i69, %__nv_logf.exit45 ], !dbg !26
  %202 = fcmp olt float %60, 0x3810000000000000, !dbg !26
  %203 = fmul float %60, 0x4160000000000000, !dbg !26
  %.02.i76 = select i1 %202, float %203, float %60, !dbg !26
  %i.i.0.i77 = select i1 %202, float -2.300000e+01, float 0.000000e+00, !dbg !26
  %204 = bitcast float %.02.i76 to i32, !dbg !26
  %205 = add i32 %204, -1059760811, !dbg !26
  %206 = and i32 %205, -8388608, !dbg !26
  %207 = sub i32 %204, %206, !dbg !26
  %208 = bitcast i32 %207 to float, !dbg !26
  %209 = sitofp i32 %206 to float, !dbg !26
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not.i78 = icmp eq i32 %210, 0, !dbg !26
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %209, float 0x3E80000000000000, float %i.i.0.i77) #4, !dbg !26
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %209, float 0x3E80000000000000, float %i.i.0.i77) #4, !dbg !26
  %.08.i79 = select i1 %.not.i78, float %212, float %211, !dbg !26
  %213 = fadd float %208, -1.000000e+00, !dbg !26
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not1.i80 = icmp eq i32 %214, 0, !dbg !26
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %213, float 0x3FC2073EC0000000) #4, !dbg !26
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %213, float 0x3FC2073EC0000000) #4, !dbg !26
  %.010.i81 = select i1 %.not1.i80, float %216, float %215, !dbg !26
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not2.i82 = icmp eq i32 %217, 0, !dbg !26
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i81, float %213, float 0xBFBF19B980000000) #4, !dbg !26
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i81, float %213, float 0xBFBF19B980000000) #4, !dbg !26
  %.011.i83 = select i1 %.not2.i82, float %219, float %218, !dbg !26
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not3.i84 = icmp eq i32 %220, 0, !dbg !26
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i83, float %213, float 0x3FC1E52AA0000000) #4, !dbg !26
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i83, float %213, float 0x3FC1E52AA0000000) #4, !dbg !26
  %.012.i85 = select i1 %.not3.i84, float %222, float %221, !dbg !26
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not4.i86 = icmp eq i32 %223, 0, !dbg !26
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i85, float %213, float 0xBFC55B1720000000) #4, !dbg !26
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i85, float %213, float 0xBFC55B1720000000) #4, !dbg !26
  %.09.i87 = select i1 %.not4.i86, float %225, float %224, !dbg !26
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not5.i88 = icmp eq i32 %226, 0, !dbg !26
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i87, float %213, float 0x3FC99DA160000000) #4, !dbg !26
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i87, float %213, float 0x3FC99DA160000000) #4, !dbg !26
  %.05.i89 = select i1 %.not5.i88, float %228, float %227, !dbg !26
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not6.i90 = icmp eq i32 %229, 0, !dbg !26
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i89, float %213, float 0xBFCFFFE440000000) #4, !dbg !26
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i89, float %213, float 0xBFCFFFE440000000) #4, !dbg !26
  %.01.i91 = select i1 %.not6.i90, float %231, float %230, !dbg !26
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not7.i92 = icmp eq i32 %232, 0, !dbg !26
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i91, float %213, float 0x3FD5554F00000000) #4, !dbg !26
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i91, float %213, float 0x3FD5554F00000000) #4, !dbg !26
  %.0.i93 = select i1 %.not7.i92, float %234, float %233, !dbg !26
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not8.i94 = icmp eq i32 %235, 0, !dbg !26
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i93, float %213, float -5.000000e-01) #4, !dbg !26
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i93, float %213, float -5.000000e-01) #4, !dbg !26
  %.07.i95 = select i1 %.not8.i94, float %237, float %236, !dbg !26
  %238 = fmul float %213, %.07.i95, !dbg !26
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not9.i96 = icmp eq i32 %239, 0, !dbg !26
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float %213, float %213) #4, !dbg !26
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float %213, float %213) #4, !dbg !26
  %.06.i97 = select i1 %.not9.i96, float %241, float %240, !dbg !26
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not10.i98 = icmp eq i32 %242, 0, !dbg !26
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i79, float 0x3FE62E4300000000, float %.06.i97) #4, !dbg !26
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i79, float 0x3FE62E4300000000, float %.06.i97) #4, !dbg !26
  %.04.i99 = select i1 %.not10.i98, float %244, float %243, !dbg !26
  %245 = icmp ugt i32 %204, 2139095039, !dbg !26
  br i1 %245, label %__nv_fmaf_rn.exit.i.i102, label %__nv_logf.exit105, !dbg !26

__nv_fmaf_rn.exit.i.i102:                         ; preds = %__nv_logf.exit75
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !26
  %.not11.i103 = icmp eq i32 %246, 0, !dbg !26
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i76, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i76, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !26
  %.03.i104 = select i1 %.not11.i103, float %248, float %247, !dbg !26
  br label %__nv_logf.exit105, !dbg !26

__nv_logf.exit105:                                ; preds = %__nv_logf.exit75, %__nv_fmaf_rn.exit.i.i102
  %r.i.0.i100 = phi float [ %.03.i104, %__nv_fmaf_rn.exit.i.i102 ], [ %.04.i99, %__nv_logf.exit75 ], !dbg !26
  %249 = fcmp oeq float %.02.i46, 0.000000e+00, !dbg !26
  %r.i.1.i71 = select i1 %249, float 0xFFF0000000000000, float %r.i.0.i70, !dbg !26
  %250 = fcmp oeq float %.02.i16, 0.000000e+00, !dbg !26
  %r.i.1.i41 = select i1 %250, float 0xFFF0000000000000, float %r.i.0.i40, !dbg !26
  %251 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !26
  %r.i.1.i = select i1 %251, float 0xFFF0000000000000, float %r.i.0.i, !dbg !26
  %.inv3 = fcmp oge float %20, 0.000000e+00, !dbg !27
  %252 = select i1 %.inv3, float 0.000000e+00, float %20, !dbg !27
  %.inv2 = fcmp oge float %19, 0.000000e+00, !dbg !27
  %253 = select i1 %.inv2, float 0.000000e+00, float %19, !dbg !27
  %.inv1 = fcmp oge float %18, 0.000000e+00, !dbg !27
  %254 = select i1 %.inv1, float 0.000000e+00, float %18, !dbg !27
  %.inv = fcmp oge float %17, 0.000000e+00, !dbg !27
  %255 = select i1 %.inv, float 0.000000e+00, float %17, !dbg !27
  %256 = insertelement <2 x float> poison, float %39, i64 0, !dbg !31
  %257 = insertelement <2 x float> %256, float %40, i64 1, !dbg !31
  %258 = fsub <2 x float> splat (float 1.000000e+00), %257, !dbg !31
  %259 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %260 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %261 = insertelement <2 x float> poison, float %37, i64 0, !dbg !31
  %262 = insertelement <2 x float> %261, float %38, i64 1, !dbg !31
  %263 = fsub <2 x float> splat (float 1.000000e+00), %262, !dbg !31
  %264 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %265 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %266 = lshr i32 %5, 5, !dbg !10
  %267 = and i32 %5, 31, !dbg !10
  %268 = fcmp oeq float %.02.i76, 0.000000e+00, !dbg !26
  %r.i.1.i101 = select i1 %268, float 0xFFF0000000000000, float %r.i.0.i100, !dbg !26
  %269 = fsub float %255, %r.i.1.i, !dbg !32
  %270 = fsub float %254, %r.i.1.i41, !dbg !32
  %271 = fsub float %253, %r.i.1.i71, !dbg !32
  %272 = fsub float %252, %r.i.1.i101, !dbg !32
  %.inv4 = fcmp ole float %17, 0.000000e+00, !dbg !33
  %273 = select i1 %.inv4, float 0.000000e+00, float %17, !dbg !33
  %.inv5 = fcmp ole float %18, 0.000000e+00, !dbg !33
  %274 = select i1 %.inv5, float 0.000000e+00, float %18, !dbg !33
  %.inv6 = fcmp ole float %19, 0.000000e+00, !dbg !33
  %275 = select i1 %.inv6, float 0.000000e+00, float %19, !dbg !33
  %.inv7 = fcmp ole float %20, 0.000000e+00, !dbg !33
  %276 = select i1 %.inv7, float 0.000000e+00, float %20, !dbg !33
  %.inv8 = fcmp ord float %273, 0.000000e+00, !dbg !35
  %277 = select i1 %.inv8, float 0.000000e+00, float %273, !dbg !35
  %.inv9 = fcmp ord float %274, 0.000000e+00, !dbg !35
  %278 = select i1 %.inv9, float 0.000000e+00, float %274, !dbg !35
  %.inv10 = fcmp ord float %275, 0.000000e+00, !dbg !35
  %279 = select i1 %.inv10, float 0.000000e+00, float %275, !dbg !35
  %.inv11 = fcmp ord float %276, 0.000000e+00, !dbg !35
  %280 = select i1 %.inv11, float 0.000000e+00, float %276, !dbg !35
  %281 = fmul float %277, 5.000000e-01, !dbg !37
  %282 = fmul float %278, 5.000000e-01, !dbg !37
  %283 = fmul float %279, 5.000000e-01, !dbg !37
  %284 = fmul float %280, 5.000000e-01, !dbg !37
  %285 = fadd float %281, %269, !dbg !38
  %286 = fadd float %282, %270, !dbg !38
  %287 = fadd float %283, %271, !dbg !38
  %288 = fadd float %284, %272, !dbg !38
  %289 = fmul <2 x float> %262, %262, !dbg !39
  %290 = fmul <2 x float> %257, %257, !dbg !39
  %.inv12 = fcmp oge float %21, 0.000000e+00, !dbg !40
  %291 = select i1 %.inv12, float 0.000000e+00, float %21, !dbg !40
  %.inv13 = fcmp oge float %22, 0.000000e+00, !dbg !40
  %292 = select i1 %.inv13, float 0.000000e+00, float %22, !dbg !40
  %.inv14 = fcmp oge float %23, 0.000000e+00, !dbg !40
  %293 = select i1 %.inv14, float 0.000000e+00, float %23, !dbg !40
  %.inv15 = fcmp oge float %24, 0.000000e+00, !dbg !40
  %294 = select i1 %.inv15, float 0.000000e+00, float %24, !dbg !40
  %295 = fsub float %291, %r.i.1.i, !dbg !42
  %296 = fsub float %292, %r.i.1.i41, !dbg !42
  %297 = fsub float %293, %r.i.1.i71, !dbg !42
  %298 = fsub float %294, %r.i.1.i101, !dbg !42
  %299 = fadd float %281, %295, !dbg !43
  %300 = fadd float %282, %296, !dbg !43
  %301 = fadd float %283, %297, !dbg !43
  %302 = fadd float %284, %298, !dbg !43
  %303 = fmul <2 x float> %263, %263, !dbg !44
  %304 = insertelement <2 x i32> poison, i32 %265, i64 0, !dbg !12
  %305 = insertelement <2 x i32> %304, i32 %264, i64 1, !dbg !12
  %306 = bitcast <2 x i32> %305 to <2 x float>, !dbg !12
  %307 = fmul <2 x float> %303, %306, !dbg !45
  %308 = extractelement <2 x float> %307, i64 0, !dbg !46
  %309 = fmul float %308, %285, !dbg !46
  %310 = extractelement <2 x float> %307, i64 1, !dbg !46
  %311 = fmul float %310, %286, !dbg !46
  %312 = fsub <2 x float> splat (float 1.000000e+00), %306, !dbg !47
  %313 = fmul <2 x float> %312, %289, !dbg !48
  %314 = extractelement <2 x float> %313, i64 0, !dbg !49
  %315 = fmul float %314, %299, !dbg !49
  %316 = extractelement <2 x float> %313, i64 1, !dbg !49
  %317 = fmul float %316, %300, !dbg !49
  %318 = fadd float %309, %315, !dbg !50
  %319 = fadd float %311, %317, !dbg !50
  %320 = fsub float 0.000000e+00, %318, !dbg !51
  %321 = fsub float 0.000000e+00, %319, !dbg !51
  %322 = fadd <2 x float> %313, %307, !dbg !52
  %323 = fmul <2 x float> %258, %258, !dbg !44
  %324 = insertelement <2 x i32> poison, i32 %260, i64 0, !dbg !12
  %325 = insertelement <2 x i32> %324, i32 %259, i64 1, !dbg !12
  %326 = bitcast <2 x i32> %325 to <2 x float>, !dbg !12
  %327 = fmul <2 x float> %323, %326, !dbg !45
  %328 = extractelement <2 x float> %327, i64 0, !dbg !46
  %329 = fmul float %328, %287, !dbg !46
  %330 = extractelement <2 x float> %327, i64 1, !dbg !46
  %331 = fmul float %330, %288, !dbg !46
  %332 = fsub <2 x float> splat (float 1.000000e+00), %326, !dbg !47
  %333 = fmul <2 x float> %332, %290, !dbg !48
  %334 = extractelement <2 x float> %333, i64 0, !dbg !49
  %335 = fmul float %334, %301, !dbg !49
  %336 = extractelement <2 x float> %333, i64 1, !dbg !49
  %337 = fmul float %336, %302, !dbg !49
  %338 = fadd float %329, %335, !dbg !50
  %339 = fadd float %331, %337, !dbg !50
  %340 = fsub float 0.000000e+00, %338, !dbg !51
  %341 = fsub float 0.000000e+00, %339, !dbg !51
  %342 = fadd <2 x float> %333, %327, !dbg !52
  %shift = shufflevector <2 x float> %322, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !53
  %343 = fadd <2 x float> %322, %shift, !dbg !53
  %344 = fadd <2 x float> %343, %342, !dbg !53
  %shift106 = shufflevector <2 x float> %342, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !53
  %345 = fadd <2 x float> %344, %shift106, !dbg !53
  %346 = extractelement <2 x float> %345, i64 0, !dbg !53
  %347 = bitcast float %346 to i32, !dbg !56
  %348 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %347, i32 16, i32 31), !dbg !56
  %349 = bitcast i32 %348 to float, !dbg !56
  %350 = fadd float %346, %349, !dbg !53
  %351 = bitcast float %350 to i32, !dbg !56
  %352 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %351, i32 8, i32 31), !dbg !56
  %353 = bitcast i32 %352 to float, !dbg !56
  %354 = fadd float %350, %353, !dbg !53
  %355 = bitcast float %354 to i32, !dbg !56
  %356 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %355, i32 4, i32 31), !dbg !56
  %357 = bitcast i32 %356 to float, !dbg !56
  %358 = fadd float %354, %357, !dbg !53
  %359 = bitcast float %358 to i32, !dbg !56
  %360 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %359, i32 2, i32 31), !dbg !56
  %361 = bitcast i32 %360 to float, !dbg !56
  %362 = fadd float %358, %361, !dbg !53
  %363 = bitcast float %362 to i32, !dbg !56
  %364 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %363, i32 1, i32 31), !dbg !56
  %365 = bitcast i32 %364 to float, !dbg !56
  %366 = fadd float %362, %365, !dbg !53
  %367 = icmp eq i32 %267, 0, !dbg !56
  %368 = and i32 %266, 1, !dbg !56
  %369 = getelementptr float, ptr addrspace(3) @global_smem, i32 %368, !dbg !56
  %370 = bitcast float %366 to <1 x i32>, !dbg !56
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %369, <1 x i32> %370, i1 %367) #4, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %371 = icmp slt i32 %5, 2, !dbg !56
  %372 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !56
  %373 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %372, i1 %371) #4, !dbg !56
  %374 = bitcast i32 %373 to float, !dbg !56
  %375 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %373, i32 1, i32 31), !dbg !56
  %376 = bitcast i32 %375 to float, !dbg !56
  %377 = fadd float %374, %376, !dbg !53
  %378 = and i32 %5, 1, !dbg !56
  %379 = icmp eq i32 %378, 0, !dbg !56
  %380 = and i1 %371, %379, !dbg !56
  %381 = bitcast float %377 to <1 x i32>, !dbg !56
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %372, <1 x i32> %381, i1 %380) #4, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %382 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !56
  %383 = fadd float %382, 0.000000e+00, !dbg !57
  %384 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %383, float 2.560000e+02) #4, !dbg !59
  %385 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %320, float %384) #4, !dbg !60
  %386 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %321, float %384) #4, !dbg !60
  %387 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %340, float %384) #4, !dbg !60
  %388 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %341, float %384) #4, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %389 = fadd float %385, %386, !dbg !63
  %390 = fadd float %389, %387, !dbg !63
  %391 = fadd float %390, %388, !dbg !63
  %392 = bitcast float %391 to i32, !dbg !61
  %393 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %392, i32 16, i32 31), !dbg !61
  %394 = bitcast i32 %393 to float, !dbg !61
  %395 = fadd float %391, %394, !dbg !63
  %396 = bitcast float %395 to i32, !dbg !61
  %397 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %396, i32 8, i32 31), !dbg !61
  %398 = bitcast i32 %397 to float, !dbg !61
  %399 = fadd float %395, %398, !dbg !63
  %400 = bitcast float %399 to i32, !dbg !61
  %401 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %400, i32 4, i32 31), !dbg !61
  %402 = bitcast i32 %401 to float, !dbg !61
  %403 = fadd float %399, %402, !dbg !63
  %404 = bitcast float %403 to i32, !dbg !61
  %405 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %404, i32 2, i32 31), !dbg !61
  %406 = bitcast i32 %405 to float, !dbg !61
  %407 = fadd float %403, %406, !dbg !63
  %408 = bitcast float %407 to i32, !dbg !61
  %409 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %408, i32 1, i32 31), !dbg !61
  %410 = bitcast i32 %409 to float, !dbg !61
  %411 = fadd float %407, %410, !dbg !63
  %412 = bitcast float %411 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %369, <1 x i32> %412, i1 %367) #4, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %413 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %372, i1 %371) #4, !dbg !61
  %414 = bitcast i32 %413 to float, !dbg !61
  %415 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %413, i32 1, i32 31), !dbg !61
  %416 = bitcast i32 %415 to float, !dbg !61
  %417 = fadd float %414, %416, !dbg !63
  %418 = bitcast float %417 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %372, <1 x i32> %418, i1 %380) #4, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %419 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !61
  %420 = fadd float %419, 0.000000e+00, !dbg !64
  %421 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %420, float 2.560000e+02) #4, !dbg !66
  tail call void @llvm.nvvm.barrier0(), !dbg !67
  %urem = and i32 %5, 63, !dbg !68
  %422 = icmp eq i32 %urem, 0, !dbg !68
  %423 = bitcast float %421 to i32, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %423, ptr addrspace(1) %0, i1 %422) #4, !dbg !68
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py", directory: "inductor_cache/4f")
!4 = !{ptr @triton_per_fused_abs_add_clamp_div_exp_log_mean_mul_neg_pow_rsub_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_add_clamp_div_exp_log_mean_mul_neg_pow_rsub_sigmoid_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_add_clamp_div_exp_log_mean_mul_neg_pow_rsub_sigmoid_sub_0", linkageName: "triton_per_fused_abs_add_clamp_div_exp_log_mean_mul_neg_pow_rsub_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 47, column: 30, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!18 = !DILocation(line: 33, column: 22, scope: !7)
!19 = !DILocation(line: 47, column: 29, scope: !16, inlinedAt: !18)
!20 = !DILocation(line: 47, column: 20, scope: !16, inlinedAt: !18)
!21 = !DILocation(line: 47, column: 16, scope: !16, inlinedAt: !18)
!22 = !DILocation(line: 40, column: 23, scope: !7)
!23 = !DILocation(line: 41, column: 13, scope: !7)
!24 = !DILocation(line: 42, column: 24, scope: !7)
!25 = !DILocation(line: 43, column: 20, scope: !7)
!26 = !DILocation(line: 44, column: 24, scope: !7)
!27 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 39, column: 40, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 45, column: 19, scope: !7)
!33 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !34)
!34 = !DILocation(line: 46, column: 41, scope: !7)
!35 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !36)
!36 = !DILocation(line: 47, column: 42, scope: !7)
!37 = !DILocation(line: 49, column: 20, scope: !7)
!38 = !DILocation(line: 50, column: 20, scope: !7)
!39 = !DILocation(line: 53, column: 19, scope: !7)
!40 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !41)
!41 = !DILocation(line: 56, column: 42, scope: !7)
!42 = !DILocation(line: 57, column: 20, scope: !7)
!43 = !DILocation(line: 58, column: 20, scope: !7)
!44 = !DILocation(line: 36, column: 18, scope: !7)
!45 = !DILocation(line: 37, column: 18, scope: !7)
!46 = !DILocation(line: 51, column: 19, scope: !7)
!47 = !DILocation(line: 52, column: 19, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 20, scope: !7)
!50 = !DILocation(line: 60, column: 20, scope: !7)
!51 = !DILocation(line: 61, column: 13, scope: !7)
!52 = !DILocation(line: 62, column: 19, scope: !7)
!53 = !DILocation(line: 256, column: 15, scope: !54, inlinedAt: !55)
!54 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!55 = !DILocation(line: 64, column: 59, scope: !7)
!56 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !55)
!57 = !DILocation(line: 73, column: 15, scope: !28, inlinedAt: !58)
!58 = !DILocation(line: 64, column: 45, scope: !7)
!59 = !DILocation(line: 66, column: 20, scope: !7)
!60 = !DILocation(line: 67, column: 20, scope: !7)
!61 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !62)
!62 = !DILocation(line: 69, column: 59, scope: !7)
!63 = !DILocation(line: 256, column: 15, scope: !54, inlinedAt: !62)
!64 = !DILocation(line: 73, column: 15, scope: !28, inlinedAt: !65)
!65 = !DILocation(line: 69, column: 45, scope: !7)
!66 = !DILocation(line: 70, column: 20, scope: !7)
!67 = !DILocation(line: 71, column: 4, scope: !7)
!68 = !DILocation(line: 72, column: 63, scope: !7)
!69 = !DILocation(line: 72, column: 4, scope: !7)
