#loc = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":19:0)
#loc1 = loc(unknown)
#loc45 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":64:59)
#loc51 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":69:59)
#loc78 = loc(callsite(#loc1 at #loc45))
#loc82 = loc(callsite(#loc1 at #loc51))
module {
  tt.func public @triton_per_fused_abs_add_clamp_div_exp_log_mean_mul_neg_pow_rsub_sigmoid_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.subf %cst_2, %6 : tensor<256xf32> loc(#loc58)
    %8 = math.exp %7 : tensor<256xf32> loc(#loc59)
    %9 = arith.addf %8, %cst_3 : tensor<256xf32> loc(#loc60)
    %10 = arith.divf %cst_3, %9 : tensor<256xf32> loc(#loc61)
    %11 = arith.subf %cst_3, %10 : tensor<256xf32> loc(#loc12)
    %12 = arith.mulf %11, %11 : tensor<256xf32> loc(#loc13)
    %13 = arith.mulf %3, %12 : tensor<256xf32> loc(#loc14)
    %14 = arith.cmpf olt, %6, %cst_2 : tensor<256xf32> loc(#loc62)
    %15 = arith.cmpf une, %6, %6 : tensor<256xf32> loc(#loc63)
    %16 = arith.ori %14, %15 : tensor<256xi1> loc(#loc64)
    %17 = arith.select %16, %6, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc65)
    %18 = math.absf %6 : tensor<256xf32> loc(#loc20)
    %19 = arith.subf %cst_2, %18 : tensor<256xf32> loc(#loc21)
    %20 = math.exp %19 : tensor<256xf32> loc(#loc22)
    %21 = arith.addf %20, %cst_3 : tensor<256xf32> loc(#loc23)
    %22 = math.log %21 : tensor<256xf32> loc(#loc24)
    %23 = arith.subf %17, %22 : tensor<256xf32> loc(#loc25)
    %24 = arith.cmpf ogt, %6, %cst_2 : tensor<256xf32> loc(#loc66)
    %25 = arith.ori %24, %15 : tensor<256xi1> loc(#loc67)
    %26 = arith.select %25, %6, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc68)
    %27 = arith.cmpf olt, %26, %cst_2 : tensor<256xf32> loc(#loc69)
    %28 = arith.cmpf une, %26, %26 : tensor<256xf32> loc(#loc70)
    %29 = arith.ori %27, %28 : tensor<256xi1> loc(#loc71)
    %30 = arith.select %29, %26, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc72)
    %31 = arith.mulf %30, %cst_1 : tensor<256xf32> loc(#loc31)
    %32 = arith.addf %23, %31 : tensor<256xf32> loc(#loc32)
    %33 = arith.mulf %13, %32 : tensor<256xf32> loc(#loc33)
    %34 = arith.subf %cst_3, %3 : tensor<256xf32> loc(#loc34)
    %35 = arith.mulf %10, %10 : tensor<256xf32> loc(#loc35)
    %36 = arith.mulf %34, %35 : tensor<256xf32> loc(#loc36)
    %37 = arith.cmpf olt, %7, %cst_2 : tensor<256xf32> loc(#loc73)
    %38 = arith.cmpf une, %7, %7 : tensor<256xf32> loc(#loc74)
    %39 = arith.ori %37, %38 : tensor<256xi1> loc(#loc75)
    %40 = arith.select %39, %7, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc76)
    %41 = arith.subf %40, %22 : tensor<256xf32> loc(#loc38)
    %42 = arith.addf %41, %31 : tensor<256xf32> loc(#loc39)
    %43 = arith.mulf %36, %42 : tensor<256xf32> loc(#loc40)
    %44 = arith.addf %33, %43 : tensor<256xf32> loc(#loc41)
    %45 = arith.subf %cst_2, %44 : tensor<256xf32> loc(#loc42)
    %46 = arith.addf %13, %36 : tensor<256xf32> loc(#loc43)
    %47 = "tt.reduce"(%46) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc45)), %arg5: f32 loc(callsite(#loc1 at #loc45))):
      %58 = arith.addf %arg4, %arg5 : f32 loc(#loc84)
      tt.reduce.return %58 : f32 loc(#loc77)
    }) : (tensor<256xf32>) -> f32 loc(#loc77)
    %48 = arith.addf %47, %cst_0 : f32 loc(#loc80)
    %49 = arith.divf %48, %cst : f32 loc(#loc49)
    %50 = tt.splat %49 : f32 -> tensor<256xf32> loc(#loc50)
    %51 = arith.divf %45, %50 : tensor<256xf32> loc(#loc50)
    %52 = "tt.reduce"(%51) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc51)), %arg5: f32 loc(callsite(#loc1 at #loc51))):
      %58 = arith.addf %arg4, %arg5 : f32 loc(#loc85)
      tt.reduce.return %58 : f32 loc(#loc81)
    }) : (tensor<256xf32>) -> f32 loc(#loc81)
    %53 = arith.addf %52, %cst_0 : f32 loc(#loc83)
    %54 = arith.divf %53, %cst : f32 loc(#loc53)
    %55 = tt.splat %54 : f32 -> tensor<1xf32> loc(#loc53)
    gpu.barrier loc(#loc54)
    %56 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc55)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc55)
    tt.store %57, %55 : tensor<1x!tt.ptr<f32>> loc(#loc56)
    tt.return loc(#loc57)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":27:26)
#loc3 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":31:30)
#loc4 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":31:35)
#loc5 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":32:30)
#loc6 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":32:35)
#loc7 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc8 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":33:22)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc12 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":35:18)
#loc13 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":36:18)
#loc14 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":37:18)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc16 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":39:40)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc20 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":40:23)
#loc21 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":41:13)
#loc22 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":42:24)
#loc23 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":43:20)
#loc24 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":44:24)
#loc25 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":45:19)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc27 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":46:41)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc30 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":47:42)
#loc31 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":49:20)
#loc32 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":50:20)
#loc33 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":51:19)
#loc34 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":52:19)
#loc35 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":53:19)
#loc36 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":54:20)
#loc37 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":56:42)
#loc38 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":57:20)
#loc39 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":58:20)
#loc40 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":59:20)
#loc41 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":60:20)
#loc42 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":61:13)
#loc43 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":62:19)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc48 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":64:45)
#loc49 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":66:20)
#loc50 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":67:20)
#loc52 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":69:45)
#loc53 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":70:20)
#loc54 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":71:4)
#loc55 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":72:28)
#loc56 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":72:63)
#loc57 = loc("inductor_cache/4f/c4ftlljvkwiqrmyxjj2ykkn5y2byqqgudgebafubimfuvtjhdwsm.py":72:4)
#loc58 = loc(callsite(#loc7 at #loc8))
#loc59 = loc(callsite(#loc9 at #loc8))
#loc60 = loc(callsite(#loc10 at #loc8))
#loc61 = loc(callsite(#loc11 at #loc8))
#loc62 = loc(callsite(#loc15 at #loc16))
#loc63 = loc(callsite(#loc17 at #loc16))
#loc64 = loc(callsite(#loc18 at #loc16))
#loc65 = loc(callsite(#loc19 at #loc16))
#loc66 = loc(callsite(#loc26 at #loc27))
#loc67 = loc(callsite(#loc28 at #loc27))
#loc68 = loc(callsite(#loc29 at #loc27))
#loc69 = loc(callsite(#loc15 at #loc30))
#loc70 = loc(callsite(#loc17 at #loc30))
#loc71 = loc(callsite(#loc18 at #loc30))
#loc72 = loc(callsite(#loc19 at #loc30))
#loc73 = loc(callsite(#loc15 at #loc37))
#loc74 = loc(callsite(#loc17 at #loc37))
#loc75 = loc(callsite(#loc18 at #loc37))
#loc76 = loc(callsite(#loc19 at #loc37))
#loc77 = loc(callsite(#loc44 at #loc45))
#loc79 = loc(callsite(#loc46 at #loc44))
#loc80 = loc(callsite(#loc47 at #loc48))
#loc81 = loc(callsite(#loc44 at #loc51))
#loc83 = loc(callsite(#loc47 at #loc52))
#loc84 = loc(callsite(#loc79 at #loc45))
#loc85 = loc(callsite(#loc79 at #loc51))
