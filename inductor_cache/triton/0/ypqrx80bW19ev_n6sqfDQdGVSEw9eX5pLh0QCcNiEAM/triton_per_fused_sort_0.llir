; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_sort_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = lshr i32 %4, 5, !dbg !10
  %6 = and i32 %4, 1, !dbg !10
  %7 = shl i32 %4, 2, !dbg !10
  %8 = and i32 %7, 252, !dbg !10
  %9 = zext nneg i32 %8 to i64, !dbg !11
  %10 = getelementptr float, ptr addrspace(1) %0, i64 %9, !dbg !11
  %11 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %10, i1 true) #4, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %11, 0, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %11, 1, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %11, 2, !dbg !12
  %15 = extractvalue { i32, i32, i32, i32 } %11, 3, !dbg !12
  %16 = lshr i32 %4, 1, !dbg !13
  %.lobit = and i32 %16, 1, !dbg !13
  %17 = lshr i32 %4, 2, !dbg !13
  %.lobit1 = and i32 %17, 1, !dbg !13
  %18 = lshr i32 %4, 3, !dbg !13
  %.lobit2 = and i32 %18, 1, !dbg !13
  %19 = lshr i32 %4, 4, !dbg !13
  %.lobit3 = and i32 %19, 1, !dbg !13
  %.lobit4 = and i32 %5, 1, !dbg !13
  %20 = xor i32 %6, 1, !dbg !18
  %21 = xor i32 %.lobit, 1, !dbg !18
  %22 = xor i32 %.lobit1, 1, !dbg !18
  %23 = xor i32 %.lobit2, 1, !dbg !18
  %24 = xor i32 %.lobit3, 1, !dbg !18
  %25 = xor i32 %.lobit4, 1, !dbg !18
  %26 = insertelement <2 x i32> poison, i32 %14, i64 0, !dbg !12
  %27 = insertelement <2 x i32> %26, i32 %12, i64 1, !dbg !12
  %28 = bitcast <2 x i32> %27 to <2 x float>, !dbg !12
  %29 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !12
  %30 = insertelement <2 x i32> %29, i32 %13, i64 1, !dbg !12
  %31 = bitcast <2 x i32> %30 to <2 x float>, !dbg !12
  %32 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %28), !dbg !20
  %33 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %31), !dbg !20
  %34 = fcmp uge <2 x float> %32, %33, !dbg !21
  %35 = fcmp olt <2 x float> %32, %33, !dbg !21
  %36 = shufflevector <2 x i1> %34, <2 x i1> %35, <2 x i32> <i32 0, i32 3>, !dbg !21
  %37 = trunc i32 %4 to i1, !dbg !22
  %38 = trunc i32 %16 to i1, !dbg !22
  %39 = shufflevector <2 x float> %32, <2 x float> %33, <2 x i32> <i32 0, i32 3>, !dbg !23
  %40 = bitcast <2 x float> %39 to <2 x i32>, !dbg !23
  %41 = shufflevector <2 x float> %32, <2 x float> %33, <2 x i32> <i32 1, i32 2>, !dbg !23
  %42 = bitcast <2 x float> %41 to <2 x i32>, !dbg !23
  %43 = shufflevector <2 x i32> %42, <2 x i32> poison, <2 x i32> <i32 1, i32 0>, !dbg !24
  %44 = xor <2 x i32> %43, %40, !dbg !24
  %45 = select <2 x i1> %36, <2 x i32> %44, <2 x i32> zeroinitializer, !dbg !25
  %46 = xor <2 x i32> %45, %40, !dbg !26
  %47 = shufflevector <2 x i32> %45, <2 x i32> poison, <2 x i32> <i32 1, i32 0>, !dbg !26
  %48 = xor <2 x i32> %47, %42, !dbg !26
  %49 = shufflevector <2 x i32> %48, <2 x i32> %46, <2 x i32> <i32 0, i32 3>, !dbg !27
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !27
  %51 = shufflevector <2 x i32> %46, <2 x i32> %48, <2 x i32> <i32 0, i32 3>, !dbg !28
  %52 = bitcast <2 x i32> %51 to <2 x float>, !dbg !28
  %53 = fcmp uge <2 x float> %50, %52, !dbg !22
  %54 = insertelement <2 x i1> poison, i1 %37, i64 0, !dbg !22
  %55 = shufflevector <2 x i1> %54, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !22
  %56 = xor <2 x i1> %53, %55, !dbg !22
  %57 = xor <2 x i32> %46, %48, !dbg !24
  %58 = select <2 x i1> %56, <2 x i32> zeroinitializer, <2 x i32> %57, !dbg !25
  %59 = xor <2 x i32> %58, %49, !dbg !26
  %60 = xor <2 x i32> %58, %51, !dbg !26
  %61 = extractelement <2 x i32> %59, i64 0, !dbg !27
  %62 = bitcast i32 %61 to float, !dbg !27
  %63 = extractelement <2 x i32> %60, i64 0, !dbg !27
  %64 = bitcast i32 %63 to float, !dbg !27
  %65 = extractelement <2 x i32> %59, i64 1, !dbg !28
  %66 = bitcast i32 %65 to float, !dbg !28
  %67 = extractelement <2 x i32> %60, i64 1, !dbg !28
  %68 = bitcast i32 %67 to float, !dbg !28
  %69 = fcmp uge float %62, %66, !dbg !22
  %.not6 = xor i1 %69, %37, !dbg !22
  %70 = fcmp uge float %64, %68, !dbg !22
  %.not7 = xor i1 %70, %37, !dbg !22
  %71 = xor i32 %61, %65, !dbg !24
  %72 = xor i32 %63, %67, !dbg !24
  %73 = select i1 %.not6, i32 0, i32 %71, !dbg !25
  %74 = select i1 %.not7, i32 0, i32 %72, !dbg !25
  %75 = insertelement <2 x i32> poison, i32 %73, i64 0, !dbg !26
  %76 = shufflevector <2 x i32> %75, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %77 = xor <2 x i32> %76, %59, !dbg !26
  %78 = insertelement <2 x i32> poison, i32 %74, i64 0, !dbg !26
  %79 = shufflevector <2 x i32> %78, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %80 = xor <2 x i32> %79, %60, !dbg !26
  %81 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !29
  %82 = shufflevector <2 x i32> %81, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !29
  %83 = mul nuw nsw <2 x i32> %77, %82, !dbg !29
  %84 = mul nuw nsw <2 x i32> %80, %82, !dbg !29
  %85 = extractelement <2 x i32> %83, i64 0, !dbg !30
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 1, i32 31), !dbg !30
  %87 = extractelement <2 x i32> %83, i64 1, !dbg !30
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %87, i32 1, i32 31), !dbg !30
  %89 = insertelement <2 x i32> poison, i32 %86, i64 0, !dbg !33
  %90 = insertelement <2 x i32> %89, i32 %88, i64 1, !dbg !33
  %91 = add <2 x i32> %83, %90, !dbg !33
  %92 = extractelement <2 x i32> %84, i64 0, !dbg !30
  %93 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %92, i32 1, i32 31), !dbg !30
  %94 = extractelement <2 x i32> %84, i64 1, !dbg !30
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 1, i32 31), !dbg !30
  %96 = insertelement <2 x i32> poison, i32 %93, i64 0, !dbg !33
  %97 = insertelement <2 x i32> %96, i32 %95, i64 1, !dbg !33
  %98 = add <2 x i32> %84, %97, !dbg !33
  %99 = insertelement <2 x i32> poison, i32 %6, i64 0, !dbg !35
  %100 = shufflevector <2 x i32> %99, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !35
  %101 = mul nuw nsw <2 x i32> %77, %100, !dbg !35
  %102 = mul nuw nsw <2 x i32> %80, %100, !dbg !35
  %103 = extractelement <2 x i32> %101, i64 0, !dbg !30
  %104 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %103, i32 1, i32 31), !dbg !30
  %105 = extractelement <2 x i32> %101, i64 1, !dbg !30
  %106 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %105, i32 1, i32 31), !dbg !30
  %107 = insertelement <2 x i32> poison, i32 %104, i64 0, !dbg !33
  %108 = insertelement <2 x i32> %107, i32 %106, i64 1, !dbg !33
  %109 = add <2 x i32> %101, %108, !dbg !33
  %110 = extractelement <2 x i32> %102, i64 0, !dbg !30
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 1, i32 31), !dbg !30
  %112 = extractelement <2 x i32> %102, i64 1, !dbg !30
  %113 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %112, i32 1, i32 31), !dbg !30
  %114 = insertelement <2 x i32> poison, i32 %111, i64 0, !dbg !33
  %115 = insertelement <2 x i32> %114, i32 %113, i64 1, !dbg !33
  %116 = add <2 x i32> %102, %115, !dbg !33
  %117 = bitcast <2 x i32> %91 to <2 x float>, !dbg !27
  %118 = bitcast <2 x i32> %98 to <2 x float>, !dbg !27
  %119 = bitcast <2 x i32> %109 to <2 x float>, !dbg !28
  %120 = bitcast <2 x i32> %116 to <2 x float>, !dbg !28
  %121 = fcmp uge <2 x float> %117, %119, !dbg !22
  %122 = insertelement <2 x i1> poison, i1 %38, i64 0, !dbg !22
  %123 = shufflevector <2 x i1> %122, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !22
  %124 = xor <2 x i1> %121, %123, !dbg !22
  %125 = fcmp uge <2 x float> %118, %120, !dbg !22
  %126 = xor <2 x i1> %125, %123, !dbg !22
  %127 = xor <2 x i32> %91, %109, !dbg !24
  %128 = xor <2 x i32> %98, %116, !dbg !24
  %129 = select <2 x i1> %124, <2 x i32> zeroinitializer, <2 x i32> %127, !dbg !25
  %130 = select <2 x i1> %126, <2 x i32> zeroinitializer, <2 x i32> %128, !dbg !25
  %131 = xor <2 x i32> %129, %77, !dbg !26
  %132 = xor <2 x i32> %130, %80, !dbg !26
  %133 = bitcast <2 x i32> %131 to <2 x float>, !dbg !27
  %134 = bitcast <2 x i32> %132 to <2 x float>, !dbg !28
  %135 = fcmp uge <2 x float> %133, %134, !dbg !22
  %136 = xor <2 x i1> %135, %123, !dbg !22
  %137 = xor <2 x i32> %132, %131, !dbg !24
  %138 = select <2 x i1> %136, <2 x i32> zeroinitializer, <2 x i32> %137, !dbg !25
  %139 = xor <2 x i32> %138, %131, !dbg !26
  %140 = xor <2 x i32> %138, %132, !dbg !26
  %141 = extractelement <2 x i32> %139, i64 0, !dbg !27
  %142 = bitcast i32 %141 to float, !dbg !27
  %143 = extractelement <2 x i32> %140, i64 0, !dbg !27
  %144 = bitcast i32 %143 to float, !dbg !27
  %145 = extractelement <2 x i32> %139, i64 1, !dbg !28
  %146 = bitcast i32 %145 to float, !dbg !28
  %147 = extractelement <2 x i32> %140, i64 1, !dbg !28
  %148 = bitcast i32 %147 to float, !dbg !28
  %149 = fcmp uge float %142, %146, !dbg !22
  %.not14 = xor i1 %149, %38, !dbg !22
  %150 = fcmp uge float %144, %148, !dbg !22
  %.not15 = xor i1 %150, %38, !dbg !22
  %151 = xor i32 %141, %145, !dbg !24
  %152 = xor i32 %143, %147, !dbg !24
  %153 = select i1 %.not14, i32 0, i32 %151, !dbg !25
  %154 = select i1 %.not15, i32 0, i32 %152, !dbg !25
  %155 = xor i32 %153, %141, !dbg !26
  %156 = xor i32 %153, %145, !dbg !26
  %157 = xor i32 %154, %143, !dbg !26
  %158 = xor i32 %154, %147, !dbg !26
  %159 = mul nuw nsw i32 %155, %21, !dbg !29
  %160 = mul nuw nsw i32 %156, %21, !dbg !29
  %161 = mul nuw nsw i32 %157, %21, !dbg !29
  %162 = mul nuw nsw i32 %158, %21, !dbg !29
  %163 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %159, i32 2, i32 31), !dbg !30
  %164 = add i32 %159, %163, !dbg !33
  %165 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %160, i32 2, i32 31), !dbg !30
  %166 = add i32 %160, %165, !dbg !33
  %167 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %161, i32 2, i32 31), !dbg !30
  %168 = add i32 %161, %167, !dbg !33
  %169 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %162, i32 2, i32 31), !dbg !30
  %170 = add i32 %162, %169, !dbg !33
  %171 = mul nuw nsw i32 %155, %.lobit, !dbg !35
  %172 = mul nuw nsw i32 %156, %.lobit, !dbg !35
  %173 = mul nuw nsw i32 %157, %.lobit, !dbg !35
  %174 = mul nuw nsw i32 %158, %.lobit, !dbg !35
  %175 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %171, i32 2, i32 31), !dbg !30
  %176 = add i32 %171, %175, !dbg !33
  %177 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %172, i32 2, i32 31), !dbg !30
  %178 = add i32 %172, %177, !dbg !33
  %179 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %173, i32 2, i32 31), !dbg !30
  %180 = add i32 %173, %179, !dbg !33
  %181 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %174, i32 2, i32 31), !dbg !30
  %182 = add i32 %174, %181, !dbg !33
  %183 = bitcast i32 %164 to float, !dbg !27
  %184 = bitcast i32 %166 to float, !dbg !27
  %185 = bitcast i32 %168 to float, !dbg !27
  %186 = bitcast i32 %170 to float, !dbg !27
  %187 = bitcast i32 %176 to float, !dbg !28
  %188 = bitcast i32 %178 to float, !dbg !28
  %189 = bitcast i32 %180 to float, !dbg !28
  %190 = bitcast i32 %182 to float, !dbg !28
  %191 = trunc i32 %17 to i1, !dbg !22
  %192 = fcmp uge float %183, %187, !dbg !22
  %.not16 = xor i1 %192, %191, !dbg !22
  %193 = fcmp uge float %184, %188, !dbg !22
  %.not17 = xor i1 %193, %191, !dbg !22
  %194 = fcmp uge float %185, %189, !dbg !22
  %.not18 = xor i1 %194, %191, !dbg !22
  %195 = fcmp uge float %186, %190, !dbg !22
  %.not19 = xor i1 %195, %191, !dbg !22
  %196 = xor i32 %164, %176, !dbg !24
  %197 = xor i32 %166, %178, !dbg !24
  %198 = xor i32 %168, %180, !dbg !24
  %199 = xor i32 %170, %182, !dbg !24
  %200 = select i1 %.not16, i32 0, i32 %196, !dbg !25
  %201 = select i1 %.not17, i32 0, i32 %197, !dbg !25
  %202 = select i1 %.not18, i32 0, i32 %198, !dbg !25
  %203 = select i1 %.not19, i32 0, i32 %199, !dbg !25
  %204 = trunc i32 %18 to i1, !dbg !22
  %205 = insertelement <2 x i32> poison, i32 %200, i64 0, !dbg !26
  %206 = insertelement <2 x i32> %205, i32 %201, i64 1, !dbg !26
  %207 = insertelement <2 x i32> poison, i32 %155, i64 0, !dbg !26
  %208 = insertelement <2 x i32> %207, i32 %156, i64 1, !dbg !26
  %209 = xor <2 x i32> %206, %208, !dbg !26
  %210 = insertelement <2 x i32> poison, i32 %202, i64 0, !dbg !26
  %211 = insertelement <2 x i32> %210, i32 %203, i64 1, !dbg !26
  %212 = insertelement <2 x i32> poison, i32 %157, i64 0, !dbg !26
  %213 = insertelement <2 x i32> %212, i32 %158, i64 1, !dbg !26
  %214 = xor <2 x i32> %211, %213, !dbg !26
  %215 = extractelement <2 x i32> %209, i64 0, !dbg !35
  %216 = mul nuw nsw i32 %215, %20, !dbg !29
  %217 = extractelement <2 x i32> %209, i64 1, !dbg !35
  %218 = mul nuw nsw i32 %217, %20, !dbg !29
  %219 = extractelement <2 x i32> %214, i64 0, !dbg !35
  %220 = mul nuw nsw i32 %219, %20, !dbg !29
  %221 = extractelement <2 x i32> %214, i64 1, !dbg !35
  %222 = mul nuw nsw i32 %221, %20, !dbg !29
  %223 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %216, i32 1, i32 31), !dbg !30
  %224 = add i32 %216, %223, !dbg !33
  %225 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %218, i32 1, i32 31), !dbg !30
  %226 = add i32 %218, %225, !dbg !33
  %227 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %220, i32 1, i32 31), !dbg !30
  %228 = add i32 %220, %227, !dbg !33
  %229 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %222, i32 1, i32 31), !dbg !30
  %230 = add i32 %222, %229, !dbg !33
  %231 = mul nuw nsw i32 %215, %6, !dbg !35
  %232 = mul nuw nsw i32 %217, %6, !dbg !35
  %233 = mul nuw nsw i32 %219, %6, !dbg !35
  %234 = mul nuw nsw i32 %221, %6, !dbg !35
  %235 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %231, i32 1, i32 31), !dbg !30
  %236 = add i32 %231, %235, !dbg !33
  %237 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %232, i32 1, i32 31), !dbg !30
  %238 = add i32 %232, %237, !dbg !33
  %239 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %233, i32 1, i32 31), !dbg !30
  %240 = add i32 %233, %239, !dbg !33
  %241 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %234, i32 1, i32 31), !dbg !30
  %242 = add i32 %234, %241, !dbg !33
  %243 = bitcast i32 %224 to float, !dbg !27
  %244 = bitcast i32 %226 to float, !dbg !27
  %245 = bitcast i32 %228 to float, !dbg !27
  %246 = bitcast i32 %230 to float, !dbg !27
  %247 = bitcast i32 %236 to float, !dbg !28
  %248 = bitcast i32 %238 to float, !dbg !28
  %249 = bitcast i32 %240 to float, !dbg !28
  %250 = bitcast i32 %242 to float, !dbg !28
  %251 = fcmp uge float %243, %247, !dbg !22
  %.not20 = xor i1 %251, %191, !dbg !22
  %252 = fcmp uge float %244, %248, !dbg !22
  %.not21 = xor i1 %252, %191, !dbg !22
  %253 = fcmp uge float %245, %249, !dbg !22
  %.not22 = xor i1 %253, %191, !dbg !22
  %254 = fcmp uge float %246, %250, !dbg !22
  %.not23 = xor i1 %254, %191, !dbg !22
  %255 = xor i32 %224, %236, !dbg !24
  %256 = xor i32 %226, %238, !dbg !24
  %257 = xor i32 %228, %240, !dbg !24
  %258 = xor i32 %230, %242, !dbg !24
  %259 = insertelement <2 x i1> poison, i1 %.not20, i64 0, !dbg !25
  %260 = insertelement <2 x i1> %259, i1 %.not21, i64 1, !dbg !25
  %261 = insertelement <2 x i32> poison, i32 %255, i64 0, !dbg !25
  %262 = insertelement <2 x i32> %261, i32 %256, i64 1, !dbg !25
  %263 = select <2 x i1> %260, <2 x i32> zeroinitializer, <2 x i32> %262, !dbg !25
  %264 = insertelement <2 x i1> poison, i1 %.not22, i64 0, !dbg !25
  %265 = insertelement <2 x i1> %264, i1 %.not23, i64 1, !dbg !25
  %266 = insertelement <2 x i32> poison, i32 %257, i64 0, !dbg !25
  %267 = insertelement <2 x i32> %266, i32 %258, i64 1, !dbg !25
  %268 = select <2 x i1> %265, <2 x i32> zeroinitializer, <2 x i32> %267, !dbg !25
  %269 = xor <2 x i32> %263, %209, !dbg !26
  %270 = xor <2 x i32> %268, %214, !dbg !26
  %271 = bitcast <2 x i32> %269 to <2 x float>, !dbg !27
  %272 = bitcast <2 x i32> %270 to <2 x float>, !dbg !28
  %273 = fcmp uge <2 x float> %271, %272, !dbg !22
  %274 = insertelement <2 x i1> poison, i1 %191, i64 0, !dbg !22
  %275 = shufflevector <2 x i1> %274, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !22
  %276 = xor <2 x i1> %273, %275, !dbg !22
  %277 = xor <2 x i32> %269, %270, !dbg !24
  %278 = select <2 x i1> %276, <2 x i32> zeroinitializer, <2 x i32> %277, !dbg !25
  %279 = xor <2 x i32> %278, %269, !dbg !26
  %280 = xor <2 x i32> %278, %270, !dbg !26
  %281 = extractelement <2 x i32> %279, i64 0, !dbg !27
  %282 = bitcast i32 %281 to float, !dbg !27
  %283 = extractelement <2 x i32> %280, i64 0, !dbg !27
  %284 = bitcast i32 %283 to float, !dbg !27
  %285 = extractelement <2 x i32> %279, i64 1, !dbg !28
  %286 = bitcast i32 %285 to float, !dbg !28
  %287 = extractelement <2 x i32> %280, i64 1, !dbg !28
  %288 = bitcast i32 %287 to float, !dbg !28
  %289 = fcmp uge float %282, %286, !dbg !22
  %.not26 = xor i1 %289, %191, !dbg !22
  %290 = fcmp uge float %284, %288, !dbg !22
  %.not27 = xor i1 %290, %191, !dbg !22
  %291 = xor i32 %281, %285, !dbg !24
  %292 = xor i32 %283, %287, !dbg !24
  %293 = select i1 %.not26, i32 0, i32 %291, !dbg !25
  %294 = select i1 %.not27, i32 0, i32 %292, !dbg !25
  %295 = insertelement <2 x i32> poison, i32 %293, i64 0, !dbg !26
  %296 = shufflevector <2 x i32> %295, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %297 = xor <2 x i32> %296, %279, !dbg !26
  %298 = insertelement <2 x i32> poison, i32 %294, i64 0, !dbg !26
  %299 = shufflevector <2 x i32> %298, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %300 = xor <2 x i32> %299, %280, !dbg !26
  %301 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !29
  %302 = shufflevector <2 x i32> %301, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !29
  %303 = mul nuw nsw <2 x i32> %297, %302, !dbg !29
  %304 = mul nuw nsw <2 x i32> %300, %302, !dbg !29
  %305 = extractelement <2 x i32> %303, i64 0, !dbg !30
  %306 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %305, i32 4, i32 31), !dbg !30
  %307 = extractelement <2 x i32> %303, i64 1, !dbg !30
  %308 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %307, i32 4, i32 31), !dbg !30
  %309 = insertelement <2 x i32> poison, i32 %306, i64 0, !dbg !33
  %310 = insertelement <2 x i32> %309, i32 %308, i64 1, !dbg !33
  %311 = add <2 x i32> %303, %310, !dbg !33
  %312 = extractelement <2 x i32> %304, i64 0, !dbg !30
  %313 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %312, i32 4, i32 31), !dbg !30
  %314 = extractelement <2 x i32> %304, i64 1, !dbg !30
  %315 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %314, i32 4, i32 31), !dbg !30
  %316 = insertelement <2 x i32> poison, i32 %313, i64 0, !dbg !33
  %317 = insertelement <2 x i32> %316, i32 %315, i64 1, !dbg !33
  %318 = add <2 x i32> %304, %317, !dbg !33
  %319 = insertelement <2 x i32> poison, i32 %.lobit1, i64 0, !dbg !35
  %320 = shufflevector <2 x i32> %319, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !35
  %321 = mul nuw nsw <2 x i32> %297, %320, !dbg !35
  %322 = mul nuw nsw <2 x i32> %300, %320, !dbg !35
  %323 = extractelement <2 x i32> %321, i64 0, !dbg !30
  %324 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %323, i32 4, i32 31), !dbg !30
  %325 = extractelement <2 x i32> %321, i64 1, !dbg !30
  %326 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %325, i32 4, i32 31), !dbg !30
  %327 = insertelement <2 x i32> poison, i32 %324, i64 0, !dbg !33
  %328 = insertelement <2 x i32> %327, i32 %326, i64 1, !dbg !33
  %329 = add <2 x i32> %321, %328, !dbg !33
  %330 = extractelement <2 x i32> %322, i64 0, !dbg !30
  %331 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %330, i32 4, i32 31), !dbg !30
  %332 = extractelement <2 x i32> %322, i64 1, !dbg !30
  %333 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %332, i32 4, i32 31), !dbg !30
  %334 = insertelement <2 x i32> poison, i32 %331, i64 0, !dbg !33
  %335 = insertelement <2 x i32> %334, i32 %333, i64 1, !dbg !33
  %336 = add <2 x i32> %322, %335, !dbg !33
  %337 = bitcast <2 x i32> %311 to <2 x float>, !dbg !27
  %338 = bitcast <2 x i32> %318 to <2 x float>, !dbg !27
  %339 = bitcast <2 x i32> %329 to <2 x float>, !dbg !28
  %340 = bitcast <2 x i32> %336 to <2 x float>, !dbg !28
  %341 = fcmp uge <2 x float> %337, %339, !dbg !22
  %342 = insertelement <2 x i1> poison, i1 %204, i64 0, !dbg !22
  %343 = shufflevector <2 x i1> %342, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !22
  %344 = xor <2 x i1> %341, %343, !dbg !22
  %345 = fcmp uge <2 x float> %338, %340, !dbg !22
  %346 = xor <2 x i1> %345, %343, !dbg !22
  %347 = xor <2 x i32> %311, %329, !dbg !24
  %348 = xor <2 x i32> %318, %336, !dbg !24
  %349 = select <2 x i1> %344, <2 x i32> zeroinitializer, <2 x i32> %347, !dbg !25
  %350 = select <2 x i1> %346, <2 x i32> zeroinitializer, <2 x i32> %348, !dbg !25
  %351 = xor <2 x i32> %349, %297, !dbg !26
  %352 = xor <2 x i32> %350, %300, !dbg !26
  %353 = extractelement <2 x i32> %351, i64 0, !dbg !35
  %354 = mul nuw nsw i32 %353, %21, !dbg !29
  %355 = extractelement <2 x i32> %351, i64 1, !dbg !35
  %356 = mul nuw nsw i32 %355, %21, !dbg !29
  %357 = extractelement <2 x i32> %352, i64 0, !dbg !35
  %358 = mul nuw nsw i32 %357, %21, !dbg !29
  %359 = extractelement <2 x i32> %352, i64 1, !dbg !35
  %360 = mul nuw nsw i32 %359, %21, !dbg !29
  %361 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %354, i32 2, i32 31), !dbg !30
  %362 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %356, i32 2, i32 31), !dbg !30
  %363 = insertelement <2 x i32> poison, i32 %354, i64 0, !dbg !33
  %364 = insertelement <2 x i32> %363, i32 %356, i64 1, !dbg !33
  %365 = insertelement <2 x i32> poison, i32 %361, i64 0, !dbg !33
  %366 = insertelement <2 x i32> %365, i32 %362, i64 1, !dbg !33
  %367 = add <2 x i32> %364, %366, !dbg !33
  %368 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %358, i32 2, i32 31), !dbg !30
  %369 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %360, i32 2, i32 31), !dbg !30
  %370 = insertelement <2 x i32> poison, i32 %358, i64 0, !dbg !33
  %371 = insertelement <2 x i32> %370, i32 %360, i64 1, !dbg !33
  %372 = insertelement <2 x i32> poison, i32 %368, i64 0, !dbg !33
  %373 = insertelement <2 x i32> %372, i32 %369, i64 1, !dbg !33
  %374 = add <2 x i32> %371, %373, !dbg !33
  %375 = mul nuw nsw i32 %353, %.lobit, !dbg !35
  %376 = mul nuw nsw i32 %355, %.lobit, !dbg !35
  %377 = mul nuw nsw i32 %357, %.lobit, !dbg !35
  %378 = mul nuw nsw i32 %359, %.lobit, !dbg !35
  %379 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %375, i32 2, i32 31), !dbg !30
  %380 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %376, i32 2, i32 31), !dbg !30
  %381 = insertelement <2 x i32> poison, i32 %375, i64 0, !dbg !33
  %382 = insertelement <2 x i32> %381, i32 %376, i64 1, !dbg !33
  %383 = insertelement <2 x i32> poison, i32 %379, i64 0, !dbg !33
  %384 = insertelement <2 x i32> %383, i32 %380, i64 1, !dbg !33
  %385 = add <2 x i32> %382, %384, !dbg !33
  %386 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %377, i32 2, i32 31), !dbg !30
  %387 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %378, i32 2, i32 31), !dbg !30
  %388 = insertelement <2 x i32> poison, i32 %377, i64 0, !dbg !33
  %389 = insertelement <2 x i32> %388, i32 %378, i64 1, !dbg !33
  %390 = insertelement <2 x i32> poison, i32 %386, i64 0, !dbg !33
  %391 = insertelement <2 x i32> %390, i32 %387, i64 1, !dbg !33
  %392 = add <2 x i32> %389, %391, !dbg !33
  %393 = bitcast <2 x i32> %367 to <2 x float>, !dbg !27
  %394 = bitcast <2 x i32> %374 to <2 x float>, !dbg !27
  %395 = bitcast <2 x i32> %385 to <2 x float>, !dbg !28
  %396 = bitcast <2 x i32> %392 to <2 x float>, !dbg !28
  %397 = fcmp uge <2 x float> %393, %395, !dbg !22
  %398 = xor <2 x i1> %397, %343, !dbg !22
  %399 = fcmp uge <2 x float> %394, %396, !dbg !22
  %400 = xor <2 x i1> %399, %343, !dbg !22
  %401 = xor <2 x i32> %367, %385, !dbg !24
  %402 = xor <2 x i32> %374, %392, !dbg !24
  %403 = select <2 x i1> %398, <2 x i32> zeroinitializer, <2 x i32> %401, !dbg !25
  %404 = select <2 x i1> %400, <2 x i32> zeroinitializer, <2 x i32> %402, !dbg !25
  %405 = xor <2 x i32> %403, %351, !dbg !26
  %406 = xor <2 x i32> %404, %352, !dbg !26
  %407 = mul nuw nsw <2 x i32> %405, %82, !dbg !29
  %408 = mul nuw nsw <2 x i32> %406, %82, !dbg !29
  %409 = extractelement <2 x i32> %407, i64 0, !dbg !30
  %410 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %409, i32 1, i32 31), !dbg !30
  %411 = extractelement <2 x i32> %407, i64 1, !dbg !30
  %412 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %411, i32 1, i32 31), !dbg !30
  %413 = insertelement <2 x i32> poison, i32 %410, i64 0, !dbg !33
  %414 = insertelement <2 x i32> %413, i32 %412, i64 1, !dbg !33
  %415 = add <2 x i32> %407, %414, !dbg !33
  %416 = extractelement <2 x i32> %408, i64 0, !dbg !30
  %417 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %416, i32 1, i32 31), !dbg !30
  %418 = extractelement <2 x i32> %408, i64 1, !dbg !30
  %419 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %418, i32 1, i32 31), !dbg !30
  %420 = insertelement <2 x i32> poison, i32 %417, i64 0, !dbg !33
  %421 = insertelement <2 x i32> %420, i32 %419, i64 1, !dbg !33
  %422 = add <2 x i32> %408, %421, !dbg !33
  %423 = mul nuw nsw <2 x i32> %405, %100, !dbg !35
  %424 = mul nuw nsw <2 x i32> %406, %100, !dbg !35
  %425 = extractelement <2 x i32> %423, i64 0, !dbg !30
  %426 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %425, i32 1, i32 31), !dbg !30
  %427 = extractelement <2 x i32> %423, i64 1, !dbg !30
  %428 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %427, i32 1, i32 31), !dbg !30
  %429 = insertelement <2 x i32> poison, i32 %426, i64 0, !dbg !33
  %430 = insertelement <2 x i32> %429, i32 %428, i64 1, !dbg !33
  %431 = add <2 x i32> %423, %430, !dbg !33
  %432 = extractelement <2 x i32> %424, i64 0, !dbg !30
  %433 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %432, i32 1, i32 31), !dbg !30
  %434 = extractelement <2 x i32> %424, i64 1, !dbg !30
  %435 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %434, i32 1, i32 31), !dbg !30
  %436 = insertelement <2 x i32> poison, i32 %433, i64 0, !dbg !33
  %437 = insertelement <2 x i32> %436, i32 %435, i64 1, !dbg !33
  %438 = add <2 x i32> %424, %437, !dbg !33
  %439 = bitcast <2 x i32> %415 to <2 x float>, !dbg !27
  %440 = bitcast <2 x i32> %422 to <2 x float>, !dbg !27
  %441 = bitcast <2 x i32> %431 to <2 x float>, !dbg !28
  %442 = bitcast <2 x i32> %438 to <2 x float>, !dbg !28
  %443 = fcmp uge <2 x float> %439, %441, !dbg !22
  %444 = xor <2 x i1> %443, %343, !dbg !22
  %445 = fcmp uge <2 x float> %440, %442, !dbg !22
  %446 = xor <2 x i1> %445, %343, !dbg !22
  %447 = xor <2 x i32> %415, %431, !dbg !24
  %448 = xor <2 x i32> %422, %438, !dbg !24
  %449 = select <2 x i1> %444, <2 x i32> zeroinitializer, <2 x i32> %447, !dbg !25
  %450 = select <2 x i1> %446, <2 x i32> zeroinitializer, <2 x i32> %448, !dbg !25
  %451 = xor <2 x i32> %449, %405, !dbg !26
  %452 = xor <2 x i32> %450, %406, !dbg !26
  %453 = bitcast <2 x i32> %451 to <2 x float>, !dbg !27
  %454 = bitcast <2 x i32> %452 to <2 x float>, !dbg !28
  %455 = fcmp uge <2 x float> %453, %454, !dbg !22
  %456 = xor <2 x i1> %455, %343, !dbg !22
  %457 = xor <2 x i32> %452, %451, !dbg !24
  %458 = select <2 x i1> %456, <2 x i32> zeroinitializer, <2 x i32> %457, !dbg !25
  %459 = xor <2 x i32> %458, %451, !dbg !26
  %460 = xor <2 x i32> %458, %452, !dbg !26
  %461 = extractelement <2 x i32> %459, i64 0, !dbg !27
  %462 = bitcast i32 %461 to float, !dbg !27
  %463 = extractelement <2 x i32> %460, i64 0, !dbg !27
  %464 = bitcast i32 %463 to float, !dbg !27
  %465 = extractelement <2 x i32> %459, i64 1, !dbg !28
  %466 = bitcast i32 %465 to float, !dbg !28
  %467 = extractelement <2 x i32> %460, i64 1, !dbg !28
  %468 = bitcast i32 %467 to float, !dbg !28
  %469 = fcmp uge float %462, %466, !dbg !22
  %.not42 = xor i1 %469, %204, !dbg !22
  %470 = fcmp uge float %464, %468, !dbg !22
  %.not43 = xor i1 %470, %204, !dbg !22
  %471 = xor i32 %461, %465, !dbg !24
  %472 = xor i32 %463, %467, !dbg !24
  %473 = select i1 %.not42, i32 0, i32 %471, !dbg !25
  %474 = select i1 %.not43, i32 0, i32 %472, !dbg !25
  %475 = trunc i32 %19 to i1, !dbg !22
  %476 = insertelement <2 x i32> poison, i32 %474, i64 0, !dbg !26
  %477 = shufflevector <2 x i32> %476, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %478 = xor <2 x i32> %477, %460, !dbg !26
  %479 = extractelement <2 x i32> %478, i64 0, !dbg !35
  %480 = mul nuw nsw i32 %479, %23, !dbg !29
  %481 = extractelement <2 x i32> %478, i64 1, !dbg !35
  %482 = mul nuw nsw i32 %481, %23, !dbg !29
  %483 = mul nuw nsw i32 %479, %.lobit2, !dbg !35
  %484 = mul nuw nsw i32 %481, %.lobit2, !dbg !35
  %485 = insertelement <2 x i1> poison, i1 %475, i64 0, !dbg !22
  %486 = shufflevector <2 x i1> %485, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !22
  %487 = insertelement <2 x i32> poison, i32 %473, i64 0, !dbg !26
  %488 = shufflevector <2 x i32> %487, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %489 = xor <2 x i32> %488, %459, !dbg !26
  %490 = extractelement <2 x i32> %489, i64 0, !dbg !35
  %491 = mul nuw nsw i32 %490, %23, !dbg !29
  %492 = extractelement <2 x i32> %489, i64 1, !dbg !35
  %493 = mul nuw nsw i32 %492, %23, !dbg !29
  %494 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %491, i32 8, i32 31), !dbg !30
  %495 = add i32 %491, %494, !dbg !33
  %496 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %493, i32 8, i32 31), !dbg !30
  %497 = add i32 %493, %496, !dbg !33
  %498 = mul nuw nsw i32 %490, %.lobit2, !dbg !35
  %499 = mul nuw nsw i32 %492, %.lobit2, !dbg !35
  %500 = bitcast i32 %495 to float, !dbg !27
  %501 = bitcast i32 %497 to float, !dbg !27
  %502 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %480, i32 8, i32 31), !dbg !30
  %503 = add i32 %480, %502, !dbg !33
  %504 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %482, i32 8, i32 31), !dbg !30
  %505 = add i32 %482, %504, !dbg !33
  %506 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %498, i32 8, i32 31), !dbg !30
  %507 = add i32 %498, %506, !dbg !33
  %508 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %499, i32 8, i32 31), !dbg !30
  %509 = add i32 %499, %508, !dbg !33
  %510 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %483, i32 8, i32 31), !dbg !30
  %511 = add i32 %483, %510, !dbg !33
  %512 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %484, i32 8, i32 31), !dbg !30
  %513 = add i32 %484, %512, !dbg !33
  %514 = bitcast i32 %503 to float, !dbg !27
  %515 = bitcast i32 %505 to float, !dbg !27
  %516 = bitcast i32 %507 to float, !dbg !28
  %517 = bitcast i32 %509 to float, !dbg !28
  %518 = bitcast i32 %511 to float, !dbg !28
  %519 = bitcast i32 %513 to float, !dbg !28
  %520 = fcmp uge float %500, %516, !dbg !22
  %.not44 = xor i1 %520, %475, !dbg !22
  %521 = fcmp uge float %501, %517, !dbg !22
  %.not45 = xor i1 %521, %475, !dbg !22
  %522 = fcmp uge float %514, %518, !dbg !22
  %.not46 = xor i1 %522, %475, !dbg !22
  %523 = fcmp uge float %515, %519, !dbg !22
  %.not47 = xor i1 %523, %475, !dbg !22
  %524 = xor i32 %495, %507, !dbg !24
  %525 = xor i32 %497, %509, !dbg !24
  %526 = xor i32 %503, %511, !dbg !24
  %527 = xor i32 %505, %513, !dbg !24
  %528 = insertelement <2 x i1> poison, i1 %.not44, i64 0, !dbg !25
  %529 = insertelement <2 x i1> %528, i1 %.not45, i64 1, !dbg !25
  %530 = insertelement <2 x i32> poison, i32 %524, i64 0, !dbg !25
  %531 = insertelement <2 x i32> %530, i32 %525, i64 1, !dbg !25
  %532 = select <2 x i1> %529, <2 x i32> zeroinitializer, <2 x i32> %531, !dbg !25
  %533 = insertelement <2 x i1> poison, i1 %.not46, i64 0, !dbg !25
  %534 = insertelement <2 x i1> %533, i1 %.not47, i64 1, !dbg !25
  %535 = insertelement <2 x i32> poison, i32 %526, i64 0, !dbg !25
  %536 = insertelement <2 x i32> %535, i32 %527, i64 1, !dbg !25
  %537 = select <2 x i1> %534, <2 x i32> zeroinitializer, <2 x i32> %536, !dbg !25
  %538 = xor <2 x i32> %532, %489, !dbg !26
  %539 = xor <2 x i32> %537, %478, !dbg !26
  %540 = mul nuw nsw <2 x i32> %539, %302, !dbg !29
  %541 = extractelement <2 x i32> %540, i64 0, !dbg !30
  %542 = extractelement <2 x i32> %540, i64 1, !dbg !30
  %543 = mul nuw nsw <2 x i32> %539, %320, !dbg !35
  %544 = extractelement <2 x i32> %543, i64 0, !dbg !30
  %545 = extractelement <2 x i32> %543, i64 1, !dbg !30
  %546 = mul nuw nsw <2 x i32> %538, %302, !dbg !29
  %547 = extractelement <2 x i32> %546, i64 0, !dbg !30
  %548 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %547, i32 4, i32 31), !dbg !30
  %549 = extractelement <2 x i32> %546, i64 1, !dbg !30
  %550 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %549, i32 4, i32 31), !dbg !30
  %551 = insertelement <2 x i32> poison, i32 %548, i64 0, !dbg !33
  %552 = insertelement <2 x i32> %551, i32 %550, i64 1, !dbg !33
  %553 = add <2 x i32> %546, %552, !dbg !33
  %554 = mul nuw nsw <2 x i32> %538, %320, !dbg !35
  %555 = bitcast <2 x i32> %553 to <2 x float>, !dbg !27
  %556 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %541, i32 4, i32 31), !dbg !30
  %557 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %542, i32 4, i32 31), !dbg !30
  %558 = insertelement <2 x i32> poison, i32 %556, i64 0, !dbg !33
  %559 = insertelement <2 x i32> %558, i32 %557, i64 1, !dbg !33
  %560 = add <2 x i32> %540, %559, !dbg !33
  %561 = extractelement <2 x i32> %554, i64 0, !dbg !30
  %562 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %561, i32 4, i32 31), !dbg !30
  %563 = extractelement <2 x i32> %554, i64 1, !dbg !30
  %564 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %563, i32 4, i32 31), !dbg !30
  %565 = insertelement <2 x i32> poison, i32 %562, i64 0, !dbg !33
  %566 = insertelement <2 x i32> %565, i32 %564, i64 1, !dbg !33
  %567 = add <2 x i32> %554, %566, !dbg !33
  %568 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %544, i32 4, i32 31), !dbg !30
  %569 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %545, i32 4, i32 31), !dbg !30
  %570 = insertelement <2 x i32> poison, i32 %568, i64 0, !dbg !33
  %571 = insertelement <2 x i32> %570, i32 %569, i64 1, !dbg !33
  %572 = add <2 x i32> %543, %571, !dbg !33
  %573 = bitcast <2 x i32> %560 to <2 x float>, !dbg !27
  %574 = bitcast <2 x i32> %567 to <2 x float>, !dbg !28
  %575 = bitcast <2 x i32> %572 to <2 x float>, !dbg !28
  %576 = fcmp uge <2 x float> %555, %574, !dbg !22
  %577 = xor <2 x i1> %576, %486, !dbg !22
  %578 = fcmp uge <2 x float> %573, %575, !dbg !22
  %579 = xor <2 x i1> %578, %486, !dbg !22
  %580 = xor <2 x i32> %553, %567, !dbg !24
  %581 = xor <2 x i32> %560, %572, !dbg !24
  %582 = select <2 x i1> %577, <2 x i32> zeroinitializer, <2 x i32> %580, !dbg !25
  %583 = select <2 x i1> %579, <2 x i32> zeroinitializer, <2 x i32> %581, !dbg !25
  %584 = xor <2 x i32> %582, %538, !dbg !26
  %585 = xor <2 x i32> %583, %539, !dbg !26
  %586 = extractelement <2 x i32> %584, i64 0, !dbg !35
  %587 = mul nuw nsw i32 %586, %21, !dbg !29
  %588 = extractelement <2 x i32> %584, i64 1, !dbg !35
  %589 = mul nuw nsw i32 %588, %21, !dbg !29
  %590 = extractelement <2 x i32> %585, i64 0, !dbg !35
  %591 = mul nuw nsw i32 %590, %21, !dbg !29
  %592 = extractelement <2 x i32> %585, i64 1, !dbg !35
  %593 = mul nuw nsw i32 %592, %21, !dbg !29
  %594 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %587, i32 2, i32 31), !dbg !30
  %595 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %589, i32 2, i32 31), !dbg !30
  %596 = insertelement <2 x i32> poison, i32 %587, i64 0, !dbg !33
  %597 = insertelement <2 x i32> %596, i32 %589, i64 1, !dbg !33
  %598 = insertelement <2 x i32> poison, i32 %594, i64 0, !dbg !33
  %599 = insertelement <2 x i32> %598, i32 %595, i64 1, !dbg !33
  %600 = add <2 x i32> %597, %599, !dbg !33
  %601 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %591, i32 2, i32 31), !dbg !30
  %602 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %593, i32 2, i32 31), !dbg !30
  %603 = insertelement <2 x i32> poison, i32 %591, i64 0, !dbg !33
  %604 = insertelement <2 x i32> %603, i32 %593, i64 1, !dbg !33
  %605 = insertelement <2 x i32> poison, i32 %601, i64 0, !dbg !33
  %606 = insertelement <2 x i32> %605, i32 %602, i64 1, !dbg !33
  %607 = add <2 x i32> %604, %606, !dbg !33
  %608 = mul nuw nsw i32 %586, %.lobit, !dbg !35
  %609 = mul nuw nsw i32 %588, %.lobit, !dbg !35
  %610 = mul nuw nsw i32 %590, %.lobit, !dbg !35
  %611 = mul nuw nsw i32 %592, %.lobit, !dbg !35
  %612 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %608, i32 2, i32 31), !dbg !30
  %613 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %609, i32 2, i32 31), !dbg !30
  %614 = insertelement <2 x i32> poison, i32 %608, i64 0, !dbg !33
  %615 = insertelement <2 x i32> %614, i32 %609, i64 1, !dbg !33
  %616 = insertelement <2 x i32> poison, i32 %612, i64 0, !dbg !33
  %617 = insertelement <2 x i32> %616, i32 %613, i64 1, !dbg !33
  %618 = add <2 x i32> %615, %617, !dbg !33
  %619 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %610, i32 2, i32 31), !dbg !30
  %620 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %611, i32 2, i32 31), !dbg !30
  %621 = insertelement <2 x i32> poison, i32 %610, i64 0, !dbg !33
  %622 = insertelement <2 x i32> %621, i32 %611, i64 1, !dbg !33
  %623 = insertelement <2 x i32> poison, i32 %619, i64 0, !dbg !33
  %624 = insertelement <2 x i32> %623, i32 %620, i64 1, !dbg !33
  %625 = add <2 x i32> %622, %624, !dbg !33
  %626 = bitcast <2 x i32> %600 to <2 x float>, !dbg !27
  %627 = bitcast <2 x i32> %607 to <2 x float>, !dbg !27
  %628 = bitcast <2 x i32> %618 to <2 x float>, !dbg !28
  %629 = bitcast <2 x i32> %625 to <2 x float>, !dbg !28
  %630 = fcmp uge <2 x float> %626, %628, !dbg !22
  %631 = xor <2 x i1> %630, %486, !dbg !22
  %632 = fcmp uge <2 x float> %627, %629, !dbg !22
  %633 = xor <2 x i1> %632, %486, !dbg !22
  %634 = xor <2 x i32> %600, %618, !dbg !24
  %635 = xor <2 x i32> %607, %625, !dbg !24
  %636 = select <2 x i1> %631, <2 x i32> zeroinitializer, <2 x i32> %634, !dbg !25
  %637 = select <2 x i1> %633, <2 x i32> zeroinitializer, <2 x i32> %635, !dbg !25
  %638 = xor <2 x i32> %636, %584, !dbg !26
  %639 = xor <2 x i32> %637, %585, !dbg !26
  %640 = mul nuw nsw <2 x i32> %638, %82, !dbg !29
  %641 = mul nuw nsw <2 x i32> %639, %82, !dbg !29
  %642 = extractelement <2 x i32> %640, i64 0, !dbg !30
  %643 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %642, i32 1, i32 31), !dbg !30
  %644 = extractelement <2 x i32> %640, i64 1, !dbg !30
  %645 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %644, i32 1, i32 31), !dbg !30
  %646 = insertelement <2 x i32> poison, i32 %643, i64 0, !dbg !33
  %647 = insertelement <2 x i32> %646, i32 %645, i64 1, !dbg !33
  %648 = add <2 x i32> %640, %647, !dbg !33
  %649 = extractelement <2 x i32> %641, i64 0, !dbg !30
  %650 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %649, i32 1, i32 31), !dbg !30
  %651 = extractelement <2 x i32> %641, i64 1, !dbg !30
  %652 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %651, i32 1, i32 31), !dbg !30
  %653 = insertelement <2 x i32> poison, i32 %650, i64 0, !dbg !33
  %654 = insertelement <2 x i32> %653, i32 %652, i64 1, !dbg !33
  %655 = add <2 x i32> %641, %654, !dbg !33
  %656 = mul nuw nsw <2 x i32> %638, %100, !dbg !35
  %657 = mul nuw nsw <2 x i32> %639, %100, !dbg !35
  %658 = extractelement <2 x i32> %656, i64 0, !dbg !30
  %659 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %658, i32 1, i32 31), !dbg !30
  %660 = extractelement <2 x i32> %656, i64 1, !dbg !30
  %661 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %660, i32 1, i32 31), !dbg !30
  %662 = insertelement <2 x i32> poison, i32 %659, i64 0, !dbg !33
  %663 = insertelement <2 x i32> %662, i32 %661, i64 1, !dbg !33
  %664 = add <2 x i32> %656, %663, !dbg !33
  %665 = extractelement <2 x i32> %657, i64 0, !dbg !30
  %666 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %665, i32 1, i32 31), !dbg !30
  %667 = extractelement <2 x i32> %657, i64 1, !dbg !30
  %668 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %667, i32 1, i32 31), !dbg !30
  %669 = insertelement <2 x i32> poison, i32 %666, i64 0, !dbg !33
  %670 = insertelement <2 x i32> %669, i32 %668, i64 1, !dbg !33
  %671 = add <2 x i32> %657, %670, !dbg !33
  %672 = bitcast <2 x i32> %648 to <2 x float>, !dbg !27
  %673 = bitcast <2 x i32> %655 to <2 x float>, !dbg !27
  %674 = bitcast <2 x i32> %664 to <2 x float>, !dbg !28
  %675 = bitcast <2 x i32> %671 to <2 x float>, !dbg !28
  %676 = fcmp uge <2 x float> %672, %674, !dbg !22
  %677 = xor <2 x i1> %676, %486, !dbg !22
  %678 = fcmp uge <2 x float> %673, %675, !dbg !22
  %679 = xor <2 x i1> %678, %486, !dbg !22
  %680 = xor <2 x i32> %648, %664, !dbg !24
  %681 = xor <2 x i32> %655, %671, !dbg !24
  %682 = select <2 x i1> %677, <2 x i32> zeroinitializer, <2 x i32> %680, !dbg !25
  %683 = select <2 x i1> %679, <2 x i32> zeroinitializer, <2 x i32> %681, !dbg !25
  %684 = xor <2 x i32> %682, %638, !dbg !26
  %685 = xor <2 x i32> %683, %639, !dbg !26
  %686 = bitcast <2 x i32> %684 to <2 x float>, !dbg !27
  %687 = bitcast <2 x i32> %685 to <2 x float>, !dbg !28
  %688 = fcmp uge <2 x float> %686, %687, !dbg !22
  %689 = xor <2 x i1> %688, %486, !dbg !22
  %690 = xor <2 x i32> %684, %685, !dbg !24
  %691 = select <2 x i1> %689, <2 x i32> zeroinitializer, <2 x i32> %690, !dbg !25
  %692 = trunc i32 %5 to i1, !dbg !22
  %693 = xor <2 x i32> %691, %684, !dbg !26
  %694 = xor <2 x i32> %691, %685, !dbg !26
  %695 = extractelement <2 x i32> %693, i64 0, !dbg !27
  %696 = bitcast i32 %695 to float, !dbg !27
  %697 = extractelement <2 x i32> %694, i64 0, !dbg !27
  %698 = bitcast i32 %697 to float, !dbg !27
  %699 = extractelement <2 x i32> %693, i64 1, !dbg !28
  %700 = bitcast i32 %699 to float, !dbg !28
  %701 = extractelement <2 x i32> %694, i64 1, !dbg !28
  %702 = bitcast i32 %701 to float, !dbg !28
  %703 = fcmp uge float %696, %700, !dbg !22
  %.not62 = xor i1 %703, %475, !dbg !22
  %704 = fcmp uge float %698, %702, !dbg !22
  %.not63 = xor i1 %704, %475, !dbg !22
  %705 = xor i32 %695, %699, !dbg !24
  %706 = xor i32 %697, %701, !dbg !24
  %707 = select i1 %.not62, i32 0, i32 %705, !dbg !25
  %708 = select i1 %.not63, i32 0, i32 %706, !dbg !25
  %709 = insertelement <2 x i32> poison, i32 %707, i64 0, !dbg !26
  %710 = shufflevector <2 x i32> %709, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %711 = xor <2 x i32> %710, %693, !dbg !26
  %712 = insertelement <2 x i32> poison, i32 %708, i64 0, !dbg !26
  %713 = shufflevector <2 x i32> %712, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %714 = xor <2 x i32> %713, %694, !dbg !26
  %715 = insertelement <2 x i1> poison, i1 %692, i64 0, !dbg !22
  %716 = shufflevector <2 x i1> %715, <2 x i1> poison, <2 x i32> zeroinitializer, !dbg !22
  %717 = insertelement <2 x i32> poison, i32 %24, i64 0, !dbg !29
  %718 = shufflevector <2 x i32> %717, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !29
  %719 = mul nuw nsw <2 x i32> %714, %718, !dbg !29
  %720 = extractelement <2 x i32> %719, i64 0, !dbg !30
  %721 = extractelement <2 x i32> %719, i64 1, !dbg !30
  %722 = insertelement <2 x i32> poison, i32 %.lobit3, i64 0, !dbg !35
  %723 = shufflevector <2 x i32> %722, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !35
  %724 = mul nuw nsw <2 x i32> %714, %723, !dbg !35
  %725 = extractelement <2 x i32> %724, i64 0, !dbg !30
  %726 = extractelement <2 x i32> %724, i64 1, !dbg !30
  %727 = mul nuw nsw <2 x i32> %711, %718, !dbg !29
  %728 = extractelement <2 x i32> %727, i64 0, !dbg !30
  %729 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %728, i32 16, i32 31), !dbg !30
  %730 = extractelement <2 x i32> %727, i64 1, !dbg !30
  %731 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %730, i32 16, i32 31), !dbg !30
  %732 = insertelement <2 x i32> poison, i32 %729, i64 0, !dbg !33
  %733 = insertelement <2 x i32> %732, i32 %731, i64 1, !dbg !33
  %734 = add <2 x i32> %727, %733, !dbg !33
  %735 = mul nuw nsw <2 x i32> %711, %723, !dbg !35
  %736 = bitcast <2 x i32> %734 to <2 x float>, !dbg !27
  %737 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %720, i32 16, i32 31), !dbg !30
  %738 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %721, i32 16, i32 31), !dbg !30
  %739 = insertelement <2 x i32> poison, i32 %737, i64 0, !dbg !33
  %740 = insertelement <2 x i32> %739, i32 %738, i64 1, !dbg !33
  %741 = add <2 x i32> %719, %740, !dbg !33
  %742 = extractelement <2 x i32> %735, i64 0, !dbg !30
  %743 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %742, i32 16, i32 31), !dbg !30
  %744 = extractelement <2 x i32> %735, i64 1, !dbg !30
  %745 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %744, i32 16, i32 31), !dbg !30
  %746 = insertelement <2 x i32> poison, i32 %743, i64 0, !dbg !33
  %747 = insertelement <2 x i32> %746, i32 %745, i64 1, !dbg !33
  %748 = add <2 x i32> %735, %747, !dbg !33
  %749 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %725, i32 16, i32 31), !dbg !30
  %750 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %726, i32 16, i32 31), !dbg !30
  %751 = insertelement <2 x i32> poison, i32 %749, i64 0, !dbg !33
  %752 = insertelement <2 x i32> %751, i32 %750, i64 1, !dbg !33
  %753 = add <2 x i32> %724, %752, !dbg !33
  %754 = bitcast <2 x i32> %741 to <2 x float>, !dbg !27
  %755 = bitcast <2 x i32> %748 to <2 x float>, !dbg !28
  %756 = bitcast <2 x i32> %753 to <2 x float>, !dbg !28
  %757 = fcmp uge <2 x float> %736, %755, !dbg !22
  %758 = xor <2 x i1> %757, %716, !dbg !22
  %759 = fcmp uge <2 x float> %754, %756, !dbg !22
  %760 = xor <2 x i1> %759, %716, !dbg !22
  %761 = xor <2 x i32> %734, %748, !dbg !24
  %762 = xor <2 x i32> %741, %753, !dbg !24
  %763 = select <2 x i1> %758, <2 x i32> zeroinitializer, <2 x i32> %761, !dbg !25
  %764 = select <2 x i1> %760, <2 x i32> zeroinitializer, <2 x i32> %762, !dbg !25
  %765 = xor <2 x i32> %763, %711, !dbg !26
  %766 = xor <2 x i32> %764, %714, !dbg !26
  %767 = extractelement <2 x i32> %765, i64 0, !dbg !35
  %768 = mul nuw nsw i32 %767, %23, !dbg !29
  %769 = extractelement <2 x i32> %765, i64 1, !dbg !35
  %770 = mul nuw nsw i32 %769, %23, !dbg !29
  %771 = extractelement <2 x i32> %766, i64 0, !dbg !35
  %772 = mul nuw nsw i32 %771, %23, !dbg !29
  %773 = extractelement <2 x i32> %766, i64 1, !dbg !35
  %774 = mul nuw nsw i32 %773, %23, !dbg !29
  %775 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %768, i32 8, i32 31), !dbg !30
  %776 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %770, i32 8, i32 31), !dbg !30
  %777 = insertelement <2 x i32> poison, i32 %768, i64 0, !dbg !33
  %778 = insertelement <2 x i32> %777, i32 %770, i64 1, !dbg !33
  %779 = insertelement <2 x i32> poison, i32 %775, i64 0, !dbg !33
  %780 = insertelement <2 x i32> %779, i32 %776, i64 1, !dbg !33
  %781 = add <2 x i32> %778, %780, !dbg !33
  %782 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %772, i32 8, i32 31), !dbg !30
  %783 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %774, i32 8, i32 31), !dbg !30
  %784 = insertelement <2 x i32> poison, i32 %772, i64 0, !dbg !33
  %785 = insertelement <2 x i32> %784, i32 %774, i64 1, !dbg !33
  %786 = insertelement <2 x i32> poison, i32 %782, i64 0, !dbg !33
  %787 = insertelement <2 x i32> %786, i32 %783, i64 1, !dbg !33
  %788 = add <2 x i32> %785, %787, !dbg !33
  %789 = mul nuw nsw i32 %767, %.lobit2, !dbg !35
  %790 = mul nuw nsw i32 %769, %.lobit2, !dbg !35
  %791 = mul nuw nsw i32 %771, %.lobit2, !dbg !35
  %792 = mul nuw nsw i32 %773, %.lobit2, !dbg !35
  %793 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %789, i32 8, i32 31), !dbg !30
  %794 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %790, i32 8, i32 31), !dbg !30
  %795 = insertelement <2 x i32> poison, i32 %789, i64 0, !dbg !33
  %796 = insertelement <2 x i32> %795, i32 %790, i64 1, !dbg !33
  %797 = insertelement <2 x i32> poison, i32 %793, i64 0, !dbg !33
  %798 = insertelement <2 x i32> %797, i32 %794, i64 1, !dbg !33
  %799 = add <2 x i32> %796, %798, !dbg !33
  %800 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %791, i32 8, i32 31), !dbg !30
  %801 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %792, i32 8, i32 31), !dbg !30
  %802 = insertelement <2 x i32> poison, i32 %791, i64 0, !dbg !33
  %803 = insertelement <2 x i32> %802, i32 %792, i64 1, !dbg !33
  %804 = insertelement <2 x i32> poison, i32 %800, i64 0, !dbg !33
  %805 = insertelement <2 x i32> %804, i32 %801, i64 1, !dbg !33
  %806 = add <2 x i32> %803, %805, !dbg !33
  %807 = bitcast <2 x i32> %781 to <2 x float>, !dbg !27
  %808 = bitcast <2 x i32> %788 to <2 x float>, !dbg !27
  %809 = bitcast <2 x i32> %799 to <2 x float>, !dbg !28
  %810 = bitcast <2 x i32> %806 to <2 x float>, !dbg !28
  %811 = fcmp uge <2 x float> %807, %809, !dbg !22
  %812 = xor <2 x i1> %811, %716, !dbg !22
  %813 = fcmp uge <2 x float> %808, %810, !dbg !22
  %814 = xor <2 x i1> %813, %716, !dbg !22
  %815 = xor <2 x i32> %781, %799, !dbg !24
  %816 = xor <2 x i32> %788, %806, !dbg !24
  %817 = select <2 x i1> %812, <2 x i32> zeroinitializer, <2 x i32> %815, !dbg !25
  %818 = select <2 x i1> %814, <2 x i32> zeroinitializer, <2 x i32> %816, !dbg !25
  %819 = xor <2 x i32> %817, %765, !dbg !26
  %820 = xor <2 x i32> %818, %766, !dbg !26
  %821 = mul nuw nsw <2 x i32> %819, %302, !dbg !29
  %822 = mul nuw nsw <2 x i32> %820, %302, !dbg !29
  %823 = extractelement <2 x i32> %821, i64 0, !dbg !30
  %824 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %823, i32 4, i32 31), !dbg !30
  %825 = extractelement <2 x i32> %821, i64 1, !dbg !30
  %826 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %825, i32 4, i32 31), !dbg !30
  %827 = insertelement <2 x i32> poison, i32 %824, i64 0, !dbg !33
  %828 = insertelement <2 x i32> %827, i32 %826, i64 1, !dbg !33
  %829 = add <2 x i32> %821, %828, !dbg !33
  %830 = extractelement <2 x i32> %822, i64 0, !dbg !30
  %831 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %830, i32 4, i32 31), !dbg !30
  %832 = extractelement <2 x i32> %822, i64 1, !dbg !30
  %833 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %832, i32 4, i32 31), !dbg !30
  %834 = insertelement <2 x i32> poison, i32 %831, i64 0, !dbg !33
  %835 = insertelement <2 x i32> %834, i32 %833, i64 1, !dbg !33
  %836 = add <2 x i32> %822, %835, !dbg !33
  %837 = mul nuw nsw <2 x i32> %819, %320, !dbg !35
  %838 = mul nuw nsw <2 x i32> %820, %320, !dbg !35
  %839 = extractelement <2 x i32> %837, i64 0, !dbg !30
  %840 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %839, i32 4, i32 31), !dbg !30
  %841 = extractelement <2 x i32> %837, i64 1, !dbg !30
  %842 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %841, i32 4, i32 31), !dbg !30
  %843 = insertelement <2 x i32> poison, i32 %840, i64 0, !dbg !33
  %844 = insertelement <2 x i32> %843, i32 %842, i64 1, !dbg !33
  %845 = add <2 x i32> %837, %844, !dbg !33
  %846 = extractelement <2 x i32> %838, i64 0, !dbg !30
  %847 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %846, i32 4, i32 31), !dbg !30
  %848 = extractelement <2 x i32> %838, i64 1, !dbg !30
  %849 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %848, i32 4, i32 31), !dbg !30
  %850 = insertelement <2 x i32> poison, i32 %847, i64 0, !dbg !33
  %851 = insertelement <2 x i32> %850, i32 %849, i64 1, !dbg !33
  %852 = add <2 x i32> %838, %851, !dbg !33
  %853 = bitcast <2 x i32> %829 to <2 x float>, !dbg !27
  %854 = bitcast <2 x i32> %836 to <2 x float>, !dbg !27
  %855 = bitcast <2 x i32> %845 to <2 x float>, !dbg !28
  %856 = bitcast <2 x i32> %852 to <2 x float>, !dbg !28
  %857 = fcmp uge <2 x float> %853, %855, !dbg !22
  %858 = xor <2 x i1> %857, %716, !dbg !22
  %859 = fcmp uge <2 x float> %854, %856, !dbg !22
  %860 = xor <2 x i1> %859, %716, !dbg !22
  %861 = xor <2 x i32> %829, %845, !dbg !24
  %862 = xor <2 x i32> %836, %852, !dbg !24
  %863 = select <2 x i1> %858, <2 x i32> zeroinitializer, <2 x i32> %861, !dbg !25
  %864 = select <2 x i1> %860, <2 x i32> zeroinitializer, <2 x i32> %862, !dbg !25
  %865 = xor <2 x i32> %863, %819, !dbg !26
  %866 = xor <2 x i32> %864, %820, !dbg !26
  %867 = extractelement <2 x i32> %865, i64 0, !dbg !35
  %868 = mul nuw nsw i32 %867, %21, !dbg !29
  %869 = extractelement <2 x i32> %865, i64 1, !dbg !35
  %870 = mul nuw nsw i32 %869, %21, !dbg !29
  %871 = extractelement <2 x i32> %866, i64 0, !dbg !35
  %872 = mul nuw nsw i32 %871, %21, !dbg !29
  %873 = extractelement <2 x i32> %866, i64 1, !dbg !35
  %874 = mul nuw nsw i32 %873, %21, !dbg !29
  %875 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %868, i32 2, i32 31), !dbg !30
  %876 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %870, i32 2, i32 31), !dbg !30
  %877 = insertelement <2 x i32> poison, i32 %868, i64 0, !dbg !33
  %878 = insertelement <2 x i32> %877, i32 %870, i64 1, !dbg !33
  %879 = insertelement <2 x i32> poison, i32 %875, i64 0, !dbg !33
  %880 = insertelement <2 x i32> %879, i32 %876, i64 1, !dbg !33
  %881 = add <2 x i32> %878, %880, !dbg !33
  %882 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %872, i32 2, i32 31), !dbg !30
  %883 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %874, i32 2, i32 31), !dbg !30
  %884 = insertelement <2 x i32> poison, i32 %872, i64 0, !dbg !33
  %885 = insertelement <2 x i32> %884, i32 %874, i64 1, !dbg !33
  %886 = insertelement <2 x i32> poison, i32 %882, i64 0, !dbg !33
  %887 = insertelement <2 x i32> %886, i32 %883, i64 1, !dbg !33
  %888 = add <2 x i32> %885, %887, !dbg !33
  %889 = mul nuw nsw i32 %867, %.lobit, !dbg !35
  %890 = mul nuw nsw i32 %869, %.lobit, !dbg !35
  %891 = mul nuw nsw i32 %871, %.lobit, !dbg !35
  %892 = mul nuw nsw i32 %873, %.lobit, !dbg !35
  %893 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %889, i32 2, i32 31), !dbg !30
  %894 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %890, i32 2, i32 31), !dbg !30
  %895 = insertelement <2 x i32> poison, i32 %889, i64 0, !dbg !33
  %896 = insertelement <2 x i32> %895, i32 %890, i64 1, !dbg !33
  %897 = insertelement <2 x i32> poison, i32 %893, i64 0, !dbg !33
  %898 = insertelement <2 x i32> %897, i32 %894, i64 1, !dbg !33
  %899 = add <2 x i32> %896, %898, !dbg !33
  %900 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %891, i32 2, i32 31), !dbg !30
  %901 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %892, i32 2, i32 31), !dbg !30
  %902 = insertelement <2 x i32> poison, i32 %891, i64 0, !dbg !33
  %903 = insertelement <2 x i32> %902, i32 %892, i64 1, !dbg !33
  %904 = insertelement <2 x i32> poison, i32 %900, i64 0, !dbg !33
  %905 = insertelement <2 x i32> %904, i32 %901, i64 1, !dbg !33
  %906 = add <2 x i32> %903, %905, !dbg !33
  %907 = bitcast <2 x i32> %881 to <2 x float>, !dbg !27
  %908 = bitcast <2 x i32> %888 to <2 x float>, !dbg !27
  %909 = bitcast <2 x i32> %899 to <2 x float>, !dbg !28
  %910 = bitcast <2 x i32> %906 to <2 x float>, !dbg !28
  %911 = fcmp uge <2 x float> %907, %909, !dbg !22
  %912 = xor <2 x i1> %911, %716, !dbg !22
  %913 = fcmp uge <2 x float> %908, %910, !dbg !22
  %914 = xor <2 x i1> %913, %716, !dbg !22
  %915 = xor <2 x i32> %881, %899, !dbg !24
  %916 = xor <2 x i32> %888, %906, !dbg !24
  %917 = select <2 x i1> %912, <2 x i32> zeroinitializer, <2 x i32> %915, !dbg !25
  %918 = select <2 x i1> %914, <2 x i32> zeroinitializer, <2 x i32> %916, !dbg !25
  %919 = xor <2 x i32> %917, %865, !dbg !26
  %920 = xor <2 x i32> %918, %866, !dbg !26
  %921 = mul nuw nsw <2 x i32> %919, %82, !dbg !29
  %922 = mul nuw nsw <2 x i32> %920, %82, !dbg !29
  %923 = extractelement <2 x i32> %921, i64 0, !dbg !30
  %924 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %923, i32 1, i32 31), !dbg !30
  %925 = extractelement <2 x i32> %921, i64 1, !dbg !30
  %926 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %925, i32 1, i32 31), !dbg !30
  %927 = insertelement <2 x i32> poison, i32 %924, i64 0, !dbg !33
  %928 = insertelement <2 x i32> %927, i32 %926, i64 1, !dbg !33
  %929 = add <2 x i32> %921, %928, !dbg !33
  %930 = extractelement <2 x i32> %922, i64 0, !dbg !30
  %931 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %930, i32 1, i32 31), !dbg !30
  %932 = extractelement <2 x i32> %922, i64 1, !dbg !30
  %933 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %932, i32 1, i32 31), !dbg !30
  %934 = insertelement <2 x i32> poison, i32 %931, i64 0, !dbg !33
  %935 = insertelement <2 x i32> %934, i32 %933, i64 1, !dbg !33
  %936 = add <2 x i32> %922, %935, !dbg !33
  %937 = mul nuw nsw <2 x i32> %919, %100, !dbg !35
  %938 = mul nuw nsw <2 x i32> %920, %100, !dbg !35
  %939 = extractelement <2 x i32> %937, i64 0, !dbg !30
  %940 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %939, i32 1, i32 31), !dbg !30
  %941 = extractelement <2 x i32> %937, i64 1, !dbg !30
  %942 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %941, i32 1, i32 31), !dbg !30
  %943 = insertelement <2 x i32> poison, i32 %940, i64 0, !dbg !33
  %944 = insertelement <2 x i32> %943, i32 %942, i64 1, !dbg !33
  %945 = add <2 x i32> %937, %944, !dbg !33
  %946 = extractelement <2 x i32> %938, i64 0, !dbg !30
  %947 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %946, i32 1, i32 31), !dbg !30
  %948 = extractelement <2 x i32> %938, i64 1, !dbg !30
  %949 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %948, i32 1, i32 31), !dbg !30
  %950 = insertelement <2 x i32> poison, i32 %947, i64 0, !dbg !33
  %951 = insertelement <2 x i32> %950, i32 %949, i64 1, !dbg !33
  %952 = add <2 x i32> %938, %951, !dbg !33
  %953 = bitcast <2 x i32> %929 to <2 x float>, !dbg !27
  %954 = bitcast <2 x i32> %936 to <2 x float>, !dbg !27
  %955 = bitcast <2 x i32> %945 to <2 x float>, !dbg !28
  %956 = bitcast <2 x i32> %952 to <2 x float>, !dbg !28
  %957 = fcmp uge <2 x float> %953, %955, !dbg !22
  %958 = xor <2 x i1> %957, %716, !dbg !22
  %959 = fcmp uge <2 x float> %954, %956, !dbg !22
  %960 = xor <2 x i1> %959, %716, !dbg !22
  %961 = xor <2 x i32> %929, %945, !dbg !24
  %962 = xor <2 x i32> %936, %952, !dbg !24
  %963 = select <2 x i1> %958, <2 x i32> zeroinitializer, <2 x i32> %961, !dbg !25
  %964 = select <2 x i1> %960, <2 x i32> zeroinitializer, <2 x i32> %962, !dbg !25
  %965 = xor <2 x i32> %963, %919, !dbg !26
  %966 = xor <2 x i32> %964, %920, !dbg !26
  %967 = bitcast <2 x i32> %965 to <2 x float>, !dbg !27
  %968 = bitcast <2 x i32> %966 to <2 x float>, !dbg !28
  %969 = fcmp uge <2 x float> %967, %968, !dbg !22
  %970 = xor <2 x i1> %969, %716, !dbg !22
  %971 = xor <2 x i32> %965, %966, !dbg !24
  %972 = select <2 x i1> %970, <2 x i32> zeroinitializer, <2 x i32> %971, !dbg !25
  %973 = xor <2 x i32> %972, %965, !dbg !26
  %974 = xor <2 x i32> %972, %966, !dbg !26
  %975 = extractelement <2 x i32> %973, i64 0, !dbg !24
  %976 = bitcast i32 %975 to float, !dbg !27
  %977 = extractelement <2 x i32> %974, i64 0, !dbg !24
  %978 = bitcast i32 %977 to float, !dbg !27
  %979 = extractelement <2 x i32> %973, i64 1, !dbg !24
  %980 = bitcast i32 %979 to float, !dbg !28
  %981 = extractelement <2 x i32> %974, i64 1, !dbg !24
  %982 = bitcast i32 %981 to float, !dbg !28
  %983 = fcmp uge float %976, %980, !dbg !22
  %.not86 = xor i1 %983, %692, !dbg !22
  %984 = fcmp uge float %978, %982, !dbg !22
  %.not87 = xor i1 %984, %692, !dbg !22
  %985 = xor i32 %975, %979, !dbg !24
  %986 = xor i32 %977, %981, !dbg !24
  %987 = select i1 %.not86, i32 0, i32 %985, !dbg !25
  %988 = select i1 %.not87, i32 0, i32 %986, !dbg !25
  %989 = shl i32 %4, 3, !dbg !30
  %990 = and i32 %989, 248, !dbg !30
  %991 = or disjoint i32 %990, %.lobit4, !dbg !30
  %992 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %991, !dbg !30
  %993 = or disjoint i32 %990, 2, !dbg !30
  %994 = or disjoint i32 %993, %.lobit4, !dbg !30
  %995 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %994, !dbg !30
  %996 = or disjoint i32 %990, 4, !dbg !30
  %997 = or disjoint i32 %996, %.lobit4, !dbg !30
  %998 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %997, !dbg !30
  %999 = or disjoint i32 %990, 6, !dbg !30
  %1000 = or disjoint i32 %999, %.lobit4, !dbg !30
  %1001 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %1000, !dbg !30
  %1002 = icmp slt i32 %4, 256, !dbg !30
  %1003 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %4, !dbg !30
  %1004 = icmp eq i32 %6, 0, !dbg !30
  %1005 = and i1 %1002, %1004, !dbg !30
  %1006 = getelementptr i8, ptr addrspace(3) %1003, i32 256, !dbg !30
  %1007 = getelementptr i8, ptr addrspace(3) %1003, i32 512, !dbg !30
  %1008 = getelementptr i8, ptr addrspace(3) %1003, i32 768, !dbg !30
  %1009 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %990, !dbg !30
  %1010 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %993, !dbg !30
  %1011 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %996, !dbg !30
  %1012 = getelementptr i32, ptr addrspace(3) @global_smem, i32 %999, !dbg !30
  %1013 = insertelement <2 x i32> poison, i32 %988, i64 0, !dbg !26
  %1014 = shufflevector <2 x i32> %1013, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %1015 = xor <2 x i32> %1014, %974, !dbg !26
  %1016 = shufflevector <2 x i32> %1015, <2 x i32> poison, <2 x i32> <i32 1, i32 0>, !dbg !26
  %1017 = extractelement <2 x i32> %1015, i64 0, !dbg !35
  %1018 = mul nuw nsw i32 %1017, %25, !dbg !29
  %1019 = extractelement <2 x i32> %1015, i64 1, !dbg !35
  %1020 = mul nuw nsw i32 %1019, %25, !dbg !29
  %1021 = insertelement <1 x i32> poison, i32 %1018, i64 0, !dbg !30
  %1022 = insertelement <1 x i32> poison, i32 %1020, i64 0, !dbg !30
  %1023 = mul nuw nsw i32 %1017, %.lobit4, !dbg !35
  %1024 = mul nuw nsw i32 %1019, %.lobit4, !dbg !35
  %1025 = insertelement <1 x i32> poison, i32 %1023, i64 0, !dbg !30
  %1026 = insertelement <1 x i32> poison, i32 %1024, i64 0, !dbg !30
  %1027 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !29
  %1028 = shufflevector <2 x i32> %1027, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !29
  %1029 = insertelement <2 x i32> poison, i32 %.lobit2, i64 0, !dbg !35
  %1030 = shufflevector <2 x i32> %1029, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !35
  %1031 = insertelement <2 x i32> poison, i32 %987, i64 0, !dbg !26
  %1032 = shufflevector <2 x i32> %1031, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !26
  %1033 = xor <2 x i32> %1032, %973, !dbg !26
  %1034 = shufflevector <2 x i32> %1033, <2 x i32> poison, <2 x i32> <i32 1, i32 0>, !dbg !26
  %1035 = extractelement <2 x i32> %1033, i64 0, !dbg !35
  %1036 = mul nuw nsw i32 %1035, %25, !dbg !29
  %1037 = extractelement <2 x i32> %1033, i64 1, !dbg !35
  %1038 = mul nuw nsw i32 %1037, %25, !dbg !29
  %1039 = insertelement <1 x i32> poison, i32 %1036, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %992, <1 x i32> %1039, i1 true) #4, !dbg !30
  %1040 = insertelement <1 x i32> poison, i32 %1038, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %995, <1 x i32> %1040, i1 true) #4, !dbg !30
  %1041 = mul nuw nsw i32 %1035, %.lobit4, !dbg !35
  %1042 = mul nuw nsw i32 %1037, %.lobit4, !dbg !35
  %1043 = insertelement <1 x i32> poison, i32 %1041, i64 0, !dbg !30
  %1044 = insertelement <1 x i32> poison, i32 %1042, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %998, <1 x i32> %1021, i1 true) #4, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1001, <1 x i32> %1022, i1 true) #4, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %1045 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1003, i1 %1002) #4, !dbg !30
  %1046 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1045, i32 1, i32 31), !dbg !30
  %1047 = add i32 %1046, %1045, !dbg !33
  %1048 = insertelement <1 x i32> poison, i32 %1047, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1003, <1 x i32> %1048, i1 %1005) #4, !dbg !30
  %1049 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1006, i1 %1002) #4, !dbg !30
  %1050 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1049, i32 1, i32 31), !dbg !30
  %1051 = add i32 %1050, %1049, !dbg !33
  %1052 = insertelement <1 x i32> poison, i32 %1051, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1006, <1 x i32> %1052, i1 %1005) #4, !dbg !30
  %1053 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1007, i1 %1002) #4, !dbg !30
  %1054 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1053, i32 1, i32 31), !dbg !30
  %1055 = add i32 %1054, %1053, !dbg !33
  %1056 = insertelement <1 x i32> poison, i32 %1055, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1007, <1 x i32> %1056, i1 %1005) #4, !dbg !30
  %1057 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1008, i1 %1002) #4, !dbg !30
  %1058 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1057, i32 1, i32 31), !dbg !30
  %1059 = add i32 %1058, %1057, !dbg !33
  %1060 = insertelement <1 x i32> poison, i32 %1059, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1008, <1 x i32> %1060, i1 %1005) #4, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %1061 = load i32, ptr addrspace(3) %1009, align 16, !dbg !30
  %1062 = load i32, ptr addrspace(3) %1010, align 8, !dbg !30
  %1063 = load i32, ptr addrspace(3) %1011, align 16, !dbg !30
  %1064 = load i32, ptr addrspace(3) %1012, align 8, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %992, <1 x i32> %1043, i1 true) #4, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %995, <1 x i32> %1044, i1 true) #4, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %998, <1 x i32> %1025, i1 true) #4, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1001, <1 x i32> %1026, i1 true) #4, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %1065 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1003, i1 %1002) #4, !dbg !30
  %1066 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1065, i32 1, i32 31), !dbg !30
  %1067 = add i32 %1066, %1065, !dbg !33
  %1068 = insertelement <1 x i32> poison, i32 %1067, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1003, <1 x i32> %1068, i1 %1005) #4, !dbg !30
  %1069 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1006, i1 %1002) #4, !dbg !30
  %1070 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1069, i32 1, i32 31), !dbg !30
  %1071 = add i32 %1070, %1069, !dbg !33
  %1072 = insertelement <1 x i32> poison, i32 %1071, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1006, <1 x i32> %1072, i1 %1005) #4, !dbg !30
  %1073 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1007, i1 %1002) #4, !dbg !30
  %1074 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1073, i32 1, i32 31), !dbg !30
  %1075 = add i32 %1074, %1073, !dbg !33
  %1076 = insertelement <1 x i32> poison, i32 %1075, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1007, <1 x i32> %1076, i1 %1005) #4, !dbg !30
  %1077 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %1008, i1 %1002) #4, !dbg !30
  %1078 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1077, i32 1, i32 31), !dbg !30
  %1079 = add i32 %1078, %1077, !dbg !33
  %1080 = insertelement <1 x i32> poison, i32 %1079, i64 0, !dbg !30
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1008, <1 x i32> %1080, i1 %1005) #4, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %1081 = load i32, ptr addrspace(3) %1009, align 16, !dbg !30
  %1082 = load i32, ptr addrspace(3) %1010, align 8, !dbg !30
  %1083 = load i32, ptr addrspace(3) %1011, align 16, !dbg !30
  %1084 = load i32, ptr addrspace(3) %1012, align 8, !dbg !30
  %1085 = insertelement <2 x i32> poison, i32 %1062, i64 0, !dbg !27
  %1086 = insertelement <2 x i32> %1085, i32 %1061, i64 1, !dbg !27
  %1087 = bitcast <2 x i32> %1086 to <2 x float>, !dbg !27
  %1088 = insertelement <2 x i32> poison, i32 %1064, i64 0, !dbg !27
  %1089 = insertelement <2 x i32> %1088, i32 %1063, i64 1, !dbg !27
  %1090 = bitcast <2 x i32> %1089 to <2 x float>, !dbg !27
  %1091 = insertelement <2 x i32> poison, i32 %1082, i64 0, !dbg !28
  %1092 = insertelement <2 x i32> %1091, i32 %1081, i64 1, !dbg !28
  %1093 = bitcast <2 x i32> %1092 to <2 x float>, !dbg !28
  %1094 = insertelement <2 x i32> poison, i32 %1084, i64 0, !dbg !28
  %1095 = insertelement <2 x i32> %1094, i32 %1083, i64 1, !dbg !28
  %1096 = bitcast <2 x i32> %1095 to <2 x float>, !dbg !28
  %1097 = fcmp olt <2 x float> %1087, %1093, !dbg !21
  %1098 = fcmp olt <2 x float> %1090, %1096, !dbg !21
  %1099 = xor <2 x i32> %1092, %1086, !dbg !24
  %1100 = xor <2 x i32> %1095, %1089, !dbg !24
  %1101 = select <2 x i1> %1097, <2 x i32> %1099, <2 x i32> zeroinitializer, !dbg !25
  %1102 = select <2 x i1> %1098, <2 x i32> %1100, <2 x i32> zeroinitializer, !dbg !25
  %1103 = xor <2 x i32> %1034, %1101, !dbg !26
  %1104 = xor <2 x i32> %1016, %1102, !dbg !26
  %1105 = extractelement <2 x i32> %1103, i64 1, !dbg !35
  %1106 = mul nuw nsw i32 %1105, %24, !dbg !29
  %1107 = extractelement <2 x i32> %1103, i64 0, !dbg !35
  %1108 = mul nuw nsw i32 %1107, %24, !dbg !29
  %1109 = extractelement <2 x i32> %1104, i64 1, !dbg !35
  %1110 = mul nuw nsw i32 %1109, %24, !dbg !29
  %1111 = extractelement <2 x i32> %1104, i64 0, !dbg !35
  %1112 = mul nuw nsw i32 %1111, %24, !dbg !29
  %1113 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1106, i32 16, i32 31), !dbg !30
  %1114 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1108, i32 16, i32 31), !dbg !30
  %1115 = insertelement <2 x i32> poison, i32 %1108, i64 0, !dbg !33
  %1116 = insertelement <2 x i32> %1115, i32 %1106, i64 1, !dbg !33
  %1117 = insertelement <2 x i32> poison, i32 %1114, i64 0, !dbg !33
  %1118 = insertelement <2 x i32> %1117, i32 %1113, i64 1, !dbg !33
  %1119 = add <2 x i32> %1116, %1118, !dbg !33
  %1120 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1110, i32 16, i32 31), !dbg !30
  %1121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1112, i32 16, i32 31), !dbg !30
  %1122 = insertelement <2 x i32> poison, i32 %1112, i64 0, !dbg !33
  %1123 = insertelement <2 x i32> %1122, i32 %1110, i64 1, !dbg !33
  %1124 = insertelement <2 x i32> poison, i32 %1121, i64 0, !dbg !33
  %1125 = insertelement <2 x i32> %1124, i32 %1120, i64 1, !dbg !33
  %1126 = add <2 x i32> %1123, %1125, !dbg !33
  %1127 = mul nuw nsw i32 %1105, %.lobit3, !dbg !35
  %1128 = mul nuw nsw i32 %1107, %.lobit3, !dbg !35
  %1129 = mul nuw nsw i32 %1109, %.lobit3, !dbg !35
  %1130 = mul nuw nsw i32 %1111, %.lobit3, !dbg !35
  %1131 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1127, i32 16, i32 31), !dbg !30
  %1132 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1128, i32 16, i32 31), !dbg !30
  %1133 = insertelement <2 x i32> poison, i32 %1128, i64 0, !dbg !33
  %1134 = insertelement <2 x i32> %1133, i32 %1127, i64 1, !dbg !33
  %1135 = insertelement <2 x i32> poison, i32 %1132, i64 0, !dbg !33
  %1136 = insertelement <2 x i32> %1135, i32 %1131, i64 1, !dbg !33
  %1137 = add <2 x i32> %1134, %1136, !dbg !33
  %1138 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1129, i32 16, i32 31), !dbg !30
  %1139 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1130, i32 16, i32 31), !dbg !30
  %1140 = insertelement <2 x i32> poison, i32 %1130, i64 0, !dbg !33
  %1141 = insertelement <2 x i32> %1140, i32 %1129, i64 1, !dbg !33
  %1142 = insertelement <2 x i32> poison, i32 %1139, i64 0, !dbg !33
  %1143 = insertelement <2 x i32> %1142, i32 %1138, i64 1, !dbg !33
  %1144 = add <2 x i32> %1141, %1143, !dbg !33
  %1145 = bitcast <2 x i32> %1119 to <2 x float>, !dbg !27
  %1146 = bitcast <2 x i32> %1126 to <2 x float>, !dbg !27
  %1147 = bitcast <2 x i32> %1137 to <2 x float>, !dbg !28
  %1148 = bitcast <2 x i32> %1144 to <2 x float>, !dbg !28
  %1149 = fcmp olt <2 x float> %1145, %1147, !dbg !21
  %1150 = fcmp olt <2 x float> %1146, %1148, !dbg !21
  %1151 = xor <2 x i32> %1119, %1137, !dbg !24
  %1152 = xor <2 x i32> %1126, %1144, !dbg !24
  %1153 = select <2 x i1> %1149, <2 x i32> %1151, <2 x i32> zeroinitializer, !dbg !25
  %1154 = select <2 x i1> %1150, <2 x i32> %1152, <2 x i32> zeroinitializer, !dbg !25
  %1155 = xor <2 x i32> %1153, %1103, !dbg !26
  %1156 = xor <2 x i32> %1154, %1104, !dbg !26
  %1157 = mul nuw nsw <2 x i32> %1155, %1028, !dbg !29
  %1158 = mul nuw nsw <2 x i32> %1156, %1028, !dbg !29
  %1159 = extractelement <2 x i32> %1157, i64 1, !dbg !30
  %1160 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1159, i32 8, i32 31), !dbg !30
  %1161 = extractelement <2 x i32> %1157, i64 0, !dbg !30
  %1162 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1161, i32 8, i32 31), !dbg !30
  %1163 = insertelement <2 x i32> poison, i32 %1162, i64 0, !dbg !33
  %1164 = insertelement <2 x i32> %1163, i32 %1160, i64 1, !dbg !33
  %1165 = add <2 x i32> %1157, %1164, !dbg !33
  %1166 = extractelement <2 x i32> %1158, i64 1, !dbg !30
  %1167 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1166, i32 8, i32 31), !dbg !30
  %1168 = extractelement <2 x i32> %1158, i64 0, !dbg !30
  %1169 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1168, i32 8, i32 31), !dbg !30
  %1170 = insertelement <2 x i32> poison, i32 %1169, i64 0, !dbg !33
  %1171 = insertelement <2 x i32> %1170, i32 %1167, i64 1, !dbg !33
  %1172 = add <2 x i32> %1158, %1171, !dbg !33
  %1173 = mul nuw nsw <2 x i32> %1155, %1030, !dbg !35
  %1174 = mul nuw nsw <2 x i32> %1156, %1030, !dbg !35
  %1175 = extractelement <2 x i32> %1173, i64 1, !dbg !30
  %1176 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1175, i32 8, i32 31), !dbg !30
  %1177 = extractelement <2 x i32> %1173, i64 0, !dbg !30
  %1178 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1177, i32 8, i32 31), !dbg !30
  %1179 = insertelement <2 x i32> poison, i32 %1178, i64 0, !dbg !33
  %1180 = insertelement <2 x i32> %1179, i32 %1176, i64 1, !dbg !33
  %1181 = add <2 x i32> %1173, %1180, !dbg !33
  %1182 = extractelement <2 x i32> %1174, i64 1, !dbg !30
  %1183 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1182, i32 8, i32 31), !dbg !30
  %1184 = extractelement <2 x i32> %1174, i64 0, !dbg !30
  %1185 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1184, i32 8, i32 31), !dbg !30
  %1186 = insertelement <2 x i32> poison, i32 %1185, i64 0, !dbg !33
  %1187 = insertelement <2 x i32> %1186, i32 %1183, i64 1, !dbg !33
  %1188 = add <2 x i32> %1187, %1174, !dbg !33
  %1189 = bitcast <2 x i32> %1165 to <2 x float>, !dbg !27
  %1190 = bitcast <2 x i32> %1172 to <2 x float>, !dbg !27
  %1191 = bitcast <2 x i32> %1181 to <2 x float>, !dbg !28
  %1192 = bitcast <2 x i32> %1188 to <2 x float>, !dbg !28
  %1193 = fcmp olt <2 x float> %1189, %1191, !dbg !21
  %1194 = fcmp olt <2 x float> %1190, %1192, !dbg !21
  %1195 = xor <2 x i32> %1165, %1181, !dbg !24
  %1196 = xor <2 x i32> %1188, %1172, !dbg !24
  %1197 = select <2 x i1> %1193, <2 x i32> %1195, <2 x i32> zeroinitializer, !dbg !25
  %1198 = select <2 x i1> %1194, <2 x i32> %1196, <2 x i32> zeroinitializer, !dbg !25
  %1199 = xor <2 x i32> %1197, %1155, !dbg !26
  %1200 = xor <2 x i32> %1198, %1156, !dbg !26
  %1201 = mul nuw nsw <2 x i32> %1200, %302, !dbg !29
  %1202 = extractelement <2 x i32> %1201, i64 1, !dbg !30
  %1203 = extractelement <2 x i32> %1201, i64 0, !dbg !30
  %1204 = mul nuw nsw <2 x i32> %1200, %320, !dbg !35
  %1205 = extractelement <2 x i32> %1204, i64 1, !dbg !30
  %1206 = extractelement <2 x i32> %1204, i64 0, !dbg !30
  %1207 = mul nuw nsw <2 x i32> %1199, %302, !dbg !29
  %1208 = extractelement <2 x i32> %1207, i64 1, !dbg !30
  %1209 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1208, i32 4, i32 31), !dbg !30
  %1210 = extractelement <2 x i32> %1207, i64 0, !dbg !30
  %1211 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1210, i32 4, i32 31), !dbg !30
  %1212 = insertelement <2 x i32> poison, i32 %1211, i64 0, !dbg !33
  %1213 = insertelement <2 x i32> %1212, i32 %1209, i64 1, !dbg !33
  %1214 = add <2 x i32> %1207, %1213, !dbg !33
  %1215 = mul nuw nsw <2 x i32> %1199, %320, !dbg !35
  %1216 = bitcast <2 x i32> %1214 to <2 x float>, !dbg !27
  %1217 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1202, i32 4, i32 31), !dbg !30
  %1218 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1203, i32 4, i32 31), !dbg !30
  %1219 = insertelement <2 x i32> poison, i32 %1218, i64 0, !dbg !33
  %1220 = insertelement <2 x i32> %1219, i32 %1217, i64 1, !dbg !33
  %1221 = add <2 x i32> %1201, %1220, !dbg !33
  %1222 = extractelement <2 x i32> %1215, i64 1, !dbg !30
  %1223 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1222, i32 4, i32 31), !dbg !30
  %1224 = extractelement <2 x i32> %1215, i64 0, !dbg !30
  %1225 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1224, i32 4, i32 31), !dbg !30
  %1226 = insertelement <2 x i32> poison, i32 %1225, i64 0, !dbg !33
  %1227 = insertelement <2 x i32> %1226, i32 %1223, i64 1, !dbg !33
  %1228 = add <2 x i32> %1227, %1215, !dbg !33
  %1229 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1205, i32 4, i32 31), !dbg !30
  %1230 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1206, i32 4, i32 31), !dbg !30
  %1231 = insertelement <2 x i32> poison, i32 %1230, i64 0, !dbg !33
  %1232 = insertelement <2 x i32> %1231, i32 %1229, i64 1, !dbg !33
  %1233 = add <2 x i32> %1232, %1204, !dbg !33
  %1234 = bitcast <2 x i32> %1221 to <2 x float>, !dbg !27
  %1235 = bitcast <2 x i32> %1228 to <2 x float>, !dbg !28
  %1236 = bitcast <2 x i32> %1233 to <2 x float>, !dbg !28
  %1237 = fcmp olt <2 x float> %1216, %1235, !dbg !21
  %1238 = fcmp olt <2 x float> %1234, %1236, !dbg !21
  %1239 = xor <2 x i32> %1228, %1214, !dbg !24
  %1240 = xor <2 x i32> %1233, %1221, !dbg !24
  %1241 = select <2 x i1> %1237, <2 x i32> %1239, <2 x i32> zeroinitializer, !dbg !25
  %1242 = select <2 x i1> %1238, <2 x i32> %1240, <2 x i32> zeroinitializer, !dbg !25
  %1243 = xor <2 x i32> %1241, %1199, !dbg !26
  %1244 = xor <2 x i32> %1242, %1200, !dbg !26
  %1245 = shufflevector <2 x i32> %1244, <2 x i32> %1243, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !29
  %1246 = insertelement <4 x i32> poison, i32 %21, i64 0, !dbg !29
  %1247 = shufflevector <4 x i32> %1246, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !29
  %1248 = mul nuw nsw <4 x i32> %1245, %1247, !dbg !29
  %1249 = extractelement <4 x i32> %1248, i64 3, !dbg !30
  %1250 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1249, i32 2, i32 31), !dbg !30
  %1251 = extractelement <4 x i32> %1248, i64 2, !dbg !30
  %1252 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1251, i32 2, i32 31), !dbg !30
  %1253 = extractelement <4 x i32> %1248, i64 1, !dbg !30
  %1254 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1253, i32 2, i32 31), !dbg !30
  %1255 = extractelement <4 x i32> %1248, i64 0, !dbg !30
  %1256 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1255, i32 2, i32 31), !dbg !30
  %1257 = insertelement <4 x i32> poison, i32 %1256, i64 0, !dbg !33
  %1258 = insertelement <4 x i32> %1257, i32 %1254, i64 1, !dbg !33
  %1259 = insertelement <4 x i32> %1258, i32 %1252, i64 2, !dbg !33
  %1260 = insertelement <4 x i32> %1259, i32 %1250, i64 3, !dbg !33
  %1261 = add <4 x i32> %1248, %1260, !dbg !33
  %1262 = insertelement <4 x i32> poison, i32 %.lobit, i64 0, !dbg !35
  %1263 = shufflevector <4 x i32> %1262, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !35
  %1264 = mul nuw nsw <4 x i32> %1245, %1263, !dbg !35
  %1265 = extractelement <4 x i32> %1264, i64 3, !dbg !30
  %1266 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1265, i32 2, i32 31), !dbg !30
  %1267 = extractelement <4 x i32> %1264, i64 2, !dbg !30
  %1268 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1267, i32 2, i32 31), !dbg !30
  %1269 = extractelement <4 x i32> %1264, i64 1, !dbg !30
  %1270 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1269, i32 2, i32 31), !dbg !30
  %1271 = extractelement <4 x i32> %1264, i64 0, !dbg !30
  %1272 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1271, i32 2, i32 31), !dbg !30
  %1273 = insertelement <4 x i32> poison, i32 %1272, i64 0, !dbg !33
  %1274 = insertelement <4 x i32> %1273, i32 %1270, i64 1, !dbg !33
  %1275 = insertelement <4 x i32> %1274, i32 %1268, i64 2, !dbg !33
  %1276 = insertelement <4 x i32> %1275, i32 %1266, i64 3, !dbg !33
  %1277 = add <4 x i32> %1276, %1264, !dbg !33
  %1278 = bitcast <4 x i32> %1261 to <4 x float>, !dbg !27
  %1279 = bitcast <4 x i32> %1277 to <4 x float>, !dbg !28
  %1280 = fcmp olt <4 x float> %1278, %1279, !dbg !21
  %1281 = xor <4 x i32> %1277, %1261, !dbg !24
  %1282 = xor <4 x i32> %1277, %1261, !dbg !24
  %1283 = xor <4 x i32> %1277, %1261, !dbg !24
  %1284 = xor <4 x i32> %1277, %1261, !dbg !24
  %1285 = shufflevector <4 x i1> %1280, <4 x i1> poison, <2 x i32> <i32 2, i32 3>, !dbg !25
  %1286 = shufflevector <4 x i32> %1282, <4 x i32> %1281, <2 x i32> <i32 2, i32 7>, !dbg !25
  %1287 = select <2 x i1> %1285, <2 x i32> %1286, <2 x i32> zeroinitializer, !dbg !25
  %1288 = shufflevector <4 x i1> %1280, <4 x i1> poison, <2 x i32> <i32 0, i32 1>, !dbg !25
  %1289 = shufflevector <4 x i32> %1284, <4 x i32> %1283, <2 x i32> <i32 0, i32 5>, !dbg !25
  %1290 = select <2 x i1> %1288, <2 x i32> %1289, <2 x i32> zeroinitializer, !dbg !25
  %1291 = xor <2 x i32> %1287, %1243, !dbg !26
  %1292 = xor <2 x i32> %1290, %1244, !dbg !26
  %1293 = mul nuw nsw <2 x i32> %1291, %82, !dbg !29
  %1294 = mul nuw nsw <2 x i32> %1292, %82, !dbg !29
  %1295 = extractelement <2 x i32> %1293, i64 1, !dbg !30
  %1296 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1295, i32 1, i32 31), !dbg !30
  %1297 = extractelement <2 x i32> %1293, i64 0, !dbg !30
  %1298 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1297, i32 1, i32 31), !dbg !30
  %1299 = insertelement <2 x i32> poison, i32 %1298, i64 0, !dbg !33
  %1300 = insertelement <2 x i32> %1299, i32 %1296, i64 1, !dbg !33
  %1301 = add <2 x i32> %1293, %1300, !dbg !33
  %1302 = extractelement <2 x i32> %1294, i64 1, !dbg !30
  %1303 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1302, i32 1, i32 31), !dbg !30
  %1304 = extractelement <2 x i32> %1294, i64 0, !dbg !30
  %1305 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1304, i32 1, i32 31), !dbg !30
  %1306 = insertelement <2 x i32> poison, i32 %1305, i64 0, !dbg !33
  %1307 = insertelement <2 x i32> %1306, i32 %1303, i64 1, !dbg !33
  %1308 = add <2 x i32> %1294, %1307, !dbg !33
  %1309 = mul nuw nsw <2 x i32> %1291, %100, !dbg !35
  %1310 = mul nuw nsw <2 x i32> %1292, %100, !dbg !35
  %1311 = extractelement <2 x i32> %1309, i64 1, !dbg !30
  %1312 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1311, i32 1, i32 31), !dbg !30
  %1313 = extractelement <2 x i32> %1309, i64 0, !dbg !30
  %1314 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1313, i32 1, i32 31), !dbg !30
  %1315 = insertelement <2 x i32> poison, i32 %1314, i64 0, !dbg !33
  %1316 = insertelement <2 x i32> %1315, i32 %1312, i64 1, !dbg !33
  %1317 = add <2 x i32> %1316, %1309, !dbg !33
  %1318 = extractelement <2 x i32> %1310, i64 1, !dbg !30
  %1319 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1318, i32 1, i32 31), !dbg !30
  %1320 = extractelement <2 x i32> %1310, i64 0, !dbg !30
  %1321 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %1320, i32 1, i32 31), !dbg !30
  %1322 = insertelement <2 x i32> poison, i32 %1321, i64 0, !dbg !33
  %1323 = insertelement <2 x i32> %1322, i32 %1319, i64 1, !dbg !33
  %1324 = add <2 x i32> %1323, %1310, !dbg !33
  %1325 = bitcast <2 x i32> %1301 to <2 x float>, !dbg !27
  %1326 = bitcast <2 x i32> %1308 to <2 x float>, !dbg !27
  %1327 = bitcast <2 x i32> %1317 to <2 x float>, !dbg !28
  %1328 = bitcast <2 x i32> %1324 to <2 x float>, !dbg !28
  %1329 = fcmp olt <2 x float> %1325, %1327, !dbg !21
  %1330 = fcmp olt <2 x float> %1326, %1328, !dbg !21
  %1331 = xor <2 x i32> %1317, %1301, !dbg !24
  %1332 = xor <2 x i32> %1324, %1308, !dbg !24
  %1333 = select <2 x i1> %1329, <2 x i32> %1331, <2 x i32> zeroinitializer, !dbg !25
  %1334 = select <2 x i1> %1330, <2 x i32> %1332, <2 x i32> zeroinitializer, !dbg !25
  %1335 = xor <2 x i32> %1333, %1291, !dbg !26
  %1336 = xor <2 x i32> %1334, %1292, !dbg !26
  %1337 = bitcast <2 x i32> %1335 to <2 x float>, !dbg !27
  %1338 = bitcast <2 x i32> %1336 to <2 x float>, !dbg !28
  %1339 = fcmp olt <2 x float> %1337, %1338, !dbg !21
  %1340 = xor <2 x i32> %1335, %1336, !dbg !24
  %1341 = select <2 x i1> %1339, <2 x i32> %1340, <2 x i32> zeroinitializer, !dbg !25
  %1342 = xor <2 x i32> %1341, %1335, !dbg !26
  %1343 = xor <2 x i32> %1341, %1336, !dbg !26
  %1344 = extractelement <2 x i32> %1342, i64 1, !dbg !27
  %1345 = bitcast i32 %1344 to float, !dbg !27
  %1346 = extractelement <2 x i32> %1343, i64 1, !dbg !27
  %1347 = bitcast i32 %1346 to float, !dbg !27
  %1348 = extractelement <2 x i32> %1342, i64 0, !dbg !28
  %1349 = bitcast i32 %1348 to float, !dbg !28
  %1350 = extractelement <2 x i32> %1343, i64 0, !dbg !28
  %1351 = bitcast i32 %1350 to float, !dbg !28
  %1352 = fcmp olt float %1345, %1349, !dbg !21
  %1353 = fcmp olt float %1347, %1351, !dbg !21
  %1354 = xor i32 %1348, %1344, !dbg !24
  %1355 = xor i32 %1350, %1346, !dbg !24
  %1356 = select i1 %1352, i32 %1354, i32 0, !dbg !25
  %1357 = select i1 %1353, i32 %1355, i32 0, !dbg !25
  %1358 = xor i32 %1356, %1344, !dbg !26
  %1359 = xor i32 %1356, %1348, !dbg !26
  %1360 = xor i32 %1357, %1346, !dbg !26
  %1361 = xor i32 %1357, %1350, !dbg !26
  %1362 = getelementptr float, ptr addrspace(1) %1, i64 %9, !dbg !36
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1358, i32 %1359, i32 %1360, i32 %1361, ptr addrspace(1) %1362, i1 true) #4, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czmxe4pwy2v4qecsr3sizppkxtkpdmrtt54rvjcwha5pbqhx3myk.py", directory: "inductor_cache/zm")
!4 = !{ptr @triton_per_fused_sort_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_sort_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_sort_0", linkageName: "triton_per_fused_sort_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 575, column: 44, scope: !14, inlinedAt: !17)
!14 = distinct !DILexicalBlockFile(scope: !16, file: !15, discriminator: 0)
!15 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!16 = distinct !DILexicalBlockFile(scope: !7, file: !15, discriminator: 0)
!17 = !DILocation(line: 37, column: 67, scope: !7)
!18 = !DILocation(line: 505, column: 21, scope: !19, inlinedAt: !17)
!19 = distinct !DILexicalBlockFile(scope: !14, file: !15, discriminator: 0)
!20 = !DILocation(line: 32, column: 23, scope: !7)
!21 = !DILocation(line: 536, column: 22, scope: !19, inlinedAt: !17)
!22 = !DILocation(line: 547, column: 28, scope: !19, inlinedAt: !17)
!23 = !DILocation(line: 502, column: 14, scope: !19, inlinedAt: !17)
!24 = !DILocation(line: 548, column: 38, scope: !19, inlinedAt: !17)
!25 = !DILocation(line: 548, column: 46, scope: !19, inlinedAt: !17)
!26 = !DILocation(line: 548, column: 15, scope: !19, inlinedAt: !17)
!27 = !DILocation(line: 510, column: 20, scope: !19, inlinedAt: !17)
!28 = !DILocation(line: 511, column: 22, scope: !19, inlinedAt: !17)
!29 = !DILocation(line: 506, column: 40, scope: !19, inlinedAt: !17)
!30 = !DILocation(line: 267, column: 36, scope: !31, inlinedAt: !17)
!31 = distinct !DILexicalBlockFile(scope: !19, file: !32, discriminator: 0)
!32 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!33 = !DILocation(line: 256, column: 15, scope: !34, inlinedAt: !17)
!34 = distinct !DILexicalBlockFile(scope: !31, file: !32, discriminator: 0)
!35 = !DILocation(line: 507, column: 41, scope: !19, inlinedAt: !17)
!36 = !DILocation(line: 38, column: 25, scope: !7)
!37 = !DILocation(line: 38, column: 63, scope: !7)
!38 = !DILocation(line: 38, column: 4, scope: !7)
