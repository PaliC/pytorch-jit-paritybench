; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_clamp_div_mean_mul_round_sub_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 2, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 28, !dbg !12
  %8 = and i32 %6, 3, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 4, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %10) #1, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !18
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = bitcast i32 %18 to float, !dbg !19
  %20 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !21
  %22 = bitcast i32 %21 to float, !dbg !21
  %23 = getelementptr i8, ptr addrspace(1) %0, i64 12, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = fcmp ogt float %16, %19, !dbg !24
  %27 = fcmp uno float %16, 0.000000e+00, !dbg !28
  %28 = or i1 %27, %26, !dbg !29
  %29 = select i1 %28, float %16, float %19, !dbg !30
  %30 = fcmp ogt float %29, %22, !dbg !31
  %31 = fcmp uno float %29, 0.000000e+00, !dbg !33
  %32 = or i1 %30, %31, !dbg !34
  %33 = select i1 %32, float %29, float %22, !dbg !35
  %34 = fcmp ogt float %33, %25, !dbg !36
  %35 = fcmp uno float %33, 0.000000e+00, !dbg !38
  %36 = or i1 %34, %35, !dbg !39
  %37 = select i1 %36, float %33, float %25, !dbg !40
  %38 = fcmp olt float %16, %19, !dbg !41
  %39 = or i1 %27, %38, !dbg !43
  %40 = select i1 %39, float %16, float %19, !dbg !44
  %41 = fcmp olt float %40, %22, !dbg !45
  %42 = fcmp uno float %40, 0.000000e+00, !dbg !47
  %43 = or i1 %41, %42, !dbg !48
  %44 = select i1 %43, float %40, float %22, !dbg !49
  %45 = fcmp olt float %44, %25, !dbg !50
  %46 = fcmp uno float %44, 0.000000e+00, !dbg !52
  %47 = or i1 %45, %46, !dbg !53
  %48 = select i1 %47, float %44, float %25, !dbg !54
  %49 = fsub float %37, %48, !dbg !55
  %50 = fmul float %49, 0x3EF0001000000000, !dbg !56
  %51 = fmul float %50, 0.000000e+00, !dbg !57
  %52 = fsub float %51, %48, !dbg !58
  %53 = fadd float %52, %14, !dbg !59
  %54 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %53, float %50) #1, !dbg !60
  %.inv = fcmp ole float %54, 0.000000e+00, !dbg !61
  %55 = select i1 %.inv, float 0.000000e+00, float %54, !dbg !61
  %56 = fcmp olt float %55, 6.553500e+04, !dbg !63
  %57 = fcmp uno float %55, 0.000000e+00, !dbg !65
  %58 = or i1 %56, %57, !dbg !66
  %59 = select i1 %58, float %55, float 6.553500e+04, !dbg !67
  %60 = tail call float @llvm.nvvm.round.f(float %59) #1, !dbg !68
  %61 = fmul float %60, %50, !dbg !69
  %62 = fsub float %48, %51, !dbg !70
  %63 = fadd float %61, %62, !dbg !71
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !72
  %65 = icmp eq i32 %7, 0, !dbg !73
  %66 = bitcast float %63 to i32, !dbg !73
  %67 = and i1 %65, %10, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %64, i1 %67) #1, !dbg !73
  ret void, !dbg !74
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c63sc4w2gtlxttwtqlw6vqvwr3mzftjr6holjpczhnmbquiumriq.py", directory: "inductor_cache/63")
!4 = !{ptr @triton_poi_fused_add_clamp_div_mean_mul_round_sub_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_clamp_div_mean_mul_round_sub_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_clamp_div_mean_mul_round_sub_2", linkageName: "triton_poi_fused_add_clamp_div_mean_mul_round_sub_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 30, column: 30, scope: !7)
!21 = !DILocation(line: 30, column: 19, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 19, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 34, column: 40, scope: !7)
!28 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !27)
!30 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !27)
!31 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !32)
!32 = !DILocation(line: 35, column: 40, scope: !7)
!33 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !32)
!34 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !32)
!35 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !32)
!36 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !37)
!37 = !DILocation(line: 36, column: 41, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !37)
!41 = !DILocation(line: 110, column: 15, scope: !25, inlinedAt: !42)
!42 = !DILocation(line: 39, column: 41, scope: !7)
!43 = !DILocation(line: 112, column: 16, scope: !25, inlinedAt: !42)
!44 = !DILocation(line: 113, column: 29, scope: !25, inlinedAt: !42)
!45 = !DILocation(line: 110, column: 15, scope: !25, inlinedAt: !46)
!46 = !DILocation(line: 40, column: 42, scope: !7)
!47 = !DILocation(line: 112, column: 21, scope: !25, inlinedAt: !46)
!48 = !DILocation(line: 112, column: 16, scope: !25, inlinedAt: !46)
!49 = !DILocation(line: 113, column: 29, scope: !25, inlinedAt: !46)
!50 = !DILocation(line: 110, column: 15, scope: !25, inlinedAt: !51)
!51 = !DILocation(line: 41, column: 42, scope: !7)
!52 = !DILocation(line: 112, column: 21, scope: !25, inlinedAt: !51)
!53 = !DILocation(line: 112, column: 16, scope: !25, inlinedAt: !51)
!54 = !DILocation(line: 113, column: 29, scope: !25, inlinedAt: !51)
!55 = !DILocation(line: 43, column: 20, scope: !7)
!56 = !DILocation(line: 45, column: 20, scope: !7)
!57 = !DILocation(line: 47, column: 20, scope: !7)
!58 = !DILocation(line: 48, column: 20, scope: !7)
!59 = !DILocation(line: 49, column: 19, scope: !7)
!60 = !DILocation(line: 50, column: 20, scope: !7)
!61 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !62)
!62 = !DILocation(line: 51, column: 42, scope: !7)
!63 = !DILocation(line: 110, column: 15, scope: !25, inlinedAt: !64)
!64 = !DILocation(line: 53, column: 42, scope: !7)
!65 = !DILocation(line: 112, column: 21, scope: !25, inlinedAt: !64)
!66 = !DILocation(line: 112, column: 16, scope: !25, inlinedAt: !64)
!67 = !DILocation(line: 113, column: 29, scope: !25, inlinedAt: !64)
!68 = !DILocation(line: 54, column: 32, scope: !7)
!69 = !DILocation(line: 55, column: 20, scope: !7)
!70 = !DILocation(line: 56, column: 20, scope: !7)
!71 = !DILocation(line: 57, column: 20, scope: !7)
!72 = !DILocation(line: 58, column: 25, scope: !7)
!73 = !DILocation(line: 58, column: 37, scope: !7)
!74 = !DILocation(line: 58, column: 4, scope: !7)
