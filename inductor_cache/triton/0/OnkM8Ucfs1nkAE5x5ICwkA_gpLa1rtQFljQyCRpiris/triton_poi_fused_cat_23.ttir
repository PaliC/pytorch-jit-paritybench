#loc = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_23(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-256> : tensor<512xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<512xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<512xi64> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<512xi32> loc(#loc1)
    %cst_4 = arith.constant dense<100352> : tensor<512xi32> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<512xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_3 : tensor<512xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_3 : tensor<512xi32> loc(#loc8)
    %8 = arith.extsi %6 : tensor<512xi32> to tensor<512xi64> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_2 : tensor<512xi64> loc(#loc9)
    %10 = arith.muli %7, %cst_1 : tensor<512xi32> loc(#loc10)
    %11 = arith.addi %10, %6 : tensor<512xi32> loc(#loc11)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %11 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc12)
    %14 = arith.andi %9, %5 : tensor<512xi1> loc(#loc13)
    %15 = tt.load %13, %14, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %6 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc15)
    %18 = tt.load %17, %14, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc16)
    %19 = arith.addf %15, %18 : tensor<512xf32> loc(#loc17)
    %20 = arith.cmpf ogt, %cst_0, %19 : tensor<512xf32> loc(#loc37)
    %21 = arith.select %20, %cst_0, %19 : tensor<512xi1>, tensor<512xf32> loc(#loc38)
    %22 = arith.cmpi sge, %8, %cst_2 : tensor<512xi64> loc(#loc21)
    %23 = arith.addi %6, %cst : tensor<512xi32> loc(#loc22)
    %24 = arith.addi %10, %23 : tensor<512xi32> loc(#loc23)
    %25 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc24)
    %26 = tt.addptr %25, %24 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc24)
    %27 = arith.andi %22, %5 : tensor<512xi1> loc(#loc25)
    %28 = tt.load %26, %27, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc26)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc27)
    %30 = tt.addptr %29, %23 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc27)
    %31 = tt.load %30, %27, %cst_0 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>> loc(#loc28)
    %32 = arith.addf %28, %31 : tensor<512xf32> loc(#loc29)
    %33 = arith.cmpf ogt, %cst_0, %32 : tensor<512xf32> loc(#loc39)
    %34 = arith.select %33, %cst_0, %32 : tensor<512xi1>, tensor<512xf32> loc(#loc40)
    %35 = arith.select %22, %34, %cst_0 : tensor<512xi1>, tensor<512xf32> loc(#loc31)
    %36 = arith.select %9, %21, %35 : tensor<512xi1>, tensor<512xf32> loc(#loc41)
    %37 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc34)
    %38 = tt.addptr %37, %4 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc34)
    tt.store %38, %36, %5 : tensor<512x!tt.ptr<f32>> loc(#loc35)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":21:28)
#loc3 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":21:33)
#loc4 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":22:36)
#loc5 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":22:23)
#loc6 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":23:21)
#loc7 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":24:19)
#loc8 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":25:19)
#loc9 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":31:18)
#loc10 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":32:34)
#loc11 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":32:40)
#loc12 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":32:30)
#loc13 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":32:53)
#loc14 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":32:46)
#loc15 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":33:30)
#loc16 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":33:35)
#loc17 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":34:18)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc19 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":36:40)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc21 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":39:20)
#loc22 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":42:50)
#loc23 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":42:41)
#loc24 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":42:31)
#loc25 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":42:64)
#loc26 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":42:56)
#loc27 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":43:31)
#loc28 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":43:45)
#loc29 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":44:20)
#loc30 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":46:42)
#loc31 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":48:35)
#loc32 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":49:34)
#loc33 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":38:33)
#loc34 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":50:25)
#loc35 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":50:37)
#loc36 = loc("inductor_cache/wr/cwroh2nl2w5f4vttyt53bsqlr67mxhlwci55r5aaag67zmvwa4wb.py":50:4)
#loc37 = loc(callsite(#loc18 at #loc19))
#loc38 = loc(callsite(#loc20 at #loc19))
#loc39 = loc(callsite(#loc18 at #loc30))
#loc40 = loc(callsite(#loc20 at #loc30))
#loc41 = loc(fused[#loc32, #loc33])
