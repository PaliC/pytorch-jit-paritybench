//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_pow_sub_28 // -- Begin function triton_red_fused_mean_pow_sub_28
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_pow_sub_28
.visible .entry triton_red_fused_mean_pow_sub_28(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_pow_sub_28_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_pow_sub_28_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_pow_sub_28_param_2,
	.param .u32 triton_red_fused_mean_pow_sub_28_param_3,
	.param .u32 triton_red_fused_mean_pow_sub_28_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<103>;
	.reg .b32 	%r<219>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_mean_pow_sub_28_param_2];
	ld.param.u64 	%rd3, [triton_red_fused_mean_pow_sub_28_param_0];
	ld.param.u64 	%rd6, [triton_red_fused_mean_pow_sub_28_param_1];
$L__tmp0:
	.loc	1 22 28                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:22:33
	shl.b32 	%r1, %r10, 6;
	.loc	1 23 44                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r15, %r2, 2;
	and.b32  	%r3, %r15, 60;
	.loc	1 23 23                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:23:23
	or.b32  	%r16, %r1, %r3;
	.loc	1 24 21                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:24:21
	setp.gt.s32 	%p2, %r16, 191;
	setp.lt.s32 	%p1, %r16, 192;
	.loc	1 27 19                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:27:19
	bfe.s32 	%r17, %r10, 25, 1;
	shr.u32 	%r18, %r17, 28;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r4, %r19, 4;
	.loc	1 26 19                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:26:19
	and.b32  	%r20, %r19, -16;
	sub.s32 	%r21, %r16, %r20;
	.loc	1 28 19                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:28:19
	mul.hi.s32 	%r22, %r16, 715827883;
	shr.u32 	%r23, %r22, 31;
	shr.u32 	%r24, %r22, 3;
	add.s32 	%r25, %r24, %r23;
	.loc	1 29 38                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:29:38
	shl.b32 	%r26, %r25, 4;
	.loc	1 29 35                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:29:35
	add.s32 	%r27, %r26, %r21;
	.loc	1 29 30                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:29:30
	mul.wide.s32 	%rd7, %r27, 4;
	add.s64 	%rd5, %rd6, %rd7;
	.loc	1 29 43                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:29:43
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd5 + 0 ];
	// end inline asm
	and.b32  	%r5, %r2, 112;
	mov.pred 	%p83, -1;
	@%p2 bra 	$L__BB0_3;
// %bb.1:                               // %.split.us.preheader
	.loc	1 0 0                           // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:0:0
	mov.b32 	%f4, %r14;
	mov.b32 	%f3, %r13;
	mov.b32 	%f2, %r12;
	mov.b32 	%f1, %r11;
	.loc	1 32 36                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:32:36
	mad.lo.s32 	%r158, %r4, 2032, %r1;
	add.s32 	%r159, %r158, %r5;
	add.s32 	%r218, %r159, %r3;
	mov.f32 	%f55, 0f00000000;
	mov.u64 	%rd30, -8;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_2:                              // %.split.us
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	mul.wide.s32 	%rd27, %r218, 4;
	add.s64 	%rd26, %rd3, %rd27;
	mov.b32 	%r164, 0;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	mov.u32 %r162, 0x0;
	mov.u32 %r163, 0x0;
	@%p83 ld.global.L1::evict_first.v4.b32 { %r160, %r161, %r162, %r163 }, [ %rd26 + 0 ];
	@!%p83 mov.u32 %r160, %r164;
	@!%p83 mov.u32 %r161, %r164;
	@!%p83 mov.u32 %r162, %r164;
	@!%p83 mov.u32 %r163, %r164;
	// end inline asm
	mov.b32 	%f25, %r163;
	mov.b32 	%f26, %r162;
	mov.b32 	%f27, %r161;
	mov.b32 	%f28, %r160;
	.loc	1 37 22                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:37:22
	sub.f32 	%f29, %f28, %f1;
	sub.f32 	%f30, %f27, %f2;
	sub.f32 	%f31, %f26, %f3;
	sub.f32 	%f32, %f25, %f4;
	.loc	1 40 23                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:40:23
	fma.rn.f32 	%f58, %f32, %f32, %f58;
	fma.rn.f32 	%f57, %f31, %f31, %f57;
	fma.rn.f32 	%f56, %f30, %f30, %f56;
	fma.rn.f32 	%f55, %f29, %f29, %f55;
	.loc	1 32 36                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:32:36
	add.s64 	%rd30, %rd30, 8;
	add.s32 	%r218, %r218, 128;
	setp.lt.u64 	%p88, %rd30, 120;
	@%p88 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_4;
$L__BB0_3:                              // %.split
	.loc	1 0 36                          // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:0:36
	shl.b32 	%r28, %r4, 11;
	add.s32 	%r29, %r21, %r5;
	add.s32 	%r6, %r29, %r28;
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	mul.wide.s32 	%rd24, %r6, 4;
	add.s64 	%rd8, %rd3, %rd24;
	mov.b32 	%r34, 0;
	mov.pred 	%p3, 0;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd8 + 0 ];
	@!%p3 mov.u32 %r30, %r34;
	@!%p3 mov.u32 %r31, %r34;
	@!%p3 mov.u32 %r32, %r34;
	@!%p3 mov.u32 %r33, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd9, %rd8, 512;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r38, %r39, %r40, %r41 }, [ %rd9 + 0 ];
	@!%p3 mov.u32 %r38, %r34;
	@!%p3 mov.u32 %r39, %r34;
	@!%p3 mov.u32 %r40, %r34;
	@!%p3 mov.u32 %r41, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd10, %rd8, 1024;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r46, %r47, %r48, %r49 }, [ %rd10 + 0 ];
	@!%p3 mov.u32 %r46, %r34;
	@!%p3 mov.u32 %r47, %r34;
	@!%p3 mov.u32 %r48, %r34;
	@!%p3 mov.u32 %r49, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd11, %rd8, 1536;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd11 + 0 ];
	@!%p3 mov.u32 %r54, %r34;
	@!%p3 mov.u32 %r55, %r34;
	@!%p3 mov.u32 %r56, %r34;
	@!%p3 mov.u32 %r57, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd12, %rd8, 2048;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r62, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r62, %r63, %r64, %r65 }, [ %rd12 + 0 ];
	@!%p3 mov.u32 %r62, %r34;
	@!%p3 mov.u32 %r63, %r34;
	@!%p3 mov.u32 %r64, %r34;
	@!%p3 mov.u32 %r65, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd13, %rd8, 2560;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r70, 0x0;
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r73, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r70, %r71, %r72, %r73 }, [ %rd13 + 0 ];
	@!%p3 mov.u32 %r70, %r34;
	@!%p3 mov.u32 %r71, %r34;
	@!%p3 mov.u32 %r72, %r34;
	@!%p3 mov.u32 %r73, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd14, %rd8, 3072;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r81, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r78, %r79, %r80, %r81 }, [ %rd14 + 0 ];
	@!%p3 mov.u32 %r78, %r34;
	@!%p3 mov.u32 %r79, %r34;
	@!%p3 mov.u32 %r80, %r34;
	@!%p3 mov.u32 %r81, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd15, %rd8, 3584;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r86, 0x0;
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	mov.u32 %r89, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r86, %r87, %r88, %r89 }, [ %rd15 + 0 ];
	@!%p3 mov.u32 %r86, %r34;
	@!%p3 mov.u32 %r87, %r34;
	@!%p3 mov.u32 %r88, %r34;
	@!%p3 mov.u32 %r89, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd16, %rd8, 4096;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r94, 0x0;
	mov.u32 %r95, 0x0;
	mov.u32 %r96, 0x0;
	mov.u32 %r97, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r94, %r95, %r96, %r97 }, [ %rd16 + 0 ];
	@!%p3 mov.u32 %r94, %r34;
	@!%p3 mov.u32 %r95, %r34;
	@!%p3 mov.u32 %r96, %r34;
	@!%p3 mov.u32 %r97, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd17, %rd8, 4608;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r102, %r103, %r104, %r105 }, [ %rd17 + 0 ];
	@!%p3 mov.u32 %r102, %r34;
	@!%p3 mov.u32 %r103, %r34;
	@!%p3 mov.u32 %r104, %r34;
	@!%p3 mov.u32 %r105, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd18, %rd8, 5120;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	mov.u32 %r112, 0x0;
	mov.u32 %r113, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r110, %r111, %r112, %r113 }, [ %rd18 + 0 ];
	@!%p3 mov.u32 %r110, %r34;
	@!%p3 mov.u32 %r111, %r34;
	@!%p3 mov.u32 %r112, %r34;
	@!%p3 mov.u32 %r113, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd19, %rd8, 5632;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r118, 0x0;
	mov.u32 %r119, 0x0;
	mov.u32 %r120, 0x0;
	mov.u32 %r121, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r118, %r119, %r120, %r121 }, [ %rd19 + 0 ];
	@!%p3 mov.u32 %r118, %r34;
	@!%p3 mov.u32 %r119, %r34;
	@!%p3 mov.u32 %r120, %r34;
	@!%p3 mov.u32 %r121, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd20, %rd8, 6144;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r126, %r127, %r128, %r129 }, [ %rd20 + 0 ];
	@!%p3 mov.u32 %r126, %r34;
	@!%p3 mov.u32 %r127, %r34;
	@!%p3 mov.u32 %r128, %r34;
	@!%p3 mov.u32 %r129, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd21, %rd8, 6656;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r134, 0x0;
	mov.u32 %r135, 0x0;
	mov.u32 %r136, 0x0;
	mov.u32 %r137, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r134, %r135, %r136, %r137 }, [ %rd21 + 0 ];
	@!%p3 mov.u32 %r134, %r34;
	@!%p3 mov.u32 %r135, %r34;
	@!%p3 mov.u32 %r136, %r34;
	@!%p3 mov.u32 %r137, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd22, %rd8, 7168;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r142, 0x0;
	mov.u32 %r143, 0x0;
	mov.u32 %r144, 0x0;
	mov.u32 %r145, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r142, %r143, %r144, %r145 }, [ %rd22 + 0 ];
	@!%p3 mov.u32 %r142, %r34;
	@!%p3 mov.u32 %r143, %r34;
	@!%p3 mov.u32 %r144, %r34;
	@!%p3 mov.u32 %r145, %r34;
	// end inline asm
	.loc	1 36 34                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:34
	add.s64 	%rd23, %rd8, 7680;
	.loc	1 36 57                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:36:57
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	@%p3 ld.global.L1::evict_first.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd23 + 0 ];
	@!%p3 mov.u32 %r150, %r34;
	@!%p3 mov.u32 %r151, %r34;
	@!%p3 mov.u32 %r152, %r34;
	@!%p3 mov.u32 %r153, %r34;
	// end inline asm
	mov.f32 	%f55, 0f00000000;
	mov.f32 	%f56, %f55;
	mov.f32 	%f57, %f55;
	mov.f32 	%f58, %f55;
$L__BB0_4:                              // %.split2.us
	.loc	1 23 44                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:23:44
	and.b32  	%r190, %r2, 63;
	.loc	1 23 23                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:23:23
	or.b32  	%r191, %r1, %r190;
	.loc	1 24 21                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:24:21
	setp.lt.s32 	%p99, %r191, 192;
	.loc	1 23 44                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:23:44
	and.b32  	%r192, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r193, %f55;
	shfl.sync.bfly.b32	%r194, %r193, 16, 31, -1;
	mov.b32 	%f33, %r194;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f55, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r195, %f56;
	shfl.sync.bfly.b32	%r196, %r195, 16, 31, -1;
	mov.b32 	%f35, %r196;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f56, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r197, %f57;
	shfl.sync.bfly.b32	%r198, %r197, 16, 31, -1;
	mov.b32 	%f37, %r198;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f57, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r199, %f58;
	shfl.sync.bfly.b32	%r200, %r199, 16, 31, -1;
	mov.b32 	%f39, %r200;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f58, %f39;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p89, %r192, 0;
	shr.u32 	%r201, %r2, 3;
	and.b32  	%r202, %r201, 12;
	shl.b32 	%r203, %r3, 4;
	or.b32  	%r204, %r203, %r202;
	mov.u32 	%r205, global_smem;
	add.s32 	%r168, %r205, %r204;
	mov.b32 	%r169, %f34;
	// begin inline asm
	@%p89 st.shared.b32 [ %r168 + 0 ], %r169;
	// end inline asm
	add.s32 	%r170, %r168, 16;
	mov.b32 	%r171, %f36;
	// begin inline asm
	@%p89 st.shared.b32 [ %r170 + 0 ], %r171;
	// end inline asm
	add.s32 	%r172, %r168, 32;
	mov.b32 	%r173, %f38;
	// begin inline asm
	@%p89 st.shared.b32 [ %r172 + 0 ], %r173;
	// end inline asm
	add.s32 	%r174, %r168, 48;
	mov.b32 	%r175, %f40;
	// begin inline asm
	@%p89 st.shared.b32 [ %r174 + 0 ], %r175;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p93, %r2, 256;
	add.s32 	%r177, %r205, %r15;
	// begin inline asm
	@%p93 ld.shared.b32 %r176, [ %r177 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r176;
	shfl.sync.bfly.b32	%r207, %r176, 2, 31, -1;
	mov.b32 	%f42, %r207;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r208, %f43;
	shfl.sync.bfly.b32	%r209, %r208, 1, 31, -1;
	mov.b32 	%f44, %r209;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r210, %r2, 3;
	setp.eq.s32 	%p100, %r210, 0;
	and.pred  	%p94, %p93, %p100;
	mov.b32 	%r179, %f45;
	// begin inline asm
	@%p94 st.shared.b32 [ %r177 + 0 ], %r179;
	// end inline asm
	add.s32 	%r181, %r177, 512;
	// begin inline asm
	@%p93 ld.shared.b32 %r180, [ %r181 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r180;
	shfl.sync.bfly.b32	%r211, %r180, 2, 31, -1;
	mov.b32 	%f47, %r211;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r212, %f48;
	shfl.sync.bfly.b32	%r213, %r212, 1, 31, -1;
	mov.b32 	%f49, %r213;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r183, %f50;
	// begin inline asm
	@%p94 st.shared.b32 [ %r181 + 0 ], %r183;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r214, %r205, %r203;
	ld.shared.u32 	%r185, [%r214];
	ld.shared.u32 	%r186, [%r214+16];
	ld.shared.u32 	%r187, [%r214+32];
	ld.shared.u32 	%r188, [%r214+48];
$L__tmp2:
	.loc	1 42 28                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:42:28
	bar.sync 	0;
	mad.lo.s32 	%r184, %r3, -12, %r214;
	// begin inline asm
	@%p83 st.shared.v4.b32 [ %r184 + 0 ], { %r185, %r186, %r187, %r188 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r215, %r190, 2;
	add.s32 	%r216, %r205, %r215;
	ld.shared.u32 	%r189, [%r216];
	.loc	1 43 25                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:43:25
	mul.wide.s32 	%rd29, %r191, 4;
	add.s64 	%rd28, %rd4, %rd29;
	.loc	1 43 36                         // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:43:36
	and.b32  	%r217, %r2, 64;
	setp.eq.s32 	%p101, %r217, 0;
	and.pred  	%p98, %p101, %p99;
	// begin inline asm
	@%p98 st.global.b32 [ %rd28 + 0 ], { %r189 };
	// end inline asm
	.loc	1 43 4                          // caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ay/caycyvlhf37nq5z2f4r4lg5vgtbbzfadyjpq7lftnkx6bmbhvdhj.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 177                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 121
.b8 99
.b8 121
.b8 118
.b8 108
.b8 104
.b8 102
.b8 51
.b8 55
.b8 110
.b8 113
.b8 53
.b8 122
.b8 50
.b8 102
.b8 52
.b8 114
.b8 52
.b8 108
.b8 103
.b8 53
.b8 118
.b8 103
.b8 116
.b8 98
.b8 98
.b8 122
.b8 102
.b8 97
.b8 100
.b8 121
.b8 106
.b8 112
.b8 113
.b8 55
.b8 108
.b8 102
.b8 116
.b8 110
.b8 107
.b8 120
.b8 54
.b8 98
.b8 109
.b8 98
.b8 104
.b8 118
.b8 100
.b8 104
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x23 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
