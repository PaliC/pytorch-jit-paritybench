//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_convolution_native_group_norm_31 // -- Begin function triton_red_fused__unsafe_index_convolution_native_group_norm_31
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_convolution_native_group_norm_31
.visible .entry triton_red_fused__unsafe_index_convolution_native_group_norm_31(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_6,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_7,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b32 	%r<100>;
	.reg .f32 	%f<52>;
	.reg .b64 	%rd<85>;
	.loc	1 19 0                          // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd12, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_6];
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_5];
	ld.param.u64 	%rd10, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_4];
	ld.param.u64 	%rd9, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_1];
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_0];
$L__tmp0:
	.loc	1 22 28                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:22:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:22:33
	shl.b32 	%r17, %r9, 6;
	ld.param.u64 	%rd23, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_2];
	.loc	1 23 44                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd24, [triton_red_fused__unsafe_index_convolution_native_group_norm_31_param_3];
	and.b32  	%r2, %r1, 3;
	and.b32  	%r3, %r1, 63;
	bfe.u32 	%r18, %r1, 2, 6;
	.loc	1 23 23                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:23:23
	or.b32  	%r4, %r17, %r3;
	or.b32  	%r5, %r17, %r18;
	.loc	1 24 21                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:24:21
	setp.lt.s32 	%p7, %r4, 256;
	setp.lt.s32 	%p12, %r5, 256;
	.loc	1 27 19                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:27:19
	bfe.s32 	%r19, %r9, 25, 1;
	shr.u32 	%r20, %r19, 26;
	add.s32 	%r21, %r4, %r20;
	and.b32  	%r22, %r21, 2147483584;
	sub.s32 	%r23, %r4, %r22;
	.loc	1 42 42                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:42:42
	shl.b32 	%r24, %r23, 1;
	.loc	1 53 76                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:76
	shl.b32 	%r25, %r4, 10;
	.loc	1 53 71                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:71
	cvt.s64.s32 	%rd1, %r25;
	.loc	1 62 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:62:39
	shl.b32 	%r26, %r5, 13;
	bfe.u32 	%r6, %r1, 6, 2;
	or.b32  	%r27, %r26, %r2;
	shl.b32 	%r28, %r1, 2;
	and.b32  	%r29, %r28, 252;
	or.b32  	%r30, %r29, %r6;
	and.b32  	%r31, %r1, 255;
	mov.u32 	%r32, global_smem;
	add.s32 	%r33, %r32, %r29;
	shl.b32 	%r34, %r30, 2;
	add.s32 	%r49, %r33, %r34;
	and.b32  	%r35, %r1, 252;
	add.s32 	%r36, %r32, %r35;
	shl.b32 	%r37, %r31, 2;
	add.s32 	%r8, %r36, %r37;
	mov.pred 	%p26, -1;
	.loc	1 39 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:39:39
	// begin inline asm
	mov.u64 %rd13, 0x0;
	@%p26 ld.global.L1::evict_last.b64 { %rd13 }, [ %rd14 + 0 ];
	@!%p26 mov.u64 %rd13, 0x0;
	// end inline asm
	.loc	1 40 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:40:39
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p26 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd14 + 0 ];
	@!%p26 mov.u64 %rd15, 0x0;
	// end inline asm
	.loc	1 41 34                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:41:34
	mul.wide.u32 	%rd25, %r6, 8;
	add.s64 	%rd18, %rd14, %rd25;
	.loc	1 41 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:41:39
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p26 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd18 + 0 ];
	@!%p26 mov.u64 %rd17, 0x0;
	// end inline asm
	.loc	1 42 35                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:42:35
	mul.wide.s32 	%rd26, %r24, 4;
	add.s64 	%rd19, %rd23, %rd26;
	mov.b32 	%r11, 0;
	.loc	1 42 47                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:42:47
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r10 }, [ %rd19 + 0 ];
	@!%p7 mov.u32 %r10, %r11;
	// end inline asm
	.loc	1 46 36                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:46:36
	shr.u64 	%rd27, %rd13, 60;
	and.b64  	%rd28, %rd27, 8;
	add.s64 	%rd29, %rd28, %rd13;
	.loc	1 49 36                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:49:36
	shr.u64 	%rd30, %rd15, 60;
	and.b64  	%rd31, %rd30, 8;
	add.s64 	%rd32, %rd31, %rd15;
	.loc	1 53 35                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:35
	shl.b64 	%rd33, %rd17, 2;
	add.s64 	%rd34, %rd9, %rd33;
	shr.u64 	%rd35, %rd17, 58;
	and.b64  	%rd36, %rd35, 32;
	add.s64 	%rd37, %rd34, %rd36;
	shl.b64 	%rd38, %rd32, 5;
	add.s64 	%rd39, %rd37, %rd38;
	shl.b64 	%rd40, %rd29, 8;
	add.s64 	%rd41, %rd39, %rd40;
	mul.wide.s32 	%rd42, %r25, 4;
	add.s64 	%rd20, %rd41, %rd42;
	.loc	1 53 81                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:81
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r12 }, [ %rd20 + 0 ];
	@!%p7 mov.u32 %r12, %r11;
	// end inline asm
	.loc	1 42 47                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:42:47
	mov.b32 	%f10, %r10;
	.loc	1 53 81                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:81
	mov.b32 	%f11, %r12;
	.loc	1 54 24                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:54:24
	add.f32 	%f12, %f10, %f11;
	.loc	1 62 29                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:62:29
	mul.wide.s32 	%rd43, %r27, 4;
	add.s64 	%rd21, %rd24, %rd43;
	.loc	1 62 51                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:62:51
	bar.sync 	0;
	mov.b32 	%r15, %f12;
	// begin inline asm
	@%p26 st.shared.b32 [ %r49 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r16, [%r8];
	// begin inline asm
	@%p12 st.global.b32 [ %rd21 + 0 ], { %r16 };
	// end inline asm
	.loc	1 61 66                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:61:66
	selp.f32 	%f49, 0f3F800000, 0f00000000, %p7;
	.loc	1 59 62                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:59:62
	selp.f32 	%f51, %f12, 0f00000000, %p7;
	.loc	1 31 36                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:31:36
	shl.b32 	%r38, %r9, 19;
	shl.b32 	%r39, %r18, 13;
	or.b32  	%r40, %r38, %r39;
	or.b32  	%r41, %r40, %r2;
	mul.wide.s32 	%rd44, %r41, 4;
	add.s64 	%rd45, %rd44, %rd24;
	add.s64 	%rd83, %rd45, 16;
	mov.f32 	%f50, 0f00000000;
	mov.u64 	%rd84, 4;
	shl.b64 	%rd78, %rd1, 2;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:0:36
	cvt.u32.u64 	%r52, %rd84;
	.loc	1 36 23                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:36:23
	and.b32  	%r53, %r52, 12;
	or.b32  	%r54, %r6, %r53;
	.loc	1 37 23                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:37:23
	shr.u32 	%r55, %r52, 12;
	.loc	1 39 34                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:39:34
	shr.u64 	%rd55, %rd84, 5;
	and.b64  	%rd56, %rd55, 120;
	add.s64 	%rd47, %rd14, %rd56;
	.loc	1 39 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:39:39
	// begin inline asm
	mov.u64 %rd46, 0x0;
	@%p26 ld.global.L1::evict_last.b64 { %rd46 }, [ %rd47 + 0 ];
	@!%p26 mov.u64 %rd46, 0x0;
	// end inline asm
	.loc	1 40 34                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:40:34
	shr.u64 	%rd57, %rd84, 1;
	and.b64  	%rd58, %rd57, 120;
	add.s64 	%rd49, %rd14, %rd58;
	.loc	1 40 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:40:39
	// begin inline asm
	mov.u64 %rd48, 0x0;
	@%p26 ld.global.L1::evict_last.b64 { %rd48 }, [ %rd49 + 0 ];
	@!%p26 mov.u64 %rd48, 0x0;
	// end inline asm
	.loc	1 41 34                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:41:34
	mul.wide.u32 	%rd59, %r54, 8;
	add.s64 	%rd51, %rd14, %rd59;
	.loc	1 41 39                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:41:39
	// begin inline asm
	mov.u64 %rd50, 0x0;
	@%p26 ld.global.L1::evict_last.b64 { %rd50 }, [ %rd51 + 0 ];
	@!%p26 mov.u64 %rd50, 0x0;
	// end inline asm
	.loc	1 42 35                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:42:35
	mul.wide.u32 	%rd60, %r55, 4;
	add.s64 	%rd52, %rd19, %rd60;
	.loc	1 42 47                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:42:47
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r42 }, [ %rd52 + 0 ];
	@!%p7 mov.u32 %r42, %r11;
	// end inline asm
	mov.b32 	%f13, %r42;
	.loc	1 46 36                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:46:36
	shr.u64 	%rd61, %rd46, 60;
	and.b64  	%rd62, %rd61, 8;
	add.s64 	%rd63, %rd62, %rd46;
	.loc	1 49 36                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:49:36
	shr.u64 	%rd64, %rd48, 60;
	and.b64  	%rd65, %rd64, 8;
	add.s64 	%rd66, %rd65, %rd48;
	.loc	1 53 66                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:66
	shl.b32 	%r56, %r55, 9;
	.loc	1 53 35                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:35
	shl.b64 	%rd67, %rd50, 2;
	add.s64 	%rd68, %rd9, %rd67;
	shr.u64 	%rd69, %rd50, 58;
	and.b64  	%rd70, %rd69, 32;
	add.s64 	%rd71, %rd68, %rd70;
	shl.b64 	%rd72, %rd66, 5;
	add.s64 	%rd73, %rd71, %rd72;
	shl.b64 	%rd74, %rd63, 8;
	add.s64 	%rd75, %rd73, %rd74;
	mul.wide.u32 	%rd76, %r56, 4;
	add.s64 	%rd77, %rd75, %rd76;
	add.s64 	%rd53, %rd77, %rd78;
	.loc	1 53 81                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:53:81
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r44 }, [ %rd53 + 0 ];
	@!%p7 mov.u32 %r44, %r11;
	// end inline asm
	mov.b32 	%f14, %r44;
	.loc	1 54 24                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:54:24
	add.f32 	%f15, %f13, %f14;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f16, %f15, %f51;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f17, %f49, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r47, %f16;
	mov.b32 	%r48, %f17;
	// begin inline asm
	div.full.f32 %r46, %r47, %r48;
	// end inline asm
	mov.b32 	%f18, %r46;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f19, %f51, %f18;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f20, %f15, %f19;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f21, %f16, %f20, %f50;
$L__tmp2:
	.loc	1 59 62                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:59:62
	selp.f32 	%f51, %f19, %f51, %p7;
	.loc	1 60 58                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:60:58
	selp.f32 	%f50, %f21, %f50, %p7;
	.loc	1 61 66                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:61:66
	selp.f32 	%f49, %f17, %f49, %p7;
	.loc	1 62 51                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:62:51
	bar.sync 	0;
	mov.b32 	%r50, %f15;
	// begin inline asm
	@%p26 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r51, [%r8];
	// begin inline asm
	@%p12 st.global.b32 [ %rd83 + 0 ], { %r51 };
	// end inline asm
	.loc	1 31 36                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:31:36
	add.s64 	%rd6, %rd84, 4;
	add.s64 	%rd83, %rd83, 16;
	setp.lt.u64 	%p25, %rd84, 8188;
	mov.u64 	%rd84, %rd6;
	@%p25 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	shl.b32 	%r84, %r6, 2;
	shl.b32 	%r85, %r3, 4;
	or.b32  	%r86, %r85, %r84;
	add.s32 	%r57, %r32, %r86;
	mov.b32 	%r58, %f51;
	// begin inline asm
	@%p26 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r88, %r32, 1024;
	add.s32 	%r59, %r88, %r86;
	mov.b32 	%r60, %f50;
	// begin inline asm
	@%p26 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r89, %r32, 2048;
	add.s32 	%r61, %r89, %r86;
	mov.b32 	%r62, %f49;
	// begin inline asm
	@%p26 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p29, %r1, 256;
	add.s32 	%r64, %r32, %r28;
	// begin inline asm
	@%p29 ld.shared.b32 %r63, [ %r64 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r63;
	add.s32 	%r66, %r88, %r28;
	// begin inline asm
	@%p29 ld.shared.b32 %r65, [ %r66 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r65;
	add.s32 	%r68, %r89, %r28;
	// begin inline asm
	@%p29 ld.shared.b32 %r67, [ %r68 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r67;
	shfl.sync.bfly.b32	%r91, %r63, 2, 31, -1;
	mov.b32 	%f25, %r91;
	shfl.sync.bfly.b32	%r92, %r65, 2, 31, -1;
	mov.b32 	%f26, %r92;
	shfl.sync.bfly.b32	%r70, %r67, 2, 31, -1;
	mov.b32 	%f27, %r70;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f28, %f25, %f22;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f29, %f24, %f27;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p39, %f29, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r71, %f29;
	// begin inline asm
	div.full.f32 %r69, %r70, %r71;
	// end inline asm
	mov.b32 	%f30, %r69;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f31, 0f00000000, %f30, %p39;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f32, %f28, %f31, %f22;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f33, %f23, %f26;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f34, %f28, %f28;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f35, %f34, %f24;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f36, %f35, %f31, %f33;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r93, %f32;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	mov.b32 	%f37, %r94;
	mov.b32 	%r95, %f36;
	shfl.sync.bfly.b32	%r96, %r95, 1, 31, -1;
	mov.b32 	%f38, %r96;
	shfl.sync.bfly.b32	%r73, %r71, 1, 31, -1;
	mov.b32 	%f39, %r73;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f40, %f37, %f32;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f41, %f29, %f39;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p40, %f41, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r74, %f41;
	// begin inline asm
	div.full.f32 %r72, %r73, %r74;
	// end inline asm
	mov.b32 	%f42, %r72;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f43, 0f00000000, %f42, %p40;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f44, %f40, %f43, %f32;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f45, %f36, %f38;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f46, %f40, %f40;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f47, %f29, %f46;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f48, %f43, %f47, %f45;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p41, %r2, 0;
	and.pred  	%p32, %p29, %p41;
	mov.b32 	%r76, %f44;
	// begin inline asm
	@%p32 st.shared.b32 [ %r64 + 0 ], %r76;
	// end inline asm
	mov.b32 	%r78, %f48;
	// begin inline asm
	@%p32 st.shared.b32 [ %r66 + 0 ], %r78;
	// end inline asm
	// begin inline asm
	@%p32 st.shared.b32 [ %r68 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r97, %r32, %r85;
	ld.shared.u32 	%r81, [%r97];
	add.s32 	%r98, %r88, %r85;
	ld.shared.u32 	%r82, [%r98];
	add.s32 	%r99, %r89, %r85;
	ld.shared.u32 	%r83, [%r99];
$L__tmp4:
	.loc	1 69 25                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:69:25
	mul.wide.s32 	%rd82, %r4, 4;
	add.s64 	%rd79, %rd10, %rd82;
	.loc	1 69 37                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:69:37
	setp.eq.s32 	%p42, %r6, 0;
	and.pred  	%p35, %p42, %p7;
	// begin inline asm
	@%p35 st.global.b32 [ %rd79 + 0 ], { %r81 };
	// end inline asm
	.loc	1 70 25                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:70:25
	add.s64 	%rd80, %rd11, %rd82;
	.loc	1 70 37                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:70:37
	// begin inline asm
	@%p35 st.global.b32 [ %rd80 + 0 ], { %r82 };
	// end inline asm
	.loc	1 71 25                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:71:25
	add.s64 	%rd81, %rd12, %rd82;
	.loc	1 71 37                         // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:71:37
	// begin inline asm
	@%p35 st.global.b32 [ %rd81 + 0 ], { %r83 };
	// end inline asm
	.loc	1 71 4                          // c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py:71:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7s/c7s45lcof43l7rbbulwegbqpn3eleshfszmtr63cujzw7jwk3sha.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 115
.b8 52
.b8 53
.b8 108
.b8 99
.b8 111
.b8 102
.b8 52
.b8 51
.b8 108
.b8 55
.b8 114
.b8 98
.b8 98
.b8 117
.b8 108
.b8 119
.b8 101
.b8 103
.b8 98
.b8 113
.b8 112
.b8 110
.b8 51
.b8 101
.b8 108
.b8 101
.b8 115
.b8 104
.b8 102
.b8 115
.b8 122
.b8 109
.b8 116
.b8 114
.b8 54
.b8 51
.b8 99
.b8 117
.b8 106
.b8 122
.b8 119
.b8 55
.b8 106
.b8 119
.b8 107
.b8 51
.b8 115
.b8 104
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
