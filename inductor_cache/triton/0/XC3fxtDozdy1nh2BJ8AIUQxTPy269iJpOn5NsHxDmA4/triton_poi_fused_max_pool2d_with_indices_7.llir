; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 2048, !dbg !14
  %11 = sdiv i32 %9, 2, !dbg !15
  %12 = shl i32 %11, 3, !dbg !16
  %13 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !17
  %14 = insertelement <2 x i32> %13, i32 %11, i64 1, !dbg !17
  %15 = srem <2 x i32> %14, splat (i32 2), !dbg !17
  %16 = extractelement <2 x i32> %15, i64 1, !dbg !18
  %17 = icmp sgt i32 %16, 0, !dbg !19
  %18 = extractelement <2 x i32> %15, i64 0, !dbg !18
  %19 = shl nsw i32 %18, 1, !dbg !20
  %20 = icmp sgt <2 x i32> %15, <i32 0, i32 -1>, !dbg !21
  %21 = extractelement <2 x i1> %20, i64 0, !dbg !22
  %22 = and i1 %21, %17, !dbg !22
  %23 = add i32 %12, %19, !dbg !23
  %24 = add i32 %23, -5, !dbg !24
  %25 = sext i32 %24 to i64, !dbg !25
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !25
  %27 = and i1 %10, %22, !dbg !26
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %27, i32 -8388608, i1 %27) #1, !dbg !27
  %29 = bitcast i32 %28 to float, !dbg !27
  %30 = icmp sgt i32 %18, -1, !dbg !28
  %31 = and i1 %30, %17, !dbg !29
  %32 = add i32 %23, -4, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !31
  %35 = and i1 %10, %31, !dbg !32
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 -8388608, i1 %35) #1, !dbg !33
  %37 = bitcast i32 %36 to float, !dbg !33
  %38 = fcmp ogt float %37, %29, !dbg !34
  %39 = fcmp uno float %37, 0.000000e+00, !dbg !38
  %40 = or i1 %38, %39, !dbg !39
  %41 = select i1 %40, float %37, float %29, !dbg !40
  %42 = add i32 %23, -3, !dbg !41
  %43 = sext i32 %42 to i64, !dbg !42
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !42
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %35, i32 -8388608, i1 %35) #1, !dbg !43
  %46 = bitcast i32 %45 to float, !dbg !43
  %47 = fcmp olt float %41, %46, !dbg !44
  %48 = fcmp uno float %46, 0.000000e+00, !dbg !46
  %49 = or i1 %48, %47, !dbg !47
  %50 = select i1 %49, float %46, float %41, !dbg !48
  %51 = extractelement <2 x i1> %20, i64 1, !dbg !49
  %52 = and i1 %21, %51, !dbg !49
  %53 = add i32 %23, -1, !dbg !50
  %54 = sext i32 %53 to i64, !dbg !51
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !51
  %56 = and i1 %10, %52, !dbg !52
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %56, i32 -8388608, i1 %56) #1, !dbg !53
  %58 = bitcast i32 %57 to float, !dbg !53
  %59 = fcmp olt float %50, %58, !dbg !54
  %60 = fcmp uno float %58, 0.000000e+00, !dbg !56
  %61 = or i1 %60, %59, !dbg !57
  %62 = select i1 %61, float %58, float %50, !dbg !58
  %63 = or i32 %16, %18, !dbg !18
  %64 = icmp sgt i32 %63, -1, !dbg !18
  %65 = sext i32 %23 to i64, !dbg !59
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !59
  %67 = and i1 %10, %64, !dbg !60
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %67, i32 -8388608, i1 %67) #1, !dbg !61
  %69 = bitcast i32 %68 to float, !dbg !61
  %70 = fcmp olt float %62, %69, !dbg !62
  %71 = fcmp uno float %69, 0.000000e+00, !dbg !64
  %72 = or i1 %71, %70, !dbg !65
  %73 = select i1 %72, float %69, float %62, !dbg !66
  %74 = or disjoint i32 %23, 1, !dbg !67
  %75 = sext i32 %74 to i64, !dbg !68
  %76 = getelementptr float, ptr addrspace(1) %0, i64 %75, !dbg !68
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %67, i32 -8388608, i1 %67) #1, !dbg !69
  %78 = bitcast i32 %77 to float, !dbg !69
  %79 = fcmp olt float %73, %78, !dbg !70
  %80 = fcmp uno float %78, 0.000000e+00, !dbg !72
  %81 = or i1 %80, %79, !dbg !73
  %82 = select i1 %81, float %78, float %73, !dbg !74
  %83 = add i32 %23, 3, !dbg !75
  %84 = sext i32 %83 to i64, !dbg !76
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !76
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %85, i1 %56, i32 -8388608, i1 %56) #1, !dbg !77
  %87 = bitcast i32 %86 to float, !dbg !77
  %88 = fcmp olt float %82, %87, !dbg !78
  %89 = fcmp uno float %87, 0.000000e+00, !dbg !80
  %90 = or i1 %89, %88, !dbg !81
  %91 = select i1 %90, float %87, float %82, !dbg !82
  %92 = add i32 %23, 4, !dbg !83
  %93 = sext i32 %92 to i64, !dbg !84
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %93, !dbg !84
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %67, i32 -8388608, i1 %67) #1, !dbg !85
  %96 = bitcast i32 %95 to float, !dbg !85
  %97 = fcmp olt float %91, %96, !dbg !86
  %98 = fcmp uno float %96, 0.000000e+00, !dbg !88
  %99 = or i1 %98, %97, !dbg !89
  %100 = select i1 %99, float %96, float %91, !dbg !90
  %101 = add i32 %23, 5, !dbg !91
  %102 = sext i32 %101 to i64, !dbg !92
  %103 = getelementptr float, ptr addrspace(1) %0, i64 %102, !dbg !92
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %103, i1 %67, i32 -8388608, i1 %67) #1, !dbg !93
  %105 = bitcast i32 %104 to float, !dbg !93
  %106 = fcmp olt float %100, %105, !dbg !94
  %107 = fcmp uno float %105, 0.000000e+00, !dbg !96
  %108 = or i1 %107, %106, !dbg !97
  %109 = zext i1 %38 to i8, !dbg !98
  %110 = select i1 %47, i8 2, i8 %109, !dbg !99
  %111 = select i1 %59, i8 3, i8 %110, !dbg !100
  %112 = select i1 %70, i8 4, i8 %111, !dbg !101
  %113 = select i1 %79, i8 5, i8 %112, !dbg !102
  %114 = select i1 %88, i8 6, i8 %113, !dbg !103
  %115 = select i1 %97, i8 7, i8 %114, !dbg !104
  %116 = select i1 %106, i8 8, i8 %115, !dbg !105
  %117 = sext i32 %9 to i64, !dbg !106
  %118 = getelementptr float, ptr addrspace(1) %1, i64 %117, !dbg !106
  %119 = bitcast float %100 to i32, !dbg !107
  %120 = select i1 %108, i32 %104, i32 %119, !dbg !108
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %120, ptr addrspace(1) %118, i1 %10) #1, !dbg !107
  %121 = getelementptr i8, ptr addrspace(1) %2, i64 %117, !dbg !109
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %116, ptr addrspace(1) %121, i1 %10) #1, !dbg !110
  ret void, !dbg !111
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwjoa6ygmnkvo52rtqhofrzqgtmdpltcc4z2qq7qbjnzcguudvaz.py", directory: "inductor_cache/wj")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_7", linkageName: "triton_poi_fused_max_pool2d_with_indices_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 39, column: 47, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 61, column: 20, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 35, column: 19, scope: !7)
!22 = !DILocation(line: 38, column: 19, scope: !7)
!23 = !DILocation(line: 39, column: 38, scope: !7)
!24 = !DILocation(line: 39, column: 45, scope: !7)
!25 = !DILocation(line: 39, column: 31, scope: !7)
!26 = !DILocation(line: 39, column: 60, scope: !7)
!27 = !DILocation(line: 39, column: 52, scope: !7)
!28 = !DILocation(line: 41, column: 21, scope: !7)
!29 = !DILocation(line: 44, column: 19, scope: !7)
!30 = !DILocation(line: 45, column: 45, scope: !7)
!31 = !DILocation(line: 45, column: 31, scope: !7)
!32 = !DILocation(line: 45, column: 60, scope: !7)
!33 = !DILocation(line: 45, column: 52, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 46, column: 42, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 52, column: 45, scope: !7)
!42 = !DILocation(line: 52, column: 31, scope: !7)
!43 = !DILocation(line: 52, column: 52, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !45)
!45 = !DILocation(line: 53, column: 42, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !45)
!49 = !DILocation(line: 58, column: 20, scope: !7)
!50 = !DILocation(line: 59, column: 45, scope: !7)
!51 = !DILocation(line: 59, column: 31, scope: !7)
!52 = !DILocation(line: 59, column: 60, scope: !7)
!53 = !DILocation(line: 59, column: 52, scope: !7)
!54 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !55)
!55 = !DILocation(line: 60, column: 42, scope: !7)
!56 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !55)
!57 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !55)
!58 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !55)
!59 = !DILocation(line: 62, column: 31, scope: !7)
!60 = !DILocation(line: 62, column: 53, scope: !7)
!61 = !DILocation(line: 62, column: 45, scope: !7)
!62 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !63)
!63 = !DILocation(line: 63, column: 42, scope: !7)
!64 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !63)
!65 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !63)
!66 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !63)
!67 = !DILocation(line: 65, column: 42, scope: !7)
!68 = !DILocation(line: 65, column: 31, scope: !7)
!69 = !DILocation(line: 65, column: 49, scope: !7)
!70 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !71)
!71 = !DILocation(line: 66, column: 42, scope: !7)
!72 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !71)
!73 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !71)
!74 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !71)
!75 = !DILocation(line: 72, column: 42, scope: !7)
!76 = !DILocation(line: 72, column: 31, scope: !7)
!77 = !DILocation(line: 72, column: 49, scope: !7)
!78 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !79)
!79 = !DILocation(line: 73, column: 42, scope: !7)
!80 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !79)
!81 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !79)
!82 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !79)
!83 = !DILocation(line: 75, column: 42, scope: !7)
!84 = !DILocation(line: 75, column: 31, scope: !7)
!85 = !DILocation(line: 75, column: 49, scope: !7)
!86 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !87)
!87 = !DILocation(line: 76, column: 42, scope: !7)
!88 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !87)
!89 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !87)
!90 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !87)
!91 = !DILocation(line: 78, column: 42, scope: !7)
!92 = !DILocation(line: 78, column: 31, scope: !7)
!93 = !DILocation(line: 78, column: 49, scope: !7)
!94 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !95)
!95 = !DILocation(line: 79, column: 42, scope: !7)
!96 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !95)
!97 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !95)
!98 = !DILocation(line: 83, column: 35, scope: !7)
!99 = !DILocation(line: 86, column: 35, scope: !7)
!100 = !DILocation(line: 89, column: 35, scope: !7)
!101 = !DILocation(line: 92, column: 35, scope: !7)
!102 = !DILocation(line: 95, column: 35, scope: !7)
!103 = !DILocation(line: 98, column: 35, scope: !7)
!104 = !DILocation(line: 101, column: 35, scope: !7)
!105 = !DILocation(line: 104, column: 35, scope: !7)
!106 = !DILocation(line: 105, column: 25, scope: !7)
!107 = !DILocation(line: 105, column: 37, scope: !7)
!108 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !95)
!109 = !DILocation(line: 106, column: 25, scope: !7)
!110 = !DILocation(line: 106, column: 37, scope: !7)
!111 = !DILocation(line: 106, column: 4, scope: !7)
