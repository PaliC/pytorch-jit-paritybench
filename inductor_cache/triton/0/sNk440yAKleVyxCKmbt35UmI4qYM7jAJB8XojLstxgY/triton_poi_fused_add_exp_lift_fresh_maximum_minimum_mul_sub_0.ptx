//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0 // -- Begin function triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0
                                        // @triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0
.visible .entry triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0_param_1,
	.param .u32 triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<11>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<6>;
	.loc	1 19 0                          // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_add_exp_lift_fresh_maximum_minimum_mul_sub_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:21:33
	shl.b32 	%r6, %r1, 8;
	.loc	1 22 36                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:22:36
	mov.u32 	%r7, %tid.x;
	shl.b32 	%r8, %r7, 1;
	and.b32  	%r9, %r8, 254;
	.loc	1 22 23                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:22:23
	or.b32  	%r10, %r6, %r9;
	.loc	1 23 21                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:23:21
	setp.lt.s32 	%p1, %r10, 256;
	.loc	1 25 30                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:25:30
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 25 35                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:25:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p3, %f5, 0f00000000;
	setp.lt.f32 	%p4, %f6, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f7, 0f00000000, %f5, %p3;
	selp.f32 	%f8, 0f00000000, %f6, %p4;
$L__tmp2:
	.loc	1 28 23                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:28:23
	mul.f32 	%f2, %f5, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f6, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	1 30 18                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:30:18
	add.f32 	%f9, %f1, 0fBF800000;
	add.f32 	%f10, %f3, 0fBF800000;
	.loc	1 32 18                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:32:18
	mul.f32 	%f11, %f9, 0f3FD62D7D;
	mul.f32 	%f12, %f10, 0f3FD62D7D;
$L__tmp3:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.gt.f32 	%p5, %f11, 0f00000000;
	setp.gt.f32 	%p6, %f12, 0f00000000;
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.f32 	%f13, 0f00000000, %f11, %p5;
	selp.f32 	%f14, 0f00000000, %f12, %p6;
$L__tmp4:
	.loc	1 34 18                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:34:18
	add.f32 	%f15, %f7, %f13;
	add.f32 	%f16, %f8, %f14;
	.loc	1 36 19                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:36:19
	mul.f32 	%f17, %f15, 0f3F867D5F;
	mul.f32 	%f18, %f16, 0f3F867D5F;
	.loc	1 37 25                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:37:25
	add.s64 	%rd2, %rd4, %rd5;
	.loc	1 37 37                         // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:37:37
	mov.b32 	%r4, %f17;
	mov.b32 	%r5, %f18;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd2 + 0 ], { %r4, %r5 };
	// end inline asm
	.loc	1 37 4                          // cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py:37:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vm/cvmrspxrt3guho45unjop3izki4isoc7ukkkwwvtwegmugi2iehc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 230                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 109
.b8 114
.b8 115
.b8 112
.b8 120
.b8 114
.b8 116
.b8 51
.b8 103
.b8 117
.b8 104
.b8 111
.b8 52
.b8 53
.b8 117
.b8 110
.b8 106
.b8 111
.b8 112
.b8 51
.b8 105
.b8 122
.b8 107
.b8 105
.b8 52
.b8 105
.b8 115
.b8 111
.b8 99
.b8 55
.b8 117
.b8 107
.b8 107
.b8 107
.b8 119
.b8 119
.b8 118
.b8 116
.b8 119
.b8 101
.b8 103
.b8 109
.b8 117
.b8 103
.b8 105
.b8 50
.b8 105
.b8 101
.b8 104
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 101
.b8 120
.b8 112
.b8 95
.b8 108
.b8 105
.b8 102
.b8 116
.b8 95
.b8 102
.b8 114
.b8 101
.b8 115
.b8 104
.b8 95
.b8 109
.b8 97
.b8 120
.b8 105
.b8 109
.b8 117
.b8 109
.b8 95
.b8 109
.b8 105
.b8 110
.b8 105
.b8 109
.b8 117
.b8 109
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 27                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
