//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<99>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_1];
$L__tmp0:
	.loc	1 22 28                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:22:33
	shl.b32 	%r53, %r1, 1;
	ld.param.u64 	%rd11, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_3];
	.loc	1 23 44                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:23:44
	mov.u32 	%r54, %tid.x;
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_4];
	bfe.u32 	%r55, %r54, 6, 1;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_5];
	.loc	1 23 23                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:23:23
	or.b32  	%r56, %r53, %r55;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_leaky_relu_17_param_6];
	.loc	1 25 28                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:25:33
	shl.b32 	%r57, %r2, 8;
	.loc	1 26 44                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:26:44
	shl.b32 	%r58, %r54, 2;
	and.b32  	%r59, %r58, 252;
	shl.b32 	%r60, %r54, 1;
	and.b32  	%r61, %r60, 254;
	.loc	1 26 23                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:26:23
	or.b32  	%r62, %r57, %r59;
	or.b32  	%r63, %r57, %r61;
	.loc	1 27 21                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:27:21
	setp.lt.s32 	%p6, %r63, 256;
	.loc	1 32 39                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:39
	shl.b32 	%r64, %r56, 8;
	.loc	1 32 35                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:35
	add.s32 	%r65, %r62, %r64;
	.loc	1 32 30                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:30
	mul.wide.s32 	%rd16, %r65, 4;
	add.s64 	%rd1, %rd9, %rd16;
	.loc	1 32 52                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:52
	max.s32 	%r66, %r56, %r62;
	setp.lt.s32 	%p10, %r66, 256;
	.loc	1 32 44                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	@%p10 ld.global.v4.b32 { %r8, %r10, %r12, %r14 }, [ %rd1 + 0 ];
	// end inline asm
	and.b32  	%r67, %r58, 508;
	bfe.u32 	%r68, %r58, 8, 1;
	or.b32  	%r69, %r68, %r67;
	shl.b32 	%r70, %r69, 2;
	mov.u32 	%r71, global_smem;
	add.s32 	%r7, %r71, %r70;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	shl.b32 	%r72, %r68, 2;
	add.s32 	%r73, %r71, %r72;
	shl.b32 	%r74, %r67, 2;
	add.s32 	%r75, %r73, %r74;
	add.s32 	%r9, %r75, 4;
	// begin inline asm
	@%p2 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	add.s32 	%r11, %r7, 8;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r75, 12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r76, %r61, 2;
	add.s32 	%r33, %r71, %r76;
	add.s32 	%r37, %r33, 1028;
	ld.shared.v2.f32 	{%f1, %f2}, [%r33];
	ld.shared.f32 	%f3, [%r33+1032];
	ld.shared.f32 	%f4, [%r33+1028];
	.loc	1 33 30                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:33:30
	mul.wide.s32 	%rd17, %r63, 4;
	add.s64 	%rd2, %rd10, %rd17;
	.loc	1 33 35                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:33:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:34:30
	add.s64 	%rd3, %rd11, %rd17;
	.loc	1 34 35                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:34:35
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r17;
	mov.b32 	%f6, %r18;
	.loc	1 35 31                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:35:31
	add.s64 	%rd4, %rd12, %rd17;
	.loc	1 35 36                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:35:36
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r19, %r20 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:36:31
	add.s64 	%rd5, %rd13, %rd17;
	.loc	1 36 36                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:36:36
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:37:31
	add.s64 	%rd6, %rd14, %rd16;
	.loc	1 37 45                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:37:45
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p10 ld.global.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:40:18
	add.f32 	%f7, %f5, 0f3727C5AC;
	add.f32 	%f8, %f6, 0f3727C5AC;
	.loc	1 41 26                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:41:26
	sqrt.approx.ftz.f32 	%f9, %f7;
	sqrt.approx.ftz.f32 	%f10, %f8;
	.loc	1 32 44                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:44
	add.s32 	%r39, %r33, 1032;
	add.s32 	%r35, %r33, 4;
	.loc	1 37 45                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:37:45
	mov.b32 	%f11, %r26;
	mov.b32 	%f12, %r25;
	mov.b32 	%f13, %r24;
	mov.b32 	%f14, %r23;
	.loc	1 26 44                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:26:44
	and.b32  	%r77, %r54, 127;
	.loc	1 26 23                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:26:23
	or.b32  	%r78, %r77, %r57;
	or.b32  	%r79, %r78, 128;
	.loc	1 27 21                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:27:21
	setp.lt.s32 	%p21, %r79, 256;
	.loc	1 24 21                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:24:21
	setp.lt.s32 	%p22, %r53, 256;
	.loc	1 32 52                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:52
	and.pred  	%p20, %p22, %p21;
	.loc	1 27 21                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:27:21
	setp.lt.s32 	%p23, %r78, 256;
	.loc	1 32 52                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:32:52
	and.pred  	%p19, %p22, %p23;
	.loc	1 31 19                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:31:19
	bfe.s32 	%r80, %r1, 30, 1;
	shr.u32 	%r81, %r80, 26;
	add.s32 	%r82, %r53, %r81;
	.loc	1 30 19                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:30:19
	and.b32  	%r83, %r82, -64;
	sub.s32 	%r84, %r53, %r83;
	.loc	1 43 18                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:43:18
	mov.b32 	%r29, %f9;
	mov.b32 	%r28, 1065353216;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f15, %r27;
	mov.b32 	%r32, %f10;
	// begin inline asm
	div.full.f32 %r30, %r28, %r32;
	// end inline asm
	mov.b32 	%f16, %r30;
	.loc	1 33 35                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:33:35
	mov.b32 	%f17, %r16;
	mov.b32 	%f18, %r15;
	.loc	1 38 18                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:38:18
	sub.f32 	%f19, %f1, %f18;
	sub.f32 	%f20, %f2, %f17;
	sub.f32 	%f21, %f4, %f18;
	sub.f32 	%f22, %f3, %f17;
	.loc	1 36 36                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:36:36
	mov.b32 	%f23, %r22;
	mov.b32 	%f24, %r21;
	.loc	1 35 36                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:35:36
	mov.b32 	%f25, %r20;
	mov.b32 	%f26, %r19;
	.loc	1 46 19                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:46:19
	mul.f32 	%f27, %f22, %f16;
	mul.f32 	%f28, %f21, %f15;
	mul.f32 	%f29, %f20, %f16;
	mul.f32 	%f30, %f19, %f15;
	.loc	1 48 20                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:48:20
	fma.rn.f32 	%f31, %f30, %f26, %f24;
	fma.rn.f32 	%f32, %f29, %f25, %f23;
	fma.rn.f32 	%f33, %f28, %f26, %f24;
	fma.rn.f32 	%f34, %f27, %f25, %f23;
	.loc	1 50 20                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:50:20
	setp.gt.f32 	%p24, %f34, 0f00000000;
	setp.gt.f32 	%p25, %f33, 0f00000000;
	setp.gt.f32 	%p26, %f32, 0f00000000;
	setp.gt.f32 	%p27, %f31, 0f00000000;
	.loc	1 52 20                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:52:20
	mul.f32 	%f35, %f31, 0f3DCCCCCD;
	mul.f32 	%f36, %f32, 0f3DCCCCCD;
	mul.f32 	%f37, %f33, 0f3DCCCCCD;
	mul.f32 	%f38, %f34, 0f3DCCCCCD;
	.loc	1 53 35                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:53:35
	selp.f32 	%f39, %f31, %f35, %p27;
	selp.f32 	%f40, %f32, %f36, %p26;
	selp.f32 	%f41, %f33, %f37, %p25;
	selp.f32 	%f42, %f34, %f38, %p24;
	bar.sync 	0;
	mov.b32 	%r34, %f39;
	// begin inline asm
	@%p2 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	mov.b32 	%r36, %f40;
	// begin inline asm
	@%p2 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	mov.b32 	%r38, %f41;
	// begin inline asm
	@%p2 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	mov.b32 	%r40, %f42;
	// begin inline asm
	@%p2 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f43, [%r7];
	ld.shared.f32 	%f44, [%r75+4];
	ld.shared.f32 	%f45, [%r7+8];
	ld.shared.f32 	%f46, [%r75+12];
	.loc	1 54 20                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:54:20
	add.f32 	%f47, %f43, %f14;
	add.f32 	%f48, %f44, %f13;
	add.f32 	%f49, %f45, %f12;
	add.f32 	%f50, %f46, %f11;
	.loc	1 55 33                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:33
	shl.b32 	%r85, %r78, 6;
	shl.b32 	%r86, %r79, 6;
	.loc	1 55 44                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:44
	shl.b32 	%r87, %r82, 8;
	and.b32  	%r88, %r87, -16384;
	.loc	1 55 30                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:30
	add.s32 	%r89, %r88, %r84;
	.loc	1 55 38                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:38
	add.s32 	%r90, %r89, %r85;
	add.s32 	%r91, %r89, %r86;
	.loc	1 55 25                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:25
	mul.wide.s32 	%rd18, %r90, 4;
	add.s64 	%rd7, %rd15, %rd18;
	mul.wide.s32 	%rd19, %r91, 4;
	add.s64 	%rd8, %rd15, %rd19;
	.loc	1 55 56                         // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:56
	bar.sync 	0;
	shl.b32 	%r92, %r54, 3;
	and.b32  	%r93, %r92, 504;
	or.b32  	%r94, %r93, %r55;
	shl.b32 	%r95, %r93, 2;
	add.s32 	%r96, %r71, %r95;
	shl.b32 	%r97, %r94, 2;
	add.s32 	%r41, %r96, %r97;
	mov.b32 	%r42, %f47;
	// begin inline asm
	@%p2 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r41, 16;
	mov.b32 	%r44, %f48;
	// begin inline asm
	@%p2 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r41, 32;
	mov.b32 	%r46, %f49;
	// begin inline asm
	@%p2 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r41, 48;
	mov.b32 	%r48, %f50;
	// begin inline asm
	@%p2 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r98, %r33, %r76;
	ld.shared.v2.u32 	{%r51, %r52}, [%r98+2048];
	ld.shared.v2.u32 	{%r49, %r50}, [%r98];
	// begin inline asm
	@%p19 st.global.v2.b32 [ %rd7 + 0 ], { %r49, %r50 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v2.b32 [ %rd8 + 0 ], { %r51, %r52 };
	// end inline asm
	.loc	1 55 4                          // cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py:55:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ox/cox3upgia62ws6ysgk42leozv7edlyamh5m5iy3rw3vk3nicgmyp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 120
.b8 51
.b8 117
.b8 112
.b8 103
.b8 105
.b8 97
.b8 54
.b8 50
.b8 119
.b8 115
.b8 54
.b8 121
.b8 115
.b8 103
.b8 107
.b8 52
.b8 50
.b8 108
.b8 101
.b8 111
.b8 122
.b8 118
.b8 55
.b8 101
.b8 100
.b8 108
.b8 121
.b8 97
.b8 109
.b8 104
.b8 53
.b8 109
.b8 53
.b8 105
.b8 121
.b8 51
.b8 114
.b8 119
.b8 51
.b8 118
.b8 107
.b8 51
.b8 110
.b8 105
.b8 99
.b8 103
.b8 109
.b8 121
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
