//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mul_sum_4 // -- Begin function triton_per_fused_add_div_mul_sum_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_div_mul_sum_4
.visible .entry triton_per_fused_add_div_mul_sum_4(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mul_sum_4_param_8,
	.param .u32 triton_per_fused_add_div_mul_sum_4_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b32 	%r<187>;
	.reg .f32 	%f<102>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:19:0

// %bb.0:
	ld.param.u64 	%rd25, [triton_per_fused_add_div_mul_sum_4_param_0];
	ld.param.u64 	%rd26, [triton_per_fused_add_div_mul_sum_4_param_1];
$L__tmp0:
	.loc	1 26 34                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:26:34
	mov.u32 	%r134, %tid.x;
	and.b32  	%r135, %r134, 31;
	ld.param.u64 	%rd27, [triton_per_fused_add_div_mul_sum_4_param_2];
	ld.param.u64 	%rd28, [triton_per_fused_add_div_mul_sum_4_param_3];
	and.b32  	%r136, %r134, 63;
	ld.param.u64 	%rd29, [triton_per_fused_add_div_mul_sum_4_param_4];
	.loc	1 30 19                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:30:19
	and.b32  	%r137, %r134, 15;
	ld.param.u64 	%rd30, [triton_per_fused_add_div_mul_sum_4_param_5];
	ld.param.u64 	%rd31, [triton_per_fused_add_div_mul_sum_4_param_6];
	.loc	1 31 30                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:31:30
	mul.wide.u32 	%rd32, %r136, 4;
	add.s64 	%rd1, %rd26, %rd32;
	ld.param.u64 	%rd33, [triton_per_fused_add_div_mul_sum_4_param_7];
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:31:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.b32 { %r26 }, [ %rd1 + 0 ];
	// end inline asm
	ld.param.u64 	%rd34, [triton_per_fused_add_div_mul_sum_4_param_8];
	.loc	1 32 30                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:32:30
	mul.wide.u32 	%rd35, %r137, 4;
	add.s64 	%rd2, %rd26, %rd35;
	.loc	1 32 35                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:32:35
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:33:30
	add.s64 	%rd3, %rd2, 64;
	.loc	1 33 40                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:33:40
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r32 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:34:30
	add.s64 	%rd4, %rd2, 128;
	.loc	1 34 40                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:34:40
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r35 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:35:31
	add.s64 	%rd5, %rd2, 192;
	.loc	1 35 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:35:41
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:36:31
	add.s64 	%rd6, %rd27, %rd32;
	.loc	1 36 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:36:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	.loc	1 37 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:37:31
	add.s64 	%rd7, %rd28, %rd32;
	.loc	1 37 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:37:36
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p1 ld.global.b32 { %r53 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:38:31
	add.s64 	%rd8, %rd28, %rd35;
	.loc	1 38 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:38:36
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r56 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:39:31
	add.s64 	%rd9, %rd8, 64;
	.loc	1 39 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:39:41
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r59 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:40:31
	add.s64 	%rd10, %rd8, 128;
	.loc	1 40 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:40:41
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r62 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 41 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:41:31
	add.s64 	%rd11, %rd8, 192;
	.loc	1 41 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:41:41
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r65 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 42 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:42:31
	add.s64 	%rd12, %rd29, %rd32;
	.loc	1 42 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:42:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r12;
	.loc	1 43 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:43:31
	add.s64 	%rd13, %rd30, %rd32;
	.loc	1 43 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:43:36
	// begin inline asm
	mov.u32 %r80, 0x0;
	@%p1 ld.global.b32 { %r80 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 44 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:44:31
	add.s64 	%rd14, %rd30, %rd35;
	.loc	1 44 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:44:36
	// begin inline asm
	mov.u32 %r83, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r83 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 45 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:45:31
	add.s64 	%rd15, %rd14, 64;
	.loc	1 45 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:45:41
	// begin inline asm
	mov.u32 %r86, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r86 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 46 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:46:31
	add.s64 	%rd16, %rd14, 128;
	.loc	1 46 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:46:41
	// begin inline asm
	mov.u32 %r89, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r89 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 47 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:47:31
	add.s64 	%rd17, %rd14, 192;
	.loc	1 47 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:47:41
	// begin inline asm
	mov.u32 %r92, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r92 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 48 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:48:31
	add.s64 	%rd18, %rd31, %rd32;
	.loc	1 48 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:48:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.b32 { %r18 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r18;
	.loc	1 49 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:49:31
	add.s64 	%rd19, %rd33, %rd32;
	.loc	1 49 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:49:36
	// begin inline asm
	mov.u32 %r107, 0x0;
	@%p1 ld.global.b32 { %r107 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 50 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:50:31
	add.s64 	%rd20, %rd33, %rd35;
	.loc	1 50 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:50:36
	// begin inline asm
	mov.u32 %r110, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r110 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 51 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:51:31
	add.s64 	%rd21, %rd20, 64;
	.loc	1 51 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:51:41
	// begin inline asm
	mov.u32 %r113, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r113 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 52 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:52:31
	add.s64 	%rd22, %rd20, 128;
	.loc	1 52 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:52:41
	// begin inline asm
	mov.u32 %r116, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r116 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 53 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:53:31
	add.s64 	%rd23, %rd20, 192;
	.loc	1 53 41                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:53:41
	// begin inline asm
	mov.u32 %r119, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r119 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 54 31                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:54:31
	add.s64 	%rd24, %rd34, %rd32;
	.loc	1 54 36                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:54:36
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.b32 { %r24 }, [ %rd24 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r24;
	.loc	1 55 18                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:55:18
	// begin inline asm
	div.full.f32 %r41, %r26, %r26;
	// end inline asm
	.loc	1 56 18                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:56:18
	// begin inline asm
	div.full.f32 %r28, %r29, %r29;
	// end inline asm
	mov.b32 	%f5, %r28;
	.loc	1 57 18                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:57:18
	// begin inline asm
	div.full.f32 %r31, %r32, %r32;
	// end inline asm
	mov.b32 	%f6, %r31;
	.loc	1 58 18                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:58:18
	add.f32 	%f7, %f5, %f6;
	.loc	1 59 18                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:59:18
	// begin inline asm
	div.full.f32 %r34, %r35, %r35;
	// end inline asm
	mov.b32 	%f8, %r34;
	.loc	1 60 18                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:60:18
	add.f32 	%f9, %f7, %f8;
	.loc	1 61 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:61:20
	// begin inline asm
	div.full.f32 %r37, %r38, %r38;
	// end inline asm
	mov.b32 	%f10, %r37;
	.loc	1 62 19                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:62:19
	add.f32 	%f11, %f9, %f10;
	.loc	1 63 19                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:63:19
	mov.b32 	%r42, %f11;
	// begin inline asm
	div.full.f32 %r44, %r41, %r42;
	// end inline asm
	.loc	1 64 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:64:20
	// begin inline asm
	div.full.f32 %r43, %r44, %r44;
	// end inline asm
	mov.b32 	%f12, %r43;
	.loc	1 65 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:65:20
	mul.f32 	%f13, %f12, %f1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r138, %f13;
	shfl.sync.bfly.b32	%r139, %r138, 16, 31, -1;
	mov.b32 	%f14, %r139;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f15, %f12, %f1, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r140, %f15;
	shfl.sync.bfly.b32	%r141, %r140, 8, 31, -1;
	mov.b32 	%f16, %r141;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r142, %f17;
	shfl.sync.bfly.b32	%r143, %r142, 4, 31, -1;
	mov.b32 	%f18, %r143;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r144, %f19;
	shfl.sync.bfly.b32	%r145, %r144, 2, 31, -1;
	mov.b32 	%f20, %r145;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r146, %f21;
	shfl.sync.bfly.b32	%r147, %r146, 1, 31, -1;
	mov.b32 	%f22, %r147;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p25, %r135, 0;
	shr.u32 	%r148, %r134, 3;
	and.b32  	%r149, %r148, 4;
	mov.u32 	%r150, global_smem;
	add.s32 	%r46, %r150, %r149;
	mov.b32 	%r47, %f23;
	// begin inline asm
	@%p25 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p26, %r134, 2;
	shl.b32 	%r151, %r134, 2;
	add.s32 	%r49, %r150, %r151;
	// begin inline asm
	@%p26 ld.shared.b32 %r48, [ %r49 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r48;
	shfl.sync.bfly.b32	%r152, %r48, 1, 31, -1;
	mov.b32 	%f25, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r153, %r134, 1;
	setp.eq.b32 	%p38, %r153, 1;
	not.pred 	%p39, %p38;
	and.pred  	%p27, %p26, %p39;
	mov.b32 	%r51, %f26;
	// begin inline asm
	@%p27 st.shared.b32 [ %r49 + 0 ], %r51;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f27, [global_smem];
$L__tmp2:
	.loc	1 68 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:68:20
	// begin inline asm
	div.full.f32 %r68, %r53, %r53;
	// end inline asm
	.loc	1 69 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:69:20
	// begin inline asm
	div.full.f32 %r55, %r56, %r56;
	// end inline asm
	mov.b32 	%f28, %r55;
	.loc	1 70 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:70:20
	// begin inline asm
	div.full.f32 %r58, %r59, %r59;
	// end inline asm
	mov.b32 	%f29, %r58;
	.loc	1 71 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:71:20
	add.f32 	%f30, %f28, %f29;
	.loc	1 72 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:72:20
	// begin inline asm
	div.full.f32 %r61, %r62, %r62;
	// end inline asm
	mov.b32 	%f31, %r61;
	.loc	1 73 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:73:20
	add.f32 	%f32, %f30, %f31;
	.loc	1 74 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:74:20
	// begin inline asm
	div.full.f32 %r64, %r65, %r65;
	// end inline asm
	mov.b32 	%f33, %r64;
	.loc	1 75 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:75:20
	add.f32 	%f34, %f32, %f33;
	.loc	1 76 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:76:20
	mov.b32 	%r69, %f34;
	// begin inline asm
	div.full.f32 %r71, %r68, %r69;
	// end inline asm
	.loc	1 77 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:77:20
	// begin inline asm
	div.full.f32 %r70, %r71, %r71;
	// end inline asm
	mov.b32 	%f35, %r70;
	.loc	1 78 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:78:20
	mul.f32 	%f36, %f35, %f2;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r154, %f36;
	shfl.sync.bfly.b32	%r155, %r154, 16, 31, -1;
	mov.b32 	%f37, %r155;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f38, %f35, %f2, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r156, %f38;
	shfl.sync.bfly.b32	%r157, %r156, 8, 31, -1;
	mov.b32 	%f39, %r157;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r158, %f40;
	shfl.sync.bfly.b32	%r159, %r158, 4, 31, -1;
	mov.b32 	%f41, %r159;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f42;
	shfl.sync.bfly.b32	%r161, %r160, 2, 31, -1;
	mov.b32 	%f43, %r161;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r162, %f44;
	shfl.sync.bfly.b32	%r163, %r162, 1, 31, -1;
	mov.b32 	%f45, %r163;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f46;
	// begin inline asm
	@%p25 st.shared.b32 [ %r46 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r75, [ %r49 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r75;
	shfl.sync.bfly.b32	%r164, %r75, 1, 31, -1;
	mov.b32 	%f48, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f49;
	// begin inline asm
	@%p27 st.shared.b32 [ %r49 + 0 ], %r78;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f50, [global_smem];
$L__tmp4:
	.loc	1 81 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:81:20
	// begin inline asm
	div.full.f32 %r95, %r80, %r80;
	// end inline asm
	.loc	1 82 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:82:20
	// begin inline asm
	div.full.f32 %r82, %r83, %r83;
	// end inline asm
	mov.b32 	%f51, %r82;
	.loc	1 83 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:83:20
	// begin inline asm
	div.full.f32 %r85, %r86, %r86;
	// end inline asm
	mov.b32 	%f52, %r85;
	.loc	1 84 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:84:20
	add.f32 	%f53, %f51, %f52;
	.loc	1 85 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:85:20
	// begin inline asm
	div.full.f32 %r88, %r89, %r89;
	// end inline asm
	mov.b32 	%f54, %r88;
	.loc	1 86 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:86:20
	add.f32 	%f55, %f53, %f54;
	.loc	1 87 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:87:20
	// begin inline asm
	div.full.f32 %r91, %r92, %r92;
	// end inline asm
	mov.b32 	%f56, %r91;
	.loc	1 88 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:88:20
	add.f32 	%f57, %f55, %f56;
	.loc	1 89 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:89:20
	mov.b32 	%r96, %f57;
	// begin inline asm
	div.full.f32 %r98, %r95, %r96;
	// end inline asm
	.loc	1 90 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:90:20
	// begin inline asm
	div.full.f32 %r97, %r98, %r98;
	// end inline asm
	mov.b32 	%f58, %r97;
	.loc	1 91 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:91:20
	mul.f32 	%f59, %f58, %f3;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r165, %f59;
	shfl.sync.bfly.b32	%r166, %r165, 16, 31, -1;
	mov.b32 	%f60, %r166;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f61, %f58, %f3, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f61;
	shfl.sync.bfly.b32	%r168, %r167, 8, 31, -1;
	mov.b32 	%f62, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f63;
	shfl.sync.bfly.b32	%r170, %r169, 4, 31, -1;
	mov.b32 	%f64, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r171, %f65;
	shfl.sync.bfly.b32	%r172, %r171, 2, 31, -1;
	mov.b32 	%f66, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r173, %f67;
	shfl.sync.bfly.b32	%r174, %r173, 1, 31, -1;
	mov.b32 	%f68, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f69;
	// begin inline asm
	@%p25 st.shared.b32 [ %r46 + 0 ], %r101;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r102, [ %r49 + 0 ];
	// end inline asm
	mov.b32 	%f70, %r102;
	shfl.sync.bfly.b32	%r175, %r102, 1, 31, -1;
	mov.b32 	%f71, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f72;
	// begin inline asm
	@%p27 st.shared.b32 [ %r49 + 0 ], %r105;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f73, [global_smem];
$L__tmp6:
	.loc	1 94 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:94:20
	// begin inline asm
	div.full.f32 %r122, %r107, %r107;
	// end inline asm
	.loc	1 95 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:95:20
	// begin inline asm
	div.full.f32 %r109, %r110, %r110;
	// end inline asm
	mov.b32 	%f74, %r109;
	.loc	1 96 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:96:20
	// begin inline asm
	div.full.f32 %r112, %r113, %r113;
	// end inline asm
	mov.b32 	%f75, %r112;
	.loc	1 97 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:97:20
	add.f32 	%f76, %f74, %f75;
	.loc	1 98 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:98:20
	// begin inline asm
	div.full.f32 %r115, %r116, %r116;
	// end inline asm
	mov.b32 	%f77, %r115;
	.loc	1 99 20                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:99:20
	add.f32 	%f78, %f76, %f77;
	.loc	1 100 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:100:20
	// begin inline asm
	div.full.f32 %r118, %r119, %r119;
	// end inline asm
	mov.b32 	%f79, %r118;
	.loc	1 101 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:101:20
	add.f32 	%f80, %f78, %f79;
	.loc	1 102 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:102:20
	mov.b32 	%r123, %f80;
	// begin inline asm
	div.full.f32 %r125, %r122, %r123;
	// end inline asm
	.loc	1 103 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:103:20
	// begin inline asm
	div.full.f32 %r124, %r125, %r125;
	// end inline asm
	mov.b32 	%f81, %r124;
	.loc	1 104 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:104:20
	mul.f32 	%f82, %f81, %f4;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r176, %f82;
	shfl.sync.bfly.b32	%r177, %r176, 16, 31, -1;
	mov.b32 	%f83, %r177;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f84, %f81, %f4, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r178, %f84;
	shfl.sync.bfly.b32	%r179, %r178, 8, 31, -1;
	mov.b32 	%f85, %r179;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r180, %f86;
	shfl.sync.bfly.b32	%r181, %r180, 4, 31, -1;
	mov.b32 	%f87, %r181;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r182, %f88;
	shfl.sync.bfly.b32	%r183, %r182, 2, 31, -1;
	mov.b32 	%f89, %r183;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r184, %f90;
	shfl.sync.bfly.b32	%r185, %r184, 1, 31, -1;
	mov.b32 	%f91, %r185;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r128, %f92;
	// begin inline asm
	@%p25 st.shared.b32 [ %r46 + 0 ], %r128;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r129, [ %r49 + 0 ];
	// end inline asm
	mov.b32 	%f93, %r129;
	shfl.sync.bfly.b32	%r186, %r129, 1, 31, -1;
	mov.b32 	%f94, %r186;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f93, %f94;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r132, %f95;
	// begin inline asm
	@%p27 st.shared.b32 [ %r49 + 0 ], %r132;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f96, [global_smem];
$L__tmp8:
	.loc	1 108 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:108:20
	add.f32 	%f97, %f27, 0f00000000;
	.loc	1 109 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:109:20
	add.f32 	%f98, %f97, %f50;
	.loc	1 110 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:110:20
	add.f32 	%f99, %f98, %f73;
	.loc	1 111 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:111:20
	add.f32 	%f100, %f99, %f96;
	.loc	1 113 20                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:113:20
	mul.f32 	%f101, %f100, 0f3A83126F;
	.loc	1 114 4                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:114:4
	bar.sync 	0;
	.loc	1 115 71                        // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:115:71
	setp.eq.s32 	%p37, %r136, 0;
	mov.b32 	%r133, %f101;
	// begin inline asm
	@%p37 st.global.b32 [ %rd25 + 0 ], { %r133 };
	// end inline asm
	.loc	1 115 4                         // cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py:115:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/g2/cg2xkp7dj4jmjerzslaxrqpq7ob4lsoeks6rghab2jx3hkodm76f.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 251                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 50
.b8 120
.b8 107
.b8 112
.b8 55
.b8 100
.b8 106
.b8 52
.b8 106
.b8 109
.b8 106
.b8 101
.b8 114
.b8 122
.b8 115
.b8 108
.b8 97
.b8 120
.b8 114
.b8 113
.b8 112
.b8 113
.b8 55
.b8 111
.b8 98
.b8 52
.b8 108
.b8 115
.b8 111
.b8 101
.b8 107
.b8 115
.b8 54
.b8 114
.b8 103
.b8 104
.b8 97
.b8 98
.b8 50
.b8 106
.b8 120
.b8 51
.b8 104
.b8 107
.b8 111
.b8 100
.b8 109
.b8 55
.b8 54
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x25 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 80                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 93                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 106                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
