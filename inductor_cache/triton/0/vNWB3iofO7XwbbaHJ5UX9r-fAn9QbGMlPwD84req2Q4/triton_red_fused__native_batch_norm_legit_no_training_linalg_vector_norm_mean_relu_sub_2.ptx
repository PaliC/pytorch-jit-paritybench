//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_3,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<103>;
	.reg .f32 	%f<30>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0];
	ld.param.u64 	%rd6, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:33
	shl.b32 	%r47, %r1, 1;
	ld.param.u64 	%rd7, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2];
	.loc	1 23 44                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:44
	mov.u32 	%r48, %tid.x;
	bfe.u32 	%r49, %r48, 6, 1;
	and.b32  	%r50, %r48, 31;
	and.b32  	%r51, %r48, 1;
	.loc	1 23 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:23
	or.b32  	%r52, %r47, %r49;
	or.b32  	%r53, %r47, %r51;
	.loc	1 25 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:25:33
	shl.b32 	%r54, %r48, 2;
	and.b32  	%r55, %r54, 252;
	and.b32  	%r56, %r48, 127;
	.loc	1 27 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:27:19
	bfe.s32 	%r57, %r1, 30, 1;
	shr.u32 	%r58, %r57, 20;
	add.s32 	%r59, %r47, %r58;
	.loc	1 26 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:26:19
	and.b32  	%r60, %r59, -4096;
	sub.s32 	%r61, %r47, %r60;
	.loc	1 27 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:27:19
	add.s32 	%r62, %r52, %r58;
	shr.s32 	%r63, %r62, 12;
	.loc	1 25 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:25:33
	shl.b32 	%r64, %r56, 12;
	.loc	1 34 57                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:57
	shl.b32 	%r65, %r59, 8;
	and.b32  	%r66, %r65, -1048576;
	.loc	1 34 39                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:39
	add.s32 	%r67, %r66, %r61;
	.loc	1 34 49                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:49
	add.s32 	%r68, %r67, %r64;
	add.s32 	%r69, %r68, 524288;
	.loc	1 34 34                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:34
	mul.wide.s32 	%rd8, %r68, 4;
	add.s64 	%rd1, %rd5, %rd8;
	mul.wide.s32 	%rd9, %r69, 4;
	add.s64 	%rd2, %rd5, %rd9;
	mov.b32 	%r4, 0;
	mov.pred 	%p1, -1;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r11, %r13 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r4;
	@!%p1 mov.u32 %r13, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r15, %r17 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r15, %r4;
	@!%p1 mov.u32 %r17, %r4;
	// end inline asm
	shl.b32 	%r70, %r56, 2;
	mov.u32 	%r71, global_smem;
	add.s32 	%r10, %r71, %r70;
	// begin inline asm
	@%p1 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 1040;
	// begin inline asm
	@%p1 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 512;
	// begin inline asm
	@%p1 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 1552;
	// begin inline asm
	@%p1 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r72, %r48, 2;
	and.b32  	%r73, %r72, 16;
	add.s32 	%r74, %r71, %r73;
	shl.b32 	%r75, %r48, 4;
	and.b32  	%r76, %r75, 2032;
	add.s32 	%r77, %r74, %r76;
	.loc	1 35 43                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:43
	shl.b32 	%r78, %r63, 8;
	.loc	1 35 39                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:39
	or.b32  	%r79, %r78, %r55;
	.loc	1 35 34                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:34
	mul.wide.s32 	%rd10, %r79, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	ld.shared.v4.f32 	{%f1, %f2, %f3, %f4}, [%r77];
	.loc	1 35 48                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:48
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r30, %r33, %r36 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r27, %r4;
	@!%p1 mov.u32 %r30, %r4;
	@!%p1 mov.u32 %r33, %r4;
	@!%p1 mov.u32 %r36, %r4;
	// end inline asm
	mov.b32 	%r28, 1166016512;
	.loc	1 37 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:37:22
	// begin inline asm
	div.full.f32 %r26, %r27, %r28;
	// end inline asm
	mov.b32 	%f5, %r26;
	// begin inline asm
	div.full.f32 %r29, %r30, %r28;
	// end inline asm
	mov.b32 	%f6, %r29;
	// begin inline asm
	div.full.f32 %r32, %r33, %r28;
	// end inline asm
	mov.b32 	%f7, %r32;
	// begin inline asm
	div.full.f32 %r35, %r36, %r28;
	// end inline asm
	mov.b32 	%f8, %r35;
	.loc	1 38 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:38:22
	sub.f32 	%f9, %f1, %f5;
	sub.f32 	%f10, %f2, %f6;
	sub.f32 	%f11, %f4, %f8;
	sub.f32 	%f12, %f3, %f7;
	.loc	1 39 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:39:22
	mul.f32 	%f13, %f10, %f10;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f14, %f9, %f9, %f13;
	fma.rn.f32 	%f15, %f12, %f12, %f14;
	fma.rn.f32 	%f16, %f11, %f11, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f16;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f17, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f18;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f19, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f20;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f21, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f22;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f23, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f24;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f25, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r50, 0;
	shr.u32 	%r90, %r48, 3;
	and.b32  	%r91, %r90, 4;
	shl.b32 	%r92, %r49, 3;
	or.b32  	%r93, %r92, %r91;
	add.s32 	%r38, %r71, %r93;
	mov.b32 	%r39, %f26;
	// begin inline asm
	@%p16 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r48, 4;
	add.s32 	%r41, %r71, %r54;
	// begin inline asm
	@%p17 ld.shared.b32 %r40, [ %r41 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r40;
	shfl.sync.bfly.b32	%r94, %r40, 1, 31, -1;
	mov.b32 	%f28, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p21, %r51, 0;
	and.pred  	%p18, %p17, %p21;
	mov.b32 	%r43, %f29;
	// begin inline asm
	@%p18 st.shared.b32 [ %r41 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r95, %r71, %r92;
	ld.shared.u32 	%r45, [%r95];
$L__tmp2:
	.loc	1 43 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:43:28
	bar.sync 	0;
	shl.b32 	%r96, %r49, 2;
	sub.s32 	%r44, %r95, %r96;
	// begin inline asm
	@%p1 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r97, %r51, 2;
	add.s32 	%r98, %r71, %r97;
	ld.shared.u32 	%r46, [%r98];
	.loc	1 44 25                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:25
	mul.wide.s32 	%rd11, %r53, 4;
	add.s64 	%rd4, %rd7, %rd11;
	.loc	1 44 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:36
	bfe.u32 	%r99, %r48, 1, 4;
	shr.u32 	%r100, %r48, 1;
	and.b32  	%r101, %r100, 48;
	or.b32  	%r102, %r101, %r99;
	setp.eq.s32 	%p20, %r102, 0;
	// begin inline asm
	@%p20 st.global.b32 [ %rd4 + 0 ], { %r46 };
	// end inline asm
	.loc	1 44 4                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y5/cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 233                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 53
.b8 105
.b8 99
.b8 108
.b8 106
.b8 109
.b8 51
.b8 115
.b8 102
.b8 121
.b8 98
.b8 104
.b8 51
.b8 121
.b8 115
.b8 112
.b8 107
.b8 116
.b8 113
.b8 53
.b8 110
.b8 110
.b8 101
.b8 103
.b8 117
.b8 108
.b8 111
.b8 109
.b8 110
.b8 52
.b8 108
.b8 100
.b8 108
.b8 111
.b8 116
.b8 111
.b8 116
.b8 122
.b8 99
.b8 120
.b8 117
.b8 119
.b8 107
.b8 112
.b8 112
.b8 109
.b8 99
.b8 113
.b8 97
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xbe:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
