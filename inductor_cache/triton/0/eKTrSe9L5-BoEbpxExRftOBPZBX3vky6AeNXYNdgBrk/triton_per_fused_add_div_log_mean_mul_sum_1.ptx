//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_log_mean_mul_sum_1 // -- Begin function triton_per_fused_add_div_log_mean_mul_sum_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_div_log_mean_mul_sum_1
.visible .entry triton_per_fused_add_div_log_mean_mul_sum_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_log_mean_mul_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_log_mean_mul_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_log_mean_mul_sum_1_param_2,
	.param .u32 triton_per_fused_add_div_log_mean_mul_sum_1_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<40>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:19:0

// %bb.0:
	ld.param.u64 	%rd16, [triton_per_fused_add_div_log_mean_mul_sum_1_param_0];
$L__tmp0:
	.loc	1 26 34                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd12, [triton_per_fused_add_div_log_mean_mul_sum_1_param_1];
	and.b32  	%r21, %r1, 15;
	ld.param.u64 	%rd13, [triton_per_fused_add_div_log_mean_mul_sum_1_param_2];
	.loc	1 32 32                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:32:32
	and.b32  	%r22, %r1, 12;
	.loc	1 31 30                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:31:30
	mul.wide.u32 	%rd14, %r21, 4;
	add.s64 	%rd2, %rd12, %rd14;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:31:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r2;
	.loc	1 32 30                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:32:30
	mul.wide.u32 	%rd15, %r22, 4;
	add.s64 	%rd3, %rd12, %rd15;
	.loc	1 32 37                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:32:37
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 33 30                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:33:30
	add.s64 	%rd4, %rd3, 4;
	.loc	1 33 41                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:33:41
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 34 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:34:31
	add.s64 	%rd5, %rd3, 8;
	.loc	1 34 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:34:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:35:31
	add.s64 	%rd6, %rd3, 12;
	.loc	1 35 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:35:42
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:36:31
	add.s64 	%rd7, %rd13, %rd14;
	.loc	1 36 36                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:36:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 37 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:37:31
	add.s64 	%rd8, %rd13, %rd15;
	.loc	1 37 38                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:37:38
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 38 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:38:31
	add.s64 	%rd9, %rd8, 4;
	.loc	1 38 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:38:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 39 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:39:31
	add.s64 	%rd10, %rd8, 8;
	.loc	1 39 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:39:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 40 31                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:40:31
	add.s64 	%rd11, %rd8, 12;
	.loc	1 40 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:40:42
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 42 18                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:42:18
	add.f32 	%f8, %f6, 0f3F800000;
	.loc	1 44 18                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:44:18
	mul.f32 	%f9, %f8, 0f3F000000;
	.loc	1 32 37                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:32:37
	mov.b32 	%f10, %r4;
	mov.b32 	%f11, %r3;
	.loc	1 45 18                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:45:18
	add.f32 	%f12, %f11, 0f3F800000;
	add.f32 	%f13, %f10, 0f3F800000;
	.loc	1 46 18                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:46:18
	mul.f32 	%f14, %f13, 0f3F000000;
	.loc	1 49 19                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:49:19
	fma.rn.f32 	%f15, %f12, 0f3F000000, %f14;
	.loc	1 34 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:34:42
	mov.b32 	%f16, %r5;
	mov.b32 	%f17, %r6;
	.loc	1 50 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:50:20
	add.f32 	%f18, %f17, 0f3F800000;
	add.f32 	%f19, %f16, 0f3F800000;
	.loc	1 52 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:52:20
	fma.rn.f32 	%f20, %f19, 0f3F000000, %f15;
	.loc	1 55 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:55:20
	fma.rn.f32 	%f21, %f18, 0f3F000000, %f20;
	.loc	1 56 19                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:56:19
	mov.b32 	%r14, %f21;
	mov.b32 	%r13, %f9;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f1, %r12;
	.loc	1 58 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:58:20
	add.f32 	%f22, %f1, 0f33D6BF95;
	.loc	1 59 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:59:20
	add.f32 	%f23, %f7, 0f3F800000;
	.loc	1 60 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:60:20
	mul.f32 	%f24, %f23, 0f3F000000;
	.loc	1 37 38                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:37:38
	mov.b32 	%f25, %r9;
	mov.b32 	%f26, %r8;
	.loc	1 61 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:61:20
	add.f32 	%f27, %f26, 0f3F800000;
	add.f32 	%f28, %f25, 0f3F800000;
	.loc	1 62 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:62:20
	mul.f32 	%f29, %f28, 0f3F000000;
	.loc	1 65 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:65:20
	fma.rn.f32 	%f30, %f27, 0f3F000000, %f29;
	.loc	1 39 42                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:39:42
	mov.b32 	%f31, %r10;
	mov.b32 	%f32, %r11;
	.loc	1 66 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:66:20
	add.f32 	%f33, %f32, 0f3F800000;
	add.f32 	%f34, %f31, 0f3F800000;
	.loc	1 68 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:68:20
	fma.rn.f32 	%f35, %f34, 0f3F000000, %f30;
	.loc	1 71 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:71:20
	fma.rn.f32 	%f36, %f33, 0f3F000000, %f35;
	.loc	1 72 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:72:20
	mov.b32 	%r17, %f36;
	mov.b32 	%r16, %f24;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f37, %r15;
	.loc	1 73 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:73:20
	add.f32 	%f38, %f37, 0f33D6BF95;
	.loc	1 74 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:74:20
	mov.b32 	%r19, %f22;
	mov.b32 	%r20, %f38;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f39, %r18;
	.loc	1 75 24                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:75:24
	setp.lt.f32 	%p11, %f39, 0f00800000;
	mul.f32 	%f40, %f39, 0f4B000000;
	selp.f32 	%f2, %f40, %f39, %p11;
	selp.f32 	%f41, 0fC1B80000, 0f00000000, %p11;
	mov.b32 	%r23, %f2;
	add.s32 	%r24, %r23, -1059760811;
	and.b32  	%r25, %r24, -8388608;
	sub.s32 	%r26, %r23, %r25;
	mov.b32 	%f42, %r26;
	cvt.rn.f32.s32 	%f43, %r25;
	mov.f32 	%f44, 0f34000000;
	fma.rn.ftz.f32 	%f45, %f43, %f44, %f41;
	add.f32 	%f46, %f42, 0fBF800000;
	mov.f32 	%f47, 0f3E1039F6;
	mov.f32 	%f48, 0fBE055027;
	fma.rn.ftz.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f51, %f49, %f46, %f50;
	mov.f32 	%f52, 0f3E0F2955;
	fma.rn.ftz.f32 	%f53, %f51, %f46, %f52;
	mov.f32 	%f54, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f55, %f53, %f46, %f54;
	mov.f32 	%f56, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f57, %f55, %f46, %f56;
	mov.f32 	%f58, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f59, %f57, %f46, %f58;
	mov.f32 	%f60, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f61, %f59, %f46, %f60;
	mov.f32 	%f62, 0fBF000000;
	fma.rn.ftz.f32 	%f63, %f61, %f46, %f62;
	mul.f32 	%f64, %f46, %f63;
	fma.rn.ftz.f32 	%f65, %f64, %f46, %f46;
	mov.f32 	%f66, 0f3F317218;
	fma.rn.ftz.f32 	%f78, %f45, %f66, %f65;
	setp.lt.u32 	%p12, %r23, 2139095040;
	@%p12 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:0:24
	mov.f32 	%f67, 0f7F800000;
	fma.rn.ftz.f32 	%f78, %f2, %f67, %f67;
$L__BB0_2:                              // %__nv_logf.exit
	.loc	1 75 24                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:75:24
	setp.eq.f32 	%p14, %f2, 0f00000000;
	selp.f32 	%f68, 0fFF800000, %f78, %p14;
	.loc	1 76 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:76:20
	mul.f32 	%f69, %f1, %f68;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r31, %f69;
	shfl.sync.bfly.b32	%r32, %r31, 8, 31, -1;
	mov.b32 	%f70, %r32;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f71, %f1, %f68, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f71;
	shfl.sync.bfly.b32	%r34, %r33, 4, 31, -1;
	mov.b32 	%f72, %r34;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f73;
	shfl.sync.bfly.b32	%r36, %r35, 2, 31, -1;
	mov.b32 	%f74, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f75;
	shfl.sync.bfly.b32	%r38, %r37, 1, 31, -1;
	mov.b32 	%f76, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
$L__tmp2:
	.loc	1 80 20                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:80:20
	mov.b32 	%r28, %f77;
	mov.b32 	%r29, 1098907648;
	// begin inline asm
	div.full.f32 %r30, %r28, %r29;
	// end inline asm
	.loc	1 81 4                          // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:81:4
	bar.sync 	0;
	.loc	1 82 71                         // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:82:71
	and.b32  	%r39, %r1, 63;
	setp.eq.s32 	%p13, %r39, 0;
	// begin inline asm
	@%p13 st.global.b32 [ %rd16 + 0 ], { %r30 };
	// end inline asm
	.loc	1 82 4                          // c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py:82:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 188                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 116
.b8 120
.b8 110
.b8 117
.b8 53
.b8 122
.b8 122
.b8 53
.b8 54
.b8 116
.b8 116
.b8 101
.b8 112
.b8 55
.b8 105
.b8 102
.b8 104
.b8 107
.b8 111
.b8 113
.b8 97
.b8 121
.b8 101
.b8 102
.b8 107
.b8 118
.b8 113
.b8 109
.b8 107
.b8 104
.b8 110
.b8 50
.b8 118
.b8 122
.b8 54
.b8 117
.b8 104
.b8 102
.b8 113
.b8 116
.b8 118
.b8 119
.b8 50
.b8 112
.b8 112
.b8 116
.b8 117
.b8 106
.b8 120
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x91:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 78                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
