#loc = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":19:0)
#loc1 = loc(unknown)
#loc63 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":78:26)
#loc72 = loc(callsite(#loc1 at #loc63))
module {
  tt.func public @triton_per_fused_add_div_log_mean_mul_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e-07> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<5.000000e-01> : tensor<1x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<1x16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = arith.divsi %1, %cst_6 : tensor<1x16xi32> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc5)
    %5 = tt.load %4 : tensor<1x16x!tt.ptr<f32>> loc(#loc6)
    %6 = arith.muli %2, %cst_6 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.addptr %3, %6 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %9 = arith.addi %6, %cst_5 : tensor<1x16xi32> loc(#loc10)
    %10 = tt.addptr %3, %9 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc11)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc12)
    %12 = arith.addi %6, %cst_4 : tensor<1x16xi32> loc(#loc13)
    %13 = tt.addptr %3, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc14)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %15 = arith.addi %6, %cst_3 : tensor<1x16xi32> loc(#loc16)
    %16 = tt.addptr %3, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc17)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %19 = tt.addptr %18, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc19)
    %20 = tt.load %19 : tensor<1x16x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.addptr %18, %6 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %22 = tt.load %21 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %23 = tt.addptr %18, %9 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc23)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc24)
    %25 = tt.addptr %18, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc25)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc26)
    %27 = tt.addptr %18, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc27)
    %28 = tt.load %27 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc28)
    %29 = arith.addf %5, %cst_2 : tensor<1x16xf32> loc(#loc29)
    %30 = arith.mulf %29, %cst_1 : tensor<1x16xf32> loc(#loc30)
    %31 = arith.addf %8, %cst_2 : tensor<1x16xf32> loc(#loc31)
    %32 = arith.mulf %31, %cst_1 : tensor<1x16xf32> loc(#loc32)
    %33 = arith.addf %11, %cst_2 : tensor<1x16xf32> loc(#loc33)
    %34 = arith.mulf %33, %cst_1 : tensor<1x16xf32> loc(#loc34)
    %35 = arith.addf %32, %34 : tensor<1x16xf32> loc(#loc35)
    %36 = arith.addf %14, %cst_2 : tensor<1x16xf32> loc(#loc36)
    %37 = arith.mulf %36, %cst_1 : tensor<1x16xf32> loc(#loc37)
    %38 = arith.addf %35, %37 : tensor<1x16xf32> loc(#loc38)
    %39 = arith.addf %17, %cst_2 : tensor<1x16xf32> loc(#loc39)
    %40 = arith.mulf %39, %cst_1 : tensor<1x16xf32> loc(#loc40)
    %41 = arith.addf %38, %40 : tensor<1x16xf32> loc(#loc41)
    %42 = arith.divf %30, %41 : tensor<1x16xf32> loc(#loc42)
    %43 = arith.addf %42, %cst_0 : tensor<1x16xf32> loc(#loc43)
    %44 = arith.addf %20, %cst_2 : tensor<1x16xf32> loc(#loc44)
    %45 = arith.mulf %44, %cst_1 : tensor<1x16xf32> loc(#loc45)
    %46 = arith.addf %22, %cst_2 : tensor<1x16xf32> loc(#loc46)
    %47 = arith.mulf %46, %cst_1 : tensor<1x16xf32> loc(#loc47)
    %48 = arith.addf %24, %cst_2 : tensor<1x16xf32> loc(#loc48)
    %49 = arith.mulf %48, %cst_1 : tensor<1x16xf32> loc(#loc49)
    %50 = arith.addf %47, %49 : tensor<1x16xf32> loc(#loc50)
    %51 = arith.addf %26, %cst_2 : tensor<1x16xf32> loc(#loc51)
    %52 = arith.mulf %51, %cst_1 : tensor<1x16xf32> loc(#loc52)
    %53 = arith.addf %50, %52 : tensor<1x16xf32> loc(#loc53)
    %54 = arith.addf %28, %cst_2 : tensor<1x16xf32> loc(#loc54)
    %55 = arith.mulf %54, %cst_1 : tensor<1x16xf32> loc(#loc55)
    %56 = arith.addf %53, %55 : tensor<1x16xf32> loc(#loc56)
    %57 = arith.divf %45, %56 : tensor<1x16xf32> loc(#loc57)
    %58 = arith.addf %57, %cst_0 : tensor<1x16xf32> loc(#loc58)
    %59 = arith.divf %43, %58 : tensor<1x16xf32> loc(#loc59)
    %60 = math.log %59 : tensor<1x16xf32> loc(#loc60)
    %61 = arith.mulf %42, %60 : tensor<1x16xf32> loc(#loc61)
    %62 = "tt.reduce"(%61) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc63)), %arg5: f32 loc(callsite(#loc1 at #loc63))):
      %67 = arith.addf %arg4, %arg5 : f32 loc(#loc74)
      tt.reduce.return %67 : f32 loc(#loc71)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc71)
    %63 = tt.expand_dims %62 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc65)
    %64 = arith.divf %63, %cst : tensor<1x1xf32> loc(#loc66)
    gpu.barrier loc(#loc67)
    %65 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc68)
    %66 = tt.splat %65 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc68)
    tt.store %66, %64 : tensor<1x1x!tt.ptr<f32>> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":26:26)
#loc3 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":26:34)
#loc4 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":30:19)
#loc5 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":31:30)
#loc6 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":31:35)
#loc7 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":32:32)
#loc8 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":32:30)
#loc9 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":32:37)
#loc10 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":33:34)
#loc11 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":33:30)
#loc12 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":33:41)
#loc13 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":34:35)
#loc14 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":34:31)
#loc15 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":34:42)
#loc16 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":35:35)
#loc17 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":35:31)
#loc18 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":35:42)
#loc19 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":36:31)
#loc20 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":36:36)
#loc21 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":37:31)
#loc22 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":37:38)
#loc23 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":38:31)
#loc24 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":38:42)
#loc25 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":39:31)
#loc26 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":39:42)
#loc27 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":40:31)
#loc28 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":40:42)
#loc29 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":42:18)
#loc30 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":44:18)
#loc31 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":45:18)
#loc32 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":46:18)
#loc33 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":47:18)
#loc34 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":48:19)
#loc35 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":49:19)
#loc36 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":50:20)
#loc37 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":51:20)
#loc38 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":52:20)
#loc39 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":53:20)
#loc40 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":54:20)
#loc41 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":55:20)
#loc42 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":56:19)
#loc43 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":58:20)
#loc44 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":59:20)
#loc45 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":60:20)
#loc46 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":61:20)
#loc47 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":62:20)
#loc48 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":63:20)
#loc49 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":64:20)
#loc50 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":65:20)
#loc51 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":66:20)
#loc52 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":67:20)
#loc53 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":68:20)
#loc54 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":69:20)
#loc55 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":70:20)
#loc56 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":71:20)
#loc57 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":72:20)
#loc58 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":73:20)
#loc59 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":74:20)
#loc60 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":75:24)
#loc61 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":76:20)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc65 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":78:29)
#loc66 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":80:20)
#loc67 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":81:4)
#loc68 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":82:28)
#loc69 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":82:71)
#loc70 = loc("inductor_cache/7t/c7txnu5zz56ttep7ifhkoqayefkvqmkhn2vz6uhfqtvw2pptujxw.py":82:4)
#loc71 = loc(callsite(#loc62 at #loc63))
#loc73 = loc(callsite(#loc64 at #loc62))
#loc74 = loc(callsite(#loc73 at #loc63))
