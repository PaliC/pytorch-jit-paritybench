#loc = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":38:57)
#loc17 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":40:58)
#loc26 = loc(callsite(#loc1 at #loc13))
#loc30 = loc(callsite(#loc1 at #loc17))
module {
  tt.func public @triton_per_fused_abs_add_div_mul_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.addptr %7, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %10 = arith.subf %3, %6 : tensor<256xf32> loc(#loc9)
    %11 = math.absf %10 : tensor<256xf32> loc(#loc10)
    %12 = arith.mulf %11, %9 : tensor<256xf32> loc(#loc11)
    %13 = "tt.reduce"(%12) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc13)), %arg6: f32 loc(callsite(#loc1 at #loc13))):
      %22 = arith.addf %arg5, %arg6 : f32 loc(#loc32)
      tt.reduce.return %22 : f32 loc(#loc25)
    }) : (tensor<256xf32>) -> f32 loc(#loc25)
    %14 = arith.addf %13, %cst_0 : f32 loc(#loc28)
    %15 = "tt.reduce"(%9) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc17)), %arg6: f32 loc(callsite(#loc1 at #loc17))):
      %22 = arith.addf %arg5, %arg6 : f32 loc(#loc33)
      tt.reduce.return %22 : f32 loc(#loc29)
    }) : (tensor<256xf32>) -> f32 loc(#loc29)
    %16 = arith.addf %15, %cst_0 : f32 loc(#loc31)
    %17 = arith.addf %16, %cst : f32 loc(#loc19)
    %18 = arith.divf %14, %17 : f32 loc(#loc20)
    %19 = tt.splat %18 : f32 -> tensor<1xf32> loc(#loc20)
    gpu.barrier loc(#loc21)
    %20 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc22)
    tt.store %21, %19 : tensor<1x!tt.ptr<f32>> loc(#loc23)
    tt.return loc(#loc24)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":27:26)
#loc3 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":31:30)
#loc4 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":31:35)
#loc5 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":32:30)
#loc6 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":32:35)
#loc7 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":33:30)
#loc8 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":33:35)
#loc9 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":34:18)
#loc10 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":35:23)
#loc11 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":36:18)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc16 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":38:44)
#loc18 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":40:45)
#loc19 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":42:20)
#loc20 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":43:19)
#loc21 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":44:4)
#loc22 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":45:28)
#loc23 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":45:63)
#loc24 = loc("inductor_cache/2s/c2svdbngrxzn7t5axm63repbyzzldf7d4lcmk42mbcpq7sf57dt7.py":45:4)
#loc25 = loc(callsite(#loc12 at #loc13))
#loc27 = loc(callsite(#loc14 at #loc12))
#loc28 = loc(callsite(#loc15 at #loc16))
#loc29 = loc(callsite(#loc12 at #loc17))
#loc31 = loc(callsite(#loc15 at #loc18))
#loc32 = loc(callsite(#loc27 at #loc13))
#loc33 = loc(callsite(#loc27 at #loc17))
