//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_tanh_0 // -- Begin function triton_poi_fused_add_tanh_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_tanh_0
.visible .entry triton_poi_fused_add_tanh_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_tanh_0_param_2,
	.param .u32 triton_poi_fused_add_tanh_0_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<39>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_add_tanh_0_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_add_tanh_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:21:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:21:33
	shl.b32 	%r15, %r8, 6;
	ld.param.u64 	%rd7, [triton_poi_fused_add_tanh_0_param_2];
	.loc	1 22 36                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:22:36
	mov.u32 	%r16, %tid.x;
	shl.b32 	%r17, %r16, 1;
	and.b32  	%r18, %r17, 62;
	.loc	1 22 23                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:22:23
	or.b32  	%r1, %r15, %r18;
	.loc	1 23 21                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:23:21
	setp.lt.s32 	%p1, %r1, 64;
	.loc	1 25 19                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:25:19
	bfe.s32 	%r19, %r8, 25, 1;
	shr.u32 	%r20, %r19, 30;
	add.s32 	%r21, %r1, %r20;
	and.b32  	%r22, %r21, -4;
	sub.s32 	%r23, %r1, %r22;
	.loc	1 26 19                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:26:19
	shr.u32 	%r24, %r19, 28;
	add.s32 	%r25, %r1, %r24;
	shr.s32 	%r26, %r25, 4;
	.loc	1 27 34                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:27:34
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd11, %rd5, %rd8;
	.loc	1 27 39                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:27:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.v2.b32 { %r9, %r10 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	mov.b32 	%f6, %r10;
	.loc	1 28 37                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:28:37
	shl.b32 	%r27, %r26, 2;
	.loc	1 28 35                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:28:35
	add.s32 	%r28, %r27, %r23;
	.loc	1 28 30                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:28:30
	mul.wide.s32 	%rd9, %r28, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 28 42                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:28:42
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r12;
	.loc	1 29 30                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:29:30
	mul.wide.s32 	%rd10, %r23, 4;
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 29 35                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:29:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r14;
	.loc	1 30 18                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:30:18
	add.f32 	%f11, %f7, %f9;
	add.f32 	%f12, %f8, %f10;
	.loc	1 31 18                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:31:18
	add.f32 	%f1, %f11, %f5;
	add.f32 	%f2, %f12, %f6;
	.loc	1 32 26                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:32:26
	abs.ftz.f32 	%f3, %f1;
	setp.ltu.f32 	%p4, %f3, 0f3F19999A;
	mov.f32 	%f51, 0f3F800000;
	mov.f32 	%f52, 0fC0000000;
	mov.f32 	%f53, 0fBD563CAE;
	mov.f32 	%f54, 0f3C80F082;
	mov.f32 	%f55, 0f3E085941;
	mov.f32 	%f56, 0fBEAAA9ED;
	mov.f32 	%f57, 0f00000000;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f21, %f1, %f1;
	fma.rn.ftz.f32 	%f24, %f54, %f21, %f53;
	fma.rn.ftz.f32 	%f26, %f24, %f21, %f55;
	fma.rn.ftz.f32 	%f28, %f26, %f21, %f56;
	fma.rn.ftz.f32 	%f30, %f28, %f21, %f57;
	fma.rn.ftz.f32 	%f31, %f30, %f1, %f1;
	.loc	1 33 39                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:33:39
	mov.b32 	%r37, %f31;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	.loc	1 32 26                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:32:26
	mul.f32 	%f15, %f3, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f16, %f15;
	add.f32 	%f14, %f16, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f13,%f14;
	// end inline asm
	fma.rn.ftz.f32 	%f19, %f13, %f52, %f51;
	setp.ge.f32 	%p5, %f3, 0f41102CB4;
	selp.f32 	%f20, 0f3F800000, %f19, %p5;
	mov.b32 	%r29, %f20;
	mov.b32 	%r30, %f1;
	and.b32  	%r31, %r30, -2147483648;
	or.b32  	%r37, %r31, %r29;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 32 26                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:32:26
	abs.ftz.f32 	%f4, %f2;
	setp.ltu.f32 	%p6, %f4, 0f3F19999A;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f40, %f2, %f2;
	fma.rn.ftz.f32 	%f43, %f54, %f40, %f53;
	fma.rn.ftz.f32 	%f45, %f43, %f40, %f55;
	fma.rn.ftz.f32 	%f47, %f45, %f40, %f56;
	fma.rn.ftz.f32 	%f49, %f47, %f40, %f57;
	fma.rn.ftz.f32 	%f50, %f49, %f2, %f2;
	.loc	1 33 39                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:33:39
	mov.b32 	%r38, %f50;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	.loc	1 32 26                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:32:26
	mul.f32 	%f34, %f4, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f35, %f34;
	add.f32 	%f33, %f35, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f32,%f33;
	// end inline asm
	fma.rn.ftz.f32 	%f38, %f32, %f52, %f51;
	setp.ge.f32 	%p7, %f4, 0f41102CB4;
	selp.f32 	%f39, 0f3F800000, %f38, %p7;
	mov.b32 	%r32, %f39;
	mov.b32 	%r33, %f2;
	and.b32  	%r34, %r33, -2147483648;
	or.b32  	%r38, %r34, %r32;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 33 39                         // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:33:39
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r37, %r38 };
	// end inline asm
	.loc	1 33 4                          // cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/d3/cd3ft4gc7nntcoe4r56rn3igeedktmwtwpnmxeqj7mehst7bg5gp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 51
.b8 102
.b8 116
.b8 52
.b8 103
.b8 99
.b8 55
.b8 110
.b8 110
.b8 116
.b8 99
.b8 111
.b8 101
.b8 52
.b8 114
.b8 53
.b8 54
.b8 114
.b8 110
.b8 51
.b8 105
.b8 103
.b8 101
.b8 101
.b8 100
.b8 107
.b8 116
.b8 109
.b8 119
.b8 116
.b8 119
.b8 112
.b8 110
.b8 109
.b8 120
.b8 101
.b8 113
.b8 106
.b8 55
.b8 109
.b8 101
.b8 104
.b8 115
.b8 116
.b8 55
.b8 98
.b8 103
.b8 53
.b8 103
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
