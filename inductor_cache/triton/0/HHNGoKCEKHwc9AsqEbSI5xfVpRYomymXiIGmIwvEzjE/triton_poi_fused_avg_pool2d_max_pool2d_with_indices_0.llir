; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 16, !dbg !12
  %9 = and i32 %7, 15, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 16, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl i32 %10, 4, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %11) #1, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = or disjoint i32 %14, 1, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = or disjoint i32 %14, 2, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %11) #1, !dbg !25
  %28 = bitcast i32 %27 to float, !dbg !25
  %29 = or disjoint i32 %14, 3, !dbg !26
  %30 = sext i32 %29 to i64, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #1, !dbg !28
  %33 = bitcast i32 %32 to float, !dbg !28
  %34 = or disjoint i32 %14, 4, !dbg !29
  %35 = sext i32 %34 to i64, !dbg !30
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !30
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %11) #1, !dbg !31
  %38 = bitcast i32 %37 to float, !dbg !31
  %39 = or disjoint i32 %14, 5, !dbg !32
  %40 = sext i32 %39 to i64, !dbg !33
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !33
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %11) #1, !dbg !34
  %43 = bitcast i32 %42 to float, !dbg !34
  %44 = or disjoint i32 %14, 6, !dbg !35
  %45 = sext i32 %44 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !36
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %11) #1, !dbg !37
  %48 = bitcast i32 %47 to float, !dbg !37
  %49 = or disjoint i32 %14, 7, !dbg !38
  %50 = sext i32 %49 to i64, !dbg !39
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !39
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %11) #1, !dbg !40
  %53 = bitcast i32 %52 to float, !dbg !40
  %54 = or disjoint i32 %14, 8, !dbg !41
  %55 = sext i32 %54 to i64, !dbg !42
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !42
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %11) #1, !dbg !43
  %58 = bitcast i32 %57 to float, !dbg !43
  %59 = or disjoint i32 %14, 9, !dbg !44
  %60 = sext i32 %59 to i64, !dbg !45
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !45
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 %11) #1, !dbg !46
  %63 = bitcast i32 %62 to float, !dbg !46
  %64 = or disjoint i32 %14, 10, !dbg !47
  %65 = sext i32 %64 to i64, !dbg !48
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !48
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 %11) #1, !dbg !49
  %68 = bitcast i32 %67 to float, !dbg !49
  %69 = or disjoint i32 %14, 11, !dbg !50
  %70 = sext i32 %69 to i64, !dbg !51
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !51
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 %11) #1, !dbg !52
  %73 = bitcast i32 %72 to float, !dbg !52
  %74 = or disjoint i32 %14, 12, !dbg !53
  %75 = sext i32 %74 to i64, !dbg !54
  %76 = getelementptr float, ptr addrspace(1) %0, i64 %75, !dbg !54
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %76, i1 %11) #1, !dbg !55
  %78 = bitcast i32 %77 to float, !dbg !55
  %79 = or disjoint i32 %14, 13, !dbg !56
  %80 = sext i32 %79 to i64, !dbg !57
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !57
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 %11) #1, !dbg !58
  %83 = bitcast i32 %82 to float, !dbg !58
  %84 = or disjoint i32 %14, 14, !dbg !59
  %85 = sext i32 %84 to i64, !dbg !60
  %86 = getelementptr float, ptr addrspace(1) %0, i64 %85, !dbg !60
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %86, i1 %11) #1, !dbg !61
  %88 = bitcast i32 %87 to float, !dbg !61
  %89 = or disjoint i32 %14, 15, !dbg !62
  %90 = sext i32 %89 to i64, !dbg !63
  %91 = getelementptr float, ptr addrspace(1) %0, i64 %90, !dbg !63
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %91, i1 %11) #1, !dbg !64
  %93 = bitcast i32 %92 to float, !dbg !64
  %94 = fcmp ogt float %23, %18, !dbg !65
  %95 = fcmp uno float %23, 0.000000e+00, !dbg !69
  %96 = or i1 %94, %95, !dbg !70
  %97 = select i1 %96, float %23, float %18, !dbg !71
  %98 = fcmp olt float %97, %28, !dbg !72
  %99 = fcmp uno float %28, 0.000000e+00, !dbg !74
  %100 = or i1 %99, %98, !dbg !75
  %101 = select i1 %100, float %28, float %97, !dbg !76
  %102 = fcmp olt float %101, %33, !dbg !77
  %103 = fcmp uno float %33, 0.000000e+00, !dbg !79
  %104 = or i1 %103, %102, !dbg !80
  %105 = select i1 %104, float %33, float %101, !dbg !81
  %106 = fcmp olt float %105, %38, !dbg !82
  %107 = fcmp uno float %38, 0.000000e+00, !dbg !84
  %108 = or i1 %107, %106, !dbg !85
  %109 = select i1 %108, float %38, float %105, !dbg !86
  %110 = fcmp olt float %109, %43, !dbg !87
  %111 = fcmp uno float %43, 0.000000e+00, !dbg !89
  %112 = or i1 %111, %110, !dbg !90
  %113 = select i1 %112, float %43, float %109, !dbg !91
  %114 = fcmp olt float %113, %48, !dbg !92
  %115 = fcmp uno float %48, 0.000000e+00, !dbg !94
  %116 = or i1 %115, %114, !dbg !95
  %117 = select i1 %116, float %48, float %113, !dbg !96
  %118 = fcmp olt float %117, %53, !dbg !97
  %119 = fcmp uno float %53, 0.000000e+00, !dbg !99
  %120 = or i1 %119, %118, !dbg !100
  %121 = select i1 %120, float %53, float %117, !dbg !101
  %122 = fcmp olt float %121, %58, !dbg !102
  %123 = fcmp uno float %58, 0.000000e+00, !dbg !104
  %124 = or i1 %123, %122, !dbg !105
  %125 = select i1 %124, float %58, float %121, !dbg !106
  %126 = fcmp olt float %125, %63, !dbg !107
  %127 = fcmp uno float %63, 0.000000e+00, !dbg !109
  %128 = or i1 %127, %126, !dbg !110
  %129 = select i1 %128, float %63, float %125, !dbg !111
  %130 = fcmp olt float %129, %68, !dbg !112
  %131 = fcmp uno float %68, 0.000000e+00, !dbg !114
  %132 = or i1 %131, %130, !dbg !115
  %133 = select i1 %132, float %68, float %129, !dbg !116
  %134 = fcmp olt float %133, %73, !dbg !117
  %135 = fcmp uno float %73, 0.000000e+00, !dbg !119
  %136 = or i1 %135, %134, !dbg !120
  %137 = select i1 %136, float %73, float %133, !dbg !121
  %138 = fcmp olt float %137, %78, !dbg !122
  %139 = fcmp uno float %78, 0.000000e+00, !dbg !124
  %140 = or i1 %139, %138, !dbg !125
  %141 = select i1 %140, float %78, float %137, !dbg !126
  %142 = fcmp olt float %141, %83, !dbg !127
  %143 = fcmp uno float %83, 0.000000e+00, !dbg !129
  %144 = or i1 %143, %142, !dbg !130
  %145 = select i1 %144, float %83, float %141, !dbg !131
  %146 = fcmp olt float %145, %88, !dbg !132
  %147 = fcmp uno float %88, 0.000000e+00, !dbg !134
  %148 = or i1 %147, %146, !dbg !135
  %149 = select i1 %148, float %88, float %145, !dbg !136
  %150 = fcmp olt float %149, %93, !dbg !137
  %151 = fcmp uno float %93, 0.000000e+00, !dbg !139
  %152 = or i1 %151, %150, !dbg !140
  %153 = fadd float %18, %23, !dbg !141
  %154 = fadd float %153, %28, !dbg !142
  %155 = fadd float %154, %33, !dbg !143
  %156 = fadd float %155, %38, !dbg !144
  %157 = fadd float %156, %43, !dbg !145
  %158 = fadd float %157, %48, !dbg !146
  %159 = fadd float %158, %53, !dbg !147
  %160 = fadd float %159, %58, !dbg !148
  %161 = fadd float %160, %63, !dbg !149
  %162 = fadd float %161, %68, !dbg !150
  %163 = fadd float %162, %73, !dbg !151
  %164 = fadd float %163, %78, !dbg !152
  %165 = fadd float %164, %83, !dbg !153
  %166 = fadd float %165, %88, !dbg !154
  %167 = fadd float %166, %93, !dbg !155
  %168 = fmul float %167, 6.250000e-02, !dbg !156
  %169 = shl i32 %12, 3, !dbg !157
  %170 = add i32 %169, %.decomposed, !dbg !158
  %171 = sext i32 %170 to i64, !dbg !159
  %172 = getelementptr float, ptr addrspace(1) %1, i64 %171, !dbg !159
  %173 = icmp eq i32 %8, 0, !dbg !160
  %174 = bitcast float %149 to i32, !dbg !160
  %175 = select i1 %152, i32 %92, i32 %174, !dbg !161
  %176 = and i1 %173, %11, !dbg !160
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %175, ptr addrspace(1) %172, i1 %176) #1, !dbg !160
  %177 = getelementptr float, ptr addrspace(1) %2, i64 %171, !dbg !162
  %178 = bitcast float %168 to i32, !dbg !163
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %178, ptr addrspace(1) %177, i1 %176) #1, !dbg !163
  ret void, !dbg !164
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py", directory: "inductor_cache/3z")
!4 = !{ptr @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 33, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 42, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 42, scope: !7)
!26 = !DILocation(line: 30, column: 34, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 42, scope: !7)
!29 = !DILocation(line: 31, column: 34, scope: !7)
!30 = !DILocation(line: 31, column: 30, scope: !7)
!31 = !DILocation(line: 31, column: 42, scope: !7)
!32 = !DILocation(line: 32, column: 34, scope: !7)
!33 = !DILocation(line: 32, column: 30, scope: !7)
!34 = !DILocation(line: 32, column: 42, scope: !7)
!35 = !DILocation(line: 33, column: 35, scope: !7)
!36 = !DILocation(line: 33, column: 31, scope: !7)
!37 = !DILocation(line: 33, column: 43, scope: !7)
!38 = !DILocation(line: 34, column: 35, scope: !7)
!39 = !DILocation(line: 34, column: 31, scope: !7)
!40 = !DILocation(line: 34, column: 43, scope: !7)
!41 = !DILocation(line: 35, column: 35, scope: !7)
!42 = !DILocation(line: 35, column: 31, scope: !7)
!43 = !DILocation(line: 35, column: 43, scope: !7)
!44 = !DILocation(line: 36, column: 35, scope: !7)
!45 = !DILocation(line: 36, column: 31, scope: !7)
!46 = !DILocation(line: 36, column: 43, scope: !7)
!47 = !DILocation(line: 37, column: 36, scope: !7)
!48 = !DILocation(line: 37, column: 31, scope: !7)
!49 = !DILocation(line: 37, column: 44, scope: !7)
!50 = !DILocation(line: 38, column: 36, scope: !7)
!51 = !DILocation(line: 38, column: 31, scope: !7)
!52 = !DILocation(line: 38, column: 44, scope: !7)
!53 = !DILocation(line: 39, column: 36, scope: !7)
!54 = !DILocation(line: 39, column: 31, scope: !7)
!55 = !DILocation(line: 39, column: 44, scope: !7)
!56 = !DILocation(line: 40, column: 36, scope: !7)
!57 = !DILocation(line: 40, column: 31, scope: !7)
!58 = !DILocation(line: 40, column: 44, scope: !7)
!59 = !DILocation(line: 41, column: 36, scope: !7)
!60 = !DILocation(line: 41, column: 31, scope: !7)
!61 = !DILocation(line: 41, column: 44, scope: !7)
!62 = !DILocation(line: 42, column: 36, scope: !7)
!63 = !DILocation(line: 42, column: 31, scope: !7)
!64 = !DILocation(line: 42, column: 44, scope: !7)
!65 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !68)
!66 = distinct !DILexicalBlockFile(scope: !7, file: !67, discriminator: 0)
!67 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!68 = !DILocation(line: 43, column: 40, scope: !7)
!69 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !68)
!70 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !68)
!71 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !68)
!72 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !73)
!73 = !DILocation(line: 44, column: 40, scope: !7)
!74 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !73)
!75 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !73)
!76 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !73)
!77 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !78)
!78 = !DILocation(line: 45, column: 40, scope: !7)
!79 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !78)
!80 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !78)
!81 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !78)
!82 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !83)
!83 = !DILocation(line: 46, column: 40, scope: !7)
!84 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !83)
!85 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !83)
!86 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !83)
!87 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !88)
!88 = !DILocation(line: 47, column: 41, scope: !7)
!89 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !88)
!90 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !88)
!91 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !88)
!92 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !93)
!93 = !DILocation(line: 48, column: 42, scope: !7)
!94 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !93)
!95 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !93)
!96 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !93)
!97 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !98)
!98 = !DILocation(line: 49, column: 42, scope: !7)
!99 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !98)
!100 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !98)
!101 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !98)
!102 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !103)
!103 = !DILocation(line: 50, column: 42, scope: !7)
!104 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !103)
!105 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !103)
!106 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !103)
!107 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !108)
!108 = !DILocation(line: 51, column: 42, scope: !7)
!109 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !108)
!110 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !108)
!111 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !108)
!112 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !113)
!113 = !DILocation(line: 52, column: 42, scope: !7)
!114 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !113)
!115 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !113)
!116 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !113)
!117 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !118)
!118 = !DILocation(line: 53, column: 42, scope: !7)
!119 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !118)
!120 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !118)
!121 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !118)
!122 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !123)
!123 = !DILocation(line: 54, column: 42, scope: !7)
!124 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !123)
!125 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !123)
!126 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !123)
!127 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !128)
!128 = !DILocation(line: 55, column: 42, scope: !7)
!129 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !128)
!130 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !128)
!131 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !128)
!132 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !133)
!133 = !DILocation(line: 56, column: 42, scope: !7)
!134 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !133)
!135 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !133)
!136 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !133)
!137 = !DILocation(line: 118, column: 15, scope: !66, inlinedAt: !138)
!138 = !DILocation(line: 57, column: 42, scope: !7)
!139 = !DILocation(line: 120, column: 21, scope: !66, inlinedAt: !138)
!140 = !DILocation(line: 120, column: 16, scope: !66, inlinedAt: !138)
!141 = !DILocation(line: 58, column: 19, scope: !7)
!142 = !DILocation(line: 59, column: 19, scope: !7)
!143 = !DILocation(line: 60, column: 19, scope: !7)
!144 = !DILocation(line: 61, column: 19, scope: !7)
!145 = !DILocation(line: 62, column: 19, scope: !7)
!146 = !DILocation(line: 63, column: 20, scope: !7)
!147 = !DILocation(line: 64, column: 20, scope: !7)
!148 = !DILocation(line: 65, column: 20, scope: !7)
!149 = !DILocation(line: 66, column: 20, scope: !7)
!150 = !DILocation(line: 67, column: 20, scope: !7)
!151 = !DILocation(line: 68, column: 20, scope: !7)
!152 = !DILocation(line: 69, column: 20, scope: !7)
!153 = !DILocation(line: 70, column: 20, scope: !7)
!154 = !DILocation(line: 71, column: 20, scope: !7)
!155 = !DILocation(line: 72, column: 20, scope: !7)
!156 = !DILocation(line: 74, column: 20, scope: !7)
!157 = !DILocation(line: 75, column: 32, scope: !7)
!158 = !DILocation(line: 75, column: 30, scope: !7)
!159 = !DILocation(line: 75, column: 25, scope: !7)
!160 = !DILocation(line: 75, column: 44, scope: !7)
!161 = !DILocation(line: 121, column: 29, scope: !66, inlinedAt: !138)
!162 = !DILocation(line: 76, column: 25, scope: !7)
!163 = !DILocation(line: 76, column: 44, scope: !7)
!164 = !DILocation(line: 76, column: 4, scope: !7)
