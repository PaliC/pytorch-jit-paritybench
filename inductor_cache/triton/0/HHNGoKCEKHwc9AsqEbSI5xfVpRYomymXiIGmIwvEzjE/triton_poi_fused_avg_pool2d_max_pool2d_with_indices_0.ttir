#loc = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":19:0), %arg1: !tt.ptr<f32> loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6.250000e-02> : tensor<16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<15> : tensor<16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<14> : tensor<16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<13> : tensor<16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<12> : tensor<16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<11> : tensor<16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<10> : tensor<16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<9> : tensor<16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<7> : tensor<16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<6> : tensor<16xi32> loc(#loc1)
    %cst_10 = arith.constant dense<5> : tensor<16xi32> loc(#loc1)
    %cst_11 = arith.constant dense<3> : tensor<16xi32> loc(#loc1)
    %cst_12 = arith.constant dense<2> : tensor<16xi32> loc(#loc1)
    %cst_13 = arith.constant dense<1> : tensor<16xi32> loc(#loc1)
    %cst_14 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_15 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_15 : tensor<16xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_14 : tensor<16xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_14 : tensor<16xi32> loc(#loc8)
    %8 = arith.muli %4, %cst_15 : tensor<16xi32> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc10)
    %11 = tt.load %10, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.addi %8, %cst_13 : tensor<16xi32> loc(#loc12)
    %13 = tt.addptr %9, %12 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc13)
    %14 = tt.load %13, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc14)
    %15 = arith.addi %8, %cst_12 : tensor<16xi32> loc(#loc15)
    %16 = tt.addptr %9, %15 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc16)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.addi %8, %cst_11 : tensor<16xi32> loc(#loc18)
    %19 = tt.addptr %9, %18 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc19)
    %20 = tt.load %19, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc20)
    %21 = arith.addi %8, %cst_14 : tensor<16xi32> loc(#loc21)
    %22 = tt.addptr %9, %21 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc22)
    %23 = tt.load %22, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.addi %8, %cst_10 : tensor<16xi32> loc(#loc24)
    %25 = tt.addptr %9, %24 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc25)
    %26 = tt.load %25, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc26)
    %27 = arith.addi %8, %cst_9 : tensor<16xi32> loc(#loc27)
    %28 = tt.addptr %9, %27 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc28)
    %29 = tt.load %28, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc29)
    %30 = arith.addi %8, %cst_8 : tensor<16xi32> loc(#loc30)
    %31 = tt.addptr %9, %30 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc31)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc32)
    %33 = arith.addi %8, %cst_7 : tensor<16xi32> loc(#loc33)
    %34 = tt.addptr %9, %33 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc34)
    %35 = tt.load %34, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc35)
    %36 = arith.addi %8, %cst_6 : tensor<16xi32> loc(#loc36)
    %37 = tt.addptr %9, %36 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc37)
    %38 = tt.load %37, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc38)
    %39 = arith.addi %8, %cst_5 : tensor<16xi32> loc(#loc39)
    %40 = tt.addptr %9, %39 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc40)
    %41 = tt.load %40, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc41)
    %42 = arith.addi %8, %cst_4 : tensor<16xi32> loc(#loc42)
    %43 = tt.addptr %9, %42 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc43)
    %44 = tt.load %43, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc44)
    %45 = arith.addi %8, %cst_3 : tensor<16xi32> loc(#loc45)
    %46 = tt.addptr %9, %45 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc46)
    %47 = tt.load %46, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc47)
    %48 = arith.addi %8, %cst_2 : tensor<16xi32> loc(#loc48)
    %49 = tt.addptr %9, %48 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc49)
    %50 = tt.load %49, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc50)
    %51 = arith.addi %8, %cst_1 : tensor<16xi32> loc(#loc51)
    %52 = tt.addptr %9, %51 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc52)
    %53 = tt.load %52, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc53)
    %54 = arith.addi %8, %cst_0 : tensor<16xi32> loc(#loc54)
    %55 = tt.addptr %9, %54 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc55)
    %56 = tt.load %55, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc56)
    %57 = arith.cmpf ogt, %14, %11 : tensor<16xf32> loc(#loc99)
    %58 = arith.cmpf une, %14, %14 : tensor<16xf32> loc(#loc100)
    %59 = arith.ori %57, %58 : tensor<16xi1> loc(#loc101)
    %60 = arith.select %59, %14, %11 : tensor<16xi1>, tensor<16xf32> loc(#loc102)
    %61 = arith.cmpf ogt, %17, %60 : tensor<16xf32> loc(#loc103)
    %62 = arith.cmpf une, %17, %17 : tensor<16xf32> loc(#loc104)
    %63 = arith.ori %61, %62 : tensor<16xi1> loc(#loc105)
    %64 = arith.select %63, %17, %60 : tensor<16xi1>, tensor<16xf32> loc(#loc106)
    %65 = arith.cmpf ogt, %20, %64 : tensor<16xf32> loc(#loc107)
    %66 = arith.cmpf une, %20, %20 : tensor<16xf32> loc(#loc108)
    %67 = arith.ori %65, %66 : tensor<16xi1> loc(#loc109)
    %68 = arith.select %67, %20, %64 : tensor<16xi1>, tensor<16xf32> loc(#loc110)
    %69 = arith.cmpf ogt, %23, %68 : tensor<16xf32> loc(#loc111)
    %70 = arith.cmpf une, %23, %23 : tensor<16xf32> loc(#loc112)
    %71 = arith.ori %69, %70 : tensor<16xi1> loc(#loc113)
    %72 = arith.select %71, %23, %68 : tensor<16xi1>, tensor<16xf32> loc(#loc114)
    %73 = arith.cmpf ogt, %26, %72 : tensor<16xf32> loc(#loc115)
    %74 = arith.cmpf une, %26, %26 : tensor<16xf32> loc(#loc116)
    %75 = arith.ori %73, %74 : tensor<16xi1> loc(#loc117)
    %76 = arith.select %75, %26, %72 : tensor<16xi1>, tensor<16xf32> loc(#loc118)
    %77 = arith.cmpf ogt, %29, %76 : tensor<16xf32> loc(#loc119)
    %78 = arith.cmpf une, %29, %29 : tensor<16xf32> loc(#loc120)
    %79 = arith.ori %77, %78 : tensor<16xi1> loc(#loc121)
    %80 = arith.select %79, %29, %76 : tensor<16xi1>, tensor<16xf32> loc(#loc122)
    %81 = arith.cmpf ogt, %32, %80 : tensor<16xf32> loc(#loc123)
    %82 = arith.cmpf une, %32, %32 : tensor<16xf32> loc(#loc124)
    %83 = arith.ori %81, %82 : tensor<16xi1> loc(#loc125)
    %84 = arith.select %83, %32, %80 : tensor<16xi1>, tensor<16xf32> loc(#loc126)
    %85 = arith.cmpf ogt, %35, %84 : tensor<16xf32> loc(#loc127)
    %86 = arith.cmpf une, %35, %35 : tensor<16xf32> loc(#loc128)
    %87 = arith.ori %85, %86 : tensor<16xi1> loc(#loc129)
    %88 = arith.select %87, %35, %84 : tensor<16xi1>, tensor<16xf32> loc(#loc130)
    %89 = arith.cmpf ogt, %38, %88 : tensor<16xf32> loc(#loc131)
    %90 = arith.cmpf une, %38, %38 : tensor<16xf32> loc(#loc132)
    %91 = arith.ori %89, %90 : tensor<16xi1> loc(#loc133)
    %92 = arith.select %91, %38, %88 : tensor<16xi1>, tensor<16xf32> loc(#loc134)
    %93 = arith.cmpf ogt, %41, %92 : tensor<16xf32> loc(#loc135)
    %94 = arith.cmpf une, %41, %41 : tensor<16xf32> loc(#loc136)
    %95 = arith.ori %93, %94 : tensor<16xi1> loc(#loc137)
    %96 = arith.select %95, %41, %92 : tensor<16xi1>, tensor<16xf32> loc(#loc138)
    %97 = arith.cmpf ogt, %44, %96 : tensor<16xf32> loc(#loc139)
    %98 = arith.cmpf une, %44, %44 : tensor<16xf32> loc(#loc140)
    %99 = arith.ori %97, %98 : tensor<16xi1> loc(#loc141)
    %100 = arith.select %99, %44, %96 : tensor<16xi1>, tensor<16xf32> loc(#loc142)
    %101 = arith.cmpf ogt, %47, %100 : tensor<16xf32> loc(#loc143)
    %102 = arith.cmpf une, %47, %47 : tensor<16xf32> loc(#loc144)
    %103 = arith.ori %101, %102 : tensor<16xi1> loc(#loc145)
    %104 = arith.select %103, %47, %100 : tensor<16xi1>, tensor<16xf32> loc(#loc146)
    %105 = arith.cmpf ogt, %50, %104 : tensor<16xf32> loc(#loc147)
    %106 = arith.cmpf une, %50, %50 : tensor<16xf32> loc(#loc148)
    %107 = arith.ori %105, %106 : tensor<16xi1> loc(#loc149)
    %108 = arith.select %107, %50, %104 : tensor<16xi1>, tensor<16xf32> loc(#loc150)
    %109 = arith.cmpf ogt, %53, %108 : tensor<16xf32> loc(#loc151)
    %110 = arith.cmpf une, %53, %53 : tensor<16xf32> loc(#loc152)
    %111 = arith.ori %109, %110 : tensor<16xi1> loc(#loc153)
    %112 = arith.select %111, %53, %108 : tensor<16xi1>, tensor<16xf32> loc(#loc154)
    %113 = arith.cmpf ogt, %56, %112 : tensor<16xf32> loc(#loc155)
    %114 = arith.cmpf une, %56, %56 : tensor<16xf32> loc(#loc156)
    %115 = arith.ori %113, %114 : tensor<16xi1> loc(#loc157)
    %116 = arith.select %115, %56, %112 : tensor<16xi1>, tensor<16xf32> loc(#loc158)
    %117 = arith.addf %14, %11 : tensor<16xf32> loc(#loc76)
    %118 = arith.addf %17, %117 : tensor<16xf32> loc(#loc77)
    %119 = arith.addf %20, %118 : tensor<16xf32> loc(#loc78)
    %120 = arith.addf %23, %119 : tensor<16xf32> loc(#loc79)
    %121 = arith.addf %26, %120 : tensor<16xf32> loc(#loc80)
    %122 = arith.addf %29, %121 : tensor<16xf32> loc(#loc81)
    %123 = arith.addf %32, %122 : tensor<16xf32> loc(#loc82)
    %124 = arith.addf %35, %123 : tensor<16xf32> loc(#loc83)
    %125 = arith.addf %38, %124 : tensor<16xf32> loc(#loc84)
    %126 = arith.addf %41, %125 : tensor<16xf32> loc(#loc85)
    %127 = arith.addf %44, %126 : tensor<16xf32> loc(#loc86)
    %128 = arith.addf %47, %127 : tensor<16xf32> loc(#loc87)
    %129 = arith.addf %50, %128 : tensor<16xf32> loc(#loc88)
    %130 = arith.addf %53, %129 : tensor<16xf32> loc(#loc89)
    %131 = arith.addf %56, %130 : tensor<16xf32> loc(#loc90)
    %132 = arith.mulf %131, %cst : tensor<16xf32> loc(#loc91)
    %133 = arith.muli %7, %cst_7 : tensor<16xi32> loc(#loc92)
    %134 = arith.addi %6, %133 : tensor<16xi32> loc(#loc93)
    %135 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc94)
    %136 = tt.addptr %135, %134 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc94)
    tt.store %136, %116, %5 : tensor<16x!tt.ptr<f32>> loc(#loc95)
    %137 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc96)
    %138 = tt.addptr %137, %134 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc96)
    tt.store %138, %132, %5 : tensor<16x!tt.ptr<f32>> loc(#loc97)
    tt.return loc(#loc98)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":21:28)
#loc3 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":21:33)
#loc4 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":22:36)
#loc5 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":22:23)
#loc6 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":23:21)
#loc7 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":25:19)
#loc8 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":26:19)
#loc9 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":27:33)
#loc10 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":27:30)
#loc11 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":27:38)
#loc12 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":28:34)
#loc13 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":28:30)
#loc14 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":28:42)
#loc15 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":29:34)
#loc16 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":29:30)
#loc17 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":29:42)
#loc18 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":30:34)
#loc19 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":30:30)
#loc20 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":30:42)
#loc21 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":31:34)
#loc22 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":31:30)
#loc23 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":31:42)
#loc24 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":32:34)
#loc25 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":32:30)
#loc26 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":32:42)
#loc27 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":33:35)
#loc28 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":33:31)
#loc29 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":33:43)
#loc30 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":34:35)
#loc31 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":34:31)
#loc32 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":34:43)
#loc33 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":35:35)
#loc34 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":35:31)
#loc35 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":35:43)
#loc36 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":36:35)
#loc37 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":36:31)
#loc38 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":36:43)
#loc39 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":37:36)
#loc40 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":37:31)
#loc41 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":37:44)
#loc42 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":38:36)
#loc43 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":38:31)
#loc44 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":38:44)
#loc45 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":39:36)
#loc46 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":39:31)
#loc47 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":39:44)
#loc48 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":40:36)
#loc49 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":40:31)
#loc50 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":40:44)
#loc51 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":41:36)
#loc52 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":41:31)
#loc53 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":41:44)
#loc54 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":42:36)
#loc55 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":42:31)
#loc56 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":42:44)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc58 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":43:40)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc62 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":44:40)
#loc63 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":45:40)
#loc64 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":46:40)
#loc65 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":47:41)
#loc66 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":48:42)
#loc67 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":49:42)
#loc68 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":50:42)
#loc69 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":51:42)
#loc70 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":52:42)
#loc71 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":53:42)
#loc72 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":54:42)
#loc73 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":55:42)
#loc74 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":56:42)
#loc75 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":57:42)
#loc76 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":58:19)
#loc77 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":59:19)
#loc78 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":60:19)
#loc79 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":61:19)
#loc80 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":62:19)
#loc81 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":63:20)
#loc82 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":64:20)
#loc83 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":65:20)
#loc84 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":66:20)
#loc85 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":67:20)
#loc86 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":68:20)
#loc87 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":69:20)
#loc88 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":70:20)
#loc89 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":71:20)
#loc90 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":72:20)
#loc91 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":74:20)
#loc92 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":75:32)
#loc93 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":75:30)
#loc94 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":75:25)
#loc95 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":75:44)
#loc96 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":76:25)
#loc97 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":76:44)
#loc98 = loc("inductor_cache/3z/c3zpmsdt6hgc4pkjvkr5mqqozybvfk67esdnrn3e6nrei2prghwn.py":76:4)
#loc99 = loc(callsite(#loc57 at #loc58))
#loc100 = loc(callsite(#loc59 at #loc58))
#loc101 = loc(callsite(#loc60 at #loc58))
#loc102 = loc(callsite(#loc61 at #loc58))
#loc103 = loc(callsite(#loc57 at #loc62))
#loc104 = loc(callsite(#loc59 at #loc62))
#loc105 = loc(callsite(#loc60 at #loc62))
#loc106 = loc(callsite(#loc61 at #loc62))
#loc107 = loc(callsite(#loc57 at #loc63))
#loc108 = loc(callsite(#loc59 at #loc63))
#loc109 = loc(callsite(#loc60 at #loc63))
#loc110 = loc(callsite(#loc61 at #loc63))
#loc111 = loc(callsite(#loc57 at #loc64))
#loc112 = loc(callsite(#loc59 at #loc64))
#loc113 = loc(callsite(#loc60 at #loc64))
#loc114 = loc(callsite(#loc61 at #loc64))
#loc115 = loc(callsite(#loc57 at #loc65))
#loc116 = loc(callsite(#loc59 at #loc65))
#loc117 = loc(callsite(#loc60 at #loc65))
#loc118 = loc(callsite(#loc61 at #loc65))
#loc119 = loc(callsite(#loc57 at #loc66))
#loc120 = loc(callsite(#loc59 at #loc66))
#loc121 = loc(callsite(#loc60 at #loc66))
#loc122 = loc(callsite(#loc61 at #loc66))
#loc123 = loc(callsite(#loc57 at #loc67))
#loc124 = loc(callsite(#loc59 at #loc67))
#loc125 = loc(callsite(#loc60 at #loc67))
#loc126 = loc(callsite(#loc61 at #loc67))
#loc127 = loc(callsite(#loc57 at #loc68))
#loc128 = loc(callsite(#loc59 at #loc68))
#loc129 = loc(callsite(#loc60 at #loc68))
#loc130 = loc(callsite(#loc61 at #loc68))
#loc131 = loc(callsite(#loc57 at #loc69))
#loc132 = loc(callsite(#loc59 at #loc69))
#loc133 = loc(callsite(#loc60 at #loc69))
#loc134 = loc(callsite(#loc61 at #loc69))
#loc135 = loc(callsite(#loc57 at #loc70))
#loc136 = loc(callsite(#loc59 at #loc70))
#loc137 = loc(callsite(#loc60 at #loc70))
#loc138 = loc(callsite(#loc61 at #loc70))
#loc139 = loc(callsite(#loc57 at #loc71))
#loc140 = loc(callsite(#loc59 at #loc71))
#loc141 = loc(callsite(#loc60 at #loc71))
#loc142 = loc(callsite(#loc61 at #loc71))
#loc143 = loc(callsite(#loc57 at #loc72))
#loc144 = loc(callsite(#loc59 at #loc72))
#loc145 = loc(callsite(#loc60 at #loc72))
#loc146 = loc(callsite(#loc61 at #loc72))
#loc147 = loc(callsite(#loc57 at #loc73))
#loc148 = loc(callsite(#loc59 at #loc73))
#loc149 = loc(callsite(#loc60 at #loc73))
#loc150 = loc(callsite(#loc61 at #loc73))
#loc151 = loc(callsite(#loc57 at #loc74))
#loc152 = loc(callsite(#loc59 at #loc74))
#loc153 = loc(callsite(#loc60 at #loc74))
#loc154 = loc(callsite(#loc61 at #loc74))
#loc155 = loc(callsite(#loc57 at #loc75))
#loc156 = loc(callsite(#loc59 at #loc75))
#loc157 = loc(callsite(#loc60 at #loc75))
#loc158 = loc(callsite(#loc61 at #loc75))
