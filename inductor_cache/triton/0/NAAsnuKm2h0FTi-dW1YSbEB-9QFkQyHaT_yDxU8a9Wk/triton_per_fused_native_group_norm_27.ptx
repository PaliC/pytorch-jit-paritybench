//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_27 // -- Begin function triton_per_fused_native_group_norm_27
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_native_group_norm_27
.visible .entry triton_per_fused_native_group_norm_27(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_27_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_27_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_27_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_27_param_3,
	.param .u32 triton_per_fused_native_group_norm_27_param_4,
	.param .u32 triton_per_fused_native_group_norm_27_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<40>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused_native_group_norm_27_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_native_group_norm_27_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:25:21
	setp.lt.s32 	%p1, %r1, 128;
	ld.param.u64 	%rd7, [triton_per_fused_native_group_norm_27_param_2];
	ld.param.u64 	%rd8, [triton_per_fused_native_group_norm_27_param_3];
	.loc	1 26 34                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:26:34
	mov.u32 	%r27, %tid.x;
	and.b32  	%r28, %r27, 31;
	shl.b32 	%r29, %r27, 1;
	and.b32  	%r30, %r29, 6;
	shl.b32 	%r31, %r27, 6;
	and.b32  	%r32, %r31, 3840;
	.loc	1 32 19                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:32:19
	shr.s32 	%r33, %r1, 31;
	shr.u32 	%r34, %r33, 27;
	add.s32 	%r35, %r1, %r34;
	.loc	1 31 19                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:31:19
	and.b32  	%r36, %r35, 536870880;
	sub.s32 	%r37, %r1, %r36;
	.loc	1 34 37                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:37
	shl.b32 	%r38, %r37, 3;
	.loc	1 34 56                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:56
	shl.b32 	%r39, %r35, 7;
	and.b32  	%r40, %r39, -4096;
	.loc	1 34 35                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:35
	or.b32  	%r41, %r32, %r30;
	.loc	1 34 42                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:42
	add.s32 	%r42, %r41, %r38;
	.loc	1 34 51                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:51
	add.s32 	%r43, %r42, %r40;
	.loc	1 34 30                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:30
	mul.wide.s32 	%rd9, %r43, 4;
	add.s64 	%rd1, %rd5, %rd9;
	mov.b32 	%r4, 0;
	.loc	1 34 61                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:34:61
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	selp.f32 	%f4, %f3, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f4;
	shfl.sync.bfly.b32	%r45, %r44, 16, 31, -1;
	mov.b32 	%f5, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f6;
	shfl.sync.bfly.b32	%r47, %r46, 8, 31, -1;
	mov.b32 	%f7, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f8;
	shfl.sync.bfly.b32	%r49, %r48, 4, 31, -1;
	mov.b32 	%f9, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f10;
	shfl.sync.bfly.b32	%r51, %r50, 2, 31, -1;
	mov.b32 	%f11, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f12;
	shfl.sync.bfly.b32	%r53, %r52, 1, 31, -1;
	mov.b32 	%f13, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p4, %r28, 0;
	shr.u32 	%r54, %r27, 3;
	and.b32  	%r55, %r54, 4;
	mov.u32 	%r56, global_smem;
	add.s32 	%r6, %r56, %r55;
	mov.b32 	%r7, %f14;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r27, 2;
	shl.b32 	%r57, %r27, 2;
	add.s32 	%r9, %r56, %r57;
	// begin inline asm
	@%p5 ld.shared.b32 %r8, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r8;
	shfl.sync.bfly.b32	%r58, %r8, 1, 31, -1;
	mov.b32 	%f16, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r59, %r27, 1;
	setp.eq.b32 	%p13, %r59, 1;
	not.pred 	%p14, %p13;
	and.pred  	%p6, %p5, %p14;
	mov.b32 	%r11, %f17;
	// begin inline asm
	@%p6 st.shared.b32 [ %r9 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 42 19                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:42:19
	ld.shared.u32 	%r13, [global_smem];
	mov.b32 	%r14, 1124073472;
	// begin inline asm
	div.full.f32 %r25, %r13, %r14;
	// end inline asm
	mov.b32 	%f18, %r25;
	.loc	1 43 19                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:43:19
	sub.f32 	%f19, %f1, %f18;
	sub.f32 	%f20, %f2, %f18;
	.loc	1 44 20                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:44:20
	mul.f32 	%f21, %f20, %f20;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f22, %f19, %f19, %f21;
	selp.f32 	%f23, %f22, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f23;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f24, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f25;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f26, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f27;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f28, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f29;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f30, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f31;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f32, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f33;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b32 %r17, [ %r9 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r17;
	shfl.sync.bfly.b32	%r70, %r17, 1, 31, -1;
	mov.b32 	%f35, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f36;
	// begin inline asm
	@%p6 st.shared.b32 [ %r9 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 49 20                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:49:20
	ld.shared.u32 	%r22, [global_smem];
	// begin inline asm
	div.full.f32 %r21, %r22, %r14;
	// end inline asm
	mov.b32 	%f37, %r21;
	.loc	1 51 20                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:51:20
	add.f32 	%f38, %f37, 0f3727C5AC;
	.loc	1 52 28                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:52:28
	rsqrt.approx.ftz.f32 	%f39, %f38;
	.loc	1 53 25                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:53:25
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd2, %rd8, %rd10;
	.loc	1 53 37                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:53:37
	and.b32  	%r71, %r27, 63;
	setp.eq.s32 	%p15, %r71, 0;
	mov.b32 	%r24, %f39;
	and.pred  	%p10, %p15, %p1;
	// begin inline asm
	@%p10 st.global.b32 [ %rd2 + 0 ], { %r24 };
	// end inline asm
	.loc	1 54 25                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:54:25
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 54 37                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:54:37
	// begin inline asm
	@%p10 st.global.b32 [ %rd3 + 0 ], { %r25 };
	// end inline asm
	.loc	1 55 25                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:55:25
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 55 37                         // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:55:37
	// begin inline asm
	@%p10 st.global.b32 [ %rd4 + 0 ], { %r22 };
	// end inline asm
	.loc	1 55 4                          // c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py:55:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6g/c6g267vgacvg3fvtnrs7d4e5qi5msljtnmxy5u5phvwgiqdiuizk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 103
.b8 50
.b8 54
.b8 55
.b8 118
.b8 103
.b8 97
.b8 99
.b8 118
.b8 103
.b8 51
.b8 102
.b8 118
.b8 116
.b8 110
.b8 114
.b8 115
.b8 55
.b8 100
.b8 52
.b8 101
.b8 53
.b8 113
.b8 105
.b8 53
.b8 109
.b8 115
.b8 108
.b8 106
.b8 116
.b8 110
.b8 109
.b8 120
.b8 121
.b8 53
.b8 117
.b8 53
.b8 112
.b8 104
.b8 118
.b8 119
.b8 103
.b8 105
.b8 113
.b8 100
.b8 105
.b8 117
.b8 105
.b8 122
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x28 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
