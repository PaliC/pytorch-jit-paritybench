#loc = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":19:0)
module {
  tt.func public @triton_poi_fused_abs_add_log_mv_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e-15> : tensor<16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<16xf32> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<12> : tensor<16xi32> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<8> : tensor<16xi32> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<16xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_3 : tensor<16xi32> loc(#loc7)
    %7 = arith.muli %6, %cst_4 : tensor<16xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_3 : tensor<16xi32> loc(#loc9)
    %9 = arith.addi %7, %8 : tensor<16xi32> loc(#loc10)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc14)
    %15 = tt.splat %14 : f32 -> tensor<16xf32> loc(#loc15)
    %16 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc16)
    %17 = tt.load %16 : !tt.ptr<f32> loc(#loc17)
    %18 = tt.splat %17 : f32 -> tensor<16xf32> loc(#loc18)
    %19 = arith.addi %7, %cst_3 : tensor<16xi32> loc(#loc19)
    %20 = arith.addi %19, %8 : tensor<16xi32> loc(#loc20)
    %21 = tt.addptr %10, %20 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc21)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc22)
    %23 = tt.addptr %arg2, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc23)
    %24 = tt.load %23 : !tt.ptr<f32> loc(#loc24)
    %25 = tt.splat %24 : f32 -> tensor<16xf32> loc(#loc25)
    %26 = tt.addptr %arg3, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc26)
    %27 = tt.load %26 : !tt.ptr<f32> loc(#loc27)
    %28 = tt.splat %27 : f32 -> tensor<16xf32> loc(#loc28)
    %29 = arith.addi %7, %cst_2 : tensor<16xi32> loc(#loc29)
    %30 = arith.addi %29, %8 : tensor<16xi32> loc(#loc30)
    %31 = tt.addptr %10, %30 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc31)
    %32 = tt.load %31, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc32)
    %33 = tt.addptr %arg2, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc33)
    %34 = tt.load %33 : !tt.ptr<f32> loc(#loc34)
    %35 = tt.splat %34 : f32 -> tensor<16xf32> loc(#loc35)
    %36 = tt.addptr %arg3, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc36)
    %37 = tt.load %36 : !tt.ptr<f32> loc(#loc37)
    %38 = tt.splat %37 : f32 -> tensor<16xf32> loc(#loc38)
    %39 = arith.addi %7, %cst_1 : tensor<16xi32> loc(#loc39)
    %40 = arith.addi %39, %8 : tensor<16xi32> loc(#loc40)
    %41 = tt.addptr %10, %40 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc41)
    %42 = tt.load %41, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc42)
    %43 = tt.addptr %arg2, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc43)
    %44 = tt.load %43 : !tt.ptr<f32> loc(#loc44)
    %45 = tt.splat %44 : f32 -> tensor<16xf32> loc(#loc45)
    %46 = tt.addptr %arg3, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc46)
    %47 = tt.load %46 : !tt.ptr<f32> loc(#loc47)
    %48 = tt.splat %47 : f32 -> tensor<16xf32> loc(#loc48)
    %49 = tt.extern_elementwise %12 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<16xf32>) -> tensor<16xf32> loc(#loc49)
    %50 = arith.mulf %49, %49 : tensor<16xf32> loc(#loc50)
    %51 = arith.subf %cst_0, %50 : tensor<16xf32> loc(#loc51)
    %52 = arith.mulf %51, %15 : tensor<16xf32> loc(#loc52)
    %53 = arith.mulf %52, %18 : tensor<16xf32> loc(#loc53)
    %54 = tt.extern_elementwise %22 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<16xf32>) -> tensor<16xf32> loc(#loc54)
    %55 = arith.mulf %54, %54 : tensor<16xf32> loc(#loc55)
    %56 = arith.subf %cst_0, %55 : tensor<16xf32> loc(#loc56)
    %57 = arith.mulf %56, %25 : tensor<16xf32> loc(#loc57)
    %58 = arith.mulf %57, %28 : tensor<16xf32> loc(#loc58)
    %59 = arith.addf %53, %58 : tensor<16xf32> loc(#loc59)
    %60 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<16xf32>) -> tensor<16xf32> loc(#loc60)
    %61 = arith.mulf %60, %60 : tensor<16xf32> loc(#loc61)
    %62 = arith.subf %cst_0, %61 : tensor<16xf32> loc(#loc62)
    %63 = arith.mulf %62, %35 : tensor<16xf32> loc(#loc63)
    %64 = arith.mulf %63, %38 : tensor<16xf32> loc(#loc64)
    %65 = arith.addf %59, %64 : tensor<16xf32> loc(#loc65)
    %66 = tt.extern_elementwise %42 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<16xf32>) -> tensor<16xf32> loc(#loc66)
    %67 = arith.mulf %66, %66 : tensor<16xf32> loc(#loc67)
    %68 = arith.subf %cst_0, %67 : tensor<16xf32> loc(#loc68)
    %69 = arith.mulf %68, %45 : tensor<16xf32> loc(#loc69)
    %70 = arith.mulf %69, %48 : tensor<16xf32> loc(#loc70)
    %71 = arith.addf %65, %70 : tensor<16xf32> loc(#loc71)
    %72 = arith.addf %71, %cst_0 : tensor<16xf32> loc(#loc72)
    %73 = math.absf %72 : tensor<16xf32> loc(#loc73)
    %74 = arith.addf %73, %cst : tensor<16xf32> loc(#loc74)
    %75 = math.log %74 : tensor<16xf32> loc(#loc75)
    %76 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc76)
    %77 = tt.addptr %76, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc76)
    tt.store %77, %75, %5 : tensor<16x!tt.ptr<f32>> loc(#loc77)
    tt.return loc(#loc78)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":21:28)
#loc3 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":21:33)
#loc4 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":22:36)
#loc5 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":22:23)
#loc6 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":23:21)
#loc7 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":25:40)
#loc8 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":25:35)
#loc9 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":25:53)
#loc10 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":25:47)
#loc11 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":25:30)
#loc12 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":25:58)
#loc13 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":26:30)
#loc14 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":26:19)
#loc15 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":27:33)
#loc16 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":28:30)
#loc17 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":28:19)
#loc18 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":29:33)
#loc19 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":30:35)
#loc20 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":30:52)
#loc21 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":30:31)
#loc22 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":30:63)
#loc23 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":31:31)
#loc24 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":31:20)
#loc25 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":32:35)
#loc26 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":33:31)
#loc27 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":33:20)
#loc28 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":34:35)
#loc29 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":35:35)
#loc30 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":35:52)
#loc31 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":35:31)
#loc32 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":35:63)
#loc33 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":36:31)
#loc34 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":36:20)
#loc35 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":37:35)
#loc36 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":38:31)
#loc37 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":38:20)
#loc38 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":39:35)
#loc39 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":40:36)
#loc40 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":40:53)
#loc41 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":40:31)
#loc42 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":40:64)
#loc43 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":41:31)
#loc44 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":41:20)
#loc45 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":42:35)
#loc46 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":43:31)
#loc47 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":43:20)
#loc48 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":44:35)
#loc49 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":45:26)
#loc50 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":46:18)
#loc51 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":48:18)
#loc52 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":49:18)
#loc53 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":50:19)
#loc54 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":51:27)
#loc55 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":52:20)
#loc56 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":53:19)
#loc57 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":54:20)
#loc58 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":55:20)
#loc59 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":56:20)
#loc60 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":57:27)
#loc61 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":58:20)
#loc62 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":59:19)
#loc63 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":60:20)
#loc64 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":61:20)
#loc65 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":62:20)
#loc66 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":63:27)
#loc67 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":64:20)
#loc68 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":65:19)
#loc69 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":66:20)
#loc70 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":67:20)
#loc71 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":68:20)
#loc72 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":69:20)
#loc73 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":70:24)
#loc74 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":72:20)
#loc75 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":73:24)
#loc76 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":74:28)
#loc77 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":74:40)
#loc78 = loc("inductor_cache/ls/clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py":74:4)
