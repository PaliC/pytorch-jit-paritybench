; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_abs_add_log_mv_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 16, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl nsw i32 %.decomposed, 4, !dbg !17
  %15 = add nsw i32 %14, %12, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #3, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !21
  %21 = bitcast i32 %20 to float, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = add nsw i32 %12, 4, !dbg !23
  %25 = add nsw i32 %24, %14, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %11) #3, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !27
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #3, !dbg !28
  %32 = bitcast i32 %31 to float, !dbg !28
  %33 = getelementptr i8, ptr addrspace(1) %3, i64 4, !dbg !29
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #3, !dbg !30
  %35 = bitcast i32 %34 to float, !dbg !30
  %36 = add nsw i32 %12, 8, !dbg !31
  %37 = add nsw i32 %36, %14, !dbg !32
  %38 = sext i32 %37 to i64, !dbg !33
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !33
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #3, !dbg !34
  %41 = bitcast i32 %40 to float, !dbg !34
  %42 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !35
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !36
  %44 = bitcast i32 %43 to float, !dbg !36
  %45 = getelementptr i8, ptr addrspace(1) %3, i64 8, !dbg !37
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #3, !dbg !38
  %47 = bitcast i32 %46 to float, !dbg !38
  %48 = add nsw i32 %12, 12, !dbg !39
  %49 = add nsw i32 %48, %14, !dbg !40
  %50 = sext i32 %49 to i64, !dbg !41
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !41
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %11) #3, !dbg !42
  %53 = bitcast i32 %52 to float, !dbg !42
  %54 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !43
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #3, !dbg !44
  %56 = bitcast i32 %55 to float, !dbg !44
  %57 = getelementptr i8, ptr addrspace(1) %3, i64 12, !dbg !45
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !46
  %59 = bitcast i32 %58 to float, !dbg !46
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not.i = icmp eq i32 %60, 0, !dbg !47
  %61 = tail call float @llvm.nvvm.fabs.ftz.f(float %19) #3, !dbg !47
  %62 = tail call float @llvm.nvvm.fabs.f(float %19) #3, !dbg !47
  %.01.i = select i1 %.not.i, float %62, float %61, !dbg !47
  %63 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !47
  br i1 %63, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !47

__internal_fmad.exit1.i:                          ; preds = %5
  %64 = fmul float %.01.i, 0x4007154760000000, !dbg !47
  %65 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %64) #3, !dbg !47
  %66 = fadd float %65, 1.000000e+00, !dbg !47
  %67 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %66) #4, !dbg !47, !srcloc !48
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not6.i = icmp eq i32 %68, 0, !dbg !47
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %67, float -2.000000e+00, float 1.000000e+00) #3, !dbg !47
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %67, float -2.000000e+00, float 1.000000e+00) #3, !dbg !47
  %.03.i = select i1 %.not6.i, float %70, float %69, !dbg !47
  %71 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !47
  %s.0.i = select i1 %71, float 1.000000e+00, float %.03.i, !dbg !47
  %72 = bitcast float %s.0.i to i32, !dbg !47
  %73 = and i32 %18, -2147483648, !dbg !47
  %74 = or i32 %73, %72, !dbg !47
  %75 = bitcast i32 %74 to float, !dbg !47
  br label %__nv_tanhf.exit, !dbg !47

__internal_fmad.exit3.i:                          ; preds = %5
  %76 = fmul float %19, %19, !dbg !47
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not1.i = icmp eq i32 %77, 0, !dbg !47
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %76, float 0xBFAAC795C0000000) #3, !dbg !47
  %79 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %76, float 0xBFAAC795C0000000) #3, !dbg !47
  %.06.i = select i1 %.not1.i, float %79, float %78, !dbg !47
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not2.i = icmp eq i32 %80, 0, !dbg !47
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %76, float 0x3FC10B2820000000) #3, !dbg !47
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %76, float 0x3FC10B2820000000) #3, !dbg !47
  %.05.i = select i1 %.not2.i, float %82, float %81, !dbg !47
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not3.i = icmp eq i32 %83, 0, !dbg !47
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %76, float 0xBFD5553DA0000000) #3, !dbg !47
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %76, float 0xBFD5553DA0000000) #3, !dbg !47
  %.0.i = select i1 %.not3.i, float %85, float %84, !dbg !47
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not4.i = icmp eq i32 %86, 0, !dbg !47
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %76, float 0.000000e+00) #3, !dbg !47
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %76, float 0.000000e+00) #3, !dbg !47
  %.04.i = select i1 %.not4.i, float %88, float %87, !dbg !47
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !47
  %.not5.i = icmp eq i32 %89, 0, !dbg !47
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %19, float %19) #3, !dbg !47
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %19, float %19) #3, !dbg !47
  %.02.i = select i1 %.not5.i, float %91, float %90, !dbg !47
  br label %__nv_tanhf.exit, !dbg !47

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %75, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !47
  %92 = fmul float %s.1.i, %s.1.i, !dbg !49
  %93 = fsub float 1.000000e+00, %92, !dbg !50
  %94 = fmul float %93, %21, !dbg !51
  %95 = fmul float %94, %23, !dbg !52
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not.i1 = icmp eq i32 %96, 0, !dbg !53
  %97 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #3, !dbg !53
  %98 = tail call float @llvm.nvvm.fabs.f(float %29) #3, !dbg !53
  %.01.i2 = select i1 %.not.i1, float %98, float %97, !dbg !53
  %99 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !53
  br i1 %99, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !53

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %100 = fmul float %.01.i2, 0x4007154760000000, !dbg !53
  %101 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %100) #3, !dbg !53
  %102 = fadd float %101, 1.000000e+00, !dbg !53
  %103 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %102) #4, !dbg !53, !srcloc !48
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not6.i4 = icmp eq i32 %104, 0, !dbg !53
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %103, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %103, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %.03.i5 = select i1 %.not6.i4, float %106, float %105, !dbg !53
  %107 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !53
  %s.0.i6 = select i1 %107, float 1.000000e+00, float %.03.i5, !dbg !53
  %108 = bitcast float %s.0.i6 to i32, !dbg !53
  %109 = and i32 %28, -2147483648, !dbg !53
  %110 = or i32 %109, %108, !dbg !53
  %111 = bitcast i32 %110 to float, !dbg !53
  br label %__nv_tanhf.exit19, !dbg !53

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %112 = fmul float %29, %29, !dbg !53
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not1.i9 = icmp eq i32 %113, 0, !dbg !53
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %112, float 0xBFAAC795C0000000) #3, !dbg !53
  %115 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %112, float 0xBFAAC795C0000000) #3, !dbg !53
  %.06.i10 = select i1 %.not1.i9, float %115, float %114, !dbg !53
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not2.i11 = icmp eq i32 %116, 0, !dbg !53
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %112, float 0x3FC10B2820000000) #3, !dbg !53
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %112, float 0x3FC10B2820000000) #3, !dbg !53
  %.05.i12 = select i1 %.not2.i11, float %118, float %117, !dbg !53
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not3.i13 = icmp eq i32 %119, 0, !dbg !53
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %112, float 0xBFD5553DA0000000) #3, !dbg !53
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %112, float 0xBFD5553DA0000000) #3, !dbg !53
  %.0.i14 = select i1 %.not3.i13, float %121, float %120, !dbg !53
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not4.i15 = icmp eq i32 %122, 0, !dbg !53
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %112, float 0.000000e+00) #3, !dbg !53
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %112, float 0.000000e+00) #3, !dbg !53
  %.04.i16 = select i1 %.not4.i15, float %124, float %123, !dbg !53
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not5.i17 = icmp eq i32 %125, 0, !dbg !53
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %29, float %29) #3, !dbg !53
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %29, float %29) #3, !dbg !53
  %.02.i18 = select i1 %.not5.i17, float %127, float %126, !dbg !53
  br label %__nv_tanhf.exit19, !dbg !53

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %111, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !53
  %128 = fmul float %s.1.i7, %s.1.i7, !dbg !54
  %129 = fsub float 1.000000e+00, %128, !dbg !55
  %130 = fmul float %129, %32, !dbg !56
  %131 = fmul float %130, %35, !dbg !57
  %132 = fadd float %95, %131, !dbg !58
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not.i20 = icmp eq i32 %133, 0, !dbg !59
  %134 = tail call float @llvm.nvvm.fabs.ftz.f(float %41) #3, !dbg !59
  %135 = tail call float @llvm.nvvm.fabs.f(float %41) #3, !dbg !59
  %.01.i21 = select i1 %.not.i20, float %135, float %134, !dbg !59
  %136 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !59
  br i1 %136, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !59

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %137 = fmul float %.01.i21, 0x4007154760000000, !dbg !59
  %138 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %137) #3, !dbg !59
  %139 = fadd float %138, 1.000000e+00, !dbg !59
  %140 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %139) #4, !dbg !59, !srcloc !48
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not6.i23 = icmp eq i32 %141, 0, !dbg !59
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float -2.000000e+00, float 1.000000e+00) #3, !dbg !59
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %140, float -2.000000e+00, float 1.000000e+00) #3, !dbg !59
  %.03.i24 = select i1 %.not6.i23, float %143, float %142, !dbg !59
  %144 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !59
  %s.0.i25 = select i1 %144, float 1.000000e+00, float %.03.i24, !dbg !59
  %145 = bitcast float %s.0.i25 to i32, !dbg !59
  %146 = and i32 %40, -2147483648, !dbg !59
  %147 = or i32 %146, %145, !dbg !59
  %148 = bitcast i32 %147 to float, !dbg !59
  br label %__nv_tanhf.exit38, !dbg !59

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %149 = fmul float %41, %41, !dbg !59
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not1.i28 = icmp eq i32 %150, 0, !dbg !59
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %149, float 0xBFAAC795C0000000) #3, !dbg !59
  %152 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %149, float 0xBFAAC795C0000000) #3, !dbg !59
  %.06.i29 = select i1 %.not1.i28, float %152, float %151, !dbg !59
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not2.i30 = icmp eq i32 %153, 0, !dbg !59
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %149, float 0x3FC10B2820000000) #3, !dbg !59
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %149, float 0x3FC10B2820000000) #3, !dbg !59
  %.05.i31 = select i1 %.not2.i30, float %155, float %154, !dbg !59
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not3.i32 = icmp eq i32 %156, 0, !dbg !59
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %149, float 0xBFD5553DA0000000) #3, !dbg !59
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %149, float 0xBFD5553DA0000000) #3, !dbg !59
  %.0.i33 = select i1 %.not3.i32, float %158, float %157, !dbg !59
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not4.i34 = icmp eq i32 %159, 0, !dbg !59
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %149, float 0.000000e+00) #3, !dbg !59
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %149, float 0.000000e+00) #3, !dbg !59
  %.04.i35 = select i1 %.not4.i34, float %161, float %160, !dbg !59
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !59
  %.not5.i36 = icmp eq i32 %162, 0, !dbg !59
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %41, float %41) #3, !dbg !59
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %41, float %41) #3, !dbg !59
  %.02.i37 = select i1 %.not5.i36, float %164, float %163, !dbg !59
  br label %__nv_tanhf.exit38, !dbg !59

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %148, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !59
  %165 = fmul float %s.1.i26, %s.1.i26, !dbg !60
  %166 = fsub float 1.000000e+00, %165, !dbg !61
  %167 = fmul float %166, %44, !dbg !62
  %168 = fmul float %167, %47, !dbg !63
  %169 = fadd float %132, %168, !dbg !64
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not.i39 = icmp eq i32 %170, 0, !dbg !65
  %171 = tail call float @llvm.nvvm.fabs.ftz.f(float %53) #3, !dbg !65
  %172 = tail call float @llvm.nvvm.fabs.f(float %53) #3, !dbg !65
  %.01.i40 = select i1 %.not.i39, float %172, float %171, !dbg !65
  %173 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !65
  br i1 %173, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !65

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %174 = fmul float %.01.i40, 0x4007154760000000, !dbg !65
  %175 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %174) #3, !dbg !65
  %176 = fadd float %175, 1.000000e+00, !dbg !65
  %177 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %176) #4, !dbg !65, !srcloc !48
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not6.i42 = icmp eq i32 %178, 0, !dbg !65
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %177, float -2.000000e+00, float 1.000000e+00) #3, !dbg !65
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %177, float -2.000000e+00, float 1.000000e+00) #3, !dbg !65
  %.03.i43 = select i1 %.not6.i42, float %180, float %179, !dbg !65
  %181 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !65
  %s.0.i44 = select i1 %181, float 1.000000e+00, float %.03.i43, !dbg !65
  %182 = bitcast float %s.0.i44 to i32, !dbg !65
  %183 = and i32 %52, -2147483648, !dbg !65
  %184 = or i32 %183, %182, !dbg !65
  %185 = bitcast i32 %184 to float, !dbg !65
  br label %__nv_tanhf.exit57, !dbg !65

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %186 = fmul float %53, %53, !dbg !65
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not1.i47 = icmp eq i32 %187, 0, !dbg !65
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %186, float 0xBFAAC795C0000000) #3, !dbg !65
  %189 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %186, float 0xBFAAC795C0000000) #3, !dbg !65
  %.06.i48 = select i1 %.not1.i47, float %189, float %188, !dbg !65
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not2.i49 = icmp eq i32 %190, 0, !dbg !65
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %186, float 0x3FC10B2820000000) #3, !dbg !65
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %186, float 0x3FC10B2820000000) #3, !dbg !65
  %.05.i50 = select i1 %.not2.i49, float %192, float %191, !dbg !65
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not3.i51 = icmp eq i32 %193, 0, !dbg !65
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %186, float 0xBFD5553DA0000000) #3, !dbg !65
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %186, float 0xBFD5553DA0000000) #3, !dbg !65
  %.0.i52 = select i1 %.not3.i51, float %195, float %194, !dbg !65
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not4.i53 = icmp eq i32 %196, 0, !dbg !65
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %186, float 0.000000e+00) #3, !dbg !65
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %186, float 0.000000e+00) #3, !dbg !65
  %.04.i54 = select i1 %.not4.i53, float %198, float %197, !dbg !65
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !65
  %.not5.i55 = icmp eq i32 %199, 0, !dbg !65
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %53, float %53) #3, !dbg !65
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %53, float %53) #3, !dbg !65
  %.02.i56 = select i1 %.not5.i55, float %201, float %200, !dbg !65
  br label %__nv_tanhf.exit57, !dbg !65

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %185, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !65
  %202 = fmul float %s.1.i45, %s.1.i45, !dbg !66
  %203 = fsub float 1.000000e+00, %202, !dbg !67
  %204 = fmul float %203, %56, !dbg !68
  %205 = fmul float %204, %59, !dbg !69
  %206 = fadd float %169, %205, !dbg !70
  %207 = fadd float %206, 1.000000e+00, !dbg !71
  %208 = tail call float @llvm.fabs.f32(float %207), !dbg !72
  %209 = fadd float %208, 0x3CD203AFA0000000, !dbg !73
  %210 = fcmp olt float %209, 0x3810000000000000, !dbg !74
  %211 = fmul float %209, 0x4160000000000000, !dbg !74
  %.02.i58 = select i1 %210, float %211, float %209, !dbg !74
  %i.i.0.i = select i1 %210, float -2.300000e+01, float 0.000000e+00, !dbg !74
  %212 = bitcast float %.02.i58 to i32, !dbg !74
  %213 = add i32 %212, -1059760811, !dbg !74
  %214 = and i32 %213, -8388608, !dbg !74
  %215 = sub i32 %212, %214, !dbg !74
  %216 = bitcast i32 %215 to float, !dbg !74
  %217 = sitofp i32 %214 to float, !dbg !74
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not.i59 = icmp eq i32 %218, 0, !dbg !74
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %217, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !74
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %217, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !74
  %.08.i = select i1 %.not.i59, float %220, float %219, !dbg !74
  %221 = fadd float %216, -1.000000e+00, !dbg !74
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not1.i60 = icmp eq i32 %222, 0, !dbg !74
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %221, float 0x3FC2073EC0000000) #3, !dbg !74
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %221, float 0x3FC2073EC0000000) #3, !dbg !74
  %.010.i = select i1 %.not1.i60, float %224, float %223, !dbg !74
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not2.i61 = icmp eq i32 %225, 0, !dbg !74
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %221, float 0xBFBF19B980000000) #3, !dbg !74
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %221, float 0xBFBF19B980000000) #3, !dbg !74
  %.011.i = select i1 %.not2.i61, float %227, float %226, !dbg !74
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not3.i62 = icmp eq i32 %228, 0, !dbg !74
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %221, float 0x3FC1E52AA0000000) #3, !dbg !74
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %221, float 0x3FC1E52AA0000000) #3, !dbg !74
  %.012.i = select i1 %.not3.i62, float %230, float %229, !dbg !74
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not4.i63 = icmp eq i32 %231, 0, !dbg !74
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %221, float 0xBFC55B1720000000) #3, !dbg !74
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %221, float 0xBFC55B1720000000) #3, !dbg !74
  %.09.i = select i1 %.not4.i63, float %233, float %232, !dbg !74
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not5.i64 = icmp eq i32 %234, 0, !dbg !74
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %221, float 0x3FC99DA160000000) #3, !dbg !74
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %221, float 0x3FC99DA160000000) #3, !dbg !74
  %.05.i65 = select i1 %.not5.i64, float %236, float %235, !dbg !74
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not6.i66 = icmp eq i32 %237, 0, !dbg !74
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i65, float %221, float 0xBFCFFFE440000000) #3, !dbg !74
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i65, float %221, float 0xBFCFFFE440000000) #3, !dbg !74
  %.01.i67 = select i1 %.not6.i66, float %239, float %238, !dbg !74
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not7.i = icmp eq i32 %240, 0, !dbg !74
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i67, float %221, float 0x3FD5554F00000000) #3, !dbg !74
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i67, float %221, float 0x3FD5554F00000000) #3, !dbg !74
  %.0.i68 = select i1 %.not7.i, float %242, float %241, !dbg !74
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not8.i = icmp eq i32 %243, 0, !dbg !74
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i68, float %221, float -5.000000e-01) #3, !dbg !74
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i68, float %221, float -5.000000e-01) #3, !dbg !74
  %.07.i = select i1 %.not8.i, float %245, float %244, !dbg !74
  %246 = fmul float %221, %.07.i, !dbg !74
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not9.i = icmp eq i32 %247, 0, !dbg !74
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %246, float %221, float %221) #3, !dbg !74
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %246, float %221, float %221) #3, !dbg !74
  %.06.i69 = select i1 %.not9.i, float %249, float %248, !dbg !74
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not10.i = icmp eq i32 %250, 0, !dbg !74
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i69) #3, !dbg !74
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i69) #3, !dbg !74
  %.04.i70 = select i1 %.not10.i, float %252, float %251, !dbg !74
  %253 = icmp ugt i32 %212, 2139095039, !dbg !74
  br i1 %253, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !74

__nv_fmaf_rn.exit.i.i:                            ; preds = %__nv_tanhf.exit57
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !74
  %.not11.i = icmp eq i32 %254, 0, !dbg !74
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i58, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !74
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i58, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !74
  %.03.i71 = select i1 %.not11.i, float %256, float %255, !dbg !74
  br label %__nv_logf.exit, !dbg !74

__nv_logf.exit:                                   ; preds = %__nv_tanhf.exit57, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i71, %__nv_fmaf_rn.exit.i.i ], [ %.04.i70, %__nv_tanhf.exit57 ], !dbg !74
  %257 = and i32 %8, 16, !dbg !12
  %258 = fcmp oeq float %.02.i58, 0.000000e+00, !dbg !74
  %r.i.1.i = select i1 %258, float 0xFFF0000000000000, float %r.i.0.i, !dbg !74
  %259 = sext i32 %10 to i64, !dbg !75
  %260 = getelementptr float, ptr addrspace(1) %0, i64 %259, !dbg !75
  %261 = icmp eq i32 %257, 0, !dbg !76
  %262 = bitcast float %r.i.1.i to i32, !dbg !76
  %263 = and i1 %261, %11, !dbg !76
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %262, ptr addrspace(1) %260, i1 %263) #3, !dbg !76
  ret void, !dbg !77
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clswdufc4y2qcbmrqslvbmolpyc5bzfwgth73uiubl6cz3ic55tt.py", directory: "inductor_cache/ls")
!4 = !{ptr @triton_poi_fused_abs_add_log_mv_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_abs_add_log_mv_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_abs_add_log_mv_3", linkageName: "triton_poi_fused_abs_add_log_mv_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 53, scope: !7)
!16 = !DILocation(line: 25, column: 40, scope: !7)
!17 = !DILocation(line: 25, column: 35, scope: !7)
!18 = !DILocation(line: 25, column: 47, scope: !7)
!19 = !DILocation(line: 25, column: 30, scope: !7)
!20 = !DILocation(line: 25, column: 58, scope: !7)
!21 = !DILocation(line: 26, column: 19, scope: !7)
!22 = !DILocation(line: 28, column: 19, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 52, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 63, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 20, scope: !7)
!29 = !DILocation(line: 33, column: 31, scope: !7)
!30 = !DILocation(line: 33, column: 20, scope: !7)
!31 = !DILocation(line: 35, column: 35, scope: !7)
!32 = !DILocation(line: 35, column: 52, scope: !7)
!33 = !DILocation(line: 35, column: 31, scope: !7)
!34 = !DILocation(line: 35, column: 63, scope: !7)
!35 = !DILocation(line: 36, column: 31, scope: !7)
!36 = !DILocation(line: 36, column: 20, scope: !7)
!37 = !DILocation(line: 38, column: 31, scope: !7)
!38 = !DILocation(line: 38, column: 20, scope: !7)
!39 = !DILocation(line: 40, column: 36, scope: !7)
!40 = !DILocation(line: 40, column: 53, scope: !7)
!41 = !DILocation(line: 40, column: 31, scope: !7)
!42 = !DILocation(line: 40, column: 64, scope: !7)
!43 = !DILocation(line: 41, column: 31, scope: !7)
!44 = !DILocation(line: 41, column: 20, scope: !7)
!45 = !DILocation(line: 43, column: 31, scope: !7)
!46 = !DILocation(line: 43, column: 20, scope: !7)
!47 = !DILocation(line: 45, column: 26, scope: !7)
!48 = !{i32 21046}
!49 = !DILocation(line: 46, column: 18, scope: !7)
!50 = !DILocation(line: 48, column: 18, scope: !7)
!51 = !DILocation(line: 49, column: 18, scope: !7)
!52 = !DILocation(line: 50, column: 19, scope: !7)
!53 = !DILocation(line: 51, column: 27, scope: !7)
!54 = !DILocation(line: 52, column: 20, scope: !7)
!55 = !DILocation(line: 53, column: 19, scope: !7)
!56 = !DILocation(line: 54, column: 20, scope: !7)
!57 = !DILocation(line: 55, column: 20, scope: !7)
!58 = !DILocation(line: 56, column: 20, scope: !7)
!59 = !DILocation(line: 57, column: 27, scope: !7)
!60 = !DILocation(line: 58, column: 20, scope: !7)
!61 = !DILocation(line: 59, column: 19, scope: !7)
!62 = !DILocation(line: 60, column: 20, scope: !7)
!63 = !DILocation(line: 61, column: 20, scope: !7)
!64 = !DILocation(line: 62, column: 20, scope: !7)
!65 = !DILocation(line: 63, column: 27, scope: !7)
!66 = !DILocation(line: 64, column: 20, scope: !7)
!67 = !DILocation(line: 65, column: 19, scope: !7)
!68 = !DILocation(line: 66, column: 20, scope: !7)
!69 = !DILocation(line: 67, column: 20, scope: !7)
!70 = !DILocation(line: 68, column: 20, scope: !7)
!71 = !DILocation(line: 69, column: 20, scope: !7)
!72 = !DILocation(line: 70, column: 24, scope: !7)
!73 = !DILocation(line: 72, column: 20, scope: !7)
!74 = !DILocation(line: 73, column: 24, scope: !7)
!75 = !DILocation(line: 74, column: 28, scope: !7)
!76 = !DILocation(line: 74, column: 40, scope: !7)
!77 = !DILocation(line: 74, column: 4, scope: !7)
