; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = sdiv i32 %12, 4096, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 524288, !dbg !15
  %15 = mul i32 %14, 524288, !dbg !16
  %srem.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = mul nsw i32 %14, 393216, !dbg !17
  %17 = add nsw i32 %16, %srem.decomposed, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = shl nsw i32 %14, 17, !dbg !20
  %21 = insertelement <2 x i32> poison, i32 %12, i64 0, !dbg !21
  %22 = insertelement <2 x i32> %21, i32 %13, i64 1, !dbg !21
  %23 = srem <2 x i32> %22, <i32 4096, i32 128>, !dbg !21
  %24 = extractelement <2 x i32> %23, i64 1, !dbg !22
  %25 = icmp slt i32 %24, 96, !dbg !23
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %19, i1 %25, i32 0, i1 %25, i32 0, i1 %25) #1, !dbg !24
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !24
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !24
  %29 = sext i32 %24 to i64, !dbg !25
  %30 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !25
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %25, i32 0, i1 %25) #1, !dbg !26
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %25, i32 0, i1 %25) #1, !dbg !26
  %33 = icmp sgt i32 %24, 95, !dbg !22
  %34 = insertelement <2 x i32> <i32 poison, i32 -96>, i32 %20, i64 0, !dbg !27
  %35 = add nsw <2 x i32> %34, %23, !dbg !27
  %36 = extractelement <2 x i32> %35, i64 1, !dbg !28
  %37 = shl nsw i32 %36, 12, !dbg !28
  %38 = extractelement <2 x i32> %35, i64 0, !dbg !29
  %39 = add nsw i32 %38, %37, !dbg !29
  %40 = sext i32 %39 to i64, !dbg !30
  %41 = getelementptr float, ptr addrspace(1) %2, i64 %40, !dbg !30
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %41, i1 %33, i32 0, i1 %33, i32 0, i1 %33) #1, !dbg !31
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !31
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !31
  %45 = sext i32 %36 to i64, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %3, i64 %45, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %33, i32 0, i1 %33) #1, !dbg !33
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %33, i32 0, i1 %33) #1, !dbg !33
  %49 = insertelement <4 x i32> poison, i32 %44, i64 0, !dbg !31
  %50 = insertelement <4 x i32> %49, i32 %43, i64 1, !dbg !31
  %51 = insertelement <4 x i32> %50, i32 %28, i64 2, !dbg !31
  %52 = insertelement <4 x i32> %51, i32 %27, i64 3, !dbg !31
  %53 = bitcast <4 x i32> %52 to <4 x float>, !dbg !31
  %54 = insertelement <4 x i32> poison, i32 %48, i64 0, !dbg !33
  %55 = insertelement <4 x i32> %54, i32 %47, i64 1, !dbg !33
  %56 = insertelement <4 x i32> %55, i32 %32, i64 2, !dbg !33
  %57 = insertelement <4 x i32> %56, i32 %31, i64 3, !dbg !33
  %58 = bitcast <4 x i32> %57 to <4 x float>, !dbg !33
  %59 = fadd <4 x float> %53, %58, !dbg !34
  %60 = fcmp olt <4 x float> %59, zeroinitializer, !dbg !35
  %61 = extractelement <4 x i1> %60, i64 3, !dbg !39
  %62 = extractelement <4 x float> %59, i64 3, !dbg !39
  %63 = select i1 %61, float 0.000000e+00, float %62, !dbg !39
  %64 = extractelement <4 x i1> %60, i64 2, !dbg !39
  %65 = extractelement <4 x float> %59, i64 2, !dbg !39
  %66 = select i1 %64, float 0.000000e+00, float %65, !dbg !39
  %67 = extractelement <4 x i1> %60, i64 1, !dbg !41
  %68 = extractelement <4 x float> %59, i64 1, !dbg !41
  %69 = select i1 %67, float 0.000000e+00, float %68, !dbg !41
  %70 = extractelement <4 x i1> %60, i64 0, !dbg !41
  %71 = extractelement <4 x float> %59, i64 0, !dbg !41
  %72 = select i1 %70, float 0.000000e+00, float %71, !dbg !41
  %73 = select i1 %25, float %63, float %69, !dbg !42
  %74 = select i1 %25, float %66, float %72, !dbg !42
  %75 = sext i32 %12 to i64, !dbg !43
  %76 = getelementptr float, ptr addrspace(1) %4, i64 %75, !dbg !43
  %77 = bitcast float %73 to i32, !dbg !44
  %78 = bitcast float %74 to i32, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %77, i32 %78, ptr addrspace(1) %76, i1 true) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2vdrpwb2hkewftr7r5btzqk766627nb3bjvkg2utwvjbkkt3mxw.py", directory: "inductor_cache/2v")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 54, scope: !7)
!18 = !DILocation(line: 33, column: 47, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 43, column: 63, scope: !7)
!21 = !DILocation(line: 25, column: 19, scope: !7)
!22 = !DILocation(line: 40, column: 20, scope: !7)
!23 = !DILocation(line: 32, column: 18, scope: !7)
!24 = !DILocation(line: 33, column: 59, scope: !7)
!25 = !DILocation(line: 34, column: 30, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 43, column: 36, scope: !7)
!28 = !DILocation(line: 43, column: 42, scope: !7)
!29 = !DILocation(line: 43, column: 56, scope: !7)
!30 = !DILocation(line: 43, column: 31, scope: !7)
!31 = !DILocation(line: 43, column: 68, scope: !7)
!32 = !DILocation(line: 44, column: 31, scope: !7)
!33 = !DILocation(line: 44, column: 44, scope: !7)
!34 = !DILocation(line: 45, column: 20, scope: !7)
!35 = !DILocation(line: 118, column: 15, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!38 = !DILocation(line: 47, column: 42, scope: !7)
!39 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !40)
!40 = !DILocation(line: 37, column: 40, scope: !7)
!41 = !DILocation(line: 121, column: 29, scope: !36, inlinedAt: !38)
!42 = !DILocation(line: 0, scope: !7)
!43 = !DILocation(line: 51, column: 25, scope: !7)
!44 = !DILocation(line: 51, column: 37, scope: !7)
!45 = !DILocation(line: 51, column: 4, scope: !7)
