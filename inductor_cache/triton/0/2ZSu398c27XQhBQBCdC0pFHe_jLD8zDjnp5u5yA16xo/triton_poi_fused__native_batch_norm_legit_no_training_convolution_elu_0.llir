; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 10, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 2, !dbg !12
  %13 = and i32 %12, 508, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = or disjoint i32 %14, 512, !dbg !13
  %16 = sdiv i32 %14, 4096, !dbg !14
  %17 = sdiv i32 %15, 4096, !dbg !14
  %18 = srem i32 %16, 1024, !dbg !15
  %19 = srem i32 %17, 1024, !dbg !15
  %20 = sext i32 %14 to i64, !dbg !16
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !16
  %22 = sext i32 %15 to i64, !dbg !16
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !16
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #3, !dbg !17
  %25 = extractvalue { i32, i32, i32, i32 } %24, 0, !dbg !17
  %26 = extractvalue { i32, i32, i32, i32 } %24, 1, !dbg !17
  %27 = extractvalue { i32, i32, i32, i32 } %24, 2, !dbg !17
  %28 = extractvalue { i32, i32, i32, i32 } %24, 3, !dbg !17
  %29 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %23, i1 true) #3, !dbg !17
  %30 = extractvalue { i32, i32, i32, i32 } %29, 0, !dbg !17
  %31 = extractvalue { i32, i32, i32, i32 } %29, 1, !dbg !17
  %32 = extractvalue { i32, i32, i32, i32 } %29, 2, !dbg !17
  %33 = extractvalue { i32, i32, i32, i32 } %29, 3, !dbg !17
  %34 = sext i32 %18 to i64, !dbg !18
  %35 = getelementptr float, ptr addrspace(1) %2, i64 %34, !dbg !18
  %36 = sext i32 %19 to i64, !dbg !18
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !18
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !19
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !19
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !19
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !19
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #3, !dbg !19
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #3, !dbg !19
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #3, !dbg !19
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 true) #3, !dbg !19
  %46 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !20
  %47 = getelementptr float, ptr addrspace(1) %3, i64 %36, !dbg !20
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #3, !dbg !21
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #3, !dbg !21
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #3, !dbg !21
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #3, !dbg !21
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !21
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !21
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !21
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !21
  %56 = getelementptr float, ptr addrspace(1) %4, i64 %34, !dbg !22
  %57 = getelementptr float, ptr addrspace(1) %4, i64 %36, !dbg !22
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !23
  %59 = bitcast i32 %58 to float, !dbg !23
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !23
  %61 = bitcast i32 %60 to float, !dbg !23
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !23
  %63 = bitcast i32 %62 to float, !dbg !23
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #3, !dbg !23
  %65 = bitcast i32 %64 to float, !dbg !23
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !23
  %67 = bitcast i32 %66 to float, !dbg !23
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !23
  %69 = bitcast i32 %68 to float, !dbg !23
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !23
  %71 = bitcast i32 %70 to float, !dbg !23
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 true) #3, !dbg !23
  %73 = bitcast i32 %72 to float, !dbg !23
  %74 = getelementptr float, ptr addrspace(1) %5, i64 %34, !dbg !24
  %75 = getelementptr float, ptr addrspace(1) %5, i64 %36, !dbg !24
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 true) #3, !dbg !25
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 true) #3, !dbg !25
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 true) #3, !dbg !25
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 true) #3, !dbg !25
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #3, !dbg !25
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #3, !dbg !25
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #3, !dbg !25
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 true) #3, !dbg !25
  %84 = insertelement <8 x i32> poison, i32 %83, i64 0, !dbg !25
  %85 = insertelement <8 x i32> %84, i32 %76, i64 1, !dbg !25
  %86 = insertelement <8 x i32> %85, i32 %77, i64 2, !dbg !25
  %87 = insertelement <8 x i32> %86, i32 %78, i64 3, !dbg !25
  %88 = insertelement <8 x i32> %87, i32 %79, i64 4, !dbg !25
  %89 = insertelement <8 x i32> %88, i32 %80, i64 5, !dbg !25
  %90 = insertelement <8 x i32> %89, i32 %81, i64 6, !dbg !25
  %91 = insertelement <8 x i32> %90, i32 %82, i64 7, !dbg !25
  %92 = bitcast <8 x i32> %91 to <8 x float>, !dbg !25
  %93 = getelementptr float, ptr addrspace(1) %6, i64 %34, !dbg !26
  %94 = getelementptr float, ptr addrspace(1) %6, i64 %36, !dbg !26
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 true) #3, !dbg !27
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 true) #3, !dbg !27
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 true) #3, !dbg !27
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %93, i1 true) #3, !dbg !27
  %99 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 true) #3, !dbg !27
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 true) #3, !dbg !27
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 true) #3, !dbg !27
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 true) #3, !dbg !27
  %103 = insertelement <8 x i32> poison, i32 %102, i64 0, !dbg !27
  %104 = insertelement <8 x i32> %103, i32 %95, i64 1, !dbg !27
  %105 = insertelement <8 x i32> %104, i32 %96, i64 2, !dbg !27
  %106 = insertelement <8 x i32> %105, i32 %97, i64 3, !dbg !27
  %107 = insertelement <8 x i32> %106, i32 %98, i64 4, !dbg !27
  %108 = insertelement <8 x i32> %107, i32 %99, i64 5, !dbg !27
  %109 = insertelement <8 x i32> %108, i32 %100, i64 6, !dbg !27
  %110 = insertelement <8 x i32> %109, i32 %101, i64 7, !dbg !27
  %111 = bitcast <8 x i32> %110 to <8 x float>, !dbg !27
  %112 = insertelement <8 x i32> poison, i32 %33, i64 0, !dbg !17
  %113 = insertelement <8 x i32> %112, i32 %25, i64 1, !dbg !17
  %114 = insertelement <8 x i32> %113, i32 %26, i64 2, !dbg !17
  %115 = insertelement <8 x i32> %114, i32 %27, i64 3, !dbg !17
  %116 = insertelement <8 x i32> %115, i32 %28, i64 4, !dbg !17
  %117 = insertelement <8 x i32> %116, i32 %30, i64 5, !dbg !17
  %118 = insertelement <8 x i32> %117, i32 %31, i64 6, !dbg !17
  %119 = insertelement <8 x i32> %118, i32 %32, i64 7, !dbg !17
  %120 = bitcast <8 x i32> %119 to <8 x float>, !dbg !17
  %121 = insertelement <8 x i32> poison, i32 %45, i64 0, !dbg !19
  %122 = insertelement <8 x i32> %121, i32 %38, i64 1, !dbg !19
  %123 = insertelement <8 x i32> %122, i32 %39, i64 2, !dbg !19
  %124 = insertelement <8 x i32> %123, i32 %40, i64 3, !dbg !19
  %125 = insertelement <8 x i32> %124, i32 %41, i64 4, !dbg !19
  %126 = insertelement <8 x i32> %125, i32 %42, i64 5, !dbg !19
  %127 = insertelement <8 x i32> %126, i32 %43, i64 6, !dbg !19
  %128 = insertelement <8 x i32> %127, i32 %44, i64 7, !dbg !19
  %129 = bitcast <8 x i32> %128 to <8 x float>, !dbg !19
  %130 = insertelement <8 x i32> poison, i32 %55, i64 0, !dbg !21
  %131 = insertelement <8 x i32> %130, i32 %48, i64 1, !dbg !21
  %132 = insertelement <8 x i32> %131, i32 %49, i64 2, !dbg !21
  %133 = insertelement <8 x i32> %132, i32 %50, i64 3, !dbg !21
  %134 = insertelement <8 x i32> %133, i32 %51, i64 4, !dbg !21
  %135 = insertelement <8 x i32> %134, i32 %52, i64 5, !dbg !21
  %136 = insertelement <8 x i32> %135, i32 %53, i64 6, !dbg !21
  %137 = insertelement <8 x i32> %136, i32 %54, i64 7, !dbg !21
  %138 = bitcast <8 x i32> %137 to <8 x float>, !dbg !21
  %139 = fadd <8 x float> %120, %129, !dbg !28
  %140 = fsub <8 x float> %139, %138, !dbg !29
  %141 = fadd float %59, 0x3F1A36E2E0000000, !dbg !30
  %142 = fadd float %61, 0x3F1A36E2E0000000, !dbg !30
  %143 = fadd float %63, 0x3F1A36E2E0000000, !dbg !30
  %144 = fadd float %65, 0x3F1A36E2E0000000, !dbg !30
  %145 = fadd float %67, 0x3F1A36E2E0000000, !dbg !30
  %146 = fadd float %69, 0x3F1A36E2E0000000, !dbg !30
  %147 = fadd float %71, 0x3F1A36E2E0000000, !dbg !30
  %148 = fadd float %73, 0x3F1A36E2E0000000, !dbg !30
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %149, 0, !dbg !31
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %150, 0, !dbg !31
  br i1 %.not.i, label %156, label %151, !dbg !31

151:                                              ; preds = %8
  br i1 %.not1.i, label %154, label %152, !dbg !31

152:                                              ; preds = %151
  %153 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %141) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

154:                                              ; preds = %151
  %155 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %141) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

156:                                              ; preds = %8
  br i1 %.not1.i, label %159, label %157, !dbg !31

157:                                              ; preds = %156
  %158 = tail call float @llvm.nvvm.sqrt.rn.f(float %141) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

159:                                              ; preds = %156
  %160 = tail call float @llvm.nvvm.sqrt.approx.f(float %141) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %152, %154, %157, %159
  %.0.i = phi float [ %153, %152 ], [ %155, %154 ], [ %158, %157 ], [ %160, %159 ], !dbg !31
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %161, 0, !dbg !31
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %162, 0, !dbg !31
  br i1 %.not.i1, label %168, label %163, !dbg !31

163:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %166, label %164, !dbg !31

164:                                              ; preds = %163
  %165 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %142) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

166:                                              ; preds = %163
  %167 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %142) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

168:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %171, label %169, !dbg !31

169:                                              ; preds = %168
  %170 = tail call float @llvm.nvvm.sqrt.rn.f(float %142) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

171:                                              ; preds = %168
  %172 = tail call float @llvm.nvvm.sqrt.approx.f(float %142) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %164, %166, %169, %171
  %.0.i3 = phi float [ %165, %164 ], [ %167, %166 ], [ %170, %169 ], [ %172, %171 ], !dbg !31
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i6 = icmp eq i32 %173, 0, !dbg !31
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i9 = icmp eq i32 %174, 0, !dbg !31
  br i1 %.not.i6, label %180, label %175, !dbg !31

175:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %178, label %176, !dbg !31

176:                                              ; preds = %175
  %177 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %143) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

178:                                              ; preds = %175
  %179 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %143) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

180:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %183, label %181, !dbg !31

181:                                              ; preds = %180
  %182 = tail call float @llvm.nvvm.sqrt.rn.f(float %143) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

183:                                              ; preds = %180
  %184 = tail call float @llvm.nvvm.sqrt.approx.f(float %143) #3, !dbg !31
  br label %__nv_sqrtf.exit10, !dbg !31

__nv_sqrtf.exit10:                                ; preds = %176, %178, %181, %183
  %.0.i8 = phi float [ %177, %176 ], [ %179, %178 ], [ %182, %181 ], [ %184, %183 ], !dbg !31
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i11 = icmp eq i32 %185, 0, !dbg !31
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i14 = icmp eq i32 %186, 0, !dbg !31
  br i1 %.not.i11, label %192, label %187, !dbg !31

187:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %190, label %188, !dbg !31

188:                                              ; preds = %187
  %189 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %144) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

190:                                              ; preds = %187
  %191 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %144) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

192:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %195, label %193, !dbg !31

193:                                              ; preds = %192
  %194 = tail call float @llvm.nvvm.sqrt.rn.f(float %144) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

195:                                              ; preds = %192
  %196 = tail call float @llvm.nvvm.sqrt.approx.f(float %144) #3, !dbg !31
  br label %__nv_sqrtf.exit15, !dbg !31

__nv_sqrtf.exit15:                                ; preds = %188, %190, %193, %195
  %.0.i13 = phi float [ %189, %188 ], [ %191, %190 ], [ %194, %193 ], [ %196, %195 ], !dbg !31
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i16 = icmp eq i32 %197, 0, !dbg !31
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i19 = icmp eq i32 %198, 0, !dbg !31
  br i1 %.not.i16, label %204, label %199, !dbg !31

199:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %202, label %200, !dbg !31

200:                                              ; preds = %199
  %201 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %145) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

202:                                              ; preds = %199
  %203 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %145) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

204:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %207, label %205, !dbg !31

205:                                              ; preds = %204
  %206 = tail call float @llvm.nvvm.sqrt.rn.f(float %145) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

207:                                              ; preds = %204
  %208 = tail call float @llvm.nvvm.sqrt.approx.f(float %145) #3, !dbg !31
  br label %__nv_sqrtf.exit20, !dbg !31

__nv_sqrtf.exit20:                                ; preds = %200, %202, %205, %207
  %.0.i18 = phi float [ %201, %200 ], [ %203, %202 ], [ %206, %205 ], [ %208, %207 ], !dbg !31
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i21 = icmp eq i32 %209, 0, !dbg !31
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i24 = icmp eq i32 %210, 0, !dbg !31
  br i1 %.not.i21, label %216, label %211, !dbg !31

211:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %214, label %212, !dbg !31

212:                                              ; preds = %211
  %213 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %146) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

214:                                              ; preds = %211
  %215 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %146) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

216:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %219, label %217, !dbg !31

217:                                              ; preds = %216
  %218 = tail call float @llvm.nvvm.sqrt.rn.f(float %146) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

219:                                              ; preds = %216
  %220 = tail call float @llvm.nvvm.sqrt.approx.f(float %146) #3, !dbg !31
  br label %__nv_sqrtf.exit25, !dbg !31

__nv_sqrtf.exit25:                                ; preds = %212, %214, %217, %219
  %.0.i23 = phi float [ %213, %212 ], [ %215, %214 ], [ %218, %217 ], [ %220, %219 ], !dbg !31
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i26 = icmp eq i32 %221, 0, !dbg !31
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i29 = icmp eq i32 %222, 0, !dbg !31
  br i1 %.not.i26, label %228, label %223, !dbg !31

223:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %226, label %224, !dbg !31

224:                                              ; preds = %223
  %225 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %147) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

226:                                              ; preds = %223
  %227 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %147) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

228:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %231, label %229, !dbg !31

229:                                              ; preds = %228
  %230 = tail call float @llvm.nvvm.sqrt.rn.f(float %147) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

231:                                              ; preds = %228
  %232 = tail call float @llvm.nvvm.sqrt.approx.f(float %147) #3, !dbg !31
  br label %__nv_sqrtf.exit30, !dbg !31

__nv_sqrtf.exit30:                                ; preds = %224, %226, %229, %231
  %.0.i28 = phi float [ %225, %224 ], [ %227, %226 ], [ %230, %229 ], [ %232, %231 ], !dbg !31
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i31 = icmp eq i32 %233, 0, !dbg !31
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i34 = icmp eq i32 %234, 0, !dbg !31
  br i1 %.not.i31, label %240, label %235, !dbg !31

235:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %238, label %236, !dbg !31

236:                                              ; preds = %235
  %237 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %148) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

238:                                              ; preds = %235
  %239 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %148) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

240:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %243, label %241, !dbg !31

241:                                              ; preds = %240
  %242 = tail call float @llvm.nvvm.sqrt.rn.f(float %148) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

243:                                              ; preds = %240
  %244 = tail call float @llvm.nvvm.sqrt.approx.f(float %148) #3, !dbg !31
  br label %__nv_sqrtf.exit35, !dbg !31

__nv_sqrtf.exit35:                                ; preds = %236, %238, %241, %243
  %.0.i33 = phi float [ %237, %236 ], [ %239, %238 ], [ %242, %241 ], [ %244, %243 ], !dbg !31
  %245 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !32
  %246 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !32
  %247 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !32
  %248 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !32
  %249 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i18) #3, !dbg !32
  %250 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i23) #3, !dbg !32
  %251 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i28) #3, !dbg !32
  %252 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i33) #3, !dbg !32
  %253 = insertelement <8 x float> poison, float %252, i64 0, !dbg !33
  %254 = insertelement <8 x float> %253, float %245, i64 1, !dbg !33
  %255 = insertelement <8 x float> %254, float %246, i64 2, !dbg !33
  %256 = insertelement <8 x float> %255, float %247, i64 3, !dbg !33
  %257 = insertelement <8 x float> %256, float %248, i64 4, !dbg !33
  %258 = insertelement <8 x float> %257, float %249, i64 5, !dbg !33
  %259 = insertelement <8 x float> %258, float %250, i64 6, !dbg !33
  %260 = insertelement <8 x float> %259, float %251, i64 7, !dbg !33
  %261 = fmul <8 x float> %140, %260, !dbg !33
  %262 = fmul <8 x float> %261, %92, !dbg !34
  %263 = fadd <8 x float> %262, %111, !dbg !35
  %264 = extractelement <8 x float> %263, i64 1, !dbg !36
  %265 = fmul float %264, 0x3FF7154760000000, !dbg !36
  %266 = tail call float @llvm.nvvm.round.f(float %265) #3, !dbg !36
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i36 = icmp eq i32 %267, 0, !dbg !36
  %268 = tail call float @llvm.nvvm.fabs.ftz.f(float %264) #3, !dbg !36
  %269 = tail call float @llvm.nvvm.fabs.f(float %264) #3, !dbg !36
  %.03.i = select i1 %.not.i36, float %269, float %268, !dbg !36
  %270 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i = select i1 %270, float 0.000000e+00, float %266, !dbg !36
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %273 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !36
  %j.0.i = select i1 %273, float 1.270000e+02, float %t.0.i, !dbg !36
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i = icmp eq i32 %279, 0, !dbg !36
  br i1 %.not8.i, label %282, label %280, !dbg !36

280:                                              ; preds = %__nv_sqrtf.exit35
  %281 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !36
  br label %__nv_expm1f.exit, !dbg !36

282:                                              ; preds = %__nv_sqrtf.exit35
  %283 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !36
  br label %__nv_expm1f.exit, !dbg !36

__nv_expm1f.exit:                                 ; preds = %280, %282
  %.0.i37 = phi float [ %281, %280 ], [ %283, %282 ], !dbg !36
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %285 = extractelement <8 x float> %263, i64 2, !dbg !36
  %286 = fmul float %285, 0x3FF7154760000000, !dbg !36
  %287 = tail call float @llvm.nvvm.round.f(float %286) #3, !dbg !36
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i40 = icmp eq i32 %288, 0, !dbg !36
  %289 = tail call float @llvm.nvvm.fabs.ftz.f(float %285) #3, !dbg !36
  %290 = tail call float @llvm.nvvm.fabs.f(float %285) #3, !dbg !36
  %.03.i41 = select i1 %.not.i40, float %290, float %289, !dbg !36
  %291 = fcmp olt float %.03.i41, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i42 = select i1 %291, float 0.000000e+00, float %287, !dbg !36
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %294 = fcmp oeq float %t.0.i42, 1.280000e+02, !dbg !36
  %j.0.i43 = select i1 %294, float 1.270000e+02, float %t.0.i42, !dbg !36
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %298 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i44 = icmp eq i32 %300, 0, !dbg !36
  br i1 %.not8.i44, label %303, label %301, !dbg !36

301:                                              ; preds = %__nv_expm1f.exit
  %302 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i43) #3, !dbg !36
  br label %__nv_expm1f.exit66, !dbg !36

303:                                              ; preds = %__nv_expm1f.exit
  %304 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i43) #3, !dbg !36
  br label %__nv_expm1f.exit66, !dbg !36

__nv_expm1f.exit66:                               ; preds = %301, %303
  %.0.i45 = phi float [ %302, %301 ], [ %304, %303 ], !dbg !36
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %306 = extractelement <8 x float> %263, i64 3, !dbg !36
  %307 = fmul float %306, 0x3FF7154760000000, !dbg !36
  %308 = tail call float @llvm.nvvm.round.f(float %307) #3, !dbg !36
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i67 = icmp eq i32 %309, 0, !dbg !36
  %310 = tail call float @llvm.nvvm.fabs.ftz.f(float %306) #3, !dbg !36
  %311 = tail call float @llvm.nvvm.fabs.f(float %306) #3, !dbg !36
  %.03.i68 = select i1 %.not.i67, float %311, float %310, !dbg !36
  %312 = fcmp olt float %.03.i68, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i69 = select i1 %312, float 0.000000e+00, float %308, !dbg !36
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %315 = fcmp oeq float %t.0.i69, 1.280000e+02, !dbg !36
  %j.0.i70 = select i1 %315, float 1.270000e+02, float %t.0.i69, !dbg !36
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i71 = icmp eq i32 %321, 0, !dbg !36
  br i1 %.not8.i71, label %324, label %322, !dbg !36

322:                                              ; preds = %__nv_expm1f.exit66
  %323 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i70) #3, !dbg !36
  br label %__nv_expm1f.exit93, !dbg !36

324:                                              ; preds = %__nv_expm1f.exit66
  %325 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i70) #3, !dbg !36
  br label %__nv_expm1f.exit93, !dbg !36

__nv_expm1f.exit93:                               ; preds = %322, %324
  %.0.i72 = phi float [ %323, %322 ], [ %325, %324 ], !dbg !36
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %327 = extractelement <8 x float> %263, i64 4, !dbg !36
  %328 = fmul float %327, 0x3FF7154760000000, !dbg !36
  %329 = tail call float @llvm.nvvm.round.f(float %328) #3, !dbg !36
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i94 = icmp eq i32 %330, 0, !dbg !36
  %331 = tail call float @llvm.nvvm.fabs.ftz.f(float %327) #3, !dbg !36
  %332 = tail call float @llvm.nvvm.fabs.f(float %327) #3, !dbg !36
  %.03.i95 = select i1 %.not.i94, float %332, float %331, !dbg !36
  %333 = fcmp olt float %.03.i95, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i96 = select i1 %333, float 0.000000e+00, float %329, !dbg !36
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %336 = fcmp oeq float %t.0.i96, 1.280000e+02, !dbg !36
  %j.0.i97 = select i1 %336, float 1.270000e+02, float %t.0.i96, !dbg !36
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i98 = icmp eq i32 %342, 0, !dbg !36
  br i1 %.not8.i98, label %345, label %343, !dbg !36

343:                                              ; preds = %__nv_expm1f.exit93
  %344 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i97) #3, !dbg !36
  br label %__nv_expm1f.exit120, !dbg !36

345:                                              ; preds = %__nv_expm1f.exit93
  %346 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i97) #3, !dbg !36
  br label %__nv_expm1f.exit120, !dbg !36

__nv_expm1f.exit120:                              ; preds = %343, %345
  %.0.i99 = phi float [ %344, %343 ], [ %346, %345 ], !dbg !36
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %348 = extractelement <8 x float> %263, i64 5, !dbg !36
  %349 = fmul float %348, 0x3FF7154760000000, !dbg !36
  %350 = tail call float @llvm.nvvm.round.f(float %349) #3, !dbg !36
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i121 = icmp eq i32 %351, 0, !dbg !36
  %352 = tail call float @llvm.nvvm.fabs.ftz.f(float %348) #3, !dbg !36
  %353 = tail call float @llvm.nvvm.fabs.f(float %348) #3, !dbg !36
  %.03.i122 = select i1 %.not.i121, float %353, float %352, !dbg !36
  %354 = fcmp olt float %.03.i122, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i123 = select i1 %354, float 0.000000e+00, float %350, !dbg !36
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %357 = fcmp oeq float %t.0.i123, 1.280000e+02, !dbg !36
  %j.0.i124 = select i1 %357, float 1.270000e+02, float %t.0.i123, !dbg !36
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i125 = icmp eq i32 %363, 0, !dbg !36
  br i1 %.not8.i125, label %366, label %364, !dbg !36

364:                                              ; preds = %__nv_expm1f.exit120
  %365 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i124) #3, !dbg !36
  br label %__nv_expm1f.exit147, !dbg !36

366:                                              ; preds = %__nv_expm1f.exit120
  %367 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i124) #3, !dbg !36
  br label %__nv_expm1f.exit147, !dbg !36

__nv_expm1f.exit147:                              ; preds = %364, %366
  %.0.i126 = phi float [ %365, %364 ], [ %367, %366 ], !dbg !36
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %369 = extractelement <8 x float> %263, i64 6, !dbg !36
  %370 = fmul float %369, 0x3FF7154760000000, !dbg !36
  %371 = tail call float @llvm.nvvm.round.f(float %370) #3, !dbg !36
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i148 = icmp eq i32 %372, 0, !dbg !36
  %373 = tail call float @llvm.nvvm.fabs.ftz.f(float %369) #3, !dbg !36
  %374 = tail call float @llvm.nvvm.fabs.f(float %369) #3, !dbg !36
  %.03.i149 = select i1 %.not.i148, float %374, float %373, !dbg !36
  %375 = fcmp olt float %.03.i149, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i150 = select i1 %375, float 0.000000e+00, float %371, !dbg !36
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %378 = fcmp oeq float %t.0.i150, 1.280000e+02, !dbg !36
  %j.0.i151 = select i1 %378, float 1.270000e+02, float %t.0.i150, !dbg !36
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i152 = icmp eq i32 %384, 0, !dbg !36
  br i1 %.not8.i152, label %387, label %385, !dbg !36

385:                                              ; preds = %__nv_expm1f.exit147
  %386 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i151) #3, !dbg !36
  br label %__nv_expm1f.exit174, !dbg !36

387:                                              ; preds = %__nv_expm1f.exit147
  %388 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i151) #3, !dbg !36
  br label %__nv_expm1f.exit174, !dbg !36

__nv_expm1f.exit174:                              ; preds = %385, %387
  %.0.i153 = phi float [ %386, %385 ], [ %388, %387 ], !dbg !36
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %390 = extractelement <8 x float> %263, i64 7, !dbg !36
  %391 = fmul float %390, 0x3FF7154760000000, !dbg !36
  %392 = tail call float @llvm.nvvm.round.f(float %391) #3, !dbg !36
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i175 = icmp eq i32 %393, 0, !dbg !36
  %394 = tail call float @llvm.nvvm.fabs.ftz.f(float %390) #3, !dbg !36
  %395 = tail call float @llvm.nvvm.fabs.f(float %390) #3, !dbg !36
  %.03.i176 = select i1 %.not.i175, float %395, float %394, !dbg !36
  %396 = fcmp olt float %.03.i176, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i177 = select i1 %396, float 0.000000e+00, float %392, !dbg !36
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %399 = fcmp oeq float %t.0.i177, 1.280000e+02, !dbg !36
  %j.0.i178 = select i1 %399, float 1.270000e+02, float %t.0.i177, !dbg !36
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %403 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i179 = icmp eq i32 %405, 0, !dbg !36
  br i1 %.not8.i179, label %408, label %406, !dbg !36

406:                                              ; preds = %__nv_expm1f.exit174
  %407 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i178) #3, !dbg !36
  br label %__nv_expm1f.exit201, !dbg !36

408:                                              ; preds = %__nv_expm1f.exit174
  %409 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i178) #3, !dbg !36
  br label %__nv_expm1f.exit201, !dbg !36

__nv_expm1f.exit201:                              ; preds = %406, %408
  %.0.i180 = phi float [ %407, %406 ], [ %409, %408 ], !dbg !36
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %411 = extractelement <8 x float> %263, i64 0, !dbg !36
  %412 = fmul float %411, 0x3FF7154760000000, !dbg !36
  %413 = tail call float @llvm.nvvm.round.f(float %412) #3, !dbg !36
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i202 = icmp eq i32 %414, 0, !dbg !36
  %415 = tail call float @llvm.nvvm.fabs.ftz.f(float %411) #3, !dbg !36
  %416 = tail call float @llvm.nvvm.fabs.f(float %411) #3, !dbg !36
  %.03.i203 = select i1 %.not.i202, float %416, float %415, !dbg !36
  %417 = fcmp olt float %.03.i203, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i204 = select i1 %417, float 0.000000e+00, float %413, !dbg !36
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %420 = fcmp oeq float %t.0.i204, 1.280000e+02, !dbg !36
  %j.0.i205 = select i1 %420, float 1.270000e+02, float %t.0.i204, !dbg !36
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i206 = icmp eq i32 %426, 0, !dbg !36
  br i1 %.not8.i206, label %429, label %427, !dbg !36

427:                                              ; preds = %__nv_expm1f.exit201
  %428 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i205) #3, !dbg !36
  br label %__nv_expm1f.exit228, !dbg !36

429:                                              ; preds = %__nv_expm1f.exit201
  %430 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i205) #3, !dbg !36
  br label %__nv_expm1f.exit228, !dbg !36

__nv_expm1f.exit228:                              ; preds = %427, %429
  %.0.i207 = phi float [ %428, %427 ], [ %430, %429 ], !dbg !36
  %431 = fcmp oeq <8 x float> %263, zeroinitializer, !dbg !36
  %432 = fadd float %390, %390, !dbg !36
  %433 = fcmp olt float %j.0.i178, -2.500000e+01, !dbg !36
  %434 = fcmp ogt float %j.0.i178, 1.280000e+02, !dbg !36
  %.not9.i195 = icmp eq i32 %410, 0, !dbg !36
  %.not7.i181 = icmp eq i32 %404, 0, !dbg !36
  %.not6.i182 = icmp eq i32 %403, 0, !dbg !36
  %.not5.i183 = icmp eq i32 %402, 0, !dbg !36
  %.not4.i184 = icmp eq i32 %401, 0, !dbg !36
  %.not3.i185 = icmp eq i32 %400, 0, !dbg !36
  %.not2.i186 = icmp eq i32 %398, 0, !dbg !36
  %435 = fneg float %t.0.i177, !dbg !36
  %.not1.i187 = icmp eq i32 %397, 0, !dbg !36
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %435, float 0x3FE62E4000000000, float %390) #3, !dbg !36
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float 0x3FE62E4000000000, float %390) #3, !dbg !36
  %.04.i188 = select i1 %.not1.i187, float %436, float %437, !dbg !36
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %435, float 0x3EB7F7D1C0000000, float %.04.i188) #3, !dbg !36
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float 0x3EB7F7D1C0000000, float %.04.i188) #3, !dbg !36
  %.05.i189 = select i1 %.not2.i186, float %438, float %439, !dbg !36
  %440 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i189, float 0x3F812ACC60000000) #3, !dbg !36
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i189, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i190 = select i1 %.not3.i185, float %440, float %441, !dbg !36
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i190, float %.05.i189, float 0x3FA5557C60000000) #3, !dbg !36
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i190, float %.05.i189, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i191 = select i1 %.not4.i184, float %442, float %443, !dbg !36
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i191, float %.05.i189, float 0x3FC5553EC0000000) #3, !dbg !36
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i191, float %.05.i189, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i192 = select i1 %.not5.i183, float %444, float %445, !dbg !36
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i192, float %.05.i189, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i192, float %.05.i189, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i193 = select i1 %.not6.i182, float %446, float %447, !dbg !36
  %448 = fmul float %.05.i189, %.06.i193, !dbg !36
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %448, float %.05.i189, float %.05.i189) #3, !dbg !36
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %448, float %.05.i189, float %.05.i189) #3, !dbg !36
  %.01.i194 = select i1 %.not7.i181, float %449, float %450, !dbg !36
  %451 = fadd float %.0.i180, -1.000000e+00, !dbg !36
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i194, float %.0.i180, float %451) #3, !dbg !36
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i194, float %.0.i180, float %451) #3, !dbg !36
  %.02.i196 = select i1 %.not9.i195, float %452, float %453, !dbg !36
  %454 = fadd float %.02.i196, %.02.i196, !dbg !36
  %u.0.i197 = select i1 %399, float %454, float %.02.i196, !dbg !36
  %u.1.i198 = select i1 %434, float 0x7FF0000000000000, float %u.0.i197, !dbg !36
  %u.2.i199 = select i1 %433, float -1.000000e+00, float %u.1.i198, !dbg !36
  %455 = extractelement <8 x i1> %431, i64 7, !dbg !36
  %u.3.i200 = select i1 %455, float %432, float %u.2.i199, !dbg !36
  %456 = fadd float %369, %369, !dbg !36
  %457 = fcmp olt float %j.0.i151, -2.500000e+01, !dbg !36
  %458 = fcmp ogt float %j.0.i151, 1.280000e+02, !dbg !36
  %.not9.i168 = icmp eq i32 %389, 0, !dbg !36
  %.not7.i154 = icmp eq i32 %383, 0, !dbg !36
  %.not6.i155 = icmp eq i32 %382, 0, !dbg !36
  %.not5.i156 = icmp eq i32 %381, 0, !dbg !36
  %.not4.i157 = icmp eq i32 %380, 0, !dbg !36
  %.not3.i158 = icmp eq i32 %379, 0, !dbg !36
  %.not2.i159 = icmp eq i32 %377, 0, !dbg !36
  %459 = fneg float %t.0.i150, !dbg !36
  %.not1.i160 = icmp eq i32 %376, 0, !dbg !36
  %460 = tail call float @llvm.nvvm.fma.rn.f(float %459, float 0x3FE62E4000000000, float %369) #3, !dbg !36
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %459, float 0x3FE62E4000000000, float %369) #3, !dbg !36
  %.04.i161 = select i1 %.not1.i160, float %460, float %461, !dbg !36
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %459, float 0x3EB7F7D1C0000000, float %.04.i161) #3, !dbg !36
  %463 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %459, float 0x3EB7F7D1C0000000, float %.04.i161) #3, !dbg !36
  %.05.i162 = select i1 %.not2.i159, float %462, float %463, !dbg !36
  %464 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i162, float 0x3F812ACC60000000) #3, !dbg !36
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i162, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i163 = select i1 %.not3.i158, float %464, float %465, !dbg !36
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i163, float %.05.i162, float 0x3FA5557C60000000) #3, !dbg !36
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i163, float %.05.i162, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i164 = select i1 %.not4.i157, float %466, float %467, !dbg !36
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i164, float %.05.i162, float 0x3FC5553EC0000000) #3, !dbg !36
  %469 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i164, float %.05.i162, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i165 = select i1 %.not5.i156, float %468, float %469, !dbg !36
  %470 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i165, float %.05.i162, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i165, float %.05.i162, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i166 = select i1 %.not6.i155, float %470, float %471, !dbg !36
  %472 = fmul float %.05.i162, %.06.i166, !dbg !36
  %473 = tail call float @llvm.nvvm.fma.rn.f(float %472, float %.05.i162, float %.05.i162) #3, !dbg !36
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %472, float %.05.i162, float %.05.i162) #3, !dbg !36
  %.01.i167 = select i1 %.not7.i154, float %473, float %474, !dbg !36
  %475 = fadd float %.0.i153, -1.000000e+00, !dbg !36
  %476 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i167, float %.0.i153, float %475) #3, !dbg !36
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i167, float %.0.i153, float %475) #3, !dbg !36
  %.02.i169 = select i1 %.not9.i168, float %476, float %477, !dbg !36
  %478 = fadd float %.02.i169, %.02.i169, !dbg !36
  %u.0.i170 = select i1 %378, float %478, float %.02.i169, !dbg !36
  %u.1.i171 = select i1 %458, float 0x7FF0000000000000, float %u.0.i170, !dbg !36
  %u.2.i172 = select i1 %457, float -1.000000e+00, float %u.1.i171, !dbg !36
  %479 = extractelement <8 x i1> %431, i64 6, !dbg !36
  %u.3.i173 = select i1 %479, float %456, float %u.2.i172, !dbg !36
  %480 = fadd float %348, %348, !dbg !36
  %481 = fcmp olt float %j.0.i124, -2.500000e+01, !dbg !36
  %482 = fcmp ogt float %j.0.i124, 1.280000e+02, !dbg !36
  %.not9.i141 = icmp eq i32 %368, 0, !dbg !36
  %.not7.i127 = icmp eq i32 %362, 0, !dbg !36
  %.not6.i128 = icmp eq i32 %361, 0, !dbg !36
  %.not5.i129 = icmp eq i32 %360, 0, !dbg !36
  %.not4.i130 = icmp eq i32 %359, 0, !dbg !36
  %.not3.i131 = icmp eq i32 %358, 0, !dbg !36
  %.not2.i132 = icmp eq i32 %356, 0, !dbg !36
  %483 = fneg float %t.0.i123, !dbg !36
  %.not1.i133 = icmp eq i32 %355, 0, !dbg !36
  %484 = tail call float @llvm.nvvm.fma.rn.f(float %483, float 0x3FE62E4000000000, float %348) #3, !dbg !36
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %483, float 0x3FE62E4000000000, float %348) #3, !dbg !36
  %.04.i134 = select i1 %.not1.i133, float %484, float %485, !dbg !36
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %483, float 0x3EB7F7D1C0000000, float %.04.i134) #3, !dbg !36
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %483, float 0x3EB7F7D1C0000000, float %.04.i134) #3, !dbg !36
  %.05.i135 = select i1 %.not2.i132, float %486, float %487, !dbg !36
  %488 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i135, float 0x3F812ACC60000000) #3, !dbg !36
  %489 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i135, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i136 = select i1 %.not3.i131, float %488, float %489, !dbg !36
  %490 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i136, float %.05.i135, float 0x3FA5557C60000000) #3, !dbg !36
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i136, float %.05.i135, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i137 = select i1 %.not4.i130, float %490, float %491, !dbg !36
  %492 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i137, float %.05.i135, float 0x3FC5553EC0000000) #3, !dbg !36
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i137, float %.05.i135, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i138 = select i1 %.not5.i129, float %492, float %493, !dbg !36
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i138, float %.05.i135, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %495 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i138, float %.05.i135, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i139 = select i1 %.not6.i128, float %494, float %495, !dbg !36
  %496 = fmul float %.05.i135, %.06.i139, !dbg !36
  %497 = tail call float @llvm.nvvm.fma.rn.f(float %496, float %.05.i135, float %.05.i135) #3, !dbg !36
  %498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %496, float %.05.i135, float %.05.i135) #3, !dbg !36
  %.01.i140 = select i1 %.not7.i127, float %497, float %498, !dbg !36
  %499 = fadd float %.0.i126, -1.000000e+00, !dbg !36
  %500 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i140, float %.0.i126, float %499) #3, !dbg !36
  %501 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i140, float %.0.i126, float %499) #3, !dbg !36
  %.02.i142 = select i1 %.not9.i141, float %500, float %501, !dbg !36
  %502 = fadd float %.02.i142, %.02.i142, !dbg !36
  %u.0.i143 = select i1 %357, float %502, float %.02.i142, !dbg !36
  %u.1.i144 = select i1 %482, float 0x7FF0000000000000, float %u.0.i143, !dbg !36
  %u.2.i145 = select i1 %481, float -1.000000e+00, float %u.1.i144, !dbg !36
  %503 = extractelement <8 x i1> %431, i64 5, !dbg !36
  %u.3.i146 = select i1 %503, float %480, float %u.2.i145, !dbg !36
  %504 = fadd float %327, %327, !dbg !36
  %505 = fcmp olt float %j.0.i97, -2.500000e+01, !dbg !36
  %506 = fcmp ogt float %j.0.i97, 1.280000e+02, !dbg !36
  %.not9.i114 = icmp eq i32 %347, 0, !dbg !36
  %.not7.i100 = icmp eq i32 %341, 0, !dbg !36
  %.not6.i101 = icmp eq i32 %340, 0, !dbg !36
  %.not5.i102 = icmp eq i32 %339, 0, !dbg !36
  %.not4.i103 = icmp eq i32 %338, 0, !dbg !36
  %.not3.i104 = icmp eq i32 %337, 0, !dbg !36
  %.not2.i105 = icmp eq i32 %335, 0, !dbg !36
  %507 = fneg float %t.0.i96, !dbg !36
  %.not1.i106 = icmp eq i32 %334, 0, !dbg !36
  %508 = tail call float @llvm.nvvm.fma.rn.f(float %507, float 0x3FE62E4000000000, float %327) #3, !dbg !36
  %509 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %507, float 0x3FE62E4000000000, float %327) #3, !dbg !36
  %.04.i107 = select i1 %.not1.i106, float %508, float %509, !dbg !36
  %510 = tail call float @llvm.nvvm.fma.rn.f(float %507, float 0x3EB7F7D1C0000000, float %.04.i107) #3, !dbg !36
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %507, float 0x3EB7F7D1C0000000, float %.04.i107) #3, !dbg !36
  %.05.i108 = select i1 %.not2.i105, float %510, float %511, !dbg !36
  %512 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i108, float 0x3F812ACC60000000) #3, !dbg !36
  %513 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i108, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i109 = select i1 %.not3.i104, float %512, float %513, !dbg !36
  %514 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i109, float %.05.i108, float 0x3FA5557C60000000) #3, !dbg !36
  %515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i109, float %.05.i108, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i110 = select i1 %.not4.i103, float %514, float %515, !dbg !36
  %516 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i110, float %.05.i108, float 0x3FC5553EC0000000) #3, !dbg !36
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i110, float %.05.i108, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i111 = select i1 %.not5.i102, float %516, float %517, !dbg !36
  %518 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i111, float %.05.i108, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %519 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i111, float %.05.i108, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i112 = select i1 %.not6.i101, float %518, float %519, !dbg !36
  %520 = fmul float %.05.i108, %.06.i112, !dbg !36
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %520, float %.05.i108, float %.05.i108) #3, !dbg !36
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %520, float %.05.i108, float %.05.i108) #3, !dbg !36
  %.01.i113 = select i1 %.not7.i100, float %521, float %522, !dbg !36
  %523 = fadd float %.0.i99, -1.000000e+00, !dbg !36
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i113, float %.0.i99, float %523) #3, !dbg !36
  %525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i113, float %.0.i99, float %523) #3, !dbg !36
  %.02.i115 = select i1 %.not9.i114, float %524, float %525, !dbg !36
  %526 = fadd float %.02.i115, %.02.i115, !dbg !36
  %u.0.i116 = select i1 %336, float %526, float %.02.i115, !dbg !36
  %u.1.i117 = select i1 %506, float 0x7FF0000000000000, float %u.0.i116, !dbg !36
  %u.2.i118 = select i1 %505, float -1.000000e+00, float %u.1.i117, !dbg !36
  %527 = extractelement <8 x i1> %431, i64 4, !dbg !36
  %u.3.i119 = select i1 %527, float %504, float %u.2.i118, !dbg !36
  %528 = fadd float %306, %306, !dbg !36
  %529 = fcmp olt float %j.0.i70, -2.500000e+01, !dbg !36
  %530 = fcmp ogt float %j.0.i70, 1.280000e+02, !dbg !36
  %.not9.i87 = icmp eq i32 %326, 0, !dbg !36
  %.not7.i73 = icmp eq i32 %320, 0, !dbg !36
  %.not6.i74 = icmp eq i32 %319, 0, !dbg !36
  %.not5.i75 = icmp eq i32 %318, 0, !dbg !36
  %.not4.i76 = icmp eq i32 %317, 0, !dbg !36
  %.not3.i77 = icmp eq i32 %316, 0, !dbg !36
  %.not2.i78 = icmp eq i32 %314, 0, !dbg !36
  %531 = fneg float %t.0.i69, !dbg !36
  %.not1.i79 = icmp eq i32 %313, 0, !dbg !36
  %532 = tail call float @llvm.nvvm.fma.rn.f(float %531, float 0x3FE62E4000000000, float %306) #3, !dbg !36
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %531, float 0x3FE62E4000000000, float %306) #3, !dbg !36
  %.04.i80 = select i1 %.not1.i79, float %532, float %533, !dbg !36
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %531, float 0x3EB7F7D1C0000000, float %.04.i80) #3, !dbg !36
  %535 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %531, float 0x3EB7F7D1C0000000, float %.04.i80) #3, !dbg !36
  %.05.i81 = select i1 %.not2.i78, float %534, float %535, !dbg !36
  %536 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i81, float 0x3F812ACC60000000) #3, !dbg !36
  %537 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i81, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i82 = select i1 %.not3.i77, float %536, float %537, !dbg !36
  %538 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i82, float %.05.i81, float 0x3FA5557C60000000) #3, !dbg !36
  %539 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i82, float %.05.i81, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i83 = select i1 %.not4.i76, float %538, float %539, !dbg !36
  %540 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i83, float %.05.i81, float 0x3FC5553EC0000000) #3, !dbg !36
  %541 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i83, float %.05.i81, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i84 = select i1 %.not5.i75, float %540, float %541, !dbg !36
  %542 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i84, float %.05.i81, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %543 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i84, float %.05.i81, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i85 = select i1 %.not6.i74, float %542, float %543, !dbg !36
  %544 = fmul float %.05.i81, %.06.i85, !dbg !36
  %545 = tail call float @llvm.nvvm.fma.rn.f(float %544, float %.05.i81, float %.05.i81) #3, !dbg !36
  %546 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %544, float %.05.i81, float %.05.i81) #3, !dbg !36
  %.01.i86 = select i1 %.not7.i73, float %545, float %546, !dbg !36
  %547 = fadd float %.0.i72, -1.000000e+00, !dbg !36
  %548 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i86, float %.0.i72, float %547) #3, !dbg !36
  %549 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i86, float %.0.i72, float %547) #3, !dbg !36
  %.02.i88 = select i1 %.not9.i87, float %548, float %549, !dbg !36
  %550 = fadd float %.02.i88, %.02.i88, !dbg !36
  %u.0.i89 = select i1 %315, float %550, float %.02.i88, !dbg !36
  %u.1.i90 = select i1 %530, float 0x7FF0000000000000, float %u.0.i89, !dbg !36
  %u.2.i91 = select i1 %529, float -1.000000e+00, float %u.1.i90, !dbg !36
  %551 = extractelement <8 x i1> %431, i64 3, !dbg !36
  %u.3.i92 = select i1 %551, float %528, float %u.2.i91, !dbg !36
  %552 = fadd float %285, %285, !dbg !36
  %553 = fcmp olt float %j.0.i43, -2.500000e+01, !dbg !36
  %554 = fcmp ogt float %j.0.i43, 1.280000e+02, !dbg !36
  %.not9.i60 = icmp eq i32 %305, 0, !dbg !36
  %.not7.i46 = icmp eq i32 %299, 0, !dbg !36
  %.not6.i47 = icmp eq i32 %298, 0, !dbg !36
  %.not5.i48 = icmp eq i32 %297, 0, !dbg !36
  %.not4.i49 = icmp eq i32 %296, 0, !dbg !36
  %.not3.i50 = icmp eq i32 %295, 0, !dbg !36
  %.not2.i51 = icmp eq i32 %293, 0, !dbg !36
  %555 = fneg float %t.0.i42, !dbg !36
  %.not1.i52 = icmp eq i32 %292, 0, !dbg !36
  %556 = tail call float @llvm.nvvm.fma.rn.f(float %555, float 0x3FE62E4000000000, float %285) #3, !dbg !36
  %557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %555, float 0x3FE62E4000000000, float %285) #3, !dbg !36
  %.04.i53 = select i1 %.not1.i52, float %556, float %557, !dbg !36
  %558 = tail call float @llvm.nvvm.fma.rn.f(float %555, float 0x3EB7F7D1C0000000, float %.04.i53) #3, !dbg !36
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %555, float 0x3EB7F7D1C0000000, float %.04.i53) #3, !dbg !36
  %.05.i54 = select i1 %.not2.i51, float %558, float %559, !dbg !36
  %560 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i54, float 0x3F812ACC60000000) #3, !dbg !36
  %561 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i54, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i55 = select i1 %.not3.i50, float %560, float %561, !dbg !36
  %562 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i55, float %.05.i54, float 0x3FA5557C60000000) #3, !dbg !36
  %563 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i55, float %.05.i54, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i56 = select i1 %.not4.i49, float %562, float %563, !dbg !36
  %564 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i56, float %.05.i54, float 0x3FC5553EC0000000) #3, !dbg !36
  %565 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i56, float %.05.i54, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i57 = select i1 %.not5.i48, float %564, float %565, !dbg !36
  %566 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i57, float %.05.i54, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %567 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i57, float %.05.i54, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i58 = select i1 %.not6.i47, float %566, float %567, !dbg !36
  %568 = fmul float %.05.i54, %.06.i58, !dbg !36
  %569 = tail call float @llvm.nvvm.fma.rn.f(float %568, float %.05.i54, float %.05.i54) #3, !dbg !36
  %570 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %568, float %.05.i54, float %.05.i54) #3, !dbg !36
  %.01.i59 = select i1 %.not7.i46, float %569, float %570, !dbg !36
  %571 = fadd float %.0.i45, -1.000000e+00, !dbg !36
  %572 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i59, float %.0.i45, float %571) #3, !dbg !36
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i59, float %.0.i45, float %571) #3, !dbg !36
  %.02.i61 = select i1 %.not9.i60, float %572, float %573, !dbg !36
  %574 = fadd float %.02.i61, %.02.i61, !dbg !36
  %u.0.i62 = select i1 %294, float %574, float %.02.i61, !dbg !36
  %u.1.i63 = select i1 %554, float 0x7FF0000000000000, float %u.0.i62, !dbg !36
  %u.2.i64 = select i1 %553, float -1.000000e+00, float %u.1.i63, !dbg !36
  %575 = extractelement <8 x i1> %431, i64 2, !dbg !36
  %u.3.i65 = select i1 %575, float %552, float %u.2.i64, !dbg !36
  %576 = fadd float %264, %264, !dbg !36
  %577 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !36
  %578 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !36
  %.not9.i = icmp eq i32 %284, 0, !dbg !36
  %.not7.i = icmp eq i32 %278, 0, !dbg !36
  %.not6.i = icmp eq i32 %277, 0, !dbg !36
  %.not5.i = icmp eq i32 %276, 0, !dbg !36
  %.not4.i = icmp eq i32 %275, 0, !dbg !36
  %.not3.i = icmp eq i32 %274, 0, !dbg !36
  %.not2.i38 = icmp eq i32 %272, 0, !dbg !36
  %579 = fneg float %t.0.i, !dbg !36
  %.not1.i39 = icmp eq i32 %271, 0, !dbg !36
  %580 = tail call float @llvm.nvvm.fma.rn.f(float %579, float 0x3FE62E4000000000, float %264) #3, !dbg !36
  %581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %579, float 0x3FE62E4000000000, float %264) #3, !dbg !36
  %.04.i = select i1 %.not1.i39, float %580, float %581, !dbg !36
  %582 = tail call float @llvm.nvvm.fma.rn.f(float %579, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !36
  %583 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %579, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !36
  %.05.i = select i1 %.not2.i38, float %582, float %583, !dbg !36
  %584 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !36
  %585 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i = select i1 %.not3.i, float %584, float %585, !dbg !36
  %586 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !36
  %587 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i = select i1 %.not4.i, float %586, float %587, !dbg !36
  %588 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !36
  %589 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i = select i1 %.not5.i, float %588, float %589, !dbg !36
  %590 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %591 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i = select i1 %.not6.i, float %590, float %591, !dbg !36
  %592 = fmul float %.05.i, %.06.i, !dbg !36
  %593 = tail call float @llvm.nvvm.fma.rn.f(float %592, float %.05.i, float %.05.i) #3, !dbg !36
  %594 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %592, float %.05.i, float %.05.i) #3, !dbg !36
  %.01.i = select i1 %.not7.i, float %593, float %594, !dbg !36
  %595 = fadd float %.0.i37, -1.000000e+00, !dbg !36
  %596 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i37, float %595) #3, !dbg !36
  %597 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i37, float %595) #3, !dbg !36
  %.02.i = select i1 %.not9.i, float %596, float %597, !dbg !36
  %598 = fadd float %.02.i, %.02.i, !dbg !36
  %u.0.i = select i1 %273, float %598, float %.02.i, !dbg !36
  %u.1.i = select i1 %578, float 0x7FF0000000000000, float %u.0.i, !dbg !36
  %u.2.i = select i1 %577, float -1.000000e+00, float %u.1.i, !dbg !36
  %599 = extractelement <8 x i1> %431, i64 1, !dbg !36
  %u.3.i = select i1 %599, float %576, float %u.2.i, !dbg !36
  %600 = fcmp ogt float %411, 0.000000e+00, !dbg !37
  %601 = fcmp ogt float %390, 0.000000e+00, !dbg !37
  %602 = fcmp ogt float %369, 0.000000e+00, !dbg !37
  %603 = fcmp ogt float %348, 0.000000e+00, !dbg !37
  %604 = fcmp ogt float %327, 0.000000e+00, !dbg !37
  %605 = fcmp ogt float %306, 0.000000e+00, !dbg !37
  %606 = fcmp ogt float %285, 0.000000e+00, !dbg !37
  %607 = fcmp ogt float %264, 0.000000e+00, !dbg !37
  %.not7.i208 = icmp eq i32 %425, 0, !dbg !36
  %.not6.i209 = icmp eq i32 %424, 0, !dbg !36
  %.not5.i210 = icmp eq i32 %423, 0, !dbg !36
  %.not4.i211 = icmp eq i32 %422, 0, !dbg !36
  %.not3.i212 = icmp eq i32 %421, 0, !dbg !36
  %.not2.i213 = icmp eq i32 %419, 0, !dbg !36
  %608 = fneg float %t.0.i204, !dbg !36
  %.not1.i214 = icmp eq i32 %418, 0, !dbg !36
  %609 = tail call float @llvm.nvvm.fma.rn.f(float %608, float 0x3FE62E4000000000, float %411) #3, !dbg !36
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %608, float 0x3FE62E4000000000, float %411) #3, !dbg !36
  %.04.i215 = select i1 %.not1.i214, float %609, float %610, !dbg !36
  %611 = tail call float @llvm.nvvm.fma.rn.f(float %608, float 0x3EB7F7D1C0000000, float %.04.i215) #3, !dbg !36
  %612 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %608, float 0x3EB7F7D1C0000000, float %.04.i215) #3, !dbg !36
  %.05.i216 = select i1 %.not2.i213, float %611, float %612, !dbg !36
  %613 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i216, float 0x3F812ACC60000000) #3, !dbg !36
  %614 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i216, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i217 = select i1 %.not3.i212, float %613, float %614, !dbg !36
  %615 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i217, float %.05.i216, float 0x3FA5557C60000000) #3, !dbg !36
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i217, float %.05.i216, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i218 = select i1 %.not4.i211, float %615, float %616, !dbg !36
  %617 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i218, float %.05.i216, float 0x3FC5553EC0000000) #3, !dbg !36
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i218, float %.05.i216, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i219 = select i1 %.not5.i210, float %617, float %618, !dbg !36
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i219, float %.05.i216, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i219, float %.05.i216, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i220 = select i1 %.not6.i209, float %619, float %620, !dbg !36
  %621 = fmul float %.05.i216, %.06.i220, !dbg !36
  %622 = tail call float @llvm.nvvm.fma.rn.f(float %621, float %.05.i216, float %.05.i216) #3, !dbg !36
  %623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %621, float %.05.i216, float %.05.i216) #3, !dbg !36
  %.01.i221 = select i1 %.not7.i208, float %622, float %623, !dbg !36
  %624 = fadd float %.0.i207, -1.000000e+00, !dbg !36
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not9.i222 = icmp eq i32 %625, 0, !dbg !36
  %626 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i221, float %.0.i207, float %624) #3, !dbg !36
  %627 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i221, float %.0.i207, float %624) #3, !dbg !36
  %.02.i223 = select i1 %.not9.i222, float %627, float %626, !dbg !36
  %628 = fadd float %.02.i223, %.02.i223, !dbg !36
  %u.0.i224 = select i1 %420, float %628, float %.02.i223, !dbg !36
  %629 = fcmp ogt float %j.0.i205, 1.280000e+02, !dbg !36
  %u.1.i225 = select i1 %629, float 0x7FF0000000000000, float %u.0.i224, !dbg !36
  %630 = fcmp olt float %j.0.i205, -2.500000e+01, !dbg !36
  %u.2.i226 = select i1 %630, float -1.000000e+00, float %u.1.i225, !dbg !36
  %631 = fadd float %411, %411, !dbg !36
  %632 = extractelement <8 x i1> %431, i64 0, !dbg !36
  %u.3.i227 = select i1 %632, float %631, float %u.2.i226, !dbg !36
  %633 = select i1 %607, float %264, float %u.3.i, !dbg !38
  %634 = select i1 %606, float %285, float %u.3.i65, !dbg !38
  %635 = select i1 %605, float %306, float %u.3.i92, !dbg !38
  %636 = select i1 %604, float %327, float %u.3.i119, !dbg !38
  %637 = select i1 %603, float %348, float %u.3.i146, !dbg !38
  %638 = select i1 %602, float %369, float %u.3.i173, !dbg !38
  %639 = select i1 %601, float %390, float %u.3.i200, !dbg !38
  %640 = select i1 %600, float %411, float %u.3.i227, !dbg !38
  %bc = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %641 = extractelement <8 x i32> %bc, i64 1, !dbg !39
  %bc229 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %642 = extractelement <8 x i32> %bc229, i64 2, !dbg !39
  %bc230 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %643 = extractelement <8 x i32> %bc230, i64 3, !dbg !39
  %bc231 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %644 = extractelement <8 x i32> %bc231, i64 4, !dbg !39
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %641, i32 %642, i32 %643, i32 %644, ptr addrspace(1) %21, i1 true) #3, !dbg !39
  %bc232 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %645 = extractelement <8 x i32> %bc232, i64 5, !dbg !39
  %bc233 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %646 = extractelement <8 x i32> %bc233, i64 6, !dbg !39
  %bc234 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %647 = extractelement <8 x i32> %bc234, i64 7, !dbg !39
  %bc235 = bitcast <8 x float> %139 to <8 x i32>, !dbg !39
  %648 = extractelement <8 x i32> %bc235, i64 0, !dbg !39
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %645, i32 %646, i32 %647, i32 %648, ptr addrspace(1) %23, i1 true) #3, !dbg !39
  %649 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !40
  %650 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !40
  %651 = bitcast float %633 to i32, !dbg !41
  %652 = bitcast float %634 to i32, !dbg !41
  %653 = bitcast float %635 to i32, !dbg !41
  %654 = bitcast float %636 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %651, i32 %652, i32 %653, i32 %654, ptr addrspace(1) %649, i1 true) #3, !dbg !41
  %655 = bitcast float %637 to i32, !dbg !41
  %656 = bitcast float %638 to i32, !dbg !41
  %657 = bitcast float %639 to i32, !dbg !41
  %658 = bitcast float %640 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %655, i32 %656, i32 %657, i32 %658, ptr addrspace(1) %650, i1 true) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpp6il6ruyaddoei3s3ok7rioyo47woqcceswtosjoag4twrd3iw.py", directory: "inductor_cache/pp")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 29, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 26, scope: !7)
!32 = !DILocation(line: 38, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 43, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 28, scope: !7)
!37 = !DILocation(line: 45, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 35, scope: !7)
!39 = !DILocation(line: 50, column: 39, scope: !7)
!40 = !DILocation(line: 51, column: 28, scope: !7)
!41 = !DILocation(line: 51, column: 40, scope: !7)
!42 = !DILocation(line: 51, column: 4, scope: !7)
