//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_index_put_lift_fresh_repeat_1 // -- Begin function triton_poi_fused_index_put_lift_fresh_repeat_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 52, 103, 47, 99, 52, 103, 117, 54, 118, 119, 109, 118, 121, 54, 116, 52, 121, 119, 108, 113, 52, 121, 51, 122, 98, 116, 103, 117, 115, 122, 105, 97, 54, 108, 117, 110, 55, 54, 51, 53, 120, 99, 103, 106, 121, 109, 52, 115, 120, 112, 107, 99, 100, 113, 97, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
                                        // @triton_poi_fused_index_put_lift_fresh_repeat_1
.visible .entry triton_poi_fused_index_put_lift_fresh_repeat_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_put_lift_fresh_repeat_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_index_put_lift_fresh_repeat_1_param_1,
	.param .u32 triton_poi_fused_index_put_lift_fresh_repeat_1_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_index_put_lift_fresh_repeat_1_param_0];
$L__tmp0:
	.loc	1 21 28                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:21:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:21:33
	shl.b32 	%r5, %r4, 6;
	.loc	1 22 36                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:22:36
	mov.u32 	%r6, %tid.x;
	shl.b32 	%r7, %r6, 1;
	and.b32  	%r8, %r7, 62;
	.loc	1 22 23                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:22:23
	or.b32  	%r1, %r5, %r8;
	.loc	1 23 21                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:23:21
	setp.gt.s32 	%p3, %r1, 63;
	setp.lt.s32 	%p2, %r1, 64;
	.loc	1 24 19                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:24:19
	shr.s32 	%r9, %r1, 31;
	shr.u32 	%r10, %r9, 28;
	add.s32 	%r11, %r1, %r10;
	shr.s32 	%r3, %r11, 4;
	.loc	1 26 30                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:26:30
	mul.wide.s32 	%rd8, %r3, 8;
	add.s64 	%rd4, %rd7, %rd8;
	.loc	1 26 35                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:26:35
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 30 32                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:30:32
	shr.u64 	%rd9, %rd3, 61;
	and.b64  	%rd10, %rd9, 4;
	add.s64 	%rd1, %rd10, %rd3;
	.loc	1 31 37                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:31:37
	setp.lt.u64 	%p4, %rd1, 4;
	.loc	1 31 60                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:31:60
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:0:60
	ld.param.u64 	%rd2, [triton_poi_fused_index_put_lift_fresh_repeat_1_param_1];
	.loc	1 25 19                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:25:19
	shl.b32 	%r14, %r3, 4;
	sub.s32 	%r15, %r1, %r14;
	.loc	1 31 60                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:31:60
	bar.sync 	0;
	.loc	1 33 25                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:33:25
	shl.b64 	%rd12, %rd1, 6;
	add.s64 	%rd13, %rd2, %rd12;
	mul.wide.s32 	%rd14, %r15, 4;
	add.s64 	%rd11, %rd13, %rd14;
	mov.b32 	%r12, 0;
	.loc	1 33 46                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:33:46
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd11 + 0 ], { %r12, %r12 };
	// end inline asm
	.loc	1 33 4                          // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:33:4
	ret;
$L__BB0_1:
	.loc	1 31 60                         // c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py:31:60
	mov.u64 	%rd15, assertMessage_0;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, assertFile_0;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, assertFunc_0;
	cvta.global.u64 	%rd20, %rd19;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd16;
	.param .b64 param1;
	st.param.b64 	[param1], %rd18;
	.param .b32 param2;
	st.param.b32 	[param2], 31;
	.param .b64 param3;
	st.param.b64 	[param3], %rd20;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4g/c4gu6vwmvy6t4ywlq4y3zbtguszia6lun7635xcgjym4sxpkcdqa.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 103
.b8 117
.b8 54
.b8 118
.b8 119
.b8 109
.b8 118
.b8 121
.b8 54
.b8 116
.b8 52
.b8 121
.b8 119
.b8 108
.b8 113
.b8 52
.b8 121
.b8 51
.b8 122
.b8 98
.b8 116
.b8 103
.b8 117
.b8 115
.b8 122
.b8 105
.b8 97
.b8 54
.b8 108
.b8 117
.b8 110
.b8 55
.b8 54
.b8 51
.b8 53
.b8 120
.b8 99
.b8 103
.b8 106
.b8 121
.b8 109
.b8 52
.b8 115
.b8 120
.b8 112
.b8 107
.b8 99
.b8 100
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
