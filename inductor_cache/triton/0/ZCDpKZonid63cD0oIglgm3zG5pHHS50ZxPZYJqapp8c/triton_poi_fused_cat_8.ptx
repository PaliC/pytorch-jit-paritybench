//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_8  // -- Begin function triton_poi_fused_cat_8
                                        // @triton_poi_fused_cat_8
.visible .entry triton_poi_fused_cat_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_8_param_1,
	.param .u32 triton_poi_fused_cat_8_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_cat_8_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_cat_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:21:33
	shl.b32 	%r6, %r1, 6;
	.loc	1 22 36                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:22:36
	mov.u32 	%r7, %tid.x;
	and.b32  	%r8, %r7, 31;
	.loc	1 22 23                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:22:23
	or.b32  	%r9, %r6, %r8;
	or.b32  	%r10, %r9, 32;
	.loc	1 23 21                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:23:21
	setp.lt.s32 	%p1, %r9, 64;
	setp.lt.s32 	%p2, %r10, 64;
	.loc	1 25 37                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:25:37
	shl.b32 	%r11, %r9, 4;
	shl.b32 	%r12, %r10, 4;
	.loc	1 25 30                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:25:30
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd8, %rd5, %rd7;
	add.s64 	%rd1, %rd8, 12;
	mul.wide.s32 	%rd9, %r12, 4;
	add.s64 	%rd10, %rd5, %rd9;
	add.s64 	%rd2, %rd10, 12;
	.loc	1 25 42                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:25:42
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 26 25                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:26:25
	add.s64 	%rd3, %rd6, %rd7;
	add.s64 	%rd4, %rd6, %rd9;
	.loc	1 26 39                         // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:26:39
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r4 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.b32 [ %rd4 + 0 ], { %r5 };
	// end inline asm
	.loc	1 26 4                          // cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py:26:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/he/cheppyzvdso2lilsuujcnsfew5kgfzaalntlezzj3loyclx5zilc.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 101
.b8 112
.b8 112
.b8 121
.b8 122
.b8 118
.b8 100
.b8 115
.b8 111
.b8 50
.b8 108
.b8 105
.b8 108
.b8 115
.b8 117
.b8 117
.b8 106
.b8 99
.b8 110
.b8 115
.b8 102
.b8 101
.b8 119
.b8 53
.b8 107
.b8 103
.b8 102
.b8 122
.b8 97
.b8 97
.b8 108
.b8 110
.b8 116
.b8 108
.b8 101
.b8 122
.b8 122
.b8 106
.b8 51
.b8 108
.b8 111
.b8 121
.b8 99
.b8 108
.b8 120
.b8 53
.b8 122
.b8 105
.b8 108
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 101
.b8 0
	}
	.section	.debug_macinfo	{	}
