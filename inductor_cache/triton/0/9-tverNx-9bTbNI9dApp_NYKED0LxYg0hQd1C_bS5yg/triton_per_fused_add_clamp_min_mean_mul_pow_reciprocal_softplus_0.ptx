//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0 // -- Begin function triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0
.visible .entry triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_3,
	.param .u32 triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_4,
	.param .u32 triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<73>;
	.reg .f32 	%f<270>;
	.reg .b64 	%rd<10>;
$L__func_begin0:

// %bb.0:
	.loc	1 23 28                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:23:28
	// begin inline asm
	mov.u32 %r6, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd5, [triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_1];
	.loc	1 25 21                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:25:21
	setp.lt.s32 	%p3, %r6, 16;
	ld.param.u64 	%rd4, [triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_2];
	.loc	1 26 34                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:26:34
	mov.u32 	%r2, %tid.x;
	and.b32  	%r10, %r2, 15;
	.loc	1 31 38                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:31:38
	shl.b32 	%r11, %r6, 4;
	.loc	1 31 35                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:31:35
	or.b32  	%r12, %r11, %r10;
	.loc	1 31 30                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:31:30
	mul.wide.s32 	%rd6, %r12, 4;
	add.s64 	%rd3, %rd5, %rd6;
	mov.b32 	%r8, 0;
	.loc	1 31 43                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:31:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.b32 { %r7 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r7, %r8;
	// end inline asm
	mov.b32 	%f46, %r7;
	mov.pred 	%p5, -1;
	.loc	1 32 19                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:32:19
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.b32 { %r9 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
$L__tmp0:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p6, %f46, 0f358637BD;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p7, %f46, %f46;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f47, %f46, 0f358637BD, %p7;
	selp.f32 	%f2, %f46, %f47, %p6;
$L__tmp1:
	.loc	1 39 23                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:39:23
	mul.f32 	%f45, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f44, %f45;
	// end inline asm
	mov.f32 	%f48, 0f3F800000;
	.loc	1 40 27                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:40:27
	add.rz.ftz.f32 	%f49, %f44, %f48;
	mov.b32 	%r13, %f49;
	add.s32 	%r14, %r13, -1061158912;
	and.b32  	%r15, %r14, -8388608;
	mov.b32 	%r3, %f44;
	sub.s32 	%r16, %r3, %r15;
	mov.b32 	%f50, %r16;
	mov.b32 	%r17, 1082130432;
	sub.s32 	%r18, %r17, %r15;
	mov.b32 	%f51, %r18;
	mov.f32 	%f52, 0fBF800000;
	mov.f32 	%f53, 0f3E800000;
	fma.rn.ftz.f32 	%f54, %f53, %f51, %f52;
	add.f32 	%f55, %f54, %f50;
	cvt.rn.f32.s32 	%f56, %r15;
	mul.f32 	%f57, %f56, 0f34000000;
	mov.f32 	%f58, 0f3DD80012;
	mov.f32 	%f59, 0fBD39BF78;
	fma.rn.ftz.f32 	%f60, %f59, %f55, %f58;
	mov.f32 	%f61, 0fBE0778E0;
	fma.rn.ftz.f32 	%f62, %f60, %f55, %f61;
	mov.f32 	%f63, 0f3E146475;
	fma.rn.ftz.f32 	%f64, %f62, %f55, %f63;
	mov.f32 	%f65, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f66, %f64, %f55, %f65;
	mov.f32 	%f67, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f68, %f66, %f55, %f67;
	mov.f32 	%f69, 0fBE800042;
	fma.rn.ftz.f32 	%f70, %f68, %f55, %f69;
	mov.f32 	%f71, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f72, %f70, %f55, %f71;
	mov.f32 	%f73, 0fBF000000;
	fma.rn.ftz.f32 	%f74, %f72, %f55, %f73;
	mul.f32 	%f75, %f55, %f74;
	fma.rn.ftz.f32 	%f76, %f75, %f55, %f55;
	mov.f32 	%f77, 0f3F317218;
	fma.rn.ftz.f32 	%f263, %f57, %f77, %f76;
	setp.lt.u32 	%p8, %r3, 2139095040;
	@%p8 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p9, %r3, -1082130431;
	@%p9 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 27                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:0:27
	mov.f32 	%f78, 0f7F800000;
	fma.rn.ftz.f32 	%f263, %f44, %f78, %f78;
$L__BB0_3:
	.loc	1 40 27                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:40:27
	setp.eq.f32 	%p10, %f44, 0f00000000;
	selp.f32 	%f263, 0f80000000, %f263, %p10;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 27                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:0:27
	mov.f32 	%f264, 0f7F800000;
	.loc	1 38 18                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:38:18
	setp.gt.f32 	%p11, %f1, 0f41A00000;
	.loc	1 41 32                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:41:32
	selp.f32 	%f82, %f1, %f263, %p11;
	.loc	1 43 19                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:43:19
	add.f32 	%f9, %f82, 0f3F800000;
	.loc	1 44 32                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:44:32
	mul.f32 	%f83, %f9, 0f3F000000;
	cvt.rzi.f32.f32 	%f84, %f83;
	fma.rn.f32 	%f85, %f84, 0fC0000000, %f9;
	abs.ftz.f32 	%f10, %f85;
	abs.ftz.f32 	%f11, %f2;
	mov.b32 	%r19, %f11;
	and.b32  	%r20, %r19, 8388607;
	or.b32  	%r21, %r20, 1065353216;
	mov.b32 	%f86, %r21;
	shr.u32 	%r22, %r19, 23;
	cvt.rn.f32.u32 	%f87, %r22;
	add.f32 	%f88, %f87, 0fC2FE0000;
	setp.gt.f32 	%p12, %f86, 0f3FB504F3;
	mul.f32 	%f89, %f86, 0f3F000000;
	add.f32 	%f90, %f88, 0f3F800000;
	selp.f32 	%f91, %f90, %f88, %p12;
	selp.f32 	%f92, %f89, %f86, %p12;
	add.f32 	%f93, %f92, 0fBF800000;
	add.f32 	%f80, %f92, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f79,%f80;
	// end inline asm
	add.f32 	%f94, %f93, %f93;
	mul.f32 	%f95, %f79, %f94;
	mul.f32 	%f96, %f95, %f95;
	mov.f32 	%f97, 0f3C4CAF63;
	mov.f32 	%f98, 0f3B18F0FE;
	fma.rn.ftz.f32 	%f99, %f98, %f96, %f97;
	mov.f32 	%f100, 0f3DAAAABD;
	fma.rn.ftz.f32 	%f101, %f99, %f96, %f100;
	mul.rn.ftz.f32 	%f102, %f101, %f96;
	mul.rn.ftz.f32 	%f103, %f102, %f95;
	neg.f32 	%f104, %f79;
	fma.rn.f32 	%f105, %f104, %f94, %f93;
	add.f32 	%f106, %f105, %f105;
	neg.f32 	%f107, %f95;
	fma.rn.ftz.f32 	%f108, %f107, %f93, %f106;
	mul.rn.ftz.f32 	%f109, %f79, %f108;
	fma.rn.f32 	%f110, %f79, %f94, %f103;
	neg.f32 	%f111, %f110;
	fma.rn.f32 	%f112, %f79, %f94, %f111;
	add.f32 	%f113, %f103, %f112;
	add.f32 	%f114, %f109, %f113;
	add.f32 	%f115, %f110, %f114;
	sub.f32 	%f116, %f110, %f115;
	add.f32 	%f117, %f114, %f116;
	mov.f32 	%f118, 0f3F317200;
	mul.rn.ftz.f32 	%f119, %f91, %f118;
	mov.f32 	%f120, 0f35BFBE8E;
	mul.rn.ftz.f32 	%f121, %f91, %f120;
	add.f32 	%f122, %f119, %f115;
	sub.f32 	%f123, %f119, %f122;
	add.f32 	%f124, %f115, %f123;
	add.f32 	%f125, %f117, %f124;
	add.f32 	%f126, %f121, %f125;
	add.f32 	%f127, %f122, %f126;
	sub.f32 	%f128, %f122, %f127;
	add.f32 	%f129, %f126, %f128;
	abs.ftz.f32 	%f12, %f9;
	setp.gt.f32 	%p13, %f12, 0f77F684DF;
	mul.f32 	%f130, %f9, 0f39000000;
	selp.f32 	%f131, %f130, %f9, %p13;
	mul.rn.ftz.f32 	%f13, %f131, %f127;
	neg.f32 	%f132, %f13;
	fma.rn.ftz.f32 	%f133, %f131, %f127, %f132;
	fma.rn.ftz.f32 	%f134, %f131, %f129, %f133;
	mov.f32 	%f135, 0f00000000;
	fma.rn.ftz.f32 	%f14, %f135, %f127, %f134;
	add.rn.ftz.f32 	%f15, %f13, %f14;
	mov.b32 	%r4, %f15;
	setp.eq.s32 	%p14, %r4, 1118925336;
	selp.f32 	%f136, 0f42B17217, %f15, %p14;
	mov.f32 	%f137, 0f3FB8AA3B;
	mul.rn.ftz.f32 	%f138, %f136, %f137;
	cvt.rzi.f32.f32 	%f139, %f138;
	abs.ftz.f32 	%f140, %f139;
	setp.gt.f32 	%p15, %f140, 0f42FC0000;
	mov.f32 	%f141, 0f42FC0000;
	copysign.f32 	%f142, %f139, %f141;
	selp.f32 	%f143, %f142, %f139, %p15;
	mov.f32 	%f144, 0fBF317218;
	fma.rn.ftz.f32 	%f145, %f143, %f144, %f136;
	mov.f32 	%f146, 0f3102E308;
	fma.rn.ftz.f32 	%f147, %f143, %f146, %f145;
	mul.f32 	%f148, %f147, 0f3FB8AA3B;
	add.f32 	%f149, %f143, 0f4B40007F;
	mov.b32 	%r23, %f149;
	shl.b32 	%r24, %r23, 23;
	mov.b32 	%f150, %r24;
	ex2.approx.ftz.f32 	%f151, %f148;
	mul.f32 	%f16, %f151, %f150;
	setp.eq.f32 	%p16, %f16, 0f7F800000;
	@%p16 bra 	$L__BB0_6;
// %bb.5:                               // %__internal_fmad.exit.i.i
	neg.f32 	%f152, %f15;
	add.rn.ftz.f32 	%f153, %f13, %f152;
	add.rn.ftz.f32 	%f154, %f153, %f14;
	add.f32 	%f155, %f154, 0f37000000;
	selp.f32 	%f156, %f155, %f154, %p14;
	fma.rn.ftz.f32 	%f264, %f16, %f156, %f16;
$L__BB0_6:                              // %__internal_accurate_powf.exit.i
	setp.eq.f32 	%p18, %f10, 0f3F800000;
	setp.lt.f32 	%p19, %f2, 0f00000000;
	and.pred  	%p1, %p19, %p18;
	setp.neu.f32 	%p20, %f2, 0f00000000;
	@%p20 bra 	$L__BB0_8;
// %bb.7:
	add.f32 	%f162, %f2, %f2;
	mov.b32 	%r25, %f162;
	selp.b32 	%r26, %r25, 0, %p18;
	setp.lt.f32 	%p24, %f9, 0f00000000;
	or.b32  	%r27, %r26, 2139095040;
	selp.b32 	%r28, %r27, %r26, %p24;
	mov.b32 	%f266, %r28;
	bra.uni 	$L__BB0_9;
$L__BB0_8:
	neg.f32 	%f157, %f264;
	selp.f32 	%f158, %f157, %f264, %p1;
	cvt.rzi.f32.f32 	%f159, %f9;
	setp.neu.f32 	%p22, %f9, %f159;
	selp.f32 	%f161, 0f7FFFFFFF, %f158, %p22;
	selp.f32 	%f266, %f161, %f158, %p19;
$L__BB0_9:                              // %__internal_powf_corner_cases.exit.i
	add.f32 	%f163, %f11, %f12;
	mov.b32 	%r29, %f163;
	setp.lt.s32 	%p25, %r29, 2139095040;
	@%p25 bra 	$L__BB0_17;
// %bb.10:                              // %__nv_isnanf.exit.i.i
	setp.nan.f32 	%p26, %f11, %f11;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %__nv_isnanf.exit11.i.i
	setp.num.f32 	%p27, %f12, %f12;
	@%p27 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %__nv_isinff.exit8.i.i
	setp.neu.f32 	%p28, %f12, 0f7F800000;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %__nv_fabsf.exit5.i.i
	setp.gt.f32 	%p31, %f11, 0f3F800000;
	selp.b32 	%r33, 2139095040, 0, %p31;
	setp.lt.f32 	%p32, %f9, 0f00000000;
	xor.b32  	%r34, %r33, 2139095040;
	selp.b32 	%r35, %r34, %r33, %p32;
	setp.eq.f32 	%p33, %f2, 0fBF800000;
	mov.b32 	%f164, %r35;
	selp.f32 	%f266, 0f3F800000, %f164, %p33;
	bra.uni 	$L__BB0_17;
$L__BB0_15:                             // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p29, %f11, 0f7F800000;
	@%p29 bra 	$L__BB0_17;
// %bb.16:
	.loc	1 0 32                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:0:32
	setp.ge.f32 	%p30, %f9, 0f00000000;
	selp.b32 	%r30, 2139095040, 0, %p30;
	or.b32  	%r31, %r30, -2147483648;
	selp.b32 	%r32, %r31, %r30, %p1;
	mov.b32 	%f266, %r32;
$L__BB0_17:                             // %__nv_powf.exit
	.loc	1 44 32                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:44:32
	setp.eq.f32 	%p35, %f2, 0f3F800000;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	selp.f32 	%f168, 0f3F800000, %f266, %p36;
	selp.f32 	%f169, 0f3F800000, %f168, %p35;
	.loc	1 46 35                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:46:35
	selp.f32 	%f170, %f169, 0f00000000, %p3;
$L__tmp2:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f170;
	shfl.sync.bfly.b32	%r43, %r42, 8, 31, -1;
	mov.b32 	%f171, %r43;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f172;
	shfl.sync.bfly.b32	%r45, %r44, 4, 31, -1;
	mov.b32 	%f173, %r45;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f174, %f172, %f173;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f174;
	shfl.sync.bfly.b32	%r47, %r46, 2, 31, -1;
	mov.b32 	%f175, %r47;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f176, %f174, %f175;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f176;
	shfl.sync.bfly.b32	%r49, %r48, 1, 31, -1;
	mov.b32 	%f177, %r49;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f178, %f176, %f177;
$L__tmp3:
	.loc	1 49 20                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:49:20
	mov.b32 	%r37, %f178;
	mov.b32 	%r38, 1098907648;
	// begin inline asm
	div.full.f32 %r72, %r37, %r38;
	// end inline asm
	mov.b32 	%f26, %r72;
	.loc	1 56 20                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:56:20
	mov.b32 	%r41, %f9;
	mov.b32 	%r40, 1065353216;
	// begin inline asm
	div.full.f32 %r39, %r40, %r41;
	// end inline asm
	mov.b32 	%f27, %r39;
	.loc	1 58 33                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:58:33
	mul.f32 	%f179, %f27, 0f3F000000;
	cvt.rzi.f32.f32 	%f180, %f179;
	fma.rn.f32 	%f181, %f180, 0fC0000000, %f27;
	abs.ftz.f32 	%f28, %f181;
	abs.ftz.f32 	%f29, %f26;
	mov.b32 	%r50, %f29;
	and.b32  	%r51, %r50, 8388607;
	or.b32  	%r52, %r51, 1065353216;
	mov.b32 	%f182, %r52;
	shr.u32 	%r53, %r50, 23;
	cvt.rn.f32.u32 	%f183, %r53;
	add.f32 	%f184, %f183, 0fC2FE0000;
	setp.gt.f32 	%p37, %f182, 0f3FB504F3;
	mul.f32 	%f185, %f182, 0f3F000000;
	add.f32 	%f186, %f184, 0f3F800000;
	selp.f32 	%f187, %f186, %f184, %p37;
	selp.f32 	%f188, %f185, %f182, %p37;
	add.f32 	%f189, %f188, 0fBF800000;
	add.f32 	%f166, %f188, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f165,%f166;
	// end inline asm
	add.f32 	%f190, %f189, %f189;
	mul.f32 	%f191, %f165, %f190;
	mul.f32 	%f192, %f191, %f191;
	fma.rn.ftz.f32 	%f195, %f98, %f192, %f97;
	fma.rn.ftz.f32 	%f197, %f195, %f192, %f100;
	mul.rn.ftz.f32 	%f198, %f197, %f192;
	mul.rn.ftz.f32 	%f199, %f198, %f191;
	neg.f32 	%f200, %f165;
	fma.rn.f32 	%f201, %f200, %f190, %f189;
	add.f32 	%f202, %f201, %f201;
	neg.f32 	%f203, %f191;
	fma.rn.ftz.f32 	%f204, %f203, %f189, %f202;
	mul.rn.ftz.f32 	%f205, %f165, %f204;
	fma.rn.f32 	%f206, %f165, %f190, %f199;
	neg.f32 	%f207, %f206;
	fma.rn.f32 	%f208, %f165, %f190, %f207;
	add.f32 	%f209, %f199, %f208;
	add.f32 	%f210, %f205, %f209;
	add.f32 	%f211, %f206, %f210;
	sub.f32 	%f212, %f206, %f211;
	add.f32 	%f213, %f210, %f212;
	mul.rn.ftz.f32 	%f215, %f187, %f118;
	mul.rn.ftz.f32 	%f217, %f187, %f120;
	add.f32 	%f218, %f215, %f211;
	sub.f32 	%f219, %f215, %f218;
	add.f32 	%f220, %f211, %f219;
	add.f32 	%f221, %f213, %f220;
	add.f32 	%f222, %f217, %f221;
	add.f32 	%f223, %f218, %f222;
	sub.f32 	%f224, %f218, %f223;
	add.f32 	%f225, %f222, %f224;
	abs.ftz.f32 	%f30, %f27;
	setp.gt.f32 	%p38, %f30, 0f77F684DF;
	mul.f32 	%f226, %f27, 0f39000000;
	selp.f32 	%f227, %f226, %f27, %p38;
	mul.rn.ftz.f32 	%f31, %f227, %f223;
	neg.f32 	%f228, %f31;
	fma.rn.ftz.f32 	%f229, %f227, %f223, %f228;
	fma.rn.ftz.f32 	%f230, %f227, %f225, %f229;
	fma.rn.ftz.f32 	%f32, %f135, %f223, %f230;
	add.rn.ftz.f32 	%f33, %f31, %f32;
	mov.b32 	%r5, %f33;
	setp.eq.s32 	%p39, %r5, 1118925336;
	selp.f32 	%f232, 0f42B17217, %f33, %p39;
	mul.rn.ftz.f32 	%f234, %f232, %f137;
	cvt.rzi.f32.f32 	%f235, %f234;
	abs.ftz.f32 	%f236, %f235;
	setp.gt.f32 	%p40, %f236, 0f42FC0000;
	copysign.f32 	%f238, %f235, %f141;
	selp.f32 	%f239, %f238, %f235, %p40;
	fma.rn.ftz.f32 	%f241, %f239, %f144, %f232;
	fma.rn.ftz.f32 	%f243, %f239, %f146, %f241;
	mul.f32 	%f244, %f243, 0f3FB8AA3B;
	add.f32 	%f245, %f239, 0f4B40007F;
	mov.b32 	%r54, %f245;
	shl.b32 	%r55, %r54, 23;
	mov.b32 	%f246, %r55;
	ex2.approx.ftz.f32 	%f247, %f244;
	mul.f32 	%f34, %f247, %f246;
	setp.eq.f32 	%p41, %f34, 0f7F800000;
	mov.f32 	%f267, 0f7F800000;
	@%p41 bra 	$L__BB0_19;
// %bb.18:                              // %__internal_fmad.exit.i.i115
	neg.f32 	%f248, %f33;
	add.rn.ftz.f32 	%f249, %f31, %f248;
	add.rn.ftz.f32 	%f250, %f249, %f32;
	add.f32 	%f251, %f250, 0f37000000;
	selp.f32 	%f252, %f251, %f250, %p39;
	fma.rn.ftz.f32 	%f267, %f34, %f252, %f34;
$L__BB0_19:                             // %__internal_accurate_powf.exit.i79
	setp.eq.f32 	%p43, %f28, 0f3F800000;
	setp.lt.f32 	%p44, %f26, 0f00000000;
	and.pred  	%p2, %p44, %p43;
	setp.neu.f32 	%p45, %f26, 0f00000000;
	@%p45 bra 	$L__BB0_21;
// %bb.20:
	add.f32 	%f258, %f26, %f26;
	mov.b32 	%r56, %f258;
	selp.b32 	%r57, %r56, 0, %p43;
	setp.lt.f32 	%p49, %f27, 0f00000000;
	or.b32  	%r58, %r57, 2139095040;
	selp.b32 	%r59, %r58, %r57, %p49;
	mov.b32 	%f269, %r59;
	bra.uni 	$L__BB0_22;
$L__BB0_21:
	neg.f32 	%f253, %f267;
	selp.f32 	%f254, %f253, %f267, %p2;
	cvt.rzi.f32.f32 	%f255, %f27;
	setp.neu.f32 	%p47, %f27, %f255;
	selp.f32 	%f257, 0f7FFFFFFF, %f254, %p47;
	selp.f32 	%f269, %f257, %f254, %p44;
$L__BB0_22:                             // %__internal_powf_corner_cases.exit.i85
	.loc	1 0 33                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:0:33
	ld.param.u64 	%rd2, [triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_3];
	ld.param.u64 	%rd1, [triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0_param_0];
	.loc	1 58 33                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:58:33
	add.f32 	%f259, %f29, %f30;
	mov.b32 	%r60, %f259;
	setp.lt.s32 	%p50, %r60, 2139095040;
	@%p50 bra 	$L__BB0_30;
// %bb.23:                              // %__nv_isnanf.exit.i.i94
	setp.nan.f32 	%p51, %f29, %f29;
	@%p51 bra 	$L__BB0_25;
// %bb.24:                              // %__nv_isnanf.exit11.i.i97
	setp.num.f32 	%p52, %f30, %f30;
	@%p52 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;
$L__BB0_26:                             // %__nv_isinff.exit8.i.i100
	setp.neu.f32 	%p53, %f30, 0f7F800000;
	@%p53 bra 	$L__BB0_28;
// %bb.27:                              // %__nv_fabsf.exit5.i.i108
	setp.gt.f32 	%p56, %f29, 0f3F800000;
	selp.b32 	%r64, 2139095040, 0, %p56;
	setp.lt.f32 	%p57, %f27, 0f00000000;
	xor.b32  	%r65, %r64, 2139095040;
	selp.b32 	%r66, %r65, %r64, %p57;
	setp.eq.f32 	%p58, %f26, 0fBF800000;
	mov.b32 	%f260, %r66;
	selp.f32 	%f269, 0f3F800000, %f260, %p58;
	bra.uni 	$L__BB0_30;
$L__BB0_28:                             // %__nv_isinff.exit.i.i103
	setp.neu.f32 	%p54, %f29, 0f7F800000;
	@%p54 bra 	$L__BB0_30;
// %bb.29:
	.loc	1 0 33                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:0:33
	setp.ge.f32 	%p55, %f27, 0f00000000;
	selp.b32 	%r61, 2139095040, 0, %p55;
	or.b32  	%r62, %r61, -2147483648;
	selp.b32 	%r63, %r62, %r61, %p2;
	mov.b32 	%f269, %r63;
$L__BB0_30:                             // %__nv_powf.exit118
	.loc	1 58 33                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:58:33
	setp.eq.f32 	%p62, %f26, 0f3F800000;
	setp.eq.f32 	%p63, %f27, 0f00000000;
	.loc	1 59 4                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:59:4
	bar.sync 	0;
	.loc	1 60 28                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:60:28
	mul.wide.s32 	%rd9, %r6, 4;
	add.s64 	%rd7, %rd1, %rd9;
	.loc	1 60 40                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:60:40
	and.b32  	%r69, %r2, 63;
	setp.eq.s32 	%p64, %r69, 0;
	and.pred  	%p59, %p64, %p3;
	// begin inline asm
	@%p59 st.global.b32 [ %rd7 + 0 ], { %r72 };
	// end inline asm
	.loc	1 61 25                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:61:25
	add.s64 	%rd8, %rd2, %rd9;
	.loc	1 61 37                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:61:37
	mov.b32 	%r70, %f269;
	.loc	1 58 33                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:58:33
	selp.b32 	%r71, 1065353216, %r70, %p63;
	selp.b32 	%r68, 1065353216, %r71, %p62;
	.loc	1 61 37                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:61:37
	// begin inline asm
	@%p59 st.global.b32 [ %rd8 + 0 ], { %r68 };
	// end inline asm
	.loc	1 61 4                          // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:61:4
	ret;
$L__BB0_12:
	.loc	1 44 32                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:44:32
	add.f32 	%f266, %f2, %f9;
	bra.uni 	$L__BB0_17;
$L__BB0_25:
	.loc	1 58 33                         // chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py:58:33
	add.f32 	%f269, %f26, %f27;
	bra.uni 	$L__BB0_30;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ho/chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 234                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 111
.b8 104
.b8 114
.b8 50
.b8 104
.b8 106
.b8 107
.b8 105
.b8 107
.b8 51
.b8 112
.b8 98
.b8 105
.b8 51
.b8 117
.b8 52
.b8 105
.b8 117
.b8 119
.b8 53
.b8 53
.b8 116
.b8 116
.b8 111
.b8 116
.b8 112
.b8 114
.b8 53
.b8 121
.b8 116
.b8 107
.b8 119
.b8 51
.b8 112
.b8 102
.b8 50
.b8 97
.b8 112
.b8 109
.b8 103
.b8 97
.b8 104
.b8 55
.b8 99
.b8 117
.b8 51
.b8 52
.b8 110
.b8 106
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 109
.b8 105
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 99
.b8 105
.b8 112
.b8 114
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 112
.b8 108
.b8 117
.b8 115
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
