; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #6, !dbg !10
  %8 = icmp slt i32 %7, 16, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = shl i32 %7, 4, !dbg !13
  %12 = or disjoint i32 %11, %10, !dbg !14
  %13 = sext i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %8, i32 0, i1 %8) #6, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #6, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = fcmp ogt float %16, 0x3EB0C6F7A0000000, !dbg !18
  %20 = fcmp uno float %16, 0.000000e+00, !dbg !22
  %21 = or i1 %19, %20, !dbg !23
  %22 = select i1 %21, float %16, float 0x3EB0C6F7A0000000, !dbg !24
  %23 = fcmp ogt float %18, 2.000000e+01, !dbg !25
  %24 = fmul float %18, 0x3FF7154760000000, !dbg !26
  %25 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %24) #6, !dbg !26
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not.i = icmp eq i32 %26, 0, !dbg !27
  %27 = tail call float @llvm.nvvm.add.rz.ftz.f(float %25, float 1.000000e+00) #6, !dbg !27
  %28 = tail call float @llvm.nvvm.add.rz.f(float %25, float 1.000000e+00) #6, !dbg !27
  %.01.i = select i1 %.not.i, float %28, float %27, !dbg !27
  %29 = bitcast float %.01.i to i32, !dbg !27
  %30 = add i32 %29, -1061158912, !dbg !27
  %31 = and i32 %30, -8388608, !dbg !27
  %32 = bitcast float %25 to i32, !dbg !27
  %33 = sub i32 %32, %31, !dbg !27
  %34 = bitcast i32 %33 to float, !dbg !27
  %35 = sub i32 1082130432, %31, !dbg !27
  %36 = bitcast i32 %35 to float, !dbg !27
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not14.i = icmp eq i32 %37, 0, !dbg !27
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %36, float -1.000000e+00) #6, !dbg !27
  %39 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %36, float -1.000000e+00) #6, !dbg !27
  %.09.i = select i1 %.not14.i, float %39, float %38, !dbg !27
  %40 = fadd float %.09.i, %34, !dbg !27
  %41 = sitofp i32 %31 to float, !dbg !27
  %42 = fmul float %41, 0x3E80000000000000, !dbg !27
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not15.i = icmp eq i32 %43, 0, !dbg !27
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %40, float 0x3FBB000240000000) #6, !dbg !27
  %45 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %40, float 0x3FBB000240000000) #6, !dbg !27
  %.012.i = select i1 %.not15.i, float %45, float %44, !dbg !27
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not16.i = icmp eq i32 %46, 0, !dbg !27
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %40, float 0xBFC0EF1C00000000) #6, !dbg !27
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %40, float 0xBFC0EF1C00000000) #6, !dbg !27
  %.010.i = select i1 %.not16.i, float %48, float %47, !dbg !27
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not17.i = icmp eq i32 %49, 0, !dbg !27
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %40, float 0x3FC28C8EA0000000) #6, !dbg !27
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %40, float 0x3FC28C8EA0000000) #6, !dbg !27
  %.06.i = select i1 %.not17.i, float %51, float %50, !dbg !27
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not18.i = icmp eq i32 %52, 0, !dbg !27
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %40, float 0xBFC54D1BA0000000) #6, !dbg !27
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %40, float 0xBFC54D1BA0000000) #6, !dbg !27
  %.02.i = select i1 %.not18.i, float %54, float %53, !dbg !27
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not19.i = icmp eq i32 %55, 0, !dbg !27
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %40, float 0x3FC995F3C0000000) #6, !dbg !27
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %40, float 0x3FC995F3C0000000) #6, !dbg !27
  %.0.i = select i1 %.not19.i, float %57, float %56, !dbg !27
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not20.i = icmp eq i32 %58, 0, !dbg !27
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %40, float 0xBFD0000840000000) #6, !dbg !27
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %40, float 0xBFD0000840000000) #6, !dbg !27
  %.011.i = select i1 %.not20.i, float %60, float %59, !dbg !27
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not21.i = icmp eq i32 %61, 0, !dbg !27
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %40, float 0x3FD5555CC0000000) #6, !dbg !27
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %40, float 0x3FD5555CC0000000) #6, !dbg !27
  %.08.i = select i1 %.not21.i, float %63, float %62, !dbg !27
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not22.i = icmp eq i32 %64, 0, !dbg !27
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %40, float -5.000000e-01) #6, !dbg !27
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %40, float -5.000000e-01) #6, !dbg !27
  %.07.i = select i1 %.not22.i, float %66, float %65, !dbg !27
  %67 = fmul float %40, %.07.i, !dbg !27
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not23.i = icmp eq i32 %68, 0, !dbg !27
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %67, float %40, float %40) #6, !dbg !27
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %67, float %40, float %40) #6, !dbg !27
  %.05.i = select i1 %.not23.i, float %70, float %69, !dbg !27
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not24.i = icmp eq i32 %71, 0, !dbg !27
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %42, float 0x3FE62E4300000000, float %.05.i) #6, !dbg !27
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %42, float 0x3FE62E4300000000, float %.05.i) #6, !dbg !27
  %.04.i = select i1 %.not24.i, float %73, float %72, !dbg !27
  %74 = icmp ugt i32 %32, 2139095039, !dbg !27
  br i1 %74, label %75, label %__nv_log1pf.exit, !dbg !27

75:                                               ; preds = %6
  %76 = icmp sgt i32 %32, -1082130432, !dbg !27
  br i1 %76, label %__nv_fmaf_rn.exit.i, label %80, !dbg !27

__nv_fmaf_rn.exit.i:                              ; preds = %75
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !27
  %.not25.i = icmp eq i32 %77, 0, !dbg !27
  %78 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %25, float 0x7FF0000000000000, float 0x7FF0000000000000) #6, !dbg !27
  %79 = tail call float @llvm.nvvm.fma.rn.f(float %25, float 0x7FF0000000000000, float 0x7FF0000000000000) #6, !dbg !27
  %.03.i = select i1 %.not25.i, float %79, float %78, !dbg !27
  br label %80, !dbg !27

80:                                               ; preds = %__nv_fmaf_rn.exit.i, %75
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %75 ], !dbg !27
  %81 = fcmp oeq float %25, 0.000000e+00, !dbg !27
  %r.1.i = select i1 %81, float -0.000000e+00, float %r.0.i, !dbg !27
  br label %__nv_log1pf.exit, !dbg !27

__nv_log1pf.exit:                                 ; preds = %6, %80
  %r.2.i = phi float [ %r.1.i, %80 ], [ %.04.i, %6 ], !dbg !27
  %82 = select i1 %23, float %18, float %r.2.i, !dbg !28
  %83 = fadd float %82, 1.000000e+00, !dbg !29
  %84 = fmul float %83, 5.000000e-01, !dbg !30
  %85 = tail call float @llvm.nvvm.trunc.f(float %84) #6, !dbg !30
  %86 = fmul float %85, 2.000000e+00, !dbg !30
  %87 = fsub float %83, %86, !dbg !30
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not.i1 = icmp eq i32 %88, 0, !dbg !30
  %89 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #6, !dbg !30
  %90 = tail call float @llvm.nvvm.fabs.f(float %87) #6, !dbg !30
  %.08.i2 = select i1 %.not.i1, float %90, float %89, !dbg !30
  %91 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !30
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not12.i = icmp eq i32 %92, 0, !dbg !30
  %93 = tail call float @llvm.nvvm.fabs.ftz.f(float %22) #6, !dbg !30
  %94 = tail call float @llvm.nvvm.fabs.f(float %22) #6, !dbg !30
  %.09.i3 = select i1 %.not12.i, float %94, float %93, !dbg !30
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not13.i = icmp eq i32 %95, 0, !dbg !30
  %96 = fcmp olt float %.09.i3, 0x3810000000000000, !dbg !30
  %97 = fmul float %.09.i3, 0x4170000000000000, !dbg !30
  %98 = select i1 %.not13.i, i1 %96, i1 false, !dbg !30
  %.116.i = select i1 %98, float %97, float %.09.i3, !dbg !30
  %expo.i.i.1.i = select i1 %98, float -1.510000e+02, float -1.270000e+02, !dbg !30
  %99 = bitcast float %.116.i to i32, !dbg !30
  %100 = and i32 %99, 8388607, !dbg !30
  %101 = or disjoint i32 %100, 1065353216, !dbg !30
  %102 = bitcast i32 %101 to float, !dbg !30
  %103 = lshr i32 %99, 23, !dbg !30
  %104 = uitofp nneg i32 %103 to float, !dbg !30
  %105 = fadd float %expo.i.i.1.i, %104, !dbg !30
  %106 = fcmp ogt float %102, 0x3FF6A09E60000000, !dbg !30
  %107 = fmul float %102, 5.000000e-01, !dbg !30
  %108 = fadd float %105, 1.000000e+00, !dbg !30
  %expo.i.i.2.i = select i1 %106, float %108, float %105, !dbg !30
  %m.i.i.0.i = select i1 %106, float %107, float %102, !dbg !30
  %109 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !30
  %110 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !30
  %111 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %110) #7, !dbg !30, !srcloc !31
  %112 = fmul float %109, 2.000000e+00, !dbg !30
  %113 = fmul float %111, %112, !dbg !30
  %114 = fmul float %113, %113, !dbg !30
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not14.i4 = icmp eq i32 %115, 0, !dbg !30
  %116 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %114, float 0x3F8995EC60000000) #6, !dbg !30
  %117 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %114, float 0x3F8995EC60000000) #6, !dbg !30
  %.020.i = select i1 %.not14.i4, float %117, float %116, !dbg !30
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not15.i5 = icmp eq i32 %118, 0, !dbg !30
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %114, float 0x3FB55557A0000000) #6, !dbg !30
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %114, float 0x3FB55557A0000000) #6, !dbg !30
  %.021.i = select i1 %.not15.i5, float %120, float %119, !dbg !30
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not16.i6 = icmp eq i32 %121, 0, !dbg !30
  %122 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %114) #6, !dbg !30
  %123 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %114) #6, !dbg !30
  %.022.i = select i1 %.not16.i6, float %123, float %122, !dbg !30
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not17.i7 = icmp eq i32 %124, 0, !dbg !30
  %125 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %113) #6, !dbg !30
  %126 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %113) #6, !dbg !30
  %.024.i = select i1 %.not17.i7, float %126, float %125, !dbg !30
  %127 = fsub float %109, %113, !dbg !30
  %128 = fmul float %127, 2.000000e+00, !dbg !30
  %129 = fneg float %113, !dbg !30
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not18.i8 = icmp eq i32 %130, 0, !dbg !30
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float %109, float %128) #6, !dbg !30
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %129, float %109, float %128) #6, !dbg !30
  %.025.i = select i1 %.not18.i8, float %132, float %131, !dbg !30
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not19.i9 = icmp eq i32 %133, 0, !dbg !30
  %134 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %111, float %.025.i) #6, !dbg !30
  %135 = tail call float @llvm.nvvm.mul.rn.f(float %111, float %.025.i) #6, !dbg !30
  %.026.i = select i1 %.not19.i9, float %135, float %134, !dbg !30
  %136 = fadd float %113, %.024.i, !dbg !30
  %137 = fsub float %113, %136, !dbg !30
  %138 = fadd float %.024.i, %137, !dbg !30
  %139 = fadd float %.026.i, %138, !dbg !30
  %140 = fadd float %136, %139, !dbg !30
  %141 = fsub float %136, %140, !dbg !30
  %142 = fadd float %139, %141, !dbg !30
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not20.i10 = icmp eq i32 %143, 0, !dbg !30
  %144 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !30
  %145 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !30
  %.019.i = select i1 %.not20.i10, float %145, float %144, !dbg !30
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not21.i11 = icmp eq i32 %146, 0, !dbg !30
  %147 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !30
  %148 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !30
  %.018.i = select i1 %.not21.i11, float %148, float %147, !dbg !30
  %149 = fadd float %.019.i, %140, !dbg !30
  %150 = fsub float %.019.i, %149, !dbg !30
  %151 = fadd float %140, %150, !dbg !30
  %152 = fadd float %142, %151, !dbg !30
  %153 = fadd float %.018.i, %152, !dbg !30
  %154 = fadd float %149, %153, !dbg !30
  %155 = fsub float %149, %154, !dbg !30
  %156 = fadd float %153, %155, !dbg !30
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not22.i12 = icmp eq i32 %157, 0, !dbg !30
  %158 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #6, !dbg !30
  %159 = tail call float @llvm.nvvm.fabs.f(float %83) #6, !dbg !30
  %.027.i = select i1 %.not22.i12, float %159, float %158, !dbg !30
  %160 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !30
  %161 = fmul float %83, 0x3F20000000000000, !dbg !30
  %.013.i = select i1 %160, float %161, float %83, !dbg !30
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not23.i13 = icmp eq i32 %162, 0, !dbg !30
  %163 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %154) #6, !dbg !30
  %164 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %154) #6, !dbg !30
  %.028.i = select i1 %.not23.i13, float %164, float %163, !dbg !30
  %165 = fneg float %.028.i, !dbg !30
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not24.i14 = icmp eq i32 %166, 0, !dbg !30
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %154, float %165) #6, !dbg !30
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %154, float %165) #6, !dbg !30
  %.029.i = select i1 %.not24.i14, float %168, float %167, !dbg !30
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not25.i15 = icmp eq i32 %169, 0, !dbg !30
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %156, float %.029.i) #6, !dbg !30
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %156, float %.029.i) #6, !dbg !30
  %.030.i = select i1 %.not25.i15, float %171, float %170, !dbg !30
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not26.i = icmp eq i32 %172, 0, !dbg !30
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %154, float %.030.i) #6, !dbg !30
  %174 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %154, float %.030.i) #6, !dbg !30
  %.031.i = select i1 %.not26.i, float %174, float %173, !dbg !30
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not27.i = icmp eq i32 %175, 0, !dbg !30
  %176 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #6, !dbg !30
  %177 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #6, !dbg !30
  %.032.i = select i1 %.not27.i, float %177, float %176, !dbg !30
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %180 = bitcast float %.032.i to i32, !dbg !30
  %181 = icmp eq i32 %180, 1118925336, !dbg !30
  %prod.i.145.0.i = select i1 %181, float 0x40562E42E0000000, float %.032.i, !dbg !30
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not30.i = icmp eq i32 %182, 0, !dbg !30
  %183 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !30
  %184 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !30
  %.017.i = select i1 %.not30.i, float %184, float %183, !dbg !30
  %185 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #6, !dbg !30
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not31.i = icmp eq i32 %186, 0, !dbg !30
  %187 = tail call float @llvm.nvvm.fabs.ftz.f(float %185) #6, !dbg !30
  %188 = tail call float @llvm.nvvm.fabs.f(float %185) #6, !dbg !30
  %.023.i = select i1 %.not31.i, float %188, float %187, !dbg !30
  %189 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !30
  %190 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %185), !dbg !30
  %j.i.i.0.i = select i1 %189, float %190, float %185, !dbg !30
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not32.i = icmp eq i32 %191, 0, !dbg !30
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !30
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !30
  %.035.i = select i1 %.not32.i, float %193, float %192, !dbg !30
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not33.i = icmp eq i32 %194, 0, !dbg !30
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !30
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !30
  %.036.i = select i1 %.not33.i, float %196, float %195, !dbg !30
  %197 = fmul float %.036.i, 0x3FF7154760000000, !dbg !30
  %198 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !30
  %199 = bitcast float %198 to i32, !dbg !30
  %200 = shl i32 %199, 23, !dbg !30
  %201 = bitcast i32 %200 to float, !dbg !30
  %202 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %197) #6, !dbg !30
  %203 = fmul float %202, %201, !dbg !30
  %204 = fcmp une float %203, 0x7FF0000000000000, !dbg !30
  br i1 %204, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !30

__internal_fmad.exit.i.i:                         ; preds = %__nv_log1pf.exit
  %.not29.i = icmp eq i32 %179, 0, !dbg !30
  %.not28.i = icmp eq i32 %178, 0, !dbg !30
  %205 = fneg float %.032.i, !dbg !30
  %206 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %205) #6, !dbg !30
  %207 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %205) #6, !dbg !30
  %.033.i = select i1 %.not28.i, float %206, float %207, !dbg !30
  %208 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #6, !dbg !30
  %209 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #6, !dbg !30
  %.034.i = select i1 %.not29.i, float %208, float %209, !dbg !30
  %210 = fadd float %.034.i, 0x3EE0000000000000, !dbg !30
  %prod.i.044.0.i = select i1 %181, float %210, float %.034.i, !dbg !30
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not34.i = icmp eq i32 %211, 0, !dbg !30
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float %prod.i.044.0.i, float %203) #6, !dbg !30
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %203, float %prod.i.044.0.i, float %203) #6, !dbg !30
  %.014.i = select i1 %.not34.i, float %213, float %212, !dbg !30
  br label %__internal_accurate_powf.exit.i, !dbg !30

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %__nv_log1pf.exit
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %__nv_log1pf.exit ], !dbg !30
  %214 = fcmp olt float %22, 0.000000e+00, !dbg !30
  %or.cond.i = select i1 %214, i1 %91, i1 false, !dbg !30
  %215 = fcmp oeq float %22, 0.000000e+00, !dbg !30
  br i1 %215, label %216, label %222, !dbg !30

216:                                              ; preds = %__internal_accurate_powf.exit.i
  %217 = fadd float %22, %22, !dbg !30
  %218 = bitcast float %217 to i32, !dbg !30
  %ti.i11.0.i = select i1 %91, i32 %218, i32 0, !dbg !30
  %219 = fcmp olt float %83, 0.000000e+00, !dbg !30
  %220 = or i32 %ti.i11.0.i, 2139095040, !dbg !30
  %ti.i11.1.i = select i1 %219, i32 %220, i32 %ti.i11.0.i, !dbg !30
  %221 = bitcast i32 %ti.i11.1.i to float, !dbg !30
  br label %__internal_powf_corner_cases.exit.i, !dbg !30

222:                                              ; preds = %__internal_accurate_powf.exit.i
  %223 = fneg float %t.i.0.i, !dbg !30
  %.010.i16 = select i1 %or.cond.i, float %223, float %t.i.0.i, !dbg !30
  %224 = tail call float @llvm.nvvm.trunc.f(float %83) #6, !dbg !30
  %225 = fcmp une float %83, %224, !dbg !30
  %or.cond2.i = select i1 %214, i1 %225, i1 false, !dbg !30
  %.111.i = select i1 %or.cond2.i, float 0x7FFFFFFFE0000000, float %.010.i16, !dbg !30
  br label %__internal_powf_corner_cases.exit.i, !dbg !30

__internal_powf_corner_cases.exit.i:              ; preds = %222, %216
  %.212.i = phi float [ %221, %216 ], [ %.111.i, %222 ], !dbg !30
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not35.i = icmp eq i32 %226, 0, !dbg !30
  %.01.i17 = select i1 %.not35.i, float %94, float %93, !dbg !30
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not36.i = icmp eq i32 %227, 0, !dbg !30
  %.02.i18 = select i1 %.not36.i, float %159, float %158, !dbg !30
  %228 = fadd float %.01.i17, %.02.i18, !dbg !30
  %229 = bitcast float %228 to i32, !dbg !30
  %230 = icmp sgt i32 %229, 2139095039, !dbg !30
  br i1 %230, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !30

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not37.i = icmp eq i32 %231, 0, !dbg !30
  %.06.i19 = select i1 %.not37.i, float %94, float %93, !dbg !30
  %232 = fcmp uno float %.06.i19, 0.000000e+00, !dbg !30
  br i1 %232, label %235, label %__nv_isnanf.exit11.i.i, !dbg !30

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not38.i = icmp eq i32 %233, 0, !dbg !30
  %.07.i20 = select i1 %.not38.i, float %159, float %158, !dbg !30
  %234 = fcmp uno float %.07.i20, 0.000000e+00, !dbg !30
  br i1 %234, label %235, label %__nv_isinff.exit8.i.i, !dbg !30

235:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %236 = fadd float %22, %83, !dbg !30
  br label %__nv_powf.exit, !dbg !30

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not39.i = icmp eq i32 %237, 0, !dbg !30
  %.05.i21 = select i1 %.not39.i, float %159, float %158, !dbg !30
  %238 = fcmp oeq float %.05.i21, 0x7FF0000000000000, !dbg !30
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !30
  %.not41.i = icmp eq i32 %239, 0, !dbg !30
  %.04.i23 = select i1 %.not41.i, float %94, float %93, !dbg !30
  br i1 %238, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !30

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %240 = fcmp ogt float %.04.i23, 1.000000e+00, !dbg !30
  %ti.i.0.i = select i1 %240, i32 2139095040, i32 0, !dbg !30
  %241 = fcmp olt float %83, 0.000000e+00, !dbg !30
  %242 = xor i32 %ti.i.0.i, 2139095040, !dbg !30
  %ti.i.1.i = select i1 %241, i32 %242, i32 %ti.i.0.i, !dbg !30
  %243 = fcmp oeq float %22, -1.000000e+00, !dbg !30
  %244 = bitcast i32 %ti.i.1.i to float, !dbg !30
  %245 = select i1 %243, float 1.000000e+00, float %244, !dbg !30
  br label %__nv_powf.exit, !dbg !30

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %246 = fcmp oeq float %.04.i23, 0x7FF0000000000000, !dbg !30
  br i1 %246, label %247, label %__nv_powf.exit, !dbg !30

247:                                              ; preds = %__nv_isinff.exit.i.i
  %248 = fcmp oge float %83, 0.000000e+00, !dbg !30
  %ti.i.3.i = select i1 %248, i32 2139095040, i32 0, !dbg !30
  %249 = or disjoint i32 %ti.i.3.i, -2147483648, !dbg !30
  %ti.i.4.i = select i1 %or.cond.i, i32 %249, i32 %ti.i.3.i, !dbg !30
  %250 = bitcast i32 %ti.i.4.i to float, !dbg !30
  br label %__nv_powf.exit, !dbg !30

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %235, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %247
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %236, %235 ], [ %245, %__nv_fabsf.exit5.i.i ], [ %250, %247 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !30
  %251 = fcmp oeq float %22, 1.000000e+00, !dbg !30
  %252 = fcmp oeq float %83, 0.000000e+00, !dbg !30
  %or.cond4.i = select i1 %251, i1 true, i1 %252, !dbg !30
  %t.0.i = select i1 %or.cond4.i, float 1.000000e+00, float %.3.i, !dbg !30
  %253 = select i1 %8, float %t.0.i, float 0.000000e+00, !dbg !32
  %254 = bitcast float %253 to i32, !dbg !33
  %255 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %254, i32 8, i32 31), !dbg !33
  %256 = bitcast i32 %255 to float, !dbg !33
  %257 = fadd float %253, %256, !dbg !37
  %258 = bitcast float %257 to i32, !dbg !33
  %259 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %258, i32 4, i32 31), !dbg !33
  %260 = bitcast i32 %259 to float, !dbg !33
  %261 = fadd float %257, %260, !dbg !37
  %262 = bitcast float %261 to i32, !dbg !33
  %263 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %262, i32 2, i32 31), !dbg !33
  %264 = bitcast i32 %263 to float, !dbg !33
  %265 = fadd float %261, %264, !dbg !37
  %266 = bitcast float %265 to i32, !dbg !33
  %267 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %266, i32 1, i32 31), !dbg !33
  %268 = bitcast i32 %267 to float, !dbg !33
  %269 = fadd float %265, %268, !dbg !37
  %270 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %269, float 1.600000e+01) #6, !dbg !39
  %271 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %83) #6, !dbg !40
  %272 = fmul float %271, 5.000000e-01, !dbg !41
  %273 = tail call float @llvm.nvvm.trunc.f(float %272) #6, !dbg !41
  %274 = fmul float %273, 2.000000e+00, !dbg !41
  %275 = fsub float %271, %274, !dbg !41
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not.i24 = icmp eq i32 %276, 0, !dbg !41
  %277 = tail call float @llvm.nvvm.fabs.ftz.f(float %275) #6, !dbg !41
  %278 = tail call float @llvm.nvvm.fabs.f(float %275) #6, !dbg !41
  %.08.i25 = select i1 %.not.i24, float %278, float %277, !dbg !41
  %279 = fcmp oeq float %.08.i25, 1.000000e+00, !dbg !41
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not12.i26 = icmp eq i32 %280, 0, !dbg !41
  %281 = tail call float @llvm.nvvm.fabs.ftz.f(float %270) #6, !dbg !41
  %282 = tail call float @llvm.nvvm.fabs.f(float %270) #6, !dbg !41
  %.09.i27 = select i1 %.not12.i26, float %282, float %281, !dbg !41
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not13.i28 = icmp eq i32 %283, 0, !dbg !41
  %284 = fcmp olt float %.09.i27, 0x3810000000000000, !dbg !41
  %285 = fmul float %.09.i27, 0x4170000000000000, !dbg !41
  %286 = select i1 %.not13.i28, i1 %284, i1 false, !dbg !41
  %.116.i31 = select i1 %286, float %285, float %.09.i27, !dbg !41
  %expo.i.i.1.i32 = select i1 %286, float -1.510000e+02, float -1.270000e+02, !dbg !41
  %287 = bitcast float %.116.i31 to i32, !dbg !41
  %288 = and i32 %287, 8388607, !dbg !41
  %289 = or disjoint i32 %288, 1065353216, !dbg !41
  %290 = bitcast i32 %289 to float, !dbg !41
  %291 = lshr i32 %287, 23, !dbg !41
  %292 = uitofp nneg i32 %291 to float, !dbg !41
  %293 = fadd float %expo.i.i.1.i32, %292, !dbg !41
  %294 = fcmp ogt float %290, 0x3FF6A09E60000000, !dbg !41
  %295 = fmul float %290, 5.000000e-01, !dbg !41
  %296 = fadd float %293, 1.000000e+00, !dbg !41
  %expo.i.i.2.i33 = select i1 %294, float %296, float %293, !dbg !41
  %m.i.i.0.i34 = select i1 %294, float %295, float %290, !dbg !41
  %297 = fadd float %m.i.i.0.i34, -1.000000e+00, !dbg !41
  %298 = fadd float %m.i.i.0.i34, 1.000000e+00, !dbg !41
  %299 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %298) #7, !dbg !41, !srcloc !31
  %300 = fmul float %297, 2.000000e+00, !dbg !41
  %301 = fmul float %299, %300, !dbg !41
  %302 = fmul float %301, %301, !dbg !41
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not14.i35 = icmp eq i32 %303, 0, !dbg !41
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %302, float 0x3F8995EC60000000) #6, !dbg !41
  %305 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %302, float 0x3F8995EC60000000) #6, !dbg !41
  %.020.i36 = select i1 %.not14.i35, float %305, float %304, !dbg !41
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not15.i37 = icmp eq i32 %306, 0, !dbg !41
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i36, float %302, float 0x3FB55557A0000000) #6, !dbg !41
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i36, float %302, float 0x3FB55557A0000000) #6, !dbg !41
  %.021.i38 = select i1 %.not15.i37, float %308, float %307, !dbg !41
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not16.i39 = icmp eq i32 %309, 0, !dbg !41
  %310 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i38, float %302) #6, !dbg !41
  %311 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i38, float %302) #6, !dbg !41
  %.022.i40 = select i1 %.not16.i39, float %311, float %310, !dbg !41
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not17.i41 = icmp eq i32 %312, 0, !dbg !41
  %313 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i40, float %301) #6, !dbg !41
  %314 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i40, float %301) #6, !dbg !41
  %.024.i42 = select i1 %.not17.i41, float %314, float %313, !dbg !41
  %315 = fsub float %297, %301, !dbg !41
  %316 = fmul float %315, 2.000000e+00, !dbg !41
  %317 = fneg float %301, !dbg !41
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not18.i43 = icmp eq i32 %318, 0, !dbg !41
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %317, float %297, float %316) #6, !dbg !41
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %317, float %297, float %316) #6, !dbg !41
  %.025.i44 = select i1 %.not18.i43, float %320, float %319, !dbg !41
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not19.i45 = icmp eq i32 %321, 0, !dbg !41
  %322 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %299, float %.025.i44) #6, !dbg !41
  %323 = tail call float @llvm.nvvm.mul.rn.f(float %299, float %.025.i44) #6, !dbg !41
  %.026.i46 = select i1 %.not19.i45, float %323, float %322, !dbg !41
  %324 = fadd float %301, %.024.i42, !dbg !41
  %325 = fsub float %301, %324, !dbg !41
  %326 = fadd float %.024.i42, %325, !dbg !41
  %327 = fadd float %.026.i46, %326, !dbg !41
  %328 = fadd float %324, %327, !dbg !41
  %329 = fsub float %324, %328, !dbg !41
  %330 = fadd float %327, %329, !dbg !41
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not20.i47 = icmp eq i32 %331, 0, !dbg !41
  %332 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i33, float 0x3FE62E4000000000) #6, !dbg !41
  %333 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i33, float 0x3FE62E4000000000) #6, !dbg !41
  %.019.i48 = select i1 %.not20.i47, float %333, float %332, !dbg !41
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not21.i49 = icmp eq i32 %334, 0, !dbg !41
  %335 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i33, float 0x3EB7F7D1C0000000) #6, !dbg !41
  %336 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i33, float 0x3EB7F7D1C0000000) #6, !dbg !41
  %.018.i50 = select i1 %.not21.i49, float %336, float %335, !dbg !41
  %337 = fadd float %.019.i48, %328, !dbg !41
  %338 = fsub float %.019.i48, %337, !dbg !41
  %339 = fadd float %328, %338, !dbg !41
  %340 = fadd float %330, %339, !dbg !41
  %341 = fadd float %.018.i50, %340, !dbg !41
  %342 = fadd float %337, %341, !dbg !41
  %343 = fsub float %337, %342, !dbg !41
  %344 = fadd float %341, %343, !dbg !41
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not22.i51 = icmp eq i32 %345, 0, !dbg !41
  %346 = tail call float @llvm.nvvm.fabs.ftz.f(float %271) #6, !dbg !41
  %347 = tail call float @llvm.nvvm.fabs.f(float %271) #6, !dbg !41
  %.027.i52 = select i1 %.not22.i51, float %347, float %346, !dbg !41
  %348 = fcmp ogt float %.027.i52, 0x46FED09BE0000000, !dbg !41
  %349 = fmul float %271, 0x3F20000000000000, !dbg !41
  %.013.i53 = select i1 %348, float %349, float %271, !dbg !41
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not23.i54 = icmp eq i32 %350, 0, !dbg !41
  %351 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i53, float %342) #6, !dbg !41
  %352 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i53, float %342) #6, !dbg !41
  %.028.i55 = select i1 %.not23.i54, float %352, float %351, !dbg !41
  %353 = fneg float %.028.i55, !dbg !41
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not24.i56 = icmp eq i32 %354, 0, !dbg !41
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i53, float %342, float %353) #6, !dbg !41
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i53, float %342, float %353) #6, !dbg !41
  %.029.i57 = select i1 %.not24.i56, float %356, float %355, !dbg !41
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not25.i58 = icmp eq i32 %357, 0, !dbg !41
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i53, float %344, float %.029.i57) #6, !dbg !41
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i53, float %344, float %.029.i57) #6, !dbg !41
  %.030.i59 = select i1 %.not25.i58, float %359, float %358, !dbg !41
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not26.i60 = icmp eq i32 %360, 0, !dbg !41
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %342, float %.030.i59) #6, !dbg !41
  %362 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %342, float %.030.i59) #6, !dbg !41
  %.031.i61 = select i1 %.not26.i60, float %362, float %361, !dbg !41
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not27.i62 = icmp eq i32 %363, 0, !dbg !41
  %364 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i55, float %.031.i61) #6, !dbg !41
  %365 = tail call float @llvm.nvvm.add.rn.f(float %.028.i55, float %.031.i61) #6, !dbg !41
  %.032.i63 = select i1 %.not27.i62, float %365, float %364, !dbg !41
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %367 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %368 = bitcast float %.032.i63 to i32, !dbg !41
  %369 = icmp eq i32 %368, 1118925336, !dbg !41
  %prod.i.145.0.i69 = select i1 %369, float 0x40562E42E0000000, float %.032.i63, !dbg !41
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not30.i70 = icmp eq i32 %370, 0, !dbg !41
  %371 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i69, float 0x3FF7154760000000) #6, !dbg !41
  %372 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i69, float 0x3FF7154760000000) #6, !dbg !41
  %.017.i71 = select i1 %.not30.i70, float %372, float %371, !dbg !41
  %373 = tail call float @llvm.nvvm.trunc.f(float %.017.i71) #6, !dbg !41
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not31.i72 = icmp eq i32 %374, 0, !dbg !41
  %375 = tail call float @llvm.nvvm.fabs.ftz.f(float %373) #6, !dbg !41
  %376 = tail call float @llvm.nvvm.fabs.f(float %373) #6, !dbg !41
  %.023.i73 = select i1 %.not31.i72, float %376, float %375, !dbg !41
  %377 = fcmp ogt float %.023.i73, 1.260000e+02, !dbg !41
  %378 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %373), !dbg !41
  %j.i.i.0.i74 = select i1 %377, float %378, float %373, !dbg !41
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not32.i75 = icmp eq i32 %379, 0, !dbg !41
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i74, float 0xBFE62E4300000000, float %prod.i.145.0.i69) #6, !dbg !41
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i74, float 0xBFE62E4300000000, float %prod.i.145.0.i69) #6, !dbg !41
  %.035.i76 = select i1 %.not32.i75, float %381, float %380, !dbg !41
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not33.i77 = icmp eq i32 %382, 0, !dbg !41
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i74, float 0x3E205C6100000000, float %.035.i76) #6, !dbg !41
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i74, float 0x3E205C6100000000, float %.035.i76) #6, !dbg !41
  %.036.i78 = select i1 %.not33.i77, float %384, float %383, !dbg !41
  %385 = fmul float %.036.i78, 0x3FF7154760000000, !dbg !41
  %386 = fadd float %j.i.i.0.i74, 0x4168000FE0000000, !dbg !41
  %387 = bitcast float %386 to i32, !dbg !41
  %388 = shl i32 %387, 23, !dbg !41
  %389 = bitcast i32 %388 to float, !dbg !41
  %390 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %385) #6, !dbg !41
  %391 = fmul float %390, %389, !dbg !41
  %392 = fcmp une float %391, 0x7FF0000000000000, !dbg !41
  br i1 %392, label %__internal_fmad.exit.i.i115, label %__internal_accurate_powf.exit.i79, !dbg !41

__internal_fmad.exit.i.i115:                      ; preds = %__nv_powf.exit
  %.not29.i66 = icmp eq i32 %367, 0, !dbg !41
  %.not28.i64 = icmp eq i32 %366, 0, !dbg !41
  %393 = fneg float %.032.i63, !dbg !41
  %394 = tail call float @llvm.nvvm.add.rn.f(float %.028.i55, float %393) #6, !dbg !41
  %395 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i55, float %393) #6, !dbg !41
  %.033.i65 = select i1 %.not28.i64, float %394, float %395, !dbg !41
  %396 = tail call float @llvm.nvvm.add.rn.f(float %.033.i65, float %.031.i61) #6, !dbg !41
  %397 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i65, float %.031.i61) #6, !dbg !41
  %.034.i67 = select i1 %.not29.i66, float %396, float %397, !dbg !41
  %398 = fadd float %.034.i67, 0x3EE0000000000000, !dbg !41
  %prod.i.044.0.i68 = select i1 %369, float %398, float %.034.i67, !dbg !41
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not34.i116 = icmp eq i32 %399, 0, !dbg !41
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %391, float %prod.i.044.0.i68, float %391) #6, !dbg !41
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %391, float %prod.i.044.0.i68, float %391) #6, !dbg !41
  %.014.i117 = select i1 %.not34.i116, float %401, float %400, !dbg !41
  br label %__internal_accurate_powf.exit.i79, !dbg !41

__internal_accurate_powf.exit.i79:                ; preds = %__internal_fmad.exit.i.i115, %__nv_powf.exit
  %t.i.0.i80 = phi float [ %.014.i117, %__internal_fmad.exit.i.i115 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !41
  %402 = fcmp olt float %270, 0.000000e+00, !dbg !41
  %or.cond.i81 = select i1 %402, i1 %279, i1 false, !dbg !41
  %403 = fcmp oeq float %270, 0.000000e+00, !dbg !41
  br i1 %403, label %404, label %410, !dbg !41

404:                                              ; preds = %__internal_accurate_powf.exit.i79
  %405 = fadd float %270, %270, !dbg !41
  %406 = bitcast float %405 to i32, !dbg !41
  %ti.i11.0.i113 = select i1 %279, i32 %406, i32 0, !dbg !41
  %407 = fcmp olt float %271, 0.000000e+00, !dbg !41
  %408 = or i32 %ti.i11.0.i113, 2139095040, !dbg !41
  %ti.i11.1.i114 = select i1 %407, i32 %408, i32 %ti.i11.0.i113, !dbg !41
  %409 = bitcast i32 %ti.i11.1.i114 to float, !dbg !41
  br label %__internal_powf_corner_cases.exit.i85, !dbg !41

410:                                              ; preds = %__internal_accurate_powf.exit.i79
  %411 = fneg float %t.i.0.i80, !dbg !41
  %.010.i82 = select i1 %or.cond.i81, float %411, float %t.i.0.i80, !dbg !41
  %412 = tail call float @llvm.nvvm.trunc.f(float %271) #6, !dbg !41
  %413 = fcmp une float %271, %412, !dbg !41
  %or.cond2.i83 = select i1 %402, i1 %413, i1 false, !dbg !41
  %.111.i84 = select i1 %or.cond2.i83, float 0x7FFFFFFFE0000000, float %.010.i82, !dbg !41
  br label %__internal_powf_corner_cases.exit.i85, !dbg !41

__internal_powf_corner_cases.exit.i85:            ; preds = %410, %404
  %.212.i86 = phi float [ %409, %404 ], [ %.111.i84, %410 ], !dbg !41
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not35.i87 = icmp eq i32 %414, 0, !dbg !41
  %.01.i88 = select i1 %.not35.i87, float %282, float %281, !dbg !41
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not36.i89 = icmp eq i32 %415, 0, !dbg !41
  %.02.i90 = select i1 %.not36.i89, float %347, float %346, !dbg !41
  %416 = fadd float %.01.i88, %.02.i90, !dbg !41
  %417 = bitcast float %416 to i32, !dbg !41
  %418 = icmp sgt i32 %417, 2139095039, !dbg !41
  br i1 %418, label %__nv_isnanf.exit.i.i94, label %__nv_powf.exit118, !dbg !41

__nv_isnanf.exit.i.i94:                           ; preds = %__internal_powf_corner_cases.exit.i85
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not37.i95 = icmp eq i32 %419, 0, !dbg !41
  %.06.i96 = select i1 %.not37.i95, float %282, float %281, !dbg !41
  %420 = fcmp uno float %.06.i96, 0.000000e+00, !dbg !41
  br i1 %420, label %423, label %__nv_isnanf.exit11.i.i97, !dbg !41

__nv_isnanf.exit11.i.i97:                         ; preds = %__nv_isnanf.exit.i.i94
  %421 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not38.i98 = icmp eq i32 %421, 0, !dbg !41
  %.07.i99 = select i1 %.not38.i98, float %347, float %346, !dbg !41
  %422 = fcmp uno float %.07.i99, 0.000000e+00, !dbg !41
  br i1 %422, label %423, label %__nv_isinff.exit8.i.i100, !dbg !41

423:                                              ; preds = %__nv_isnanf.exit11.i.i97, %__nv_isnanf.exit.i.i94
  %424 = fadd float %270, %271, !dbg !41
  br label %__nv_powf.exit118, !dbg !41

__nv_isinff.exit8.i.i100:                         ; preds = %__nv_isnanf.exit11.i.i97
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not39.i101 = icmp eq i32 %425, 0, !dbg !41
  %.05.i102 = select i1 %.not39.i101, float %347, float %346, !dbg !41
  %426 = fcmp oeq float %.05.i102, 0x7FF0000000000000, !dbg !41
  %427 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !41
  %.not41.i109 = icmp eq i32 %427, 0, !dbg !41
  %.04.i110 = select i1 %.not41.i109, float %282, float %281, !dbg !41
  br i1 %426, label %__nv_fabsf.exit5.i.i108, label %__nv_isinff.exit.i.i103, !dbg !41

__nv_fabsf.exit5.i.i108:                          ; preds = %__nv_isinff.exit8.i.i100
  %428 = fcmp ogt float %.04.i110, 1.000000e+00, !dbg !41
  %ti.i.0.i111 = select i1 %428, i32 2139095040, i32 0, !dbg !41
  %429 = fcmp olt float %271, 0.000000e+00, !dbg !41
  %430 = xor i32 %ti.i.0.i111, 2139095040, !dbg !41
  %ti.i.1.i112 = select i1 %429, i32 %430, i32 %ti.i.0.i111, !dbg !41
  %431 = fcmp oeq float %270, -1.000000e+00, !dbg !41
  %432 = bitcast i32 %ti.i.1.i112 to float, !dbg !41
  %433 = select i1 %431, float 1.000000e+00, float %432, !dbg !41
  br label %__nv_powf.exit118, !dbg !41

__nv_isinff.exit.i.i103:                          ; preds = %__nv_isinff.exit8.i.i100
  %434 = fcmp oeq float %.04.i110, 0x7FF0000000000000, !dbg !41
  br i1 %434, label %435, label %__nv_powf.exit118, !dbg !41

435:                                              ; preds = %__nv_isinff.exit.i.i103
  %436 = fcmp oge float %271, 0.000000e+00, !dbg !41
  %ti.i.3.i106 = select i1 %436, i32 2139095040, i32 0, !dbg !41
  %437 = or disjoint i32 %ti.i.3.i106, -2147483648, !dbg !41
  %ti.i.4.i107 = select i1 %or.cond.i81, i32 %437, i32 %ti.i.3.i106, !dbg !41
  %438 = bitcast i32 %ti.i.4.i107 to float, !dbg !41
  br label %__nv_powf.exit118, !dbg !41

__nv_powf.exit118:                                ; preds = %__internal_powf_corner_cases.exit.i85, %423, %__nv_fabsf.exit5.i.i108, %__nv_isinff.exit.i.i103, %435
  %.3.i91 = phi float [ %.212.i86, %__internal_powf_corner_cases.exit.i85 ], [ %424, %423 ], [ %433, %__nv_fabsf.exit5.i.i108 ], [ %438, %435 ], [ %.212.i86, %__nv_isinff.exit.i.i103 ], !dbg !41
  %439 = fcmp oeq float %270, 1.000000e+00, !dbg !41
  %440 = fcmp oeq float %271, 0.000000e+00, !dbg !41
  %or.cond4.i92 = select i1 %439, i1 true, i1 %440, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %441 = sext i32 %7 to i64, !dbg !43
  %442 = getelementptr float, ptr addrspace(1) %0, i64 %441, !dbg !43
  %443 = and i32 %9, 63, !dbg !44
  %444 = icmp eq i32 %443, 0, !dbg !44
  %445 = bitcast float %270 to i32, !dbg !44
  %446 = and i1 %444, %8, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %445, ptr addrspace(1) %442, i1 %446) #6, !dbg !44
  %447 = getelementptr float, ptr addrspace(1) %3, i64 %441, !dbg !45
  %448 = bitcast float %.3.i91 to i32, !dbg !46
  %449 = select i1 %or.cond4.i92, i32 1065353216, i32 %448, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %449, ptr addrspace(1) %447, i1 %446) #6, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #5

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chohr2hjkik3pbi3u4iuw55ttotpr5ytkw3pf2apmgah7cu34njx.py", directory: "inductor_cache/ho")
!4 = !{ptr @triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0", linkageName: "triton_per_fused_add_clamp_min_mean_mul_pow_reciprocal_softplus_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 19, scope: !7)
!18 = !DILocation(line: 118, column: 15, scope: !19, inlinedAt: !21)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !20, discriminator: 0)
!20 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!21 = !DILocation(line: 36, column: 40, scope: !7)
!22 = !DILocation(line: 120, column: 21, scope: !19, inlinedAt: !21)
!23 = !DILocation(line: 120, column: 16, scope: !19, inlinedAt: !21)
!24 = !DILocation(line: 121, column: 29, scope: !19, inlinedAt: !21)
!25 = !DILocation(line: 38, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 23, scope: !7)
!27 = !DILocation(line: 40, column: 27, scope: !7)
!28 = !DILocation(line: 41, column: 32, scope: !7)
!29 = !DILocation(line: 43, column: 19, scope: !7)
!30 = !DILocation(line: 44, column: 32, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 46, column: 35, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!36 = !DILocation(line: 47, column: 26, scope: !7)
!37 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !36)
!38 = distinct !DILexicalBlockFile(scope: !34, file: !35, discriminator: 0)
!39 = !DILocation(line: 49, column: 20, scope: !7)
!40 = !DILocation(line: 56, column: 20, scope: !7)
!41 = !DILocation(line: 58, column: 33, scope: !7)
!42 = !DILocation(line: 59, column: 4, scope: !7)
!43 = !DILocation(line: 60, column: 28, scope: !7)
!44 = !DILocation(line: 60, column: 40, scope: !7)
!45 = !DILocation(line: 61, column: 25, scope: !7)
!46 = !DILocation(line: 61, column: 37, scope: !7)
!47 = !DILocation(line: 61, column: 4, scope: !7)
