; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_stack_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 1024, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 2, !dbg !15
  %11 = mul i32 %10, 2, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = sdiv i32 %8, 64, !dbg !17
  %13 = srem i32 %10, 32, !dbg !18
  %14 = icmp slt i32 %.decomposed, 1, !dbg !19
  %15 = sext i32 %12 to i64, !dbg !20
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !20
  %17 = and i1 %9, %14, !dbg !21
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %17, i32 0, i1 %17) #5, !dbg !22
  %19 = bitcast i32 %18 to float, !dbg !22
  %20 = shl nsw i32 %13, 1, !dbg !23
  %21 = sitofp i32 %20 to float, !dbg !24
  %22 = fmul float %21, 5.000000e-01, !dbg !25
  %23 = tail call float @llvm.nvvm.trunc.f(float %22), !dbg !26
  %24 = fmul float %23, 2.000000e+00, !dbg !27
  %25 = fmul float %24, 1.562500e-02, !dbg !28
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i54 = icmp eq i32 %27, 0, !dbg !29
  %28 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.000000e+04) #5, !dbg !29
  %29 = tail call float @llvm.nvvm.fabs.f(float 1.000000e+04) #5, !dbg !29
  %.09.i55 = select i1 %.not.i54, float %29, float %28, !dbg !29
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not12.i = icmp eq i32 %30, 0, !dbg !29
  %31 = fcmp olt float %.09.i55, 0x3810000000000000, !dbg !29
  %32 = fmul float %.09.i55, 0x4170000000000000, !dbg !29
  %33 = select i1 %.not12.i, i1 %31, i1 false, !dbg !29
  %.116.i = select i1 %33, float %32, float %.09.i55, !dbg !29
  %expo.i.i.1.i = select i1 %33, float -1.510000e+02, float -1.270000e+02, !dbg !29
  %34 = bitcast float %.116.i to i32, !dbg !29
  %35 = and i32 %34, 8388607, !dbg !29
  %36 = or disjoint i32 %35, 1065353216, !dbg !29
  %37 = bitcast i32 %36 to float, !dbg !29
  %38 = lshr i32 %34, 23, !dbg !29
  %39 = uitofp nneg i32 %38 to float, !dbg !29
  %40 = fadd float %expo.i.i.1.i, %39, !dbg !29
  %41 = fcmp ogt float %37, 0x3FF6A09E60000000, !dbg !29
  %42 = fmul float %37, 5.000000e-01, !dbg !29
  %43 = fadd float %40, 1.000000e+00, !dbg !29
  %expo.i.i.2.i = select i1 %41, float %43, float %40, !dbg !29
  %m.i.i.0.i = select i1 %41, float %42, float %37, !dbg !29
  %44 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !29
  %45 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !29
  %46 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %45) #6, !dbg !29, !srcloc !30
  %47 = fmul float %44, 2.000000e+00, !dbg !29
  %48 = fmul float %46, %47, !dbg !29
  %49 = fmul float %48, %48, !dbg !29
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not13.i = icmp eq i32 %50, 0, !dbg !29
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %49, float 0x3F8995EC60000000) #5, !dbg !29
  %52 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %49, float 0x3F8995EC60000000) #5, !dbg !29
  %.020.i = select i1 %.not13.i, float %52, float %51, !dbg !29
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not14.i = icmp eq i32 %53, 0, !dbg !29
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %49, float 0x3FB55557A0000000) #5, !dbg !29
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %49, float 0x3FB55557A0000000) #5, !dbg !29
  %.021.i = select i1 %.not14.i, float %55, float %54, !dbg !29
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not15.i56 = icmp eq i32 %56, 0, !dbg !29
  %57 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %49) #5, !dbg !29
  %58 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %49) #5, !dbg !29
  %.022.i = select i1 %.not15.i56, float %58, float %57, !dbg !29
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not16.i57 = icmp eq i32 %59, 0, !dbg !29
  %60 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %48) #5, !dbg !29
  %61 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %48) #5, !dbg !29
  %.024.i = select i1 %.not16.i57, float %61, float %60, !dbg !29
  %62 = fsub float %44, %48, !dbg !29
  %63 = fmul float %62, 2.000000e+00, !dbg !29
  %64 = fneg float %48, !dbg !29
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not17.i58 = icmp eq i32 %65, 0, !dbg !29
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %64, float %44, float %63) #5, !dbg !29
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %64, float %44, float %63) #5, !dbg !29
  %.025.i = select i1 %.not17.i58, float %67, float %66, !dbg !29
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not18.i59 = icmp eq i32 %68, 0, !dbg !29
  %69 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %46, float %.025.i) #5, !dbg !29
  %70 = tail call float @llvm.nvvm.mul.rn.f(float %46, float %.025.i) #5, !dbg !29
  %.026.i = select i1 %.not18.i59, float %70, float %69, !dbg !29
  %71 = fadd float %48, %.024.i, !dbg !29
  %72 = fsub float %48, %71, !dbg !29
  %73 = fadd float %.024.i, %72, !dbg !29
  %74 = fadd float %.026.i, %73, !dbg !29
  %75 = fadd float %71, %74, !dbg !29
  %76 = fsub float %71, %75, !dbg !29
  %77 = fadd float %74, %76, !dbg !29
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not19.i60 = icmp eq i32 %78, 0, !dbg !29
  %79 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !29
  %80 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !29
  %.019.i = select i1 %.not19.i60, float %80, float %79, !dbg !29
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not20.i61 = icmp eq i32 %81, 0, !dbg !29
  %82 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !29
  %83 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !29
  %.018.i = select i1 %.not20.i61, float %83, float %82, !dbg !29
  %84 = fadd float %.019.i, %75, !dbg !29
  %85 = fsub float %.019.i, %84, !dbg !29
  %86 = fadd float %75, %85, !dbg !29
  %87 = fadd float %77, %86, !dbg !29
  %88 = fadd float %.018.i, %87, !dbg !29
  %89 = fadd float %84, %88, !dbg !29
  %90 = fsub float %84, %89, !dbg !29
  %91 = fadd float %88, %90, !dbg !29
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not21.i = icmp eq i32 %92, 0, !dbg !29
  %93 = tail call float @llvm.nvvm.fabs.ftz.f(float %25) #5, !dbg !29
  %94 = tail call float @llvm.nvvm.fabs.f(float %25) #5, !dbg !29
  %.027.i = select i1 %.not21.i, float %94, float %93, !dbg !29
  %95 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !29
  %96 = fmul float %25, 0x3F20000000000000, !dbg !29
  %.013.i62 = select i1 %95, float %96, float %25, !dbg !29
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not22.i = icmp eq i32 %97, 0, !dbg !29
  %98 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i62, float %89) #5, !dbg !29
  %99 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i62, float %89) #5, !dbg !29
  %.028.i = select i1 %.not22.i, float %99, float %98, !dbg !29
  %100 = fneg float %.028.i, !dbg !29
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not23.i = icmp eq i32 %101, 0, !dbg !29
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i62, float %89, float %100) #5, !dbg !29
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i62, float %89, float %100) #5, !dbg !29
  %.029.i = select i1 %.not23.i, float %103, float %102, !dbg !29
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not24.i = icmp eq i32 %104, 0, !dbg !29
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i62, float %91, float %.029.i) #5, !dbg !29
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i62, float %91, float %.029.i) #5, !dbg !29
  %.030.i = select i1 %.not24.i, float %106, float %105, !dbg !29
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not25.i = icmp eq i32 %107, 0, !dbg !29
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %89, float %.030.i) #5, !dbg !29
  %109 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %89, float %.030.i) #5, !dbg !29
  %.031.i = select i1 %.not25.i, float %109, float %108, !dbg !29
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not26.i = icmp eq i32 %110, 0, !dbg !29
  %111 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #5, !dbg !29
  %112 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #5, !dbg !29
  %.032.i = select i1 %.not26.i, float %112, float %111, !dbg !29
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %115 = bitcast float %.032.i to i32, !dbg !29
  %116 = icmp eq i32 %115, 1118925336, !dbg !29
  %prod.i.145.0.i = select i1 %116, float 0x40562E42E0000000, float %.032.i, !dbg !29
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not29.i65 = icmp eq i32 %117, 0, !dbg !29
  %118 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !29
  %119 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !29
  %.017.i = select i1 %.not29.i65, float %119, float %118, !dbg !29
  %120 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #5, !dbg !29
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not30.i66 = icmp eq i32 %121, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.fabs.ftz.f(float %120) #5, !dbg !29
  %123 = tail call float @llvm.nvvm.fabs.f(float %120) #5, !dbg !29
  %.023.i = select i1 %.not30.i66, float %123, float %122, !dbg !29
  %124 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !29
  %125 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %120), !dbg !29
  %j.i.i.0.i = select i1 %124, float %125, float %120, !dbg !29
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not31.i67 = icmp eq i32 %126, 0, !dbg !29
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !29
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !29
  %.035.i = select i1 %.not31.i67, float %128, float %127, !dbg !29
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not32.i68 = icmp eq i32 %129, 0, !dbg !29
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !29
  %.036.i = select i1 %.not32.i68, float %131, float %130, !dbg !29
  %132 = fmul float %.036.i, 0x3FF7154760000000, !dbg !29
  %133 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !29
  %134 = bitcast float %133 to i32, !dbg !29
  %135 = shl i32 %134, 23, !dbg !29
  %136 = bitcast i32 %135 to float, !dbg !29
  %137 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %132) #5, !dbg !29
  %138 = fmul float %137, %136, !dbg !29
  %139 = fcmp une float %138, 0x7FF0000000000000, !dbg !29
  br i1 %139, label %__internal_fmad.exit.i.i, label %__internal_powf_corner_cases.exit.i, !dbg !29

__internal_fmad.exit.i.i:                         ; preds = %3
  %.not28.i64 = icmp eq i32 %114, 0, !dbg !29
  %.not27.i63 = icmp eq i32 %113, 0, !dbg !29
  %140 = fneg float %.032.i, !dbg !29
  %141 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %140) #5, !dbg !29
  %142 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %140) #5, !dbg !29
  %.033.i = select i1 %.not27.i63, float %141, float %142, !dbg !29
  %143 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #5, !dbg !29
  %144 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #5, !dbg !29
  %.034.i = select i1 %.not28.i64, float %143, float %144, !dbg !29
  %145 = fadd float %.034.i, 0x3EE0000000000000, !dbg !29
  %prod.i.044.0.i = select i1 %116, float %145, float %.034.i, !dbg !29
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not33.i79 = icmp eq i32 %146, 0, !dbg !29
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float %prod.i.044.0.i, float %138) #5, !dbg !29
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %138, float %prod.i.044.0.i, float %138) #5, !dbg !29
  %.014.i = select i1 %.not33.i79, float %148, float %147, !dbg !29
  br label %__internal_powf_corner_cases.exit.i, !dbg !29

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_fmad.exit.i.i, %3
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %3 ], !dbg !29
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not34.i69 = icmp eq i32 %149, 0, !dbg !29
  %.01.i70 = select i1 %.not34.i69, float %29, float %28, !dbg !29
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not35.i71 = icmp eq i32 %150, 0, !dbg !29
  %.02.i72 = select i1 %.not35.i71, float %94, float %93, !dbg !29
  %151 = fadd float %.01.i70, %.02.i72, !dbg !29
  %152 = bitcast float %151 to i32, !dbg !29
  %153 = icmp sgt i32 %152, 2139095039, !dbg !29
  br i1 %153, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !29

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not36.i73 = icmp eq i32 %154, 0, !dbg !29
  %.06.i74 = select i1 %.not36.i73, float %29, float %28, !dbg !29
  %155 = fcmp uno float %.06.i74, 0.000000e+00, !dbg !29
  br i1 %155, label %158, label %__nv_isnanf.exit11.i.i, !dbg !29

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not37.i = icmp eq i32 %156, 0, !dbg !29
  %.07.i75 = select i1 %.not37.i, float %94, float %93, !dbg !29
  %157 = fcmp uno float %.07.i75, 0.000000e+00, !dbg !29
  br i1 %157, label %158, label %__nv_isinff.exit8.i.i, !dbg !29

158:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %159 = fadd float %25, 1.000000e+04, !dbg !29
  br label %__nv_powf.exit, !dbg !29

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not38.i = icmp eq i32 %160, 0, !dbg !29
  %.05.i76 = select i1 %.not38.i, float %94, float %93, !dbg !29
  %161 = fcmp oeq float %.05.i76, 0x7FF0000000000000, !dbg !29
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not40.i = icmp eq i32 %162, 0, !dbg !29
  %.04.i78 = select i1 %.not40.i, float %29, float %28, !dbg !29
  br i1 %161, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !29

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %163 = fcmp ogt float %.04.i78, 1.000000e+00, !dbg !29
  %ti.i.0.i = select i1 %163, i32 2139095040, i32 0, !dbg !29
  %164 = fcmp olt float %25, 0.000000e+00, !dbg !29
  %165 = xor i32 %ti.i.0.i, 2139095040, !dbg !29
  %ti.i.1.i = select i1 %164, i32 %165, i32 %ti.i.0.i, !dbg !29
  %166 = bitcast i32 %ti.i.1.i to float, !dbg !29
  br label %__nv_powf.exit, !dbg !29

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %167 = fcmp oeq float %.04.i78, 0x7FF0000000000000, !dbg !29
  br i1 %167, label %168, label %__nv_powf.exit, !dbg !29

168:                                              ; preds = %__nv_isinff.exit.i.i
  %169 = fcmp oge float %25, 0.000000e+00, !dbg !29
  %170 = select i1 %169, float 0x7FF0000000000000, float 0.000000e+00, !dbg !29
  br label %__nv_powf.exit, !dbg !29

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %158, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %168
  %.3.i = phi float [ %t.i.0.i, %__internal_powf_corner_cases.exit.i ], [ %159, %158 ], [ %166, %__nv_fabsf.exit5.i.i ], [ %170, %168 ], [ %t.i.0.i, %__nv_isinff.exit.i.i ], !dbg !29
  %171 = fcmp oeq float %25, 0.000000e+00, !dbg !29
  %t.0.i = select i1 %171, float 1.000000e+00, float %.3.i, !dbg !29
  %172 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %19, float %t.0.i) #5, !dbg !31
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %173 = fmul float %172, 0x3FE45F3060000000, !dbg !32
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not.i = icmp eq i32 %174, 0, !dbg !32
  %175 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %173) #5, !dbg !32
  %176 = tail call i32 @llvm.nvvm.f2i.rn(float %173) #5, !dbg !32
  %.01.i = select i1 %.not.i, i32 %176, i32 %175, !dbg !32
  %177 = sitofp i32 %.01.i to float, !dbg !32
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not15.i = icmp eq i32 %178, 0, !dbg !32
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %177, float 0xBFF921FB40000000, float %172) #5, !dbg !32
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %177, float 0xBFF921FB40000000, float %172) #5, !dbg !32
  %.02.i = select i1 %.not15.i, float %180, float %179, !dbg !32
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not16.i = icmp eq i32 %181, 0, !dbg !32
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %177, float 0xBE74442D00000000, float %.02.i) #5, !dbg !32
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %177, float 0xBE74442D00000000, float %.02.i) #5, !dbg !32
  %.03.i = select i1 %.not16.i, float %183, float %182, !dbg !32
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not17.i = icmp eq i32 %184, 0, !dbg !32
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %177, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !32
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %177, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !32
  %.04.i = select i1 %.not17.i, float %186, float %185, !dbg !32
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not18.i = icmp eq i32 %187, 0, !dbg !32
  %188 = tail call float @llvm.nvvm.fabs.ftz.f(float %172) #5, !dbg !32
  %189 = tail call float @llvm.nvvm.fabs.f(float %172) #5, !dbg !32
  %.06.i = select i1 %.not18.i, float %189, float %188, !dbg !32
  %190 = fcmp ult float %.06.i, 1.056150e+05, !dbg !32
  br i1 %190, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !32

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_powf.exit
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not19.i = icmp eq i32 %191, 0, !dbg !32
  %.07.i = select i1 %.not19.i, float %189, float %188, !dbg !32
  %192 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !32
  br i1 %192, label %__nv_fmul_rn.exit.i.i.i, label %196, !dbg !32

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not27.i = icmp eq i32 %193, 0, !dbg !32
  %194 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %172, float 0.000000e+00) #5, !dbg !32
  %195 = tail call float @llvm.nvvm.mul.rn.f(float %172, float 0.000000e+00) #5, !dbg !32
  %.08.i = select i1 %.not27.i, float %195, float %194, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

196:                                              ; preds = %__nv_isinff.exit.i.i.i
  %197 = bitcast float %172 to i32, !dbg !32
  %198 = lshr i32 %197, 23, !dbg !32
  %199 = and i32 %198, 224, !dbg !32
  %200 = add nsw i32 %199, -128, !dbg !32
  %201 = shl i32 %197, 8, !dbg !32
  %202 = or i32 %201, -2147483648, !dbg !32
  %203 = lshr exact i32 %200, 5, !dbg !32
  br label %204, !dbg !32

204:                                              ; preds = %196, %204
  %indvars.iv = phi i64 [ 0, %196 ], [ %indvars.iv.next, %204 ]
  %hi.i.i.i.0.i162 = phi i32 [ 0, %196 ], [ %209, %204 ]
  %205 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !32
  %206 = load i32, ptr addrspace(1) %205, align 4, !dbg !32
  %207 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %206, i32 %202, i32 %hi.i.i.i.0.i162) #6, !dbg !32, !srcloc !33
  %208 = extractvalue { i32, i32 } %207, 0, !dbg !32
  %209 = extractvalue { i32, i32 } %207, 1, !dbg !32
  %210 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !32
  store i32 %208, ptr %210, align 4, !dbg !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !32
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !32
  br i1 %exitcond.not, label %211, label %204, !dbg !32, !llvm.loop !34

211:                                              ; preds = %204
  %212 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !32
  store i32 %209, ptr %212, align 4, !dbg !32
  %213 = and i32 %198, 31, !dbg !32
  %214 = sub nsw i32 6, %203, !dbg !32
  %215 = sext i32 %214 to i64, !dbg !32
  %216 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %215, !dbg !32
  %217 = load i32, ptr %216, align 4, !dbg !32
  %218 = sub nsw i32 5, %203, !dbg !32
  %219 = sext i32 %218 to i64, !dbg !32
  %220 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %219, !dbg !32
  %221 = load i32, ptr %220, align 4, !dbg !32
  %.not20.i = icmp eq i32 %213, 0, !dbg !32
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %222, !dbg !32

222:                                              ; preds = %211
  %223 = sub nsw i32 4, %203, !dbg !32
  %224 = sub nuw nsw i32 32, %213, !dbg !32
  %225 = shl i32 %217, %213, !dbg !32
  %226 = lshr i32 %221, %224, !dbg !32
  %227 = add i32 %226, %225, !dbg !32
  %228 = shl i32 %221, %213, !dbg !32
  %229 = sext i32 %223 to i64, !dbg !32
  %230 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %229, !dbg !32
  %231 = load i32, ptr %230, align 4, !dbg !32
  %232 = lshr i32 %231, %224, !dbg !32
  %233 = add i32 %232, %228, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %222, %211
  %hi.i.i.i.1.i = phi i32 [ %227, %222 ], [ %217, %211 ], !dbg !32
  %lo.i.i.i.0.i = phi i32 [ %233, %222 ], [ %221, %211 ], !dbg !32
  %234 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !32
  %235 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !32
  %236 = shl i32 %lo.i.i.i.0.i, 2, !dbg !32
  %237 = lshr i32 %235, 31, !dbg !32
  %238 = add nuw nsw i32 %237, %234, !dbg !32
  %239 = sub nsw i32 0, %238, !dbg !32
  %.not2123.i = icmp slt i32 %197, 0, !dbg !32
  %spec.select.i = select i1 %.not2123.i, i32 %239, i32 %238, !dbg !32
  %240 = xor i32 %235, %197, !dbg !32
  %.lobit.i = ashr i32 %235, 31, !dbg !32
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %235, !dbg !32
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %236, !dbg !32
  %241 = zext i32 %hi.i.i.i.2.i to i64, !dbg !32
  %242 = shl nuw i64 %241, 32, !dbg !32
  %243 = zext i32 %lo.i.i.i.1.i to i64, !dbg !32
  %244 = or disjoint i64 %242, %243, !dbg !32
  %245 = sitofp i64 %244 to double, !dbg !32
  %246 = fmul double %245, 0x3BF921FB54442D19, !dbg !32
  %247 = fptrunc double %246 to float, !dbg !32
  %248 = fneg float %247, !dbg !32
  %.not2526.i = icmp slt i32 %240, 0, !dbg !32
  %r.i.i.i.0.i = select i1 %.not2526.i, float %248, float %247, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_powf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_powf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %t.i.i.1.i = phi float [ %.04.i, %__nv_powf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not28.i = icmp eq i32 %249, 0, !dbg !32
  %250 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !32
  %251 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !32
  %.011.i = select i1 %.not28.i, float %251, float %250, !dbg !32
  %252 = and i32 %i.i.1.i, 1, !dbg !32
  %.not29.i = icmp eq i32 %252, 0, !dbg !32
  %253 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !32
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not30.i = icmp eq i32 %254, 0, !dbg !32
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %253, float 0.000000e+00) #5, !dbg !32
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %253, float 0.000000e+00) #5, !dbg !32
  %.012.i = select i1 %.not30.i, float %256, float %255, !dbg !32
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !32

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not31.i = icmp eq i32 %257, 0, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !32
  %259 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !32
  %.013.i = select i1 %.not31.i, float %259, float %258, !dbg !32
  br label %__internal_fmad.exit2.i.i.i, !dbg !32

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %260 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %261 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %262 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not32.i = icmp eq i32 %263, 0, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %262, float %.011.i, float %261) #5, !dbg !32
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %262, float %.011.i, float %261) #5, !dbg !32
  %.010.i = select i1 %.not32.i, float %265, float %264, !dbg !32
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not33.i = icmp eq i32 %266, 0, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %260) #5, !dbg !32
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %260) #5, !dbg !32
  %.09.i = select i1 %.not33.i, float %268, float %267, !dbg !32
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not34.i = icmp eq i32 %269, 0, !dbg !32
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %253) #5, !dbg !32
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %253) #5, !dbg !32
  %.05.i = select i1 %.not34.i, float %271, float %270, !dbg !32
  %272 = and i32 %i.i.1.i, 2, !dbg !32
  %.not35.i = icmp eq i32 %272, 0, !dbg !32
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !32

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not36.i = icmp eq i32 %273, 0, !dbg !32
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %.0.i = select i1 %.not36.i, float %275, float %274, !dbg !32
  br label %__nv_sinf.exit, !dbg !32

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %276 = icmp sgt i32 %.decomposed, 0, !dbg !36
  %277 = and i1 %9, %276, !dbg !37
  %278 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %277, i32 0, i1 %277) #5, !dbg !38
  %279 = bitcast i32 %278 to float, !dbg !38
  %280 = or disjoint i32 %20, 1, !dbg !39
  %281 = sitofp i32 %280 to float, !dbg !40
  %282 = fmul float %281, 5.000000e-01, !dbg !41
  %283 = tail call float @llvm.nvvm.trunc.f(float %282), !dbg !42
  %284 = fmul float %283, 2.000000e+00, !dbg !43
  %285 = fmul float %284, 1.562500e-02, !dbg !44
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not.i80 = icmp eq i32 %287, 0, !dbg !45
  %.09.i81 = select i1 %.not.i80, float %29, float %28, !dbg !45
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not12.i82 = icmp eq i32 %288, 0, !dbg !45
  %289 = fcmp olt float %.09.i81, 0x3810000000000000, !dbg !45
  %290 = fmul float %.09.i81, 0x4170000000000000, !dbg !45
  %291 = select i1 %.not12.i82, i1 %289, i1 false, !dbg !45
  %.116.i85 = select i1 %291, float %290, float %.09.i81, !dbg !45
  %expo.i.i.1.i86 = select i1 %291, float -1.510000e+02, float -1.270000e+02, !dbg !45
  %292 = bitcast float %.116.i85 to i32, !dbg !45
  %293 = and i32 %292, 8388607, !dbg !45
  %294 = or disjoint i32 %293, 1065353216, !dbg !45
  %295 = bitcast i32 %294 to float, !dbg !45
  %296 = lshr i32 %292, 23, !dbg !45
  %297 = uitofp nneg i32 %296 to float, !dbg !45
  %298 = fadd float %expo.i.i.1.i86, %297, !dbg !45
  %299 = fcmp ogt float %295, 0x3FF6A09E60000000, !dbg !45
  %300 = fmul float %295, 5.000000e-01, !dbg !45
  %301 = fadd float %298, 1.000000e+00, !dbg !45
  %expo.i.i.2.i87 = select i1 %299, float %301, float %298, !dbg !45
  %m.i.i.0.i88 = select i1 %299, float %300, float %295, !dbg !45
  %302 = fadd float %m.i.i.0.i88, -1.000000e+00, !dbg !45
  %303 = fadd float %m.i.i.0.i88, 1.000000e+00, !dbg !45
  %304 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %303) #6, !dbg !45, !srcloc !30
  %305 = fmul float %302, 2.000000e+00, !dbg !45
  %306 = fmul float %304, %305, !dbg !45
  %307 = fmul float %306, %306, !dbg !45
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not13.i89 = icmp eq i32 %308, 0, !dbg !45
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %307, float 0x3F8995EC60000000) #5, !dbg !45
  %310 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %307, float 0x3F8995EC60000000) #5, !dbg !45
  %.020.i90 = select i1 %.not13.i89, float %310, float %309, !dbg !45
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not14.i91 = icmp eq i32 %311, 0, !dbg !45
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i90, float %307, float 0x3FB55557A0000000) #5, !dbg !45
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i90, float %307, float 0x3FB55557A0000000) #5, !dbg !45
  %.021.i92 = select i1 %.not14.i91, float %313, float %312, !dbg !45
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not15.i93 = icmp eq i32 %314, 0, !dbg !45
  %315 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i92, float %307) #5, !dbg !45
  %316 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i92, float %307) #5, !dbg !45
  %.022.i94 = select i1 %.not15.i93, float %316, float %315, !dbg !45
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not16.i95 = icmp eq i32 %317, 0, !dbg !45
  %318 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i94, float %306) #5, !dbg !45
  %319 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i94, float %306) #5, !dbg !45
  %.024.i96 = select i1 %.not16.i95, float %319, float %318, !dbg !45
  %320 = fsub float %302, %306, !dbg !45
  %321 = fmul float %320, 2.000000e+00, !dbg !45
  %322 = fneg float %306, !dbg !45
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not17.i97 = icmp eq i32 %323, 0, !dbg !45
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float %302, float %321) #5, !dbg !45
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %322, float %302, float %321) #5, !dbg !45
  %.025.i98 = select i1 %.not17.i97, float %325, float %324, !dbg !45
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not18.i99 = icmp eq i32 %326, 0, !dbg !45
  %327 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %304, float %.025.i98) #5, !dbg !45
  %328 = tail call float @llvm.nvvm.mul.rn.f(float %304, float %.025.i98) #5, !dbg !45
  %.026.i100 = select i1 %.not18.i99, float %328, float %327, !dbg !45
  %329 = fadd float %306, %.024.i96, !dbg !45
  %330 = fsub float %306, %329, !dbg !45
  %331 = fadd float %.024.i96, %330, !dbg !45
  %332 = fadd float %.026.i100, %331, !dbg !45
  %333 = fadd float %329, %332, !dbg !45
  %334 = fsub float %329, %333, !dbg !45
  %335 = fadd float %332, %334, !dbg !45
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not19.i101 = icmp eq i32 %336, 0, !dbg !45
  %337 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i87, float 0x3FE62E4000000000) #5, !dbg !45
  %338 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i87, float 0x3FE62E4000000000) #5, !dbg !45
  %.019.i102 = select i1 %.not19.i101, float %338, float %337, !dbg !45
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not20.i103 = icmp eq i32 %339, 0, !dbg !45
  %340 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i87, float 0x3EB7F7D1C0000000) #5, !dbg !45
  %341 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i87, float 0x3EB7F7D1C0000000) #5, !dbg !45
  %.018.i104 = select i1 %.not20.i103, float %341, float %340, !dbg !45
  %342 = fadd float %.019.i102, %333, !dbg !45
  %343 = fsub float %.019.i102, %342, !dbg !45
  %344 = fadd float %333, %343, !dbg !45
  %345 = fadd float %335, %344, !dbg !45
  %346 = fadd float %.018.i104, %345, !dbg !45
  %347 = fadd float %342, %346, !dbg !45
  %348 = fsub float %342, %347, !dbg !45
  %349 = fadd float %346, %348, !dbg !45
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not21.i105 = icmp eq i32 %350, 0, !dbg !45
  %351 = tail call float @llvm.nvvm.fabs.ftz.f(float %285) #5, !dbg !45
  %352 = tail call float @llvm.nvvm.fabs.f(float %285) #5, !dbg !45
  %.027.i106 = select i1 %.not21.i105, float %352, float %351, !dbg !45
  %353 = fcmp ogt float %.027.i106, 0x46FED09BE0000000, !dbg !45
  %354 = fmul float %285, 0x3F20000000000000, !dbg !45
  %.013.i107 = select i1 %353, float %354, float %285, !dbg !45
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not22.i108 = icmp eq i32 %355, 0, !dbg !45
  %356 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i107, float %347) #5, !dbg !45
  %357 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i107, float %347) #5, !dbg !45
  %.028.i109 = select i1 %.not22.i108, float %357, float %356, !dbg !45
  %358 = fneg float %.028.i109, !dbg !45
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not23.i110 = icmp eq i32 %359, 0, !dbg !45
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i107, float %347, float %358) #5, !dbg !45
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i107, float %347, float %358) #5, !dbg !45
  %.029.i111 = select i1 %.not23.i110, float %361, float %360, !dbg !45
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not24.i112 = icmp eq i32 %362, 0, !dbg !45
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i107, float %349, float %.029.i111) #5, !dbg !45
  %364 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i107, float %349, float %.029.i111) #5, !dbg !45
  %.030.i113 = select i1 %.not24.i112, float %364, float %363, !dbg !45
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not25.i114 = icmp eq i32 %365, 0, !dbg !45
  %366 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %347, float %.030.i113) #5, !dbg !45
  %367 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %347, float %.030.i113) #5, !dbg !45
  %.031.i115 = select i1 %.not25.i114, float %367, float %366, !dbg !45
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not26.i116 = icmp eq i32 %368, 0, !dbg !45
  %369 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i109, float %.031.i115) #5, !dbg !45
  %370 = tail call float @llvm.nvvm.add.rn.f(float %.028.i109, float %.031.i115) #5, !dbg !45
  %.032.i117 = select i1 %.not26.i116, float %370, float %369, !dbg !45
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %373 = bitcast float %.032.i117 to i32, !dbg !45
  %374 = icmp eq i32 %373, 1118925336, !dbg !45
  %prod.i.145.0.i123 = select i1 %374, float 0x40562E42E0000000, float %.032.i117, !dbg !45
  %375 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not29.i124 = icmp eq i32 %375, 0, !dbg !45
  %376 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i123, float 0x3FF7154760000000) #5, !dbg !45
  %377 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i123, float 0x3FF7154760000000) #5, !dbg !45
  %.017.i125 = select i1 %.not29.i124, float %377, float %376, !dbg !45
  %378 = tail call float @llvm.nvvm.trunc.f(float %.017.i125) #5, !dbg !45
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not30.i126 = icmp eq i32 %379, 0, !dbg !45
  %380 = tail call float @llvm.nvvm.fabs.ftz.f(float %378) #5, !dbg !45
  %381 = tail call float @llvm.nvvm.fabs.f(float %378) #5, !dbg !45
  %.023.i127 = select i1 %.not30.i126, float %381, float %380, !dbg !45
  %382 = fcmp ogt float %.023.i127, 1.260000e+02, !dbg !45
  %383 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %378), !dbg !45
  %j.i.i.0.i128 = select i1 %382, float %383, float %378, !dbg !45
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not31.i129 = icmp eq i32 %384, 0, !dbg !45
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i128, float 0xBFE62E4300000000, float %prod.i.145.0.i123) #5, !dbg !45
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i128, float 0xBFE62E4300000000, float %prod.i.145.0.i123) #5, !dbg !45
  %.035.i130 = select i1 %.not31.i129, float %386, float %385, !dbg !45
  %387 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not32.i131 = icmp eq i32 %387, 0, !dbg !45
  %388 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i128, float 0x3E205C6100000000, float %.035.i130) #5, !dbg !45
  %389 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i128, float 0x3E205C6100000000, float %.035.i130) #5, !dbg !45
  %.036.i132 = select i1 %.not32.i131, float %389, float %388, !dbg !45
  %390 = fmul float %.036.i132, 0x3FF7154760000000, !dbg !45
  %391 = fadd float %j.i.i.0.i128, 0x4168000FE0000000, !dbg !45
  %392 = bitcast float %391 to i32, !dbg !45
  %393 = shl i32 %392, 23, !dbg !45
  %394 = bitcast i32 %393 to float, !dbg !45
  %395 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %390) #5, !dbg !45
  %396 = fmul float %395, %394, !dbg !45
  %397 = fcmp une float %396, 0x7FF0000000000000, !dbg !45
  br i1 %397, label %__internal_fmad.exit.i.i158, label %__internal_powf_corner_cases.exit.i133, !dbg !45

__internal_fmad.exit.i.i158:                      ; preds = %__nv_sinf.exit
  %.not28.i120 = icmp eq i32 %372, 0, !dbg !45
  %.not27.i118 = icmp eq i32 %371, 0, !dbg !45
  %398 = fneg float %.032.i117, !dbg !45
  %399 = tail call float @llvm.nvvm.add.rn.f(float %.028.i109, float %398) #5, !dbg !45
  %400 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i109, float %398) #5, !dbg !45
  %.033.i119 = select i1 %.not27.i118, float %399, float %400, !dbg !45
  %401 = tail call float @llvm.nvvm.add.rn.f(float %.033.i119, float %.031.i115) #5, !dbg !45
  %402 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i119, float %.031.i115) #5, !dbg !45
  %.034.i121 = select i1 %.not28.i120, float %401, float %402, !dbg !45
  %403 = fadd float %.034.i121, 0x3EE0000000000000, !dbg !45
  %prod.i.044.0.i122 = select i1 %374, float %403, float %.034.i121, !dbg !45
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not33.i159 = icmp eq i32 %404, 0, !dbg !45
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %396, float %prod.i.044.0.i122, float %396) #5, !dbg !45
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %396, float %prod.i.044.0.i122, float %396) #5, !dbg !45
  %.014.i160 = select i1 %.not33.i159, float %406, float %405, !dbg !45
  br label %__internal_powf_corner_cases.exit.i133, !dbg !45

__internal_powf_corner_cases.exit.i133:           ; preds = %__internal_fmad.exit.i.i158, %__nv_sinf.exit
  %t.i.0.i134 = phi float [ %.014.i160, %__internal_fmad.exit.i.i158 ], [ 0x7FF0000000000000, %__nv_sinf.exit ], !dbg !45
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not34.i135 = icmp eq i32 %407, 0, !dbg !45
  %.01.i136 = select i1 %.not34.i135, float %29, float %28, !dbg !45
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not35.i137 = icmp eq i32 %408, 0, !dbg !45
  %.02.i138 = select i1 %.not35.i137, float %352, float %351, !dbg !45
  %409 = fadd float %.01.i136, %.02.i138, !dbg !45
  %410 = bitcast float %409 to i32, !dbg !45
  %411 = icmp sgt i32 %410, 2139095039, !dbg !45
  br i1 %411, label %__nv_isnanf.exit.i.i141, label %__nv_powf.exit161, !dbg !45

__nv_isnanf.exit.i.i141:                          ; preds = %__internal_powf_corner_cases.exit.i133
  %412 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not36.i142 = icmp eq i32 %412, 0, !dbg !45
  %.06.i143 = select i1 %.not36.i142, float %29, float %28, !dbg !45
  %413 = fcmp uno float %.06.i143, 0.000000e+00, !dbg !45
  br i1 %413, label %416, label %__nv_isnanf.exit11.i.i144, !dbg !45

__nv_isnanf.exit11.i.i144:                        ; preds = %__nv_isnanf.exit.i.i141
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not37.i145 = icmp eq i32 %414, 0, !dbg !45
  %.07.i146 = select i1 %.not37.i145, float %352, float %351, !dbg !45
  %415 = fcmp uno float %.07.i146, 0.000000e+00, !dbg !45
  br i1 %415, label %416, label %__nv_isinff.exit8.i.i147, !dbg !45

416:                                              ; preds = %__nv_isnanf.exit11.i.i144, %__nv_isnanf.exit.i.i141
  %417 = fadd float %285, 1.000000e+04, !dbg !45
  br label %__nv_powf.exit161, !dbg !45

__nv_isinff.exit8.i.i147:                         ; preds = %__nv_isnanf.exit11.i.i144
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not38.i148 = icmp eq i32 %418, 0, !dbg !45
  %.05.i149 = select i1 %.not38.i148, float %352, float %351, !dbg !45
  %419 = fcmp oeq float %.05.i149, 0x7FF0000000000000, !dbg !45
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !45
  %.not40.i154 = icmp eq i32 %420, 0, !dbg !45
  %.04.i155 = select i1 %.not40.i154, float %29, float %28, !dbg !45
  br i1 %419, label %__nv_fabsf.exit5.i.i153, label %__nv_isinff.exit.i.i150, !dbg !45

__nv_fabsf.exit5.i.i153:                          ; preds = %__nv_isinff.exit8.i.i147
  %421 = fcmp ogt float %.04.i155, 1.000000e+00, !dbg !45
  %ti.i.0.i156 = select i1 %421, i32 2139095040, i32 0, !dbg !45
  %422 = fcmp olt float %285, 0.000000e+00, !dbg !45
  %423 = xor i32 %ti.i.0.i156, 2139095040, !dbg !45
  %ti.i.1.i157 = select i1 %422, i32 %423, i32 %ti.i.0.i156, !dbg !45
  %424 = bitcast i32 %ti.i.1.i157 to float, !dbg !45
  br label %__nv_powf.exit161, !dbg !45

__nv_isinff.exit.i.i150:                          ; preds = %__nv_isinff.exit8.i.i147
  %425 = fcmp oeq float %.04.i155, 0x7FF0000000000000, !dbg !45
  br i1 %425, label %426, label %__nv_powf.exit161, !dbg !45

426:                                              ; preds = %__nv_isinff.exit.i.i150
  %427 = fcmp oge float %285, 0.000000e+00, !dbg !45
  %428 = select i1 %427, float 0x7FF0000000000000, float 0.000000e+00, !dbg !45
  br label %__nv_powf.exit161, !dbg !45

__nv_powf.exit161:                                ; preds = %__internal_powf_corner_cases.exit.i133, %416, %__nv_fabsf.exit5.i.i153, %__nv_isinff.exit.i.i150, %426
  %.3.i139 = phi float [ %t.i.0.i134, %__internal_powf_corner_cases.exit.i133 ], [ %417, %416 ], [ %424, %__nv_fabsf.exit5.i.i153 ], [ %428, %426 ], [ %t.i.0.i134, %__nv_isinff.exit.i.i150 ], !dbg !45
  %429 = fcmp oeq float %285, 0.000000e+00, !dbg !45
  %t.0.i140 = select i1 %429, float 1.000000e+00, float %.3.i139, !dbg !45
  %430 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %279, float %t.0.i140) #5, !dbg !46
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !47
  %431 = fmul float %430, 0x3FE45F3060000000, !dbg !47
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not.i2 = icmp eq i32 %432, 0, !dbg !47
  %433 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %431) #5, !dbg !47
  %434 = tail call i32 @llvm.nvvm.f2i.rn(float %431) #5, !dbg !47
  %.01.i3 = select i1 %.not.i2, i32 %434, i32 %433, !dbg !47
  %435 = sitofp i32 %.01.i3 to float, !dbg !47
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not15.i4 = icmp eq i32 %436, 0, !dbg !47
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float 0xBFF921FB40000000, float %430) #5, !dbg !47
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %435, float 0xBFF921FB40000000, float %430) #5, !dbg !47
  %.02.i5 = select i1 %.not15.i4, float %438, float %437, !dbg !47
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not16.i6 = icmp eq i32 %439, 0, !dbg !47
  %440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !47
  %441 = tail call float @llvm.nvvm.fma.rn.f(float %435, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !47
  %.03.i7 = select i1 %.not16.i6, float %441, float %440, !dbg !47
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not17.i8 = icmp eq i32 %442, 0, !dbg !47
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %435, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !47
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %435, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !47
  %.04.i9 = select i1 %.not17.i8, float %444, float %443, !dbg !47
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not18.i10 = icmp eq i32 %445, 0, !dbg !47
  %446 = tail call float @llvm.nvvm.fabs.ftz.f(float %430) #5, !dbg !47
  %447 = tail call float @llvm.nvvm.fabs.f(float %430) #5, !dbg !47
  %.06.i11 = select i1 %.not18.i10, float %447, float %446, !dbg !47
  %448 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !47
  br i1 %448, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !47

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_powf.exit161
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not19.i13 = icmp eq i32 %449, 0, !dbg !47
  %.07.i14 = select i1 %.not19.i13, float %447, float %446, !dbg !47
  %450 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !47
  br i1 %450, label %__nv_fmul_rn.exit.i.i.i51, label %454, !dbg !47

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not27.i52 = icmp eq i32 %451, 0, !dbg !47
  %452 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %430, float 0.000000e+00) #5, !dbg !47
  %453 = tail call float @llvm.nvvm.mul.rn.f(float %430, float 0.000000e+00) #5, !dbg !47
  %.08.i53 = select i1 %.not27.i52, float %453, float %452, !dbg !47
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !47

454:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %455 = bitcast float %430 to i32, !dbg !47
  %456 = lshr i32 %455, 23, !dbg !47
  %457 = and i32 %456, 224, !dbg !47
  %458 = add nsw i32 %457, -128, !dbg !47
  %459 = shl i32 %455, 8, !dbg !47
  %460 = or i32 %459, -2147483648, !dbg !47
  %461 = lshr exact i32 %458, 5, !dbg !47
  br label %462, !dbg !47

462:                                              ; preds = %454, %462
  %indvars.iv169 = phi i64 [ 0, %454 ], [ %indvars.iv.next170, %462 ]
  %hi.i.i.i.0.i15164 = phi i32 [ 0, %454 ], [ %467, %462 ]
  %463 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv169, !dbg !47
  %464 = load i32, ptr addrspace(1) %463, align 4, !dbg !47
  %465 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %464, i32 %460, i32 %hi.i.i.i.0.i15164) #6, !dbg !47, !srcloc !33
  %466 = extractvalue { i32, i32 } %465, 0, !dbg !47
  %467 = extractvalue { i32, i32 } %465, 1, !dbg !47
  %468 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv169, !dbg !47
  store i32 %466, ptr %468, align 4, !dbg !47
  %indvars.iv.next170 = add nuw nsw i64 %indvars.iv169, 1, !dbg !47
  %exitcond171.not = icmp eq i64 %indvars.iv.next170, 6, !dbg !47
  br i1 %exitcond171.not, label %469, label %462, !dbg !47, !llvm.loop !48

469:                                              ; preds = %462
  %470 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !47
  store i32 %467, ptr %470, align 4, !dbg !47
  %471 = and i32 %456, 31, !dbg !47
  %472 = sub nsw i32 6, %461, !dbg !47
  %473 = sext i32 %472 to i64, !dbg !47
  %474 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %473, !dbg !47
  %475 = load i32, ptr %474, align 4, !dbg !47
  %476 = sub nsw i32 5, %461, !dbg !47
  %477 = sext i32 %476 to i64, !dbg !47
  %478 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %477, !dbg !47
  %479 = load i32, ptr %478, align 4, !dbg !47
  %.not20.i17 = icmp eq i32 %471, 0, !dbg !47
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %480, !dbg !47

480:                                              ; preds = %469
  %481 = sub nsw i32 4, %461, !dbg !47
  %482 = sub nuw nsw i32 32, %471, !dbg !47
  %483 = shl i32 %475, %471, !dbg !47
  %484 = lshr i32 %479, %482, !dbg !47
  %485 = add i32 %484, %483, !dbg !47
  %486 = shl i32 %479, %471, !dbg !47
  %487 = sext i32 %481 to i64, !dbg !47
  %488 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %487, !dbg !47
  %489 = load i32, ptr %488, align 4, !dbg !47
  %490 = lshr i32 %489, %482, !dbg !47
  %491 = add i32 %490, %486, !dbg !47
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !47

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %480, %469
  %hi.i.i.i.1.i19 = phi i32 [ %485, %480 ], [ %475, %469 ], !dbg !47
  %lo.i.i.i.0.i20 = phi i32 [ %491, %480 ], [ %479, %469 ], !dbg !47
  %492 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !47
  %493 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !47
  %494 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !47
  %495 = lshr i32 %493, 31, !dbg !47
  %496 = add nuw nsw i32 %495, %492, !dbg !47
  %497 = sub nsw i32 0, %496, !dbg !47
  %.not2123.i21 = icmp slt i32 %455, 0, !dbg !47
  %spec.select.i22 = select i1 %.not2123.i21, i32 %497, i32 %496, !dbg !47
  %498 = xor i32 %493, %455, !dbg !47
  %.lobit.i23 = ashr i32 %493, 31, !dbg !47
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %493, !dbg !47
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %494, !dbg !47
  %499 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !47
  %500 = shl nuw i64 %499, 32, !dbg !47
  %501 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !47
  %502 = or disjoint i64 %500, %501, !dbg !47
  %503 = sitofp i64 %502 to double, !dbg !47
  %504 = fmul double %503, 0x3BF921FB54442D19, !dbg !47
  %505 = fptrunc double %504 to float, !dbg !47
  %506 = fneg float %505, !dbg !47
  %.not2526.i27 = icmp slt i32 %498, 0, !dbg !47
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %506, float %505, !dbg !47
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !47

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %__nv_powf.exit161
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_powf.exit161 ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !47
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_powf.exit161 ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !47
  %507 = add i32 %i.i.1.i30, 1, !dbg !47
  %508 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not28.i32 = icmp eq i32 %508, 0, !dbg !47
  %509 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !47
  %510 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !47
  %.011.i33 = select i1 %.not28.i32, float %510, float %509, !dbg !47
  %511 = and i32 %i.i.1.i30, 1, !dbg !47
  %.not29.not.i = icmp eq i32 %511, 0, !dbg !47
  %512 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !47
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not30.i34 = icmp eq i32 %513, 0, !dbg !47
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %512, float 0.000000e+00) #5, !dbg !47
  %515 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %512, float 0.000000e+00) #5, !dbg !47
  %.012.i35 = select i1 %.not30.i34, float %515, float %514, !dbg !47
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !47

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not31.i49 = icmp eq i32 %516, 0, !dbg !47
  %517 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !47
  %518 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !47
  %.013.i50 = select i1 %.not31.i49, float %518, float %517, !dbg !47
  br label %__internal_fmad.exit2.i.i.i36, !dbg !47

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %519 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !47
  %520 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !47
  %521 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !47
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not32.i37 = icmp eq i32 %522, 0, !dbg !47
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %521, float %.011.i33, float %520) #5, !dbg !47
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %521, float %.011.i33, float %520) #5, !dbg !47
  %.010.i38 = select i1 %.not32.i37, float %524, float %523, !dbg !47
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not33.i39 = icmp eq i32 %525, 0, !dbg !47
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %519) #5, !dbg !47
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %519) #5, !dbg !47
  %.09.i40 = select i1 %.not33.i39, float %527, float %526, !dbg !47
  %528 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not34.i41 = icmp eq i32 %528, 0, !dbg !47
  %529 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %512) #5, !dbg !47
  %530 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %512) #5, !dbg !47
  %.05.i42 = select i1 %.not34.i41, float %530, float %529, !dbg !47
  %531 = and i32 %507, 2, !dbg !47
  %.not35.i43 = icmp eq i32 %531, 0, !dbg !47
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !47

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !47
  %.not36.i45 = icmp eq i32 %532, 0, !dbg !47
  %533 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #5, !dbg !47
  %534 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #5, !dbg !47
  %.0.i46 = select i1 %.not36.i45, float %534, float %533, !dbg !47
  br label %__nv_cosf.exit, !dbg !47

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !47
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !47
  %535 = select i1 %14, float %z.i.i.0.i, float %z.i.i.0.i47, !dbg !49
  %536 = sext i32 %8 to i64, !dbg !50
  %537 = getelementptr float, ptr addrspace(1) %1, i64 %536, !dbg !50
  %538 = bitcast float %535 to i32, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %538, ptr addrspace(1) %537, i1 %9) #5, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c63dpgoyvwfmakpepb3k5wnb4dof5fensptkvywzcgx2dxfwtgtw.py", directory: "inductor_cache/63")
!4 = !{ptr @triton_poi_fused_stack_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_stack_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_stack_1", linkageName: "triton_poi_fused_stack_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 33, column: 42, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 13, scope: !7)
!24 = !DILocation(line: 35, column: 19, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 28, scope: !7)
!27 = !DILocation(line: 40, column: 20, scope: !7)
!28 = !DILocation(line: 42, column: 20, scope: !7)
!29 = !DILocation(line: 44, column: 33, scope: !7)
!30 = !{i32 21046}
!31 = !DILocation(line: 45, column: 19, scope: !7)
!32 = !DILocation(line: 46, column: 24, scope: !7)
!33 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.count", i32 1}
!36 = !DILocation(line: 49, column: 20, scope: !7)
!37 = !DILocation(line: 52, column: 44, scope: !7)
!38 = !DILocation(line: 52, column: 36, scope: !7)
!39 = !DILocation(line: 53, column: 16, scope: !7)
!40 = !DILocation(line: 54, column: 21, scope: !7)
!41 = !DILocation(line: 56, column: 20, scope: !7)
!42 = !DILocation(line: 57, column: 28, scope: !7)
!43 = !DILocation(line: 59, column: 20, scope: !7)
!44 = !DILocation(line: 61, column: 20, scope: !7)
!45 = !DILocation(line: 63, column: 33, scope: !7)
!46 = !DILocation(line: 64, column: 20, scope: !7)
!47 = !DILocation(line: 65, column: 24, scope: !7)
!48 = distinct !{!48, !35}
!49 = !DILocation(line: 0, scope: !7)
!50 = !DILocation(line: 69, column: 25, scope: !7)
!51 = !DILocation(line: 69, column: 37, scope: !7)
!52 = !DILocation(line: 69, column: 4, scope: !7)
