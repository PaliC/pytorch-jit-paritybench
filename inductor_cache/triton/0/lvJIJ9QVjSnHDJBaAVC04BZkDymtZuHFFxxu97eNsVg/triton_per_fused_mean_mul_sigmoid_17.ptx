//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_mul_sigmoid_17 // -- Begin function triton_per_fused_mean_mul_sigmoid_17
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_mul_sigmoid_17
.visible .entry triton_per_fused_mean_mul_sigmoid_17(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_sigmoid_17_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_mul_sigmoid_17_param_1,
	.param .u32 triton_per_fused_mean_mul_sigmoid_17_param_2,
	.param .u32 triton_per_fused_mean_mul_sigmoid_17_param_3
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<129>;
	.reg .f32 	%f<86>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused_mean_mul_sigmoid_17_param_0];
	ld.param.u64 	%rd5, [triton_per_fused_mean_mul_sigmoid_17_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:23:33
	shl.b32 	%r75, %r1, 7;
	.loc	1 24 44                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:24:44
	mov.u32 	%r76, %tid.x;
	shl.b32 	%r77, %r76, 2;
	and.b32  	%r78, %r77, 124;
	and.b32  	%r79, %r76, 127;
	.loc	1 24 23                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:24:23
	or.b32  	%r80, %r75, %r78;
	or.b32  	%r81, %r75, %r79;
	.loc	1 25 21                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:25:21
	setp.lt.s32 	%p1, %r80, 1024;
	setp.lt.s32 	%p25, %r81, 1024;
	.loc	1 31 19                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:31:19
	shr.s32 	%r83, %r80, 31;
	shr.u32 	%r84, %r83, 24;
	add.s32 	%r85, %r80, %r84;
	.loc	1 30 19                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:30:19
	and.b32  	%r86, %r85, -256;
	sub.s32 	%r87, %r80, %r86;
	.loc	1 33 39                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:33:39
	shl.b32 	%r88, %r76, 3;
	and.b32  	%r89, %r88, 1792;
	.loc	1 33 49                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:33:49
	shl.b32 	%r90, %r85, 4;
	and.b32  	%r91, %r90, -4096;
	.loc	1 33 35                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:33:35
	add.s32 	%r92, %r91, %r87;
	.loc	1 33 44                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:33:44
	add.s32 	%r93, %r92, %r89;
	add.s32 	%r94, %r93, 2048;
	.loc	1 33 30                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:33:30
	mul.wide.s32 	%rd6, %r93, 4;
	add.s64 	%rd1, %rd5, %rd6;
	mul.wide.s32 	%rd7, %r94, 4;
	add.s64 	%rd2, %rd5, %rd7;
	mov.b32 	%r6, 0;
	.loc	1 33 54                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f17, %r2;
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	mov.b32 	%f20, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f21, %r10;
	mov.b32 	%f22, %r11;
	mov.b32 	%f23, %r12;
	mov.b32 	%f24, %r13;
	mov.f32 	%f25, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f26, %f25, %f17;
	sub.f32 	%f27, %f25, %f18;
	sub.f32 	%f28, %f25, %f19;
	sub.f32 	%f29, %f25, %f20;
	sub.f32 	%f30, %f25, %f21;
	sub.f32 	%f31, %f25, %f22;
	sub.f32 	%f32, %f25, %f23;
	sub.f32 	%f33, %f25, %f24;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f27, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	mul.f32 	%f10, %f30, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f31, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	mul.f32 	%f14, %f32, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f13, %f14;
	// end inline asm
	mul.f32 	%f16, %f33, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f34, %f1, 0f3F800000;
	add.f32 	%f35, %f3, 0f3F800000;
	add.f32 	%f36, %f5, 0f3F800000;
	add.f32 	%f37, %f7, 0f3F800000;
	add.f32 	%f38, %f9, 0f3F800000;
	add.f32 	%f39, %f11, 0f3F800000;
	add.f32 	%f40, %f13, 0f3F800000;
	add.f32 	%f41, %f15, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r20, %f34;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f42, %r18;
	mov.b32 	%r23, %f35;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f43, %r21;
	mov.b32 	%r26, %f36;
	// begin inline asm
	div.full.f32 %r24, %r19, %r26;
	// end inline asm
	mov.b32 	%f44, %r24;
	mov.b32 	%r29, %f37;
	// begin inline asm
	div.full.f32 %r27, %r19, %r29;
	// end inline asm
	mov.b32 	%f45, %r27;
	mov.b32 	%r32, %f38;
	// begin inline asm
	div.full.f32 %r30, %r19, %r32;
	// end inline asm
	mov.b32 	%f46, %r30;
	mov.b32 	%r35, %f39;
	// begin inline asm
	div.full.f32 %r33, %r19, %r35;
	// end inline asm
	mov.b32 	%f47, %r33;
	mov.b32 	%r38, %f40;
	// begin inline asm
	div.full.f32 %r36, %r19, %r38;
	// end inline asm
	mov.b32 	%f48, %r36;
	mov.b32 	%r41, %f41;
	// begin inline asm
	div.full.f32 %r39, %r19, %r41;
	// end inline asm
	mov.b32 	%f49, %r39;
$L__tmp2:
	.loc	1 35 18                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:35:18
	mul.f32 	%f50, %f46, %f21;
	mul.f32 	%f51, %f47, %f22;
	mul.f32 	%f52, %f48, %f23;
	mul.f32 	%f53, %f49, %f24;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f54, %f42, %f17, %f50;
	fma.rn.f32 	%f55, %f43, %f18, %f51;
	fma.rn.f32 	%f56, %f44, %f19, %f52;
	fma.rn.f32 	%f57, %f45, %f20, %f53;
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r95, %r76, 3;
	and.b32  	%r96, %r95, 28;
	shl.b32 	%r97, %r78, 5;
	or.b32  	%r98, %r97, %r96;
	mov.u32 	%r99, global_smem;
	add.s32 	%r42, %r99, %r98;
	mov.b32 	%r100, %f54;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r43, %r100, 0, %p1;
	mov.pred 	%p11, -1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r42, 32;
	mov.b32 	%r101, %f55;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r45, %r101, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r42, 64;
	mov.b32 	%r102, %f56;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r47, %r102, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r42, 96;
	mov.b32 	%r103, %f57;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r49, %r103, 0, %p1;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p11 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r76, 1024;
	add.s32 	%r51, %r99, %r77;
	// begin inline asm
	@%p15 ld.shared.b32 %r50, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r50;
	shfl.sync.bfly.b32	%r104, %r50, 4, 31, -1;
	mov.b32 	%f59, %r104;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f60;
	shfl.sync.bfly.b32	%r106, %r105, 2, 31, -1;
	mov.b32 	%f61, %r106;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r107, %f62;
	shfl.sync.bfly.b32	%r108, %r107, 1, 31, -1;
	mov.b32 	%f63, %r108;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r109, %r76, 7;
	setp.eq.s32 	%p26, %r109, 0;
	and.pred  	%p16, %p15, %p26;
	mov.b32 	%r53, %f64;
	// begin inline asm
	@%p16 st.shared.b32 [ %r51 + 0 ], %r53;
	// end inline asm
	add.s32 	%r55, %r51, 1024;
	// begin inline asm
	@%p15 ld.shared.b32 %r54, [ %r55 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r54;
	shfl.sync.bfly.b32	%r110, %r54, 4, 31, -1;
	mov.b32 	%f66, %r110;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r111, %f67;
	shfl.sync.bfly.b32	%r112, %r111, 2, 31, -1;
	mov.b32 	%f68, %r112;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r113, %f69;
	shfl.sync.bfly.b32	%r114, %r113, 1, 31, -1;
	mov.b32 	%f70, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f69, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f71;
	// begin inline asm
	@%p16 st.shared.b32 [ %r55 + 0 ], %r57;
	// end inline asm
	add.s32 	%r59, %r51, 2048;
	// begin inline asm
	@%p15 ld.shared.b32 %r58, [ %r59 + 0 ];
	// end inline asm
	mov.b32 	%f72, %r58;
	shfl.sync.bfly.b32	%r115, %r58, 4, 31, -1;
	mov.b32 	%f73, %r115;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f74;
	shfl.sync.bfly.b32	%r117, %r116, 2, 31, -1;
	mov.b32 	%f75, %r117;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f76;
	shfl.sync.bfly.b32	%r119, %r118, 1, 31, -1;
	mov.b32 	%f77, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f78;
	// begin inline asm
	@%p16 st.shared.b32 [ %r59 + 0 ], %r61;
	// end inline asm
	add.s32 	%r63, %r51, 3072;
	// begin inline asm
	@%p15 ld.shared.b32 %r62, [ %r63 + 0 ];
	// end inline asm
	mov.b32 	%f79, %r62;
	shfl.sync.bfly.b32	%r120, %r62, 4, 31, -1;
	mov.b32 	%f80, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f81;
	shfl.sync.bfly.b32	%r122, %r121, 2, 31, -1;
	mov.b32 	%f82, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r123, %f83;
	shfl.sync.bfly.b32	%r124, %r123, 1, 31, -1;
	mov.b32 	%f84, %r124;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f85;
	// begin inline asm
	@%p16 st.shared.b32 [ %r63 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r125, %r99, %r97;
	ld.shared.u32 	%r67, [%r125];
	ld.shared.u32 	%r68, [%r125+32];
	ld.shared.u32 	%r69, [%r125+64];
	ld.shared.u32 	%r70, [%r125+96];
$L__tmp4:
	.loc	1 40 18                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:40:18
	bar.sync 	0;
	mad.lo.s32 	%r66, %r78, -28, %r125;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r66 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r126, %r79, 2;
	add.s32 	%r127, %r99, %r126;
	ld.shared.u32 	%r72, [%r127];
	mov.b32 	%r73, 1098907648;
	// begin inline asm
	div.full.f32 %r74, %r72, %r73;
	// end inline asm
	.loc	1 41 4                          // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:41:4
	bar.sync 	0;
	.loc	1 42 28                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:42:28
	mul.wide.s32 	%rd8, %r81, 4;
	add.s64 	%rd3, %rd4, %rd8;
	.loc	1 42 39                         // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:42:39
	and.b32  	%r128, %r76, 128;
	setp.eq.s32 	%p27, %r128, 0;
	and.pred  	%p24, %p27, %p25;
	// begin inline asm
	@%p24 st.global.b32 [ %rd3 + 0 ], { %r74 };
	// end inline asm
	.loc	1 42 4                          // cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py:42:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bg/cbgupxie6wpwco4fayqq7rk2zyhuecwwbzvnliyasnxefkrl7erk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 103
.b8 117
.b8 112
.b8 120
.b8 105
.b8 101
.b8 54
.b8 119
.b8 112
.b8 119
.b8 99
.b8 111
.b8 52
.b8 102
.b8 97
.b8 121
.b8 113
.b8 113
.b8 55
.b8 114
.b8 107
.b8 50
.b8 122
.b8 121
.b8 104
.b8 117
.b8 101
.b8 99
.b8 119
.b8 119
.b8 98
.b8 122
.b8 118
.b8 110
.b8 108
.b8 105
.b8 121
.b8 97
.b8 115
.b8 110
.b8 120
.b8 101
.b8 102
.b8 107
.b8 114
.b8 108
.b8 55
.b8 101
.b8 114
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 49
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 34                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
