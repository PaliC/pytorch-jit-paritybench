#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":36:24)
#loc32 = loc(callsite(#loc1 at #loc13))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_cat_mean_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %c84_i32 = arith.constant 84 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16xi32, #blocked1> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc4)
    %6 = arith.remsi %0, %c4_i32 : i32 loc(#loc5)
    %7 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %8 = arith.muli %0, %c16_i32 : i32 loc(#loc7)
    %9 = tt.splat %8 : i32 -> tensor<1x16xi32, #blocked1> loc(#loc8)
    %10 = tt.splat %8 : i32 -> tensor<1x16xi32, #blocked> loc(#loc8)
    %11 = arith.addi %4, %9 : tensor<1x16xi32, #blocked1> loc(#loc8)
    %12 = arith.addi %5, %10 : tensor<1x16xi32, #blocked> loc(#loc8)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc9)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %15 = tt.addptr %13, %11 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc9)
    %16 = tt.addptr %14, %12 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc9)
    %17 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked1> loc(#loc10)
    %18 = tt.splat %1 : i1 -> tensor<1x16xi1, #blocked> loc(#loc10)
    %19 = tt.load %15, %17, %cst_2 : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc10)
    %20 = tt.load %16, %18, %cst : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc10)
    %21 = arith.select %17, %19, %cst_2 : tensor<1x16xi1, #blocked1>, tensor<1x16xf32, #blocked1> loc(#loc11)
    %22 = "tt.reduce"(%21) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc13)), %arg6: f32 loc(callsite(#loc1 at #loc13))):
      %41 = arith.addf %arg5, %arg6 : f32 loc(#loc38)
      tt.reduce.return %41 : f32 loc(#loc31)
    }) : (tensor<1x16xf32, #blocked1>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc31)
    %23 = tt.expand_dims %22 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc15)
    %24 = arith.cmpf ogt, %cst, %20 : tensor<1x16xf32, #blocked> loc(#loc34)
    %25 = arith.select %24, %cst, %20 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc35)
    %26 = arith.divf %23, %cst_1 : tensor<1x1xf32, #blocked1> loc(#loc19)
    %27 = arith.cmpf ogt, %cst_0, %26 : tensor<1x1xf32, #blocked1> loc(#loc36)
    %28 = arith.select %27, %cst_0, %26 : tensor<1x1xi1, #blocked1>, tensor<1x1xf32, #blocked1> loc(#loc37)
    %29 = arith.muli %6, %c16_i32 : i32 loc(#loc21)
    %30 = tt.splat %29 : i32 -> tensor<1x16xi32, #blocked> loc(#loc22)
    %31 = arith.addi %5, %30 : tensor<1x16xi32, #blocked> loc(#loc22)
    %32 = arith.muli %7, %c84_i32 : i32 loc(#loc23)
    %33 = tt.splat %32 : i32 -> tensor<1x16xi32, #blocked> loc(#loc24)
    %34 = arith.addi %31, %33 : tensor<1x16xi32, #blocked> loc(#loc24)
    %35 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc25)
    %36 = tt.addptr %35, %34 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc25)
    tt.store %36, %25, %18 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc26)
    %37 = arith.addi %6, %32 : i32 loc(#loc27)
    %38 = tt.addptr %arg2, %37 : !tt.ptr<f32>, i32 loc(#loc28)
    %39 = tt.splat %38 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc29)
    %40 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc29)
    tt.store %39, %28, %40 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":23:28)
#loc3 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":25:21)
#loc4 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":26:34)
#loc5 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":31:19)
#loc6 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":32:19)
#loc7 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":33:38)
#loc8 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":33:35)
#loc9 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":33:30)
#loc10 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":33:43)
#loc11 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":35:33)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc15 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":36:27)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc17 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":38:40)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc19 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":40:18)
#loc20 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":41:40)
#loc21 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":42:33)
#loc22 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":42:30)
#loc23 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":42:41)
#loc24 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":42:38)
#loc25 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":42:25)
#loc26 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":42:52)
#loc27 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":43:30)
#loc28 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":43:25)
#loc29 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":43:44)
#loc30 = loc("inductor_cache/zf/czfgmuzzs6z3nr4rb3hrwe3ol2yuc2p4bzc5t4acaylrw24j4hym.py":43:4)
#loc31 = loc(callsite(#loc12 at #loc13))
#loc33 = loc(callsite(#loc14 at #loc12))
#loc34 = loc(callsite(#loc16 at #loc17))
#loc35 = loc(callsite(#loc18 at #loc17))
#loc36 = loc(callsite(#loc16 at #loc20))
#loc37 = loc(callsite(#loc18 at #loc20))
#loc38 = loc(callsite(#loc33 at #loc13))
