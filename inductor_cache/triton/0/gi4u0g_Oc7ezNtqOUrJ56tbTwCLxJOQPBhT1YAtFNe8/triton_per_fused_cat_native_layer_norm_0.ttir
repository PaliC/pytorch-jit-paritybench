#loc = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0)
#loc1 = loc(unknown)
#loc53 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":62:26)
#loc60 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":70:26)
#loc81 = loc(callsite(#loc1 at #loc53))
#loc84 = loc(callsite(#loc1 at #loc60))
module {
  tt.func public @triton_per_fused_cat_native_layer_norm_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":19:0)) attributes {noinline = false} {
    %c20_i32 = arith.constant 20 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-12> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-8> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<12> : tensor<1x16xi64> loc(#loc1)
    %cst_4 = arith.constant dense<-4> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<1x16xi64> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<1x16xi64> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c2_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c2_i32 : i32 loc(#loc7)
    %7 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %9 = tt.load %8 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc11)
    %13 = arith.extsi %4 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc12)
    %14 = arith.cmpi slt, %13, %cst_7 : tensor<1x16xi64> loc(#loc12)
    %15 = arith.muli %5, %c8_i32 : i32 loc(#loc13)
    %16 = arith.muli %6, %c32_i32 : i32 loc(#loc14)
    %17 = arith.addi %15, %16 : i32 loc(#loc15)
    %18 = tt.splat %17 : i32 -> tensor<1x16xi32> loc(#loc16)
    %19 = arith.addi %18, %4 : tensor<1x16xi32> loc(#loc16)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.addptr %20, %19 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc17)
    %22 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc18)
    %23 = arith.andi %14, %22 : tensor<1x16xi1> loc(#loc18)
    %24 = tt.load %21, %23, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %25 = arith.cmpi sge, %13, %cst_7 : tensor<1x16xi64> loc(#loc20)
    %26 = arith.cmpi slt, %13, %cst_5 : tensor<1x16xi64> loc(#loc21)
    %27 = arith.andi %25, %26 : tensor<1x16xi1> loc(#loc22)
    %28 = arith.addi %15, %c16_i32 : i32 loc(#loc23)
    %29 = arith.addi %28, %16 : i32 loc(#loc24)
    %30 = arith.addi %4, %cst_4 : tensor<1x16xi32> loc(#loc25)
    %31 = tt.splat %29 : i32 -> tensor<1x16xi32> loc(#loc26)
    %32 = arith.addi %31, %30 : tensor<1x16xi32> loc(#loc26)
    %33 = tt.addptr %20, %32 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc27)
    %34 = arith.andi %27, %22 : tensor<1x16xi1> loc(#loc28)
    %35 = tt.load %33, %34, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc29)
    %36 = arith.cmpi sge, %13, %cst_5 : tensor<1x16xi64> loc(#loc30)
    %37 = arith.cmpi slt, %13, %cst_3 : tensor<1x16xi64> loc(#loc31)
    %38 = arith.andi %36, %37 : tensor<1x16xi1> loc(#loc32)
    %39 = arith.addi %15, %c4_i32 : i32 loc(#loc33)
    %40 = arith.addi %39, %16 : i32 loc(#loc34)
    %41 = arith.addi %4, %cst_2 : tensor<1x16xi32> loc(#loc35)
    %42 = tt.splat %40 : i32 -> tensor<1x16xi32> loc(#loc36)
    %43 = arith.addi %42, %41 : tensor<1x16xi32> loc(#loc36)
    %44 = tt.addptr %20, %43 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc37)
    %45 = arith.andi %38, %22 : tensor<1x16xi1> loc(#loc38)
    %46 = tt.load %44, %45, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc39)
    %47 = arith.cmpi sge, %13, %cst_3 : tensor<1x16xi64> loc(#loc40)
    %48 = arith.addi %15, %c20_i32 : i32 loc(#loc41)
    %49 = arith.addi %48, %16 : i32 loc(#loc42)
    %50 = arith.addi %4, %cst_1 : tensor<1x16xi32> loc(#loc43)
    %51 = tt.splat %49 : i32 -> tensor<1x16xi32> loc(#loc44)
    %52 = arith.addi %51, %50 : tensor<1x16xi32> loc(#loc44)
    %53 = tt.addptr %20, %52 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc45)
    %54 = arith.andi %47, %22 : tensor<1x16xi1> loc(#loc46)
    %55 = tt.load %53, %54, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc47)
    %56 = arith.select %38, %46, %55 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc48)
    %57 = arith.select %27, %35, %56 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc49)
    %58 = arith.select %14, %24, %57 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc50)
    %59 = arith.select %22, %58, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc51)
    %60 = "tt.reduce"(%59) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc53)), %arg10: f32 loc(callsite(#loc1 at #loc53))):
      %87 = arith.addf %arg9, %arg10 : f32 loc(#loc85)
      tt.reduce.return %87 : f32 loc(#loc80)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc80)
    %61 = tt.expand_dims %60 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc55)
    %62 = arith.divf %61, %cst_0 : tensor<1x1xf32> loc(#loc56)
    %63 = tt.broadcast %62 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc57)
    %64 = arith.subf %58, %63 : tensor<1x16xf32> loc(#loc57)
    %65 = arith.mulf %64, %64 : tensor<1x16xf32> loc(#loc58)
    %66 = arith.select %22, %65, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc59)
    %67 = "tt.reduce"(%66) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc60)), %arg10: f32 loc(callsite(#loc1 at #loc60))):
      %87 = arith.addf %arg9, %arg10 : f32 loc(#loc86)
      tt.reduce.return %87 : f32 loc(#loc83)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc83)
    %68 = tt.expand_dims %67 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc61)
    %69 = arith.divf %68, %cst_0 : tensor<1x1xf32> loc(#loc62)
    %70 = arith.addf %69, %cst : tensor<1x1xf32> loc(#loc63)
    %71 = tt.extern_elementwise %70 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc64)
    %72 = tt.broadcast %71 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc65)
    %73 = arith.mulf %64, %72 : tensor<1x16xf32> loc(#loc65)
    %74 = arith.mulf %73, %9 : tensor<1x16xf32> loc(#loc66)
    %75 = arith.addf %74, %12 : tensor<1x16xf32> loc(#loc67)
    %76 = arith.muli %0, %c16_i32 : i32 loc(#loc68)
    %77 = tt.splat %76 : i32 -> tensor<1x16xi32> loc(#loc69)
    %78 = arith.addi %4, %77 : tensor<1x16xi32> loc(#loc69)
    %79 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc70)
    %80 = tt.addptr %79, %78 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc70)
    tt.store %80, %58, %22 : tensor<1x16x!tt.ptr<f32>> loc(#loc71)
    gpu.barrier loc(#loc72)
    %81 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc73)
    %82 = tt.splat %81 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc73)
    tt.store %82, %71, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc74)
    %83 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc75)
    %84 = tt.addptr %83, %78 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc75)
    tt.store %84, %75, %22 : tensor<1x16x!tt.ptr<f32>> loc(#loc76)
    %85 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc77)
    %86 = tt.splat %85 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc77)
    tt.store %86, %62, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc78)
    tt.return loc(#loc79)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":23:28)
#loc3 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":25:21)
#loc4 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":26:26)
#loc5 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":26:34)
#loc6 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":30:19)
#loc7 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":31:19)
#loc8 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":33:31)
#loc9 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":33:36)
#loc10 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":34:31)
#loc11 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":34:36)
#loc12 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":39:18)
#loc13 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:32)
#loc14 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:40)
#loc15 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:37)
#loc16 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:46)
#loc17 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:30)
#loc18 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:59)
#loc19 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":40:52)
#loc20 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":41:19)
#loc21 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":43:18)
#loc22 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":44:18)
#loc23 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:36)
#loc24 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:43)
#loc25 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:59)
#loc26 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:52)
#loc27 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:31)
#loc28 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:72)
#loc29 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":45:65)
#loc30 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":46:20)
#loc31 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":48:19)
#loc32 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":49:20)
#loc33 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:35)
#loc34 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:42)
#loc35 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:58)
#loc36 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:51)
#loc37 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:31)
#loc38 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:72)
#loc39 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":50:64)
#loc40 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":51:20)
#loc41 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:36)
#loc42 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:43)
#loc43 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:60)
#loc44 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:52)
#loc45 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:31)
#loc46 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:74)
#loc47 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":54:66)
#loc48 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":55:35)
#loc49 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":56:34)
#loc50 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":57:33)
#loc51 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":61:35)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc55 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":62:29)
#loc56 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":65:20)
#loc57 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":66:20)
#loc58 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":67:20)
#loc59 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":69:35)
#loc61 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":70:29)
#loc62 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":72:20)
#loc63 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":74:20)
#loc64 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":75:28)
#loc65 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":77:20)
#loc66 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":78:20)
#loc67 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":79:20)
#loc68 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":80:33)
#loc69 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":80:30)
#loc70 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":80:25)
#loc71 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":80:45)
#loc72 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":81:4)
#loc73 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":82:28)
#loc74 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":82:40)
#loc75 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":83:25)
#loc76 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":83:45)
#loc77 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":84:25)
#loc78 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":84:37)
#loc79 = loc("inductor_cache/rh/crhhp7vu7wollvoawrjqvqmtgt2m7j7qg6gdwrcc3txhz37duzvd.py":84:4)
#loc80 = loc(callsite(#loc52 at #loc53))
#loc82 = loc(callsite(#loc54 at #loc52))
#loc83 = loc(callsite(#loc52 at #loc60))
#loc85 = loc(callsite(#loc82 at #loc53))
#loc86 = loc(callsite(#loc82 at #loc60))
