; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_binary_cross_entropy_mse_loss_mul_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %12 = shl i32 %11, 2, !dbg !10
  %13 = and i32 %12, 252, !dbg !10
  %14 = zext nneg i32 %13 to i64, !dbg !11
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !11
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 true) #4, !dbg !12
  %17 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !13
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #4, !dbg !14
  %19 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !14
  %21 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !14
  %22 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !14
  %23 = bitcast i32 %19 to float, !dbg !14
  %24 = bitcast i32 %20 to float, !dbg !14
  %25 = bitcast i32 %21 to float, !dbg !14
  %26 = bitcast i32 %22 to float, !dbg !14
  %27 = getelementptr float, ptr addrspace(1) %3, i64 %14, !dbg !15
  %28 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %27, i1 true) #4, !dbg !16
  %29 = getelementptr float, ptr addrspace(1) %4, i64 %14, !dbg !17
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %29, i1 true) #4, !dbg !18
  %31 = getelementptr float, ptr addrspace(1) %5, i64 %14, !dbg !19
  %32 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %31, i1 true) #4, !dbg !20
  %33 = getelementptr float, ptr addrspace(1) %6, i64 %14, !dbg !21
  %34 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %33, i1 true) #4, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %7, i64 %14, !dbg !23
  %36 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %35, i1 true) #4, !dbg !24
  %37 = getelementptr float, ptr addrspace(1) %8, i64 %14, !dbg !25
  %38 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %37, i1 true) #4, !dbg !26
  %39 = fsub float 0.000000e+00, %23, !dbg !27
  %40 = fsub float 0.000000e+00, %24, !dbg !27
  %41 = fsub float 0.000000e+00, %25, !dbg !27
  %42 = fsub float 0.000000e+00, %26, !dbg !27
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i91 = icmp eq i32 %43, 0, !dbg !28
  %44 = tail call float @llvm.nvvm.add.rz.ftz.f(float %39, float 1.000000e+00) #4, !dbg !28
  %45 = tail call float @llvm.nvvm.add.rz.f(float %39, float 1.000000e+00) #4, !dbg !28
  %.01.i92 = select i1 %.not.i91, float %45, float %44, !dbg !28
  %46 = bitcast float %.01.i92 to i32, !dbg !28
  %47 = add i32 %46, -1061158912, !dbg !28
  %48 = and i32 %47, -8388608, !dbg !28
  %49 = bitcast float %39 to i32, !dbg !28
  %50 = sub i32 %49, %48, !dbg !28
  %51 = bitcast i32 %50 to float, !dbg !28
  %52 = sub i32 1082130432, %48, !dbg !28
  %53 = bitcast i32 %52 to float, !dbg !28
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not14.i = icmp eq i32 %54, 0, !dbg !28
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %53, float -1.000000e+00) #4, !dbg !28
  %56 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %53, float -1.000000e+00) #4, !dbg !28
  %.09.i93 = select i1 %.not14.i, float %56, float %55, !dbg !28
  %57 = fadd float %.09.i93, %51, !dbg !28
  %58 = sitofp i32 %48 to float, !dbg !28
  %59 = fmul float %58, 0x3E80000000000000, !dbg !28
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i = icmp eq i32 %60, 0, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %57, float 0x3FBB000240000000) #4, !dbg !28
  %62 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %57, float 0x3FBB000240000000) #4, !dbg !28
  %.012.i94 = select i1 %.not15.i, float %62, float %61, !dbg !28
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i = icmp eq i32 %63, 0, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i94, float %57, float 0xBFC0EF1C00000000) #4, !dbg !28
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i94, float %57, float 0xBFC0EF1C00000000) #4, !dbg !28
  %.010.i95 = select i1 %.not16.i, float %65, float %64, !dbg !28
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i = icmp eq i32 %66, 0, !dbg !28
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i95, float %57, float 0x3FC28C8EA0000000) #4, !dbg !28
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i95, float %57, float 0x3FC28C8EA0000000) #4, !dbg !28
  %.06.i96 = select i1 %.not17.i, float %68, float %67, !dbg !28
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i = icmp eq i32 %69, 0, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i96, float %57, float 0xBFC54D1BA0000000) #4, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i96, float %57, float 0xBFC54D1BA0000000) #4, !dbg !28
  %.02.i97 = select i1 %.not18.i, float %71, float %70, !dbg !28
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i = icmp eq i32 %72, 0, !dbg !28
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i97, float %57, float 0x3FC995F3C0000000) #4, !dbg !28
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i97, float %57, float 0x3FC995F3C0000000) #4, !dbg !28
  %.0.i98 = select i1 %.not19.i, float %74, float %73, !dbg !28
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not20.i = icmp eq i32 %75, 0, !dbg !28
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i98, float %57, float 0xBFD0000840000000) #4, !dbg !28
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i98, float %57, float 0xBFD0000840000000) #4, !dbg !28
  %.011.i99 = select i1 %.not20.i, float %77, float %76, !dbg !28
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not21.i = icmp eq i32 %78, 0, !dbg !28
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i99, float %57, float 0x3FD5555CC0000000) #4, !dbg !28
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i99, float %57, float 0x3FD5555CC0000000) #4, !dbg !28
  %.08.i100 = select i1 %.not21.i, float %80, float %79, !dbg !28
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not22.i = icmp eq i32 %81, 0, !dbg !28
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i100, float %57, float -5.000000e-01) #4, !dbg !28
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i100, float %57, float -5.000000e-01) #4, !dbg !28
  %.07.i101 = select i1 %.not22.i, float %83, float %82, !dbg !28
  %84 = fmul float %57, %.07.i101, !dbg !28
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not23.i = icmp eq i32 %85, 0, !dbg !28
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %84, float %57, float %57) #4, !dbg !28
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %84, float %57, float %57) #4, !dbg !28
  %.05.i102 = select i1 %.not23.i, float %87, float %86, !dbg !28
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not24.i = icmp eq i32 %88, 0, !dbg !28
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %59, float 0x3FE62E4300000000, float %.05.i102) #4, !dbg !28
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %59, float 0x3FE62E4300000000, float %.05.i102) #4, !dbg !28
  %.04.i103 = select i1 %.not24.i, float %90, float %89, !dbg !28
  %91 = icmp ugt i32 %49, 2139095039, !dbg !28
  br i1 %91, label %92, label %__nv_log1pf.exit, !dbg !28

92:                                               ; preds = %10
  %93 = icmp sgt i32 %49, -1082130432, !dbg !28
  br i1 %93, label %__nv_fmaf_rn.exit.i, label %97, !dbg !28

__nv_fmaf_rn.exit.i:                              ; preds = %92
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not25.i = icmp eq i32 %94, 0, !dbg !28
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %.03.i104 = select i1 %.not25.i, float %96, float %95, !dbg !28
  br label %97, !dbg !28

97:                                               ; preds = %__nv_fmaf_rn.exit.i, %92
  %r.0.i = phi float [ %.03.i104, %__nv_fmaf_rn.exit.i ], [ %.04.i103, %92 ], !dbg !28
  %98 = fcmp oeq float %39, 0.000000e+00, !dbg !28
  %r.1.i = select i1 %98, float -0.000000e+00, float %r.0.i, !dbg !28
  br label %__nv_log1pf.exit, !dbg !28

__nv_log1pf.exit:                                 ; preds = %10, %97
  %r.2.i = phi float [ %r.1.i, %97 ], [ %.04.i103, %10 ], !dbg !28
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i105 = icmp eq i32 %99, 0, !dbg !28
  %100 = tail call float @llvm.nvvm.add.rz.ftz.f(float %40, float 1.000000e+00) #4, !dbg !28
  %101 = tail call float @llvm.nvvm.add.rz.f(float %40, float 1.000000e+00) #4, !dbg !28
  %.01.i106 = select i1 %.not.i105, float %101, float %100, !dbg !28
  %102 = bitcast float %.01.i106 to i32, !dbg !28
  %103 = add i32 %102, -1061158912, !dbg !28
  %104 = and i32 %103, -8388608, !dbg !28
  %105 = bitcast float %40 to i32, !dbg !28
  %106 = sub i32 %105, %104, !dbg !28
  %107 = bitcast i32 %106 to float, !dbg !28
  %108 = sub i32 1082130432, %104, !dbg !28
  %109 = bitcast i32 %108 to float, !dbg !28
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not14.i107 = icmp eq i32 %110, 0, !dbg !28
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %109, float -1.000000e+00) #4, !dbg !28
  %112 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %109, float -1.000000e+00) #4, !dbg !28
  %.09.i108 = select i1 %.not14.i107, float %112, float %111, !dbg !28
  %113 = fadd float %.09.i108, %107, !dbg !28
  %114 = sitofp i32 %104 to float, !dbg !28
  %115 = fmul float %114, 0x3E80000000000000, !dbg !28
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i109 = icmp eq i32 %116, 0, !dbg !28
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %113, float 0x3FBB000240000000) #4, !dbg !28
  %118 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %113, float 0x3FBB000240000000) #4, !dbg !28
  %.012.i110 = select i1 %.not15.i109, float %118, float %117, !dbg !28
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i111 = icmp eq i32 %119, 0, !dbg !28
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i110, float %113, float 0xBFC0EF1C00000000) #4, !dbg !28
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i110, float %113, float 0xBFC0EF1C00000000) #4, !dbg !28
  %.010.i112 = select i1 %.not16.i111, float %121, float %120, !dbg !28
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i113 = icmp eq i32 %122, 0, !dbg !28
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i112, float %113, float 0x3FC28C8EA0000000) #4, !dbg !28
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i112, float %113, float 0x3FC28C8EA0000000) #4, !dbg !28
  %.06.i114 = select i1 %.not17.i113, float %124, float %123, !dbg !28
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i115 = icmp eq i32 %125, 0, !dbg !28
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i114, float %113, float 0xBFC54D1BA0000000) #4, !dbg !28
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i114, float %113, float 0xBFC54D1BA0000000) #4, !dbg !28
  %.02.i116 = select i1 %.not18.i115, float %127, float %126, !dbg !28
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i117 = icmp eq i32 %128, 0, !dbg !28
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i116, float %113, float 0x3FC995F3C0000000) #4, !dbg !28
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i116, float %113, float 0x3FC995F3C0000000) #4, !dbg !28
  %.0.i118 = select i1 %.not19.i117, float %130, float %129, !dbg !28
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not20.i119 = icmp eq i32 %131, 0, !dbg !28
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i118, float %113, float 0xBFD0000840000000) #4, !dbg !28
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i118, float %113, float 0xBFD0000840000000) #4, !dbg !28
  %.011.i120 = select i1 %.not20.i119, float %133, float %132, !dbg !28
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not21.i121 = icmp eq i32 %134, 0, !dbg !28
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i120, float %113, float 0x3FD5555CC0000000) #4, !dbg !28
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i120, float %113, float 0x3FD5555CC0000000) #4, !dbg !28
  %.08.i122 = select i1 %.not21.i121, float %136, float %135, !dbg !28
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not22.i123 = icmp eq i32 %137, 0, !dbg !28
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i122, float %113, float -5.000000e-01) #4, !dbg !28
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i122, float %113, float -5.000000e-01) #4, !dbg !28
  %.07.i124 = select i1 %.not22.i123, float %139, float %138, !dbg !28
  %140 = fmul float %113, %.07.i124, !dbg !28
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not23.i125 = icmp eq i32 %141, 0, !dbg !28
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float %113, float %113) #4, !dbg !28
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %140, float %113, float %113) #4, !dbg !28
  %.05.i126 = select i1 %.not23.i125, float %143, float %142, !dbg !28
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not24.i127 = icmp eq i32 %144, 0, !dbg !28
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float 0x3FE62E4300000000, float %.05.i126) #4, !dbg !28
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %115, float 0x3FE62E4300000000, float %.05.i126) #4, !dbg !28
  %.04.i128 = select i1 %.not24.i127, float %146, float %145, !dbg !28
  %147 = icmp ugt i32 %105, 2139095039, !dbg !28
  br i1 %147, label %148, label %__nv_log1pf.exit135, !dbg !28

148:                                              ; preds = %__nv_log1pf.exit
  %149 = icmp sgt i32 %105, -1082130432, !dbg !28
  br i1 %149, label %__nv_fmaf_rn.exit.i132, label %153, !dbg !28

__nv_fmaf_rn.exit.i132:                           ; preds = %148
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not25.i133 = icmp eq i32 %150, 0, !dbg !28
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %40, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %.03.i134 = select i1 %.not25.i133, float %152, float %151, !dbg !28
  br label %153, !dbg !28

153:                                              ; preds = %__nv_fmaf_rn.exit.i132, %148
  %r.0.i130 = phi float [ %.03.i134, %__nv_fmaf_rn.exit.i132 ], [ %.04.i128, %148 ], !dbg !28
  %154 = fcmp oeq float %40, 0.000000e+00, !dbg !28
  %r.1.i131 = select i1 %154, float -0.000000e+00, float %r.0.i130, !dbg !28
  br label %__nv_log1pf.exit135, !dbg !28

__nv_log1pf.exit135:                              ; preds = %__nv_log1pf.exit, %153
  %r.2.i129 = phi float [ %r.1.i131, %153 ], [ %.04.i128, %__nv_log1pf.exit ], !dbg !28
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i136 = icmp eq i32 %155, 0, !dbg !28
  %156 = tail call float @llvm.nvvm.add.rz.ftz.f(float %41, float 1.000000e+00) #4, !dbg !28
  %157 = tail call float @llvm.nvvm.add.rz.f(float %41, float 1.000000e+00) #4, !dbg !28
  %.01.i137 = select i1 %.not.i136, float %157, float %156, !dbg !28
  %158 = bitcast float %.01.i137 to i32, !dbg !28
  %159 = add i32 %158, -1061158912, !dbg !28
  %160 = and i32 %159, -8388608, !dbg !28
  %161 = bitcast float %41 to i32, !dbg !28
  %162 = sub i32 %161, %160, !dbg !28
  %163 = bitcast i32 %162 to float, !dbg !28
  %164 = sub i32 1082130432, %160, !dbg !28
  %165 = bitcast i32 %164 to float, !dbg !28
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not14.i138 = icmp eq i32 %166, 0, !dbg !28
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %165, float -1.000000e+00) #4, !dbg !28
  %168 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %165, float -1.000000e+00) #4, !dbg !28
  %.09.i139 = select i1 %.not14.i138, float %168, float %167, !dbg !28
  %169 = fadd float %.09.i139, %163, !dbg !28
  %170 = sitofp i32 %160 to float, !dbg !28
  %171 = fmul float %170, 0x3E80000000000000, !dbg !28
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i140 = icmp eq i32 %172, 0, !dbg !28
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %169, float 0x3FBB000240000000) #4, !dbg !28
  %174 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %169, float 0x3FBB000240000000) #4, !dbg !28
  %.012.i141 = select i1 %.not15.i140, float %174, float %173, !dbg !28
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i142 = icmp eq i32 %175, 0, !dbg !28
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i141, float %169, float 0xBFC0EF1C00000000) #4, !dbg !28
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i141, float %169, float 0xBFC0EF1C00000000) #4, !dbg !28
  %.010.i143 = select i1 %.not16.i142, float %177, float %176, !dbg !28
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i144 = icmp eq i32 %178, 0, !dbg !28
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i143, float %169, float 0x3FC28C8EA0000000) #4, !dbg !28
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i143, float %169, float 0x3FC28C8EA0000000) #4, !dbg !28
  %.06.i145 = select i1 %.not17.i144, float %180, float %179, !dbg !28
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i146 = icmp eq i32 %181, 0, !dbg !28
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i145, float %169, float 0xBFC54D1BA0000000) #4, !dbg !28
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i145, float %169, float 0xBFC54D1BA0000000) #4, !dbg !28
  %.02.i147 = select i1 %.not18.i146, float %183, float %182, !dbg !28
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i148 = icmp eq i32 %184, 0, !dbg !28
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i147, float %169, float 0x3FC995F3C0000000) #4, !dbg !28
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i147, float %169, float 0x3FC995F3C0000000) #4, !dbg !28
  %.0.i149 = select i1 %.not19.i148, float %186, float %185, !dbg !28
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not20.i150 = icmp eq i32 %187, 0, !dbg !28
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i149, float %169, float 0xBFD0000840000000) #4, !dbg !28
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i149, float %169, float 0xBFD0000840000000) #4, !dbg !28
  %.011.i151 = select i1 %.not20.i150, float %189, float %188, !dbg !28
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not21.i152 = icmp eq i32 %190, 0, !dbg !28
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i151, float %169, float 0x3FD5555CC0000000) #4, !dbg !28
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i151, float %169, float 0x3FD5555CC0000000) #4, !dbg !28
  %.08.i153 = select i1 %.not21.i152, float %192, float %191, !dbg !28
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not22.i154 = icmp eq i32 %193, 0, !dbg !28
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i153, float %169, float -5.000000e-01) #4, !dbg !28
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i153, float %169, float -5.000000e-01) #4, !dbg !28
  %.07.i155 = select i1 %.not22.i154, float %195, float %194, !dbg !28
  %196 = fmul float %169, %.07.i155, !dbg !28
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not23.i156 = icmp eq i32 %197, 0, !dbg !28
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %196, float %169, float %169) #4, !dbg !28
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %196, float %169, float %169) #4, !dbg !28
  %.05.i157 = select i1 %.not23.i156, float %199, float %198, !dbg !28
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not24.i158 = icmp eq i32 %200, 0, !dbg !28
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float 0x3FE62E4300000000, float %.05.i157) #4, !dbg !28
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %171, float 0x3FE62E4300000000, float %.05.i157) #4, !dbg !28
  %.04.i159 = select i1 %.not24.i158, float %202, float %201, !dbg !28
  %203 = icmp ugt i32 %161, 2139095039, !dbg !28
  br i1 %203, label %204, label %__nv_log1pf.exit166, !dbg !28

204:                                              ; preds = %__nv_log1pf.exit135
  %205 = icmp sgt i32 %161, -1082130432, !dbg !28
  br i1 %205, label %__nv_fmaf_rn.exit.i163, label %209, !dbg !28

__nv_fmaf_rn.exit.i163:                           ; preds = %204
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not25.i164 = icmp eq i32 %206, 0, !dbg !28
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %.03.i165 = select i1 %.not25.i164, float %208, float %207, !dbg !28
  br label %209, !dbg !28

209:                                              ; preds = %__nv_fmaf_rn.exit.i163, %204
  %r.0.i161 = phi float [ %.03.i165, %__nv_fmaf_rn.exit.i163 ], [ %.04.i159, %204 ], !dbg !28
  %210 = fcmp oeq float %41, 0.000000e+00, !dbg !28
  %r.1.i162 = select i1 %210, float -0.000000e+00, float %r.0.i161, !dbg !28
  br label %__nv_log1pf.exit166, !dbg !28

__nv_log1pf.exit166:                              ; preds = %__nv_log1pf.exit135, %209
  %r.2.i160 = phi float [ %r.1.i162, %209 ], [ %.04.i159, %__nv_log1pf.exit135 ], !dbg !28
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not.i167 = icmp eq i32 %211, 0, !dbg !28
  %212 = tail call float @llvm.nvvm.add.rz.ftz.f(float %42, float 1.000000e+00) #4, !dbg !28
  %213 = tail call float @llvm.nvvm.add.rz.f(float %42, float 1.000000e+00) #4, !dbg !28
  %.01.i168 = select i1 %.not.i167, float %213, float %212, !dbg !28
  %214 = bitcast float %.01.i168 to i32, !dbg !28
  %215 = add i32 %214, -1061158912, !dbg !28
  %216 = and i32 %215, -8388608, !dbg !28
  %217 = bitcast float %42 to i32, !dbg !28
  %218 = sub i32 %217, %216, !dbg !28
  %219 = bitcast i32 %218 to float, !dbg !28
  %220 = sub i32 1082130432, %216, !dbg !28
  %221 = bitcast i32 %220 to float, !dbg !28
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not14.i169 = icmp eq i32 %222, 0, !dbg !28
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %221, float -1.000000e+00) #4, !dbg !28
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %221, float -1.000000e+00) #4, !dbg !28
  %.09.i170 = select i1 %.not14.i169, float %224, float %223, !dbg !28
  %225 = fadd float %.09.i170, %219, !dbg !28
  %226 = sitofp i32 %216 to float, !dbg !28
  %227 = fmul float %226, 0x3E80000000000000, !dbg !28
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not15.i171 = icmp eq i32 %228, 0, !dbg !28
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %225, float 0x3FBB000240000000) #4, !dbg !28
  %230 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %225, float 0x3FBB000240000000) #4, !dbg !28
  %.012.i172 = select i1 %.not15.i171, float %230, float %229, !dbg !28
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not16.i173 = icmp eq i32 %231, 0, !dbg !28
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i172, float %225, float 0xBFC0EF1C00000000) #4, !dbg !28
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i172, float %225, float 0xBFC0EF1C00000000) #4, !dbg !28
  %.010.i174 = select i1 %.not16.i173, float %233, float %232, !dbg !28
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not17.i175 = icmp eq i32 %234, 0, !dbg !28
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i174, float %225, float 0x3FC28C8EA0000000) #4, !dbg !28
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i174, float %225, float 0x3FC28C8EA0000000) #4, !dbg !28
  %.06.i176 = select i1 %.not17.i175, float %236, float %235, !dbg !28
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not18.i177 = icmp eq i32 %237, 0, !dbg !28
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i176, float %225, float 0xBFC54D1BA0000000) #4, !dbg !28
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i176, float %225, float 0xBFC54D1BA0000000) #4, !dbg !28
  %.02.i178 = select i1 %.not18.i177, float %239, float %238, !dbg !28
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not19.i179 = icmp eq i32 %240, 0, !dbg !28
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i178, float %225, float 0x3FC995F3C0000000) #4, !dbg !28
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i178, float %225, float 0x3FC995F3C0000000) #4, !dbg !28
  %.0.i180 = select i1 %.not19.i179, float %242, float %241, !dbg !28
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not20.i181 = icmp eq i32 %243, 0, !dbg !28
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i180, float %225, float 0xBFD0000840000000) #4, !dbg !28
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i180, float %225, float 0xBFD0000840000000) #4, !dbg !28
  %.011.i182 = select i1 %.not20.i181, float %245, float %244, !dbg !28
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not21.i183 = icmp eq i32 %246, 0, !dbg !28
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i182, float %225, float 0x3FD5555CC0000000) #4, !dbg !28
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i182, float %225, float 0x3FD5555CC0000000) #4, !dbg !28
  %.08.i184 = select i1 %.not21.i183, float %248, float %247, !dbg !28
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not22.i185 = icmp eq i32 %249, 0, !dbg !28
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i184, float %225, float -5.000000e-01) #4, !dbg !28
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i184, float %225, float -5.000000e-01) #4, !dbg !28
  %.07.i186 = select i1 %.not22.i185, float %251, float %250, !dbg !28
  %252 = fmul float %225, %.07.i186, !dbg !28
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not23.i187 = icmp eq i32 %253, 0, !dbg !28
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %252, float %225, float %225) #4, !dbg !28
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %252, float %225, float %225) #4, !dbg !28
  %.05.i188 = select i1 %.not23.i187, float %255, float %254, !dbg !28
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not24.i189 = icmp eq i32 %256, 0, !dbg !28
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float 0x3FE62E4300000000, float %.05.i188) #4, !dbg !28
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %227, float 0x3FE62E4300000000, float %.05.i188) #4, !dbg !28
  %.04.i190 = select i1 %.not24.i189, float %258, float %257, !dbg !28
  %259 = icmp ugt i32 %217, 2139095039, !dbg !28
  br i1 %259, label %260, label %__nv_log1pf.exit197, !dbg !28

260:                                              ; preds = %__nv_log1pf.exit166
  %261 = icmp sgt i32 %217, -1082130432, !dbg !28
  br i1 %261, label %__nv_fmaf_rn.exit.i194, label %265, !dbg !28

__nv_fmaf_rn.exit.i194:                           ; preds = %260
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !28
  %.not25.i195 = icmp eq i32 %262, 0, !dbg !28
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %42, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %42, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !28
  %.03.i196 = select i1 %.not25.i195, float %264, float %263, !dbg !28
  br label %265, !dbg !28

265:                                              ; preds = %__nv_fmaf_rn.exit.i194, %260
  %r.0.i192 = phi float [ %.03.i196, %__nv_fmaf_rn.exit.i194 ], [ %.04.i190, %260 ], !dbg !28
  %266 = fcmp oeq float %42, 0.000000e+00, !dbg !28
  %r.1.i193 = select i1 %266, float -0.000000e+00, float %r.0.i192, !dbg !28
  br label %__nv_log1pf.exit197, !dbg !28

__nv_log1pf.exit197:                              ; preds = %__nv_log1pf.exit166, %265
  %r.2.i191 = phi float [ %r.1.i193, %265 ], [ %.04.i190, %__nv_log1pf.exit166 ], !dbg !28
  %267 = fcmp olt float %23, 0x3810000000000000, !dbg !29
  %268 = fmul float %23, 0x4160000000000000, !dbg !29
  %.02.i = select i1 %267, float %268, float %23, !dbg !29
  %i.i.0.i = select i1 %267, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %269 = bitcast float %.02.i to i32, !dbg !29
  %270 = add i32 %269, -1059760811, !dbg !29
  %271 = and i32 %270, -8388608, !dbg !29
  %272 = sub i32 %269, %271, !dbg !29
  %273 = bitcast i32 %272 to float, !dbg !29
  %274 = sitofp i32 %271 to float, !dbg !29
  %275 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i = icmp eq i32 %275, 0, !dbg !29
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %274, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !29
  %277 = tail call float @llvm.nvvm.fma.rn.f(float %274, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !29
  %.08.i = select i1 %.not.i, float %277, float %276, !dbg !29
  %278 = fadd float %273, -1.000000e+00, !dbg !29
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i = icmp eq i32 %279, 0, !dbg !29
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %278, float 0x3FC2073EC0000000) #4, !dbg !29
  %281 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %278, float 0x3FC2073EC0000000) #4, !dbg !29
  %.010.i = select i1 %.not1.i, float %281, float %280, !dbg !29
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i = icmp eq i32 %282, 0, !dbg !29
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %278, float 0xBFBF19B980000000) #4, !dbg !29
  %284 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %278, float 0xBFBF19B980000000) #4, !dbg !29
  %.011.i = select i1 %.not2.i, float %284, float %283, !dbg !29
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i = icmp eq i32 %285, 0, !dbg !29
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %278, float 0x3FC1E52AA0000000) #4, !dbg !29
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %278, float 0x3FC1E52AA0000000) #4, !dbg !29
  %.012.i = select i1 %.not3.i, float %287, float %286, !dbg !29
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i = icmp eq i32 %288, 0, !dbg !29
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %278, float 0xBFC55B1720000000) #4, !dbg !29
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %278, float 0xBFC55B1720000000) #4, !dbg !29
  %.09.i = select i1 %.not4.i, float %290, float %289, !dbg !29
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i = icmp eq i32 %291, 0, !dbg !29
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %278, float 0x3FC99DA160000000) #4, !dbg !29
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %278, float 0x3FC99DA160000000) #4, !dbg !29
  %.05.i = select i1 %.not5.i, float %293, float %292, !dbg !29
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i = icmp eq i32 %294, 0, !dbg !29
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %278, float 0xBFCFFFE440000000) #4, !dbg !29
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %278, float 0xBFCFFFE440000000) #4, !dbg !29
  %.01.i = select i1 %.not6.i, float %296, float %295, !dbg !29
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not7.i = icmp eq i32 %297, 0, !dbg !29
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %278, float 0x3FD5554F00000000) #4, !dbg !29
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %278, float 0x3FD5554F00000000) #4, !dbg !29
  %.0.i = select i1 %.not7.i, float %299, float %298, !dbg !29
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not8.i = icmp eq i32 %300, 0, !dbg !29
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %278, float -5.000000e-01) #4, !dbg !29
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %278, float -5.000000e-01) #4, !dbg !29
  %.07.i = select i1 %.not8.i, float %302, float %301, !dbg !29
  %303 = fmul float %278, %.07.i, !dbg !29
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not9.i = icmp eq i32 %304, 0, !dbg !29
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %303, float %278, float %278) #4, !dbg !29
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %303, float %278, float %278) #4, !dbg !29
  %.06.i = select i1 %.not9.i, float %306, float %305, !dbg !29
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not10.i = icmp eq i32 %307, 0, !dbg !29
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !29
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !29
  %.04.i = select i1 %.not10.i, float %309, float %308, !dbg !29
  %310 = icmp ugt i32 %269, 2139095039, !dbg !29
  br i1 %310, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !29

__nv_fmaf_rn.exit.i.i:                            ; preds = %__nv_log1pf.exit197
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not11.i = icmp eq i32 %311, 0, !dbg !29
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %313 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %.03.i = select i1 %.not11.i, float %313, float %312, !dbg !29
  br label %__nv_logf.exit, !dbg !29

__nv_logf.exit:                                   ; preds = %__nv_log1pf.exit197, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %__nv_log1pf.exit197 ], !dbg !29
  %314 = fcmp olt float %24, 0x3810000000000000, !dbg !29
  %315 = fmul float %24, 0x4160000000000000, !dbg !29
  %.02.i1 = select i1 %314, float %315, float %24, !dbg !29
  %i.i.0.i2 = select i1 %314, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %316 = bitcast float %.02.i1 to i32, !dbg !29
  %317 = add i32 %316, -1059760811, !dbg !29
  %318 = and i32 %317, -8388608, !dbg !29
  %319 = sub i32 %316, %318, !dbg !29
  %320 = bitcast i32 %319 to float, !dbg !29
  %321 = sitofp i32 %318 to float, !dbg !29
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i3 = icmp eq i32 %322, 0, !dbg !29
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %321, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !29
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %321, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !29
  %.08.i4 = select i1 %.not.i3, float %324, float %323, !dbg !29
  %325 = fadd float %320, -1.000000e+00, !dbg !29
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i5 = icmp eq i32 %326, 0, !dbg !29
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %325, float 0x3FC2073EC0000000) #4, !dbg !29
  %328 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %325, float 0x3FC2073EC0000000) #4, !dbg !29
  %.010.i6 = select i1 %.not1.i5, float %328, float %327, !dbg !29
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i7 = icmp eq i32 %329, 0, !dbg !29
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %325, float 0xBFBF19B980000000) #4, !dbg !29
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %325, float 0xBFBF19B980000000) #4, !dbg !29
  %.011.i8 = select i1 %.not2.i7, float %331, float %330, !dbg !29
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i9 = icmp eq i32 %332, 0, !dbg !29
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %325, float 0x3FC1E52AA0000000) #4, !dbg !29
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %325, float 0x3FC1E52AA0000000) #4, !dbg !29
  %.012.i10 = select i1 %.not3.i9, float %334, float %333, !dbg !29
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i11 = icmp eq i32 %335, 0, !dbg !29
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %325, float 0xBFC55B1720000000) #4, !dbg !29
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %325, float 0xBFC55B1720000000) #4, !dbg !29
  %.09.i12 = select i1 %.not4.i11, float %337, float %336, !dbg !29
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i13 = icmp eq i32 %338, 0, !dbg !29
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %325, float 0x3FC99DA160000000) #4, !dbg !29
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %325, float 0x3FC99DA160000000) #4, !dbg !29
  %.05.i14 = select i1 %.not5.i13, float %340, float %339, !dbg !29
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i15 = icmp eq i32 %341, 0, !dbg !29
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %325, float 0xBFCFFFE440000000) #4, !dbg !29
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %325, float 0xBFCFFFE440000000) #4, !dbg !29
  %.01.i16 = select i1 %.not6.i15, float %343, float %342, !dbg !29
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not7.i17 = icmp eq i32 %344, 0, !dbg !29
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %325, float 0x3FD5554F00000000) #4, !dbg !29
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %325, float 0x3FD5554F00000000) #4, !dbg !29
  %.0.i18 = select i1 %.not7.i17, float %346, float %345, !dbg !29
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not8.i19 = icmp eq i32 %347, 0, !dbg !29
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %325, float -5.000000e-01) #4, !dbg !29
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %325, float -5.000000e-01) #4, !dbg !29
  %.07.i20 = select i1 %.not8.i19, float %349, float %348, !dbg !29
  %350 = fmul float %325, %.07.i20, !dbg !29
  %351 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not9.i21 = icmp eq i32 %351, 0, !dbg !29
  %352 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %350, float %325, float %325) #4, !dbg !29
  %353 = tail call float @llvm.nvvm.fma.rn.f(float %350, float %325, float %325) #4, !dbg !29
  %.06.i22 = select i1 %.not9.i21, float %353, float %352, !dbg !29
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not10.i23 = icmp eq i32 %354, 0, !dbg !29
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !29
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !29
  %.04.i24 = select i1 %.not10.i23, float %356, float %355, !dbg !29
  %357 = icmp ugt i32 %316, 2139095039, !dbg !29
  br i1 %357, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !29

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not11.i28 = icmp eq i32 %358, 0, !dbg !29
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %.03.i29 = select i1 %.not11.i28, float %360, float %359, !dbg !29
  br label %__nv_logf.exit30, !dbg !29

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !29
  %361 = fcmp olt float %25, 0x3810000000000000, !dbg !29
  %362 = fmul float %25, 0x4160000000000000, !dbg !29
  %.02.i31 = select i1 %361, float %362, float %25, !dbg !29
  %i.i.0.i32 = select i1 %361, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %363 = bitcast float %.02.i31 to i32, !dbg !29
  %364 = add i32 %363, -1059760811, !dbg !29
  %365 = and i32 %364, -8388608, !dbg !29
  %366 = sub i32 %363, %365, !dbg !29
  %367 = bitcast i32 %366 to float, !dbg !29
  %368 = sitofp i32 %365 to float, !dbg !29
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i33 = icmp eq i32 %369, 0, !dbg !29
  %370 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %368, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !29
  %371 = tail call float @llvm.nvvm.fma.rn.f(float %368, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !29
  %.08.i34 = select i1 %.not.i33, float %371, float %370, !dbg !29
  %372 = fadd float %367, -1.000000e+00, !dbg !29
  %373 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i35 = icmp eq i32 %373, 0, !dbg !29
  %374 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %372, float 0x3FC2073EC0000000) #4, !dbg !29
  %375 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %372, float 0x3FC2073EC0000000) #4, !dbg !29
  %.010.i36 = select i1 %.not1.i35, float %375, float %374, !dbg !29
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i37 = icmp eq i32 %376, 0, !dbg !29
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %372, float 0xBFBF19B980000000) #4, !dbg !29
  %378 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %372, float 0xBFBF19B980000000) #4, !dbg !29
  %.011.i38 = select i1 %.not2.i37, float %378, float %377, !dbg !29
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i39 = icmp eq i32 %379, 0, !dbg !29
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %372, float 0x3FC1E52AA0000000) #4, !dbg !29
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %372, float 0x3FC1E52AA0000000) #4, !dbg !29
  %.012.i40 = select i1 %.not3.i39, float %381, float %380, !dbg !29
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i41 = icmp eq i32 %382, 0, !dbg !29
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %372, float 0xBFC55B1720000000) #4, !dbg !29
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %372, float 0xBFC55B1720000000) #4, !dbg !29
  %.09.i42 = select i1 %.not4.i41, float %384, float %383, !dbg !29
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i43 = icmp eq i32 %385, 0, !dbg !29
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %372, float 0x3FC99DA160000000) #4, !dbg !29
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %372, float 0x3FC99DA160000000) #4, !dbg !29
  %.05.i44 = select i1 %.not5.i43, float %387, float %386, !dbg !29
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i45 = icmp eq i32 %388, 0, !dbg !29
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %372, float 0xBFCFFFE440000000) #4, !dbg !29
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %372, float 0xBFCFFFE440000000) #4, !dbg !29
  %.01.i46 = select i1 %.not6.i45, float %390, float %389, !dbg !29
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not7.i47 = icmp eq i32 %391, 0, !dbg !29
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %372, float 0x3FD5554F00000000) #4, !dbg !29
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %372, float 0x3FD5554F00000000) #4, !dbg !29
  %.0.i48 = select i1 %.not7.i47, float %393, float %392, !dbg !29
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not8.i49 = icmp eq i32 %394, 0, !dbg !29
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %372, float -5.000000e-01) #4, !dbg !29
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %372, float -5.000000e-01) #4, !dbg !29
  %.07.i50 = select i1 %.not8.i49, float %396, float %395, !dbg !29
  %397 = fmul float %372, %.07.i50, !dbg !29
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not9.i51 = icmp eq i32 %398, 0, !dbg !29
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float %372, float %372) #4, !dbg !29
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %397, float %372, float %372) #4, !dbg !29
  %.06.i52 = select i1 %.not9.i51, float %400, float %399, !dbg !29
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not10.i53 = icmp eq i32 %401, 0, !dbg !29
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !29
  %403 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !29
  %.04.i54 = select i1 %.not10.i53, float %403, float %402, !dbg !29
  %404 = icmp ugt i32 %363, 2139095039, !dbg !29
  br i1 %404, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !29

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not11.i58 = icmp eq i32 %405, 0, !dbg !29
  %406 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %407 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %.03.i59 = select i1 %.not11.i58, float %407, float %406, !dbg !29
  br label %__nv_logf.exit60, !dbg !29

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !29
  %408 = fcmp olt float %26, 0x3810000000000000, !dbg !29
  %409 = fmul float %26, 0x4160000000000000, !dbg !29
  %.02.i61 = select i1 %408, float %409, float %26, !dbg !29
  %i.i.0.i62 = select i1 %408, float -2.300000e+01, float 0.000000e+00, !dbg !29
  %410 = bitcast float %.02.i61 to i32, !dbg !29
  %411 = add i32 %410, -1059760811, !dbg !29
  %412 = and i32 %411, -8388608, !dbg !29
  %413 = sub i32 %410, %412, !dbg !29
  %414 = bitcast i32 %413 to float, !dbg !29
  %415 = sitofp i32 %412 to float, !dbg !29
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not.i63 = icmp eq i32 %416, 0, !dbg !29
  %417 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %415, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !29
  %418 = tail call float @llvm.nvvm.fma.rn.f(float %415, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !29
  %.08.i64 = select i1 %.not.i63, float %418, float %417, !dbg !29
  %419 = fadd float %414, -1.000000e+00, !dbg !29
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not1.i65 = icmp eq i32 %420, 0, !dbg !29
  %421 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %419, float 0x3FC2073EC0000000) #4, !dbg !29
  %422 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %419, float 0x3FC2073EC0000000) #4, !dbg !29
  %.010.i66 = select i1 %.not1.i65, float %422, float %421, !dbg !29
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not2.i67 = icmp eq i32 %423, 0, !dbg !29
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %419, float 0xBFBF19B980000000) #4, !dbg !29
  %425 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %419, float 0xBFBF19B980000000) #4, !dbg !29
  %.011.i68 = select i1 %.not2.i67, float %425, float %424, !dbg !29
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not3.i69 = icmp eq i32 %426, 0, !dbg !29
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %419, float 0x3FC1E52AA0000000) #4, !dbg !29
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %419, float 0x3FC1E52AA0000000) #4, !dbg !29
  %.012.i70 = select i1 %.not3.i69, float %428, float %427, !dbg !29
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not4.i71 = icmp eq i32 %429, 0, !dbg !29
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %419, float 0xBFC55B1720000000) #4, !dbg !29
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %419, float 0xBFC55B1720000000) #4, !dbg !29
  %.09.i72 = select i1 %.not4.i71, float %431, float %430, !dbg !29
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not5.i73 = icmp eq i32 %432, 0, !dbg !29
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %419, float 0x3FC99DA160000000) #4, !dbg !29
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %419, float 0x3FC99DA160000000) #4, !dbg !29
  %.05.i74 = select i1 %.not5.i73, float %434, float %433, !dbg !29
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not6.i75 = icmp eq i32 %435, 0, !dbg !29
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %419, float 0xBFCFFFE440000000) #4, !dbg !29
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %419, float 0xBFCFFFE440000000) #4, !dbg !29
  %.01.i76 = select i1 %.not6.i75, float %437, float %436, !dbg !29
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not7.i77 = icmp eq i32 %438, 0, !dbg !29
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %419, float 0x3FD5554F00000000) #4, !dbg !29
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %419, float 0x3FD5554F00000000) #4, !dbg !29
  %.0.i78 = select i1 %.not7.i77, float %440, float %439, !dbg !29
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not8.i79 = icmp eq i32 %441, 0, !dbg !29
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %419, float -5.000000e-01) #4, !dbg !29
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %419, float -5.000000e-01) #4, !dbg !29
  %.07.i80 = select i1 %.not8.i79, float %443, float %442, !dbg !29
  %444 = fmul float %419, %.07.i80, !dbg !29
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not9.i81 = icmp eq i32 %445, 0, !dbg !29
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %444, float %419, float %419) #4, !dbg !29
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %444, float %419, float %419) #4, !dbg !29
  %.06.i82 = select i1 %.not9.i81, float %447, float %446, !dbg !29
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not10.i83 = icmp eq i32 %448, 0, !dbg !29
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !29
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !29
  %.04.i84 = select i1 %.not10.i83, float %450, float %449, !dbg !29
  %451 = icmp ugt i32 %410, 2139095039, !dbg !29
  br i1 %451, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !29

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !29
  %.not11.i88 = icmp eq i32 %452, 0, !dbg !29
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !29
  %.03.i89 = select i1 %.not11.i88, float %454, float %453, !dbg !29
  br label %__nv_logf.exit90, !dbg !29

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !29
  %455 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !29
  %456 = insertelement <2 x float> %455, float %.02.i61, i64 1, !dbg !29
  %457 = fcmp oeq <2 x float> %456, zeroinitializer, !dbg !29
  %458 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !29
  %459 = insertelement <2 x float> %458, float %.02.i1, i64 1, !dbg !29
  %460 = fcmp oeq <2 x float> %459, zeroinitializer, !dbg !29
  %461 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !12
  %462 = insertelement <2 x float> poison, float %r.2.i160, i64 0, !dbg !30
  %463 = insertelement <2 x float> %462, float %r.2.i191, i64 1, !dbg !30
  %464 = fcmp ogt <2 x float> %463, splat (float -1.000000e+02), !dbg !30
  %465 = fcmp uno <2 x float> %463, zeroinitializer, !dbg !34
  %466 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !12
  %467 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !12
  %468 = insertelement <2 x float> poison, float %r.2.i, i64 0, !dbg !30
  %469 = insertelement <2 x float> %468, float %r.2.i129, i64 1, !dbg !30
  %470 = fcmp ogt <2 x float> %469, splat (float -1.000000e+02), !dbg !30
  %471 = fcmp uno <2 x float> %469, zeroinitializer, !dbg !34
  %472 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !12
  %473 = extractvalue { i32, i32, i32, i32 } %38, 3, !dbg !26
  %474 = extractvalue { i32, i32, i32, i32 } %38, 2, !dbg !26
  %475 = extractvalue { i32, i32, i32, i32 } %38, 1, !dbg !26
  %476 = extractvalue { i32, i32, i32, i32 } %38, 0, !dbg !26
  %477 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !24
  %478 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !24
  %479 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !24
  %480 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !24
  %481 = extractvalue { i32, i32, i32, i32 } %34, 3, !dbg !22
  %482 = extractvalue { i32, i32, i32, i32 } %34, 2, !dbg !22
  %483 = extractvalue { i32, i32, i32, i32 } %34, 1, !dbg !22
  %484 = extractvalue { i32, i32, i32, i32 } %34, 0, !dbg !22
  %485 = extractvalue { i32, i32, i32, i32 } %32, 3, !dbg !20
  %486 = extractvalue { i32, i32, i32, i32 } %32, 2, !dbg !20
  %487 = extractvalue { i32, i32, i32, i32 } %32, 1, !dbg !20
  %488 = extractvalue { i32, i32, i32, i32 } %32, 0, !dbg !20
  %489 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !18
  %490 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !18
  %491 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !18
  %492 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !18
  %493 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !16
  %494 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !16
  %495 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !16
  %496 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !16
  %497 = lshr i32 %11, 5, !dbg !10
  %498 = and i32 %11, 31, !dbg !10
  %499 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !29
  %500 = insertelement <2 x float> %499, float %r.i.0.i25, i64 1, !dbg !29
  %501 = select <2 x i1> %460, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %500, !dbg !29
  %502 = insertelement <2 x i32> poison, i32 %472, i64 0, !dbg !12
  %503 = insertelement <2 x i32> %502, i32 %467, i64 1, !dbg !12
  %504 = bitcast <2 x i32> %503 to <2 x float>, !dbg !12
  %505 = fadd <2 x float> %504, splat (float -1.000000e+00), !dbg !35
  %506 = or <2 x i1> %470, %471, !dbg !36
  %507 = select <2 x i1> %506, <2 x float> %469, <2 x float> splat (float -1.000000e+02), !dbg !37
  %508 = fmul <2 x float> %505, %507, !dbg !38
  %509 = fcmp ogt <2 x float> %501, splat (float -1.000000e+02), !dbg !39
  %510 = fcmp uno <2 x float> %501, zeroinitializer, !dbg !41
  %511 = or <2 x i1> %509, %510, !dbg !42
  %512 = select <2 x i1> %511, <2 x float> %501, <2 x float> splat (float -1.000000e+02), !dbg !43
  %513 = fmul <2 x float> %512, %504, !dbg !44
  %514 = fsub <2 x float> %508, %513, !dbg !45
  %515 = insertelement <2 x i32> poison, i32 %466, i64 0, !dbg !12
  %516 = insertelement <2 x i32> %515, i32 %461, i64 1, !dbg !12
  %517 = bitcast <2 x i32> %516 to <2 x float>, !dbg !12
  %518 = fadd <2 x float> %517, splat (float -1.000000e+00), !dbg !35
  %519 = or <2 x i1> %464, %465, !dbg !36
  %520 = select <2 x i1> %519, <2 x float> %463, <2 x float> splat (float -1.000000e+02), !dbg !37
  %521 = fmul <2 x float> %518, %520, !dbg !38
  %522 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !29
  %523 = insertelement <2 x float> %522, float %r.i.0.i85, i64 1, !dbg !29
  %524 = select <2 x i1> %457, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %523, !dbg !29
  %525 = fcmp ogt <2 x float> %524, splat (float -1.000000e+02), !dbg !39
  %526 = fcmp uno <2 x float> %524, zeroinitializer, !dbg !41
  %527 = or <2 x i1> %525, %526, !dbg !42
  %528 = select <2 x i1> %527, <2 x float> %524, <2 x float> splat (float -1.000000e+02), !dbg !43
  %529 = fmul <2 x float> %528, %517, !dbg !44
  %530 = fsub <2 x float> %521, %529, !dbg !45
  %shift = shufflevector <2 x float> %514, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !46
  %531 = fadd <2 x float> %514, %shift, !dbg !46
  %532 = fadd <2 x float> %531, %530, !dbg !46
  %shift198 = shufflevector <2 x float> %530, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !46
  %533 = fadd <2 x float> %532, %shift198, !dbg !46
  %534 = extractelement <2 x float> %533, i64 0, !dbg !46
  %535 = bitcast float %534 to i32, !dbg !51
  %536 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %535, i32 16, i32 31), !dbg !51
  %537 = bitcast i32 %536 to float, !dbg !51
  %538 = fadd float %534, %537, !dbg !46
  %539 = bitcast float %538 to i32, !dbg !51
  %540 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %539, i32 8, i32 31), !dbg !51
  %541 = bitcast i32 %540 to float, !dbg !51
  %542 = fadd float %538, %541, !dbg !46
  %543 = bitcast float %542 to i32, !dbg !51
  %544 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %543, i32 4, i32 31), !dbg !51
  %545 = bitcast i32 %544 to float, !dbg !51
  %546 = fadd float %542, %545, !dbg !46
  %547 = bitcast float %546 to i32, !dbg !51
  %548 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %547, i32 2, i32 31), !dbg !51
  %549 = bitcast i32 %548 to float, !dbg !51
  %550 = fadd float %546, %549, !dbg !46
  %551 = bitcast float %550 to i32, !dbg !51
  %552 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %551, i32 1, i32 31), !dbg !51
  %553 = bitcast i32 %552 to float, !dbg !51
  %554 = fadd float %550, %553, !dbg !46
  %555 = icmp eq i32 %498, 0, !dbg !51
  %556 = and i32 %497, 1, !dbg !51
  %557 = getelementptr float, ptr addrspace(3) @global_smem, i32 %556, !dbg !51
  %558 = bitcast float %554 to <1 x i32>, !dbg !51
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %557, <1 x i32> %558, i1 %555) #4, !dbg !51
  tail call void @llvm.nvvm.barrier0(), !dbg !51
  %559 = icmp slt i32 %11, 2, !dbg !51
  %560 = getelementptr float, ptr addrspace(3) @global_smem, i32 %11, !dbg !51
  %561 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %560, i1 %559) #4, !dbg !51
  %562 = bitcast i32 %561 to float, !dbg !51
  %563 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %561, i32 1, i32 31), !dbg !51
  %564 = bitcast i32 %563 to float, !dbg !51
  %565 = fadd float %562, %564, !dbg !46
  %566 = and i32 %11, 1, !dbg !51
  %567 = icmp eq i32 %566, 0, !dbg !51
  %568 = and i1 %559, %567, !dbg !51
  %569 = bitcast float %565 to <1 x i32>, !dbg !51
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %560, <1 x i32> %569, i1 %568) #4, !dbg !51
  tail call void @llvm.nvvm.barrier0(), !dbg !51
  %570 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !51
  %571 = fadd float %570, 0.000000e+00, !dbg !52
  %572 = insertelement <2 x i32> poison, i32 %492, i64 0, !dbg !18
  %573 = insertelement <2 x i32> %572, i32 %491, i64 1, !dbg !18
  %574 = bitcast <2 x i32> %573 to <2 x float>, !dbg !18
  %575 = insertelement <2 x i32> poison, i32 %496, i64 0, !dbg !16
  %576 = insertelement <2 x i32> %575, i32 %495, i64 1, !dbg !16
  %577 = bitcast <2 x i32> %576 to <2 x float>, !dbg !16
  %578 = fsub <2 x float> %577, %574, !dbg !54
  %579 = fmul <2 x float> %578, %578, !dbg !55
  %580 = insertelement <2 x i32> poison, i32 %489, i64 0, !dbg !18
  %581 = insertelement <2 x i32> %580, i32 %490, i64 1, !dbg !18
  %582 = bitcast <2 x i32> %581 to <2 x float>, !dbg !18
  %583 = insertelement <2 x i32> poison, i32 %493, i64 0, !dbg !16
  %584 = insertelement <2 x i32> %583, i32 %494, i64 1, !dbg !16
  %585 = bitcast <2 x i32> %584 to <2 x float>, !dbg !16
  %586 = fsub <2 x float> %585, %582, !dbg !54
  %587 = fmul <2 x float> %586, %586, !dbg !55
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %shift199 = shufflevector <2 x float> %579, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !58
  %588 = fadd <2 x float> %579, %shift199, !dbg !58
  %shift200 = shufflevector <2 x float> %587, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !58
  %589 = fadd <2 x float> %shift200, %588, !dbg !58
  %590 = fadd <2 x float> %587, %589, !dbg !58
  %591 = extractelement <2 x float> %590, i64 0, !dbg !58
  %592 = bitcast float %591 to i32, !dbg !56
  %593 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %592, i32 16, i32 31), !dbg !56
  %594 = bitcast i32 %593 to float, !dbg !56
  %595 = fadd float %591, %594, !dbg !58
  %596 = bitcast float %595 to i32, !dbg !56
  %597 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %596, i32 8, i32 31), !dbg !56
  %598 = bitcast i32 %597 to float, !dbg !56
  %599 = fadd float %595, %598, !dbg !58
  %600 = bitcast float %599 to i32, !dbg !56
  %601 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %600, i32 4, i32 31), !dbg !56
  %602 = bitcast i32 %601 to float, !dbg !56
  %603 = fadd float %599, %602, !dbg !58
  %604 = bitcast float %603 to i32, !dbg !56
  %605 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %604, i32 2, i32 31), !dbg !56
  %606 = bitcast i32 %605 to float, !dbg !56
  %607 = fadd float %603, %606, !dbg !58
  %608 = bitcast float %607 to i32, !dbg !56
  %609 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %608, i32 1, i32 31), !dbg !56
  %610 = bitcast i32 %609 to float, !dbg !56
  %611 = fadd float %607, %610, !dbg !58
  %612 = bitcast float %611 to <1 x i32>, !dbg !56
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %557, <1 x i32> %612, i1 %555) #4, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %613 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %560, i1 %559) #4, !dbg !56
  %614 = bitcast i32 %613 to float, !dbg !56
  %615 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %613, i32 1, i32 31), !dbg !56
  %616 = bitcast i32 %615 to float, !dbg !56
  %617 = fadd float %614, %616, !dbg !58
  %618 = bitcast float %617 to <1 x i32>, !dbg !56
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %560, <1 x i32> %618, i1 %568) #4, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %619 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !56
  %620 = fadd float %619, 0.000000e+00, !dbg !59
  %621 = insertelement <2 x i32> poison, i32 %484, i64 0, !dbg !22
  %622 = insertelement <2 x i32> %621, i32 %483, i64 1, !dbg !22
  %623 = bitcast <2 x i32> %622 to <2 x float>, !dbg !22
  %624 = insertelement <2 x i32> poison, i32 %488, i64 0, !dbg !20
  %625 = insertelement <2 x i32> %624, i32 %487, i64 1, !dbg !20
  %626 = bitcast <2 x i32> %625 to <2 x float>, !dbg !20
  %627 = fsub <2 x float> %626, %623, !dbg !61
  %628 = fmul <2 x float> %627, %627, !dbg !62
  %629 = insertelement <2 x i32> poison, i32 %481, i64 0, !dbg !22
  %630 = insertelement <2 x i32> %629, i32 %482, i64 1, !dbg !22
  %631 = bitcast <2 x i32> %630 to <2 x float>, !dbg !22
  %632 = insertelement <2 x i32> poison, i32 %485, i64 0, !dbg !20
  %633 = insertelement <2 x i32> %632, i32 %486, i64 1, !dbg !20
  %634 = bitcast <2 x i32> %633 to <2 x float>, !dbg !20
  %635 = fsub <2 x float> %634, %631, !dbg !61
  %636 = fmul <2 x float> %635, %635, !dbg !62
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %shift201 = shufflevector <2 x float> %628, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !65
  %637 = fadd <2 x float> %628, %shift201, !dbg !65
  %shift202 = shufflevector <2 x float> %636, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !65
  %638 = fadd <2 x float> %shift202, %637, !dbg !65
  %639 = fadd <2 x float> %636, %638, !dbg !65
  %640 = extractelement <2 x float> %639, i64 0, !dbg !65
  %641 = bitcast float %640 to i32, !dbg !63
  %642 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %641, i32 16, i32 31), !dbg !63
  %643 = bitcast i32 %642 to float, !dbg !63
  %644 = fadd float %640, %643, !dbg !65
  %645 = bitcast float %644 to i32, !dbg !63
  %646 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %645, i32 8, i32 31), !dbg !63
  %647 = bitcast i32 %646 to float, !dbg !63
  %648 = fadd float %644, %647, !dbg !65
  %649 = bitcast float %648 to i32, !dbg !63
  %650 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %649, i32 4, i32 31), !dbg !63
  %651 = bitcast i32 %650 to float, !dbg !63
  %652 = fadd float %648, %651, !dbg !65
  %653 = bitcast float %652 to i32, !dbg !63
  %654 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %653, i32 2, i32 31), !dbg !63
  %655 = bitcast i32 %654 to float, !dbg !63
  %656 = fadd float %652, %655, !dbg !65
  %657 = bitcast float %656 to i32, !dbg !63
  %658 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %657, i32 1, i32 31), !dbg !63
  %659 = bitcast i32 %658 to float, !dbg !63
  %660 = fadd float %656, %659, !dbg !65
  %661 = bitcast float %660 to <1 x i32>, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %557, <1 x i32> %661, i1 %555) #4, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %662 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %560, i1 %559) #4, !dbg !63
  %663 = bitcast i32 %662 to float, !dbg !63
  %664 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %662, i32 1, i32 31), !dbg !63
  %665 = bitcast i32 %664 to float, !dbg !63
  %666 = fadd float %663, %665, !dbg !65
  %667 = bitcast float %666 to <1 x i32>, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %560, <1 x i32> %667, i1 %568) #4, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %668 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !63
  %669 = fadd float %668, 0.000000e+00, !dbg !66
  %670 = insertelement <2 x i32> poison, i32 %476, i64 0, !dbg !26
  %671 = insertelement <2 x i32> %670, i32 %475, i64 1, !dbg !26
  %672 = bitcast <2 x i32> %671 to <2 x float>, !dbg !26
  %673 = insertelement <2 x i32> poison, i32 %480, i64 0, !dbg !24
  %674 = insertelement <2 x i32> %673, i32 %479, i64 1, !dbg !24
  %675 = bitcast <2 x i32> %674 to <2 x float>, !dbg !24
  %676 = fsub <2 x float> %675, %672, !dbg !68
  %677 = fmul <2 x float> %676, %676, !dbg !69
  %678 = insertelement <2 x i32> poison, i32 %473, i64 0, !dbg !26
  %679 = insertelement <2 x i32> %678, i32 %474, i64 1, !dbg !26
  %680 = bitcast <2 x i32> %679 to <2 x float>, !dbg !26
  %681 = insertelement <2 x i32> poison, i32 %477, i64 0, !dbg !24
  %682 = insertelement <2 x i32> %681, i32 %478, i64 1, !dbg !24
  %683 = bitcast <2 x i32> %682 to <2 x float>, !dbg !24
  %684 = fsub <2 x float> %683, %680, !dbg !68
  %685 = fmul <2 x float> %684, %684, !dbg !69
  tail call void @llvm.nvvm.barrier0(), !dbg !70
  %shift203 = shufflevector <2 x float> %677, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !72
  %686 = fadd <2 x float> %677, %shift203, !dbg !72
  %shift204 = shufflevector <2 x float> %685, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !72
  %687 = fadd <2 x float> %shift204, %686, !dbg !72
  %688 = fadd <2 x float> %685, %687, !dbg !72
  %689 = extractelement <2 x float> %688, i64 0, !dbg !72
  %690 = bitcast float %689 to i32, !dbg !70
  %691 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %690, i32 16, i32 31), !dbg !70
  %692 = bitcast i32 %691 to float, !dbg !70
  %693 = fadd float %689, %692, !dbg !72
  %694 = bitcast float %693 to i32, !dbg !70
  %695 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %694, i32 8, i32 31), !dbg !70
  %696 = bitcast i32 %695 to float, !dbg !70
  %697 = fadd float %693, %696, !dbg !72
  %698 = bitcast float %697 to i32, !dbg !70
  %699 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %698, i32 4, i32 31), !dbg !70
  %700 = bitcast i32 %699 to float, !dbg !70
  %701 = fadd float %697, %700, !dbg !72
  %702 = bitcast float %701 to i32, !dbg !70
  %703 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %702, i32 2, i32 31), !dbg !70
  %704 = bitcast i32 %703 to float, !dbg !70
  %705 = fadd float %701, %704, !dbg !72
  %706 = bitcast float %705 to i32, !dbg !70
  %707 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %706, i32 1, i32 31), !dbg !70
  %708 = bitcast i32 %707 to float, !dbg !70
  %709 = fadd float %705, %708, !dbg !72
  %710 = bitcast float %709 to <1 x i32>, !dbg !70
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %557, <1 x i32> %710, i1 %555) #4, !dbg !70
  tail call void @llvm.nvvm.barrier0(), !dbg !70
  %711 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %560, i1 %559) #4, !dbg !70
  %712 = bitcast i32 %711 to float, !dbg !70
  %713 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %711, i32 1, i32 31), !dbg !70
  %714 = bitcast i32 %713 to float, !dbg !70
  %715 = fadd float %712, %714, !dbg !72
  %716 = bitcast float %715 to <1 x i32>, !dbg !70
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %560, <1 x i32> %716, i1 %568) #4, !dbg !70
  tail call void @llvm.nvvm.barrier0(), !dbg !70
  %717 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !70
  %718 = fadd float %717, 0.000000e+00, !dbg !73
  %719 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %571, float 2.560000e+02) #4, !dbg !75
  %720 = fmul float %719, 0x3FEE666660000000, !dbg !76
  %721 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %620, float 2.560000e+02) #4, !dbg !77
  %722 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %669, float 2.560000e+02) #4, !dbg !78
  %723 = fadd float %721, %722, !dbg !79
  %724 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %718, float 2.560000e+02) #4, !dbg !80
  %725 = fadd float %723, %724, !dbg !81
  %726 = fmul float %725, 0x3FA99999A0000000, !dbg !82
  %727 = fadd float %720, %726, !dbg !83
  tail call void @llvm.nvvm.barrier0(), !dbg !84
  %urem = and i32 %11, 63, !dbg !85
  %728 = icmp eq i32 %urem, 0, !dbg !85
  %729 = bitcast float %727 to i32, !dbg !85
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %729, ptr addrspace(1) %0, i1 %728) #4, !dbg !85
  ret void, !dbg !86
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmdrsgcjytwgtdz7atfluzoijiygxl2mstehqid5uyp7dmqq2aij.py", directory: "inductor_cache/md")
!4 = !{ptr @triton_per_fused_add_binary_cross_entropy_mse_loss_mul_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_binary_cross_entropy_mse_loss_mul_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_binary_cross_entropy_mse_loss_mul_0", linkageName: "triton_per_fused_add_binary_cross_entropy_mse_loss_mul_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 33, column: 31, scope: !7)
!16 = !DILocation(line: 33, column: 36, scope: !7)
!17 = !DILocation(line: 34, column: 31, scope: !7)
!18 = !DILocation(line: 34, column: 36, scope: !7)
!19 = !DILocation(line: 35, column: 31, scope: !7)
!20 = !DILocation(line: 35, column: 36, scope: !7)
!21 = !DILocation(line: 36, column: 31, scope: !7)
!22 = !DILocation(line: 36, column: 36, scope: !7)
!23 = !DILocation(line: 37, column: 31, scope: !7)
!24 = !DILocation(line: 37, column: 36, scope: !7)
!25 = !DILocation(line: 38, column: 31, scope: !7)
!26 = !DILocation(line: 38, column: 36, scope: !7)
!27 = !DILocation(line: 41, column: 12, scope: !7)
!28 = !DILocation(line: 42, column: 27, scope: !7)
!29 = !DILocation(line: 46, column: 23, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 44, column: 40, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 40, column: 18, scope: !7)
!36 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!38 = !DILocation(line: 45, column: 18, scope: !7)
!39 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !40)
!40 = !DILocation(line: 47, column: 41, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !40)
!44 = !DILocation(line: 48, column: 19, scope: !7)
!45 = !DILocation(line: 49, column: 19, scope: !7)
!46 = !DILocation(line: 256, column: 15, scope: !47, inlinedAt: !50)
!47 = distinct !DILexicalBlockFile(scope: !49, file: !48, discriminator: 0)
!48 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!49 = distinct !DILexicalBlockFile(scope: !7, file: !48, discriminator: 0)
!50 = !DILocation(line: 51, column: 59, scope: !7)
!51 = !DILocation(line: 267, column: 36, scope: !49, inlinedAt: !50)
!52 = !DILocation(line: 73, column: 15, scope: !31, inlinedAt: !53)
!53 = !DILocation(line: 51, column: 45, scope: !7)
!54 = !DILocation(line: 52, column: 20, scope: !7)
!55 = !DILocation(line: 53, column: 20, scope: !7)
!56 = !DILocation(line: 267, column: 36, scope: !49, inlinedAt: !57)
!57 = !DILocation(line: 55, column: 59, scope: !7)
!58 = !DILocation(line: 256, column: 15, scope: !47, inlinedAt: !57)
!59 = !DILocation(line: 73, column: 15, scope: !31, inlinedAt: !60)
!60 = !DILocation(line: 55, column: 45, scope: !7)
!61 = !DILocation(line: 56, column: 20, scope: !7)
!62 = !DILocation(line: 57, column: 20, scope: !7)
!63 = !DILocation(line: 267, column: 36, scope: !49, inlinedAt: !64)
!64 = !DILocation(line: 59, column: 59, scope: !7)
!65 = !DILocation(line: 256, column: 15, scope: !47, inlinedAt: !64)
!66 = !DILocation(line: 73, column: 15, scope: !31, inlinedAt: !67)
!67 = !DILocation(line: 59, column: 45, scope: !7)
!68 = !DILocation(line: 60, column: 20, scope: !7)
!69 = !DILocation(line: 61, column: 20, scope: !7)
!70 = !DILocation(line: 267, column: 36, scope: !49, inlinedAt: !71)
!71 = !DILocation(line: 63, column: 59, scope: !7)
!72 = !DILocation(line: 256, column: 15, scope: !47, inlinedAt: !71)
!73 = !DILocation(line: 73, column: 15, scope: !31, inlinedAt: !74)
!74 = !DILocation(line: 63, column: 45, scope: !7)
!75 = !DILocation(line: 65, column: 20, scope: !7)
!76 = !DILocation(line: 67, column: 20, scope: !7)
!77 = !DILocation(line: 68, column: 20, scope: !7)
!78 = !DILocation(line: 69, column: 20, scope: !7)
!79 = !DILocation(line: 70, column: 20, scope: !7)
!80 = !DILocation(line: 71, column: 20, scope: !7)
!81 = !DILocation(line: 72, column: 20, scope: !7)
!82 = !DILocation(line: 74, column: 20, scope: !7)
!83 = !DILocation(line: 75, column: 20, scope: !7)
!84 = !DILocation(line: 76, column: 4, scope: !7)
!85 = !DILocation(line: 77, column: 63, scope: !7)
!86 = !DILocation(line: 77, column: 4, scope: !7)
