//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0 // -- Begin function triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0
.visible .entry triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_2,
	.param .u32 triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_3,
	.param .u32 triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<45>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:19:0

// %bb.0:
	ld.param.u64 	%rd1, [triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:23:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd4, [triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_1];
	.loc	1 25 21                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:25:21
	setp.lt.s32 	%p1, %r3, 4;
	ld.param.u64 	%rd5, [triton_per_fused_add_log10_mean_mul_pow_reciprocal_sub_0_param_2];
	.loc	1 26 34                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:26:34
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 31;
	and.b32  	%r2, %r20, 63;
	.loc	1 31 38                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:31:38
	shl.b32 	%r22, %r3, 6;
	.loc	1 31 35                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:31:35
	or.b32  	%r23, %r22, %r2;
	.loc	1 31 30                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:31:30
	mul.wide.s32 	%rd6, %r23, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.b32 	%r5, 0;
	.loc	1 31 43                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:31:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f5, %r4;
	.loc	1 32 30                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:32:30
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 32 43                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:32:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r6, %r5;
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 33 18                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:33:18
	sub.f32 	%f7, %f5, %f6;
	.loc	1 34 18                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:34:18
	mul.f32 	%f8, %f7, %f7;
	.loc	1 36 33                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:36:33
	selp.f32 	%f9, %f8, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f9;
	shfl.sync.bfly.b32	%r25, %r24, 16, 31, -1;
	mov.b32 	%f10, %r25;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f11;
	shfl.sync.bfly.b32	%r27, %r26, 8, 31, -1;
	mov.b32 	%f12, %r27;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f13;
	shfl.sync.bfly.b32	%r29, %r28, 4, 31, -1;
	mov.b32 	%f14, %r29;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f15;
	shfl.sync.bfly.b32	%r31, %r30, 2, 31, -1;
	mov.b32 	%f16, %r31;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f17;
	shfl.sync.bfly.b32	%r33, %r32, 1, 31, -1;
	mov.b32 	%f18, %r33;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r21, 0;
	shr.u32 	%r34, %r20, 3;
	and.b32  	%r35, %r34, 4;
	mov.u32 	%r36, global_smem;
	add.s32 	%r8, %r36, %r35;
	mov.b32 	%r9, %f19;
	// begin inline asm
	@%p5 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r20, 2;
	shl.b32 	%r37, %r20, 2;
	add.s32 	%r11, %r36, %r37;
	// begin inline asm
	@%p6 ld.shared.b32 %r10, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r10;
	shfl.sync.bfly.b32	%r38, %r10, 1, 31, -1;
	mov.b32 	%f21, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r39, %r20, 1;
	setp.eq.b32 	%p8, %r39, 1;
	not.pred 	%p9, %p8;
	and.pred  	%p7, %p6, %p9;
	mov.b32 	%r13, %f22;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 39 18                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:39:18
	ld.shared.u32 	%r15, [global_smem];
	mov.b32 	%r16, 1115684864;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f23, %r14;
	.loc	1 41 19                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:41:19
	add.f32 	%f24, %f23, 0f322BCC77;
	.loc	1 43 20                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:43:20
	mov.b32 	%r19, %f24;
	mov.b32 	%r18, 1065353216;
	// begin inline asm
	div.full.f32 %r17, %r18, %r19;
	// end inline asm
	mov.b32 	%f25, %r17;
	.loc	1 46 28                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:46:28
	setp.lt.f32 	%p10, %f25, 0f00800000;
	mul.f32 	%f26, %f25, 0f4B000000;
	selp.f32 	%f1, %f26, %f25, %p10;
	selp.f32 	%f27, 0fC1B80000, 0f00000000, %p10;
	mov.b32 	%r40, %f1;
	add.s32 	%r41, %r40, -1059760811;
	and.b32  	%r42, %r41, -8388608;
	sub.s32 	%r43, %r40, %r42;
	mov.b32 	%f28, %r43;
	cvt.rn.f32.s32 	%f29, %r42;
	mov.f32 	%f30, 0f34000000;
	fma.rn.ftz.f32 	%f31, %f29, %f30, %f27;
	add.f32 	%f32, %f28, 0fBF800000;
	mov.f32 	%f33, 0f3E1039F6;
	mov.f32 	%f34, 0fBE055027;
	fma.rn.ftz.f32 	%f35, %f34, %f32, %f33;
	mov.f32 	%f36, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f37, %f35, %f32, %f36;
	mov.f32 	%f38, 0f3E0F2955;
	fma.rn.ftz.f32 	%f39, %f37, %f32, %f38;
	mov.f32 	%f40, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f41, %f39, %f32, %f40;
	mov.f32 	%f42, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f43, %f41, %f32, %f42;
	mov.f32 	%f44, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f45, %f43, %f32, %f44;
	mov.f32 	%f46, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f47, %f45, %f32, %f46;
	mov.f32 	%f48, 0fBF000000;
	fma.rn.ftz.f32 	%f49, %f47, %f32, %f48;
	mul.f32 	%f50, %f32, %f49;
	fma.rn.ftz.f32 	%f51, %f50, %f32, %f32;
	mov.f32 	%f52, 0f3F317218;
	fma.rn.ftz.f32 	%f57, %f31, %f52, %f51;
	setp.lt.u32 	%p11, %r40, 2139095040;
	@%p11 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 28                          // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:0:28
	mov.f32 	%f53, 0f7F800000;
	fma.rn.ftz.f32 	%f57, %f1, %f53, %f53;
$L__BB0_2:                              // %__nv_log10f.exit
	.loc	1 46 28                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:46:28
	setp.eq.f32 	%p14, %f1, 0f00000000;
	mul.f32 	%f54, %f57, 0f3EDE5BD9;
	.loc	1 48 20                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:48:20
	mul.f32 	%f55, %f54, 0f41200000;
	.loc	1 46 28                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:46:28
	selp.f32 	%f56, 0fFF800000, %f55, %p14;
	.loc	1 49 4                          // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:49:4
	bar.sync 	0;
	.loc	1 50 28                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:50:28
	mul.wide.s32 	%rd8, %r3, 4;
	add.s64 	%rd7, %rd1, %rd8;
	.loc	1 50 40                         // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:50:40
	setp.eq.s32 	%p15, %r2, 0;
	mov.b32 	%r44, %f56;
	and.pred  	%p12, %p15, %p1;
	// begin inline asm
	@%p12 st.global.b32 [ %rd7 + 0 ], { %r44 };
	// end inline asm
	.loc	1 50 4                          // cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xk/cxk2trlff6uufu32qfgogrygdbmlhuboapryjheraezhgggluu26.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 201                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 107
.b8 50
.b8 116
.b8 114
.b8 108
.b8 102
.b8 102
.b8 54
.b8 117
.b8 117
.b8 102
.b8 117
.b8 51
.b8 50
.b8 113
.b8 102
.b8 103
.b8 111
.b8 103
.b8 114
.b8 121
.b8 103
.b8 100
.b8 98
.b8 109
.b8 108
.b8 104
.b8 117
.b8 98
.b8 111
.b8 97
.b8 112
.b8 114
.b8 121
.b8 106
.b8 104
.b8 101
.b8 114
.b8 97
.b8 101
.b8 122
.b8 104
.b8 103
.b8 103
.b8 103
.b8 108
.b8 117
.b8 117
.b8 50
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 108
.b8 111
.b8 103
.b8 49
.b8 48
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 101
.b8 99
.b8 105
.b8 112
.b8 114
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
