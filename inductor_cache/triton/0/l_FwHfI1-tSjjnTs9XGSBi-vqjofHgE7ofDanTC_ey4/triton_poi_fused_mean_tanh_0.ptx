//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mean_tanh_0 // -- Begin function triton_poi_fused_mean_tanh_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_mean_tanh_0
.visible .entry triton_poi_fused_mean_tanh_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_tanh_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_tanh_0_param_1,
	.param .u32 triton_poi_fused_mean_tanh_0_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<117>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_mean_tanh_0_param_0];
$L__tmp0:
	.loc	1 21 28                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:21:28
	// begin inline asm
	mov.u32 %r6, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:21:33
	shl.b32 	%r11, %r6, 4;
	.loc	1 22 36                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:22:36
	mov.u32 	%r1, %tid.x;
	and.b32  	%r12, %r1, 15;
	.loc	1 22 23                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:22:23
	or.b32  	%r13, %r11, %r12;
	.loc	1 23 21                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:23:21
	setp.lt.s32 	%p1, %r13, 16;
	.loc	1 25 30                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:25:30
	mul.wide.s32 	%rd8, %r13, 4;
	add.s64 	%rd3, %rd7, %rd8;
	.loc	1 25 35                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:25:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	.loc	1 26 35                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:26:35
	add.s32 	%r14, %r13, 16;
	.loc	1 26 30                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:26:30
	mul.wide.s32 	%rd9, %r14, 4;
	add.s64 	%rd4, %rd7, %rd9;
	.loc	1 26 40                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:26:40
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r8;
	.loc	1 27 35                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:27:35
	add.s32 	%r15, %r13, 32;
	.loc	1 27 30                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:27:30
	mul.wide.s32 	%rd10, %r15, 4;
	add.s64 	%rd5, %rd7, %rd10;
	.loc	1 27 40                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:27:40
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 28 35                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:28:35
	add.s32 	%r16, %r13, 48;
	.loc	1 28 30                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:28:30
	mul.wide.s32 	%rd11, %r16, 4;
	add.s64 	%rd6, %rd7, %rd11;
	.loc	1 28 40                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:28:40
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 29 26                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:29:26
	abs.ftz.f32 	%f5, %f1;
	setp.ltu.f32 	%p5, %f5, 0f3F19999A;
	mov.f32 	%f96, 0f3F800000;
	mov.f32 	%f97, 0fC0000000;
	mov.f32 	%f108, 0fBD563CAE;
	mov.f32 	%f109, 0f3C80F082;
	mov.f32 	%f110, 0f3E085941;
	mov.f32 	%f111, 0fBEAAA9ED;
	mov.f32 	%f112, 0f00000000;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f29, %f1, %f1;
	fma.rn.ftz.f32 	%f32, %f109, %f29, %f108;
	fma.rn.ftz.f32 	%f34, %f32, %f29, %f110;
	fma.rn.ftz.f32 	%f36, %f34, %f29, %f111;
	fma.rn.ftz.f32 	%f38, %f36, %f29, %f112;
	fma.rn.ftz.f32 	%f113, %f38, %f1, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f23, %f5, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f24, %f23;
	add.f32 	%f22, %f24, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f21,%f22;
	// end inline asm
	fma.rn.ftz.f32 	%f27, %f21, %f97, %f96;
	setp.ge.f32 	%p6, %f5, 0f41102CB4;
	selp.f32 	%f28, 0f3F800000, %f27, %p6;
	mov.b32 	%r17, %f28;
	and.b32  	%r18, %r7, -2147483648;
	or.b32  	%r19, %r18, %r17;
	mov.b32 	%f113, %r19;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:0:0
	mov.b32 	%f3, %r9;
	.loc	1 30 26                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:30:26
	abs.ftz.f32 	%f9, %f2;
	setp.ltu.f32 	%p7, %f9, 0f3F19999A;
	@%p7 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f47, %f2, %f2;
	fma.rn.ftz.f32 	%f50, %f109, %f47, %f108;
	fma.rn.ftz.f32 	%f52, %f50, %f47, %f110;
	fma.rn.ftz.f32 	%f54, %f52, %f47, %f111;
	fma.rn.ftz.f32 	%f56, %f54, %f47, %f112;
	fma.rn.ftz.f32 	%f114, %f56, %f2, %f2;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f41, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f42, %f41;
	add.f32 	%f40, %f42, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f39,%f40;
	// end inline asm
	fma.rn.ftz.f32 	%f45, %f39, %f97, %f96;
	setp.ge.f32 	%p8, %f9, 0f41102CB4;
	selp.f32 	%f46, 0f3F800000, %f45, %p8;
	mov.b32 	%r20, %f46;
	and.b32  	%r21, %r8, -2147483648;
	or.b32  	%r22, %r21, %r20;
	mov.b32 	%f114, %r22;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 0                           // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:0:0
	mov.b32 	%f4, %r10;
	.loc	1 32 26                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:32:26
	abs.ftz.f32 	%f13, %f3;
	setp.ltu.f32 	%p9, %f13, 0f3F19999A;
	@%p9 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i27
	mul.f32 	%f65, %f3, %f3;
	fma.rn.ftz.f32 	%f68, %f109, %f65, %f108;
	fma.rn.ftz.f32 	%f70, %f68, %f65, %f110;
	fma.rn.ftz.f32 	%f72, %f70, %f65, %f111;
	fma.rn.ftz.f32 	%f74, %f72, %f65, %f112;
	fma.rn.ftz.f32 	%f115, %f74, %f3, %f3;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i22
	mul.f32 	%f59, %f13, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f60, %f59;
	add.f32 	%f58, %f60, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f57,%f58;
	// end inline asm
	fma.rn.ftz.f32 	%f63, %f57, %f97, %f96;
	setp.ge.f32 	%p10, %f13, 0f41102CB4;
	selp.f32 	%f64, 0f3F800000, %f63, %p10;
	mov.b32 	%r23, %f64;
	and.b32  	%r24, %r9, -2147483648;
	or.b32  	%r25, %r24, %r23;
	mov.b32 	%f115, %r25;
$L__BB0_9:                              // %__nv_tanhf.exit38
	.loc	1 0 26                          // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:0:26
	ld.param.u64 	%rd2, [triton_poi_fused_mean_tanh_0_param_1];
	cvt.s64.s32 	%rd1, %r13;
	.loc	1 34 26                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:34:26
	abs.ftz.f32 	%f17, %f4;
	setp.ltu.f32 	%p11, %f17, 0f3F19999A;
	@%p11 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i46
	mul.f32 	%f83, %f4, %f4;
	fma.rn.ftz.f32 	%f86, %f109, %f83, %f108;
	fma.rn.ftz.f32 	%f88, %f86, %f83, %f110;
	fma.rn.ftz.f32 	%f90, %f88, %f83, %f111;
	fma.rn.ftz.f32 	%f92, %f90, %f83, %f112;
	fma.rn.ftz.f32 	%f116, %f92, %f4, %f4;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i41
	mul.f32 	%f77, %f17, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f78, %f77;
	add.f32 	%f76, %f78, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f75,%f76;
	// end inline asm
	fma.rn.ftz.f32 	%f81, %f75, %f97, %f96;
	setp.ge.f32 	%p12, %f17, 0f41102CB4;
	selp.f32 	%f82, 0f3F800000, %f81, %p12;
	mov.b32 	%r26, %f82;
	and.b32  	%r27, %r10, -2147483648;
	or.b32  	%r28, %r27, %r26;
	mov.b32 	%f116, %r28;
$L__BB0_12:                             // %__nv_tanhf.exit57
	.loc	1 0 26                          // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:0:26
	cvt.u32.u64 	%r33, %rd1;
	.loc	1 23 21                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:23:21
	setp.lt.s32 	%p14, %r33, 16;
	.loc	1 31 18                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:31:18
	add.f32 	%f93, %f113, %f114;
	.loc	1 33 18                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:33:18
	add.f32 	%f94, %f93, %f115;
	.loc	1 22 36                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:22:36
	and.b32  	%r34, %r1, 16;
	.loc	1 35 19                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:35:19
	add.f32 	%f95, %f94, %f116;
	.loc	1 37 20                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:37:20
	mov.b32 	%r30, %f95;
	mov.b32 	%r31, 1082130432;
	// begin inline asm
	div.full.f32 %r32, %r30, %r31;
	// end inline asm
	.loc	1 38 25                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:38:25
	shl.b64 	%rd13, %rd1, 2;
	add.s64 	%rd12, %rd2, %rd13;
	.loc	1 38 37                         // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:38:37
	setp.eq.s32 	%p15, %r34, 0;
	and.pred  	%p13, %p15, %p14;
	// begin inline asm
	@%p13 st.global.b32 [ %rd12 + 0 ], { %r32 };
	// end inline asm
	.loc	1 38 4                          // c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5y/c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 121
.b8 53
.b8 104
.b8 106
.b8 55
.b8 103
.b8 98
.b8 118
.b8 120
.b8 107
.b8 101
.b8 116
.b8 116
.b8 51
.b8 112
.b8 116
.b8 55
.b8 110
.b8 104
.b8 119
.b8 104
.b8 108
.b8 118
.b8 116
.b8 102
.b8 103
.b8 101
.b8 101
.b8 54
.b8 116
.b8 113
.b8 119
.b8 114
.b8 100
.b8 50
.b8 121
.b8 120
.b8 109
.b8 121
.b8 120
.b8 109
.b8 52
.b8 98
.b8 102
.b8 110
.b8 53
.b8 97
.b8 120
.b8 115
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
