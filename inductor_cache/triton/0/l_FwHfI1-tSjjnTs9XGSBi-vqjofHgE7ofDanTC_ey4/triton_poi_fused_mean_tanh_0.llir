; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_mean_tanh_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 16, !dbg !14
  %10 = sext i32 %8 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 %9) #3, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = add i32 %8, 16, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %9) #3, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = add i32 %8, 32, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %9) #3, !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = add i32 %8, 48, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %9) #3, !dbg !25
  %28 = bitcast i32 %27 to float, !dbg !25
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not.i = icmp eq i32 %29, 0, !dbg !26
  %30 = tail call float @llvm.nvvm.fabs.ftz.f(float %13) #3, !dbg !26
  %31 = tail call float @llvm.nvvm.fabs.f(float %13) #3, !dbg !26
  %.01.i = select i1 %.not.i, float %31, float %30, !dbg !26
  %32 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !26
  br i1 %32, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !26

__internal_fmad.exit1.i:                          ; preds = %3
  %33 = fmul float %.01.i, 0x4007154760000000, !dbg !26
  %34 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %33) #3, !dbg !26
  %35 = fadd float %34, 1.000000e+00, !dbg !26
  %36 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %35) #4, !dbg !26, !srcloc !27
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not6.i = icmp eq i32 %37, 0, !dbg !26
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %36, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %36, float -2.000000e+00, float 1.000000e+00) #3, !dbg !26
  %.03.i = select i1 %.not6.i, float %39, float %38, !dbg !26
  %40 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !26
  %s.0.i = select i1 %40, float 1.000000e+00, float %.03.i, !dbg !26
  %41 = bitcast float %s.0.i to i32, !dbg !26
  %42 = and i32 %12, -2147483648, !dbg !26
  %43 = or i32 %42, %41, !dbg !26
  %44 = bitcast i32 %43 to float, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__internal_fmad.exit3.i:                          ; preds = %3
  %45 = fmul float %13, %13, !dbg !26
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not1.i = icmp eq i32 %46, 0, !dbg !26
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %45, float 0xBFAAC795C0000000) #3, !dbg !26
  %48 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %45, float 0xBFAAC795C0000000) #3, !dbg !26
  %.06.i = select i1 %.not1.i, float %48, float %47, !dbg !26
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not2.i = icmp eq i32 %49, 0, !dbg !26
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %45, float 0x3FC10B2820000000) #3, !dbg !26
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %45, float 0x3FC10B2820000000) #3, !dbg !26
  %.05.i = select i1 %.not2.i, float %51, float %50, !dbg !26
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not3.i = icmp eq i32 %52, 0, !dbg !26
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %45, float 0xBFD5553DA0000000) #3, !dbg !26
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %45, float 0xBFD5553DA0000000) #3, !dbg !26
  %.0.i = select i1 %.not3.i, float %54, float %53, !dbg !26
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not4.i = icmp eq i32 %55, 0, !dbg !26
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %45, float 0.000000e+00) #3, !dbg !26
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %45, float 0.000000e+00) #3, !dbg !26
  %.04.i = select i1 %.not4.i, float %57, float %56, !dbg !26
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !26
  %.not5.i = icmp eq i32 %58, 0, !dbg !26
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %13, float %13) #3, !dbg !26
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %13, float %13) #3, !dbg !26
  %.02.i = select i1 %.not5.i, float %60, float %59, !dbg !26
  br label %__nv_tanhf.exit, !dbg !26

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %44, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !26
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i1 = icmp eq i32 %61, 0, !dbg !28
  %62 = tail call float @llvm.nvvm.fabs.ftz.f(float %18) #3, !dbg !28
  %63 = tail call float @llvm.nvvm.fabs.f(float %18) #3, !dbg !28
  %.01.i2 = select i1 %.not.i1, float %63, float %62, !dbg !28
  %64 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !28
  br i1 %64, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !28

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %65 = fmul float %.01.i2, 0x4007154760000000, !dbg !28
  %66 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %65) #3, !dbg !28
  %67 = fadd float %66, 1.000000e+00, !dbg !28
  %68 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %67) #4, !dbg !28, !srcloc !27
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i4 = icmp eq i32 %69, 0, !dbg !28
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %.03.i5 = select i1 %.not6.i4, float %71, float %70, !dbg !28
  %72 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !28
  %s.0.i6 = select i1 %72, float 1.000000e+00, float %.03.i5, !dbg !28
  %73 = bitcast float %s.0.i6 to i32, !dbg !28
  %74 = and i32 %17, -2147483648, !dbg !28
  %75 = or i32 %74, %73, !dbg !28
  %76 = bitcast i32 %75 to float, !dbg !28
  br label %__nv_tanhf.exit19, !dbg !28

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %77 = fmul float %18, %18, !dbg !28
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i9 = icmp eq i32 %78, 0, !dbg !28
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %77, float 0xBFAAC795C0000000) #3, !dbg !28
  %80 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %77, float 0xBFAAC795C0000000) #3, !dbg !28
  %.06.i10 = select i1 %.not1.i9, float %80, float %79, !dbg !28
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i11 = icmp eq i32 %81, 0, !dbg !28
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %77, float 0x3FC10B2820000000) #3, !dbg !28
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %77, float 0x3FC10B2820000000) #3, !dbg !28
  %.05.i12 = select i1 %.not2.i11, float %83, float %82, !dbg !28
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i13 = icmp eq i32 %84, 0, !dbg !28
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %77, float 0xBFD5553DA0000000) #3, !dbg !28
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %77, float 0xBFD5553DA0000000) #3, !dbg !28
  %.0.i14 = select i1 %.not3.i13, float %86, float %85, !dbg !28
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i15 = icmp eq i32 %87, 0, !dbg !28
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %77, float 0.000000e+00) #3, !dbg !28
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %77, float 0.000000e+00) #3, !dbg !28
  %.04.i16 = select i1 %.not4.i15, float %89, float %88, !dbg !28
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i17 = icmp eq i32 %90, 0, !dbg !28
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %18, float %18) #3, !dbg !28
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %18, float %18) #3, !dbg !28
  %.02.i18 = select i1 %.not5.i17, float %92, float %91, !dbg !28
  br label %__nv_tanhf.exit19, !dbg !28

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %76, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !28
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i20 = icmp eq i32 %93, 0, !dbg !29
  %94 = tail call float @llvm.nvvm.fabs.ftz.f(float %23) #3, !dbg !29
  %95 = tail call float @llvm.nvvm.fabs.f(float %23) #3, !dbg !29
  %.01.i21 = select i1 %.not.i20, float %95, float %94, !dbg !29
  %96 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !29
  br i1 %96, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !29

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %97 = fmul float %.01.i21, 0x4007154760000000, !dbg !29
  %98 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %97) #3, !dbg !29
  %99 = fadd float %98, 1.000000e+00, !dbg !29
  %100 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %99) #4, !dbg !29, !srcloc !27
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not6.i23 = icmp eq i32 %101, 0, !dbg !29
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %100, float -2.000000e+00, float 1.000000e+00) #3, !dbg !29
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %100, float -2.000000e+00, float 1.000000e+00) #3, !dbg !29
  %.03.i24 = select i1 %.not6.i23, float %103, float %102, !dbg !29
  %104 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !29
  %s.0.i25 = select i1 %104, float 1.000000e+00, float %.03.i24, !dbg !29
  %105 = bitcast float %s.0.i25 to i32, !dbg !29
  %106 = and i32 %22, -2147483648, !dbg !29
  %107 = or i32 %106, %105, !dbg !29
  %108 = bitcast i32 %107 to float, !dbg !29
  br label %__nv_tanhf.exit38, !dbg !29

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %109 = fmul float %23, %23, !dbg !29
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not1.i28 = icmp eq i32 %110, 0, !dbg !29
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %109, float 0xBFAAC795C0000000) #3, !dbg !29
  %112 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %109, float 0xBFAAC795C0000000) #3, !dbg !29
  %.06.i29 = select i1 %.not1.i28, float %112, float %111, !dbg !29
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not2.i30 = icmp eq i32 %113, 0, !dbg !29
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %109, float 0x3FC10B2820000000) #3, !dbg !29
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %109, float 0x3FC10B2820000000) #3, !dbg !29
  %.05.i31 = select i1 %.not2.i30, float %115, float %114, !dbg !29
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not3.i32 = icmp eq i32 %116, 0, !dbg !29
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %109, float 0xBFD5553DA0000000) #3, !dbg !29
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %109, float 0xBFD5553DA0000000) #3, !dbg !29
  %.0.i33 = select i1 %.not3.i32, float %118, float %117, !dbg !29
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not4.i34 = icmp eq i32 %119, 0, !dbg !29
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %109, float 0.000000e+00) #3, !dbg !29
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %109, float 0.000000e+00) #3, !dbg !29
  %.04.i35 = select i1 %.not4.i34, float %121, float %120, !dbg !29
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not5.i36 = icmp eq i32 %122, 0, !dbg !29
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %23, float %23) #3, !dbg !29
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %23, float %23) #3, !dbg !29
  %.02.i37 = select i1 %.not5.i36, float %124, float %123, !dbg !29
  br label %__nv_tanhf.exit38, !dbg !29

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %108, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !29
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i39 = icmp eq i32 %125, 0, !dbg !30
  %126 = tail call float @llvm.nvvm.fabs.ftz.f(float %28) #3, !dbg !30
  %127 = tail call float @llvm.nvvm.fabs.f(float %28) #3, !dbg !30
  %.01.i40 = select i1 %.not.i39, float %127, float %126, !dbg !30
  %128 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !30
  br i1 %128, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !30

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %129 = fmul float %.01.i40, 0x4007154760000000, !dbg !30
  %130 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %129) #3, !dbg !30
  %131 = fadd float %130, 1.000000e+00, !dbg !30
  %132 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %131) #4, !dbg !30, !srcloc !27
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i42 = icmp eq i32 %133, 0, !dbg !30
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %132, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %132, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i43 = select i1 %.not6.i42, float %135, float %134, !dbg !30
  %136 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !30
  %s.0.i44 = select i1 %136, float 1.000000e+00, float %.03.i43, !dbg !30
  %137 = bitcast float %s.0.i44 to i32, !dbg !30
  %138 = and i32 %27, -2147483648, !dbg !30
  %139 = or i32 %138, %137, !dbg !30
  %140 = bitcast i32 %139 to float, !dbg !30
  br label %__nv_tanhf.exit57, !dbg !30

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %141 = fmul float %28, %28, !dbg !30
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i47 = icmp eq i32 %142, 0, !dbg !30
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %141, float 0xBFAAC795C0000000) #3, !dbg !30
  %144 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %141, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i48 = select i1 %.not1.i47, float %144, float %143, !dbg !30
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i49 = icmp eq i32 %145, 0, !dbg !30
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %141, float 0x3FC10B2820000000) #3, !dbg !30
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %141, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i50 = select i1 %.not2.i49, float %147, float %146, !dbg !30
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i51 = icmp eq i32 %148, 0, !dbg !30
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %141, float 0xBFD5553DA0000000) #3, !dbg !30
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %141, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i52 = select i1 %.not3.i51, float %150, float %149, !dbg !30
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i53 = icmp eq i32 %151, 0, !dbg !30
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %141, float 0.000000e+00) #3, !dbg !30
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %141, float 0.000000e+00) #3, !dbg !30
  %.04.i54 = select i1 %.not4.i53, float %153, float %152, !dbg !30
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i55 = icmp eq i32 %154, 0, !dbg !30
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %28, float %28) #3, !dbg !30
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %28, float %28) #3, !dbg !30
  %.02.i56 = select i1 %.not5.i55, float %156, float %155, !dbg !30
  br label %__nv_tanhf.exit57, !dbg !30

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %140, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !30
  %157 = fadd float %s.1.i, %s.1.i7, !dbg !31
  %158 = fadd float %157, %s.1.i26, !dbg !32
  %159 = and i32 %6, 16, !dbg !12
  %160 = fadd float %158, %s.1.i45, !dbg !33
  %161 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %160, float 4.000000e+00) #3, !dbg !34
  %162 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !35
  %163 = icmp eq i32 %159, 0, !dbg !36
  %164 = bitcast float %161 to i32, !dbg !36
  %165 = and i1 %163, %9, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %164, ptr addrspace(1) %162, i1 %165) #3, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5y5hj7gbvxkett3pt7nhwhlvtfgee6tqwrd2yxmyxm4bfn5axsx.py", directory: "inductor_cache/5y")
!4 = !{ptr @triton_poi_fused_mean_tanh_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_tanh_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_tanh_0", linkageName: "triton_poi_fused_mean_tanh_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 40, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 40, scope: !7)
!23 = !DILocation(line: 28, column: 35, scope: !7)
!24 = !DILocation(line: 28, column: 30, scope: !7)
!25 = !DILocation(line: 28, column: 40, scope: !7)
!26 = !DILocation(line: 29, column: 26, scope: !7)
!27 = !{i32 21046}
!28 = !DILocation(line: 30, column: 26, scope: !7)
!29 = !DILocation(line: 32, column: 26, scope: !7)
!30 = !DILocation(line: 34, column: 26, scope: !7)
!31 = !DILocation(line: 31, column: 18, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 19, scope: !7)
!34 = !DILocation(line: 37, column: 20, scope: !7)
!35 = !DILocation(line: 38, column: 25, scope: !7)
!36 = !DILocation(line: 38, column: 37, scope: !7)
!37 = !DILocation(line: 38, column: 4, scope: !7)
