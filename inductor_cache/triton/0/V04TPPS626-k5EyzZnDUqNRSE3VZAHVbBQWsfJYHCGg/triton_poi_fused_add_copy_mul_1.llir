; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_copy_mul_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 1072812, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 89401, !dbg !15
  %.frozen3 = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen3, 89401, !dbg !15
  %.lhs.trunc = trunc nsw i32 %13 to i16, !dbg !16
  %15 = srem i16 %.lhs.trunc, 3, !dbg !16
  %.lhs.trunc1 = trunc nsw i32 %14 to i16, !dbg !16
  %16 = srem i16 %.lhs.trunc1, 3, !dbg !16
  %17 = mul i32 %13, 89401, !dbg !17
  %.decomposed = sub i32 %.frozen, %17, !dbg !17
  %18 = mul i32 %14, 89401, !dbg !17
  %.decomposed4 = sub i32 %.frozen3, %18, !dbg !17
  %19 = sdiv i32 %10, 268203, !dbg !18
  %20 = sdiv i32 %11, 268203, !dbg !18
  %21 = mul nsw i32 %19, 268224, !dbg !19
  %22 = mul nsw i32 %20, 268224, !dbg !19
  %23 = add i32 %21, %.decomposed, !dbg !20
  %24 = add i32 %22, %.decomposed4, !dbg !20
  %25 = sext i32 %23 to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !21
  %27 = sext i32 %24 to i64, !dbg !21
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !23
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %12) #1, !dbg !24
  %36 = bitcast i32 %35 to float, !dbg !24
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %12) #1, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = add i32 %23, 89408, !dbg !25
  %40 = add i32 %24, 89408, !dbg !25
  %41 = sext i32 %39 to i64, !dbg !26
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !26
  %43 = sext i32 %40 to i64, !dbg !26
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !26
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 %12) #1, !dbg !27
  %46 = bitcast i32 %45 to float, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #1, !dbg !27
  %48 = bitcast i32 %47 to float, !dbg !27
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !28
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !28
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %12) #1, !dbg !29
  %52 = bitcast i32 %51 to float, !dbg !29
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %12) #1, !dbg !29
  %54 = bitcast i32 %53 to float, !dbg !29
  %55 = mul i32 %13, 89408, !dbg !30
  %56 = mul i32 %14, 89408, !dbg !30
  %57 = add i32 %55, %.decomposed, !dbg !31
  %58 = add i32 %56, %.decomposed4, !dbg !31
  %59 = sext i32 %57 to i64, !dbg !32
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !32
  %61 = sext i32 %58 to i64, !dbg !32
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !32
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %12) #1, !dbg !33
  %64 = bitcast i32 %63 to float, !dbg !33
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %12) #1, !dbg !33
  %66 = bitcast i32 %65 to float, !dbg !33
  %67 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !34
  %68 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !34
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %12) #1, !dbg !35
  %70 = bitcast i32 %69 to float, !dbg !35
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %12) #1, !dbg !35
  %72 = bitcast i32 %71 to float, !dbg !35
  %73 = icmp eq i16 %15, 1, !dbg !36
  %74 = icmp eq i16 %16, 1, !dbg !36
  %75 = fadd float %30, %36, !dbg !37
  %76 = fadd float %32, %38, !dbg !37
  %77 = fmul float %75, 0x3FDD4FDF40000000, !dbg !38
  %78 = fmul float %76, 0x3FDD4FDF40000000, !dbg !38
  %79 = fadd float %77, 0xBF9EB851E0000000, !dbg !39
  %80 = fadd float %78, 0xBF9EB851E0000000, !dbg !39
  %81 = fadd float %46, %52, !dbg !40
  %82 = fadd float %48, %54, !dbg !40
  %83 = fmul float %81, 0x3FDCAC0840000000, !dbg !41
  %84 = fmul float %82, 0x3FDCAC0840000000, !dbg !41
  %85 = fadd float %83, 0xBFB6872B00000000, !dbg !42
  %86 = fadd float %84, 0xBFB6872B00000000, !dbg !42
  %87 = icmp eq i16 %15, 0, !dbg !43
  %88 = icmp eq i16 %16, 0, !dbg !43
  %89 = fadd float %64, %70, !dbg !44
  %90 = fadd float %66, %72, !dbg !44
  %91 = select i1 %87, float %79, float %89, !dbg !45
  %92 = select i1 %88, float %80, float %90, !dbg !45
  %93 = select i1 %73, float %85, float %91, !dbg !46
  %94 = select i1 %74, float %86, float %92, !dbg !46
  %95 = sext i32 %10 to i64, !dbg !47
  %96 = getelementptr float, ptr addrspace(1) %2, i64 %95, !dbg !47
  %97 = bitcast float %93 to i32, !dbg !48
  %98 = bitcast float %94 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %97, i32 %98, ptr addrspace(1) %96, i1 %12) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czsjkplu4vuwjvbmqo4opacr5o5quwojzou6zsvommpfwnrzmygz.py", directory: "inductor_cache/zs")
!4 = !{ptr @triton_poi_fused_add_copy_mul_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_copy_mul_1, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_copy_mul_1", linkageName: "triton_poi_fused_add_copy_mul_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 29, column: 42, scope: !7)
!20 = !DILocation(line: 29, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 47, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 47, scope: !7)
!25 = !DILocation(line: 31, column: 44, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 56, scope: !7)
!28 = !DILocation(line: 32, column: 31, scope: !7)
!29 = !DILocation(line: 32, column: 56, scope: !7)
!30 = !DILocation(line: 33, column: 42, scope: !7)
!31 = !DILocation(line: 33, column: 36, scope: !7)
!32 = !DILocation(line: 33, column: 31, scope: !7)
!33 = !DILocation(line: 33, column: 47, scope: !7)
!34 = !DILocation(line: 34, column: 31, scope: !7)
!35 = !DILocation(line: 34, column: 47, scope: !7)
!36 = !DILocation(line: 37, column: 19, scope: !7)
!37 = !DILocation(line: 40, column: 18, scope: !7)
!38 = !DILocation(line: 42, column: 18, scope: !7)
!39 = !DILocation(line: 44, column: 19, scope: !7)
!40 = !DILocation(line: 45, column: 20, scope: !7)
!41 = !DILocation(line: 48, column: 20, scope: !7)
!42 = !DILocation(line: 50, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 20, scope: !7)
!44 = !DILocation(line: 52, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 35, scope: !7)
!46 = !DILocation(line: 54, column: 34, scope: !7)
!47 = !DILocation(line: 55, column: 25, scope: !7)
!48 = !DILocation(line: 55, column: 37, scope: !7)
!49 = !DILocation(line: 55, column: 4, scope: !7)
