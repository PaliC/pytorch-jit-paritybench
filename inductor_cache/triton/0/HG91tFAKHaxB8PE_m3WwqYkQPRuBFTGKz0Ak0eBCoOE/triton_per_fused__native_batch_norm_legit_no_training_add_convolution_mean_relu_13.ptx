//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_9,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_10,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_11,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_12,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_13
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd16, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_0];
	ld.param.u64 	%rd17, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_1];
$L__tmp0:
	.loc	1 23 28                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:25:21
	setp.lt.s32 	%p1, %r1, 256;
	ld.param.u64 	%rd18, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_2];
	ld.param.u64 	%rd19, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_3];
	.loc	1 26 34                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:26:34
	mov.u32 	%r29, %tid.x;
	and.b32  	%r30, %r29, 15;
	ld.param.u64 	%rd20, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_4];
	.loc	1 31 19                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:31:19
	shr.s32 	%r31, %r1, 31;
	shr.u32 	%r32, %r31, 26;
	add.s32 	%r33, %r1, %r32;
	and.b32  	%r34, %r33, -64;
	sub.s32 	%r35, %r1, %r34;
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_5];
	.loc	1 32 42                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:32:42
	shl.b32 	%r36, %r1, 4;
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_6];
	.loc	1 32 39                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:32:39
	or.b32  	%r37, %r36, %r30;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_7];
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_8];
	.loc	1 32 34                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:32:34
	mul.wide.s32 	%rd25, %r37, 4;
	add.s64 	%rd1, %rd16, %rd25;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_9];
	mov.b32 	%r3, 0;
	.loc	1 32 47                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_10];
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13_param_11];
	.loc	1 33 30                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:33:30
	mul.wide.s32 	%rd29, %r35, 4;
	add.s64 	%rd3, %rd18, %rd29;
	.loc	1 33 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:34:30
	add.s64 	%rd5, %rd19, %rd29;
	.loc	1 34 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:34:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:35:30
	add.s64 	%rd6, %rd20, %rd29;
	.loc	1 35 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:35:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	.loc	1 36 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:36:31
	add.s64 	%rd7, %rd21, %rd29;
	.loc	1 36 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:36:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:37:31
	add.s64 	%rd8, %rd22, %rd29;
	.loc	1 37 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:37:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:38:31
	add.s64 	%rd9, %rd23, %rd25;
	.loc	1 38 44                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:38:44
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r12, %r3;
	// end inline asm
	.loc	1 39 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:39:31
	add.s64 	%rd10, %rd24, %rd29;
	.loc	1 39 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:39:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:40:31
	add.s64 	%rd11, %rd26, %rd29;
	.loc	1 40 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:40:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r15;
	.loc	1 41 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:41:31
	add.s64 	%rd12, %rd27, %rd29;
	.loc	1 41 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:41:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 42 31                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:42:31
	add.s64 	%rd13, %rd28, %rd29;
	.loc	1 42 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:42:36
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 46 18                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:46:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	.loc	1 47 26                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:47:26
	sqrt.approx.ftz.f32 	%f4, %f3;
	.loc	1 49 19                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:49:19
	mov.b32 	%r20, %f4;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f5, %r18;
	.loc	1 56 20                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:56:20
	add.f32 	%f6, %f2, 0f3727C5AC;
	.loc	1 57 27                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:57:27
	sqrt.approx.ftz.f32 	%f7, %f6;
	.loc	1 38 44                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:38:44
	mov.b32 	%f8, %r12;
	.loc	1 34 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:34:35
	mov.b32 	%f9, %r14;
	mov.b32 	%f10, %r8;
	.loc	1 32 47                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:32:47
	mov.b32 	%f11, %r2;
	.loc	1 33 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:33:35
	mov.b32 	%f12, %r6;
	.loc	1 43 18                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:43:18
	add.f32 	%f13, %f11, %f12;
	.loc	1 36 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:36:36
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r10;
	.loc	1 37 36                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:37:36
	mov.b32 	%f16, %r17;
	mov.b32 	%f17, %r11;
	.loc	1 32 47                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:32:47
	mov.b32 	%f18, %r4;
	.loc	1 33 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:33:35
	mov.b32 	%f19, %r7;
	.loc	1 43 18                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:43:18
	add.f32 	%f20, %f18, %f19;
	.loc	1 58 19                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:58:19
	mov.b32 	%r23, %f7;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f21, %r21;
	.loc	1 44 18                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:44:18
	sub.f32 	%f22, %f13, %f10;
	sub.f32 	%f23, %f8, %f9;
	.loc	1 52 19                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:52:19
	mul.f32 	%f24, %f23, %f21;
	mul.f32 	%f25, %f22, %f5;
	.loc	1 54 20                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:54:20
	fma.rn.f32 	%f26, %f25, %f15, %f17;
	fma.rn.f32 	%f27, %f24, %f14, %f16;
	.loc	1 63 20                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:63:20
	add.f32 	%f28, %f26, %f27;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p19, %f28, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f29, 0f00000000, %f28, %p19;
$L__tmp2:
	.loc	1 67 35                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:67:35
	selp.f32 	%f30, %f29, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f30;
	shfl.sync.bfly.b32	%r39, %r38, 8, 31, -1;
	mov.b32 	%f31, %r39;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f32;
	shfl.sync.bfly.b32	%r41, %r40, 4, 31, -1;
	mov.b32 	%f33, %r41;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f34;
	shfl.sync.bfly.b32	%r43, %r42, 2, 31, -1;
	mov.b32 	%f35, %r43;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f36;
	shfl.sync.bfly.b32	%r45, %r44, 1, 31, -1;
	mov.b32 	%f37, %r45;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
$L__tmp4:
	.loc	1 70 20                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:70:20
	mov.b32 	%r25, %f38;
	mov.b32 	%r26, 1098907648;
	// begin inline asm
	div.full.f32 %r28, %r25, %r26;
	// end inline asm
	.loc	1 71 47                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:71:47
	and.b32  	%r46, %r29, 48;
	setp.eq.s32 	%p20, %r46, 0;
	mov.b32 	%r27, %f20;
	and.pred  	%p17, %p20, %p1;
	// begin inline asm
	@%p17 st.global.b32 [ %rd1 + 0 ], { %r27 };
	// end inline asm
	.loc	1 72 4                          // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:72:4
	bar.sync 	0;
	.loc	1 73 28                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:73:28
	mul.wide.s32 	%rd30, %r1, 4;
	add.s64 	%rd15, %rd17, %rd30;
	.loc	1 73 40                         // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:73:40
	and.b32  	%r47, %r29, 63;
	setp.eq.s32 	%p21, %r47, 0;
	and.pred  	%p18, %p21, %p1;
	// begin inline asm
	@%p18 st.global.b32 [ %rd15 + 0 ], { %r28 };
	// end inline asm
	.loc	1 73 4                          // cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py:73:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 251                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 121
.b8 115
.b8 118
.b8 117
.b8 110
.b8 117
.b8 50
.b8 103
.b8 107
.b8 103
.b8 98
.b8 50
.b8 107
.b8 53
.b8 121
.b8 111
.b8 120
.b8 52
.b8 107
.b8 110
.b8 117
.b8 120
.b8 120
.b8 106
.b8 117
.b8 113
.b8 114
.b8 111
.b8 118
.b8 99
.b8 103
.b8 110
.b8 52
.b8 102
.b8 53
.b8 116
.b8 102
.b8 108
.b8 100
.b8 110
.b8 53
.b8 115
.b8 97
.b8 106
.b8 103
.b8 53
.b8 99
.b8 107
.b8 101
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x55 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb8:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcd:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe5:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
