#loc = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0)
#loc1 = loc(unknown)
#loc52 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":68:26)
#loc64 = loc(callsite(#loc1 at #loc52))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_no_training_add_convolution_mean_relu_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %0, %c64_i32 : i32 loc(#loc6)
    %6 = arith.muli %0, %c16_i32 : i32 loc(#loc7)
    %7 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc8)
    %8 = arith.addi %4, %7 : tensor<1x16xi32> loc(#loc8)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc9)
    %11 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc10)
    %12 = tt.load %10, %11, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %arg2, %5 : !tt.ptr<f32>, i32 loc(#loc11)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.addptr %arg3, %5 : !tt.ptr<f32>, i32 loc(#loc13)
    %17 = tt.splat %16 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %18 = tt.load %17, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.addptr %arg4, %5 : !tt.ptr<f32>, i32 loc(#loc15)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc15)
    %21 = tt.load %20, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.addptr %arg5, %5 : !tt.ptr<f32>, i32 loc(#loc17)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %24 = tt.load %23, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %25 = tt.addptr %arg6, %5 : !tt.ptr<f32>, i32 loc(#loc19)
    %26 = tt.splat %25 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %27 = tt.load %26, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %28 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc21)
    %29 = tt.addptr %28, %8 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc21)
    %30 = tt.load %29, %11, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %31 = tt.addptr %arg8, %5 : !tt.ptr<f32>, i32 loc(#loc23)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    %33 = tt.load %32, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    %34 = tt.addptr %arg9, %5 : !tt.ptr<f32>, i32 loc(#loc25)
    %35 = tt.splat %34 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    %36 = tt.load %35, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    %37 = tt.addptr %arg10, %5 : !tt.ptr<f32>, i32 loc(#loc27)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    %39 = tt.load %38, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    %40 = tt.addptr %arg11, %5 : !tt.ptr<f32>, i32 loc(#loc29)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    %42 = tt.load %41, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc30)
    %43 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc31)
    %44 = arith.addf %12, %43 : tensor<1x16xf32> loc(#loc31)
    %45 = tt.broadcast %18 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc32)
    %46 = arith.subf %44, %45 : tensor<1x16xf32> loc(#loc32)
    %47 = arith.addf %21, %cst_1 : tensor<1x1xf32> loc(#loc33)
    %48 = tt.extern_elementwise %47 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc34)
    %49 = arith.divf %cst, %48 : tensor<1x1xf32> loc(#loc35)
    %50 = tt.broadcast %49 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc36)
    %51 = arith.mulf %46, %50 : tensor<1x16xf32> loc(#loc36)
    %52 = tt.broadcast %24 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc37)
    %53 = arith.mulf %51, %52 : tensor<1x16xf32> loc(#loc37)
    %54 = tt.broadcast %27 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc38)
    %55 = arith.addf %53, %54 : tensor<1x16xf32> loc(#loc38)
    %56 = tt.broadcast %33 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc39)
    %57 = arith.subf %30, %56 : tensor<1x16xf32> loc(#loc39)
    %58 = arith.addf %36, %cst_1 : tensor<1x1xf32> loc(#loc40)
    %59 = tt.extern_elementwise %58 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc41)
    %60 = arith.divf %cst, %59 : tensor<1x1xf32> loc(#loc42)
    %61 = tt.broadcast %60 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc43)
    %62 = arith.mulf %57, %61 : tensor<1x16xf32> loc(#loc43)
    %63 = tt.broadcast %39 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc44)
    %64 = arith.mulf %62, %63 : tensor<1x16xf32> loc(#loc44)
    %65 = tt.broadcast %42 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc45)
    %66 = arith.addf %64, %65 : tensor<1x16xf32> loc(#loc45)
    %67 = arith.addf %55, %66 : tensor<1x16xf32> loc(#loc46)
    %68 = arith.cmpf ogt, %cst_2, %67 : tensor<1x16xf32> loc(#loc61)
    %69 = arith.select %68, %cst_2, %67 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc62)
    %70 = arith.select %11, %69, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc50)
    %71 = "tt.reduce"(%70) <{axis = 1 : i32}> ({
    ^bb0(%arg14: f32 loc(callsite(#loc1 at #loc52)), %arg15: f32 loc(callsite(#loc1 at #loc52))):
      %76 = arith.addf %arg14, %arg15 : f32 loc(#loc66)
      tt.reduce.return %76 : f32 loc(#loc63)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc63)
    %72 = tt.expand_dims %71 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc54)
    %73 = arith.divf %72, %cst_0 : tensor<1x1xf32> loc(#loc55)
    tt.store %10, %44, %11 : tensor<1x16x!tt.ptr<f32>> loc(#loc56)
    gpu.barrier loc(#loc57)
    %74 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc58)
    %75 = tt.splat %74 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc58)
    tt.store %75, %73, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":23:28)
#loc3 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":25:21)
#loc4 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":26:26)
#loc5 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":26:34)
#loc6 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":31:19)
#loc7 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":32:42)
#loc8 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":32:39)
#loc9 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":32:34)
#loc10 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":32:47)
#loc11 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":33:30)
#loc12 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":33:35)
#loc13 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":34:30)
#loc14 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":34:35)
#loc15 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":35:30)
#loc16 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":35:35)
#loc17 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":36:31)
#loc18 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":36:36)
#loc19 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":37:31)
#loc20 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":37:36)
#loc21 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":38:31)
#loc22 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":38:44)
#loc23 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":39:31)
#loc24 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":39:36)
#loc25 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":40:31)
#loc26 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":40:36)
#loc27 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":41:31)
#loc28 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":41:36)
#loc29 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":42:31)
#loc30 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":42:36)
#loc31 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":43:18)
#loc32 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":44:18)
#loc33 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":46:18)
#loc34 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":47:26)
#loc35 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":49:19)
#loc36 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":52:19)
#loc37 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":53:20)
#loc38 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":54:20)
#loc39 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":55:20)
#loc40 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":56:20)
#loc41 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":57:27)
#loc42 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":58:19)
#loc43 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":60:20)
#loc44 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":61:20)
#loc45 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":62:20)
#loc46 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":63:20)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc48 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":65:42)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc50 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":67:35)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc54 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":68:29)
#loc55 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":70:20)
#loc56 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":71:47)
#loc57 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":72:4)
#loc58 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":73:28)
#loc59 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":73:40)
#loc60 = loc("inductor_cache/qy/cqysvunu2gkgb2k5yox4knuxxjuqrovcgn4f5tfldn5sajg5cked.py":73:4)
#loc61 = loc(callsite(#loc47 at #loc48))
#loc62 = loc(callsite(#loc49 at #loc48))
#loc63 = loc(callsite(#loc51 at #loc52))
#loc65 = loc(callsite(#loc53 at #loc51))
#loc66 = loc(callsite(#loc65 at #loc52))
