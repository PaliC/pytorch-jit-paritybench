; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_17(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 9, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 510, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %.frozen = freeze i32 %13, !dbg !14
  %14 = sdiv i32 %.frozen, 16, !dbg !14
  %15 = srem i32 %14, 16, !dbg !15
  %16 = mul i32 %14, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = sdiv i32 %13, 256, !dbg !17
  %18 = sext i32 %15 to i64, !dbg !18
  %19 = getelementptr i64, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !19
  %21 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !19
  %22 = sext i32 %.decomposed to i64, !dbg !20
  %23 = getelementptr i64, ptr addrspace(1) %1, i64 %22, !dbg !20
  %24 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !21
  %25 = extractvalue { i64, i64 } %24, 0, !dbg !21
  %26 = extractvalue { i64, i64 } %24, 1, !dbg !21
  %27 = getelementptr i64, ptr addrspace(1) %3, i64 %22, !dbg !22
  %28 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !23
  %29 = extractvalue { i64, i64 } %28, 0, !dbg !23
  %30 = extractvalue { i64, i64 } %28, 1, !dbg !23
  %31 = getelementptr float, ptr addrspace(1) %4, i64 %22, !dbg !24
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !25
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !25
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !25
  %35 = bitcast i32 %33 to float, !dbg !25
  %36 = bitcast i32 %34 to float, !dbg !25
  %37 = add i64 %20, 24, !dbg !26
  %38 = icmp slt i64 %20, 0, !dbg !27
  %39 = select i1 %38, i64 %37, i64 %20, !dbg !28
  %40 = add i64 %25, 24, !dbg !29
  %41 = add i64 %26, 24, !dbg !29
  %42 = icmp slt i64 %25, 0, !dbg !30
  %43 = icmp slt i64 %26, 0, !dbg !30
  %44 = select i1 %42, i64 %40, i64 %25, !dbg !31
  %45 = select i1 %43, i64 %41, i64 %26, !dbg !31
  %46 = mul i64 %39, 24, !dbg !32
  %47 = mul i32 %17, 576, !dbg !33
  %48 = sext i32 %47 to i64, !dbg !34
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !35
  %50 = getelementptr float, ptr addrspace(1) %49, i64 %46, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %50, i64 %48, !dbg !35
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !35
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %46, !dbg !35
  %54 = getelementptr float, ptr addrspace(1) %53, i64 %48, !dbg !35
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !36
  %56 = bitcast i32 %55 to float, !dbg !36
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 true) #1, !dbg !36
  %58 = bitcast i32 %57 to float, !dbg !36
  %59 = add i64 %29, 24, !dbg !37
  %60 = add i64 %30, 24, !dbg !37
  %61 = icmp slt i64 %29, 0, !dbg !38
  %62 = icmp slt i64 %30, 0, !dbg !38
  %63 = select i1 %61, i64 %59, i64 %29, !dbg !39
  %64 = select i1 %62, i64 %60, i64 %30, !dbg !39
  %65 = getelementptr float, ptr addrspace(1) %2, i64 %63, !dbg !40
  %66 = getelementptr float, ptr addrspace(1) %65, i64 %46, !dbg !40
  %67 = getelementptr float, ptr addrspace(1) %66, i64 %48, !dbg !40
  %68 = getelementptr float, ptr addrspace(1) %2, i64 %64, !dbg !40
  %69 = getelementptr float, ptr addrspace(1) %68, i64 %46, !dbg !40
  %70 = getelementptr float, ptr addrspace(1) %69, i64 %48, !dbg !40
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 true) #1, !dbg !41
  %72 = bitcast i32 %71 to float, !dbg !41
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 true) #1, !dbg !41
  %74 = bitcast i32 %73 to float, !dbg !41
  %75 = fsub float %72, %56, !dbg !42
  %76 = fsub float %74, %58, !dbg !42
  %77 = fmul float %75, %35, !dbg !43
  %78 = fmul float %76, %36, !dbg !43
  %79 = fadd float %77, %56, !dbg !44
  %80 = fadd float %78, %58, !dbg !44
  %81 = sext i32 %13 to i64, !dbg !45
  %82 = getelementptr float, ptr addrspace(1) %5, i64 %81, !dbg !45
  %83 = bitcast float %79 to i32, !dbg !46
  %84 = bitcast float %80 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %83, i32 %84, ptr addrspace(1) %82, i1 true) #1, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cj5bmjuh5iok5vsous7dndatpjbi2bh2yrlxfiorgdzm3u2e7nyp.py", directory: "inductor_cache/j5")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_17, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_17, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_17", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_17", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 31, scope: !7)
!23 = !DILocation(line: 30, column: 36, scope: !7)
!24 = !DILocation(line: 31, column: 31, scope: !7)
!25 = !DILocation(line: 31, column: 36, scope: !7)
!26 = !DILocation(line: 33, column: 18, scope: !7)
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 35, column: 32, scope: !7)
!29 = !DILocation(line: 36, column: 18, scope: !7)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 38, column: 32, scope: !7)
!32 = !DILocation(line: 39, column: 40, scope: !7)
!33 = !DILocation(line: 39, column: 51, scope: !7)
!34 = !DILocation(line: 39, column: 47, scope: !7)
!35 = !DILocation(line: 39, column: 30, scope: !7)
!36 = !DILocation(line: 39, column: 56, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 41, column: 20, scope: !7)
!39 = !DILocation(line: 42, column: 35, scope: !7)
!40 = !DILocation(line: 43, column: 31, scope: !7)
!41 = !DILocation(line: 43, column: 58, scope: !7)
!42 = !DILocation(line: 44, column: 20, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 46, column: 19, scope: !7)
!45 = !DILocation(line: 47, column: 25, scope: !7)
!46 = !DILocation(line: 47, column: 37, scope: !7)
!47 = !DILocation(line: 47, column: 4, scope: !7)
