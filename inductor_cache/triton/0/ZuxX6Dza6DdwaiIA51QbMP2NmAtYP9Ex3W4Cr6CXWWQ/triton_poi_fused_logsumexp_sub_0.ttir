#loc = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":19:0)
module {
  tt.func public @triton_poi_fused_logsumexp_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0x7F800000> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<3> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_4 : tensor<256xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc8)
    %9 = tt.load %8, %5 : tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = arith.muli %6, %cst_4 : tensor<256xi32> loc(#loc10)
    %11 = tt.addptr %7, %10 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.addi %10, %cst_3 : tensor<256xi32> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %10, %cst_2 : tensor<256xi32> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %19 = arith.addi %10, %cst_1 : tensor<256xi32> loc(#loc19)
    %20 = tt.addptr %7, %19 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc20)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc21)
    %22 = arith.cmpf ogt, %12, %15 : tensor<256xf32> loc(#loc49)
    %23 = arith.cmpf une, %12, %12 : tensor<256xf32> loc(#loc50)
    %24 = arith.ori %22, %23 : tensor<256xi1> loc(#loc51)
    %25 = arith.select %24, %12, %15 : tensor<256xi1>, tensor<256xf32> loc(#loc52)
    %26 = arith.cmpf ogt, %25, %18 : tensor<256xf32> loc(#loc53)
    %27 = arith.cmpf une, %25, %25 : tensor<256xf32> loc(#loc54)
    %28 = arith.ori %26, %27 : tensor<256xi1> loc(#loc55)
    %29 = arith.select %28, %25, %18 : tensor<256xi1>, tensor<256xf32> loc(#loc56)
    %30 = arith.cmpf ogt, %29, %21 : tensor<256xf32> loc(#loc57)
    %31 = arith.cmpf une, %29, %29 : tensor<256xf32> loc(#loc58)
    %32 = arith.ori %30, %31 : tensor<256xi1> loc(#loc59)
    %33 = arith.select %32, %29, %21 : tensor<256xi1>, tensor<256xf32> loc(#loc60)
    %34 = math.absf %33 : tensor<256xf32> loc(#loc29)
    %35 = arith.cmpf oeq, %34, %cst_0 : tensor<256xf32> loc(#loc30)
    %36 = arith.select %35, %cst, %33 : tensor<256xi1>, tensor<256xf32> loc(#loc31)
    %37 = arith.subf %12, %36 : tensor<256xf32> loc(#loc32)
    %38 = math.exp %37 : tensor<256xf32> loc(#loc33)
    %39 = arith.subf %15, %36 : tensor<256xf32> loc(#loc34)
    %40 = math.exp %39 : tensor<256xf32> loc(#loc35)
    %41 = arith.addf %38, %40 : tensor<256xf32> loc(#loc36)
    %42 = arith.subf %18, %36 : tensor<256xf32> loc(#loc37)
    %43 = math.exp %42 : tensor<256xf32> loc(#loc38)
    %44 = arith.addf %41, %43 : tensor<256xf32> loc(#loc39)
    %45 = arith.subf %21, %36 : tensor<256xf32> loc(#loc40)
    %46 = math.exp %45 : tensor<256xf32> loc(#loc41)
    %47 = arith.addf %44, %46 : tensor<256xf32> loc(#loc42)
    %48 = math.log %47 : tensor<256xf32> loc(#loc43)
    %49 = arith.addf %48, %36 : tensor<256xf32> loc(#loc44)
    %50 = arith.subf %9, %49 : tensor<256xf32> loc(#loc45)
    %51 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc46)
    %52 = tt.addptr %51, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc46)
    tt.store %52, %50, %5 : tensor<256x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":21:28)
#loc3 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":21:33)
#loc4 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":22:36)
#loc5 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":22:23)
#loc6 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":23:21)
#loc7 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":25:19)
#loc8 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":26:30)
#loc9 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":26:35)
#loc10 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":27:32)
#loc11 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":27:30)
#loc12 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":27:37)
#loc13 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":28:34)
#loc14 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":28:30)
#loc15 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":28:41)
#loc16 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":29:34)
#loc17 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":29:30)
#loc18 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":29:41)
#loc19 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":30:34)
#loc20 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":30:30)
#loc21 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":30:41)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc23 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":31:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc27 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":32:40)
#loc28 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":33:40)
#loc29 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":34:23)
#loc30 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":36:20)
#loc31 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":38:35)
#loc32 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":39:19)
#loc33 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":40:24)
#loc34 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":41:19)
#loc35 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":42:24)
#loc36 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":43:20)
#loc37 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":44:19)
#loc38 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":45:24)
#loc39 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":46:20)
#loc40 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":47:19)
#loc41 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":48:24)
#loc42 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":49:20)
#loc43 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":50:24)
#loc44 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":51:20)
#loc45 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":52:19)
#loc46 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":53:25)
#loc47 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":53:37)
#loc48 = loc("inductor_cache/wl/cwlqjmfjpgzvwmtnkyz6fcd2hbvr7bg65zfeyyffgm6nctvx7qnh.py":53:4)
#loc49 = loc(callsite(#loc22 at #loc23))
#loc50 = loc(callsite(#loc24 at #loc23))
#loc51 = loc(callsite(#loc25 at #loc23))
#loc52 = loc(callsite(#loc26 at #loc23))
#loc53 = loc(callsite(#loc22 at #loc27))
#loc54 = loc(callsite(#loc24 at #loc27))
#loc55 = loc(callsite(#loc25 at #loc27))
#loc56 = loc(callsite(#loc26 at #loc27))
#loc57 = loc(callsite(#loc22 at #loc28))
#loc58 = loc(callsite(#loc24 at #loc28))
#loc59 = loc(callsite(#loc25 at #loc28))
#loc60 = loc(callsite(#loc26 at #loc28))
