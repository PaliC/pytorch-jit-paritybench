; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, 16, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %.frozen = freeze i32 %6, !dbg !13
  %9 = sdiv i32 %.frozen, 4, !dbg !13
  %10 = mul i32 %9, 4, !dbg !14
  %.decomposed = sub i32 %.frozen, %10, !dbg !14
  %11 = shl i32 %8, 2, !dbg !15
  %12 = and i32 %11, 60, !dbg !15
  %13 = add nsw i32 %.decomposed, %12, !dbg !16
  %14 = shl i32 %9, 6, !dbg !17
  %15 = add i32 %13, %14, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %7, i32 0, i1 %7) #3, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !21
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %7, i32 0, i1 %7) #3, !dbg !22
  %22 = bitcast i32 %21 to float, !dbg !22
  %23 = fsub float %19, %22, !dbg !23
  %24 = tail call float @llvm.fabs.f32(float %23), !dbg !24
  %25 = fmul float %24, 5.000000e-01, !dbg !25
  %26 = fadd float %25, 1.000000e+00, !dbg !26
  %27 = fcmp olt float %26, 0x3810000000000000, !dbg !27
  %28 = fmul float %26, 0x4160000000000000, !dbg !27
  %.02.i = select i1 %27, float %28, float %26, !dbg !27
  %i.i.0.i = select i1 %27, float -2.300000e+01, float 0.000000e+00, !dbg !27
  %29 = bitcast float %.02.i to i32, !dbg !27
  %30 = add i32 %29, -1059760811, !dbg !27
  %31 = and i32 %30, -8388608, !dbg !27
  %32 = sub i32 %29, %31, !dbg !27
  %33 = bitcast i32 %32 to float, !dbg !27
  %34 = sitofp i32 %31 to float, !dbg !27
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not.i = icmp eq i32 %35, 0, !dbg !27
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %34, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !27
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %34, float 0x3E80000000000000, float %i.i.0.i) #3, !dbg !27
  %.08.i = select i1 %.not.i, float %37, float %36, !dbg !27
  %38 = fadd float %33, -1.000000e+00, !dbg !27
  %39 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not1.i = icmp eq i32 %39, 0, !dbg !27
  %40 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %38, float 0x3FC2073EC0000000) #3, !dbg !27
  %41 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %38, float 0x3FC2073EC0000000) #3, !dbg !27
  %.010.i = select i1 %.not1.i, float %41, float %40, !dbg !27
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not2.i = icmp eq i32 %42, 0, !dbg !27
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %38, float 0xBFBF19B980000000) #3, !dbg !27
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %38, float 0xBFBF19B980000000) #3, !dbg !27
  %.011.i = select i1 %.not2.i, float %44, float %43, !dbg !27
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not3.i = icmp eq i32 %45, 0, !dbg !27
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %38, float 0x3FC1E52AA0000000) #3, !dbg !27
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %38, float 0x3FC1E52AA0000000) #3, !dbg !27
  %.012.i = select i1 %.not3.i, float %47, float %46, !dbg !27
  %48 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not4.i = icmp eq i32 %48, 0, !dbg !27
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %38, float 0xBFC55B1720000000) #3, !dbg !27
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %38, float 0xBFC55B1720000000) #3, !dbg !27
  %.09.i = select i1 %.not4.i, float %50, float %49, !dbg !27
  %51 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not5.i = icmp eq i32 %51, 0, !dbg !27
  %52 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %38, float 0x3FC99DA160000000) #3, !dbg !27
  %53 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %38, float 0x3FC99DA160000000) #3, !dbg !27
  %.05.i = select i1 %.not5.i, float %53, float %52, !dbg !27
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not6.i = icmp eq i32 %54, 0, !dbg !27
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %38, float 0xBFCFFFE440000000) #3, !dbg !27
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %38, float 0xBFCFFFE440000000) #3, !dbg !27
  %.01.i = select i1 %.not6.i, float %56, float %55, !dbg !27
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not7.i = icmp eq i32 %57, 0, !dbg !27
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %38, float 0x3FD5554F00000000) #3, !dbg !27
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %38, float 0x3FD5554F00000000) #3, !dbg !27
  %.0.i = select i1 %.not7.i, float %59, float %58, !dbg !27
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not8.i = icmp eq i32 %60, 0, !dbg !27
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %38, float -5.000000e-01) #3, !dbg !27
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %38, float -5.000000e-01) #3, !dbg !27
  %.07.i = select i1 %.not8.i, float %62, float %61, !dbg !27
  %63 = fmul float %38, %.07.i, !dbg !27
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not9.i = icmp eq i32 %64, 0, !dbg !27
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %63, float %38, float %38) #3, !dbg !27
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %63, float %38, float %38) #3, !dbg !27
  %.06.i = select i1 %.not9.i, float %66, float %65, !dbg !27
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not10.i = icmp eq i32 %67, 0, !dbg !27
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !27
  %69 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #3, !dbg !27
  %.04.i = select i1 %.not10.i, float %69, float %68, !dbg !27
  %70 = icmp ugt i32 %29, 2139095039, !dbg !27
  br i1 %70, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !27

__nv_fmaf_rn.exit.i.i:                            ; preds = %5
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !27
  %.not11.i = icmp eq i32 %71, 0, !dbg !27
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !27
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !27
  %.03.i = select i1 %.not11.i, float %73, float %72, !dbg !27
  br label %__nv_logf.exit, !dbg !27

__nv_logf.exit:                                   ; preds = %5, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %5 ], !dbg !27
  %74 = fcmp olt float %24, 1.000000e+01, !dbg !28
  %75 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !27
  %76 = fmul float %r.i.0.i, 1.000000e+01, !dbg !29
  %77 = select i1 %75, float 0xFFF0000000000000, float %76, !dbg !27
  %78 = fadd float %24, 0x401FAB9E00000000, !dbg !30
  %79 = select i1 %74, float %77, float %78, !dbg !31
  %80 = select i1 %7, float %79, float 0.000000e+00, !dbg !32
  %81 = bitcast float %80 to i32, !dbg !33
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 8, i32 31), !dbg !33
  %83 = bitcast i32 %82 to float, !dbg !33
  %84 = fadd float %80, %83, !dbg !37
  %85 = bitcast float %84 to i32, !dbg !33
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 4, i32 31), !dbg !33
  %87 = bitcast i32 %86 to float, !dbg !33
  %88 = fadd float %84, %87, !dbg !37
  %89 = bitcast float %88 to i32, !dbg !33
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 2, i32 31), !dbg !33
  %91 = bitcast i32 %90 to float, !dbg !33
  %92 = fadd float %88, %91, !dbg !37
  %93 = bitcast float %92 to i32, !dbg !33
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 1, i32 31), !dbg !33
  %95 = bitcast i32 %94 to float, !dbg !33
  %96 = fadd float %92, %95, !dbg !37
  %97 = sext i32 %6 to i64, !dbg !39
  %98 = getelementptr float, ptr addrspace(1) %2, i64 %97, !dbg !39
  %99 = and i32 %8, 63, !dbg !40
  %100 = icmp eq i32 %99, 0, !dbg !40
  %101 = bitcast float %96 to i32, !dbg !40
  %102 = and i1 %100, %7, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %101, ptr addrspace(1) %98, i1 %102) #3, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czkbksqq6i7jv2oldrh7vfrex6up2cmuxydbgl7ruolcsmtjnb6a.py", directory: "inductor_cache/zk")
!4 = !{ptr @triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0", linkageName: "triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 37, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 45, scope: !7)
!18 = !DILocation(line: 33, column: 42, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 50, scope: !7)
!21 = !DILocation(line: 34, column: 30, scope: !7)
!22 = !DILocation(line: 34, column: 50, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 36, column: 23, scope: !7)
!25 = !DILocation(line: 40, column: 18, scope: !7)
!26 = !DILocation(line: 42, column: 18, scope: !7)
!27 = !DILocation(line: 43, column: 24, scope: !7)
!28 = !DILocation(line: 38, column: 18, scope: !7)
!29 = !DILocation(line: 44, column: 20, scope: !7)
!30 = !DILocation(line: 46, column: 19, scope: !7)
!31 = !DILocation(line: 47, column: 34, scope: !7)
!32 = !DILocation(line: 49, column: 35, scope: !7)
!33 = !DILocation(line: 267, column: 36, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!36 = !DILocation(line: 50, column: 26, scope: !7)
!37 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !36)
!38 = distinct !DILexicalBlockFile(scope: !34, file: !35, discriminator: 0)
!39 = !DILocation(line: 51, column: 25, scope: !7)
!40 = !DILocation(line: 51, column: 37, scope: !7)
!41 = !DILocation(line: 51, column: 4, scope: !7)
