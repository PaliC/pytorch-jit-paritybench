; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_gelu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = sext i32 %9 to i64, !dbg !14
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !14
  %12 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %11, i1 true) #3, !dbg !15
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !15
  %14 = extractvalue { i32, i32 } %12, 1, !dbg !15
  %15 = bitcast i32 %13 to float, !dbg !15
  %16 = bitcast i32 %14 to float, !dbg !15
  %17 = fmul float %15, 0x3FE6A09E60000000, !dbg !16
  %18 = fmul float %16, 0x3FE6A09E60000000, !dbg !16
  %19 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not.i = icmp eq i32 %19, 0, !dbg !17
  %20 = tail call float @llvm.nvvm.fabs.ftz.f(float %17) #3, !dbg !17
  %21 = tail call float @llvm.nvvm.fabs.f(float %17) #3, !dbg !17
  %.0.i = select i1 %.not.i, float %21, float %20, !dbg !17
  %22 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !17
  br i1 %22, label %__nv_fabsf.exit1.i, label %24, !dbg !17

__nv_fabsf.exit1.i:                               ; preds = %3
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not1.i = icmp eq i32 %23, 0, !dbg !17
  %.01.i = select i1 %.not1.i, float %21, float %20, !dbg !17
  br label %__internal_fmad.exit.i, !dbg !17

24:                                               ; preds = %3
  %25 = fmul float %17, %17, !dbg !17
  br label %__internal_fmad.exit.i, !dbg !17

__internal_fmad.exit.i:                           ; preds = %24, %__nv_fabsf.exit1.i
  %26 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %24 ], !dbg !17
  %27 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %24 ], !dbg !17
  %28 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %24 ], !dbg !17
  %29 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %24 ], !dbg !17
  %30 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %24 ], !dbg !17
  %31 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %24 ], !dbg !17
  %32 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %24 ], !dbg !17
  %33 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %25, %24 ], !dbg !17
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not2.i = icmp eq i32 %34, 0, !dbg !17
  %35 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %32, float %33, float %31) #3, !dbg !17
  %36 = tail call float @llvm.nvvm.fma.rn.f(float %32, float %33, float %31) #3, !dbg !17
  %.02.i = select i1 %.not2.i, float %36, float %35, !dbg !17
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not3.i = icmp eq i32 %37, 0, !dbg !17
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %33, float %30) #3, !dbg !17
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %33, float %30) #3, !dbg !17
  %.03.i = select i1 %.not3.i, float %39, float %38, !dbg !17
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not4.i = icmp eq i32 %40, 0, !dbg !17
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %33, float %29) #3, !dbg !17
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %33, float %29) #3, !dbg !17
  %.04.i = select i1 %.not4.i, float %42, float %41, !dbg !17
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not5.i = icmp eq i32 %43, 0, !dbg !17
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %33, float %28) #3, !dbg !17
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %33, float %28) #3, !dbg !17
  %.05.i = select i1 %.not5.i, float %45, float %44, !dbg !17
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not6.i = icmp eq i32 %46, 0, !dbg !17
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %33, float %27) #3, !dbg !17
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %33, float %27) #3, !dbg !17
  %.06.i = select i1 %.not6.i, float %48, float %47, !dbg !17
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not7.i = icmp eq i32 %49, 0, !dbg !17
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %33, float %26) #3, !dbg !17
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %33, float %26) #3, !dbg !17
  %.07.i = select i1 %.not7.i, float %51, float %50, !dbg !17
  %52 = fneg float %33, !dbg !17
  %53 = select i1 %22, float %52, float %17, !dbg !17
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not8.i = icmp eq i32 %54, 0, !dbg !17
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %53, float %53) #3, !dbg !17
  %56 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %53, float %53) #3, !dbg !17
  %.08.i = select i1 %.not8.i, float %56, float %55, !dbg !17
  br i1 %22, label %57, label %__nv_erff.exit, !dbg !17

57:                                               ; preds = %__internal_fmad.exit.i
  %58 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !17
  %59 = fsub float 1.000000e+00, %58, !dbg !17
  %60 = bitcast float %59 to i32, !dbg !17
  %61 = bitcast float %17 to i32, !dbg !17
  %62 = and i32 %61, -2147483648, !dbg !17
  %63 = or i32 %62, %60, !dbg !17
  %64 = bitcast i32 %63 to float, !dbg !17
  br label %__nv_erff.exit, !dbg !17

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %57
  %r.0.i = phi float [ %64, %57 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !17
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not.i1 = icmp eq i32 %65, 0, !dbg !17
  %66 = tail call float @llvm.nvvm.fabs.ftz.f(float %18) #3, !dbg !17
  %67 = tail call float @llvm.nvvm.fabs.f(float %18) #3, !dbg !17
  %.0.i2 = select i1 %.not.i1, float %67, float %66, !dbg !17
  %68 = fcmp oge float %.0.i2, 0x3FF00C1FC0000000, !dbg !17
  br i1 %68, label %__nv_fabsf.exit1.i19, label %70, !dbg !17

__nv_fabsf.exit1.i19:                             ; preds = %__nv_erff.exit
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not1.i20 = icmp eq i32 %69, 0, !dbg !17
  %.01.i21 = select i1 %.not1.i20, float %67, float %66, !dbg !17
  br label %__internal_fmad.exit.i3, !dbg !17

70:                                               ; preds = %__nv_erff.exit
  %71 = fmul float %18, %18, !dbg !17
  br label %__internal_fmad.exit.i3, !dbg !17

__internal_fmad.exit.i3:                          ; preds = %70, %__nv_fabsf.exit1.i19
  %72 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i19 ], [ 0x3FC06EBA60000000, %70 ], !dbg !17
  %73 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i19 ], [ 0xBFD8127580000000, %70 ], !dbg !17
  %74 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i19 ], [ 0x3FBCE315E0000000, %70 ], !dbg !17
  %75 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i19 ], [ 0xBF9B837CE0000000, %70 ], !dbg !17
  %76 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i19 ], [ 0x3F755ABD40000000, %70 ], !dbg !17
  %77 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i19 ], [ 0xBF4AE9A400000000, %70 ], !dbg !17
  %78 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i19 ], [ 0x3F163D2D40000000, %70 ], !dbg !17
  %79 = phi float [ %.01.i21, %__nv_fabsf.exit1.i19 ], [ %71, %70 ], !dbg !17
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not2.i4 = icmp eq i32 %80, 0, !dbg !17
  %81 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %78, float %79, float %77) #3, !dbg !17
  %82 = tail call float @llvm.nvvm.fma.rn.f(float %78, float %79, float %77) #3, !dbg !17
  %.02.i5 = select i1 %.not2.i4, float %82, float %81, !dbg !17
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not3.i6 = icmp eq i32 %83, 0, !dbg !17
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i5, float %79, float %76) #3, !dbg !17
  %85 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i5, float %79, float %76) #3, !dbg !17
  %.03.i7 = select i1 %.not3.i6, float %85, float %84, !dbg !17
  %86 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not4.i8 = icmp eq i32 %86, 0, !dbg !17
  %87 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i7, float %79, float %75) #3, !dbg !17
  %88 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i7, float %79, float %75) #3, !dbg !17
  %.04.i9 = select i1 %.not4.i8, float %88, float %87, !dbg !17
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not5.i10 = icmp eq i32 %89, 0, !dbg !17
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i9, float %79, float %74) #3, !dbg !17
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i9, float %79, float %74) #3, !dbg !17
  %.05.i11 = select i1 %.not5.i10, float %91, float %90, !dbg !17
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not6.i12 = icmp eq i32 %92, 0, !dbg !17
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i11, float %79, float %73) #3, !dbg !17
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i11, float %79, float %73) #3, !dbg !17
  %.06.i13 = select i1 %.not6.i12, float %94, float %93, !dbg !17
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not7.i14 = icmp eq i32 %95, 0, !dbg !17
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i13, float %79, float %72) #3, !dbg !17
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i13, float %79, float %72) #3, !dbg !17
  %.07.i15 = select i1 %.not7.i14, float %97, float %96, !dbg !17
  %98 = fneg float %79, !dbg !17
  %99 = select i1 %68, float %98, float %18, !dbg !17
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !17
  %.not8.i16 = icmp eq i32 %100, 0, !dbg !17
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i15, float %99, float %99) #3, !dbg !17
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i15, float %99, float %99) #3, !dbg !17
  %.08.i17 = select i1 %.not8.i16, float %102, float %101, !dbg !17
  br i1 %68, label %103, label %__nv_erff.exit22, !dbg !17

103:                                              ; preds = %__internal_fmad.exit.i3
  %104 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i17) #3, !dbg !17
  %105 = fsub float 1.000000e+00, %104, !dbg !17
  %106 = bitcast float %105 to i32, !dbg !17
  %107 = bitcast float %18 to i32, !dbg !17
  %108 = and i32 %107, -2147483648, !dbg !17
  %109 = or i32 %108, %106, !dbg !17
  %110 = bitcast i32 %109 to float, !dbg !17
  br label %__nv_erff.exit22, !dbg !17

__nv_erff.exit22:                                 ; preds = %__internal_fmad.exit.i3, %103
  %r.0.i18 = phi float [ %110, %103 ], [ %.08.i17, %__internal_fmad.exit.i3 ], !dbg !17
  %111 = fmul float %16, 5.000000e-01, !dbg !18
  %112 = fmul float %15, 5.000000e-01, !dbg !18
  %113 = fadd float %r.0.i, 1.000000e+00, !dbg !19
  %114 = fadd float %r.0.i18, 1.000000e+00, !dbg !19
  %115 = fmul float %112, %113, !dbg !20
  %116 = fmul float %111, %114, !dbg !20
  %117 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !21
  %118 = bitcast float %115 to i32, !dbg !22
  %119 = bitcast float %116 to i32, !dbg !22
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %118, i32 %119, ptr addrspace(1) %117, i1 true) #3, !dbg !22
  ret void, !dbg !23
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctbnttagnbjexmrzmmzrivtuvvxgggocx5qumkzfdim6mrlyxsyg.py", directory: "inductor_cache/tb")
!4 = !{ptr @triton_poi_fused_gelu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_gelu_0, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_gelu_0", linkageName: "triton_poi_fused_gelu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 29, column: 18, scope: !7)
!17 = !DILocation(line: 30, column: 25, scope: !7)
!18 = !DILocation(line: 27, column: 18, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 25, scope: !7)
!22 = !DILocation(line: 34, column: 36, scope: !7)
!23 = !DILocation(line: 34, column: 4, scope: !7)
