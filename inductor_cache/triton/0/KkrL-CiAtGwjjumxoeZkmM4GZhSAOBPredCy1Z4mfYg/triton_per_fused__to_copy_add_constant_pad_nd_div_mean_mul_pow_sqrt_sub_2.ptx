//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2 // -- Begin function triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2
.visible .entry triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_3,
	.param .u32 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_4,
	.param .u32 triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<74>;
	.reg .b32 	%r<318>;
	.reg .f32 	%f<223>;
	.reg .b64 	%rd<54>;
	.loc	1 19 0                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd34, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_0];
	ld.param.u64 	%rd35, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_1];
$L__tmp0:
	.loc	1 23 28                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:23:33
	shl.b32 	%r162, %r1, 5;
	ld.param.u64 	%rd36, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_2];
	ld.param.u64 	%rd37, [triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2_param_3];
	.loc	1 24 44                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:24:44
	mov.u32 	%r163, %tid.x;
	bfe.u32 	%r164, %r163, 6, 2;
	or.b32  	%r165, %r164, 4;
	or.b32  	%r166, %r164, 8;
	or.b32  	%r167, %r164, 12;
	or.b32  	%r168, %r164, 16;
	or.b32  	%r169, %r164, 20;
	or.b32  	%r170, %r164, 24;
	or.b32  	%r171, %r164, 28;
	.loc	1 24 23                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:24:23
	or.b32  	%r172, %r162, %r164;
	or.b32  	%r173, %r162, %r165;
	or.b32  	%r174, %r162, %r166;
	or.b32  	%r175, %r162, %r167;
	or.b32  	%r176, %r162, %r168;
	or.b32  	%r177, %r162, %r169;
	or.b32  	%r178, %r162, %r170;
	or.b32  	%r179, %r162, %r171;
	.loc	1 25 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:25:21
	setp.lt.s32 	%p17, %r172, 64;
	setp.lt.s32 	%p18, %r173, 64;
	setp.lt.s32 	%p19, %r174, 64;
	setp.lt.s32 	%p20, %r175, 64;
	setp.lt.s32 	%p21, %r176, 64;
	setp.lt.s32 	%p22, %r177, 64;
	setp.lt.s32 	%p23, %r178, 64;
	setp.lt.s32 	%p24, %r179, 64;
	.loc	1 26 34                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:26:34
	and.b32  	%r180, %r163, 63;
	.loc	1 28 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:28:21
	setp.lt.u32 	%p68, %r180, 49;
	.loc	1 33 35                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:35
	mad.lo.s32 	%r181, %r172, 49, %r180;
	mad.lo.s32 	%r182, %r173, 49, %r180;
	mad.lo.s32 	%r183, %r174, 49, %r180;
	mad.lo.s32 	%r184, %r175, 49, %r180;
	mad.lo.s32 	%r185, %r176, 49, %r180;
	mad.lo.s32 	%r186, %r177, 49, %r180;
	mad.lo.s32 	%r187, %r178, 49, %r180;
	mad.lo.s32 	%r188, %r179, 49, %r180;
	.loc	1 33 30                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:30
	mul.wide.s32 	%rd38, %r181, 4;
	add.s64 	%rd1, %rd35, %rd38;
	mul.wide.s32 	%rd39, %r182, 4;
	add.s64 	%rd2, %rd35, %rd39;
	mul.wide.s32 	%rd40, %r183, 4;
	add.s64 	%rd3, %rd35, %rd40;
	mul.wide.s32 	%rd41, %r184, 4;
	add.s64 	%rd4, %rd35, %rd41;
	mul.wide.s32 	%rd42, %r185, 4;
	add.s64 	%rd5, %rd35, %rd42;
	mul.wide.s32 	%rd43, %r186, 4;
	add.s64 	%rd6, %rd35, %rd43;
	mul.wide.s32 	%rd44, %r187, 4;
	add.s64 	%rd7, %rd35, %rd44;
	mul.wide.s32 	%rd45, %r188, 4;
	add.s64 	%rd8, %rd35, %rd45;
	.loc	1 33 51                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:51
	and.pred  	%p1, %p68, %p17;
	and.pred  	%p3, %p68, %p18;
	and.pred  	%p5, %p68, %p19;
	and.pred  	%p7, %p68, %p20;
	and.pred  	%p9, %p68, %p21;
	and.pred  	%p11, %p68, %p22;
	and.pred  	%p13, %p68, %p23;
	and.pred  	%p15, %p68, %p24;
	mov.b32 	%r3, 0;
	.loc	1 33 43                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:33:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f4, %r8;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f5, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	mov.b32 	%f6, %r12;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p13 ld.global.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r14, %r3;
	// end inline asm
	mov.b32 	%f7, %r14;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p15 mov.u32 %r16, %r3;
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 34 34                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:34:34
	mul.wide.s32 	%rd46, %r172, 4;
	add.s64 	%rd9, %rd34, %rd46;
	cvt.s64.s32 	%rd47, %r162;
	cvt.u64.u32 	%rd48, %r164;
	or.b64  	%rd49, %rd47, %rd48;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd51, %rd34, %rd50;
	add.s64 	%rd10, %rd51, 16;
	add.s64 	%rd11, %rd51, 32;
	add.s64 	%rd12, %rd51, 48;
	add.s64 	%rd13, %rd51, 64;
	add.s64 	%rd14, %rd51, 80;
	add.s64 	%rd15, %rd51, 96;
	add.s64 	%rd16, %rd51, 112;
	.loc	1 34 39                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:34:39
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r18 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r18;
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p18 ld.global.L1::evict_last.b32 { %r19 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r19;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r20 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r20;
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r21 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r22 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p22 ld.global.L1::evict_last.b32 { %r23 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r23;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r24 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r24;
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p24 ld.global.L1::evict_last.b32 { %r25 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r25;
	.loc	1 35 30                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:35:30
	add.s64 	%rd17, %rd36, %rd38;
	add.s64 	%rd18, %rd36, %rd39;
	add.s64 	%rd19, %rd36, %rd40;
	add.s64 	%rd20, %rd36, %rd41;
	add.s64 	%rd21, %rd36, %rd42;
	add.s64 	%rd22, %rd36, %rd43;
	add.s64 	%rd23, %rd36, %rd44;
	add.s64 	%rd24, %rd36, %rd45;
	.loc	1 35 43                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:35:43
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.b32 { %r26 }, [ %rd17 + 0 ];
	@!%p1 mov.u32 %r26, %r3;
	// end inline asm
	mov.b32 	%f17, %r26;
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p3 ld.global.b32 { %r28 }, [ %rd18 + 0 ];
	@!%p3 mov.u32 %r28, %r3;
	// end inline asm
	mov.b32 	%f18, %r28;
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p5 ld.global.b32 { %r30 }, [ %rd19 + 0 ];
	@!%p5 mov.u32 %r30, %r3;
	// end inline asm
	mov.b32 	%f19, %r30;
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p7 ld.global.b32 { %r32 }, [ %rd20 + 0 ];
	@!%p7 mov.u32 %r32, %r3;
	// end inline asm
	mov.b32 	%f20, %r32;
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p9 ld.global.b32 { %r34 }, [ %rd21 + 0 ];
	@!%p9 mov.u32 %r34, %r3;
	// end inline asm
	mov.b32 	%f21, %r34;
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p11 ld.global.b32 { %r36 }, [ %rd22 + 0 ];
	@!%p11 mov.u32 %r36, %r3;
	// end inline asm
	mov.b32 	%f22, %r36;
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p13 ld.global.b32 { %r38 }, [ %rd23 + 0 ];
	@!%p13 mov.u32 %r38, %r3;
	// end inline asm
	mov.b32 	%f23, %r38;
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p15 ld.global.b32 { %r40 }, [ %rd24 + 0 ];
	@!%p15 mov.u32 %r40, %r3;
	// end inline asm
	mov.b32 	%f24, %r40;
	.loc	1 36 30                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:36:30
	add.s64 	%rd25, %rd37, %rd46;
	add.s64 	%rd52, %rd37, %rd50;
	add.s64 	%rd26, %rd52, 16;
	add.s64 	%rd27, %rd52, 32;
	add.s64 	%rd28, %rd52, 48;
	add.s64 	%rd29, %rd52, 64;
	add.s64 	%rd30, %rd52, 80;
	add.s64 	%rd31, %rd52, 96;
	add.s64 	%rd32, %rd52, 112;
	.loc	1 36 35                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:36:35
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r42 }, [ %rd25 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r42;
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p18 ld.global.L1::evict_last.b32 { %r43 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r43;
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r44 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r44;
	// begin inline asm
	mov.u32 %r45, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r45 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r45;
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r46 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r46;
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p22 ld.global.L1::evict_last.b32 { %r47 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r47;
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r48 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r48;
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p24 ld.global.L1::evict_last.b32 { %r49 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r49;
	.loc	1 37 18                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:37:18
	sub.f32 	%f33, %f1, %f9;
	sub.f32 	%f34, %f2, %f10;
	sub.f32 	%f35, %f3, %f11;
	sub.f32 	%f36, %f4, %f12;
	sub.f32 	%f37, %f5, %f13;
	sub.f32 	%f38, %f6, %f14;
	sub.f32 	%f39, %f7, %f15;
	sub.f32 	%f40, %f8, %f16;
	.loc	1 40 18                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:40:18
	fma.rn.f32 	%f41, %f33, %f33, 0f3F4F5C29;
	fma.rn.f32 	%f42, %f34, %f34, 0f3F4F5C29;
	fma.rn.f32 	%f43, %f35, %f35, 0f3F4F5C29;
	fma.rn.f32 	%f44, %f36, %f36, 0f3F4F5C29;
	fma.rn.f32 	%f45, %f37, %f37, 0f3F4F5C29;
	fma.rn.f32 	%f46, %f38, %f38, 0f3F4F5C29;
	fma.rn.f32 	%f47, %f39, %f39, 0f3F4F5C29;
	fma.rn.f32 	%f48, %f40, %f40, 0f3F4F5C29;
	.loc	1 41 26                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:41:26
	sqrt.approx.ftz.f32 	%f49, %f41;
	sqrt.approx.ftz.f32 	%f50, %f42;
	sqrt.approx.ftz.f32 	%f51, %f43;
	sqrt.approx.ftz.f32 	%f52, %f44;
	sqrt.approx.ftz.f32 	%f53, %f45;
	sqrt.approx.ftz.f32 	%f54, %f46;
	sqrt.approx.ftz.f32 	%f55, %f47;
	sqrt.approx.ftz.f32 	%f56, %f48;
	.loc	1 42 18                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:42:18
	mov.b32 	%r51, %f33;
	mov.b32 	%r52, %f49;
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f57, %r50;
	mov.b32 	%r54, %f34;
	mov.b32 	%r55, %f50;
	// begin inline asm
	div.full.f32 %r53, %r54, %r55;
	// end inline asm
	mov.b32 	%f58, %r53;
	mov.b32 	%r57, %f35;
	mov.b32 	%r58, %f51;
	// begin inline asm
	div.full.f32 %r56, %r57, %r58;
	// end inline asm
	mov.b32 	%f59, %r56;
	mov.b32 	%r60, %f36;
	mov.b32 	%r61, %f52;
	// begin inline asm
	div.full.f32 %r59, %r60, %r61;
	// end inline asm
	mov.b32 	%f60, %r59;
	mov.b32 	%r63, %f37;
	mov.b32 	%r64, %f53;
	// begin inline asm
	div.full.f32 %r62, %r63, %r64;
	// end inline asm
	mov.b32 	%f61, %r62;
	mov.b32 	%r66, %f38;
	mov.b32 	%r67, %f54;
	// begin inline asm
	div.full.f32 %r65, %r66, %r67;
	// end inline asm
	mov.b32 	%f62, %r65;
	mov.b32 	%r69, %f39;
	mov.b32 	%r70, %f55;
	// begin inline asm
	div.full.f32 %r68, %r69, %r70;
	// end inline asm
	mov.b32 	%f63, %r68;
	mov.b32 	%r72, %f40;
	mov.b32 	%r73, %f56;
	// begin inline asm
	div.full.f32 %r71, %r72, %r73;
	// end inline asm
	mov.b32 	%f64, %r71;
	.loc	1 43 19                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:43:19
	sub.f32 	%f65, %f17, %f25;
	sub.f32 	%f66, %f18, %f26;
	sub.f32 	%f67, %f19, %f27;
	sub.f32 	%f68, %f20, %f28;
	sub.f32 	%f69, %f21, %f29;
	sub.f32 	%f70, %f22, %f30;
	sub.f32 	%f71, %f23, %f31;
	sub.f32 	%f72, %f24, %f32;
	.loc	1 45 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:45:20
	fma.rn.f32 	%f73, %f65, %f65, 0f3F4F5C29;
	fma.rn.f32 	%f74, %f66, %f66, 0f3F4F5C29;
	fma.rn.f32 	%f75, %f67, %f67, 0f3F4F5C29;
	fma.rn.f32 	%f76, %f68, %f68, 0f3F4F5C29;
	fma.rn.f32 	%f77, %f69, %f69, 0f3F4F5C29;
	fma.rn.f32 	%f78, %f70, %f70, 0f3F4F5C29;
	fma.rn.f32 	%f79, %f71, %f71, 0f3F4F5C29;
	fma.rn.f32 	%f80, %f72, %f72, 0f3F4F5C29;
	.loc	1 46 27                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:46:27
	sqrt.approx.ftz.f32 	%f81, %f73;
	sqrt.approx.ftz.f32 	%f82, %f74;
	sqrt.approx.ftz.f32 	%f83, %f75;
	sqrt.approx.ftz.f32 	%f84, %f76;
	sqrt.approx.ftz.f32 	%f85, %f77;
	sqrt.approx.ftz.f32 	%f86, %f78;
	sqrt.approx.ftz.f32 	%f87, %f79;
	sqrt.approx.ftz.f32 	%f88, %f80;
	.loc	1 24 44                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:24:44
	and.b32  	%r189, %r163, 31;
	.loc	1 24 23                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:24:23
	or.b32  	%r190, %r162, %r189;
	.loc	1 34 34                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:34:34
	mul.wide.s32 	%rd53, %r190, 4;
	add.s64 	%rd33, %rd34, %rd53;
	.loc	1 31 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:31:21
	bfe.s32 	%r191, %r1, 26, 1;
	shr.u32 	%r192, %r191, 30;
	add.s32 	%r193, %r190, %r192;
	shr.s32 	%r194, %r193, 2;
	.loc	1 25 21                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:25:21
	setp.lt.s32 	%p69, %r190, 64;
	.loc	1 47 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:47:20
	mov.b32 	%r75, %f65;
	mov.b32 	%r76, %f81;
	// begin inline asm
	div.full.f32 %r74, %r75, %r76;
	// end inline asm
	mov.b32 	%f89, %r74;
	mov.b32 	%r78, %f66;
	mov.b32 	%r79, %f82;
	// begin inline asm
	div.full.f32 %r77, %r78, %r79;
	// end inline asm
	mov.b32 	%f90, %r77;
	mov.b32 	%r81, %f67;
	mov.b32 	%r82, %f83;
	// begin inline asm
	div.full.f32 %r80, %r81, %r82;
	// end inline asm
	mov.b32 	%f91, %r80;
	mov.b32 	%r84, %f68;
	mov.b32 	%r85, %f84;
	// begin inline asm
	div.full.f32 %r83, %r84, %r85;
	// end inline asm
	mov.b32 	%f92, %r83;
	mov.b32 	%r87, %f69;
	mov.b32 	%r88, %f85;
	// begin inline asm
	div.full.f32 %r86, %r87, %r88;
	// end inline asm
	mov.b32 	%f93, %r86;
	mov.b32 	%r90, %f70;
	mov.b32 	%r91, %f86;
	// begin inline asm
	div.full.f32 %r89, %r90, %r91;
	// end inline asm
	mov.b32 	%f94, %r89;
	mov.b32 	%r93, %f71;
	mov.b32 	%r94, %f87;
	// begin inline asm
	div.full.f32 %r92, %r93, %r94;
	// end inline asm
	mov.b32 	%f95, %r92;
	mov.b32 	%r96, %f72;
	mov.b32 	%r97, %f88;
	// begin inline asm
	div.full.f32 %r95, %r96, %r97;
	// end inline asm
	mov.b32 	%f96, %r95;
	.loc	1 48 19                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:48:19
	sub.f32 	%f97, %f57, %f89;
	sub.f32 	%f98, %f58, %f90;
	sub.f32 	%f99, %f59, %f91;
	sub.f32 	%f100, %f60, %f92;
	sub.f32 	%f101, %f61, %f93;
	sub.f32 	%f102, %f62, %f94;
	sub.f32 	%f103, %f63, %f95;
	sub.f32 	%f104, %f64, %f96;
	.loc	1 49 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:49:20
	mul.f32 	%f105, %f97, %f97;
	mul.f32 	%f106, %f98, %f98;
	mul.f32 	%f107, %f99, %f99;
	mul.f32 	%f108, %f100, %f100;
	mul.f32 	%f109, %f101, %f101;
	mul.f32 	%f110, %f102, %f102;
	mul.f32 	%f111, %f103, %f103;
	mul.f32 	%f112, %f104, %f104;
	.loc	1 51 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:51:20
	fma.rn.f32 	%f113, %f97, %f97, 0f3DCCCCCD;
	fma.rn.f32 	%f114, %f98, %f98, 0f3DCCCCCD;
	fma.rn.f32 	%f115, %f99, %f99, 0f3DCCCCCD;
	fma.rn.f32 	%f116, %f100, %f100, 0f3DCCCCCD;
	fma.rn.f32 	%f117, %f101, %f101, 0f3DCCCCCD;
	fma.rn.f32 	%f118, %f102, %f102, 0f3DCCCCCD;
	fma.rn.f32 	%f119, %f103, %f103, 0f3DCCCCCD;
	fma.rn.f32 	%f120, %f104, %f104, 0f3DCCCCCD;
	.loc	1 52 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:52:20
	mov.b32 	%r99, %f105;
	mov.b32 	%r100, %f113;
	// begin inline asm
	div.full.f32 %r98, %r99, %r100;
	// end inline asm
	mov.b32 	%f121, %r98;
	mov.b32 	%r102, %f106;
	mov.b32 	%r103, %f114;
	// begin inline asm
	div.full.f32 %r101, %r102, %r103;
	// end inline asm
	mov.b32 	%f122, %r101;
	mov.b32 	%r105, %f107;
	mov.b32 	%r106, %f115;
	// begin inline asm
	div.full.f32 %r104, %r105, %r106;
	// end inline asm
	mov.b32 	%f123, %r104;
	mov.b32 	%r108, %f108;
	mov.b32 	%r109, %f116;
	// begin inline asm
	div.full.f32 %r107, %r108, %r109;
	// end inline asm
	mov.b32 	%f124, %r107;
	mov.b32 	%r111, %f109;
	mov.b32 	%r112, %f117;
	// begin inline asm
	div.full.f32 %r110, %r111, %r112;
	// end inline asm
	mov.b32 	%f125, %r110;
	mov.b32 	%r114, %f110;
	mov.b32 	%r115, %f118;
	// begin inline asm
	div.full.f32 %r113, %r114, %r115;
	// end inline asm
	mov.b32 	%f126, %r113;
	mov.b32 	%r117, %f111;
	mov.b32 	%r118, %f119;
	// begin inline asm
	div.full.f32 %r116, %r117, %r118;
	// end inline asm
	mov.b32 	%f127, %r116;
	mov.b32 	%r120, %f112;
	mov.b32 	%r121, %f120;
	// begin inline asm
	div.full.f32 %r119, %r120, %r121;
	// end inline asm
	mov.b32 	%f128, %r119;
	.loc	1 54 43                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:54:43
	selp.f32 	%f129, %f121, 0f00000000, %p1;
	selp.f32 	%f130, %f122, 0f00000000, %p3;
	selp.f32 	%f131, %f123, 0f00000000, %p5;
	selp.f32 	%f132, %f124, 0f00000000, %p7;
	selp.f32 	%f133, %f125, 0f00000000, %p9;
	selp.f32 	%f134, %f126, 0f00000000, %p11;
	selp.f32 	%f135, %f127, 0f00000000, %p13;
	selp.f32 	%f136, %f128, 0f00000000, %p15;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r195, %f129;
	shfl.sync.bfly.b32	%r196, %r195, 16, 31, -1;
	mov.b32 	%f137, %r196;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f129, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r197, %f138;
	shfl.sync.bfly.b32	%r198, %r197, 8, 31, -1;
	mov.b32 	%f139, %r198;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f138, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r199, %f140;
	shfl.sync.bfly.b32	%r200, %r199, 4, 31, -1;
	mov.b32 	%f141, %r200;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r201, %f142;
	shfl.sync.bfly.b32	%r202, %r201, 2, 31, -1;
	mov.b32 	%f143, %r202;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f142, %f143;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r203, %f144;
	shfl.sync.bfly.b32	%r204, %r203, 1, 31, -1;
	mov.b32 	%f145, %r204;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r205, %f130;
	shfl.sync.bfly.b32	%r206, %r205, 16, 31, -1;
	mov.b32 	%f147, %r206;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f148, %f130, %f147;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r207, %f148;
	shfl.sync.bfly.b32	%r208, %r207, 8, 31, -1;
	mov.b32 	%f149, %r208;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f148, %f149;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r209, %f150;
	shfl.sync.bfly.b32	%r210, %r209, 4, 31, -1;
	mov.b32 	%f151, %r210;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f152, %f150, %f151;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r211, %f152;
	shfl.sync.bfly.b32	%r212, %r211, 2, 31, -1;
	mov.b32 	%f153, %r212;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f154, %f152, %f153;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r213, %f154;
	shfl.sync.bfly.b32	%r214, %r213, 1, 31, -1;
	mov.b32 	%f155, %r214;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f156, %f154, %f155;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r215, %f131;
	shfl.sync.bfly.b32	%r216, %r215, 16, 31, -1;
	mov.b32 	%f157, %r216;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f158, %f131, %f157;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r217, %f158;
	shfl.sync.bfly.b32	%r218, %r217, 8, 31, -1;
	mov.b32 	%f159, %r218;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f160, %f158, %f159;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r219, %f160;
	shfl.sync.bfly.b32	%r220, %r219, 4, 31, -1;
	mov.b32 	%f161, %r220;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f162, %f160, %f161;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r221, %f162;
	shfl.sync.bfly.b32	%r222, %r221, 2, 31, -1;
	mov.b32 	%f163, %r222;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f164, %f162, %f163;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r223, %f164;
	shfl.sync.bfly.b32	%r224, %r223, 1, 31, -1;
	mov.b32 	%f165, %r224;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f166, %f164, %f165;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r225, %f132;
	shfl.sync.bfly.b32	%r226, %r225, 16, 31, -1;
	mov.b32 	%f167, %r226;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f168, %f132, %f167;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r227, %f168;
	shfl.sync.bfly.b32	%r228, %r227, 8, 31, -1;
	mov.b32 	%f169, %r228;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f170, %f168, %f169;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r229, %f170;
	shfl.sync.bfly.b32	%r230, %r229, 4, 31, -1;
	mov.b32 	%f171, %r230;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r231, %f172;
	shfl.sync.bfly.b32	%r232, %r231, 2, 31, -1;
	mov.b32 	%f173, %r232;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f174, %f172, %f173;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r233, %f174;
	shfl.sync.bfly.b32	%r234, %r233, 1, 31, -1;
	mov.b32 	%f175, %r234;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f176, %f174, %f175;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r235, %f133;
	shfl.sync.bfly.b32	%r236, %r235, 16, 31, -1;
	mov.b32 	%f177, %r236;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f178, %f133, %f177;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r237, %f178;
	shfl.sync.bfly.b32	%r238, %r237, 8, 31, -1;
	mov.b32 	%f179, %r238;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f180, %f178, %f179;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r239, %f180;
	shfl.sync.bfly.b32	%r240, %r239, 4, 31, -1;
	mov.b32 	%f181, %r240;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f182, %f180, %f181;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r241, %f182;
	shfl.sync.bfly.b32	%r242, %r241, 2, 31, -1;
	mov.b32 	%f183, %r242;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f184, %f182, %f183;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r243, %f184;
	shfl.sync.bfly.b32	%r244, %r243, 1, 31, -1;
	mov.b32 	%f185, %r244;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f186, %f184, %f185;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r245, %f134;
	shfl.sync.bfly.b32	%r246, %r245, 16, 31, -1;
	mov.b32 	%f187, %r246;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f188, %f134, %f187;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r247, %f188;
	shfl.sync.bfly.b32	%r248, %r247, 8, 31, -1;
	mov.b32 	%f189, %r248;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f190, %f188, %f189;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r249, %f190;
	shfl.sync.bfly.b32	%r250, %r249, 4, 31, -1;
	mov.b32 	%f191, %r250;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f192, %f190, %f191;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r251, %f192;
	shfl.sync.bfly.b32	%r252, %r251, 2, 31, -1;
	mov.b32 	%f193, %r252;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f194, %f192, %f193;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r253, %f194;
	shfl.sync.bfly.b32	%r254, %r253, 1, 31, -1;
	mov.b32 	%f195, %r254;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f196, %f194, %f195;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r255, %f135;
	shfl.sync.bfly.b32	%r256, %r255, 16, 31, -1;
	mov.b32 	%f197, %r256;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f198, %f135, %f197;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r257, %f198;
	shfl.sync.bfly.b32	%r258, %r257, 8, 31, -1;
	mov.b32 	%f199, %r258;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f200, %f198, %f199;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r259, %f200;
	shfl.sync.bfly.b32	%r260, %r259, 4, 31, -1;
	mov.b32 	%f201, %r260;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f202, %f200, %f201;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r261, %f202;
	shfl.sync.bfly.b32	%r262, %r261, 2, 31, -1;
	mov.b32 	%f203, %r262;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f204, %f202, %f203;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r263, %f204;
	shfl.sync.bfly.b32	%r264, %r263, 1, 31, -1;
	mov.b32 	%f205, %r264;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f206, %f204, %f205;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r265, %f136;
	shfl.sync.bfly.b32	%r266, %r265, 16, 31, -1;
	mov.b32 	%f207, %r266;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f208, %f136, %f207;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r267, %f208;
	shfl.sync.bfly.b32	%r268, %r267, 8, 31, -1;
	mov.b32 	%f209, %r268;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f210, %f208, %f209;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r269, %f210;
	shfl.sync.bfly.b32	%r270, %r269, 4, 31, -1;
	mov.b32 	%f211, %r270;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f212, %f210, %f211;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r271, %f212;
	shfl.sync.bfly.b32	%r272, %r271, 2, 31, -1;
	mov.b32 	%f213, %r272;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f214, %f212, %f213;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r273, %f214;
	shfl.sync.bfly.b32	%r274, %r273, 1, 31, -1;
	mov.b32 	%f215, %r274;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f216, %f214, %f215;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p49, %r189, 0;
	shr.u32 	%r275, %r163, 3;
	and.b32  	%r276, %r275, 4;
	shl.b32 	%r277, %r164, 3;
	or.b32  	%r278, %r277, %r276;
	mov.u32 	%r279, global_smem;
	add.s32 	%r122, %r279, %r278;
	mov.b32 	%r123, %f146;
	// begin inline asm
	@%p49 st.shared.b32 [ %r122 + 0 ], %r123;
	// end inline asm
	shl.b32 	%r280, %r165, 3;
	or.b32  	%r281, %r280, %r276;
	add.s32 	%r124, %r279, %r281;
	mov.b32 	%r125, %f156;
	// begin inline asm
	@%p49 st.shared.b32 [ %r124 + 0 ], %r125;
	// end inline asm
	shl.b32 	%r282, %r166, 3;
	or.b32  	%r283, %r282, %r276;
	add.s32 	%r126, %r279, %r283;
	mov.b32 	%r127, %f166;
	// begin inline asm
	@%p49 st.shared.b32 [ %r126 + 0 ], %r127;
	// end inline asm
	shl.b32 	%r284, %r167, 3;
	or.b32  	%r285, %r284, %r276;
	add.s32 	%r128, %r279, %r285;
	mov.b32 	%r129, %f176;
	// begin inline asm
	@%p49 st.shared.b32 [ %r128 + 0 ], %r129;
	// end inline asm
	shl.b32 	%r286, %r168, 3;
	or.b32  	%r287, %r286, %r276;
	add.s32 	%r130, %r279, %r287;
	mov.b32 	%r131, %f186;
	// begin inline asm
	@%p49 st.shared.b32 [ %r130 + 0 ], %r131;
	// end inline asm
	shl.b32 	%r288, %r169, 3;
	or.b32  	%r289, %r288, %r276;
	add.s32 	%r132, %r279, %r289;
	mov.b32 	%r133, %f196;
	// begin inline asm
	@%p49 st.shared.b32 [ %r132 + 0 ], %r133;
	// end inline asm
	shl.b32 	%r290, %r170, 3;
	or.b32  	%r291, %r290, %r276;
	add.s32 	%r134, %r279, %r291;
	mov.b32 	%r135, %f206;
	// begin inline asm
	@%p49 st.shared.b32 [ %r134 + 0 ], %r135;
	// end inline asm
	shl.b32 	%r292, %r171, 3;
	or.b32  	%r293, %r292, %r276;
	add.s32 	%r136, %r279, %r293;
	mov.b32 	%r137, %f216;
	// begin inline asm
	@%p49 st.shared.b32 [ %r136 + 0 ], %r137;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p57, %r163, 64;
	shl.b32 	%r294, %r163, 2;
	add.s32 	%r139, %r279, %r294;
	// begin inline asm
	@%p57 ld.shared.b32 %r138, [ %r139 + 0 ];
	// end inline asm
	mov.b32 	%f217, %r138;
	shfl.sync.bfly.b32	%r295, %r138, 1, 31, -1;
	mov.b32 	%f218, %r295;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f219, %f217, %f218;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r296, %r163, 1;
	setp.eq.b32 	%p70, %r296, 1;
	not.pred 	%p71, %p70;
	and.pred  	%p58, %p57, %p71;
	mov.b32 	%r141, %f219;
	// begin inline asm
	@%p58 st.shared.b32 [ %r139 + 0 ], %r141;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r297, %r279, %r277;
	ld.shared.u32 	%r143, [%r297];
	add.s32 	%r298, %r279, %r280;
	ld.shared.u32 	%r145, [%r298];
	add.s32 	%r299, %r279, %r282;
	ld.shared.u32 	%r147, [%r299];
	add.s32 	%r300, %r279, %r284;
	ld.shared.u32 	%r149, [%r300];
	add.s32 	%r301, %r279, %r286;
	ld.shared.u32 	%r151, [%r301];
	add.s32 	%r302, %r279, %r288;
	ld.shared.u32 	%r153, [%r302];
	add.s32 	%r303, %r279, %r290;
	ld.shared.u32 	%r155, [%r303];
	add.s32 	%r304, %r279, %r292;
	ld.shared.u32 	%r157, [%r304];
$L__tmp2:
	.loc	1 72 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:72:20
	bar.sync 	0;
	shl.b32 	%r305, %r164, 2;
	sub.s32 	%r142, %r297, %r305;
	mov.pred 	%p59, -1;
	// begin inline asm
	@%p59 st.shared.b32 [ %r142 + 0 ], %r143;
	// end inline asm
	add.s32 	%r144, %r142, 16;
	// begin inline asm
	@%p59 st.shared.b32 [ %r144 + 0 ], %r145;
	// end inline asm
	add.s32 	%r146, %r142, 32;
	// begin inline asm
	@%p59 st.shared.b32 [ %r146 + 0 ], %r147;
	// end inline asm
	add.s32 	%r148, %r142, 48;
	// begin inline asm
	@%p59 st.shared.b32 [ %r148 + 0 ], %r149;
	// end inline asm
	add.s32 	%r150, %r142, 64;
	// begin inline asm
	@%p59 st.shared.b32 [ %r150 + 0 ], %r151;
	// end inline asm
	add.s32 	%r152, %r142, 80;
	// begin inline asm
	@%p59 st.shared.b32 [ %r152 + 0 ], %r153;
	// end inline asm
	add.s32 	%r154, %r142, 96;
	// begin inline asm
	@%p59 st.shared.b32 [ %r154 + 0 ], %r155;
	// end inline asm
	add.s32 	%r156, %r142, 112;
	// begin inline asm
	@%p59 st.shared.b32 [ %r156 + 0 ], %r157;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r306, %r189, 2;
	add.s32 	%r307, %r279, %r306;
	.loc	1 57 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:57:20
	ld.shared.u32 	%r159, [%r307];
	mov.b32 	%r160, 1111752704;
	// begin inline asm
	div.full.f32 %r158, %r159, %r160;
	// end inline asm
	mov.b32 	%f220, %r158;
	.loc	1 31 26                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:31:26
	shr.u32 	%r308, %r194, 30;
	add.s32 	%r309, %r194, %r308;
	not.b32 	%r310, %r309;
	not.b32 	%r311, %r193;
	.loc	1 66 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:66:20
	or.b32  	%r312, %r311, 3;
	add.s32 	%r313, %r312, %r190;
	or.b32  	%r314, %r310, 3;
	add.s32 	%r315, %r314, %r194;
	.loc	1 68 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:68:20
	or.b32  	%r316, %r315, %r313;
	setp.lt.u32 	%p72, %r316, 2;
	.loc	1 71 35                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:71:35
	selp.f32 	%f221, 0f3F800000, 0f00000000, %p72;
	.loc	1 72 20                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:72:20
	mul.f32 	%f222, %f221, %f220;
	.loc	1 73 4                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:73:4
	bar.sync 	0;
	.loc	1 74 40                         // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:74:40
	and.b32  	%r317, %r163, 224;
	setp.eq.s32 	%p73, %r317, 0;
	mov.b32 	%r161, %f222;
	and.pred  	%p67, %p73, %p69;
	// begin inline asm
	@%p67 st.global.b32 [ %rd33 + 0 ], { %r161 };
	// end inline asm
	.loc	1 74 4                          // cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py:74:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 108
.b8 100
.b8 99
.b8 54
.b8 50
.b8 105
.b8 113
.b8 97
.b8 98
.b8 121
.b8 50
.b8 54
.b8 113
.b8 51
.b8 55
.b8 106
.b8 55
.b8 106
.b8 106
.b8 104
.b8 117
.b8 113
.b8 111
.b8 115
.b8 111
.b8 110
.b8 108
.b8 53
.b8 102
.b8 115
.b8 55
.b8 50
.b8 110
.b8 97
.b8 50
.b8 116
.b8 122
.b8 55
.b8 115
.b8 97
.b8 54
.b8 116
.b8 111
.b8 53
.b8 52
.b8 117
.b8 115
.b8 100
.b8 116
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 115
.b8 116
.b8 97
.b8 110
.b8 116
.b8 95
.b8 112
.b8 97
.b8 100
.b8 95
.b8 110
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaf:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
