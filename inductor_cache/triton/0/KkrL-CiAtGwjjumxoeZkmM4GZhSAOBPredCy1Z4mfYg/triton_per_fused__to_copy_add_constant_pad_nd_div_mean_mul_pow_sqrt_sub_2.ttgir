#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [4, 2], order = [1, 0]}>
#loc = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0)
#loc1 = loc(unknown)
#loc39 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":55:26)
#loc58 = loc(callsite(#loc1 at #loc39))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__to_copy_add_constant_pad_nd_div_mean_mul_pow_sqrt_sub_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0), %arg5: i32 loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<49> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<8.100000e-01> : tensor<32x64xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<1.000000e-01> : tensor<32x64xf32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<49> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<32x1xf32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<1.000000e+00> : tensor<32x1xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<2> : tensor<32x1xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<0> : tensor<32x1xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-1> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<4.900000e+01> : tensor<32x1xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<32x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<32x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %9, %cst_1 : tensor<32x1xi32, #blocked1> loc(#loc6)
    %11 = arith.cmpi slt, %8, %cst_0 : tensor<32x1xi32, #blocked> loc(#loc6)
    %12 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc7)
    %14 = arith.cmpi slt, %13, %cst_2 : tensor<1x64xi32, #blocked1> loc(#loc8)
    %15 = arith.divsi %8, %cst : tensor<32x1xi32, #blocked> loc(#loc9)
    %16 = arith.remsi %15, %cst : tensor<32x1xi32, #blocked> loc(#loc10)
    %17 = arith.remsi %8, %cst : tensor<32x1xi32, #blocked> loc(#loc11)
    %18 = arith.muli %9, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc12)
    %19 = tt.broadcast %13 : tensor<1x64xi32, #blocked1> -> tensor<32x64xi32, #blocked1> loc(#loc13)
    %20 = tt.broadcast %18 : tensor<32x1xi32, #blocked1> -> tensor<32x64xi32, #blocked1> loc(#loc13)
    %21 = arith.addi %19, %20 : tensor<32x64xi32, #blocked1> loc(#loc13)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc14)
    %23 = tt.addptr %22, %21 : tensor<32x64x!tt.ptr<f32>, #blocked1>, tensor<32x64xi32, #blocked1> loc(#loc14)
    %24 = tt.broadcast %14 : tensor<1x64xi1, #blocked1> -> tensor<32x64xi1, #blocked1> loc(#loc15)
    %25 = tt.broadcast %10 : tensor<32x1xi1, #blocked1> -> tensor<32x64xi1, #blocked1> loc(#loc15)
    %26 = arith.andi %24, %25 : tensor<32x64xi1, #blocked1> loc(#loc15)
    %27 = tt.load %23, %26, %cst_3 : tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %28 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc17)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked> loc(#loc17)
    %30 = tt.addptr %28, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc17)
    %31 = tt.addptr %29, %8 : tensor<32x1x!tt.ptr<f32>, #blocked>, tensor<32x1xi32, #blocked> loc(#loc17)
    %32 = tt.load %30, %10 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc18)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc19)
    %34 = tt.addptr %33, %21 : tensor<32x64x!tt.ptr<f32>, #blocked1>, tensor<32x64xi32, #blocked1> loc(#loc19)
    %35 = tt.load %34, %26, %cst_3 : tensor<32x64x!tt.ptr<f32>, #blocked1> loc(#loc20)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %37 = tt.addptr %36, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc21)
    %38 = tt.load %37, %10 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc22)
    %39 = tt.broadcast %32 : tensor<32x1xf32, #blocked1> -> tensor<32x64xf32, #blocked1> loc(#loc23)
    %40 = arith.subf %27, %39 : tensor<32x64xf32, #blocked1> loc(#loc23)
    %41 = arith.mulf %40, %40 : tensor<32x64xf32, #blocked1> loc(#loc24)
    %42 = arith.addf %41, %cst_4 : tensor<32x64xf32, #blocked1> loc(#loc25)
    %43 = tt.extern_elementwise %42 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<32x64xf32, #blocked1>) -> tensor<32x64xf32, #blocked1> loc(#loc26)
    %44 = arith.divf %40, %43 : tensor<32x64xf32, #blocked1> loc(#loc27)
    %45 = tt.broadcast %38 : tensor<32x1xf32, #blocked1> -> tensor<32x64xf32, #blocked1> loc(#loc28)
    %46 = arith.subf %35, %45 : tensor<32x64xf32, #blocked1> loc(#loc28)
    %47 = arith.mulf %46, %46 : tensor<32x64xf32, #blocked1> loc(#loc29)
    %48 = arith.addf %47, %cst_4 : tensor<32x64xf32, #blocked1> loc(#loc30)
    %49 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<32x64xf32, #blocked1>) -> tensor<32x64xf32, #blocked1> loc(#loc31)
    %50 = arith.divf %46, %49 : tensor<32x64xf32, #blocked1> loc(#loc32)
    %51 = arith.subf %44, %50 : tensor<32x64xf32, #blocked1> loc(#loc33)
    %52 = arith.mulf %51, %51 : tensor<32x64xf32, #blocked1> loc(#loc34)
    %53 = arith.addf %52, %cst_5 : tensor<32x64xf32, #blocked1> loc(#loc35)
    %54 = arith.divf %52, %53 : tensor<32x64xf32, #blocked1> loc(#loc36)
    %55 = arith.select %26, %54, %cst_3 : tensor<32x64xi1, #blocked1>, tensor<32x64xf32, #blocked1> loc(#loc37)
    %56 = "tt.reduce"(%55) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc39)), %arg7: f32 loc(callsite(#loc1 at #loc39))):
      %73 = arith.addf %arg6, %arg7 : f32 loc(#loc60)
      tt.reduce.return %73 : f32 loc(#loc57)
    }) : (tensor<32x64xf32, #blocked1>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc57)
    %57 = triton_gpu.convert_layout %56 {fastmath = #arith.fastmath<none>} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc41)
    %58 = tt.expand_dims %57 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xf32, #blocked> loc(#loc42)
    %59 = arith.divf %58, %cst_12 : tensor<32x1xf32, #blocked> loc(#loc43)
    %60 = arith.addi %16, %cst_11 : tensor<32x1xi32, #blocked> loc(#loc44)
    %61 = arith.extsi %60 : tensor<32x1xi32, #blocked> to tensor<32x1xi64, #blocked> loc(#loc45)
    %62 = arith.cmpi sge, %61, %cst_10 : tensor<32x1xi64, #blocked> loc(#loc45)
    %63 = arith.cmpi slt, %61, %cst_9 : tensor<32x1xi64, #blocked> loc(#loc46)
    %64 = arith.addi %17, %cst_11 : tensor<32x1xi32, #blocked> loc(#loc47)
    %65 = arith.extsi %64 : tensor<32x1xi32, #blocked> to tensor<32x1xi64, #blocked> loc(#loc48)
    %66 = arith.cmpi sge, %65, %cst_10 : tensor<32x1xi64, #blocked> loc(#loc48)
    %67 = arith.cmpi slt, %65, %cst_9 : tensor<32x1xi64, #blocked> loc(#loc49)
    %68 = arith.andi %62, %63 : tensor<32x1xi1, #blocked> loc(#loc50)
    %69 = arith.andi %68, %66 : tensor<32x1xi1, #blocked> loc(#loc51)
    %70 = arith.andi %69, %67 : tensor<32x1xi1, #blocked> loc(#loc52)
    %71 = arith.select %70, %cst_8, %cst_7 : tensor<32x1xi1, #blocked>, tensor<32x1xf32, #blocked> loc(#loc53)
    %72 = arith.mulf %59, %71 : tensor<32x1xf32, #blocked> loc(#loc41)
    gpu.barrier loc(#loc54)
    tt.store %31, %72, %11 : tensor<32x1x!tt.ptr<f32>, #blocked> loc(#loc55)
    tt.return loc(#loc56)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":23:28)
#loc3 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":23:33)
#loc4 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":24:44)
#loc5 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":24:23)
#loc6 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":25:21)
#loc7 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":26:34)
#loc8 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":28:21)
#loc9 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":31:21)
#loc10 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":31:26)
#loc11 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":32:19)
#loc12 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:38)
#loc13 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:35)
#loc14 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:30)
#loc15 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:51)
#loc16 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":33:43)
#loc17 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":34:34)
#loc18 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":34:39)
#loc19 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":35:30)
#loc20 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":35:43)
#loc21 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":36:30)
#loc22 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":36:35)
#loc23 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":37:18)
#loc24 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":38:18)
#loc25 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":40:18)
#loc26 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":41:26)
#loc27 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":42:18)
#loc28 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":43:19)
#loc29 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":44:20)
#loc30 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":45:20)
#loc31 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":46:27)
#loc32 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":47:20)
#loc33 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":48:19)
#loc34 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":49:20)
#loc35 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":51:20)
#loc36 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":52:20)
#loc37 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":54:43)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc41 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":72:20)
#loc42 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":55:29)
#loc43 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":57:20)
#loc44 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":58:19)
#loc45 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":60:21)
#loc46 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":62:20)
#loc47 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":63:19)
#loc48 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":64:21)
#loc49 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":65:20)
#loc50 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":66:20)
#loc51 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":67:20)
#loc52 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":68:20)
#loc53 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":71:35)
#loc54 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":73:4)
#loc55 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":74:40)
#loc56 = loc("inductor_cache/wl/cwldc62iqaby26q37j7jjhuqosonl5fs72na2tz7sa6to54usdtc.py":74:4)
#loc57 = loc(callsite(#loc38 at #loc39))
#loc59 = loc(callsite(#loc40 at #loc38))
#loc60 = loc(callsite(#loc59 at #loc39))
