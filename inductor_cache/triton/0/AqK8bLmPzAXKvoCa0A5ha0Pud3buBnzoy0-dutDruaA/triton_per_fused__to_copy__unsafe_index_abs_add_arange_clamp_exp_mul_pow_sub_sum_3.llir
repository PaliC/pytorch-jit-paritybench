; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %8 = shl i32 %7, 5, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = lshr i32 %9, 2, !dbg !12
  %11 = and i32 %10, 31, !dbg !12
  %12 = and i32 %9, 31, !dbg !12
  %13 = or disjoint i32 %8, %11, !dbg !13
  %14 = or disjoint i32 %8, %12, !dbg !13
  %15 = icmp slt i32 %13, 256, !dbg !14
  %16 = icmp slt i32 %14, 256, !dbg !14
  %17 = shl i32 %9, 2, !dbg !15
  %18 = and i32 %17, 12, !dbg !15
  %19 = sdiv i32 %14, 4, !dbg !16
  %20 = sdiv i32 %13, 4, !dbg !16
  %21 = sdiv i32 %14, 16, !dbg !17
  %.frozen = freeze i32 %13, !dbg !17
  %22 = sdiv i32 %.frozen, 16, !dbg !17
  %23 = mul i32 %22, 16, !dbg !18
  %.decomposed = sub i32 %.frozen, %23, !dbg !18
  %24 = sdiv i32 %13, 64, !dbg !19
  %25 = shl nsw i32 %.decomposed, 4, !dbg !20
  %26 = or disjoint i32 %25, %18, !dbg !21
  %27 = shl i32 %24, 8, !dbg !22
  %28 = add i32 %26, %27, !dbg !23
  %29 = sext i32 %28 to i64, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %3, i64 %29, !dbg !24
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %30, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #5, !dbg !25
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !25
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !25
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !25
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !25
  %36 = bitcast i32 %32 to float, !dbg !25
  %37 = bitcast i32 %33 to float, !dbg !25
  %38 = bitcast i32 %34 to float, !dbg !25
  %39 = bitcast i32 %35 to float, !dbg !25
  %40 = insertelement <4 x i32> poison, i32 %19, i64 0, !dbg !26
  %41 = insertelement <4 x i32> %40, i32 %14, i64 1, !dbg !26
  %42 = insertelement <4 x i32> %41, i32 %20, i64 2, !dbg !26
  %43 = insertelement <4 x i32> %42, i32 %13, i64 3, !dbg !26
  %44 = srem <4 x i32> %43, splat (i32 4), !dbg !26
  %45 = tail call <4 x i32> @llvm.smax.v4i32(<4 x i32> %44, <4 x i32> zeroinitializer), !dbg !27
  %46 = uitofp nneg <4 x i32> %45 to <4 x float>, !dbg !27
  %47 = fptosi <4 x float> %46 to <4 x i32>, !dbg !31
  %48 = extractelement <4 x i32> %47, i64 0, !dbg !32
  %49 = tail call i32 @llvm.smin.i32(i32 %48, i32 2), !dbg !33
  %narrow = add nsw i32 %49, 1, !dbg !33
  %50 = sext i32 %narrow to i64, !dbg !33
  %51 = extractelement <4 x i32> %47, i64 2, !dbg !32
  %52 = tail call i32 @llvm.smin.i32(i32 %51, i32 2), !dbg !33
  %narrow3 = add nsw i32 %52, 1, !dbg !33
  %53 = sext i32 %narrow3 to i64, !dbg !33
  %54 = shl nsw i64 %50, 2, !dbg !35
  %55 = shl nsw i64 %53, 2, !dbg !35
  %56 = extractelement <4 x i32> %47, i64 1, !dbg !36
  %57 = sext i32 %56 to i64, !dbg !37
  %58 = extractelement <4 x i32> %47, i64 3, !dbg !36
  %59 = sext i32 %58 to i64, !dbg !37
  %60 = shl nsw i32 %21, 4, !dbg !38
  %61 = shl nsw i32 %22, 4, !dbg !38
  %62 = sext i32 %60 to i64, !dbg !39
  %63 = sext i32 %61 to i64, !dbg !39
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !40
  %65 = getelementptr float, ptr addrspace(1) %64, i64 %57, !dbg !40
  %66 = getelementptr float, ptr addrspace(1) %65, i64 %62, !dbg !40
  %67 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !40
  %68 = getelementptr float, ptr addrspace(1) %67, i64 %59, !dbg !40
  %69 = getelementptr float, ptr addrspace(1) %68, i64 %63, !dbg !40
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %66, i1 %16) #5, !dbg !41
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %15) #5, !dbg !41
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %15) #5, !dbg !41
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %15) #5, !dbg !41
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %15) #5, !dbg !41
  %75 = tail call i64 @llvm.smin.i64(i64 %57, i64 2), !dbg !42
  %76 = tail call i64 @llvm.smin.i64(i64 %59, i64 2), !dbg !42
  %77 = getelementptr float, ptr addrspace(1) %2, i64 %75, !dbg !44
  %78 = getelementptr i8, ptr addrspace(1) %77, i64 4, !dbg !44
  %79 = getelementptr float, ptr addrspace(1) %78, i64 %54, !dbg !44
  %80 = getelementptr float, ptr addrspace(1) %79, i64 %62, !dbg !44
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %76, !dbg !44
  %82 = getelementptr i8, ptr addrspace(1) %81, i64 4, !dbg !44
  %83 = getelementptr float, ptr addrspace(1) %82, i64 %55, !dbg !44
  %84 = getelementptr float, ptr addrspace(1) %83, i64 %63, !dbg !44
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %16) #5, !dbg !45
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 %15) #5, !dbg !45
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 %15) #5, !dbg !45
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 %15) #5, !dbg !45
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %84, i1 %15) #5, !dbg !45
  %90 = shl i32 %48, 2, !dbg !32
  %91 = shl i32 %51, 2, !dbg !32
  %92 = add i32 %60, %56, !dbg !36
  %93 = add i32 %92, %90, !dbg !46
  %94 = add i32 %61, %58, !dbg !36
  %95 = add i32 %94, %91, !dbg !46
  %96 = sext i32 %93 to i64, !dbg !47
  %97 = getelementptr float, ptr addrspace(1) %2, i64 %96, !dbg !47
  %98 = sext i32 %95 to i64, !dbg !47
  %99 = getelementptr float, ptr addrspace(1) %2, i64 %98, !dbg !47
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %97, i1 %16) #5, !dbg !48
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 %15) #5, !dbg !48
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 %15) #5, !dbg !48
  %103 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 %15) #5, !dbg !48
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %99, i1 %15) #5, !dbg !48
  %105 = sext i32 %90 to i64, !dbg !49
  %106 = sext i32 %91 to i64, !dbg !49
  %107 = getelementptr float, ptr addrspace(1) %78, i64 %105, !dbg !50
  %108 = getelementptr float, ptr addrspace(1) %107, i64 %62, !dbg !50
  %109 = getelementptr float, ptr addrspace(1) %82, i64 %106, !dbg !50
  %110 = getelementptr float, ptr addrspace(1) %109, i64 %63, !dbg !50
  %111 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 %16) #5, !dbg !51
  %112 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %110, i1 %15) #5, !dbg !51
  %113 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %110, i1 %15) #5, !dbg !51
  %114 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %110, i1 %15) #5, !dbg !51
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %110, i1 %15) #5, !dbg !51
  %116 = fmul float %36, 0x3FF7154760000000, !dbg !52
  %117 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %116) #5, !dbg !52
  %118 = fmul float %37, 0x3FF7154760000000, !dbg !52
  %119 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %118) #5, !dbg !52
  %120 = fmul float %38, 0x3FF7154760000000, !dbg !52
  %121 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %120) #5, !dbg !52
  %122 = fmul float %39, 0x3FF7154760000000, !dbg !52
  %123 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %122) #5, !dbg !52
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not.i = icmp eq i32 %124, 0, !dbg !53
  %125 = tail call float @llvm.nvvm.add.rz.ftz.f(float %117, float 1.000000e+00) #5, !dbg !53
  %126 = tail call float @llvm.nvvm.add.rz.f(float %117, float 1.000000e+00) #5, !dbg !53
  %.01.i = select i1 %.not.i, float %126, float %125, !dbg !53
  %127 = bitcast float %.01.i to i32, !dbg !53
  %128 = add i32 %127, -1061158912, !dbg !53
  %129 = and i32 %128, -8388608, !dbg !53
  %130 = bitcast float %117 to i32, !dbg !53
  %131 = sub i32 %130, %129, !dbg !53
  %132 = bitcast i32 %131 to float, !dbg !53
  %133 = sub i32 1082130432, %129, !dbg !53
  %134 = bitcast i32 %133 to float, !dbg !53
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not14.i = icmp eq i32 %135, 0, !dbg !53
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %134, float -1.000000e+00) #5, !dbg !53
  %137 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %134, float -1.000000e+00) #5, !dbg !53
  %.09.i = select i1 %.not14.i, float %137, float %136, !dbg !53
  %138 = fadd float %.09.i, %132, !dbg !53
  %139 = sitofp i32 %129 to float, !dbg !53
  %140 = fmul float %139, 0x3E80000000000000, !dbg !53
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not15.i = icmp eq i32 %141, 0, !dbg !53
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %138, float 0x3FBB000240000000) #5, !dbg !53
  %143 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %138, float 0x3FBB000240000000) #5, !dbg !53
  %.012.i = select i1 %.not15.i, float %143, float %142, !dbg !53
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not16.i = icmp eq i32 %144, 0, !dbg !53
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %138, float 0xBFC0EF1C00000000) #5, !dbg !53
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %138, float 0xBFC0EF1C00000000) #5, !dbg !53
  %.010.i = select i1 %.not16.i, float %146, float %145, !dbg !53
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not17.i = icmp eq i32 %147, 0, !dbg !53
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %138, float 0x3FC28C8EA0000000) #5, !dbg !53
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %138, float 0x3FC28C8EA0000000) #5, !dbg !53
  %.06.i = select i1 %.not17.i, float %149, float %148, !dbg !53
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not18.i = icmp eq i32 %150, 0, !dbg !53
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %138, float 0xBFC54D1BA0000000) #5, !dbg !53
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %138, float 0xBFC54D1BA0000000) #5, !dbg !53
  %.02.i = select i1 %.not18.i, float %152, float %151, !dbg !53
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not19.i = icmp eq i32 %153, 0, !dbg !53
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %138, float 0x3FC995F3C0000000) #5, !dbg !53
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %138, float 0x3FC995F3C0000000) #5, !dbg !53
  %.0.i = select i1 %.not19.i, float %155, float %154, !dbg !53
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not20.i = icmp eq i32 %156, 0, !dbg !53
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %138, float 0xBFD0000840000000) #5, !dbg !53
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %138, float 0xBFD0000840000000) #5, !dbg !53
  %.011.i = select i1 %.not20.i, float %158, float %157, !dbg !53
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not21.i = icmp eq i32 %159, 0, !dbg !53
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %138, float 0x3FD5555CC0000000) #5, !dbg !53
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %138, float 0x3FD5555CC0000000) #5, !dbg !53
  %.08.i = select i1 %.not21.i, float %161, float %160, !dbg !53
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not22.i = icmp eq i32 %162, 0, !dbg !53
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %138, float -5.000000e-01) #5, !dbg !53
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %138, float -5.000000e-01) #5, !dbg !53
  %.07.i = select i1 %.not22.i, float %164, float %163, !dbg !53
  %165 = fmul float %138, %.07.i, !dbg !53
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not23.i = icmp eq i32 %166, 0, !dbg !53
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %165, float %138, float %138) #5, !dbg !53
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %165, float %138, float %138) #5, !dbg !53
  %.05.i = select i1 %.not23.i, float %168, float %167, !dbg !53
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not24.i = icmp eq i32 %169, 0, !dbg !53
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float 0x3FE62E4300000000, float %.05.i) #5, !dbg !53
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %140, float 0x3FE62E4300000000, float %.05.i) #5, !dbg !53
  %.04.i = select i1 %.not24.i, float %171, float %170, !dbg !53
  %172 = icmp ugt i32 %130, 2139095039, !dbg !53
  br i1 %172, label %173, label %__nv_log1pf.exit, !dbg !53

173:                                              ; preds = %6
  %174 = icmp sgt i32 %130, -1082130432, !dbg !53
  br i1 %174, label %__nv_fmaf_rn.exit.i, label %178, !dbg !53

__nv_fmaf_rn.exit.i:                              ; preds = %173
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not25.i = icmp eq i32 %175, 0, !dbg !53
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %117, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %117, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %.03.i = select i1 %.not25.i, float %177, float %176, !dbg !53
  br label %178, !dbg !53

178:                                              ; preds = %__nv_fmaf_rn.exit.i, %173
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %173 ], !dbg !53
  %179 = fcmp oeq float %117, 0.000000e+00, !dbg !53
  %r.1.i = select i1 %179, float -0.000000e+00, float %r.0.i, !dbg !53
  br label %__nv_log1pf.exit, !dbg !53

__nv_log1pf.exit:                                 ; preds = %6, %178
  %r.2.i = phi float [ %r.1.i, %178 ], [ %.04.i, %6 ], !dbg !53
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not.i4 = icmp eq i32 %180, 0, !dbg !53
  %181 = tail call float @llvm.nvvm.add.rz.ftz.f(float %119, float 1.000000e+00) #5, !dbg !53
  %182 = tail call float @llvm.nvvm.add.rz.f(float %119, float 1.000000e+00) #5, !dbg !53
  %.01.i5 = select i1 %.not.i4, float %182, float %181, !dbg !53
  %183 = bitcast float %.01.i5 to i32, !dbg !53
  %184 = add i32 %183, -1061158912, !dbg !53
  %185 = and i32 %184, -8388608, !dbg !53
  %186 = bitcast float %119 to i32, !dbg !53
  %187 = sub i32 %186, %185, !dbg !53
  %188 = bitcast i32 %187 to float, !dbg !53
  %189 = sub i32 1082130432, %185, !dbg !53
  %190 = bitcast i32 %189 to float, !dbg !53
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not14.i6 = icmp eq i32 %191, 0, !dbg !53
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %190, float -1.000000e+00) #5, !dbg !53
  %193 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %190, float -1.000000e+00) #5, !dbg !53
  %.09.i7 = select i1 %.not14.i6, float %193, float %192, !dbg !53
  %194 = fadd float %.09.i7, %188, !dbg !53
  %195 = sitofp i32 %185 to float, !dbg !53
  %196 = fmul float %195, 0x3E80000000000000, !dbg !53
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not15.i8 = icmp eq i32 %197, 0, !dbg !53
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %194, float 0x3FBB000240000000) #5, !dbg !53
  %199 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %194, float 0x3FBB000240000000) #5, !dbg !53
  %.012.i9 = select i1 %.not15.i8, float %199, float %198, !dbg !53
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not16.i10 = icmp eq i32 %200, 0, !dbg !53
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i9, float %194, float 0xBFC0EF1C00000000) #5, !dbg !53
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i9, float %194, float 0xBFC0EF1C00000000) #5, !dbg !53
  %.010.i11 = select i1 %.not16.i10, float %202, float %201, !dbg !53
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not17.i12 = icmp eq i32 %203, 0, !dbg !53
  %204 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i11, float %194, float 0x3FC28C8EA0000000) #5, !dbg !53
  %205 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i11, float %194, float 0x3FC28C8EA0000000) #5, !dbg !53
  %.06.i13 = select i1 %.not17.i12, float %205, float %204, !dbg !53
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not18.i14 = icmp eq i32 %206, 0, !dbg !53
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i13, float %194, float 0xBFC54D1BA0000000) #5, !dbg !53
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i13, float %194, float 0xBFC54D1BA0000000) #5, !dbg !53
  %.02.i15 = select i1 %.not18.i14, float %208, float %207, !dbg !53
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not19.i16 = icmp eq i32 %209, 0, !dbg !53
  %210 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i15, float %194, float 0x3FC995F3C0000000) #5, !dbg !53
  %211 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i15, float %194, float 0x3FC995F3C0000000) #5, !dbg !53
  %.0.i17 = select i1 %.not19.i16, float %211, float %210, !dbg !53
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not20.i18 = icmp eq i32 %212, 0, !dbg !53
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i17, float %194, float 0xBFD0000840000000) #5, !dbg !53
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i17, float %194, float 0xBFD0000840000000) #5, !dbg !53
  %.011.i19 = select i1 %.not20.i18, float %214, float %213, !dbg !53
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not21.i20 = icmp eq i32 %215, 0, !dbg !53
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i19, float %194, float 0x3FD5555CC0000000) #5, !dbg !53
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i19, float %194, float 0x3FD5555CC0000000) #5, !dbg !53
  %.08.i21 = select i1 %.not21.i20, float %217, float %216, !dbg !53
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not22.i22 = icmp eq i32 %218, 0, !dbg !53
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i21, float %194, float -5.000000e-01) #5, !dbg !53
  %220 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i21, float %194, float -5.000000e-01) #5, !dbg !53
  %.07.i23 = select i1 %.not22.i22, float %220, float %219, !dbg !53
  %221 = fmul float %194, %.07.i23, !dbg !53
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not23.i24 = icmp eq i32 %222, 0, !dbg !53
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %221, float %194, float %194) #5, !dbg !53
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %221, float %194, float %194) #5, !dbg !53
  %.05.i25 = select i1 %.not23.i24, float %224, float %223, !dbg !53
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not24.i26 = icmp eq i32 %225, 0, !dbg !53
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %196, float 0x3FE62E4300000000, float %.05.i25) #5, !dbg !53
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %196, float 0x3FE62E4300000000, float %.05.i25) #5, !dbg !53
  %.04.i27 = select i1 %.not24.i26, float %227, float %226, !dbg !53
  %228 = icmp ugt i32 %186, 2139095039, !dbg !53
  br i1 %228, label %229, label %__nv_log1pf.exit34, !dbg !53

229:                                              ; preds = %__nv_log1pf.exit
  %230 = icmp sgt i32 %186, -1082130432, !dbg !53
  br i1 %230, label %__nv_fmaf_rn.exit.i31, label %234, !dbg !53

__nv_fmaf_rn.exit.i31:                            ; preds = %229
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not25.i32 = icmp eq i32 %231, 0, !dbg !53
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %119, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %119, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %.03.i33 = select i1 %.not25.i32, float %233, float %232, !dbg !53
  br label %234, !dbg !53

234:                                              ; preds = %__nv_fmaf_rn.exit.i31, %229
  %r.0.i29 = phi float [ %.03.i33, %__nv_fmaf_rn.exit.i31 ], [ %.04.i27, %229 ], !dbg !53
  %235 = fcmp oeq float %119, 0.000000e+00, !dbg !53
  %r.1.i30 = select i1 %235, float -0.000000e+00, float %r.0.i29, !dbg !53
  br label %__nv_log1pf.exit34, !dbg !53

__nv_log1pf.exit34:                               ; preds = %__nv_log1pf.exit, %234
  %r.2.i28 = phi float [ %r.1.i30, %234 ], [ %.04.i27, %__nv_log1pf.exit ], !dbg !53
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not.i35 = icmp eq i32 %236, 0, !dbg !53
  %237 = tail call float @llvm.nvvm.add.rz.ftz.f(float %121, float 1.000000e+00) #5, !dbg !53
  %238 = tail call float @llvm.nvvm.add.rz.f(float %121, float 1.000000e+00) #5, !dbg !53
  %.01.i36 = select i1 %.not.i35, float %238, float %237, !dbg !53
  %239 = bitcast float %.01.i36 to i32, !dbg !53
  %240 = add i32 %239, -1061158912, !dbg !53
  %241 = and i32 %240, -8388608, !dbg !53
  %242 = bitcast float %121 to i32, !dbg !53
  %243 = sub i32 %242, %241, !dbg !53
  %244 = bitcast i32 %243 to float, !dbg !53
  %245 = sub i32 1082130432, %241, !dbg !53
  %246 = bitcast i32 %245 to float, !dbg !53
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not14.i37 = icmp eq i32 %247, 0, !dbg !53
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %246, float -1.000000e+00) #5, !dbg !53
  %249 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %246, float -1.000000e+00) #5, !dbg !53
  %.09.i38 = select i1 %.not14.i37, float %249, float %248, !dbg !53
  %250 = fadd float %.09.i38, %244, !dbg !53
  %251 = sitofp i32 %241 to float, !dbg !53
  %252 = fmul float %251, 0x3E80000000000000, !dbg !53
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not15.i39 = icmp eq i32 %253, 0, !dbg !53
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %250, float 0x3FBB000240000000) #5, !dbg !53
  %255 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %250, float 0x3FBB000240000000) #5, !dbg !53
  %.012.i40 = select i1 %.not15.i39, float %255, float %254, !dbg !53
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not16.i41 = icmp eq i32 %256, 0, !dbg !53
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %250, float 0xBFC0EF1C00000000) #5, !dbg !53
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %250, float 0xBFC0EF1C00000000) #5, !dbg !53
  %.010.i42 = select i1 %.not16.i41, float %258, float %257, !dbg !53
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not17.i43 = icmp eq i32 %259, 0, !dbg !53
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %250, float 0x3FC28C8EA0000000) #5, !dbg !53
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %250, float 0x3FC28C8EA0000000) #5, !dbg !53
  %.06.i44 = select i1 %.not17.i43, float %261, float %260, !dbg !53
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not18.i45 = icmp eq i32 %262, 0, !dbg !53
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i44, float %250, float 0xBFC54D1BA0000000) #5, !dbg !53
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i44, float %250, float 0xBFC54D1BA0000000) #5, !dbg !53
  %.02.i46 = select i1 %.not18.i45, float %264, float %263, !dbg !53
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not19.i47 = icmp eq i32 %265, 0, !dbg !53
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i46, float %250, float 0x3FC995F3C0000000) #5, !dbg !53
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i46, float %250, float 0x3FC995F3C0000000) #5, !dbg !53
  %.0.i48 = select i1 %.not19.i47, float %267, float %266, !dbg !53
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not20.i49 = icmp eq i32 %268, 0, !dbg !53
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %250, float 0xBFD0000840000000) #5, !dbg !53
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %250, float 0xBFD0000840000000) #5, !dbg !53
  %.011.i50 = select i1 %.not20.i49, float %270, float %269, !dbg !53
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not21.i51 = icmp eq i32 %271, 0, !dbg !53
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i50, float %250, float 0x3FD5555CC0000000) #5, !dbg !53
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i50, float %250, float 0x3FD5555CC0000000) #5, !dbg !53
  %.08.i52 = select i1 %.not21.i51, float %273, float %272, !dbg !53
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not22.i53 = icmp eq i32 %274, 0, !dbg !53
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i52, float %250, float -5.000000e-01) #5, !dbg !53
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i52, float %250, float -5.000000e-01) #5, !dbg !53
  %.07.i54 = select i1 %.not22.i53, float %276, float %275, !dbg !53
  %277 = fmul float %250, %.07.i54, !dbg !53
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not23.i55 = icmp eq i32 %278, 0, !dbg !53
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float %250, float %250) #5, !dbg !53
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float %250, float %250) #5, !dbg !53
  %.05.i56 = select i1 %.not23.i55, float %280, float %279, !dbg !53
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not24.i57 = icmp eq i32 %281, 0, !dbg !53
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %252, float 0x3FE62E4300000000, float %.05.i56) #5, !dbg !53
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %252, float 0x3FE62E4300000000, float %.05.i56) #5, !dbg !53
  %.04.i58 = select i1 %.not24.i57, float %283, float %282, !dbg !53
  %284 = icmp ugt i32 %242, 2139095039, !dbg !53
  br i1 %284, label %285, label %__nv_log1pf.exit65, !dbg !53

285:                                              ; preds = %__nv_log1pf.exit34
  %286 = icmp sgt i32 %242, -1082130432, !dbg !53
  br i1 %286, label %__nv_fmaf_rn.exit.i62, label %290, !dbg !53

__nv_fmaf_rn.exit.i62:                            ; preds = %285
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not25.i63 = icmp eq i32 %287, 0, !dbg !53
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %121, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %.03.i64 = select i1 %.not25.i63, float %289, float %288, !dbg !53
  br label %290, !dbg !53

290:                                              ; preds = %__nv_fmaf_rn.exit.i62, %285
  %r.0.i60 = phi float [ %.03.i64, %__nv_fmaf_rn.exit.i62 ], [ %.04.i58, %285 ], !dbg !53
  %291 = fcmp oeq float %121, 0.000000e+00, !dbg !53
  %r.1.i61 = select i1 %291, float -0.000000e+00, float %r.0.i60, !dbg !53
  br label %__nv_log1pf.exit65, !dbg !53

__nv_log1pf.exit65:                               ; preds = %__nv_log1pf.exit34, %290
  %r.2.i59 = phi float [ %r.1.i61, %290 ], [ %.04.i58, %__nv_log1pf.exit34 ], !dbg !53
  %292 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not.i66 = icmp eq i32 %292, 0, !dbg !53
  %293 = tail call float @llvm.nvvm.add.rz.ftz.f(float %123, float 1.000000e+00) #5, !dbg !53
  %294 = tail call float @llvm.nvvm.add.rz.f(float %123, float 1.000000e+00) #5, !dbg !53
  %.01.i67 = select i1 %.not.i66, float %294, float %293, !dbg !53
  %295 = bitcast float %.01.i67 to i32, !dbg !53
  %296 = add i32 %295, -1061158912, !dbg !53
  %297 = and i32 %296, -8388608, !dbg !53
  %298 = bitcast float %123 to i32, !dbg !53
  %299 = sub i32 %298, %297, !dbg !53
  %300 = bitcast i32 %299 to float, !dbg !53
  %301 = sub i32 1082130432, %297, !dbg !53
  %302 = bitcast i32 %301 to float, !dbg !53
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not14.i68 = icmp eq i32 %303, 0, !dbg !53
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %302, float -1.000000e+00) #5, !dbg !53
  %305 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %302, float -1.000000e+00) #5, !dbg !53
  %.09.i69 = select i1 %.not14.i68, float %305, float %304, !dbg !53
  %306 = fadd float %.09.i69, %300, !dbg !53
  %307 = sitofp i32 %297 to float, !dbg !53
  %308 = fmul float %307, 0x3E80000000000000, !dbg !53
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not15.i70 = icmp eq i32 %309, 0, !dbg !53
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %306, float 0x3FBB000240000000) #5, !dbg !53
  %311 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %306, float 0x3FBB000240000000) #5, !dbg !53
  %.012.i71 = select i1 %.not15.i70, float %311, float %310, !dbg !53
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not16.i72 = icmp eq i32 %312, 0, !dbg !53
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i71, float %306, float 0xBFC0EF1C00000000) #5, !dbg !53
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i71, float %306, float 0xBFC0EF1C00000000) #5, !dbg !53
  %.010.i73 = select i1 %.not16.i72, float %314, float %313, !dbg !53
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not17.i74 = icmp eq i32 %315, 0, !dbg !53
  %316 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i73, float %306, float 0x3FC28C8EA0000000) #5, !dbg !53
  %317 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i73, float %306, float 0x3FC28C8EA0000000) #5, !dbg !53
  %.06.i75 = select i1 %.not17.i74, float %317, float %316, !dbg !53
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not18.i76 = icmp eq i32 %318, 0, !dbg !53
  %319 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i75, float %306, float 0xBFC54D1BA0000000) #5, !dbg !53
  %320 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i75, float %306, float 0xBFC54D1BA0000000) #5, !dbg !53
  %.02.i77 = select i1 %.not18.i76, float %320, float %319, !dbg !53
  %321 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not19.i78 = icmp eq i32 %321, 0, !dbg !53
  %322 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i77, float %306, float 0x3FC995F3C0000000) #5, !dbg !53
  %323 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i77, float %306, float 0x3FC995F3C0000000) #5, !dbg !53
  %.0.i79 = select i1 %.not19.i78, float %323, float %322, !dbg !53
  %324 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not20.i80 = icmp eq i32 %324, 0, !dbg !53
  %325 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i79, float %306, float 0xBFD0000840000000) #5, !dbg !53
  %326 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i79, float %306, float 0xBFD0000840000000) #5, !dbg !53
  %.011.i81 = select i1 %.not20.i80, float %326, float %325, !dbg !53
  %327 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not21.i82 = icmp eq i32 %327, 0, !dbg !53
  %328 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i81, float %306, float 0x3FD5555CC0000000) #5, !dbg !53
  %329 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i81, float %306, float 0x3FD5555CC0000000) #5, !dbg !53
  %.08.i83 = select i1 %.not21.i82, float %329, float %328, !dbg !53
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not22.i84 = icmp eq i32 %330, 0, !dbg !53
  %331 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i83, float %306, float -5.000000e-01) #5, !dbg !53
  %332 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i83, float %306, float -5.000000e-01) #5, !dbg !53
  %.07.i85 = select i1 %.not22.i84, float %332, float %331, !dbg !53
  %333 = fmul float %306, %.07.i85, !dbg !53
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not23.i86 = icmp eq i32 %334, 0, !dbg !53
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %333, float %306, float %306) #5, !dbg !53
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %333, float %306, float %306) #5, !dbg !53
  %.05.i87 = select i1 %.not23.i86, float %336, float %335, !dbg !53
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not24.i88 = icmp eq i32 %337, 0, !dbg !53
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %308, float 0x3FE62E4300000000, float %.05.i87) #5, !dbg !53
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %308, float 0x3FE62E4300000000, float %.05.i87) #5, !dbg !53
  %.04.i89 = select i1 %.not24.i88, float %339, float %338, !dbg !53
  %340 = icmp ugt i32 %298, 2139095039, !dbg !53
  br i1 %340, label %341, label %__nv_log1pf.exit96, !dbg !53

341:                                              ; preds = %__nv_log1pf.exit65
  %342 = icmp sgt i32 %298, -1082130432, !dbg !53
  br i1 %342, label %__nv_fmaf_rn.exit.i93, label %346, !dbg !53

__nv_fmaf_rn.exit.i93:                            ; preds = %341
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !53
  %.not25.i94 = icmp eq i32 %343, 0, !dbg !53
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %123, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %123, float 0x7FF0000000000000, float 0x7FF0000000000000) #5, !dbg !53
  %.03.i95 = select i1 %.not25.i94, float %345, float %344, !dbg !53
  br label %346, !dbg !53

346:                                              ; preds = %__nv_fmaf_rn.exit.i93, %341
  %r.0.i91 = phi float [ %.03.i95, %__nv_fmaf_rn.exit.i93 ], [ %.04.i89, %341 ], !dbg !53
  %347 = fcmp oeq float %123, 0.000000e+00, !dbg !53
  %r.1.i92 = select i1 %347, float -0.000000e+00, float %r.0.i91, !dbg !53
  br label %__nv_log1pf.exit96, !dbg !53

__nv_log1pf.exit96:                               ; preds = %__nv_log1pf.exit65, %346
  %r.2.i90 = phi float [ %r.1.i92, %346 ], [ %.04.i89, %__nv_log1pf.exit65 ], !dbg !53
  %348 = fcmp ogt float %39, 2.000000e+01, !dbg !54
  %349 = fcmp ogt float %38, 2.000000e+01, !dbg !54
  %350 = fcmp ogt float %37, 2.000000e+01, !dbg !54
  %351 = fcmp ogt float %36, 2.000000e+01, !dbg !54
  %352 = insertelement <2 x i32> poison, i32 %89, i64 0, !dbg !45
  %353 = insertelement <2 x i32> %352, i32 %115, i64 1, !dbg !45
  %354 = bitcast <2 x i32> %353 to <2 x float>, !dbg !45
  %355 = insertelement <2 x i32> poison, i32 %74, i64 0, !dbg !41
  %356 = insertelement <2 x i32> %355, i32 %104, i64 1, !dbg !41
  %357 = bitcast <2 x i32> %356 to <2 x float>, !dbg !41
  %358 = sitofp <4 x i32> %47 to <4 x float>, !dbg !55
  %359 = fsub <2 x float> %354, %357, !dbg !56
  %360 = insertelement <2 x i32> poison, i32 %85, i64 0, !dbg !45
  %361 = insertelement <2 x i32> %360, i32 %111, i64 1, !dbg !45
  %362 = bitcast <2 x i32> %361 to <2 x float>, !dbg !45
  %363 = insertelement <2 x i32> poison, i32 %70, i64 0, !dbg !41
  %364 = insertelement <2 x i32> %363, i32 %100, i64 1, !dbg !41
  %365 = bitcast <2 x i32> %364 to <2 x float>, !dbg !41
  %366 = fsub <2 x float> %362, %365, !dbg !56
  %367 = fsub <4 x float> %46, %358, !dbg !57
  %368 = fcmp ogt <4 x float> %367, zeroinitializer, !dbg !58
  %369 = select <4 x i1> %368, <4 x float> %367, <4 x float> zeroinitializer, !dbg !60
  %370 = fcmp olt <4 x float> %369, splat (float 1.000000e+00), !dbg !61
  %371 = extractelement <4 x i1> %370, i64 3, !dbg !63
  %372 = extractelement <4 x float> %369, i64 3, !dbg !63
  %373 = select i1 %371, float %372, float 1.000000e+00, !dbg !63
  %374 = insertelement <2 x float> poison, float %373, i64 0, !dbg !65
  %375 = shufflevector <2 x float> %374, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !65
  %376 = fmul <2 x float> %375, %359, !dbg !65
  %377 = fadd <2 x float> %376, %357, !dbg !66
  %378 = extractelement <2 x float> %377, i64 0, !dbg !67
  %379 = extractelement <2 x float> %377, i64 1, !dbg !68
  %380 = fsub float %378, %379, !dbg !67
  %381 = extractelement <4 x i1> %370, i64 2, !dbg !69
  %382 = extractelement <4 x float> %369, i64 2, !dbg !69
  %383 = select i1 %381, float %382, float 1.000000e+00, !dbg !69
  %384 = fmul float %383, %380, !dbg !70
  %385 = fadd float %379, %384, !dbg !68
  %386 = extractelement <4 x i1> %370, i64 1, !dbg !63
  %387 = extractelement <4 x float> %369, i64 1, !dbg !63
  %388 = select i1 %386, float %387, float 1.000000e+00, !dbg !63
  %389 = insertelement <2 x float> poison, float %388, i64 0, !dbg !65
  %390 = shufflevector <2 x float> %389, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !65
  %391 = fmul <2 x float> %366, %390, !dbg !65
  %392 = fadd <2 x float> %391, %365, !dbg !66
  %393 = extractelement <2 x float> %392, i64 0, !dbg !67
  %394 = extractelement <2 x float> %392, i64 1, !dbg !68
  %395 = fsub float %393, %394, !dbg !67
  %396 = extractelement <4 x i1> %370, i64 0, !dbg !69
  %397 = extractelement <4 x float> %369, i64 0, !dbg !69
  %398 = select i1 %396, float %397, float 1.000000e+00, !dbg !69
  %399 = fmul float %398, %395, !dbg !70
  %400 = fadd float %394, %399, !dbg !68
  %401 = select i1 %351, float %36, float %r.2.i, !dbg !71
  %402 = select i1 %350, float %37, float %r.2.i28, !dbg !71
  %403 = select i1 %349, float %38, float %r.2.i59, !dbg !71
  %404 = select i1 %348, float %39, float %r.2.i90, !dbg !71
  %405 = fsub float %401, %385, !dbg !72
  %406 = fsub float %402, %385, !dbg !72
  %407 = fsub float %403, %385, !dbg !72
  %408 = fsub float %404, %385, !dbg !72
  %409 = fmul float %405, %405, !dbg !73
  %410 = fmul float %406, %406, !dbg !73
  %411 = fmul float %407, %407, !dbg !73
  %412 = fmul float %408, %408, !dbg !73
  %413 = fmul float %409, -3.000000e+02, !dbg !74
  %414 = fmul float %410, -3.000000e+02, !dbg !74
  %415 = fmul float %411, -3.000000e+02, !dbg !74
  %416 = fmul float %412, -3.000000e+02, !dbg !74
  %417 = fmul float %413, 0x3FF7154760000000, !dbg !75
  %418 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %417) #5, !dbg !75
  %419 = fmul float %414, 0x3FF7154760000000, !dbg !75
  %420 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %419) #5, !dbg !75
  %421 = fmul float %415, 0x3FF7154760000000, !dbg !75
  %422 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %421) #5, !dbg !75
  %423 = fmul float %416, 0x3FF7154760000000, !dbg !75
  %424 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %423) #5, !dbg !75
  %425 = fmul float %405, %418, !dbg !76
  %426 = fmul float %406, %420, !dbg !76
  %427 = fmul float %407, %422, !dbg !76
  %428 = fmul float %408, %424, !dbg !76
  %429 = fadd float %425, %426, !dbg !77
  %430 = fadd float %429, %427, !dbg !77
  %431 = fadd float %430, %428, !dbg !77
  %432 = select i1 %15, float %431, float 0.000000e+00, !dbg !77
  %433 = bitcast float %432 to i32, !dbg !82
  %434 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %433, i32 2, i32 31), !dbg !82
  %435 = bitcast i32 %434 to float, !dbg !82
  %436 = fadd float %432, %435, !dbg !77
  %437 = bitcast float %436 to i32, !dbg !82
  %438 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %437, i32 1, i32 31), !dbg !82
  %439 = bitcast i32 %438 to float, !dbg !82
  %440 = fadd float %436, %439, !dbg !77
  %441 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !83
  %442 = bitcast float %440 to <1 x i32>, !dbg !83
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %441, <1 x i32> %442, i1 true) #5, !dbg !83
  tail call void @llvm.nvvm.barrier0(), !dbg !83
  %443 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !83
  %444 = load float, ptr addrspace(3) %443, align 4, !dbg !83
  %445 = fadd float %400, %444, !dbg !83
  tail call void @llvm.nvvm.barrier0(), !dbg !84
  %446 = sext i32 %14 to i64, !dbg !85
  %447 = getelementptr float, ptr addrspace(1) %0, i64 %446, !dbg !85
  %448 = and i32 %9, 96, !dbg !86
  %449 = icmp eq i32 %448, 0, !dbg !86
  %450 = bitcast float %400 to i32, !dbg !86
  %451 = and i1 %449, %16, !dbg !86
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %450, ptr addrspace(1) %447, i1 %451) #5, !dbg !86
  tail call void @llvm.nvvm.barrier0(), !dbg !87
  %452 = getelementptr float, ptr addrspace(1) %1, i64 %446, !dbg !88
  %453 = bitcast float %445 to i32, !dbg !89
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %453, ptr addrspace(1) %452, i1 %451) #5, !dbg !89
  ret void, !dbg !90
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.smax.v4i32(<4 x i32>, <4 x i32>) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmv6kd6j655hmzzrxm6mpooa2c2uuoanqdzqf5pfcl3sneiu4omr.py", directory: "inductor_cache/mv")
!4 = !{ptr @triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3", linkageName: "triton_per_fused__to_copy__unsafe_index_abs_add_arange_clamp_exp_mul_pow_sub_sum_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 29, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 19, scope: !7)
!18 = !DILocation(line: 34, column: 19, scope: !7)
!19 = !DILocation(line: 35, column: 19, scope: !7)
!20 = !DILocation(line: 36, column: 39, scope: !7)
!21 = !DILocation(line: 36, column: 36, scope: !7)
!22 = !DILocation(line: 36, column: 48, scope: !7)
!23 = !DILocation(line: 36, column: 44, scope: !7)
!24 = !DILocation(line: 36, column: 31, scope: !7)
!25 = !DILocation(line: 36, column: 53, scope: !7)
!26 = !DILocation(line: 29, column: 26, scope: !7)
!27 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 42, column: 40, scope: !7)
!31 = !DILocation(line: 43, column: 19, scope: !7)
!32 = !DILocation(line: 64, column: 41, scope: !7)
!33 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !34)
!34 = !DILocation(line: 47, column: 41, scope: !7)
!35 = !DILocation(line: 53, column: 41, scope: !7)
!36 = !DILocation(line: 64, column: 39, scope: !7)
!37 = !DILocation(line: 53, column: 39, scope: !7)
!38 = !DILocation(line: 53, column: 52, scope: !7)
!39 = !DILocation(line: 53, column: 49, scope: !7)
!40 = !DILocation(line: 53, column: 31, scope: !7)
!41 = !DILocation(line: 53, column: 57, scope: !7)
!42 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !43)
!43 = !DILocation(line: 55, column: 42, scope: !7)
!44 = !DILocation(line: 56, column: 31, scope: !7)
!45 = !DILocation(line: 56, column: 57, scope: !7)
!46 = !DILocation(line: 64, column: 48, scope: !7)
!47 = !DILocation(line: 64, column: 31, scope: !7)
!48 = !DILocation(line: 64, column: 56, scope: !7)
!49 = !DILocation(line: 65, column: 39, scope: !7)
!50 = !DILocation(line: 65, column: 31, scope: !7)
!51 = !DILocation(line: 65, column: 56, scope: !7)
!52 = !DILocation(line: 79, column: 24, scope: !7)
!53 = !DILocation(line: 80, column: 28, scope: !7)
!54 = !DILocation(line: 78, column: 20, scope: !7)
!55 = !DILocation(line: 70, column: 20, scope: !7)
!56 = !DILocation(line: 57, column: 20, scope: !7)
!57 = !DILocation(line: 71, column: 19, scope: !7)
!58 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !59)
!59 = !DILocation(line: 72, column: 42, scope: !7)
!60 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !59)
!61 = !DILocation(line: 110, column: 15, scope: !28, inlinedAt: !62)
!62 = !DILocation(line: 73, column: 42, scope: !7)
!63 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !64)
!64 = !DILocation(line: 61, column: 42, scope: !7)
!65 = !DILocation(line: 62, column: 20, scope: !7)
!66 = !DILocation(line: 63, column: 20, scope: !7)
!67 = !DILocation(line: 69, column: 20, scope: !7)
!68 = !DILocation(line: 75, column: 20, scope: !7)
!69 = !DILocation(line: 113, column: 29, scope: !28, inlinedAt: !62)
!70 = !DILocation(line: 74, column: 20, scope: !7)
!71 = !DILocation(line: 82, column: 35, scope: !7)
!72 = !DILocation(line: 83, column: 20, scope: !7)
!73 = !DILocation(line: 85, column: 20, scope: !7)
!74 = !DILocation(line: 87, column: 20, scope: !7)
!75 = !DILocation(line: 88, column: 24, scope: !7)
!76 = !DILocation(line: 89, column: 20, scope: !7)
!77 = !DILocation(line: 256, column: 15, scope: !78, inlinedAt: !81)
!78 = distinct !DILexicalBlockFile(scope: !80, file: !79, discriminator: 0)
!79 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!80 = distinct !DILexicalBlockFile(scope: !7, file: !79, discriminator: 0)
!81 = !DILocation(line: 92, column: 26, scope: !7)
!82 = !DILocation(line: 267, column: 36, scope: !80, inlinedAt: !81)
!83 = !DILocation(line: 93, column: 20, scope: !7)
!84 = !DILocation(line: 94, column: 4, scope: !7)
!85 = !DILocation(line: 95, column: 28, scope: !7)
!86 = !DILocation(line: 95, column: 40, scope: !7)
!87 = !DILocation(line: 96, column: 4, scope: !7)
!88 = !DILocation(line: 97, column: 28, scope: !7)
!89 = !DILocation(line: 97, column: 40, scope: !7)
!90 = !DILocation(line: 97, column: 4, scope: !7)
