//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_gather_sort_0 // -- Begin function triton_per_fused_gather_sort_0
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 102, 99, 47, 99, 102, 99, 98, 100, 102, 108, 52, 118, 111, 50, 103, 54, 54, 106, 53, 117, 99, 102, 118, 108, 113, 52, 119, 108, 105, 107, 50, 115, 107, 104, 111, 53, 120, 97, 111, 97, 111, 104, 118, 50, 104, 99, 54, 106, 102, 108, 121, 54, 122, 97, 53, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 49, 48, 32, 60, 32, 52};
                                        // @triton_per_fused_gather_sort_0
.visible .entry triton_per_fused_gather_sort_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_gather_sort_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_gather_sort_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_gather_sort_0_param_2,
	.param .u32 triton_per_fused_gather_sort_0_param_3,
	.param .u32 triton_per_fused_gather_sort_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<71>;
	.loc	1 19 0                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_per_fused_gather_sort_0_param_0];
$L__tmp0:
	.loc	1 23 28                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:23:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:23:33
	shl.b32 	%r3, %r2, 7;
	.loc	1 24 44                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:24:44
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 127;
	.loc	1 24 23                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:24:23
	or.b32  	%r1, %r3, %r5;
	.loc	1 25 21                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:25:21
	setp.gt.s32 	%p7, %r1, 255;
	setp.lt.s32 	%p6, %r1, 256;
	.loc	1 31 41                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:41
	shl.b32 	%r6, %r1, 2;
	.loc	1 31 34                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:34
	mul.wide.s32 	%rd15, %r6, 8;
	add.s64 	%rd10, %rd14, %rd15;
	add.s64 	%rd13, %rd10, 16;
	.loc	1 31 46                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:31:46
	// begin inline asm
	mov.u64 %rd8, 0x0;
	mov.u64 %rd9, 0x0;
	@%p6 ld.global.v2.b64 { %rd8, %rd9 }, [ %rd10 + 0 ];
	@!%p6 mov.u64 %rd8, 0x0;
	@!%p6 mov.u64 %rd9, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	mov.u64 %rd12, 0x0;
	@%p6 ld.global.v2.b64 { %rd11, %rd12 }, [ %rd13 + 0 ];
	@!%p6 mov.u64 %rd11, 0x0;
	@!%p6 mov.u64 %rd12, 0x0;
	// end inline asm
$L__tmp1:
	.loc	2 548 38                        // triton_helpers.py:548:38
	xor.b64  	%rd16, %rd8, %rd9;
	xor.b64  	%rd17, %rd11, %rd12;
	.loc	2 538 22                        // triton_helpers.py:538:22
	setp.gt.s64 	%p8, %rd8, %rd9;
	setp.gt.s64 	%p9, %rd11, %rd12;
	.loc	2 548 46                        // triton_helpers.py:548:46
	selp.b64 	%rd18, 0, %rd17, %p9;
	selp.b64 	%rd19, %rd16, 0, %p8;
	.loc	2 548 15                        // triton_helpers.py:548:15
	xor.b64  	%rd20, %rd19, %rd8;
	xor.b64  	%rd21, %rd18, %rd11;
	xor.b64  	%rd22, %rd19, %rd9;
	xor.b64  	%rd23, %rd18, %rd12;
	.loc	2 538 22                        // triton_helpers.py:538:22
	setp.gt.s64 	%p10, %rd20, %rd21;
	setp.gt.s64 	%p11, %rd22, %rd23;
	.loc	2 548 38                        // triton_helpers.py:548:38
	xor.b64  	%rd24, %rd21, %rd20;
	xor.b64  	%rd25, %rd23, %rd22;
	.loc	2 548 46                        // triton_helpers.py:548:46
	selp.b64 	%rd26, %rd24, 0, %p10;
	selp.b64 	%rd27, %rd25, 0, %p11;
	.loc	2 548 15                        // triton_helpers.py:548:15
	xor.b64  	%rd28, %rd26, %rd21;
	xor.b64  	%rd29, %rd26, %rd20;
	xor.b64  	%rd30, %rd27, %rd23;
	xor.b64  	%rd31, %rd27, %rd22;
	.loc	2 538 22                        // triton_helpers.py:538:22
	setp.gt.s64 	%p12, %rd29, %rd31;
	setp.gt.s64 	%p13, %rd28, %rd30;
	.loc	2 548 38                        // triton_helpers.py:548:38
	xor.b64  	%rd32, %rd31, %rd29;
	xor.b64  	%rd33, %rd30, %rd28;
	.loc	2 548 46                        // triton_helpers.py:548:46
	selp.b64 	%rd34, %rd33, 0, %p13;
	selp.b64 	%rd35, %rd32, 0, %p12;
	.loc	2 548 15                        // triton_helpers.py:548:15
	xor.b64  	%rd36, %rd35, %rd31;
	xor.b64  	%rd37, %rd34, %rd30;
	xor.b64  	%rd38, %rd35, %rd29;
	xor.b64  	%rd39, %rd34, %rd28;
$L__tmp2:
	.loc	1 40 33                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:40:33
	shr.u64 	%rd40, %rd39, 61;
	shr.u64 	%rd41, %rd38, 61;
	shr.u64 	%rd42, %rd37, 61;
	shr.u64 	%rd43, %rd36, 61;
	and.b64  	%rd44, %rd43, 4;
	and.b64  	%rd45, %rd42, 4;
	and.b64  	%rd46, %rd41, 4;
	and.b64  	%rd47, %rd40, 4;
	add.s64 	%rd4, %rd47, %rd39;
	add.s64 	%rd2, %rd46, %rd38;
	add.s64 	%rd5, %rd45, %rd37;
	add.s64 	%rd3, %rd44, %rd36;
	.loc	1 41 62                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:62
	or.b64  	%rd48, %rd3, %rd5;
	or.b64  	%rd49, %rd2, %rd4;
	or.b64  	%rd50, %rd49, %rd48;
	setp.lt.u64 	%p14, %rd50, 4;
	or.pred  	%p15, %p7, %p14;
	@%p15 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 62                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:0:62
	ld.param.u64 	%rd7, [triton_per_fused_gather_sort_0_param_2];
	ld.param.u64 	%rd6, [triton_per_fused_gather_sort_0_param_1];
	cvt.s64.s32 	%rd1, %r6;
	.loc	1 41 62                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:62
	bar.sync 	0;
	.loc	1 42 31                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:42:31
	shl.b64 	%rd56, %rd2, 2;
	add.s64 	%rd57, %rd6, %rd56;
	shl.b64 	%rd58, %rd1, 2;
	add.s64 	%rd51, %rd57, %rd58;
	shl.b64 	%rd59, %rd3, 2;
	add.s64 	%rd60, %rd6, %rd59;
	add.s64 	%rd52, %rd60, %rd58;
	shl.b64 	%rd61, %rd4, 2;
	add.s64 	%rd62, %rd6, %rd61;
	add.s64 	%rd53, %rd62, %rd58;
	shl.b64 	%rd63, %rd5, 2;
	add.s64 	%rd64, %rd6, %rd63;
	add.s64 	%rd54, %rd64, %rd58;
	.loc	1 42 46                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:42:46
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r11 }, [ %rd51 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd52 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r13 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r14 }, [ %rd54 + 0 ];
	// end inline asm
	.loc	1 43 25                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:43:25
	add.s64 	%rd55, %rd7, %rd58;
	.loc	1 43 44                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:43:44
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd55 + 0 ], { %r11, %r12, %r13, %r14 };
	// end inline asm
	.loc	1 43 4                          // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:43:4
	ret;
$L__BB0_1:
	.loc	1 41 62                         // cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py:41:62
	mov.u64 	%rd65, assertMessage_0;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, assertFile_0;
	cvta.global.u64 	%rd68, %rd67;
	mov.u64 	%rd69, assertFunc_0;
	cvta.global.u64 	%rd70, %rd69;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd66;
	.param .b64 param1;
	st.param.b64 	[param1], %rd68;
	.param .b32 param2;
	st.param.b32 	[param2], 41;
	.param .b64 param3;
	st.param.b64 	[param3], %rd70;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fc/cfcbdfl4vo2g66j5ucfvlq4wlik2skho5xaoaohv2hc6jfly6za5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 175                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 99
.b8 98
.b8 100
.b8 102
.b8 108
.b8 52
.b8 118
.b8 111
.b8 50
.b8 103
.b8 54
.b8 54
.b8 106
.b8 53
.b8 117
.b8 99
.b8 102
.b8 118
.b8 108
.b8 113
.b8 52
.b8 119
.b8 108
.b8 105
.b8 107
.b8 50
.b8 115
.b8 107
.b8 104
.b8 111
.b8 53
.b8 120
.b8 97
.b8 111
.b8 97
.b8 111
.b8 104
.b8 118
.b8 50
.b8 104
.b8 99
.b8 54
.b8 106
.b8 102
.b8 108
.b8 121
.b8 54
.b8 122
.b8 97
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 103
.b8 97
.b8 116
.b8 104
.b8 101
.b8 114
.b8 95
.b8 115
.b8 111
.b8 114
.b8 116
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 67                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
