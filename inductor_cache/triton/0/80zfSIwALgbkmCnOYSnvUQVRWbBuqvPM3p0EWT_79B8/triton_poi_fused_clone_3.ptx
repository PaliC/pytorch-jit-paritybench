//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_3 // -- Begin function triton_poi_fused_clone_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 112, 117, 47, 99, 112, 117, 100, 118, 54, 105, 106, 112, 109, 120, 52, 111, 122, 106, 108, 116, 101, 120, 99, 52, 104, 53, 119, 109, 114, 101, 119, 108, 104, 118, 109, 109, 109, 118, 122, 102, 111, 50, 109, 111, 112, 53, 103, 121, 54, 52, 119, 113, 52, 55, 121, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 54};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 112, 117, 47, 99, 112, 117, 100, 118, 54, 105, 106, 112, 109, 120, 52, 111, 122, 106, 108, 116, 101, 120, 99, 52, 104, 53, 119, 109, 114, 101, 119, 108, 104, 118, 109, 109, 109, 118, 122, 102, 111, 50, 109, 111, 112, 53, 103, 121, 54, 52, 119, 113, 52, 55, 121, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 54};
                                        // @triton_poi_fused_clone_3
.visible .entry triton_poi_fused_clone_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_3_param_2,
	.param .u32 triton_poi_fused_clone_3_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<20>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<47>;
	.loc	1 19 0                          // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_clone_3_param_0];
$L__tmp0:
	.loc	1 21 28                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:21:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:21:33
	shl.b32 	%r5, %r4, 8;
	.loc	1 22 36                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:22:36
	mov.u32 	%r6, %tid.x;
	shl.b32 	%r7, %r6, 1;
	and.b32  	%r8, %r7, 254;
	.loc	1 22 23                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:22:23
	or.b32  	%r1, %r5, %r8;
	.loc	1 23 21                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:23:21
	setp.gt.s32 	%p5, %r1, 2303;
	setp.lt.s32 	%p4, %r1, 2304;
	.loc	1 24 21                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:24:21
	shr.s32 	%r9, %r1, 31;
	shr.u32 	%r10, %r9, 30;
	add.s32 	%r11, %r1, %r10;
	shr.s32 	%r3, %r11, 2;
	.loc	1 24 26                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:24:26
	mul.hi.s32 	%r12, %r3, 954437177;
	shr.u32 	%r13, %r12, 31;
	shr.s32 	%r14, %r12, 1;
	add.s32 	%r15, %r14, %r13;
	mul.lo.s32 	%r17, %r15, 9;
	sub.s32 	%r18, %r3, %r17;
	.loc	1 25 21                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:25:21
	mul.hi.s32 	%r19, %r1, 954437177;
	shr.u32 	%r20, %r19, 31;
	shr.s32 	%r21, %r19, 3;
	add.s32 	%r22, %r21, %r20;
	.loc	1 25 27                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:25:27
	shr.s32 	%r23, %r22, 31;
	shr.u32 	%r24, %r23, 28;
	add.s32 	%r25, %r22, %r24;
	and.b32  	%r26, %r25, -16;
	sub.s32 	%r27, %r22, %r26;
	.loc	1 29 39                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:29:39
	cvt.u16.u32 	%rs1, %r18;
	cvt.s8.s32 	%rs2, %r18;
	mul.lo.s16 	%rs3, %rs2, 86;
	shr.u16 	%rs4, %rs3, 15;
	shr.u16 	%rs5, %rs3, 8;
	add.s16 	%rs6, %rs5, %rs4;
	.loc	1 29 33                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:29:33
	cvt.s16.s8 	%rs7, %rs6;
	mul.wide.s16 	%r29, %rs7, 4;
	.loc	1 29 51                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:29:51
	cvt.u16.u32 	%rs8, %r27;
	cvt.s8.s32 	%rs9, %r27;
	shr.u16 	%rs10, %rs9, 13;
	and.b16  	%rs11, %rs10, 3;
	add.s16 	%rs12, %rs8, %rs11;
	cvt.s16.s8 	%rs13, %rs12;
	shr.s16 	%rs14, %rs13, 2;
	cvt.s32.s16 	%r30, %rs14;
	.loc	1 29 45                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:29:45
	add.s32 	%r31, %r29, %r30;
	.loc	1 29 30                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:29:30
	mul.wide.s32 	%rd15, %r31, 8;
	add.s64 	%rd7, %rd14, %rd15;
	.loc	1 29 56                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:29:56
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 30 39                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:30:39
	mul.lo.s16 	%rs15, %rs6, 3;
	sub.s16 	%rs16, %rs1, %rs15;
	.loc	1 30 34                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:30:34
	cvt.s16.s8 	%rs17, %rs16;
	mul.wide.s16 	%r32, %rs17, 4;
	.loc	1 30 52                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:30:52
	and.b16  	%rs18, %rs12, 252;
	sub.s16 	%rs19, %rs8, %rs18;
	cvt.u32.u16 	%r33, %rs19;
	cvt.s32.s8 	%r34, %r33;
	.loc	1 30 47                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:30:47
	add.s32 	%r35, %r32, %r34;
	.loc	1 30 30                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:30:30
	mul.wide.s32 	%rd16, %r35, 8;
	add.s64 	%rd11, %rd14, %rd16;
	.loc	1 30 58                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:30:58
	// begin inline asm
	mov.u64 %rd10, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	@%p4 ld.global.L1::evict_last.b64 { %rd12 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 32 18                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:32:18
	add.s64 	%rd17, %rd6, 6;
	.loc	1 33 18                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:33:18
	setp.lt.s64 	%p6, %rd6, 0;
	.loc	1 34 32                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:34:32
	selp.b64 	%rd2, %rd17, %rd6, %p6;
	.loc	1 35 37                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:35:37
	setp.lt.u64 	%p7, %rd2, 6;
	.loc	1 35 60                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:35:60
	or.pred  	%p8, %p5, %p7;
	@%p8 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	bar.sync 	0;
	.loc	1 36 18                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:36:18
	add.s64 	%rd18, %rd10, 6;
	.loc	1 37 18                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:37:18
	setp.lt.s64 	%p10, %rd10, 0;
	.loc	1 38 32                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:38:32
	selp.b64 	%rd3, %rd18, %rd10, %p10;
	.loc	1 39 37                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:39:37
	setp.lt.u64 	%p11, %rd3, 6;
	.loc	1 39 60                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:39:60
	or.pred  	%p12, %p5, %p11;
	@%p12 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	.loc	1 0 60                          // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:0:60
	ld.param.u64 	%rd5, [triton_poi_fused_clone_3_param_2];
	ld.param.u64 	%rd4, [triton_poi_fused_clone_3_param_1];
	.loc	1 27 19                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:27:19
	shr.s32 	%r44, %r19, 7;
	add.s32 	%r45, %r44, %r20;
	.loc	1 26 19                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:26:19
	shl.b32 	%r46, %r3, 2;
	sub.s32 	%r47, %r1, %r46;
	.loc	1 39 60                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:39:60
	bar.sync 	0;
	.loc	1 43 21                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:43:21
	shl.b64 	%rd21, %rd2, 32;
	add.s64 	%rd22, %rd21, -4294967296;
	.loc	1 48 21                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:48:21
	shl.b64 	%rd23, %rd3, 32;
	add.s64 	%rd24, %rd23, -4294967296;
	.loc	1 52 20                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:52:20
	or.b64  	%rd25, %rd24, %rd22;
	setp.lt.u64 	%p17, %rd25, 17179869184;
	.loc	1 53 66                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:53:66
	shl.b32 	%r48, %r45, 6;
	.loc	1 53 31                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:53:31
	shl.b64 	%rd26, %rd3, 4;
	add.s64 	%rd27, %rd4, %rd26;
	mul.wide.s32 	%rd28, %r47, 4;
	add.s64 	%rd29, %rd27, %rd28;
	shl.b64 	%rd30, %rd2, 6;
	add.s64 	%rd31, %rd29, %rd30;
	mul.wide.s32 	%rd32, %r48, 4;
	add.s64 	%rd33, %rd31, %rd32;
	add.s64 	%rd19, %rd33, -80;
	.loc	1 53 79                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:53:79
	and.pred  	%p13, %p4, %p17;
	mov.b32 	%r38, 0;
	.loc	1 53 71                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:53:71
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p13 ld.global.v2.b32 { %r40, %r41 }, [ %rd19 + 0 ];
	@!%p13 mov.u32 %r40, %r38;
	@!%p13 mov.u32 %r41, %r38;
	// end inline asm
	.loc	1 54 25                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:54:25
	mul.wide.s32 	%rd34, %r1, 4;
	add.s64 	%rd20, %rd5, %rd34;
	.loc	1 54 37                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:54:37
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd20 + 0 ], { %r40, %r41 };
	// end inline asm
	.loc	1 54 4                          // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:54:4
	ret;
$L__BB0_1:
	.loc	1 35 60                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:35:60
	mov.u64 	%rd41, assertMessage_0;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, assertFile_0;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, assertFunc_0;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd42;
	.param .b64 param1;
	st.param.b64 	[param1], %rd44;
	.param .b32 param2;
	st.param.b32 	[param2], 35;
	.param .b64 param3;
	st.param.b64 	[param3], %rd46;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__BB0_3:
	.loc	1 39 60                         // cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py:39:60
	mov.u64 	%rd35, assertMessage_1;
	cvta.global.u64 	%rd36, %rd35;
	mov.u64 	%rd37, assertFile_1;
	cvta.global.u64 	%rd38, %rd37;
	mov.u64 	%rd39, assertFunc_1;
	cvta.global.u64 	%rd40, %rd39;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd36;
	.param .b64 param1;
	st.param.b64 	[param1], %rd38;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd40;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/pu/cpudv6ijpmx4ozjltexc4h5wmrewlhvmmmvzfo2mop5gy64wq47y.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 117
.b8 100
.b8 118
.b8 54
.b8 105
.b8 106
.b8 112
.b8 109
.b8 120
.b8 52
.b8 111
.b8 122
.b8 106
.b8 108
.b8 116
.b8 101
.b8 120
.b8 99
.b8 52
.b8 104
.b8 53
.b8 119
.b8 109
.b8 114
.b8 101
.b8 119
.b8 108
.b8 104
.b8 118
.b8 109
.b8 109
.b8 109
.b8 118
.b8 122
.b8 102
.b8 111
.b8 50
.b8 109
.b8 111
.b8 112
.b8 53
.b8 103
.b8 121
.b8 54
.b8 52
.b8 119
.b8 113
.b8 52
.b8 55
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
