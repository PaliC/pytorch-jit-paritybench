//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_embedding_mul_sigmoid_2 // -- Begin function triton_poi_fused_embedding_mul_sigmoid_2
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 114, 101, 47, 99, 114, 101, 99, 112, 51, 104, 52, 121, 113, 101, 106, 100, 54, 120, 99, 54, 100, 102, 114, 120, 103, 104, 113, 104, 107, 101, 52, 54, 113, 108, 50, 109, 111, 99, 104, 98, 104, 55, 104, 111, 118, 102, 103, 116, 105, 50, 116, 110, 97, 51, 107, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
                                        // @triton_poi_fused_embedding_mul_sigmoid_2
.visible .entry triton_poi_fused_embedding_mul_sigmoid_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_sigmoid_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_sigmoid_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_sigmoid_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_sigmoid_2_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_embedding_mul_sigmoid_2_param_4,
	.param .u32 triton_poi_fused_embedding_mul_sigmoid_2_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<29>;
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_embedding_mul_sigmoid_2_param_0];
$L__tmp0:
	.loc	1 21 28                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:21:28
	// begin inline asm
	mov.u32 %r5, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:21:33
	shl.b32 	%r7, %r5, 7;
	ld.param.u64 	%rd9, [triton_poi_fused_embedding_mul_sigmoid_2_param_2];
	.loc	1 22 36                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:22:36
	mov.u32 	%r8, %tid.x;
	and.b32  	%r9, %r8, 127;
	.loc	1 22 23                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:22:23
	or.b32  	%r1, %r7, %r9;
	.loc	1 23 21                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:23:21
	setp.gt.s32 	%p3, %r1, 1023;
	setp.lt.s32 	%p2, %r1, 1024;
	.loc	1 24 19                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:24:19
	shr.s32 	%r10, %r1, 31;
	shr.u32 	%r11, %r10, 30;
	add.s32 	%r12, %r1, %r11;
	shr.s32 	%r3, %r12, 2;
	.loc	1 27 19                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:27:19
	bfe.s32 	%r13, %r5, 24, 1;
	shr.u32 	%r14, %r13, 24;
	add.s32 	%r15, %r1, %r14;
	and.b32  	%r16, %r15, -256;
	sub.s32 	%r17, %r1, %r16;
	.loc	1 28 30                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:28:30
	mul.wide.s32 	%rd10, %r3, 8;
	add.s64 	%rd6, %rd8, %rd10;
	.loc	1 28 35                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:28:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 29 30                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:29:30
	mul.wide.s32 	%rd11, %r17, 4;
	add.s64 	%rd7, %rd9, %rd11;
	.loc	1 29 35                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:29:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r6 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 33 32                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:33:32
	shr.u64 	%rd12, %rd5, 61;
	and.b64  	%rd13, %rd12, 4;
	add.s64 	%rd1, %rd13, %rd5;
	.loc	1 34 37                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:34:37
	setp.lt.u64 	%p4, %rd1, 4;
	.loc	1 34 60                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:34:60
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:0:60
	ld.param.u64 	%rd4, [triton_poi_fused_embedding_mul_sigmoid_2_param_4];
	ld.param.u64 	%rd3, [triton_poi_fused_embedding_mul_sigmoid_2_param_3];
	ld.param.u64 	%rd2, [triton_poi_fused_embedding_mul_sigmoid_2_param_1];
	.loc	1 29 35                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:29:35
	mov.b32 	%f5, %r6;
	.loc	1 25 19                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:25:19
	shl.b32 	%r27, %r3, 2;
	sub.s32 	%r28, %r1, %r27;
	.loc	1 34 60                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:34:60
	bar.sync 	0;
	.loc	1 35 30                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:35:30
	shl.b64 	%rd17, %rd1, 4;
	add.s64 	%rd18, %rd2, %rd17;
	mul.wide.s32 	%rd19, %r28, 4;
	add.s64 	%rd14, %rd18, %rd19;
	.loc	1 35 44                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:35:44
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p2 ld.global.b32 { %r25 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r25;
	mov.f32 	%f7, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f8, %f7, %f6;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f8, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f9, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r21, %f9;
	mov.b32 	%r20, 1065353216;
	// begin inline asm
	div.full.f32 %r19, %r20, %r21;
	// end inline asm
	mov.b32 	%f10, %r19;
$L__tmp2:
	.loc	1 37 18                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:37:18
	mul.f32 	%f11, %f10, %f6;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f12, %f7, %f5;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f4, %f12, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f13, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r24, %f13;
	// begin inline asm
	div.full.f32 %r22, %r20, %r24;
	// end inline asm
	mov.b32 	%f14, %r22;
$L__tmp4:
	.loc	1 39 19                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:39:19
	mul.f32 	%f15, %f14, %f5;
	.loc	1 40 19                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:40:19
	mul.f32 	%f16, %f11, %f15;
	.loc	1 41 25                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:41:25
	mul.wide.s32 	%rd20, %r1, 4;
	add.s64 	%rd15, %rd3, %rd20;
	.loc	1 41 36                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:41:36
	// begin inline asm
	@%p2 st.global.b32 [ %rd15 + 0 ], { %r25 };
	// end inline asm
	.loc	1 42 25                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:42:25
	add.s64 	%rd16, %rd4, %rd20;
	.loc	1 42 37                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:42:37
	mov.b32 	%r26, %f16;
	// begin inline asm
	@%p2 st.global.b32 [ %rd16 + 0 ], { %r26 };
	// end inline asm
	.loc	1 42 4                          // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:42:4
	ret;
$L__BB0_1:
	.loc	1 34 60                         // crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py:34:60
	mov.u64 	%rd21, assertMessage_0;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, assertFile_0;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, assertFunc_0;
	cvta.global.u64 	%rd26, %rd25;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd22;
	.param .b64 param1;
	st.param.b64 	[param1], %rd24;
	.param .b32 param2;
	st.param.b32 	[param2], 34;
	.param .b64 param3;
	st.param.b64 	[param3], %rd26;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/re/crecp3h4yqejd6xc6dfrxghqhke46ql2mochbh7hovfgti2tna3k.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 209                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xca DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 101
.b8 99
.b8 112
.b8 51
.b8 104
.b8 52
.b8 121
.b8 113
.b8 101
.b8 106
.b8 100
.b8 54
.b8 120
.b8 99
.b8 54
.b8 100
.b8 102
.b8 114
.b8 120
.b8 103
.b8 104
.b8 113
.b8 104
.b8 107
.b8 101
.b8 52
.b8 54
.b8 113
.b8 108
.b8 50
.b8 109
.b8 111
.b8 99
.b8 104
.b8 98
.b8 104
.b8 55
.b8 104
.b8 111
.b8 118
.b8 102
.b8 103
.b8 116
.b8 105
.b8 50
.b8 116
.b8 110
.b8 97
.b8 51
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 101
.b8 109
.b8 98
.b8 101
.b8 100
.b8 100
.b8 105
.b8 110
.b8 103
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
