//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_exp_mul_tanh_6 // -- Begin function triton_poi_fused_add_exp_mul_tanh_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_exp_mul_tanh_6
.visible .entry triton_poi_fused_add_exp_mul_tanh_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_mul_tanh_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_mul_tanh_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_mul_tanh_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_mul_tanh_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_exp_mul_tanh_6_param_4,
	.param .u32 triton_poi_fused_add_exp_mul_tanh_6_param_5,
	.param .u32 triton_poi_fused_add_exp_mul_tanh_6_param_6
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<76>;
	.reg .f32 	%f<62>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_add_exp_mul_tanh_6_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_add_exp_mul_tanh_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:22:28
	// begin inline asm
	mov.u32 %r9, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:22:33
	shl.b32 	%r16, %r9, 3;
	ld.param.u64 	%rd8, [triton_poi_fused_add_exp_mul_tanh_6_param_2];
	.loc	1 23 44                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r17, %r1, 2, 2;
	and.b32  	%r18, %r1, 16;
	shr.u32 	%r19, %r18, 2;
	or.b32  	%r20, %r17, %r19;
	and.b32  	%r21, %r1, 3;
	and.b32  	%r22, %r1, 7;
	.loc	1 23 23                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:23:23
	or.b32  	%r2, %r20, %r16;
	or.b32  	%r23, %r16, %r22;
	.loc	1 24 21                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:24:21
	setp.lt.s32 	%p6, %r2, 8;
	setp.lt.s32 	%p7, %r23, 8;
	.loc	1 25 28                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:25:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:25:33
	shl.b32 	%r24, %r10, 2;
	.loc	1 26 44                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:26:44
	bfe.u32 	%r3, %r1, 3, 1;
	shr.u32 	%r4, %r18, 3;
	or.b32  	%r25, %r3, %r4;
	.loc	1 26 23                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:26:23
	or.b32  	%r26, %r24, %r21;
	or.b32  	%r27, %r25, %r24;
	.loc	1 27 21                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:27:21
	setp.lt.s32 	%p8, %r26, 4;
	setp.lt.s32 	%p9, %r27, 4;
	.loc	1 31 19                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:31:19
	shr.u32 	%r29, %r23, 31;
	add.s32 	%r30, %r23, %r29;
	.loc	1 30 19                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:30:19
	and.b32  	%r31, %r30, -2;
	sub.s32 	%r32, %r23, %r31;
	.loc	1 32 37                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:32:37
	shl.b32 	%r33, %r2, 3;
	.loc	1 32 35                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:32:35
	add.s32 	%r5, %r26, %r33;
	.loc	1 32 30                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:32:30
	mul.wide.s32 	%rd9, %r5, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 32 50                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:32:50
	and.pred  	%p15, %p6, %p8;
	and.pred  	%p4, %p7, %p9;
	.loc	1 32 42                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:32:42
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	shl.b32 	%r34, %r1, 3;
	and.b32  	%r35, %r34, 24;
	or.b32  	%r36, %r20, %r35;
	and.b32  	%r6, %r1, 31;
	shr.u32 	%r37, %r35, 1;
	mov.u32 	%r38, global_smem;
	add.s32 	%r39, %r38, %r37;
	shl.b32 	%r40, %r36, 2;
	add.s32 	%r12, %r39, %r40;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.b32 [ %r12 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r41, %r1, 1;
	and.b32  	%r42, %r41, 12;
	add.s32 	%r43, %r38, %r42;
	shl.b32 	%r44, %r6, 2;
	add.s32 	%r45, %r43, %r44;
	.loc	1 33 37                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:33:37
	shl.b32 	%r46, %r27, 1;
	.loc	1 33 35                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:33:35
	add.s32 	%r47, %r46, %r32;
	.loc	1 33 44                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:33:44
	shl.b32 	%r48, %r30, 2;
	and.b32  	%r49, %r48, -8;
	.loc	1 33 42                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:33:42
	add.s32 	%r50, %r47, %r49;
	.loc	1 33 30                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:33:30
	mul.wide.s32 	%rd10, %r50, 4;
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 33 49                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:33:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r14;
	.loc	1 34 30                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:34:30
	add.s64 	%rd5, %rd8, %rd10;
	.loc	1 34 49                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:34:49
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r15 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r15;
	.loc	1 35 26                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:35:26
	abs.ftz.f32 	%f4, %f2;
	setp.ltu.f32 	%p10, %f4, 0f3F19999A;
	mov.f32 	%f53, 0f3F800000;
	mov.f32 	%f54, 0fC0000000;
	mov.f32 	%f55, 0fBD563CAE;
	mov.f32 	%f56, 0f3C80F082;
	mov.f32 	%f57, 0f3E085941;
	mov.f32 	%f58, 0fBEAAA9ED;
	mov.f32 	%f59, 0f00000000;
	@%p10 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f21, %f2, %f2;
	fma.rn.ftz.f32 	%f24, %f56, %f21, %f55;
	fma.rn.ftz.f32 	%f26, %f24, %f21, %f57;
	fma.rn.ftz.f32 	%f28, %f26, %f21, %f58;
	fma.rn.ftz.f32 	%f30, %f28, %f21, %f59;
	fma.rn.ftz.f32 	%f60, %f30, %f2, %f2;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f15, %f4, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f16, %f15;
	add.f32 	%f14, %f16, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f13,%f14;
	// end inline asm
	fma.rn.ftz.f32 	%f19, %f13, %f54, %f53;
	setp.ge.f32 	%p11, %f4, 0f41102CB4;
	selp.f32 	%f20, 0f3F800000, %f19, %p11;
	mov.b32 	%r51, %f20;
	and.b32  	%r52, %r14, -2147483648;
	or.b32  	%r53, %r52, %r51;
	mov.b32 	%f60, %r53;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 26                          // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:0:26
	ld.param.u64 	%rd2, [triton_poi_fused_add_exp_mul_tanh_6_param_4];
	ld.param.u64 	%rd1, [triton_poi_fused_add_exp_mul_tanh_6_param_3];
	ld.shared.f32 	%f1, [%r45];
	.loc	1 36 23                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:36:23
	mul.f32 	%f32, %f60, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f31, %f32;
	// end inline asm
	.loc	1 38 26                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:38:26
	abs.ftz.f32 	%f9, %f3;
	setp.ltu.f32 	%p12, %f9, 0f3F19999A;
	@%p12 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i11
	mul.f32 	%f41, %f3, %f3;
	fma.rn.ftz.f32 	%f44, %f56, %f41, %f55;
	fma.rn.ftz.f32 	%f46, %f44, %f41, %f57;
	fma.rn.ftz.f32 	%f48, %f46, %f41, %f58;
	fma.rn.ftz.f32 	%f50, %f48, %f41, %f59;
	fma.rn.ftz.f32 	%f61, %f50, %f3, %f3;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i6
	mul.f32 	%f35, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f36, %f35;
	add.f32 	%f34, %f36, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f33,%f34;
	// end inline asm
	fma.rn.ftz.f32 	%f39, %f33, %f54, %f53;
	setp.ge.f32 	%p13, %f9, 0f41102CB4;
	selp.f32 	%f40, 0f3F800000, %f39, %p13;
	mov.b32 	%r54, %f40;
	and.b32  	%r55, %r15, -2147483648;
	or.b32  	%r56, %r55, %r54;
	mov.b32 	%f61, %r56;
$L__BB0_6:                              // %__nv_tanhf.exit22
	.loc	1 37 18                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:37:18
	mul.f32 	%f51, %f1, %f31;
	.loc	1 39 18                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:39:18
	fma.rn.f32 	%f52, %f1, %f31, %f61;
	.loc	1 40 30                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:40:30
	shl.b32 	%r63, %r2, 2;
	sub.s32 	%r64, %r5, %r63;
	.loc	1 40 25                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:40:25
	mul.wide.s32 	%rd13, %r64, 4;
	add.s64 	%rd11, %rd1, %rd13;
	.loc	1 40 43                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:40:43
	bar.sync 	0;
	shl.b32 	%r65, %r1, 2;
	and.b32  	%r66, %r65, 28;
	or.b32  	%r67, %r66, %r3;
	or.b32  	%r68, %r67, %r4;
	add.s32 	%r70, %r38, %r66;
	shl.b32 	%r71, %r68, 2;
	add.s32 	%r57, %r70, %r71;
	mov.b32 	%r58, %f51;
	// begin inline asm
	@%p14 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r72, %r6, 28;
	add.s32 	%r73, %r38, %r72;
	add.s32 	%r75, %r73, %r44;
	ld.shared.u32 	%r59, [%r75];
	// begin inline asm
	@%p15 st.global.b32 [ %rd11 + 0 ], { %r59 };
	// end inline asm
	.loc	1 41 25                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:41:25
	add.s64 	%rd12, %rd2, %rd13;
	.loc	1 41 43                         // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:41:43
	bar.sync 	0;
	mov.b32 	%r61, %f52;
	// begin inline asm
	@%p14 st.shared.b32 [ %r57 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r62, [%r75];
	// begin inline asm
	@%p15 st.global.b32 [ %rd12 + 0 ], { %r62 };
	// end inline asm
	.loc	1 41 4                          // cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ct/cctobgbjx5e6ruqla25wq7ayzvesjbuhw5uzxy5yk4bfjim75dgg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 116
.b8 111
.b8 98
.b8 103
.b8 98
.b8 106
.b8 120
.b8 53
.b8 101
.b8 54
.b8 114
.b8 117
.b8 113
.b8 108
.b8 97
.b8 50
.b8 53
.b8 119
.b8 113
.b8 55
.b8 97
.b8 121
.b8 122
.b8 118
.b8 101
.b8 115
.b8 106
.b8 98
.b8 117
.b8 104
.b8 119
.b8 53
.b8 117
.b8 122
.b8 120
.b8 121
.b8 53
.b8 121
.b8 107
.b8 52
.b8 98
.b8 102
.b8 106
.b8 105
.b8 109
.b8 55
.b8 53
.b8 100
.b8 103
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 116
.b8 0
	}
	.section	.debug_macinfo	{	}
