//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_8  // -- Begin function triton_poi_fused_add_8
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_8
.visible .entry triton_poi_fused_add_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_8_param_2,
	.param .u32 triton_poi_fused_add_8_param_3,
	.param .u32 triton_poi_fused_add_8_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<86>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_add_8_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:22:33
	shl.b32 	%r47, %r1, 8;
	ld.param.u64 	%rd10, [triton_poi_fused_add_8_param_2];
	.loc	1 23 44                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:23:44
	mov.u32 	%r48, %tid.x;
	shl.b32 	%r49, %r48, 2;
	and.b32  	%r50, %r49, 252;
	and.b32  	%r51, %r48, 127;
	.loc	1 23 23                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:23:23
	or.b32  	%r52, %r47, %r50;
	or.b32  	%r53, %r47, %r51;
	or.b32  	%r54, %r53, 128;
	.loc	1 24 21                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:24:21
	setp.lt.s32 	%p16, %r52, 256;
	setp.lt.s32 	%p17, %r53, 256;
	setp.lt.s32 	%p18, %r54, 256;
	.loc	1 25 28                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:25:33
	shl.b32 	%r55, %r2, 2;
	.loc	1 26 44                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:26:44
	bfe.u32 	%r56, %r48, 6, 1;
	.loc	1 26 23                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:26:23
	or.b32  	%r57, %r55, %r56;
	or.b32  	%r58, %r57, 2;
	.loc	1 27 21                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:27:21
	setp.lt.s32 	%p19, %r57, 4;
	setp.lt.s32 	%p20, %r58, 4;
	setp.lt.s32 	%p13, %r55, 4;
	.loc	1 30 19                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:30:19
	shr.s32 	%r60, %r52, 31;
	shr.u32 	%r61, %r60, 26;
	add.s32 	%r62, %r52, %r61;
	.loc	1 29 19                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:29:19
	and.b32  	%r63, %r62, -64;
	sub.s32 	%r64, %r52, %r63;
	.loc	1 32 38                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:38
	shl.b32 	%r65, %r57, 6;
	shl.b32 	%r66, %r58, 6;
	.loc	1 32 47                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:47
	shl.b32 	%r67, %r62, 2;
	and.b32  	%r68, %r67, -256;
	.loc	1 32 35                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:35
	add.s32 	%r69, %r68, %r64;
	.loc	1 32 43                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:43
	add.s32 	%r70, %r69, %r65;
	add.s32 	%r71, %r69, %r66;
	.loc	1 32 30                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:30
	mul.wide.s32 	%rd11, %r70, 4;
	add.s64 	%rd1, %rd9, %rd11;
	mul.wide.s32 	%rd12, %r71, 4;
	add.s64 	%rd2, %rd9, %rd12;
	.loc	1 32 60                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:60
	and.pred  	%p1, %p16, %p19;
	and.pred  	%p2, %p20, %p16;
	and.pred  	%p11, %p13, %p17;
	and.pred  	%p12, %p18, %p13;
	.loc	1 32 52                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:32:52
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r72, %r48, 4;
	and.b32  	%r73, %r72, 1008;
	or.b32  	%r74, %r73, %r56;
	and.b32  	%r75, %r49, 508;
	mov.u32 	%r76, global_smem;
	add.s32 	%r77, %r76, %r73;
	shl.b32 	%r78, %r74, 2;
	add.s32 	%r11, %r77, %r78;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 20;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 40;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 60;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 48;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 68;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r79, %r76, %r75;
	shl.b32 	%r80, %r75, 2;
	add.s32 	%r81, %r79, %r80;
	ld.shared.f32 	%f1, [%r81];
	ld.shared.f32 	%f2, [%r81+4];
	ld.shared.f32 	%f3, [%r81+8];
	ld.shared.f32 	%f4, [%r81+12];
	ld.shared.f32 	%f5, [%r81+2560];
	ld.shared.f32 	%f6, [%r81+2564];
	ld.shared.f32 	%f7, [%r81+2568];
	ld.shared.f32 	%f8, [%r81+2572];
	.loc	1 33 39                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:33:39
	add.s32 	%r82, %r53, %r2;
	shl.b32 	%r83, %r82, 2;
	add.s32 	%r84, %r2, %r54;
	shl.b32 	%r85, %r84, 2;
	.loc	1 33 34                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:33:34
	mul.wide.s32 	%rd13, %r83, 4;
	add.s64 	%rd3, %rd8, %rd13;
	mul.wide.s32 	%rd14, %r85, 4;
	add.s64 	%rd4, %rd8, %rd14;
	.loc	1 33 46                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:33:46
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r27;
	mov.b32 	%f10, %r28;
	mov.b32 	%f11, %r29;
	mov.b32 	%f12, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p12 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r31;
	mov.b32 	%f14, %r32;
	mov.b32 	%f15, %r33;
	mov.b32 	%f16, %r34;
	.loc	1 34 30                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:34:30
	mul.wide.s32 	%rd15, %r55, 4;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 34 35                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:34:35
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p13 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r35;
	mov.b32 	%f18, %r36;
	mov.b32 	%f19, %r37;
	mov.b32 	%f20, %r38;
	.loc	1 35 18                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:35:18
	add.f32 	%f21, %f9, %f17;
	add.f32 	%f22, %f10, %f18;
	add.f32 	%f23, %f11, %f19;
	add.f32 	%f24, %f12, %f20;
	add.f32 	%f25, %f13, %f17;
	add.f32 	%f26, %f14, %f18;
	add.f32 	%f27, %f15, %f19;
	add.f32 	%f28, %f16, %f20;
	.loc	1 36 18                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:36:18
	add.f32 	%f29, %f1, %f21;
	add.f32 	%f30, %f2, %f22;
	add.f32 	%f31, %f3, %f23;
	add.f32 	%f32, %f4, %f24;
	add.f32 	%f33, %f5, %f25;
	add.f32 	%f34, %f6, %f26;
	add.f32 	%f35, %f7, %f27;
	add.f32 	%f36, %f8, %f28;
	.loc	1 37 4                          // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:37:4
	bar.sync 	0;
	.loc	1 38 46                         // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:38:46
	mov.b32 	%r39, %f29;
	mov.b32 	%r40, %f30;
	mov.b32 	%r41, %f31;
	mov.b32 	%r42, %f32;
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	mov.b32 	%r43, %f33;
	mov.b32 	%r44, %f34;
	mov.b32 	%r45, %f35;
	mov.b32 	%r46, %f36;
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r43, %r44, %r45, %r46 };
	// end inline asm
	.loc	1 38 4                          // cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fg/cfg6lqyokajiq25gtmnzi2v67cergljjqsa4v5dh2d7vlsze5ndt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 103
.b8 54
.b8 108
.b8 113
.b8 121
.b8 111
.b8 107
.b8 97
.b8 106
.b8 105
.b8 113
.b8 50
.b8 53
.b8 103
.b8 116
.b8 109
.b8 110
.b8 122
.b8 105
.b8 50
.b8 118
.b8 54
.b8 55
.b8 99
.b8 101
.b8 114
.b8 103
.b8 108
.b8 106
.b8 106
.b8 113
.b8 115
.b8 97
.b8 52
.b8 118
.b8 53
.b8 100
.b8 104
.b8 50
.b8 100
.b8 55
.b8 118
.b8 108
.b8 115
.b8 122
.b8 101
.b8 53
.b8 110
.b8 100
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
